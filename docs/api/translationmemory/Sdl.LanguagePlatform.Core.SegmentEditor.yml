### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.SegmentEditor
  commentId: T:Sdl.LanguagePlatform.Core.SegmentEditor
  id: SegmentEditor
  parent: Sdl.LanguagePlatform.Core
  children:
  - Sdl.LanguagePlatform.Core.SegmentEditor.#ctor
  - Sdl.LanguagePlatform.Core.SegmentEditor.AppendTokens(Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token})
  - Sdl.LanguagePlatform.Core.SegmentEditor.ChangeTokens(Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Int16,System.Int16)
  - Sdl.LanguagePlatform.Core.SegmentEditor.CleanSegment(Sdl.LanguagePlatform.Core.Segment)
  - Sdl.LanguagePlatform.Core.SegmentEditor.Clone(Sdl.LanguagePlatform.Core.Segment)
  - Sdl.LanguagePlatform.Core.SegmentEditor.DeleteTokens(Sdl.LanguagePlatform.Core.Segment,System.Int16,System.Int16)
  - Sdl.LanguagePlatform.Core.SegmentEditor.InsertTokens(Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Int16)
  - Sdl.LanguagePlatform.Core.SegmentEditor.InsertTokens(Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Int16,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token})
  langs:
  - csharp
  - vb
  name: SegmentEditor
  nameWithType: SegmentEditor
  fullName: Sdl.LanguagePlatform.Core.SegmentEditor
  type: Class
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public class SegmentEditor
    content.vb: Public Class SegmentEditor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.Core.SegmentEditor.CleanSegment(Sdl.LanguagePlatform.Core.Segment)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentEditor.CleanSegment(Sdl.LanguagePlatform.Core.Segment)
  id: CleanSegment(Sdl.LanguagePlatform.Core.Segment)
  parent: Sdl.LanguagePlatform.Core.SegmentEditor
  langs:
  - csharp
  - vb
  name: CleanSegment(Segment)
  nameWithType: SegmentEditor.CleanSegment(Segment)
  fullName: Sdl.LanguagePlatform.Core.SegmentEditor.CleanSegment(Sdl.LanguagePlatform.Core.Segment)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static void CleanSegment(Segment segment)
    parameters:
    - id: segment
      type: Sdl.LanguagePlatform.Core.Segment
    content.vb: Public Shared Sub CleanSegment(segment As Segment)
  overload: Sdl.LanguagePlatform.Core.SegmentEditor.CleanSegment*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.SegmentEditor.ChangeTokens(Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Int16,System.Int16)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentEditor.ChangeTokens(Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Int16,System.Int16)
  id: ChangeTokens(Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Int16,System.Int16)
  parent: Sdl.LanguagePlatform.Core.SegmentEditor
  langs:
  - csharp
  - vb
  name: ChangeTokens(Segment, List<Token>, Int16, Int16)
  nameWithType: SegmentEditor.ChangeTokens(Segment, List<Token>, Int16, Int16)
  fullName: Sdl.LanguagePlatform.Core.SegmentEditor.ChangeTokens(Sdl.LanguagePlatform.Core.Segment, System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Tokenization.Token>, System.Int16, System.Int16)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool ChangeTokens(Segment segment, List<Token> tokens, short startTokenIndex, short length)
    parameters:
    - id: segment
      type: Sdl.LanguagePlatform.Core.Segment
    - id: tokens
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token}
    - id: startTokenIndex
      type: System.Int16
    - id: length
      type: System.Int16
    return:
      type: System.Boolean
    content.vb: Public Shared Function ChangeTokens(segment As Segment, tokens As List(Of Token), startTokenIndex As Short, length As Short) As Boolean
  overload: Sdl.LanguagePlatform.Core.SegmentEditor.ChangeTokens*
  nameWithType.vb: SegmentEditor.ChangeTokens(Segment, List(Of Token), Int16, Int16)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.LanguagePlatform.Core.SegmentEditor.ChangeTokens(Sdl.LanguagePlatform.Core.Segment, System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Tokenization.Token), System.Int16, System.Int16)
  name.vb: ChangeTokens(Segment, List(Of Token), Int16, Int16)
- uid: Sdl.LanguagePlatform.Core.SegmentEditor.DeleteTokens(Sdl.LanguagePlatform.Core.Segment,System.Int16,System.Int16)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentEditor.DeleteTokens(Sdl.LanguagePlatform.Core.Segment,System.Int16,System.Int16)
  id: DeleteTokens(Sdl.LanguagePlatform.Core.Segment,System.Int16,System.Int16)
  parent: Sdl.LanguagePlatform.Core.SegmentEditor
  langs:
  - csharp
  - vb
  name: DeleteTokens(Segment, Int16, Int16)
  nameWithType: SegmentEditor.DeleteTokens(Segment, Int16, Int16)
  fullName: Sdl.LanguagePlatform.Core.SegmentEditor.DeleteTokens(Sdl.LanguagePlatform.Core.Segment, System.Int16, System.Int16)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\n\n"
  syntax:
    content: public static bool DeleteTokens(Segment segment, short startTokenIndex, short length)
    parameters:
    - id: segment
      type: Sdl.LanguagePlatform.Core.Segment
    - id: startTokenIndex
      type: System.Int16
    - id: length
      type: System.Int16
    return:
      type: System.Boolean
    content.vb: Public Shared Function DeleteTokens(segment As Segment, startTokenIndex As Short, length As Short) As Boolean
  overload: Sdl.LanguagePlatform.Core.SegmentEditor.DeleteTokens*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.SegmentEditor.Clone(Sdl.LanguagePlatform.Core.Segment)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentEditor.Clone(Sdl.LanguagePlatform.Core.Segment)
  id: Clone(Sdl.LanguagePlatform.Core.Segment)
  parent: Sdl.LanguagePlatform.Core.SegmentEditor
  langs:
  - csharp
  - vb
  name: Clone(Segment)
  nameWithType: SegmentEditor.Clone(Segment)
  fullName: Sdl.LanguagePlatform.Core.SegmentEditor.Clone(Sdl.LanguagePlatform.Core.Segment)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static Segment Clone(Segment other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.Segment
    return:
      type: Sdl.LanguagePlatform.Core.Segment
    content.vb: Public Shared Function Clone(other As Segment) As Segment
  overload: Sdl.LanguagePlatform.Core.SegmentEditor.Clone*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.SegmentEditor.AppendTokens(Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token})
  commentId: M:Sdl.LanguagePlatform.Core.SegmentEditor.AppendTokens(Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token})
  id: AppendTokens(Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token})
  parent: Sdl.LanguagePlatform.Core.SegmentEditor
  langs:
  - csharp
  - vb
  name: AppendTokens(Segment, List<Token>)
  nameWithType: SegmentEditor.AppendTokens(Segment, List<Token>)
  fullName: Sdl.LanguagePlatform.Core.SegmentEditor.AppendTokens(Sdl.LanguagePlatform.Core.Segment, System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Tokenization.Token>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool AppendTokens(Segment segment, List<Token> tokens)
    parameters:
    - id: segment
      type: Sdl.LanguagePlatform.Core.Segment
    - id: tokens
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token}
    return:
      type: System.Boolean
    content.vb: Public Shared Function AppendTokens(segment As Segment, tokens As List(Of Token)) As Boolean
  overload: Sdl.LanguagePlatform.Core.SegmentEditor.AppendTokens*
  nameWithType.vb: SegmentEditor.AppendTokens(Segment, List(Of Token))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.LanguagePlatform.Core.SegmentEditor.AppendTokens(Sdl.LanguagePlatform.Core.Segment, System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Tokenization.Token))
  name.vb: AppendTokens(Segment, List(Of Token))
- uid: Sdl.LanguagePlatform.Core.SegmentEditor.InsertTokens(Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Int16)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentEditor.InsertTokens(Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Int16)
  id: InsertTokens(Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Int16)
  parent: Sdl.LanguagePlatform.Core.SegmentEditor
  langs:
  - csharp
  - vb
  name: InsertTokens(Segment, List<Token>, Int16)
  nameWithType: SegmentEditor.InsertTokens(Segment, List<Token>, Int16)
  fullName: Sdl.LanguagePlatform.Core.SegmentEditor.InsertTokens(Sdl.LanguagePlatform.Core.Segment, System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Tokenization.Token>, System.Int16)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool InsertTokens(Segment segment, List<Token> tokens, short startTokenIndex)
    parameters:
    - id: segment
      type: Sdl.LanguagePlatform.Core.Segment
    - id: tokens
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token}
    - id: startTokenIndex
      type: System.Int16
    return:
      type: System.Boolean
    content.vb: Public Shared Function InsertTokens(segment As Segment, tokens As List(Of Token), startTokenIndex As Short) As Boolean
  overload: Sdl.LanguagePlatform.Core.SegmentEditor.InsertTokens*
  nameWithType.vb: SegmentEditor.InsertTokens(Segment, List(Of Token), Int16)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.LanguagePlatform.Core.SegmentEditor.InsertTokens(Sdl.LanguagePlatform.Core.Segment, System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Tokenization.Token), System.Int16)
  name.vb: InsertTokens(Segment, List(Of Token), Int16)
- uid: Sdl.LanguagePlatform.Core.SegmentEditor.InsertTokens(Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Int16,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token})
  commentId: M:Sdl.LanguagePlatform.Core.SegmentEditor.InsertTokens(Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Int16,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token})
  id: InsertTokens(Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Int16,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token})
  parent: Sdl.LanguagePlatform.Core.SegmentEditor
  langs:
  - csharp
  - vb
  name: InsertTokens(Segment, List<Token>, Int16, List<Token>)
  nameWithType: SegmentEditor.InsertTokens(Segment, List<Token>, Int16, List<Token>)
  fullName: Sdl.LanguagePlatform.Core.SegmentEditor.InsertTokens(Sdl.LanguagePlatform.Core.Segment, System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Tokenization.Token>, System.Int16, System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Tokenization.Token>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool InsertTokens(Segment segment, List<Token> tokens, short startTokenIndex, List<Token> tokensInserted)
    parameters:
    - id: segment
      type: Sdl.LanguagePlatform.Core.Segment
    - id: tokens
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token}
    - id: startTokenIndex
      type: System.Int16
    - id: tokensInserted
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token}
    return:
      type: System.Boolean
    content.vb: Public Shared Function InsertTokens(segment As Segment, tokens As List(Of Token), startTokenIndex As Short, tokensInserted As List(Of Token)) As Boolean
  overload: Sdl.LanguagePlatform.Core.SegmentEditor.InsertTokens*
  nameWithType.vb: SegmentEditor.InsertTokens(Segment, List(Of Token), Int16, List(Of Token))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.LanguagePlatform.Core.SegmentEditor.InsertTokens(Sdl.LanguagePlatform.Core.Segment, System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Tokenization.Token), System.Int16, System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Tokenization.Token))
  name.vb: InsertTokens(Segment, List(Of Token), Int16, List(Of Token))
- uid: Sdl.LanguagePlatform.Core.SegmentEditor.#ctor
  commentId: M:Sdl.LanguagePlatform.Core.SegmentEditor.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.Core.SegmentEditor
  langs:
  - csharp
  - vb
  name: SegmentEditor()
  nameWithType: SegmentEditor.SegmentEditor()
  fullName: Sdl.LanguagePlatform.Core.SegmentEditor.SegmentEditor()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public SegmentEditor()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.Core.SegmentEditor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core.SegmentEditor.CleanSegment*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentEditor.CleanSegment
  isExternal: true
  name: CleanSegment
  nameWithType: SegmentEditor.CleanSegment
  fullName: Sdl.LanguagePlatform.Core.SegmentEditor.CleanSegment
- uid: Sdl.LanguagePlatform.Core.Segment
  commentId: T:Sdl.LanguagePlatform.Core.Segment
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: Segment
  nameWithType: Segment
  fullName: Sdl.LanguagePlatform.Core.Segment
- uid: Sdl.LanguagePlatform.Core.SegmentEditor.ChangeTokens*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentEditor.ChangeTokens
  isExternal: true
  name: ChangeTokens
  nameWithType: SegmentEditor.ChangeTokens
  fullName: Sdl.LanguagePlatform.Core.SegmentEditor.ChangeTokens
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Token>
  nameWithType: List<Token>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Tokenization.Token>
  nameWithType.vb: List(Of Token)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Tokenization.Token)
  name.vb: List(Of Token)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token
    name: Token
    nameWithType: Token
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token
    name: Token
    nameWithType: Token
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.LanguagePlatform.Core.SegmentEditor.DeleteTokens*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentEditor.DeleteTokens
  isExternal: true
  name: DeleteTokens
  nameWithType: SegmentEditor.DeleteTokens
  fullName: Sdl.LanguagePlatform.Core.SegmentEditor.DeleteTokens
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Sdl.LanguagePlatform.Core.SegmentEditor.Clone*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentEditor.Clone
  isExternal: true
  name: Clone
  nameWithType: SegmentEditor.Clone
  fullName: Sdl.LanguagePlatform.Core.SegmentEditor.Clone
- uid: Sdl.LanguagePlatform.Core.SegmentEditor.AppendTokens*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentEditor.AppendTokens
  isExternal: true
  name: AppendTokens
  nameWithType: SegmentEditor.AppendTokens
  fullName: Sdl.LanguagePlatform.Core.SegmentEditor.AppendTokens
- uid: Sdl.LanguagePlatform.Core.SegmentEditor.InsertTokens*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentEditor.InsertTokens
  isExternal: true
  name: InsertTokens
  nameWithType: SegmentEditor.InsertTokens
  fullName: Sdl.LanguagePlatform.Core.SegmentEditor.InsertTokens
- uid: Sdl.LanguagePlatform.Core.SegmentEditor.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentEditor.#ctor
  isExternal: true
  name: SegmentEditor
  nameWithType: SegmentEditor.SegmentEditor
  fullName: Sdl.LanguagePlatform.Core.SegmentEditor.SegmentEditor
