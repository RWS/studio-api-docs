### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition
  id: CustomUnitDefinition
  parent: Sdl.LanguagePlatform.Core.Tokenization
  children:
  - Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.#ctor
  - Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.CategoryName
  - Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Clone
  - Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Unit
  langs:
  - csharp
  - vb
  name: CustomUnitDefinition
  nameWithType: CustomUnitDefinition
  fullName: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition
  type: Class
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nProvides additional metadata for a custom unit when creating a recognizer for <xref href=\"Sdl.LanguagePlatform.Core.Tokenization.TokenType.Measurement\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: 'public class CustomUnitDefinition : ICloneable'
    content.vb: >-
      Public Class CustomUnitDefinition
          Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Clone
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Clone
  id: Clone
  parent: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: CustomUnitDefinition.Clone()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Clone()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\n<xref href=\"System.ICloneable.Clone\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public object Clone()
    return:
      type: System.Object
      description: A new object that is a deep copy of this instance.
    content.vb: Public Function Clone As Object
  overload: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.#ctor
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition
  langs:
  - csharp
  - vb
  name: CustomUnitDefinition()
  nameWithType: CustomUnitDefinition.CustomUnitDefinition()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.CustomUnitDefinition()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public CustomUnitDefinition()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Unit
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Unit
  id: Unit
  parent: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition
  langs:
  - csharp
  - vb
  name: Unit
  nameWithType: CustomUnitDefinition.Unit
  fullName: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Unit
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nIf not Unit.NoUnit, the built=in <xref href=\"Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Unit\" data-throw-if-not-resolved=\"false\"></xref> for which this <xref href=\"Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition\" data-throw-if-not-resolved=\"false\"></xref> provides \na language-specific string name (<xref href=\"Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.CategoryName\" data-throw-if-not-resolved=\"false\"></xref> should be null)\n"
  syntax:
    content: public Unit Unit { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.Unit
    content.vb: Public Property Unit As Unit
  overload: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Unit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.CategoryName
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.CategoryName
  id: CategoryName
  parent: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition
  langs:
  - csharp
  - vb
  name: CategoryName
  nameWithType: CustomUnitDefinition.CategoryName
  fullName: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.CategoryName
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nIf not null, the name of a category used to indicate when unit names differing between languages nevertheless refer to \nthe same kind of quantity, where this is not already specified by built-in <xref href=\"Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnit\" data-throw-if-not-resolved=\"false\"></xref> descriptions\n(<xref href=\"Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Unit\" data-throw-if-not-resolved=\"false\"></xref> should be NoUnit)\n"
  syntax:
    content: public string CategoryName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CategoryName As String
  overload: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.CategoryName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.Core.Tokenization
  commentId: N:Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Sdl.LanguagePlatform.Core.Tokenization
  nameWithType: Sdl.LanguagePlatform.Core.Tokenization
  fullName: Sdl.LanguagePlatform.Core.Tokenization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Clone*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Clone
  isExternal: true
  name: Clone
  nameWithType: CustomUnitDefinition.Clone
  fullName: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.#ctor
  isExternal: true
  name: CustomUnitDefinition
  nameWithType: CustomUnitDefinition.CustomUnitDefinition
  fullName: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.CustomUnitDefinition
- uid: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Unit*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Unit
  isExternal: true
  name: Unit
  nameWithType: CustomUnitDefinition.Unit
  fullName: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.Unit
- uid: Sdl.LanguagePlatform.Core.Tokenization.Unit
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.Unit
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Unit
  nameWithType: Unit
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Unit
- uid: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.CategoryName*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.CategoryName
  isExternal: true
  name: CategoryName
  nameWithType: CustomUnitDefinition.CategoryName
  fullName: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition.CategoryName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
