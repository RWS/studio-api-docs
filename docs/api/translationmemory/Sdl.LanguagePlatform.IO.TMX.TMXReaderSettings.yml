### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings
  commentId: T:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings
  id: TMXReaderSettings
  parent: Sdl.LanguagePlatform.IO.TMX
  children:
  - Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.#ctor
  - Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.#ctor(Sdl.LanguagePlatform.IO.Streams.TUStreamContext)
  - Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.#ctor(Sdl.LanguagePlatform.IO.Streams.TUStreamContext,System.Boolean,System.Boolean,System.Boolean)
  - Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.CleanupMode
  - Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.Context
  - Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.FieldIdentifierMappings
  - Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.PlainText
  - Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.ResolveNeutralCultures
  - Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.SkipUnknownCultures
  - Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.ValidateAgainstSchema
  langs:
  - csharp
  - vb
  name: TMXReaderSettings
  nameWithType: TMXReaderSettings
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings
  type: Class
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  syntax:
    content: public class TMXReaderSettings
    content.vb: Public Class TMXReaderSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.#ctor
  commentId: M:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings
  langs:
  - csharp
  - vb
  name: TMXReaderSettings()
  nameWithType: TMXReaderSettings.TMXReaderSettings()
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.TMXReaderSettings()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  syntax:
    content: public TMXReaderSettings()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.#ctor(Sdl.LanguagePlatform.IO.Streams.TUStreamContext)
  commentId: M:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.#ctor(Sdl.LanguagePlatform.IO.Streams.TUStreamContext)
  id: '#ctor(Sdl.LanguagePlatform.IO.Streams.TUStreamContext)'
  parent: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings
  langs:
  - csharp
  - vb
  name: TMXReaderSettings(TUStreamContext)
  nameWithType: TMXReaderSettings.TMXReaderSettings(TUStreamContext)
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.TMXReaderSettings(Sdl.LanguagePlatform.IO.Streams.TUStreamContext)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  syntax:
    content: public TMXReaderSettings(TUStreamContext context)
    parameters:
    - id: context
      type: Sdl.LanguagePlatform.IO.Streams.TUStreamContext
    content.vb: Public Sub New(context As TUStreamContext)
  overload: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.#ctor(Sdl.LanguagePlatform.IO.Streams.TUStreamContext,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.#ctor(Sdl.LanguagePlatform.IO.Streams.TUStreamContext,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(Sdl.LanguagePlatform.IO.Streams.TUStreamContext,System.Boolean,System.Boolean,System.Boolean)'
  parent: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings
  langs:
  - csharp
  - vb
  name: TMXReaderSettings(TUStreamContext, Boolean, Boolean, Boolean)
  nameWithType: TMXReaderSettings.TMXReaderSettings(TUStreamContext, Boolean, Boolean, Boolean)
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.TMXReaderSettings(Sdl.LanguagePlatform.IO.Streams.TUStreamContext, System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  syntax:
    content: public TMXReaderSettings(TUStreamContext context, bool validateAgainstSchema, bool resolveNeutralCultures, bool plainText)
    parameters:
    - id: context
      type: Sdl.LanguagePlatform.IO.Streams.TUStreamContext
    - id: validateAgainstSchema
      type: System.Boolean
    - id: resolveNeutralCultures
      type: System.Boolean
    - id: plainText
      type: System.Boolean
    content.vb: Public Sub New(context As TUStreamContext, validateAgainstSchema As Boolean, resolveNeutralCultures As Boolean, plainText As Boolean)
  overload: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.ValidateAgainstSchema
  commentId: P:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.ValidateAgainstSchema
  id: ValidateAgainstSchema
  parent: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings
  langs:
  - csharp
  - vb
  name: ValidateAgainstSchema
  nameWithType: TMXReaderSettings.ValidateAgainstSchema
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.ValidateAgainstSchema
  type: Property
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  summary: "\nControls whether the input will be verified against the TMX 1.4b schema. If false, \nthe TMX input version number is ignored and no schema verification takes place.\n"
  syntax:
    content: public bool ValidateAgainstSchema { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ValidateAgainstSchema As Boolean
  overload: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.ValidateAgainstSchema*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.Context
  commentId: P:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.Context
  id: Context
  parent: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: TMXReaderSettings.Context
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.Context
  type: Property
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  summary: "\nThe input stream context which is a container for new fields and values.\n"
  syntax:
    content: public TUStreamContext Context { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.IO.Streams.TUStreamContext
    content.vb: Public ReadOnly Property Context As TUStreamContext
  overload: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.Context*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.ResolveNeutralCultures
  commentId: P:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.ResolveNeutralCultures
  id: ResolveNeutralCultures
  parent: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings
  langs:
  - csharp
  - vb
  name: ResolveNeutralCultures
  nameWithType: TMXReaderSettings.ResolveNeutralCultures
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.ResolveNeutralCultures
  type: Property
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  summary: "\nControls whether or not region-neutral cultures (&quot;en&quot;) are resolved to their default region-specific\nculture (&quot;en-US&quot;)\n"
  syntax:
    content: public bool ResolveNeutralCultures { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ResolveNeutralCultures As Boolean
  overload: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.ResolveNeutralCultures*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.SkipUnknownCultures
  commentId: P:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.SkipUnknownCultures
  id: SkipUnknownCultures
  parent: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings
  langs:
  - csharp
  - vb
  name: SkipUnknownCultures
  nameWithType: TMXReaderSettings.SkipUnknownCultures
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.SkipUnknownCultures
  type: Property
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  summary: "\nControls whether unknown cultures are skipped during TMX processing, or whether unknown \ncultures will raise an exception (default).\n"
  syntax:
    content: public bool SkipUnknownCultures { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SkipUnknownCultures As Boolean
  overload: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.SkipUnknownCultures*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.PlainText
  commentId: P:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.PlainText
  id: PlainText
  parent: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings
  langs:
  - csharp
  - vb
  name: PlainText
  nameWithType: TMXReaderSettings.PlainText
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.PlainText
  type: Property
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  summary: "\nGets or sets a value indicating whether only plain text should be imported.\n<remarks>If true, all the tags are ignored, if false, the content is imported without changes.</remarks>\n"
  syntax:
    content: public bool PlainText { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PlainText As Boolean
  overload: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.PlainText*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.CleanupMode
  commentId: P:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.CleanupMode
  id: CleanupMode
  parent: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings
  langs:
  - csharp
  - vb
  name: CleanupMode
  nameWithType: TMXReaderSettings.CleanupMode
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.CleanupMode
  type: Property
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  syntax:
    content: public ImportSettings.ImportTUProcessingMode CleanupMode { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ImportTUProcessingMode
    content.vb: Public Property CleanupMode As ImportSettings.ImportTUProcessingMode
  overload: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.CleanupMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.FieldIdentifierMappings
  commentId: P:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.FieldIdentifierMappings
  id: FieldIdentifierMappings
  parent: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings
  langs:
  - csharp
  - vb
  name: FieldIdentifierMappings
  nameWithType: TMXReaderSettings.FieldIdentifierMappings
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.FieldIdentifierMappings
  type: Property
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  summary: "\nGets or sets the field identifier mappings; old field identifier, new field identifier.\nField identifier mapping immediately maps the field identifier read to another field identifier.\n"
  syntax:
    content: public IDictionary<FieldIdentifier, FieldIdentifier> FieldIdentifierMappings { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier,Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier}
    content.vb: Public Property FieldIdentifierMappings As IDictionary(Of FieldIdentifier, FieldIdentifier)
  overload: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.FieldIdentifierMappings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.IO.TMX
  commentId: N:Sdl.LanguagePlatform.IO.TMX
  isExternal: true
  name: Sdl.LanguagePlatform.IO.TMX
  nameWithType: Sdl.LanguagePlatform.IO.TMX
  fullName: Sdl.LanguagePlatform.IO.TMX
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.#ctor
  isExternal: true
  name: TMXReaderSettings
  nameWithType: TMXReaderSettings.TMXReaderSettings
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.TMXReaderSettings
- uid: Sdl.LanguagePlatform.IO.Streams.TUStreamContext
  commentId: T:Sdl.LanguagePlatform.IO.Streams.TUStreamContext
  parent: Sdl.LanguagePlatform.IO.Streams
  isExternal: true
  name: TUStreamContext
  nameWithType: TUStreamContext
  fullName: Sdl.LanguagePlatform.IO.Streams.TUStreamContext
- uid: Sdl.LanguagePlatform.IO.Streams
  commentId: N:Sdl.LanguagePlatform.IO.Streams
  isExternal: true
  name: Sdl.LanguagePlatform.IO.Streams
  nameWithType: Sdl.LanguagePlatform.IO.Streams
  fullName: Sdl.LanguagePlatform.IO.Streams
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.ValidateAgainstSchema*
  commentId: Overload:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.ValidateAgainstSchema
  isExternal: true
  name: ValidateAgainstSchema
  nameWithType: TMXReaderSettings.ValidateAgainstSchema
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.ValidateAgainstSchema
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.Context*
  commentId: Overload:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.Context
  isExternal: true
  name: Context
  nameWithType: TMXReaderSettings.Context
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.Context
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.ResolveNeutralCultures*
  commentId: Overload:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.ResolveNeutralCultures
  isExternal: true
  name: ResolveNeutralCultures
  nameWithType: TMXReaderSettings.ResolveNeutralCultures
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.ResolveNeutralCultures
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.SkipUnknownCultures*
  commentId: Overload:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.SkipUnknownCultures
  isExternal: true
  name: SkipUnknownCultures
  nameWithType: TMXReaderSettings.SkipUnknownCultures
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.SkipUnknownCultures
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.PlainText*
  commentId: Overload:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.PlainText
  isExternal: true
  name: PlainText
  nameWithType: TMXReaderSettings.PlainText
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.PlainText
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.CleanupMode*
  commentId: Overload:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.CleanupMode
  isExternal: true
  name: CleanupMode
  nameWithType: TMXReaderSettings.CleanupMode
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.CleanupMode
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ImportTUProcessingMode
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ImportTUProcessingMode
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: ImportSettings.ImportTUProcessingMode
  nameWithType: ImportSettings.ImportTUProcessingMode
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ImportTUProcessingMode
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.FieldIdentifierMappings*
  commentId: Overload:Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.FieldIdentifierMappings
  isExternal: true
  name: FieldIdentifierMappings
  nameWithType: TMXReaderSettings.FieldIdentifierMappings
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXReaderSettings.FieldIdentifierMappings
- uid: System.Collections.Generic.IDictionary{Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier,Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier}
  commentId: T:System.Collections.Generic.IDictionary{Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier,Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<FieldIdentifier, FieldIdentifier>
  nameWithType: IDictionary<FieldIdentifier, FieldIdentifier>
  fullName: System.Collections.Generic.IDictionary<Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier, Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier>
  nameWithType.vb: IDictionary(Of FieldIdentifier, FieldIdentifier)
  fullName.vb: System.Collections.Generic.IDictionary(Of Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier, Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier)
  name.vb: IDictionary(Of FieldIdentifier, FieldIdentifier)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier
    name: FieldIdentifier
    nameWithType: FieldIdentifier
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier
    name: FieldIdentifier
    nameWithType: FieldIdentifier
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier
    name: FieldIdentifier
    nameWithType: FieldIdentifier
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier
    name: FieldIdentifier
    nameWithType: FieldIdentifier
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
