### YamlMime:ManagedReference
items:
- uid: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob
  commentId: T:Sdl.Desktop.IntegrationApi.Jobs.IExternalJob
  id: IExternalJob
  parent: Sdl.Desktop.IntegrationApi.Jobs
  children:
  - Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.Execute
  - Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobCanceled(System.Object,System.EventArgs)
  - Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobData
  - Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobName
  langs:
  - csharp
  - vb
  name: IExternalJob
  nameWithType: IExternalJob
  fullName: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob
  type: Interface
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Jobs
  summary: "\nInterface to define a relay job\n"
  syntax:
    content: public interface IExternalJob
    content.vb: Public Interface IExternalJob
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobCanceled(System.Object,System.EventArgs)
  commentId: M:Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobCanceled(System.Object,System.EventArgs)
  id: JobCanceled(System.Object,System.EventArgs)
  parent: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob
  langs:
  - csharp
  - vb
  name: JobCanceled(Object, EventArgs)
  nameWithType: IExternalJob.JobCanceled(Object, EventArgs)
  fullName: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobCanceled(System.Object, System.EventArgs)
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Jobs
  summary: "\nCan handle job canceling from studio\n"
  syntax:
    content: void JobCanceled(object sender, EventArgs e)
    parameters:
    - id: sender
      type: System.Object
    - id: e
      type: System.EventArgs
    content.vb: Sub JobCanceled(sender As Object, e As EventArgs)
  overload: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobCanceled*
- uid: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.Execute
  commentId: M:Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.Execute
  id: Execute
  parent: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: IExternalJob.Execute()
  fullName: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.Execute()
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Jobs
  summary: "\nTriggers the job execution\n"
  syntax:
    content: void Execute()
    content.vb: Sub Execute
  overload: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.Execute*
- uid: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobName
  commentId: P:Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobName
  id: JobName
  parent: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob
  langs:
  - csharp
  - vb
  name: JobName
  nameWithType: IExternalJob.JobName
  fullName: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobName
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Jobs
  summary: "\nName of the job\n"
  syntax:
    content: string JobName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property JobName As String
  overload: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobData
  commentId: P:Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobData
  id: JobData
  parent: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob
  langs:
  - csharp
  - vb
  name: JobData
  nameWithType: IExternalJob.JobData
  fullName: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobData
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Jobs
  summary: "\nCustom data specific to the job\n"
  syntax:
    content: object JobData { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Property JobData As Object
  overload: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobData*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.Desktop.IntegrationApi.Jobs
  commentId: N:Sdl.Desktop.IntegrationApi.Jobs
  isExternal: true
  name: Sdl.Desktop.IntegrationApi.Jobs
  nameWithType: Sdl.Desktop.IntegrationApi.Jobs
  fullName: Sdl.Desktop.IntegrationApi.Jobs
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobCanceled*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobCanceled
  isExternal: true
  name: JobCanceled
  nameWithType: IExternalJob.JobCanceled
  fullName: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobCanceled
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.Execute*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.Execute
  isExternal: true
  name: Execute
  nameWithType: IExternalJob.Execute
  fullName: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.Execute
- uid: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobName*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobName
  isExternal: true
  name: JobName
  nameWithType: IExternalJob.JobName
  fullName: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobData*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobData
  isExternal: true
  name: JobData
  nameWithType: IExternalJob.JobData
  fullName: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob.JobData
