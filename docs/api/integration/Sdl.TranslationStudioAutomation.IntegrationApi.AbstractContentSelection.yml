### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection
  id: AbstractContentSelection
  parent: Sdl.TranslationStudioAutomation.IntegrationApi
  children:
  - Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.Changed
  - Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.Collapse(System.Boolean)
  - Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.From
  - Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsEmpty
  - Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsReversed
  - Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsValid
  - Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.ToString
  - Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.UpTo
  langs:
  - csharp
  - vb
  name: AbstractContentSelection
  nameWithType: AbstractContentSelection
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection
  type: Class
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nBase class for content selection\n"
  syntax:
    content: public abstract class AbstractContentSelection
    content.vb: Public MustInherit Class AbstractContentSelection
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.TranslationStudioAutomation.IntegrationApi.SourceSelection
  - Sdl.TranslationStudioAutomation.IntegrationApi.TargetSelection
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.ToString
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.ToString
  id: ToString
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AbstractContentSelection.ToString()
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.ToString()
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nReturns a string that represents the current selection\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current selection
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.Collapse(System.Boolean)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.Collapse(System.Boolean)
  id: Collapse(System.Boolean)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection
  langs:
  - csharp
  - vb
  name: Collapse(Boolean)
  nameWithType: AbstractContentSelection.Collapse(Boolean)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.Collapse(System.Boolean)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nCollapse the selection.\n"
  syntax:
    content: public virtual void Collapse(bool toEnd = true)
    parameters:
    - id: toEnd
      type: System.Boolean
      description: "\n<p>True to collapse the selection to the end.</p>\n<p>False to collapse the selection to the start.</p>\n"
    content.vb: Public Overridable Sub Collapse(toEnd As Boolean = True)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.Collapse*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsEmpty
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsEmpty
  id: IsEmpty
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: AbstractContentSelection.IsEmpty
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsEmpty
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nTrue if the selection is empty.\n"
  syntax:
    content: public virtual bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsEmpty As Boolean
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsEmpty*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsValid
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsValid
  id: IsValid
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: AbstractContentSelection.IsValid
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsValid
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nTests whether the current selection is valid. \nThe selection is valid when both from and upto positions are valid, otherwise it is not valid. \nThis is useful for testing whether the selection has been initialized properly yet, or is visible on the screen.\n"
  syntax:
    content: public virtual bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsValid As Boolean
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsValid*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsReversed
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsReversed
  id: IsReversed
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection
  langs:
  - csharp
  - vb
  name: IsReversed
  nameWithType: AbstractContentSelection.IsReversed
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsReversed
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nTrue if the selection is reversed\n"
  syntax:
    content: public virtual bool IsReversed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsReversed As Boolean
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsReversed*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.From
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.From
  id: From
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection
  langs:
  - csharp
  - vb
  name: From
  nameWithType: AbstractContentSelection.From
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.From
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nDetails on the From position of the current selection. \nCan be null if there is no row at that position (either because it is invalid or the layout has not be fully generated yet).\n"
  syntax:
    content: public ContentSelectionInfo From { get; }
    parameters: []
    return:
      type: Sdl.TranslationStudioAutomation.IntegrationApi.ContentSelectionInfo
    content.vb: Public ReadOnly Property From As ContentSelectionInfo
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.From*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.UpTo
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.UpTo
  id: UpTo
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection
  langs:
  - csharp
  - vb
  name: UpTo
  nameWithType: AbstractContentSelection.UpTo
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.UpTo
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nDetails on the UpTo position of the current selection. \nCan be null if there is no row at that position (either because it is invalid or the layout has not be fully generated yet).\n"
  syntax:
    content: public ContentSelectionInfo UpTo { get; }
    parameters: []
    return:
      type: Sdl.TranslationStudioAutomation.IntegrationApi.ContentSelectionInfo
    content.vb: Public ReadOnly Property UpTo As ContentSelectionInfo
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.UpTo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.Changed
  commentId: E:Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.Changed
  id: Changed
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection
  langs:
  - csharp
  - vb
  name: Changed
  nameWithType: AbstractContentSelection.Changed
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.Changed
  type: Event
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nTriggered when the document selection has changed.\n"
  syntax:
    content: public event EventHandler Changed
    return:
      type: System.EventHandler
    content.vb: Public Event Changed As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi
  commentId: N:Sdl.TranslationStudioAutomation.IntegrationApi
  isExternal: true
  name: Sdl.TranslationStudioAutomation.IntegrationApi
  nameWithType: Sdl.TranslationStudioAutomation.IntegrationApi
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.ToString*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.ToString
  isExternal: true
  name: ToString
  nameWithType: AbstractContentSelection.ToString
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.Collapse*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.Collapse
  isExternal: true
  name: Collapse
  nameWithType: AbstractContentSelection.Collapse
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.Collapse
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsEmpty*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsEmpty
  isExternal: true
  name: IsEmpty
  nameWithType: AbstractContentSelection.IsEmpty
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsEmpty
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsValid*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsValid
  isExternal: true
  name: IsValid
  nameWithType: AbstractContentSelection.IsValid
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsValid
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsReversed*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsReversed
  isExternal: true
  name: IsReversed
  nameWithType: AbstractContentSelection.IsReversed
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.IsReversed
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.From*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.From
  isExternal: true
  name: From
  nameWithType: AbstractContentSelection.From
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.From
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.ContentSelectionInfo
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.ContentSelectionInfo
  parent: Sdl.TranslationStudioAutomation.IntegrationApi
  isExternal: true
  name: ContentSelectionInfo
  nameWithType: ContentSelectionInfo
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.ContentSelectionInfo
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.UpTo*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.UpTo
  isExternal: true
  name: UpTo
  nameWithType: AbstractContentSelection.UpTo
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.AbstractContentSelection.UpTo
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
