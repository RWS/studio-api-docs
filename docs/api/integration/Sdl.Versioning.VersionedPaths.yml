### YamlMime:ManagedReference
items:
- uid: Sdl.Versioning.VersionedPaths
  commentId: T:Sdl.Versioning.VersionedPaths
  id: VersionedPaths
  parent: Sdl.Versioning
  children:
  - Sdl.Versioning.VersionedPaths.CompanyAppDataPath
  - Sdl.Versioning.VersionedPaths.LocalUserAppDataPath
  - Sdl.Versioning.VersionedPaths.ProgramDataPath
  - Sdl.Versioning.VersionedPaths.RetailProgramDataPath
  - Sdl.Versioning.VersionedPaths.UnversionedUserAppDataPath
  - Sdl.Versioning.VersionedPaths.UserAppDataPath
  - Sdl.Versioning.VersionedPaths.UserAppDataRegistry
  langs:
  - csharp
  - vb
  name: VersionedPaths
  nameWithType: VersionedPaths
  fullName: Sdl.Versioning.VersionedPaths
  type: Class
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nHelper class with common settings locations.\n"
  syntax:
    content: public static class VersionedPaths
    content.vb: Public Module VersionedPaths
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sdl.Versioning.VersionedPaths.UserAppDataPath
  commentId: P:Sdl.Versioning.VersionedPaths.UserAppDataPath
  id: UserAppDataPath
  parent: Sdl.Versioning.VersionedPaths
  langs:
  - csharp
  - vb
  name: UserAppDataPath
  nameWithType: VersionedPaths.UserAppDataPath
  fullName: Sdl.Versioning.VersionedPaths.UserAppDataPath
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nReturns the path to store settings in a roaming user folder.\ne.g.\nC:\\Users\\*username*\\AppData\\Roaming\\SDL\\SDL Trados Studio\\Studio16Beta\n"
  syntax:
    content: public static string UserAppDataPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property UserAppDataPath As String
  overload: Sdl.Versioning.VersionedPaths.UserAppDataPath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.Versioning.VersionedPaths.LocalUserAppDataPath
  commentId: P:Sdl.Versioning.VersionedPaths.LocalUserAppDataPath
  id: LocalUserAppDataPath
  parent: Sdl.Versioning.VersionedPaths
  langs:
  - csharp
  - vb
  name: LocalUserAppDataPath
  nameWithType: VersionedPaths.LocalUserAppDataPath
  fullName: Sdl.Versioning.VersionedPaths.LocalUserAppDataPath
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nReturns the path to store settings in a non roaming user folder.\ne.g.\nC:\\Users\\*username*\\AppData\\Local\\SDL\\SDL Trados Studio\\Studio16Beta\n"
  syntax:
    content: public static string LocalUserAppDataPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property LocalUserAppDataPath As String
  overload: Sdl.Versioning.VersionedPaths.LocalUserAppDataPath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.Versioning.VersionedPaths.UnversionedUserAppDataPath
  commentId: P:Sdl.Versioning.VersionedPaths.UnversionedUserAppDataPath
  id: UnversionedUserAppDataPath
  parent: Sdl.Versioning.VersionedPaths
  langs:
  - csharp
  - vb
  name: UnversionedUserAppDataPath
  nameWithType: VersionedPaths.UnversionedUserAppDataPath
  fullName: Sdl.Versioning.VersionedPaths.UnversionedUserAppDataPath
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nReturns the unversioned path to store settings in a roaming user folder. Settings shared between versions can be stored here.\ne.g.\nC:\\Users\\*username*\\AppData\\Roaming\\SDL\\SDL Trados Studio\n"
  syntax:
    content: public static string UnversionedUserAppDataPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property UnversionedUserAppDataPath As String
  overload: Sdl.Versioning.VersionedPaths.UnversionedUserAppDataPath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.Versioning.VersionedPaths.CompanyAppDataPath
  commentId: P:Sdl.Versioning.VersionedPaths.CompanyAppDataPath
  id: CompanyAppDataPath
  parent: Sdl.Versioning.VersionedPaths
  langs:
  - csharp
  - vb
  name: CompanyAppDataPath
  nameWithType: VersionedPaths.CompanyAppDataPath
  fullName: Sdl.Versioning.VersionedPaths.CompanyAppDataPath
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nReturns the company path to store settings in a roaming user folder. Settings shared between all company applications.\ne.g.\nC:\\Users\\*username*\\AppData\\Roaming\\SDL\n"
  syntax:
    content: public static string CompanyAppDataPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property CompanyAppDataPath As String
  overload: Sdl.Versioning.VersionedPaths.CompanyAppDataPath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.Versioning.VersionedPaths.RetailProgramDataPath
  commentId: P:Sdl.Versioning.VersionedPaths.RetailProgramDataPath
  id: RetailProgramDataPath
  parent: Sdl.Versioning.VersionedPaths
  langs:
  - csharp
  - vb
  name: RetailProgramDataPath
  nameWithType: VersionedPaths.RetailProgramDataPath
  fullName: Sdl.Versioning.VersionedPaths.RetailProgramDataPath
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nReturns the path to store settings in a per machine folder that is fixed per edition\ne.g.\nC:\\ProgramData\\SDL\\SDL Trados Studio\\Studio16 (never beta etc)\n"
  syntax:
    content: public static string RetailProgramDataPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property RetailProgramDataPath As String
  overload: Sdl.Versioning.VersionedPaths.RetailProgramDataPath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.Versioning.VersionedPaths.ProgramDataPath
  commentId: P:Sdl.Versioning.VersionedPaths.ProgramDataPath
  id: ProgramDataPath
  parent: Sdl.Versioning.VersionedPaths
  langs:
  - csharp
  - vb
  name: ProgramDataPath
  nameWithType: VersionedPaths.ProgramDataPath
  fullName: Sdl.Versioning.VersionedPaths.ProgramDataPath
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nReturns the path to store settings in a per machine folder.\ne.g.\nC:\\ProgramData\\SDL\\SDL Trados Studio\\Studio16Beta\n"
  syntax:
    content: public static string ProgramDataPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property ProgramDataPath As String
  overload: Sdl.Versioning.VersionedPaths.ProgramDataPath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.Versioning.VersionedPaths.UserAppDataRegistry
  commentId: P:Sdl.Versioning.VersionedPaths.UserAppDataRegistry
  id: UserAppDataRegistry
  parent: Sdl.Versioning.VersionedPaths
  langs:
  - csharp
  - vb
  name: UserAppDataRegistry
  nameWithType: VersionedPaths.UserAppDataRegistry
  fullName: Sdl.Versioning.VersionedPaths.UserAppDataRegistry
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nReturns a Microsoft.Win32.RegistryKey in which to store per user settings\ne.g.\nHKEY_CURRENT_USER\\SOFTWARE\\SDL\\SDL Trados Studio\\Studio16Beta\n"
  syntax:
    content: public static RegistryKey UserAppDataRegistry { get; }
    parameters: []
    return:
      type: Microsoft.Win32.RegistryKey
    content.vb: Public Shared ReadOnly Property UserAppDataRegistry As RegistryKey
  overload: Sdl.Versioning.VersionedPaths.UserAppDataRegistry*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Sdl.Versioning
  commentId: N:Sdl.Versioning
  isExternal: true
  name: Sdl.Versioning
  nameWithType: Sdl.Versioning
  fullName: Sdl.Versioning
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Versioning.VersionedPaths.UserAppDataPath*
  commentId: Overload:Sdl.Versioning.VersionedPaths.UserAppDataPath
  isExternal: true
  name: UserAppDataPath
  nameWithType: VersionedPaths.UserAppDataPath
  fullName: Sdl.Versioning.VersionedPaths.UserAppDataPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Versioning.VersionedPaths.LocalUserAppDataPath*
  commentId: Overload:Sdl.Versioning.VersionedPaths.LocalUserAppDataPath
  isExternal: true
  name: LocalUserAppDataPath
  nameWithType: VersionedPaths.LocalUserAppDataPath
  fullName: Sdl.Versioning.VersionedPaths.LocalUserAppDataPath
- uid: Sdl.Versioning.VersionedPaths.UnversionedUserAppDataPath*
  commentId: Overload:Sdl.Versioning.VersionedPaths.UnversionedUserAppDataPath
  isExternal: true
  name: UnversionedUserAppDataPath
  nameWithType: VersionedPaths.UnversionedUserAppDataPath
  fullName: Sdl.Versioning.VersionedPaths.UnversionedUserAppDataPath
- uid: Sdl.Versioning.VersionedPaths.CompanyAppDataPath*
  commentId: Overload:Sdl.Versioning.VersionedPaths.CompanyAppDataPath
  isExternal: true
  name: CompanyAppDataPath
  nameWithType: VersionedPaths.CompanyAppDataPath
  fullName: Sdl.Versioning.VersionedPaths.CompanyAppDataPath
- uid: Sdl.Versioning.VersionedPaths.RetailProgramDataPath*
  commentId: Overload:Sdl.Versioning.VersionedPaths.RetailProgramDataPath
  isExternal: true
  name: RetailProgramDataPath
  nameWithType: VersionedPaths.RetailProgramDataPath
  fullName: Sdl.Versioning.VersionedPaths.RetailProgramDataPath
- uid: Sdl.Versioning.VersionedPaths.ProgramDataPath*
  commentId: Overload:Sdl.Versioning.VersionedPaths.ProgramDataPath
  isExternal: true
  name: ProgramDataPath
  nameWithType: VersionedPaths.ProgramDataPath
  fullName: Sdl.Versioning.VersionedPaths.ProgramDataPath
- uid: Sdl.Versioning.VersionedPaths.UserAppDataRegistry*
  commentId: Overload:Sdl.Versioning.VersionedPaths.UserAppDataRegistry
  isExternal: true
  name: UserAppDataRegistry
  nameWithType: VersionedPaths.UserAppDataRegistry
  fullName: Sdl.Versioning.VersionedPaths.UserAppDataRegistry
- uid: Microsoft.Win32.RegistryKey
  commentId: T:Microsoft.Win32.RegistryKey
  parent: Microsoft.Win32
  isExternal: true
  name: RegistryKey
  nameWithType: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
- uid: Microsoft.Win32
  commentId: N:Microsoft.Win32
  isExternal: true
  name: Microsoft.Win32
  nameWithType: Microsoft.Win32
  fullName: Microsoft.Win32
