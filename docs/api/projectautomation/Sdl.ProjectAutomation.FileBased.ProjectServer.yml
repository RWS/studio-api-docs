### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.FileBased.ProjectServer
  commentId: T:Sdl.ProjectAutomation.FileBased.ProjectServer
  id: ProjectServer
  parent: Sdl.ProjectAutomation.FileBased
  children:
  - Sdl.ProjectAutomation.FileBased.ProjectServer.#ctor(System.Uri,System.Boolean,System.String,System.String)
  - Sdl.ProjectAutomation.FileBased.ProjectServer.DeleteProject(System.Guid)
  - Sdl.ProjectAutomation.FileBased.ProjectServer.GetServerProject(System.String)
  - Sdl.ProjectAutomation.FileBased.ProjectServer.GetServerProjects(System.String,System.Boolean,System.Boolean)
  - Sdl.ProjectAutomation.FileBased.ProjectServer.OpenProject(System.Guid,System.String)
  langs:
  - csharp
  - vb
  name: ProjectServer
  nameWithType: ProjectServer
  fullName: Sdl.ProjectAutomation.FileBased.ProjectServer
  type: Class
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  syntax:
    content: public class ProjectServer
    content.vb: Public Class ProjectServer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.FileBased.ProjectServer.#ctor(System.Uri,System.Boolean,System.String,System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.ProjectServer.#ctor(System.Uri,System.Boolean,System.String,System.String)
  id: '#ctor(System.Uri,System.Boolean,System.String,System.String)'
  parent: Sdl.ProjectAutomation.FileBased.ProjectServer
  langs:
  - csharp
  - vb
  name: ProjectServer(Uri, Boolean, String, String)
  nameWithType: ProjectServer.ProjectServer(Uri, Boolean, String, String)
  fullName: Sdl.ProjectAutomation.FileBased.ProjectServer.ProjectServer(System.Uri, System.Boolean, System.String, System.String)
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nCreates a new project server.\n"
  syntax:
    content: public ProjectServer(Uri serverUri, bool useWindowsAuthentication, string userName, string password)
    parameters:
    - id: serverUri
      type: System.Uri
      description: The URI of the server
    - id: useWindowsAuthentication
      type: System.Boolean
      description: >-
        Whether to use Windows authentication. When set to false, userName and password

        have to be specified. When set to true, either pass null for userName and

        password in order to log on as the currently logged on Windows user, or set

        userName to a domain-qualified Windows user name and password to the matching

        password to log on using basic Windows authentication.
    - id: userName
      type: System.String
      description: >-
        When using custom authentication or basic Windows authentication, the user

        name of the user. Pass null to use integrated Windows authentication(see useWindowsAuthentication).
    - id: password
      type: System.String
      description: "When using custom authentication or basic Windows authentication the password \nof the user. Pass null to use integrated Windows authentication (see useWindowsAuthentication)."
    content.vb: Public Sub New(serverUri As Uri, useWindowsAuthentication As Boolean, userName As String, password As String)
  overload: Sdl.ProjectAutomation.FileBased.ProjectServer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.ProjectServer.GetServerProjects(System.String,System.Boolean,System.Boolean)
  commentId: M:Sdl.ProjectAutomation.FileBased.ProjectServer.GetServerProjects(System.String,System.Boolean,System.Boolean)
  id: GetServerProjects(System.String,System.Boolean,System.Boolean)
  parent: Sdl.ProjectAutomation.FileBased.ProjectServer
  langs:
  - csharp
  - vb
  name: GetServerProjects(String, Boolean, Boolean)
  nameWithType: ProjectServer.GetServerProjects(String, Boolean, Boolean)
  fullName: Sdl.ProjectAutomation.FileBased.ProjectServer.GetServerProjects(System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nReturns the project list from the remote server.\n"
  syntax:
    content: public ServerProjectInfo[] GetServerProjects(string organizationPath, bool includeProjectsInSubOrganizations, bool includeCompletedProjects)
    parameters:
    - id: organizationPath
      type: System.String
    - id: includeProjectsInSubOrganizations
      type: System.Boolean
    - id: includeCompletedProjects
      type: System.Boolean
    return:
      type: Sdl.ProjectAutomation.FileBased.ServerProjectInfo[]
    content.vb: Public Function GetServerProjects(organizationPath As String, includeProjectsInSubOrganizations As Boolean, includeCompletedProjects As Boolean) As ServerProjectInfo()
  overload: Sdl.ProjectAutomation.FileBased.ProjectServer.GetServerProjects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.ProjectServer.GetServerProject(System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.ProjectServer.GetServerProject(System.String)
  id: GetServerProject(System.String)
  parent: Sdl.ProjectAutomation.FileBased.ProjectServer
  langs:
  - csharp
  - vb
  name: GetServerProject(String)
  nameWithType: ProjectServer.GetServerProject(String)
  fullName: Sdl.ProjectAutomation.FileBased.ProjectServer.GetServerProject(System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nGiven the qualified ( organisationPath/projectName ) name of a server project returns the project details if present on the server otherwise null\n"
  syntax:
    content: public ServerProjectInfo GetServerProject(string qualifiedName)
    parameters:
    - id: qualifiedName
      type: System.String
      description: 'A name in the form organizationPath/ProjectName for example /MyCompany/Project1 '
    return:
      type: Sdl.ProjectAutomation.FileBased.ServerProjectInfo
      description: Details of the project
    content.vb: Public Function GetServerProject(qualifiedName As String) As ServerProjectInfo
  overload: Sdl.ProjectAutomation.FileBased.ProjectServer.GetServerProject*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.ProjectServer.OpenProject(System.Guid,System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.ProjectServer.OpenProject(System.Guid,System.String)
  id: OpenProject(System.Guid,System.String)
  parent: Sdl.ProjectAutomation.FileBased.ProjectServer
  langs:
  - csharp
  - vb
  name: OpenProject(Guid, String)
  nameWithType: ProjectServer.OpenProject(Guid, String)
  fullName: Sdl.ProjectAutomation.FileBased.ProjectServer.OpenProject(System.Guid, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nThe method opens the project with the specified id\n"
  syntax:
    content: public FileBasedProject OpenProject(Guid projectId, string localProjectFolder)
    parameters:
    - id: projectId
      type: System.Guid
      description: The project unique id
    - id: localProjectFolder
      type: System.String
      description: The local project folder
    return:
      type: Sdl.ProjectAutomation.FileBased.FileBasedProject
    content.vb: Public Function OpenProject(projectId As Guid, localProjectFolder As String) As FileBasedProject
  overload: Sdl.ProjectAutomation.FileBased.ProjectServer.OpenProject*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.ProjectServer.DeleteProject(System.Guid)
  commentId: M:Sdl.ProjectAutomation.FileBased.ProjectServer.DeleteProject(System.Guid)
  id: DeleteProject(System.Guid)
  parent: Sdl.ProjectAutomation.FileBased.ProjectServer
  langs:
  - csharp
  - vb
  name: DeleteProject(Guid)
  nameWithType: ProjectServer.DeleteProject(Guid)
  fullName: Sdl.ProjectAutomation.FileBased.ProjectServer.DeleteProject(System.Guid)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nDelete a project from the remote server.\n"
  syntax:
    content: public void DeleteProject(Guid projectId)
    parameters:
    - id: projectId
      type: System.Guid
      description: The unique id to identify the project to delete
    content.vb: Public Sub DeleteProject(projectId As Guid)
  overload: Sdl.ProjectAutomation.FileBased.ProjectServer.DeleteProject*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.ProjectAutomation.FileBased
  commentId: N:Sdl.ProjectAutomation.FileBased
  isExternal: true
  name: Sdl.ProjectAutomation.FileBased
  nameWithType: Sdl.ProjectAutomation.FileBased
  fullName: Sdl.ProjectAutomation.FileBased
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.FileBased.ProjectServer.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.ProjectServer.#ctor
  isExternal: true
  name: ProjectServer
  nameWithType: ProjectServer.ProjectServer
  fullName: Sdl.ProjectAutomation.FileBased.ProjectServer.ProjectServer
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.ProjectAutomation.FileBased.ProjectServer.GetServerProjects*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.ProjectServer.GetServerProjects
  isExternal: true
  name: GetServerProjects
  nameWithType: ProjectServer.GetServerProjects
  fullName: Sdl.ProjectAutomation.FileBased.ProjectServer.GetServerProjects
- uid: Sdl.ProjectAutomation.FileBased.ServerProjectInfo[]
  isExternal: true
  name: ServerProjectInfo[]
  nameWithType: ServerProjectInfo[]
  fullName: Sdl.ProjectAutomation.FileBased.ServerProjectInfo[]
  nameWithType.vb: ServerProjectInfo()
  fullName.vb: Sdl.ProjectAutomation.FileBased.ServerProjectInfo()
  name.vb: ServerProjectInfo()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.FileBased.ServerProjectInfo
    name: ServerProjectInfo
    nameWithType: ServerProjectInfo
    fullName: Sdl.ProjectAutomation.FileBased.ServerProjectInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectAutomation.FileBased.ServerProjectInfo
    name: ServerProjectInfo
    nameWithType: ServerProjectInfo
    fullName: Sdl.ProjectAutomation.FileBased.ServerProjectInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectAutomation.FileBased.ProjectServer.GetServerProject*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.ProjectServer.GetServerProject
  isExternal: true
  name: GetServerProject
  nameWithType: ProjectServer.GetServerProject
  fullName: Sdl.ProjectAutomation.FileBased.ProjectServer.GetServerProject
- uid: Sdl.ProjectAutomation.FileBased.ServerProjectInfo
  commentId: T:Sdl.ProjectAutomation.FileBased.ServerProjectInfo
  parent: Sdl.ProjectAutomation.FileBased
  isExternal: true
  name: ServerProjectInfo
  nameWithType: ServerProjectInfo
  fullName: Sdl.ProjectAutomation.FileBased.ServerProjectInfo
- uid: Sdl.ProjectAutomation.FileBased.ProjectServer.OpenProject*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.ProjectServer.OpenProject
  isExternal: true
  name: OpenProject
  nameWithType: ProjectServer.OpenProject
  fullName: Sdl.ProjectAutomation.FileBased.ProjectServer.OpenProject
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject
  commentId: T:Sdl.ProjectAutomation.FileBased.FileBasedProject
  parent: Sdl.ProjectAutomation.FileBased
  isExternal: true
  name: FileBasedProject
  nameWithType: FileBasedProject
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject
- uid: Sdl.ProjectAutomation.FileBased.ProjectServer.DeleteProject*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.ProjectServer.DeleteProject
  isExternal: true
  name: DeleteProject
  nameWithType: ProjectServer.DeleteProject
  fullName: Sdl.ProjectAutomation.FileBased.ProjectServer.DeleteProject
