### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Core.Termbase
  commentId: T:Sdl.ProjectAutomation.Core.Termbase
  id: Termbase
  parent: Sdl.ProjectAutomation.Core
  children:
  - Sdl.ProjectAutomation.Core.Termbase.Enabled
  - Sdl.ProjectAutomation.Core.Termbase.FilterName
  - Sdl.ProjectAutomation.Core.Termbase.Name
  - Sdl.ProjectAutomation.Core.Termbase.SettingsXML
  langs:
  - csharp
  - vb
  name: Termbase
  nameWithType: Termbase
  fullName: Sdl.ProjectAutomation.Core.Termbase
  type: Class
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nAbstract base class, representing a reference to a termbase that can be part of a <xref href=\"Sdl.ProjectAutomation.Core.TermbaseConfiguration\" data-throw-if-not-resolved=\"false\"></xref>.\nThe two supported concrete implementations of this class are <xref href=\"Sdl.ProjectAutomation.Core.LocalTermbase\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"Sdl.ProjectAutomation.Core.ServerTermbase\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public abstract class Termbase
    content.vb: Public MustInherit Class Termbase
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.ProjectAutomation.Core.LocalTermbase
  - Sdl.ProjectAutomation.Core.ServerTermbase
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sdl.ProjectAutomation.Core.Termbase.Name
  commentId: P:Sdl.ProjectAutomation.Core.Termbase.Name
  id: Name
  parent: Sdl.ProjectAutomation.Core.Termbase
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Termbase.Name
  fullName: Sdl.ProjectAutomation.Core.Termbase.Name
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nTermbase name\n"
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Sdl.ProjectAutomation.Core.Termbase.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.Termbase.SettingsXML
  commentId: P:Sdl.ProjectAutomation.Core.Termbase.SettingsXML
  id: SettingsXML
  parent: Sdl.ProjectAutomation.Core.Termbase
  langs:
  - csharp
  - vb
  name: SettingsXML
  nameWithType: Termbase.SettingsXML
  fullName: Sdl.ProjectAutomation.Core.Termbase.SettingsXML
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nProject termbase settings\n"
  syntax:
    content: public string SettingsXML { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SettingsXML As String
  overload: Sdl.ProjectAutomation.Core.Termbase.SettingsXML*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.Termbase.FilterName
  commentId: P:Sdl.ProjectAutomation.Core.Termbase.FilterName
  id: FilterName
  parent: Sdl.ProjectAutomation.Core.Termbase
  langs:
  - csharp
  - vb
  name: FilterName
  nameWithType: Termbase.FilterName
  fullName: Sdl.ProjectAutomation.Core.Termbase.FilterName
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets the name of the termbase filter that should be used when performing lookups in this termbase.\nThis should be the valid name of a filter that is defined within the termbase.\n"
  syntax:
    content: public string FilterName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FilterName As String
  overload: Sdl.ProjectAutomation.Core.Termbase.FilterName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.Termbase.Enabled
  commentId: P:Sdl.ProjectAutomation.Core.Termbase.Enabled
  id: Enabled
  parent: Sdl.ProjectAutomation.Core.Termbase
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: Termbase.Enabled
  fullName: Sdl.ProjectAutomation.Core.Termbase.Enabled
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets whether this termbase is enabled. When set to <pre><code>false</code></pre>, the termbase is excluded from\nall termbase-related operations.\n"
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: Sdl.ProjectAutomation.Core.Termbase.Enabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.ProjectAutomation.Core
  commentId: N:Sdl.ProjectAutomation.Core
  isExternal: true
  name: Sdl.ProjectAutomation.Core
  nameWithType: Sdl.ProjectAutomation.Core
  fullName: Sdl.ProjectAutomation.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Core.Termbase.Name*
  commentId: Overload:Sdl.ProjectAutomation.Core.Termbase.Name
  isExternal: true
  name: Name
  nameWithType: Termbase.Name
  fullName: Sdl.ProjectAutomation.Core.Termbase.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.ProjectAutomation.Core.Termbase.SettingsXML*
  commentId: Overload:Sdl.ProjectAutomation.Core.Termbase.SettingsXML
  isExternal: true
  name: SettingsXML
  nameWithType: Termbase.SettingsXML
  fullName: Sdl.ProjectAutomation.Core.Termbase.SettingsXML
- uid: Sdl.ProjectAutomation.Core.Termbase.FilterName*
  commentId: Overload:Sdl.ProjectAutomation.Core.Termbase.FilterName
  isExternal: true
  name: FilterName
  nameWithType: Termbase.FilterName
  fullName: Sdl.ProjectAutomation.Core.Termbase.FilterName
- uid: Sdl.ProjectAutomation.Core.Termbase.Enabled*
  commentId: Overload:Sdl.ProjectAutomation.Core.Termbase.Enabled
  isExternal: true
  name: Enabled
  nameWithType: Termbase.Enabled
  fullName: Sdl.ProjectAutomation.Core.Termbase.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
