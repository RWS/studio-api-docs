### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.FileBased.ProjectCredentials
  commentId: T:Sdl.ProjectAutomation.FileBased.ProjectCredentials
  id: ProjectCredentials
  parent: Sdl.ProjectAutomation.FileBased
  children:
  - Sdl.ProjectAutomation.FileBased.ProjectCredentials.AddCredential(System.Uri,System.Boolean,System.String,System.String)
  - Sdl.ProjectAutomation.FileBased.ProjectCredentials.AddCredential(System.Uri,System.String)
  langs:
  - csharp
  - vb
  name: ProjectCredentials
  nameWithType: ProjectCredentials
  fullName: Sdl.ProjectAutomation.FileBased.ProjectCredentials
  type: Class
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\n<p>Represents credentials for translation providers and termbase servers to be used during project processing.\nYou can access this using <xref href=\"Sdl.ProjectAutomation.FileBased.FileBasedProject.Credentials\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p> When creating or opening a project that refers to translation providers or termbases that require credentials,\nthe appropriate credentials should be set up using <xref href=\"Sdl.ProjectAutomation.FileBased.ProjectCredentials.AddCredential(System.Uri%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>, before executing\nautomatic tasks or anything else that requires access to these translation providers or termbases.</p>\n<p>Note that these credentials will only be used for local processing and will not be included in any project packages.\nThe user who opens the project package will be asked to provide the appropriate credentials.\n</p>\n<p>If credentials for translation providers or termbases have been specified in Trados Studio and the user has chose to persist these,\nthese credentials will be automatically available to projects that are run on the same machine and you are not required to provide them programmatically again.</p>\n"
  syntax:
    content: public class ProjectCredentials
    content.vb: Public Class ProjectCredentials
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.FileBased.ProjectCredentials.AddCredential(System.Uri,System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.ProjectCredentials.AddCredential(System.Uri,System.String)
  id: AddCredential(System.Uri,System.String)
  parent: Sdl.ProjectAutomation.FileBased.ProjectCredentials
  langs:
  - csharp
  - vb
  name: AddCredential(Uri, String)
  nameWithType: ProjectCredentials.AddCredential(Uri, String)
  fullName: Sdl.ProjectAutomation.FileBased.ProjectCredentials.AddCredential(System.Uri, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nAdds a credential for the server or resource represented by the given URI.\n"
  remarks: "\n<p>\nIt is recommended to build the URIs using the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderUriBuilder\" data-throw-if-not-resolved=\"false\"></xref> class. The following URIs are supported:\n</p>\n<p>\n\n</p>\n"
  syntax:
    content: public void AddCredential(Uri uri, string credential)
    parameters:
    - id: uri
      type: System.Uri
      description: The URI that represents the server or resource that requires credentials.
    - id: credential
      type: System.String
      description: A credential in the form required by the specified server.
    content.vb: Public Sub AddCredential(uri As Uri, credential As String)
  overload: Sdl.ProjectAutomation.FileBased.ProjectCredentials.AddCredential*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.ProjectCredentials.AddCredential(System.Uri,System.Boolean,System.String,System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.ProjectCredentials.AddCredential(System.Uri,System.Boolean,System.String,System.String)
  id: AddCredential(System.Uri,System.Boolean,System.String,System.String)
  parent: Sdl.ProjectAutomation.FileBased.ProjectCredentials
  langs:
  - csharp
  - vb
  name: AddCredential(Uri, Boolean, String, String)
  nameWithType: ProjectCredentials.AddCredential(Uri, Boolean, String, String)
  fullName: Sdl.ProjectAutomation.FileBased.ProjectCredentials.AddCredential(System.Uri, System.Boolean, System.String, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\n\n"
  syntax:
    content: public void AddCredential(Uri uri, bool useWindowsAuthentication, string user, string password)
    parameters:
    - id: uri
      type: System.Uri
    - id: useWindowsAuthentication
      type: System.Boolean
    - id: user
      type: System.String
    - id: password
      type: System.String
    content.vb: Public Sub AddCredential(uri As Uri, useWindowsAuthentication As Boolean, user As String, password As String)
  overload: Sdl.ProjectAutomation.FileBased.ProjectCredentials.AddCredential*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.ProjectAutomation.FileBased
  commentId: N:Sdl.ProjectAutomation.FileBased
  isExternal: true
  name: Sdl.ProjectAutomation.FileBased
  nameWithType: Sdl.ProjectAutomation.FileBased
  fullName: Sdl.ProjectAutomation.FileBased
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.FileBased.ProjectCredentials.AddCredential*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.ProjectCredentials.AddCredential
  isExternal: true
  name: AddCredential
  nameWithType: ProjectCredentials.AddCredential
  fullName: Sdl.ProjectAutomation.FileBased.ProjectCredentials.AddCredential
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
