### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
  commentId: T:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
  id: TranslationProviderCascadeEntry
  parent: Sdl.ProjectAutomation.Core
  children:
  - Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor(Sdl.ProjectAutomation.Core.TranslationProviderReference,System.Boolean,System.Boolean,System.Boolean)
  - Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor(Sdl.ProjectAutomation.Core.TranslationProviderReference,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  - Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor(Sdl.ProjectAutomation.Core.TranslationProviderReference,System.Collections.Generic.List{Sdl.ProjectAutomation.Core.TranslationProviderReference},System.Boolean,System.Boolean,System.Boolean,System.Int32)
  - Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)
  - Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  - Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.MainTranslationProvider
  - Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.Penalty
  - Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformConcordanceSearch
  - Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformNormalSearch
  - Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformUpdate
  - Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.ProjectTranslationMemories
  langs:
  - csharp
  - vb
  name: TranslationProviderCascadeEntry
  nameWithType: TranslationProviderCascadeEntry
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
  type: Class
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nThis class represents an entry in a translation provider configuration (see <xref href=\"Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries\" data-throw-if-not-resolved=\"false\"></xref>), consisting of \na main translation provider (<xref href=\"Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.MainTranslationProvider\" data-throw-if-not-resolved=\"false\"></xref>), which is generally specified at project creation time and one or more project translation memories \n(<xref href=\"Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.ProjectTranslationMemories\" data-throw-if-not-resolved=\"false\"></xref> which are usually populated automatically by the &quot;Populate Project Translation Memories&quot; batch task as part of project preparation.\n"
  syntax:
    content: public class TranslationProviderCascadeEntry
    content.vb: Public Class TranslationProviderCascadeEntry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)'
  parent: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
  langs:
  - csharp
  - vb
  name: TranslationProviderCascadeEntry(String, Boolean, Boolean, Boolean)
  nameWithType: TranslationProviderCascadeEntry.TranslationProviderCascadeEntry(String, Boolean, Boolean, Boolean)
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.TranslationProviderCascadeEntry(System.String, System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nConstructor that takes an absolute path to a file-based translation memory (*.sdltm) and default search and update settings, with no penalty.\n"
  syntax:
    content: public TranslationProviderCascadeEntry(string fileBasedTranslationMemoryFilePath, bool performUpdate, bool performNormalSearch, bool performConcordanceSearch)
    parameters:
    - id: fileBasedTranslationMemoryFilePath
      type: System.String
      description: The absolute path to a file-based translation memory (*.sdltm).
    - id: performUpdate
      type: System.Boolean
      description: >-
        Whether to update this translation provider when updating translation units in the cascade

        it belongs to (<xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries" data-throw-if-not-resolved="false"></xref>).
    - id: performNormalSearch
      type: System.Boolean
      description: >-
        Whether to search this translation provider when performing a normal translation search in the cascade

        it belongs to (<xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries" data-throw-if-not-resolved="false"></xref>).
    - id: performConcordanceSearch
      type: System.Boolean
      description: >-
        Whether to search this translation provider when performing a concordance search in the cascade

        it belongs to (<xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries" data-throw-if-not-resolved="false"></xref>).
    content.vb: Public Sub New(fileBasedTranslationMemoryFilePath As String, performUpdate As Boolean, performNormalSearch As Boolean, performConcordanceSearch As Boolean)
  overload: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor(Sdl.ProjectAutomation.Core.TranslationProviderReference,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor(Sdl.ProjectAutomation.Core.TranslationProviderReference,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(Sdl.ProjectAutomation.Core.TranslationProviderReference,System.Boolean,System.Boolean,System.Boolean)'
  parent: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
  langs:
  - csharp
  - vb
  name: TranslationProviderCascadeEntry(TranslationProviderReference, Boolean, Boolean, Boolean)
  nameWithType: TranslationProviderCascadeEntry.TranslationProviderCascadeEntry(TranslationProviderReference, Boolean, Boolean, Boolean)
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.TranslationProviderCascadeEntry(Sdl.ProjectAutomation.Core.TranslationProviderReference, System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nConstructor that takes the main translation provider reference and default search and update settings, with no penalty.\n"
  syntax:
    content: public TranslationProviderCascadeEntry(TranslationProviderReference mainTranslationProvider, bool performUpdate, bool performNormalSearch, bool performConcordanceSearch)
    parameters:
    - id: mainTranslationProvider
      type: Sdl.ProjectAutomation.Core.TranslationProviderReference
      description: The main translation provider reference.
    - id: performUpdate
      type: System.Boolean
      description: >-
        Whether to update this translation provider when updating translation units in the cascade

        it belongs to (<xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries" data-throw-if-not-resolved="false"></xref>).
    - id: performNormalSearch
      type: System.Boolean
      description: >-
        Whether to search this translation provider when performing a normal translation search in the cascade

        it belongs to (<xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries" data-throw-if-not-resolved="false"></xref>).
    - id: performConcordanceSearch
      type: System.Boolean
      description: >-
        Whether to search this translation provider when performing a concordance search in the cascade

        it belongs to (<xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries" data-throw-if-not-resolved="false"></xref>).
    content.vb: Public Sub New(mainTranslationProvider As TranslationProviderReference, performUpdate As Boolean, performNormalSearch As Boolean, performConcordanceSearch As Boolean)
  overload: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  commentId: M:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  id: '#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32)'
  parent: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
  langs:
  - csharp
  - vb
  name: TranslationProviderCascadeEntry(String, Boolean, Boolean, Boolean, Int32)
  nameWithType: TranslationProviderCascadeEntry.TranslationProviderCascadeEntry(String, Boolean, Boolean, Boolean, Int32)
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.TranslationProviderCascadeEntry(System.String, System.Boolean, System.Boolean, System.Boolean, System.Int32)
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nConstructor that takes an absolute path to a file-based translation memory (*.sdltm)and default search and update settings.\n"
  syntax:
    content: public TranslationProviderCascadeEntry(string fileBasedTranslationMemoryFilePath, bool performUpdate, bool performNormalSearch, bool performConcordanceSearch, int penalty)
    parameters:
    - id: fileBasedTranslationMemoryFilePath
      type: System.String
      description: The absolute path to a file-based translation memory (*.sdltm).
    - id: performUpdate
      type: System.Boolean
      description: >-
        Whether to update this translation provider when updating translation units in the cascade

        it belongs to (<xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries" data-throw-if-not-resolved="false"></xref>).
    - id: performNormalSearch
      type: System.Boolean
      description: >-
        Whether to search this translation provider when performing a normal translation search in the cascade

        it belongs to (<xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries" data-throw-if-not-resolved="false"></xref>).
    - id: performConcordanceSearch
      type: System.Boolean
      description: >-
        Whether to search this translation provider when performing a concordance search in the cascade

        it belongs to (<xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries" data-throw-if-not-resolved="false"></xref>).
    - id: penalty
      type: System.Int32
      description: >-
        The penalty to apply for search results from this provider (main or project) when performing normal searches.

        This penalty is applied on top of any penalty that might be applied by the translation provider itself. This should be a positive integer.
    content.vb: Public Sub New(fileBasedTranslationMemoryFilePath As String, performUpdate As Boolean, performNormalSearch As Boolean, performConcordanceSearch As Boolean, penalty As Integer)
  overload: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor(Sdl.ProjectAutomation.Core.TranslationProviderReference,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  commentId: M:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor(Sdl.ProjectAutomation.Core.TranslationProviderReference,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  id: '#ctor(Sdl.ProjectAutomation.Core.TranslationProviderReference,System.Boolean,System.Boolean,System.Boolean,System.Int32)'
  parent: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
  langs:
  - csharp
  - vb
  name: TranslationProviderCascadeEntry(TranslationProviderReference, Boolean, Boolean, Boolean, Int32)
  nameWithType: TranslationProviderCascadeEntry.TranslationProviderCascadeEntry(TranslationProviderReference, Boolean, Boolean, Boolean, Int32)
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.TranslationProviderCascadeEntry(Sdl.ProjectAutomation.Core.TranslationProviderReference, System.Boolean, System.Boolean, System.Boolean, System.Int32)
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nConstructor that takes the main translation provider reference and default search and update settings.\n"
  syntax:
    content: public TranslationProviderCascadeEntry(TranslationProviderReference mainTranslationProvider, bool performUpdate, bool performNormalSearch, bool performConcordanceSearch, int penalty)
    parameters:
    - id: mainTranslationProvider
      type: Sdl.ProjectAutomation.Core.TranslationProviderReference
      description: The main translation provider reference.
    - id: performUpdate
      type: System.Boolean
      description: >-
        Whether to update this translation provider when updating translation units in the cascade

        it belongs to (<xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries" data-throw-if-not-resolved="false"></xref>).
    - id: performNormalSearch
      type: System.Boolean
      description: >-
        Whether to search this translation provider when performing a normal translation search in the cascade

        it belongs to (<xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries" data-throw-if-not-resolved="false"></xref>).
    - id: performConcordanceSearch
      type: System.Boolean
      description: >-
        Whether to search this translation provider when performing a concordance search in the cascade

        it belongs to (<xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries" data-throw-if-not-resolved="false"></xref>).
    - id: penalty
      type: System.Int32
      description: >-
        The penalty to apply for search results from this provider (main or project) when performing normal searches.

        This penalty is applied on top of any penalty that might be applied by the translation provider itself. This should be a positive integer.
    content.vb: Public Sub New(mainTranslationProvider As TranslationProviderReference, performUpdate As Boolean, performNormalSearch As Boolean, performConcordanceSearch As Boolean, penalty As Integer)
  overload: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor(Sdl.ProjectAutomation.Core.TranslationProviderReference,System.Collections.Generic.List{Sdl.ProjectAutomation.Core.TranslationProviderReference},System.Boolean,System.Boolean,System.Boolean,System.Int32)
  commentId: M:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor(Sdl.ProjectAutomation.Core.TranslationProviderReference,System.Collections.Generic.List{Sdl.ProjectAutomation.Core.TranslationProviderReference},System.Boolean,System.Boolean,System.Boolean,System.Int32)
  id: '#ctor(Sdl.ProjectAutomation.Core.TranslationProviderReference,System.Collections.Generic.List{Sdl.ProjectAutomation.Core.TranslationProviderReference},System.Boolean,System.Boolean,System.Boolean,System.Int32)'
  parent: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
  langs:
  - csharp
  - vb
  name: TranslationProviderCascadeEntry(TranslationProviderReference, List<TranslationProviderReference>, Boolean, Boolean, Boolean, Int32)
  nameWithType: TranslationProviderCascadeEntry.TranslationProviderCascadeEntry(TranslationProviderReference, List<TranslationProviderReference>, Boolean, Boolean, Boolean, Int32)
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.TranslationProviderCascadeEntry(Sdl.ProjectAutomation.Core.TranslationProviderReference, System.Collections.Generic.List<Sdl.ProjectAutomation.Core.TranslationProviderReference>, System.Boolean, System.Boolean, System.Boolean, System.Int32)
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nConstructor that takes the main translation provider reference, project translation memory references, and default search and update settings.\n"
  syntax:
    content: public TranslationProviderCascadeEntry(TranslationProviderReference mainTranslationProvider, List<TranslationProviderReference> projectTranslationMemories, bool performUpdate, bool performNormalSearch, bool performConcordanceSearch, int penalty)
    parameters:
    - id: mainTranslationProvider
      type: Sdl.ProjectAutomation.Core.TranslationProviderReference
      description: The main translation provider reference.
    - id: projectTranslationMemories
      type: System.Collections.Generic.List{Sdl.ProjectAutomation.Core.TranslationProviderReference}
      description: >-
        The list of project translation memories corresponding to the main translation provider in this entry.

        This list can be empty, but not <code>null</code>. The only situation where the list can contain more than one translation memory is when

        the main translation provider is a multilingual server-based translation memory and the project was set to create file-based

        translation memories. In this case, there will be one file-based project translation memory for each of the language directions

        in the main server-based translation memory (if this language direction is also one of the project language directions).
    - id: performUpdate
      type: System.Boolean
      description: >-
        Whether to update this translation provider when updating translation units in the cascade

        it belongs to (<xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries" data-throw-if-not-resolved="false"></xref>).
    - id: performNormalSearch
      type: System.Boolean
      description: >-
        Whether to search this translation provider when performing a normal translation search in the cascade

        it belongs to (<xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries" data-throw-if-not-resolved="false"></xref>).
    - id: performConcordanceSearch
      type: System.Boolean
      description: >-
        Whether to search this translation provider when performing a concordance search in the cascade

        it belongs to (<xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries" data-throw-if-not-resolved="false"></xref>).
    - id: penalty
      type: System.Int32
      description: >-
        The penalty to apply for search results from this provider (main or project) when performing normal searches.

        This penalty is applied on top of any penalty that might be applied by the translation provider itself. This should be a positive integer.
    content.vb: Public Sub New(mainTranslationProvider As TranslationProviderReference, projectTranslationMemories As List(Of TranslationProviderReference), performUpdate As Boolean, performNormalSearch As Boolean, performConcordanceSearch As Boolean, penalty As Integer)
  overload: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor*
  nameWithType.vb: TranslationProviderCascadeEntry.TranslationProviderCascadeEntry(TranslationProviderReference, List(Of TranslationProviderReference), Boolean, Boolean, Boolean, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.TranslationProviderCascadeEntry(Sdl.ProjectAutomation.Core.TranslationProviderReference, System.Collections.Generic.List(Of Sdl.ProjectAutomation.Core.TranslationProviderReference), System.Boolean, System.Boolean, System.Boolean, System.Int32)
  name.vb: TranslationProviderCascadeEntry(TranslationProviderReference, List(Of TranslationProviderReference), Boolean, Boolean, Boolean, Int32)
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.MainTranslationProvider
  commentId: P:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.MainTranslationProvider
  id: MainTranslationProvider
  parent: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
  langs:
  - csharp
  - vb
  name: MainTranslationProvider
  nameWithType: TranslationProviderCascadeEntry.MainTranslationProvider
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.MainTranslationProvider
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets the main translation provider reference. Cannot be <code>null</code>.\n"
  syntax:
    content: public TranslationProviderReference MainTranslationProvider { get; set; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.Core.TranslationProviderReference
    content.vb: Public Property MainTranslationProvider As TranslationProviderReference
  overload: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.MainTranslationProvider*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.ProjectTranslationMemories
  commentId: P:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.ProjectTranslationMemories
  id: ProjectTranslationMemories
  parent: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
  langs:
  - csharp
  - vb
  name: ProjectTranslationMemories
  nameWithType: TranslationProviderCascadeEntry.ProjectTranslationMemories
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.ProjectTranslationMemories
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets the list of project translation memories corresponding to the main translation provider in this entry.\nThis list can be empty, but not <code>null</code>. The only situation where the list can contain more than one translation memory is when\nthe main translation provider is a multilingual server-based translation memory and the project was set to create file-based\ntranslation memories. In this case, there will be one file-based project translation memory for each of the language directions\nin the main server-based translation memory (if this language direction is also one of the project language directions).\n"
  syntax:
    content: public List<TranslationProviderReference> ProjectTranslationMemories { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.ProjectAutomation.Core.TranslationProviderReference}
    content.vb: Public Property ProjectTranslationMemories As List(Of TranslationProviderReference)
  overload: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.ProjectTranslationMemories*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformUpdate
  commentId: P:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformUpdate
  id: PerformUpdate
  parent: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
  langs:
  - csharp
  - vb
  name: PerformUpdate
  nameWithType: TranslationProviderCascadeEntry.PerformUpdate
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformUpdate
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets whether to search this translation provider when performing a normal translation search in the cascade\nit belongs to (<xref href=\"Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  syntax:
    content: public bool PerformUpdate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PerformUpdate As Boolean
  overload: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformUpdate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformNormalSearch
  commentId: P:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformNormalSearch
  id: PerformNormalSearch
  parent: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
  langs:
  - csharp
  - vb
  name: PerformNormalSearch
  nameWithType: TranslationProviderCascadeEntry.PerformNormalSearch
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformNormalSearch
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets whether to search this translation provider when performing a normal translation search in the cascade\nit belongs to (<xref href=\"Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  syntax:
    content: public bool PerformNormalSearch { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PerformNormalSearch As Boolean
  overload: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformNormalSearch*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformConcordanceSearch
  commentId: P:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformConcordanceSearch
  id: PerformConcordanceSearch
  parent: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
  langs:
  - csharp
  - vb
  name: PerformConcordanceSearch
  nameWithType: TranslationProviderCascadeEntry.PerformConcordanceSearch
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformConcordanceSearch
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets whether to search this translation provider when performing a concordance search in the cascade\nit belongs to (<xref href=\"Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  syntax:
    content: public bool PerformConcordanceSearch { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PerformConcordanceSearch As Boolean
  overload: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformConcordanceSearch*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.Penalty
  commentId: P:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.Penalty
  id: Penalty
  parent: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
  langs:
  - csharp
  - vb
  name: Penalty
  nameWithType: TranslationProviderCascadeEntry.Penalty
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.Penalty
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets the penalty to apply for search results from this provider (main or project) when performing normal searches.\nThis penalty is applied on top of any penalty that might be applied by the translation provider itself. This should be a positive integer.\n"
  syntax:
    content: public int Penalty { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Penalty As Integer
  overload: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.Penalty*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.ProjectAutomation.Core
  commentId: N:Sdl.ProjectAutomation.Core
  isExternal: true
  name: Sdl.ProjectAutomation.Core
  nameWithType: Sdl.ProjectAutomation.Core
  fullName: Sdl.ProjectAutomation.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.#ctor
  isExternal: true
  name: TranslationProviderCascadeEntry
  nameWithType: TranslationProviderCascadeEntry.TranslationProviderCascadeEntry
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.TranslationProviderCascadeEntry
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.ProjectAutomation.Core.TranslationProviderReference
  commentId: T:Sdl.ProjectAutomation.Core.TranslationProviderReference
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: TranslationProviderReference
  nameWithType: TranslationProviderReference
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderReference
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{Sdl.ProjectAutomation.Core.TranslationProviderReference}
  commentId: T:System.Collections.Generic.List{Sdl.ProjectAutomation.Core.TranslationProviderReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TranslationProviderReference>
  nameWithType: List<TranslationProviderReference>
  fullName: System.Collections.Generic.List<Sdl.ProjectAutomation.Core.TranslationProviderReference>
  nameWithType.vb: List(Of TranslationProviderReference)
  fullName.vb: System.Collections.Generic.List(Of Sdl.ProjectAutomation.Core.TranslationProviderReference)
  name.vb: List(Of TranslationProviderReference)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.TranslationProviderReference
    name: TranslationProviderReference
    nameWithType: TranslationProviderReference
    fullName: Sdl.ProjectAutomation.Core.TranslationProviderReference
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.TranslationProviderReference
    name: TranslationProviderReference
    nameWithType: TranslationProviderReference
    fullName: Sdl.ProjectAutomation.Core.TranslationProviderReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.MainTranslationProvider*
  commentId: Overload:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.MainTranslationProvider
  isExternal: true
  name: MainTranslationProvider
  nameWithType: TranslationProviderCascadeEntry.MainTranslationProvider
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.MainTranslationProvider
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.ProjectTranslationMemories*
  commentId: Overload:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.ProjectTranslationMemories
  isExternal: true
  name: ProjectTranslationMemories
  nameWithType: TranslationProviderCascadeEntry.ProjectTranslationMemories
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.ProjectTranslationMemories
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformUpdate*
  commentId: Overload:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformUpdate
  isExternal: true
  name: PerformUpdate
  nameWithType: TranslationProviderCascadeEntry.PerformUpdate
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformUpdate
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformNormalSearch*
  commentId: Overload:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformNormalSearch
  isExternal: true
  name: PerformNormalSearch
  nameWithType: TranslationProviderCascadeEntry.PerformNormalSearch
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformNormalSearch
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformConcordanceSearch*
  commentId: Overload:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformConcordanceSearch
  isExternal: true
  name: PerformConcordanceSearch
  nameWithType: TranslationProviderCascadeEntry.PerformConcordanceSearch
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.PerformConcordanceSearch
- uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.Penalty*
  commentId: Overload:Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.Penalty
  isExternal: true
  name: Penalty
  nameWithType: TranslationProviderCascadeEntry.Penalty
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry.Penalty
