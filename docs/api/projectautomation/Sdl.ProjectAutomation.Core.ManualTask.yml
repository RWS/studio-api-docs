### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Core.ManualTask
  commentId: T:Sdl.ProjectAutomation.Core.ManualTask
  id: ManualTask
  parent: Sdl.ProjectAutomation.Core
  children:
  - Sdl.ProjectAutomation.Core.ManualTask.#ctor
  - Sdl.ProjectAutomation.Core.ManualTask.AssignToUserId
  - Sdl.ProjectAutomation.Core.ManualTask.DueDate
  langs:
  - csharp
  - vb
  name: ManualTask
  nameWithType: ManualTask
  fullName: Sdl.ProjectAutomation.Core.ManualTask
  type: Class
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nRepresents a manual task, which is a <xref href=\"Sdl.ProjectAutomation.Core.Task\" data-throw-if-not-resolved=\"false\"></xref> that is assigned to and executed by a user and \ncan be included in a project package if it needs to be performed offline by someone else (<xref href=\"Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid%2cSystem.String%2cSystem.String%2cSdl.ProjectAutomation.Core.ProjectPackageCreationOptions)\" data-throw-if-not-resolved=\"false\"></xref>.\nTo create a new manual task, use <xref href=\"Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String%2cSystem.String%2cSystem.DateTime%2cSdl.ProjectAutomation.Core.TaskFileInfo%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: 'public class ManualTask : Task'
    content.vb: >-
      Public Class ManualTask
          Inherits Task
  inheritance:
  - System.Object
  - Sdl.ProjectAutomation.Core.Task
  inheritedMembers:
  - Sdl.ProjectAutomation.Core.Task.Id
  - Sdl.ProjectAutomation.Core.Task.InputFiles
  - Sdl.ProjectAutomation.Core.Task.Status
  - Sdl.ProjectAutomation.Core.Task.Name
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.Core.ManualTask.#ctor
  commentId: M:Sdl.ProjectAutomation.Core.ManualTask.#ctor
  id: '#ctor'
  parent: Sdl.ProjectAutomation.Core.ManualTask
  langs:
  - csharp
  - vb
  name: ManualTask()
  nameWithType: ManualTask.ManualTask()
  fullName: Sdl.ProjectAutomation.Core.ManualTask.ManualTask()
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public ManualTask()
    content.vb: Public Sub New
  overload: Sdl.ProjectAutomation.Core.ManualTask.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.ManualTask.AssignToUserId
  commentId: P:Sdl.ProjectAutomation.Core.ManualTask.AssignToUserId
  id: AssignToUserId
  parent: Sdl.ProjectAutomation.Core.ManualTask
  langs:
  - csharp
  - vb
  name: AssignToUserId
  nameWithType: ManualTask.AssignToUserId
  fullName: Sdl.ProjectAutomation.Core.ManualTask.AssignToUserId
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets the ID of the user who will perform the task.\n"
  remarks: >-
    Note that in file-based projects, this ID can be anything and does not necessarily represent an actual Windows User ID or similar. The system

    merely tracks the user ID for informational purposes.
  syntax:
    content: public string AssignToUserId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property AssignToUserId As String
  overload: Sdl.ProjectAutomation.Core.ManualTask.AssignToUserId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.ManualTask.DueDate
  commentId: P:Sdl.ProjectAutomation.Core.ManualTask.DueDate
  id: DueDate
  parent: Sdl.ProjectAutomation.Core.ManualTask
  langs:
  - csharp
  - vb
  name: DueDate
  nameWithType: ManualTask.DueDate
  fullName: Sdl.ProjectAutomation.Core.ManualTask.DueDate
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets the due date of this manual task. This is optional.\n"
  syntax:
    content: public DateTime? DueDate { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public ReadOnly Property DueDate As Date?
  overload: Sdl.ProjectAutomation.Core.ManualTask.DueDate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.ProjectAutomation.Core
  commentId: N:Sdl.ProjectAutomation.Core
  isExternal: true
  name: Sdl.ProjectAutomation.Core
  nameWithType: Sdl.ProjectAutomation.Core
  fullName: Sdl.ProjectAutomation.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.ProjectAutomation.Core.Task
  commentId: T:Sdl.ProjectAutomation.Core.Task
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Sdl.ProjectAutomation.Core.Task
- uid: Sdl.ProjectAutomation.Core.Task.Id
  commentId: P:Sdl.ProjectAutomation.Core.Task.Id
  parent: Sdl.ProjectAutomation.Core.Task
  isExternal: true
  name: Id
  nameWithType: Task.Id
  fullName: Sdl.ProjectAutomation.Core.Task.Id
- uid: Sdl.ProjectAutomation.Core.Task.InputFiles
  commentId: P:Sdl.ProjectAutomation.Core.Task.InputFiles
  parent: Sdl.ProjectAutomation.Core.Task
  isExternal: true
  name: InputFiles
  nameWithType: Task.InputFiles
  fullName: Sdl.ProjectAutomation.Core.Task.InputFiles
- uid: Sdl.ProjectAutomation.Core.Task.Status
  commentId: P:Sdl.ProjectAutomation.Core.Task.Status
  parent: Sdl.ProjectAutomation.Core.Task
  isExternal: true
  name: Status
  nameWithType: Task.Status
  fullName: Sdl.ProjectAutomation.Core.Task.Status
- uid: Sdl.ProjectAutomation.Core.Task.Name
  commentId: P:Sdl.ProjectAutomation.Core.Task.Name
  parent: Sdl.ProjectAutomation.Core.Task
  isExternal: true
  name: Name
  nameWithType: Task.Name
  fullName: Sdl.ProjectAutomation.Core.Task.Name
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Core.ManualTask.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.Core.ManualTask.#ctor
  isExternal: true
  name: ManualTask
  nameWithType: ManualTask.ManualTask
  fullName: Sdl.ProjectAutomation.Core.ManualTask.ManualTask
- uid: Sdl.ProjectAutomation.Core.ManualTask.AssignToUserId*
  commentId: Overload:Sdl.ProjectAutomation.Core.ManualTask.AssignToUserId
  isExternal: true
  name: AssignToUserId
  nameWithType: ManualTask.AssignToUserId
  fullName: Sdl.ProjectAutomation.Core.ManualTask.AssignToUserId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.ProjectAutomation.Core.ManualTask.DueDate*
  commentId: Overload:Sdl.ProjectAutomation.Core.ManualTask.DueDate
  isExternal: true
  name: DueDate
  nameWithType: ManualTask.DueDate
  fullName: Sdl.ProjectAutomation.Core.ManualTask.DueDate
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
