### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Core.TermRecognitionOptions
  commentId: T:Sdl.ProjectAutomation.Core.TermRecognitionOptions
  id: TermRecognitionOptions
  parent: Sdl.ProjectAutomation.Core
  children:
  - Sdl.ProjectAutomation.Core.TermRecognitionOptions.#ctor
  - Sdl.ProjectAutomation.Core.TermRecognitionOptions.MinimumMatchValue
  - Sdl.ProjectAutomation.Core.TermRecognitionOptions.SearchDepth
  - Sdl.ProjectAutomation.Core.TermRecognitionOptions.SearchOrder
  - Sdl.ProjectAutomation.Core.TermRecognitionOptions.ShowWithNoAvailableTranslation
  langs:
  - csharp
  - vb
  name: TermRecognitionOptions
  nameWithType: TermRecognitionOptions
  fullName: Sdl.ProjectAutomation.Core.TermRecognitionOptions
  type: Class
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nThis class exposes a number of options that affect interactive terminology recognition behavior.\nThee options are used in combination with the termbases set up in the <xref href=\"Sdl.ProjectAutomation.Core.TermbaseConfiguration\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public class TermRecognitionOptions
    content.vb: Public Class TermRecognitionOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.Core.TermRecognitionOptions.#ctor
  commentId: M:Sdl.ProjectAutomation.Core.TermRecognitionOptions.#ctor
  id: '#ctor'
  parent: Sdl.ProjectAutomation.Core.TermRecognitionOptions
  langs:
  - csharp
  - vb
  name: TermRecognitionOptions()
  nameWithType: TermRecognitionOptions.TermRecognitionOptions()
  fullName: Sdl.ProjectAutomation.Core.TermRecognitionOptions.TermRecognitionOptions()
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public TermRecognitionOptions()
    content.vb: Public Sub New
  overload: Sdl.ProjectAutomation.Core.TermRecognitionOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TermRecognitionOptions.ShowWithNoAvailableTranslation
  commentId: P:Sdl.ProjectAutomation.Core.TermRecognitionOptions.ShowWithNoAvailableTranslation
  id: ShowWithNoAvailableTranslation
  parent: Sdl.ProjectAutomation.Core.TermRecognitionOptions
  langs:
  - csharp
  - vb
  name: ShowWithNoAvailableTranslation
  nameWithType: TermRecognitionOptions.ShowWithNoAvailableTranslation
  fullName: Sdl.ProjectAutomation.Core.TermRecognitionOptions.ShowWithNoAvailableTranslation
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets whether a term is shown with no available translation.\n"
  syntax:
    content: public bool ShowWithNoAvailableTranslation { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ShowWithNoAvailableTranslation As Boolean
  overload: Sdl.ProjectAutomation.Core.TermRecognitionOptions.ShowWithNoAvailableTranslation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TermRecognitionOptions.MinimumMatchValue
  commentId: P:Sdl.ProjectAutomation.Core.TermRecognitionOptions.MinimumMatchValue
  id: MinimumMatchValue
  parent: Sdl.ProjectAutomation.Core.TermRecognitionOptions
  langs:
  - csharp
  - vb
  name: MinimumMatchValue
  nameWithType: TermRecognitionOptions.MinimumMatchValue
  fullName: Sdl.ProjectAutomation.Core.TermRecognitionOptions.MinimumMatchValue
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets the minimum match value, which controls how similar a fuzzy match terms should be in order to be\nconsidered a match.\n"
  syntax:
    content: public int MinimumMatchValue { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MinimumMatchValue As Integer
  overload: Sdl.ProjectAutomation.Core.TermRecognitionOptions.MinimumMatchValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TermRecognitionOptions.SearchDepth
  commentId: P:Sdl.ProjectAutomation.Core.TermRecognitionOptions.SearchDepth
  id: SearchDepth
  parent: Sdl.ProjectAutomation.Core.TermRecognitionOptions
  langs:
  - csharp
  - vb
  name: SearchDepth
  nameWithType: TermRecognitionOptions.SearchDepth
  fullName: Sdl.ProjectAutomation.Core.TermRecognitionOptions.SearchDepth
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets the search depth.\n"
  syntax:
    content: public int SearchDepth { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SearchDepth As Integer
  overload: Sdl.ProjectAutomation.Core.TermRecognitionOptions.SearchDepth*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TermRecognitionOptions.SearchOrder
  commentId: P:Sdl.ProjectAutomation.Core.TermRecognitionOptions.SearchOrder
  id: SearchOrder
  parent: Sdl.ProjectAutomation.Core.TermRecognitionOptions
  langs:
  - csharp
  - vb
  name: SearchOrder
  nameWithType: TermRecognitionOptions.SearchOrder
  fullName: Sdl.ProjectAutomation.Core.TermRecognitionOptions.SearchOrder
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets the order in which termbases defined in the <xref href=\"Sdl.ProjectAutomation.Core.TermbaseConfiguration\" data-throw-if-not-resolved=\"false\"></xref> are searched.\n"
  syntax:
    content: public TermbaseSearchOrder SearchOrder { get; set; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.Core.TermbaseSearchOrder
    content.vb: Public Property SearchOrder As TermbaseSearchOrder
  overload: Sdl.ProjectAutomation.Core.TermRecognitionOptions.SearchOrder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.ProjectAutomation.Core
  commentId: N:Sdl.ProjectAutomation.Core
  isExternal: true
  name: Sdl.ProjectAutomation.Core
  nameWithType: Sdl.ProjectAutomation.Core
  fullName: Sdl.ProjectAutomation.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Core.TermRecognitionOptions.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.Core.TermRecognitionOptions.#ctor
  isExternal: true
  name: TermRecognitionOptions
  nameWithType: TermRecognitionOptions.TermRecognitionOptions
  fullName: Sdl.ProjectAutomation.Core.TermRecognitionOptions.TermRecognitionOptions
- uid: Sdl.ProjectAutomation.Core.TermRecognitionOptions.ShowWithNoAvailableTranslation*
  commentId: Overload:Sdl.ProjectAutomation.Core.TermRecognitionOptions.ShowWithNoAvailableTranslation
  isExternal: true
  name: ShowWithNoAvailableTranslation
  nameWithType: TermRecognitionOptions.ShowWithNoAvailableTranslation
  fullName: Sdl.ProjectAutomation.Core.TermRecognitionOptions.ShowWithNoAvailableTranslation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.ProjectAutomation.Core.TermRecognitionOptions.MinimumMatchValue*
  commentId: Overload:Sdl.ProjectAutomation.Core.TermRecognitionOptions.MinimumMatchValue
  isExternal: true
  name: MinimumMatchValue
  nameWithType: TermRecognitionOptions.MinimumMatchValue
  fullName: Sdl.ProjectAutomation.Core.TermRecognitionOptions.MinimumMatchValue
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.ProjectAutomation.Core.TermRecognitionOptions.SearchDepth*
  commentId: Overload:Sdl.ProjectAutomation.Core.TermRecognitionOptions.SearchDepth
  isExternal: true
  name: SearchDepth
  nameWithType: TermRecognitionOptions.SearchDepth
  fullName: Sdl.ProjectAutomation.Core.TermRecognitionOptions.SearchDepth
- uid: Sdl.ProjectAutomation.Core.TermRecognitionOptions.SearchOrder*
  commentId: Overload:Sdl.ProjectAutomation.Core.TermRecognitionOptions.SearchOrder
  isExternal: true
  name: SearchOrder
  nameWithType: TermRecognitionOptions.SearchOrder
  fullName: Sdl.ProjectAutomation.Core.TermRecognitionOptions.SearchOrder
- uid: Sdl.ProjectAutomation.Core.TermbaseSearchOrder
  commentId: T:Sdl.ProjectAutomation.Core.TermbaseSearchOrder
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: TermbaseSearchOrder
  nameWithType: TermbaseSearchOrder
  fullName: Sdl.ProjectAutomation.Core.TermbaseSearchOrder
