### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.EntryTerm
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.EntryTerm
  id: EntryTerm
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.EntryTerm.#ctor
  - Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Fields
  - Sdl.Terminology.TerminologyProvider.Core.EntryTerm.ParentLanguage
  - Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Transactions
  - Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Value
  langs:
  - csharp
  - vb
  name: EntryTerm
  nameWithType: EntryTerm
  fullName: Sdl.Terminology.TerminologyProvider.Core.EntryTerm
  type: Class
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nTerminology provider entry term\n"
  syntax:
    content: 'public class EntryTerm : IEntryTerm'
    content.vb: >-
      Public Class EntryTerm
          Implements IEntryTerm
  inheritance:
  - System.Object
  implements:
  - Sdl.Terminology.TerminologyProvider.Core.IEntryTerm
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.#ctor
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.EntryTerm.#ctor
  id: '#ctor'
  parent: Sdl.Terminology.TerminologyProvider.Core.EntryTerm
  langs:
  - csharp
  - vb
  name: EntryTerm()
  nameWithType: EntryTerm.EntryTerm()
  fullName: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.EntryTerm()
  type: Constructor
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nDefault constructor\n"
  syntax:
    content: public EntryTerm()
    content.vb: Public Sub New
  overload: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Value
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Value
  id: Value
  parent: Sdl.Terminology.TerminologyProvider.Core.EntryTerm
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: EntryTerm.Value
  fullName: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Value
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nthe string value of the term\n"
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Value*
  implements:
  - Sdl.Terminology.TerminologyProvider.Core.IEntryTerm.Value
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.ParentLanguage
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.EntryTerm.ParentLanguage
  id: ParentLanguage
  parent: Sdl.Terminology.TerminologyProvider.Core.EntryTerm
  langs:
  - csharp
  - vb
  name: ParentLanguage
  nameWithType: EntryTerm.ParentLanguage
  fullName: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.ParentLanguage
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nLanguage containing this term\n"
  syntax:
    content: public IEntryLanguage ParentLanguage { get; set; }
    parameters: []
    return:
      type: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage
    content.vb: Public Property ParentLanguage As IEntryLanguage
  overload: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.ParentLanguage*
  implements:
  - Sdl.Terminology.TerminologyProvider.Core.IEntryTerm.ParentLanguage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Transactions
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Transactions
  id: Transactions
  parent: Sdl.Terminology.TerminologyProvider.Core.EntryTerm
  langs:
  - csharp
  - vb
  name: Transactions
  nameWithType: EntryTerm.Transactions
  fullName: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Transactions
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nTransactions (creation/modification) for this term\n"
  syntax:
    content: public IList<IEntryTransaction> Transactions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction}
    content.vb: Public Property Transactions As IList(Of IEntryTransaction)
  overload: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Transactions*
  implements:
  - Sdl.Terminology.TerminologyProvider.Core.IEntryTerm.Transactions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Fields
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Fields
  id: Fields
  parent: Sdl.Terminology.TerminologyProvider.Core.EntryTerm
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: EntryTerm.Fields
  fullName: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Fields
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nterm level fields for this term\n"
  syntax:
    content: public IList<IEntryField> Fields { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.IEntryField}
    content.vb: Public Property Fields As IList(Of IEntryField)
  overload: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Fields*
  implements:
  - Sdl.Terminology.TerminologyProvider.Core.IEntryTerm.Fields
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.IEntryTerm
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: IEntryTerm
  nameWithType: IEntryTerm
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.#ctor*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.EntryTerm.#ctor
  isExternal: true
  name: EntryTerm
  nameWithType: EntryTerm.EntryTerm
  fullName: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.EntryTerm
- uid: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Value*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Value
  isExternal: true
  name: Value
  nameWithType: EntryTerm.Value
  fullName: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Value
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm.Value
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IEntryTerm.Value
  parent: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm
  isExternal: true
  name: Value
  nameWithType: IEntryTerm.Value
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm.Value
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.ParentLanguage*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.EntryTerm.ParentLanguage
  isExternal: true
  name: ParentLanguage
  nameWithType: EntryTerm.ParentLanguage
  fullName: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.ParentLanguage
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm.ParentLanguage
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IEntryTerm.ParentLanguage
  parent: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm
  isExternal: true
  name: ParentLanguage
  nameWithType: IEntryTerm.ParentLanguage
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm.ParentLanguage
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: IEntryLanguage
  nameWithType: IEntryLanguage
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage
- uid: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Transactions*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Transactions
  isExternal: true
  name: Transactions
  nameWithType: EntryTerm.Transactions
  fullName: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Transactions
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm.Transactions
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IEntryTerm.Transactions
  parent: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm
  isExternal: true
  name: Transactions
  nameWithType: IEntryTerm.Transactions
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm.Transactions
- uid: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction}
  commentId: T:System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IEntryTransaction>
  nameWithType: IList<IEntryTransaction>
  fullName: System.Collections.Generic.IList<Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction>
  nameWithType.vb: IList(Of IEntryTransaction)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction)
  name.vb: IList(Of IEntryTransaction)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction
    name: IEntryTransaction
    nameWithType: IEntryTransaction
    fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction
    name: IEntryTransaction
    nameWithType: IEntryTransaction
    fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Fields*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Fields
  isExternal: true
  name: Fields
  nameWithType: EntryTerm.Fields
  fullName: Sdl.Terminology.TerminologyProvider.Core.EntryTerm.Fields
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm.Fields
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IEntryTerm.Fields
  parent: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm
  isExternal: true
  name: Fields
  nameWithType: IEntryTerm.Fields
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm.Fields
- uid: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.IEntryField}
  commentId: T:System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.IEntryField}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IEntryField>
  nameWithType: IList<IEntryField>
  fullName: System.Collections.Generic.IList<Sdl.Terminology.TerminologyProvider.Core.IEntryField>
  nameWithType.vb: IList(Of IEntryField)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.Terminology.TerminologyProvider.Core.IEntryField)
  name.vb: IList(Of IEntryField)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.IEntryField
    name: IEntryField
    nameWithType: IEntryField
    fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryField
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Terminology.TerminologyProvider.Core.IEntryField
    name: IEntryField
    nameWithType: IEntryField
    fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
