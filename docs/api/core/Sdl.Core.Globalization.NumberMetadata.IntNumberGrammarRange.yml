### YamlMime:ManagedReference
items:
- uid: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange
  commentId: T:Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange
  id: IntNumberGrammarRange
  parent: Sdl.Core.Globalization.NumberMetadata
  children:
  - Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.#ctor
  - Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.IsInRange(System.Int32)
  - Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.LowerBound
  - Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.RangeTransforms
  - Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.ToString
  - Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.UpperBound
  langs:
  - csharp
  - vb
  name: IntNumberGrammarRange
  nameWithType: IntNumberGrammarRange
  fullName: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange
  type: Class
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization.NumberMetadata
  summary: "\nDefines a number range (or set of repeating ranges) for which a pluralisation form can be used\n"
  syntax:
    content: public class IntNumberGrammarRange
    content.vb: Public Class IntNumberGrammarRange
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.IsInRange(System.Int32)
  commentId: M:Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.IsInRange(System.Int32)
  id: IsInRange(System.Int32)
  parent: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange
  langs:
  - csharp
  - vb
  name: IsInRange(Int32)
  nameWithType: IntNumberGrammarRange.IsInRange(Int32)
  fullName: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.IsInRange(System.Int32)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization.NumberMetadata
  summary: "\nReturns true if <code data-dev-comment-type=\"paramref\" class=\"paramref\">i</code> meets the conditions of this range specification\n"
  syntax:
    content: public bool IsInRange(int i)
    parameters:
    - id: i
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function IsInRange(i As Integer) As Boolean
  overload: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.IsInRange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.ToString
  commentId: M:Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.ToString
  id: ToString
  parent: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: IntNumberGrammarRange.ToString()
  fullName: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.ToString()
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization.NumberMetadata
  summary: "\n\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.#ctor
  commentId: M:Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.#ctor
  id: '#ctor'
  parent: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange
  langs:
  - csharp
  - vb
  name: IntNumberGrammarRange()
  nameWithType: IntNumberGrammarRange.IntNumberGrammarRange()
  fullName: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.IntNumberGrammarRange()
  type: Constructor
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization.NumberMetadata
  syntax:
    content: public IntNumberGrammarRange()
    content.vb: Public Sub New
  overload: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.RangeTransforms
  commentId: P:Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.RangeTransforms
  id: RangeTransforms
  parent: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange
  langs:
  - csharp
  - vb
  name: RangeTransforms
  nameWithType: IntNumberGrammarRange.RangeTransforms
  fullName: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.RangeTransforms
  type: Property
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization.NumberMetadata
  summary: "\nThe transformations to apply to an integer value to determine if it falls within a repeating range\n"
  syntax:
    content: public List<RangeTransform> RangeTransforms { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.Core.Globalization.NumberMetadata.RangeTransform}
    content.vb: Public Property RangeTransforms As List(Of RangeTransform)
  overload: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.RangeTransforms*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.LowerBound
  commentId: P:Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.LowerBound
  id: LowerBound
  parent: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange
  langs:
  - csharp
  - vb
  name: LowerBound
  nameWithType: IntNumberGrammarRange.LowerBound
  fullName: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.LowerBound
  type: Property
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization.NumberMetadata
  summary: "\nThe lower bound of the range (after any transformation)\n"
  syntax:
    content: public int LowerBound { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property LowerBound As Integer
  overload: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.LowerBound*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.UpperBound
  commentId: P:Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.UpperBound
  id: UpperBound
  parent: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange
  langs:
  - csharp
  - vb
  name: UpperBound
  nameWithType: IntNumberGrammarRange.UpperBound
  fullName: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.UpperBound
  type: Property
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization.NumberMetadata
  summary: "\nThe upper bound of the range (after any transformation), or null if there is no upper bound\n"
  syntax:
    content: public int? UpperBound { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property UpperBound As Integer?
  overload: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.UpperBound*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.Core.Globalization.NumberMetadata
  commentId: N:Sdl.Core.Globalization.NumberMetadata
  isExternal: true
  name: Sdl.Core.Globalization.NumberMetadata
  nameWithType: Sdl.Core.Globalization.NumberMetadata
  fullName: Sdl.Core.Globalization.NumberMetadata
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.IsInRange*
  commentId: Overload:Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.IsInRange
  isExternal: true
  name: IsInRange
  nameWithType: IntNumberGrammarRange.IsInRange
  fullName: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.IsInRange
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.ToString*
  commentId: Overload:Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.ToString
  isExternal: true
  name: ToString
  nameWithType: IntNumberGrammarRange.ToString
  fullName: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.#ctor*
  commentId: Overload:Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.#ctor
  isExternal: true
  name: IntNumberGrammarRange
  nameWithType: IntNumberGrammarRange.IntNumberGrammarRange
  fullName: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.IntNumberGrammarRange
- uid: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.RangeTransforms*
  commentId: Overload:Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.RangeTransforms
  isExternal: true
  name: RangeTransforms
  nameWithType: IntNumberGrammarRange.RangeTransforms
  fullName: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.RangeTransforms
- uid: System.Collections.Generic.List{Sdl.Core.Globalization.NumberMetadata.RangeTransform}
  commentId: T:System.Collections.Generic.List{Sdl.Core.Globalization.NumberMetadata.RangeTransform}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<RangeTransform>
  nameWithType: List<RangeTransform>
  fullName: System.Collections.Generic.List<Sdl.Core.Globalization.NumberMetadata.RangeTransform>
  nameWithType.vb: List(Of RangeTransform)
  fullName.vb: System.Collections.Generic.List(Of Sdl.Core.Globalization.NumberMetadata.RangeTransform)
  name.vb: List(Of RangeTransform)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Core.Globalization.NumberMetadata.RangeTransform
    name: RangeTransform
    nameWithType: RangeTransform
    fullName: Sdl.Core.Globalization.NumberMetadata.RangeTransform
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Core.Globalization.NumberMetadata.RangeTransform
    name: RangeTransform
    nameWithType: RangeTransform
    fullName: Sdl.Core.Globalization.NumberMetadata.RangeTransform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.LowerBound*
  commentId: Overload:Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.LowerBound
  isExternal: true
  name: LowerBound
  nameWithType: IntNumberGrammarRange.LowerBound
  fullName: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.LowerBound
- uid: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.UpperBound*
  commentId: Overload:Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.UpperBound
  isExternal: true
  name: UpperBound
  nameWithType: IntNumberGrammarRange.UpperBound
  fullName: Sdl.Core.Globalization.NumberMetadata.IntNumberGrammarRange.UpperBound
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
