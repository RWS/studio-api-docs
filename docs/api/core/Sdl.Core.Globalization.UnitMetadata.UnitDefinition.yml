### YamlMime:ManagedReference
items:
- uid: Sdl.Core.Globalization.UnitMetadata.UnitDefinition
  commentId: T:Sdl.Core.Globalization.UnitMetadata.UnitDefinition
  id: UnitDefinition
  parent: Sdl.Core.Globalization.UnitMetadata
  children:
  - Sdl.Core.Globalization.UnitMetadata.UnitDefinition.#ctor
  - Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitKey
  - Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitType
  langs:
  - csharp
  - vb
  name: UnitDefinition
  nameWithType: UnitDefinition
  fullName: Sdl.Core.Globalization.UnitMetadata.UnitDefinition
  type: Class
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization.UnitMetadata
  summary: "\nDefines units to be recognized, with optional type to indicate interchangeability during autosubtitution etc.\n"
  syntax:
    content: public class UnitDefinition
    content.vb: Public Class UnitDefinition
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.Globalization.UnitMetadata.UnitDefinition.#ctor
  commentId: M:Sdl.Core.Globalization.UnitMetadata.UnitDefinition.#ctor
  id: '#ctor'
  parent: Sdl.Core.Globalization.UnitMetadata.UnitDefinition
  langs:
  - csharp
  - vb
  name: UnitDefinition()
  nameWithType: UnitDefinition.UnitDefinition()
  fullName: Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitDefinition()
  type: Constructor
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization.UnitMetadata
  syntax:
    content: public UnitDefinition()
    content.vb: Public Sub New
  overload: Sdl.Core.Globalization.UnitMetadata.UnitDefinition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitKey
  commentId: P:Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitKey
  id: UnitKey
  parent: Sdl.Core.Globalization.UnitMetadata.UnitDefinition
  langs:
  - csharp
  - vb
  name: UnitKey
  nameWithType: UnitDefinition.UnitKey
  fullName: Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitKey
  type: Property
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization.UnitMetadata
  summary: "\nA well-known key identifying the type of the unit \ne.g. &quot;Mm&quot;, &quot;Mkg&quot;, &quot;BISin&quot;\n"
  remarks: "These values are mostly string versions of values in the enum Sdl.LanguagePlatform.Core.Tokenization.Unit\nbut can include other values for units not defined by that enum. When converted to \nSdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition, if <xref href=\"Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitKey\" data-throw-if-not-resolved=\"false\"></xref> corresponds\nto an enum value, the CustomUnitDefinition.Unit property will be set to that value. Otherwise,\nit will be set to Unit.NoUnit, and the CustomUnitDefinition.CategoryName property will be set to the\nvalue of <xref href=\"Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitKey\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public string UnitKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UnitKey As String
  overload: Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitType
  commentId: P:Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitType
  id: UnitType
  parent: Sdl.Core.Globalization.UnitMetadata.UnitDefinition
  langs:
  - csharp
  - vb
  name: UnitType
  nameWithType: UnitDefinition.UnitType
  fullName: Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitType
  type: Property
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization.UnitMetadata
  summary: "\nIf not null, a value indicating what other units it can be interchanged with during translation, \ne.g. &apos;Length&apos;, &apos;Area&apos; (as for values migrated from the enum Sdl.LanguagePlatform.Core.Tokenization.Unit)\nor an arbitrary identifier such as &apos;4&apos; (as for migrated &apos;anonymous&apos; types like mmol, umol ..)\n"
  syntax:
    content: public string UnitType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UnitType As String
  overload: Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.Core.Globalization.UnitMetadata
  commentId: N:Sdl.Core.Globalization.UnitMetadata
  isExternal: true
  name: Sdl.Core.Globalization.UnitMetadata
  nameWithType: Sdl.Core.Globalization.UnitMetadata
  fullName: Sdl.Core.Globalization.UnitMetadata
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.Globalization.UnitMetadata.UnitDefinition.#ctor*
  commentId: Overload:Sdl.Core.Globalization.UnitMetadata.UnitDefinition.#ctor
  isExternal: true
  name: UnitDefinition
  nameWithType: UnitDefinition.UnitDefinition
  fullName: Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitDefinition
- uid: Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitKey*
  commentId: Overload:Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitKey
  isExternal: true
  name: UnitKey
  nameWithType: UnitDefinition.UnitKey
  fullName: Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitType*
  commentId: Overload:Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitType
  isExternal: true
  name: UnitType
  nameWithType: UnitDefinition.UnitType
  fullName: Sdl.Core.Globalization.UnitMetadata.UnitDefinition.UnitType
