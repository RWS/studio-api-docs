### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.IPluginFilter
  commentId: T:Sdl.Core.PluginFramework.IPluginFilter
  id: IPluginFilter
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadExtension(Sdl.Core.PluginFramework.IPlugin,System.String)
  - Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadPlugin(System.String)
  langs:
  - csharp
  - vb
  name: IPluginFilter
  nameWithType: IPluginFilter
  fullName: Sdl.Core.PluginFramework.IPluginFilter
  type: Interface
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nProvides control over whether certain plug-ins or individual extensions are loaded.\n"
  syntax:
    content: public interface IPluginFilter
    content.vb: Public Interface IPluginFilter
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadPlugin(System.String)
  commentId: M:Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadPlugin(System.String)
  id: ShouldLoadPlugin(System.String)
  parent: Sdl.Core.PluginFramework.IPluginFilter
  langs:
  - csharp
  - vb
  name: ShouldLoadPlugin(String)
  nameWithType: IPluginFilter.ShouldLoadPlugin(String)
  fullName: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadPlugin(System.String)
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nDetermines whether the specified plug-in should be loaded.\n"
  syntax:
    content: bool ShouldLoadPlugin(string pluginName)
    parameters:
    - id: pluginName
      type: System.String
      description: Name of the plugin.
    return:
      type: System.Boolean
    content.vb: Function ShouldLoadPlugin(pluginName As String) As Boolean
  overload: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadPlugin*
- uid: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadExtension(Sdl.Core.PluginFramework.IPlugin,System.String)
  commentId: M:Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadExtension(Sdl.Core.PluginFramework.IPlugin,System.String)
  id: ShouldLoadExtension(Sdl.Core.PluginFramework.IPlugin,System.String)
  parent: Sdl.Core.PluginFramework.IPluginFilter
  langs:
  - csharp
  - vb
  name: ShouldLoadExtension(IPlugin, String)
  nameWithType: IPluginFilter.ShouldLoadExtension(IPlugin, String)
  fullName: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadExtension(Sdl.Core.PluginFramework.IPlugin, System.String)
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nDetermines whether the specified extension should be loaded.\n"
  syntax:
    content: bool ShouldLoadExtension(IPlugin plugin, string extensionId)
    parameters:
    - id: plugin
      type: Sdl.Core.PluginFramework.IPlugin
      description: The plugin.
    - id: extensionId
      type: System.String
      description: The extension id.
    return:
      type: System.Boolean
    content.vb: Function ShouldLoadExtension(plugin As IPlugin, extensionId As String) As Boolean
  overload: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadExtension*
references:
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadPlugin*
  commentId: Overload:Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadPlugin
  isExternal: true
  name: ShouldLoadPlugin
  nameWithType: IPluginFilter.ShouldLoadPlugin
  fullName: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadPlugin
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadExtension*
  commentId: Overload:Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadExtension
  isExternal: true
  name: ShouldLoadExtension
  nameWithType: IPluginFilter.ShouldLoadExtension
  fullName: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadExtension
- uid: Sdl.Core.PluginFramework.IPlugin
  commentId: T:Sdl.Core.PluginFramework.IPlugin
  parent: Sdl.Core.PluginFramework
  isExternal: true
  name: IPlugin
  nameWithType: IPlugin
  fullName: Sdl.Core.PluginFramework.IPlugin
