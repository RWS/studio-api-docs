### YamlMime:ManagedReference
items:
- uid: Sdl.Core.Globalization.LocalizableString
  commentId: T:Sdl.Core.Globalization.LocalizableString
  id: LocalizableString
  parent: Sdl.Core.Globalization
  children:
  - Sdl.Core.Globalization.LocalizableString.#ctor(System.String)
  - Sdl.Core.Globalization.LocalizableString.Content
  - Sdl.Core.Globalization.LocalizableString.IsResource
  - Sdl.Core.Globalization.LocalizableString.RawContent
  - Sdl.Core.Globalization.LocalizableString.ToString
  langs:
  - csharp
  - vb
  name: LocalizableString
  nameWithType: LocalizableString
  fullName: Sdl.Core.Globalization.LocalizableString
  type: Class
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nData type used for strings in Spring configuration files that may need to be localized.\n"
  remarks: "\n<p>\nIf this object is constructed from a plain text string it works like a normal <code>System.String</code>.\n</p>\n<p>\nTo reference a resource ID, create this object from a resource identifier string, in the following format:\n<code>resource://[AssemblyPath\\AssemblyName]/[resource ID]</code>, where <code>[AssemblyPath\\AssemblyName]</code>\nis the name of the base assembly (with optional path) that the string resource is located in and\n<code>[resource ID]</code> is the ID of the string resource from which the localized string should be loaded.\n</p>\n<p>\nThe <code>ResourceManager</code> is used to load the string from the assembly, so a localized\nversion of the string (depending on the current thread locale) should be returned if available.\n</p>\n"
  syntax:
    content: public class LocalizableString
    content.vb: Public Class LocalizableString
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.Globalization.LocalizableString.#ctor(System.String)
  commentId: M:Sdl.Core.Globalization.LocalizableString.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.Core.Globalization.LocalizableString
  langs:
  - csharp
  - vb
  name: LocalizableString(String)
  nameWithType: LocalizableString.LocalizableString(String)
  fullName: Sdl.Core.Globalization.LocalizableString.LocalizableString(System.String)
  type: Constructor
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nCreate from a literal string or resource identifier. \n"
  remarks: "\n<p>\nIf the content starts with &quot;assembly://&quot; it is deemed to be a resource identifier.\n</p>\n<p>\nResource identifiers use the following format:\n<code>assembly://[AssemblyPath\\AssemblyName]/[resource ID]</code>, where <code>[AssemblyPath\\AssemblyName]</code>\nis the name of the base assembly that the string resource is located in (with an optional path, \nspecify this only for assemblies not located in the default application folder) and \n<code>[resource ID]</code> is the ID of the string resource from which the localized string should be loaded.\n</p>\n"
  syntax:
    content: public LocalizableString(string content)
    parameters:
    - id: content
      type: System.String
      description: the literal string to use in the construction
    content.vb: Public Sub New(content As String)
  overload: Sdl.Core.Globalization.LocalizableString.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.LocalizableString.ToString
  commentId: M:Sdl.Core.Globalization.LocalizableString.ToString
  id: ToString
  parent: Sdl.Core.Globalization.LocalizableString
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: LocalizableString.ToString()
  fullName: Sdl.Core.Globalization.LocalizableString.ToString()
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nReturns the localized text this string represents.\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The localized text this string represents.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sdl.Core.Globalization.LocalizableString.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.Core.Globalization.LocalizableString.Content
  commentId: P:Sdl.Core.Globalization.LocalizableString.Content
  id: Content
  parent: Sdl.Core.Globalization.LocalizableString
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: LocalizableString.Content
  fullName: Sdl.Core.Globalization.LocalizableString.Content
  type: Property
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nReturns the localized text this string represents.\n"
  remarks: Throws exceptions if using a resource ID and the assembly or string cannot be loaded.
  syntax:
    content: public string Content { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Content As String
  overload: Sdl.Core.Globalization.LocalizableString.Content*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.Globalization.LocalizableString.RawContent
  commentId: P:Sdl.Core.Globalization.LocalizableString.RawContent
  id: RawContent
  parent: Sdl.Core.Globalization.LocalizableString
  langs:
  - csharp
  - vb
  name: RawContent
  nameWithType: LocalizableString.RawContent
  fullName: Sdl.Core.Globalization.LocalizableString.RawContent
  type: Property
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nReturns the string or resource ID this localizable string uses to get the localized text.\n"
  syntax:
    content: public string RawContent { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RawContent As String
  overload: Sdl.Core.Globalization.LocalizableString.RawContent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.Globalization.LocalizableString.IsResource
  commentId: P:Sdl.Core.Globalization.LocalizableString.IsResource
  id: IsResource
  parent: Sdl.Core.Globalization.LocalizableString
  langs:
  - csharp
  - vb
  name: IsResource
  nameWithType: LocalizableString.IsResource
  fullName: Sdl.Core.Globalization.LocalizableString.IsResource
  type: Property
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\n<code>true</code> if the localizable text is retrieved from an assembly.\n"
  syntax:
    content: public bool IsResource { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsResource As Boolean
  overload: Sdl.Core.Globalization.LocalizableString.IsResource*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.Core.Globalization
  commentId: N:Sdl.Core.Globalization
  isExternal: true
  name: Sdl.Core.Globalization
  nameWithType: Sdl.Core.Globalization
  fullName: Sdl.Core.Globalization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.Globalization.LocalizableString.#ctor*
  commentId: Overload:Sdl.Core.Globalization.LocalizableString.#ctor
  isExternal: true
  name: LocalizableString
  nameWithType: LocalizableString.LocalizableString
  fullName: Sdl.Core.Globalization.LocalizableString.LocalizableString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.Globalization.LocalizableString.ToString*
  commentId: Overload:Sdl.Core.Globalization.LocalizableString.ToString
  isExternal: true
  name: ToString
  nameWithType: LocalizableString.ToString
  fullName: Sdl.Core.Globalization.LocalizableString.ToString
- uid: Sdl.Core.Globalization.LocalizableString.Content*
  commentId: Overload:Sdl.Core.Globalization.LocalizableString.Content
  isExternal: true
  name: Content
  nameWithType: LocalizableString.Content
  fullName: Sdl.Core.Globalization.LocalizableString.Content
- uid: Sdl.Core.Globalization.LocalizableString.RawContent*
  commentId: Overload:Sdl.Core.Globalization.LocalizableString.RawContent
  isExternal: true
  name: RawContent
  nameWithType: LocalizableString.RawContent
  fullName: Sdl.Core.Globalization.LocalizableString.RawContent
- uid: Sdl.Core.Globalization.LocalizableString.IsResource*
  commentId: Overload:Sdl.Core.Globalization.LocalizableString.IsResource
  isExternal: true
  name: IsResource
  nameWithType: LocalizableString.IsResource
  fullName: Sdl.Core.Globalization.LocalizableString.IsResource
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
