### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.PluginState
  commentId: T:Sdl.Core.PluginFramework.PluginState
  id: PluginState
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.PluginState.#ctor(System.Boolean)
  - Sdl.Core.PluginFramework.PluginState.Enabled
  langs:
  - csharp
  - vb
  name: PluginState
  nameWithType: PluginState
  fullName: Sdl.Core.PluginFramework.PluginState
  type: Class
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nCaptures the state of a plug-in, which can be saved into a plugin cache (see <xref href=\"Sdl.Core.PluginFramework.IPluginCache\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  syntax:
    content: 'public class PluginState : Object'
    content.vb: >-
      Public Class PluginState
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.PluginFramework.PluginState.#ctor(System.Boolean)
  commentId: M:Sdl.Core.PluginFramework.PluginState.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Sdl.Core.PluginFramework.PluginState
  langs:
  - csharp
  - vb
  name: PluginState(Boolean)
  nameWithType: PluginState.PluginState(Boolean)
  fullName: Sdl.Core.PluginFramework.PluginState.PluginState(System.Boolean)
  type: Constructor
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nConstructor with <xref href=\"Sdl.Core.PluginFramework.PluginState.Enabled\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  syntax:
    content: public PluginState(bool enabled)
    parameters:
    - id: enabled
      type: System.Boolean
      description: True if the plug-in is enabled
    content.vb: Public Sub New(enabled As Boolean)
  overload: Sdl.Core.PluginFramework.PluginState.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.PluginState.Enabled
  commentId: P:Sdl.Core.PluginFramework.PluginState.Enabled
  id: Enabled
  parent: Sdl.Core.PluginFramework.PluginState
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: PluginState.Enabled
  fullName: Sdl.Core.PluginFramework.PluginState.Enabled
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nGets or sets whether a plug-in is enabled.\n"
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: Sdl.Core.PluginFramework.PluginState.Enabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.PluginState.#ctor*
  commentId: Overload:Sdl.Core.PluginFramework.PluginState.#ctor
  isExternal: true
  name: PluginState
  nameWithType: PluginState.PluginState
  fullName: Sdl.Core.PluginFramework.PluginState.PluginState
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.Core.PluginFramework.PluginState.Enabled*
  commentId: Overload:Sdl.Core.PluginFramework.PluginState.Enabled
  isExternal: true
  name: Enabled
  nameWithType: PluginState.Enabled
  fullName: Sdl.Core.PluginFramework.PluginState.Enabled
