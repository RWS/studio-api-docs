### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser
  id: AbstractNativeFileParser
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.#ctor
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.AfterParsing
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.BeforeParsing
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.CurrentStage
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Dispose
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Dispose(System.Boolean)
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.DuringParsing
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Finalize
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OnProgress(System.Byte)
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OnProgress(System.Object,Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs)
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Output
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OutputText(System.String)
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.ParseNext
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Progress
  langs:
  - csharp
  - vb
  name: AbstractNativeFileParser
  nameWithType: AbstractNativeFileParser
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nAbstract base class that provides boilerplate implementation\nfor native file parsers.\n\nDeriving your file parser from this class will save you some\nimplementation work. Provides a default implementation of the\n<xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.ParseNext\" data-throw-if-not-resolved=\"false\"></xref> method. You can override the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.BeforeParsing\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.DuringParsing\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.AfterParsing\" data-throw-if-not-resolved=\"false\"></xref> in\nyour parser implementation in order to separate initialization and\nclean-up code from the core parsing code.\n"
  syntax:
    content: 'public abstract class AbstractNativeFileParser : AbstractNativeFileTypeComponent, INativeContentStreamMessageReporter, IBasicMessageReporter, INativeFileParser, INativeFileTypeComponent, IParser, IDisposable'
    content.vb: >-
      Public MustInherit Class AbstractNativeFileParser
          Inherits AbstractNativeFileTypeComponent
          Implements INativeContentStreamMessageReporter, IBasicMessageReporter, INativeFileParser, INativeFileTypeComponent, IParser, IDisposable
  inheritance:
  - System.Object
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeContentStreamMessageReporter
  - Sdl.FileTypeSupport.Framework.NativeApi.IBasicMessageReporter
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeFileTypeComponent
  - Sdl.FileTypeSupport.Framework.NativeApi.IParser
  - System.IDisposable
  inheritedMembers:
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.ReportMessage(System.Object,System.String,Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel,System.String,Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId,Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId)
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.ReportMessage(System.Object,System.String,Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel,System.String,System.String)
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.PropertiesFactory
  - Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.MessageReporter
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser
  langs:
  - csharp
  - vb
  name: AbstractNativeFileParser()
  nameWithType: AbstractNativeFileParser.AbstractNativeFileParser()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.AbstractNativeFileParser()
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nProtected constructor that should only be called by derived classes\n"
  syntax:
    content: protected AbstractNativeFileParser()
    content.vb: Protected Sub New
  overload: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OnProgress(System.Object,Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OnProgress(System.Object,Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs)
  id: OnProgress(System.Object,Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser
  langs:
  - csharp
  - vb
  name: OnProgress(Object, ProgressEventArgs)
  nameWithType: AbstractNativeFileParser.OnProgress(Object, ProgressEventArgs)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OnProgress(System.Object, Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nHelper method to fire the Progress event\n"
  syntax:
    content: public virtual void OnProgress(object sender, ProgressEventArgs args)
    parameters:
    - id: sender
      type: System.Object
      description: the event source
    - id: args
      type: Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs
      description: progress value between 0 and 100
    content.vb: Public Overridable Sub OnProgress(sender As Object, args As ProgressEventArgs)
  overload: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OnProgress*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OnProgress(System.Byte)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OnProgress(System.Byte)
  id: OnProgress(System.Byte)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser
  langs:
  - csharp
  - vb
  name: OnProgress(Byte)
  nameWithType: AbstractNativeFileParser.OnProgress(Byte)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OnProgress(System.Byte)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nHelper method to set up the Progress event\n"
  syntax:
    content: public void OnProgress(byte percent)
    parameters:
    - id: percent
      type: System.Byte
    content.vb: Public Sub OnProgress(percent As Byte)
  overload: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OnProgress*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OutputText(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OutputText(System.String)
  id: OutputText(System.String)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser
  langs:
  - csharp
  - vb
  name: OutputText(String)
  nameWithType: AbstractNativeFileParser.OutputText(String)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OutputText(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nHelper method to output plain text\n"
  syntax:
    content: public void OutputText(string text)
    parameters:
    - id: text
      type: System.String
    content.vb: Public Sub OutputText(text As String)
  overload: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OutputText*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.BeforeParsing
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.BeforeParsing
  id: BeforeParsing
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser
  langs:
  - csharp
  - vb
  name: BeforeParsing()
  nameWithType: AbstractNativeFileParser.BeforeParsing()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.BeforeParsing()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe implementation of <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.ParseNext\" data-throw-if-not-resolved=\"false\"></xref> will call this method\nthe very first time that ParseNext is called.\n\nOverride this method to perform setup work for the parsing such as\ninitializing the state, opening the file to be parsed, etc.\n\nThe default implementation of this method does nothing.\n"
  syntax:
    content: protected virtual void BeforeParsing()
    content.vb: Protected Overridable Sub BeforeParsing
  overload: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.BeforeParsing*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.DuringParsing
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.DuringParsing
  id: DuringParsing
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser
  langs:
  - csharp
  - vb
  name: DuringParsing()
  nameWithType: AbstractNativeFileParser.DuringParsing()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.DuringParsing()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe implementation of <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.ParseNext\" data-throw-if-not-resolved=\"false\"></xref> will call this method\nto perform actual parsing of the file.\n\n<xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.BeforeParsing\" data-throw-if-not-resolved=\"false\"></xref> will always be called before this method.\n\nOverride this method to perform the parsing in suitably small chunks.\n\nReturns <code>true</code> as long as there is more content to be parsed.\n\nOnce this function returns <code>false</code>, the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.AfterParsing\" data-throw-if-not-resolved=\"false\"></xref> method\nwill be called once.\n\nDuring parsing the implementation may call <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OnProgress(System.Object%2cSdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs)\" data-throw-if-not-resolved=\"false\"></xref> to report the current progress.\n\nThe default implementation returns false.\n"
  syntax:
    content: protected virtual bool DuringParsing()
    return:
      type: System.Boolean
      description: True if there is more content to be parsed, false when parsing has been completed
    content.vb: Protected Overridable Function DuringParsing As Boolean
  overload: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.DuringParsing*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.AfterParsing
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.AfterParsing
  id: AfterParsing
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser
  langs:
  - csharp
  - vb
  name: AfterParsing()
  nameWithType: AbstractNativeFileParser.AfterParsing()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.AfterParsing()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe implementation of <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.ParseNext\" data-throw-if-not-resolved=\"false\"></xref> will call this method once, after parsing\nhas been completed (which is indicated by <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.DuringParsing\" data-throw-if-not-resolved=\"false\"></xref> returning false).\n\nOverride this method to do clean-up work such as closing the file etc. once parsing is complete.\n\nThe default implementation does nothing.\n"
  syntax:
    content: protected virtual void AfterParsing()
    content.vb: Protected Overridable Sub AfterParsing
  overload: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.AfterParsing*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.ParseNext
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.ParseNext
  id: ParseNext
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser
  langs:
  - csharp
  - vb
  name: ParseNext()
  nameWithType: AbstractNativeFileParser.ParseNext()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.ParseNext()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nDefault implementation that takes care of dividing the parsing into \nthree stages, before parsing, during parsing, and after parsing, by calling\nthe methods <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.BeforeParsing\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.DuringParsing\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.AfterParsing\" data-throw-if-not-resolved=\"false\"></xref>\nthat derived classes should normally override to do the setup, parsing, and clean-up work.\n\nDerived classes do not need to override this method unless they need to add additional functionality\noutside of the three parsing implementation methods.\n"
  syntax:
    content: public virtual bool ParseNext()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function ParseNext As Boolean
  overload: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.ParseNext*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IParser.ParseNext
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Dispose
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Dispose
  id: Dispose
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: AbstractNativeFileParser.Dispose()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Dispose()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nImplements IDisposable. Just calls Dispose saying that this is an explicit disposal and \ntells the GC not to call the Finalizer.\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Dispose(System.Boolean)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: AbstractNativeFileParser.Dispose(Boolean)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Dispose(System.Boolean)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nLast change for the Parser to dispose manage and unmanged objects.\nIt can be overriden by subclases.\n"
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: indicates if the dispose is explicit or implicit (from GC)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Finalize
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Finalize
  id: Finalize
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: AbstractNativeFileParser.Finalize()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Finalize()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe distructor just calls Dispose with false parameter specifying this is a cakl from GC.\n"
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.CurrentStage
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.CurrentStage
  id: CurrentStage
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser
  langs:
  - csharp
  - vb
  name: CurrentStage
  nameWithType: AbstractNativeFileParser.CurrentStage
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.CurrentStage
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe stage of processing that the parser has reached\n"
  syntax:
    content: protected AbstractNativeFileParser.Stage CurrentStage { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Stage
    content.vb: Protected Property CurrentStage As AbstractNativeFileParser.Stage
  overload: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.CurrentStage*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Output
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Output
  id: Output
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser
  langs:
  - csharp
  - vb
  name: Output
  nameWithType: AbstractNativeFileParser.Output
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Output
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nDefault implementation of the Output property\n"
  syntax:
    content: public virtual INativeExtractionContentHandler Output { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentHandler
    content.vb: Public Overridable Property Output As INativeExtractionContentHandler
  overload: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Output*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser.Output
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Progress
  commentId: E:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Progress
  id: Progress
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: AbstractNativeFileParser.Progress
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Progress
  type: Event
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nProgress reporting events, typically attached to when a progress reporter is used\n"
  syntax:
    content: public event EventHandler<ProgressEventArgs> Progress
    return:
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs}
    content.vb: Public Event Progress As EventHandler(Of ProgressEventArgs)
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IParser.Progress
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: AbstractNativeFileTypeComponent
  nameWithType: AbstractNativeFileTypeComponent
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentStreamMessageReporter
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeContentStreamMessageReporter
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: INativeContentStreamMessageReporter
  nameWithType: INativeContentStreamMessageReporter
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentStreamMessageReporter
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IBasicMessageReporter
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IBasicMessageReporter
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IBasicMessageReporter
  nameWithType: IBasicMessageReporter
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IBasicMessageReporter
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: INativeFileParser
  nameWithType: INativeFileParser
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileTypeComponent
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeFileTypeComponent
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: INativeFileTypeComponent
  nameWithType: INativeFileTypeComponent
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileTypeComponent
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IParser
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IParser
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IParser
  nameWithType: IParser
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IParser
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.ReportMessage(System.Object,System.String,Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel,System.String,Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId,Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.ReportMessage(System.Object,System.String,Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel,System.String,Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId,Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent
  isExternal: true
  name: ReportMessage(Object, String, ErrorLevel, String, LocationMarkerId, LocationMarkerId)
  nameWithType: AbstractNativeFileTypeComponent.ReportMessage(Object, String, ErrorLevel, String, LocationMarkerId, LocationMarkerId)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.ReportMessage(System.Object, System.String, Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel, System.String, Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId, Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.ReportMessage(System.Object,System.String,Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel,System.String,Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId,Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId)
    name: ReportMessage
    nameWithType: AbstractNativeFileTypeComponent.ReportMessage
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.ReportMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel
    name: ErrorLevel
    nameWithType: ErrorLevel
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId
    name: LocationMarkerId
    nameWithType: LocationMarkerId
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId
    name: LocationMarkerId
    nameWithType: LocationMarkerId
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.ReportMessage(System.Object,System.String,Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel,System.String,Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId,Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId)
    name: ReportMessage
    nameWithType: AbstractNativeFileTypeComponent.ReportMessage
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.ReportMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel
    name: ErrorLevel
    nameWithType: ErrorLevel
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId
    name: LocationMarkerId
    nameWithType: LocationMarkerId
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId
    name: LocationMarkerId
    nameWithType: LocationMarkerId
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.ReportMessage(System.Object,System.String,Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel,System.String,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.ReportMessage(System.Object,System.String,Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel,System.String,System.String)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent
  isExternal: true
  name: ReportMessage(Object, String, ErrorLevel, String, String)
  nameWithType: AbstractNativeFileTypeComponent.ReportMessage(Object, String, ErrorLevel, String, String)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.ReportMessage(System.Object, System.String, Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel, System.String, System.String)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.ReportMessage(System.Object,System.String,Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel,System.String,System.String)
    name: ReportMessage
    nameWithType: AbstractNativeFileTypeComponent.ReportMessage
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.ReportMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel
    name: ErrorLevel
    nameWithType: ErrorLevel
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.ReportMessage(System.Object,System.String,Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel,System.String,System.String)
    name: ReportMessage
    nameWithType: AbstractNativeFileTypeComponent.ReportMessage
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.ReportMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel
    name: ErrorLevel
    nameWithType: ErrorLevel
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ErrorLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.PropertiesFactory
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.PropertiesFactory
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent
  isExternal: true
  name: PropertiesFactory
  nameWithType: AbstractNativeFileTypeComponent.PropertiesFactory
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.PropertiesFactory
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.MessageReporter
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.MessageReporter
  parent: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent
  isExternal: true
  name: MessageReporter
  nameWithType: AbstractNativeFileTypeComponent.MessageReporter
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileTypeComponent.MessageReporter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.#ctor
  isExternal: true
  name: AbstractNativeFileParser
  nameWithType: AbstractNativeFileParser.AbstractNativeFileParser
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.AbstractNativeFileParser
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OnProgress*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OnProgress
  isExternal: true
  name: OnProgress
  nameWithType: AbstractNativeFileParser.OnProgress
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OnProgress
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: ProgressEventArgs
  nameWithType: ProgressEventArgs
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OutputText*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OutputText
  isExternal: true
  name: OutputText
  nameWithType: AbstractNativeFileParser.OutputText
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.OutputText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.BeforeParsing*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.BeforeParsing
  isExternal: true
  name: BeforeParsing
  nameWithType: AbstractNativeFileParser.BeforeParsing
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.BeforeParsing
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.DuringParsing*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.DuringParsing
  isExternal: true
  name: DuringParsing
  nameWithType: AbstractNativeFileParser.DuringParsing
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.DuringParsing
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.AfterParsing*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.AfterParsing
  isExternal: true
  name: AfterParsing
  nameWithType: AbstractNativeFileParser.AfterParsing
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.AfterParsing
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.ParseNext*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.ParseNext
  isExternal: true
  name: ParseNext
  nameWithType: AbstractNativeFileParser.ParseNext
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.ParseNext
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IParser.ParseNext
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IParser.ParseNext
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IParser
  isExternal: true
  name: ParseNext()
  nameWithType: IParser.ParseNext()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IParser.ParseNext()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IParser.ParseNext
    name: ParseNext
    nameWithType: IParser.ParseNext
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IParser.ParseNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IParser.ParseNext
    name: ParseNext
    nameWithType: IParser.ParseNext
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IParser.ParseNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Dispose*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Dispose
  isExternal: true
  name: Dispose
  nameWithType: AbstractNativeFileParser.Dispose
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Finalize*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Finalize
  isExternal: true
  name: Finalize
  nameWithType: AbstractNativeFileParser.Finalize
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Finalize
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.CurrentStage*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.CurrentStage
  isExternal: true
  name: CurrentStage
  nameWithType: AbstractNativeFileParser.CurrentStage
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.CurrentStage
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Stage
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Stage
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: AbstractNativeFileParser.Stage
  nameWithType: AbstractNativeFileParser.Stage
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Stage
- uid: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Output*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Output
  isExternal: true
  name: Output
  nameWithType: AbstractNativeFileParser.Output
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.AbstractNativeFileParser.Output
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser.Output
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser.Output
  parent: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser
  isExternal: true
  name: Output
  nameWithType: INativeFileParser.Output
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser.Output
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentHandler
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentHandler
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: INativeExtractionContentHandler
  nameWithType: INativeExtractionContentHandler
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentHandler
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IParser.Progress
  commentId: E:Sdl.FileTypeSupport.Framework.NativeApi.IParser.Progress
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IParser
  isExternal: true
  name: Progress
  nameWithType: IParser.Progress
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IParser.Progress
- uid: System.EventHandler{Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs}
  commentId: T:System.EventHandler{Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ProgressEventArgs>
  nameWithType: EventHandler<ProgressEventArgs>
  fullName: System.EventHandler<Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs>
  nameWithType.vb: EventHandler(Of ProgressEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs)
  name.vb: EventHandler(Of ProgressEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
