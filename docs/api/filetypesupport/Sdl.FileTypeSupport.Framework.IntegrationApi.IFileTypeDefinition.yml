### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  id: IFileTypeDefinition
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildAdditionalGeneratorsInfo
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildBilingualDocumentGenerator
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildExtractor
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildGenerator(Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildNativeGenerator
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewApplication(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewControl(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewControlId)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewSetsFactory
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildQuickInsertIdsList
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildQuickTagsFactory
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildSubContentExtractor
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildSubContentGenerator
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildVerifierCollection
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.ComponentBuilder
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.CustomizationLevel
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.FileTypeInformation
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.GetQuickInserts(Sdl.Core.Settings.ISettingsBundle,Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.IsSupportedFilename(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.SniffFile(System.String,Sdl.Core.Globalization.Language,Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter,Sdl.Core.Settings.ISettingsBundle)
  langs:
  - csharp
  - vb
  name: IFileTypeDefinition
  nameWithType: IFileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nRepresents the functionality of a file type definition as a read-only\nobject, which can be used to instantiate the file type support components.\n\nThe file type definition includes all information on the support\nfor a specific file type.\n\nThe file type definition uses a IFileTypeComponentBuilder to retrieve the\nrelevant information from persistent storage, e.g. file type definition\nXML files or database tables.\n"
  syntax:
    content: public interface IFileTypeDefinition
    content.vb: Public Interface IFileTypeDefinition
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildQuickTagsFactory
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildQuickTagsFactory
  id: BuildQuickTagsFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: BuildQuickTagsFactory()
  nameWithType: IFileTypeDefinition.BuildQuickTagsFactory()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildQuickTagsFactory()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCreates the factory for QuickTags available for this file type (if any).\n"
  syntax:
    content: IQuickTagsFactory BuildQuickTagsFactory()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory
    content.vb: Function BuildQuickTagsFactory As IQuickTagsFactory
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildQuickTagsFactory*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.GetQuickInserts(Sdl.Core.Settings.ISettingsBundle,Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.GetQuickInserts(Sdl.Core.Settings.ISettingsBundle,Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  id: GetQuickInserts(Sdl.Core.Settings.ISettingsBundle,Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: GetQuickInserts(ISettingsBundle, IFileProperties)
  nameWithType: IFileTypeDefinition.GetQuickInserts(ISettingsBundle, IFileProperties)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.GetQuickInserts(Sdl.Core.Settings.ISettingsBundle, Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets a collection of QuickInserts. This consists of any Default QuickInserts plus any\ncustom ones as well...\n"
  syntax:
    content: IQuickTags GetQuickInserts(ISettingsBundle settingsBundle, IFileProperties fileProperties)
    parameters:
    - id: settingsBundle
      type: Sdl.Core.Settings.ISettingsBundle
      description: settingsBundle
    - id: fileProperties
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
      description: fileProperties
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTags
      description: IQuickTags object
    content.vb: Function GetQuickInserts(settingsBundle As ISettingsBundle, fileProperties As IFileProperties) As IQuickTags
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.GetQuickInserts*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildQuickInsertIdsList
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildQuickInsertIdsList
  id: BuildQuickInsertIdsList
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: BuildQuickInsertIdsList()
  nameWithType: IFileTypeDefinition.BuildQuickInsertIdsList()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildQuickInsertIdsList()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReturns a list of QuickInsertIds which the given file type defines\n"
  syntax:
    content: List<QuickInsertIds> BuildQuickInsertIdsList()
    return:
      type: System.Collections.Generic.List{Sdl.FileTypeSupport.Framework.IntegrationApi.QuickInserts.QuickInsertIds}
    content.vb: Function BuildQuickInsertIdsList As List(Of QuickInsertIds)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildQuickInsertIdsList*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewSetsFactory
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewSetsFactory
  id: BuildPreviewSetsFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: BuildPreviewSetsFactory()
  nameWithType: IFileTypeDefinition.BuildPreviewSetsFactory()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewSetsFactory()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCreates the factory for preview sets available for this file type (if any).\n"
  syntax:
    content: IPreviewSetsFactory BuildPreviewSetsFactory()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
    content.vb: Function BuildPreviewSetsFactory As IPreviewSetsFactory
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewSetsFactory*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildExtractor
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildExtractor
  id: BuildExtractor
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: BuildExtractor()
  nameWithType: IFileTypeDefinition.BuildExtractor()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildExtractor()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCalled by the file type manager to instantiate an extractor for the supported file type.\n"
  remarks: "\nUnlike the file generator, the extractor can be used to parse bilingual documents\nas well as native files.\n"
  syntax:
    content: IFileExtractor BuildExtractor()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
    content.vb: Function BuildExtractor As IFileExtractor
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildExtractor*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildSubContentExtractor
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildSubContentExtractor
  id: BuildSubContentExtractor
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: BuildSubContentExtractor()
  nameWithType: IFileTypeDefinition.BuildSubContentExtractor()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildSubContentExtractor()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCalled by the FileExtractor to instantiate a sub-content extractor for the supported file type\n"
  syntax:
    content: ISubContentExtractor BuildSubContentExtractor()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
    content.vb: Function BuildSubContentExtractor As ISubContentExtractor
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildSubContentExtractor*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildSubContentGenerator
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildSubContentGenerator
  id: BuildSubContentGenerator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: BuildSubContentGenerator()
  nameWithType: IFileTypeDefinition.BuildSubContentGenerator()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildSubContentGenerator()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCalled by the FileGenerator to instantiate a sub-content generator for the supported file type\n"
  syntax:
    content: ISubContentGenerator BuildSubContentGenerator()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentGenerator
    content.vb: Function BuildSubContentGenerator As ISubContentGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildSubContentGenerator*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildNativeGenerator
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildNativeGenerator
  id: BuildNativeGenerator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: BuildNativeGenerator()
  nameWithType: IFileTypeDefinition.BuildNativeGenerator()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildNativeGenerator()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCalled by the file type manager to create an instance of the default generator for this particular file type.\n"
  syntax:
    content: IFileGenerator BuildNativeGenerator()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileGenerator
      description: >-
        A file generator, or <code>null</code> if the file type only supports bilingual

        document output, in which case <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildBilingualDocumentGenerator" data-throw-if-not-resolved="false"></xref> should be used instead.
    content.vb: Function BuildNativeGenerator As IFileGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildNativeGenerator*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildBilingualDocumentGenerator
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildBilingualDocumentGenerator
  id: BuildBilingualDocumentGenerator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: BuildBilingualDocumentGenerator()
  nameWithType: IFileTypeDefinition.BuildBilingualDocumentGenerator()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildBilingualDocumentGenerator()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCalled by the file type manager to create an instance of the default intermediate bilingual \ndocument generator for this particular file type.\n"
  remarks: "\n<p>\nThis is only intended for file types that can be used to fully serialize the content of\nthe bilingual object model (e.g. SDL XLIFF).\n</p>\n"
  syntax:
    content: IBilingualDocumentGenerator BuildBilingualDocumentGenerator()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
      description: >-
        <code>Null</code> if the file type definition does not represent a bilingual file format that
                    can be used as intermediate storage for bilingual documents (e.g. SDL XLIFF), in which
                    case <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildNativeGenerator" data-throw-if-not-resolved="false"></xref> should be used instead.
    content.vb: Function BuildBilingualDocumentGenerator As IBilingualDocumentGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildBilingualDocumentGenerator*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildGenerator(Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildGenerator(Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId)
  id: BuildGenerator(Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: BuildGenerator(GeneratorId)
  nameWithType: IFileTypeDefinition.BuildGenerator(GeneratorId)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildGenerator(Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCalled to create an instance of the generator of the specified type.\n"
  syntax:
    content: IAbstractGenerator BuildGenerator(GeneratorId generatorId)
    parameters:
    - id: generatorId
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId
      description: "Must be a generator type defined in the file type definition, or \n<code>GenertorId.Default</code>, which returns the default native or bilingual document generator\nfor the file type."
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractGenerator
      description: A native or bilingual document generator
    content.vb: Function BuildGenerator(generatorId As GeneratorId) As IAbstractGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildGenerator*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildAdditionalGeneratorsInfo
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildAdditionalGeneratorsInfo
  id: BuildAdditionalGeneratorsInfo
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: BuildAdditionalGeneratorsInfo()
  nameWithType: IFileTypeDefinition.BuildAdditionalGeneratorsInfo()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildAdditionalGeneratorsInfo()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCalled to create an instance of the additional generator information specified for this particular file type.\n"
  syntax:
    content: IAdditionalGeneratorsInfo BuildAdditionalGeneratorsInfo()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IAdditionalGeneratorsInfo
      description: An additional generators info object
    content.vb: Function BuildAdditionalGeneratorsInfo As IAdditionalGeneratorsInfo
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildAdditionalGeneratorsInfo*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewControl(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewControlId)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewControl(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewControlId)
  id: BuildPreviewControl(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewControlId)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: BuildPreviewControl(PreviewControlId)
  nameWithType: IFileTypeDefinition.BuildPreviewControl(PreviewControlId)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewControl(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewControlId)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nInstantiates a preview control of the specified type.\n"
  syntax:
    content: IAbstractPreviewControl BuildPreviewControl(PreviewControlId previewControlId)
    parameters:
    - id: previewControlId
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewControlId
      description: Must be a preview control defined in the file type definition
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewControl
    content.vb: Function BuildPreviewControl(previewControlId As PreviewControlId) As IAbstractPreviewControl
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewControl*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewApplication(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewApplication(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId)
  id: BuildPreviewApplication(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: BuildPreviewApplication(PreviewApplicationId)
  nameWithType: IFileTypeDefinition.BuildPreviewApplication(PreviewApplicationId)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewApplication(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nInstantiate a preview application of the specified type.\n"
  syntax:
    content: IAbstractPreviewApplication BuildPreviewApplication(PreviewApplicationId previewApplicationId)
    parameters:
    - id: previewApplicationId
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
      description: "Must be a preview application defined in the \nfile type definition."
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication
    content.vb: Function BuildPreviewApplication(previewApplicationId As PreviewApplicationId) As IAbstractPreviewApplication
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewApplication*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildVerifierCollection
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildVerifierCollection
  id: BuildVerifierCollection
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: BuildVerifierCollection()
  nameWithType: IFileTypeDefinition.BuildVerifierCollection()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildVerifierCollection()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCalled by the file type manager to instantiate a set of verifiers.\n"
  syntax:
    content: IVerifierCollection BuildVerifierCollection()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IVerifierCollection
    content.vb: Function BuildVerifierCollection As IVerifierCollection
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildVerifierCollection*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.IsSupportedFilename(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.IsSupportedFilename(System.String)
  id: IsSupportedFilename(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: IsSupportedFilename(String)
  nameWithType: IFileTypeDefinition.IsSupportedFilename(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.IsSupportedFilename(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCalled by the file type manager to evaluate whether the file may be \nof a type supported by this file type definition (based on its file name).\n"
  remarks: "\n<p>\nThe file type manager calls this method before calling <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.SniffFile(System.String%2cSdl.Core.Globalization.Language%2cSdl.Core.Globalization.Codepage%2cSdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter%2cSdl.Core.Settings.ISettingsBundle)\" data-throw-if-not-resolved=\"false\"></xref> in order to perform a quick filtering\nto avoid having to sniff files unnecessarily.</p>\n"
  syntax:
    content: bool IsSupportedFilename(string nativeFilePath)
    parameters:
    - id: nativeFilePath
      type: System.String
      description: The file to evaluate
    return:
      type: System.Boolean
      description: True if the file name can be supported by this file type
    content.vb: Function IsSupportedFilename(nativeFilePath As String) As Boolean
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.IsSupportedFilename*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.SniffFile(System.String,Sdl.Core.Globalization.Language,Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter,Sdl.Core.Settings.ISettingsBundle)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.SniffFile(System.String,Sdl.Core.Globalization.Language,Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter,Sdl.Core.Settings.ISettingsBundle)
  id: SniffFile(System.String,Sdl.Core.Globalization.Language,Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter,Sdl.Core.Settings.ISettingsBundle)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: SniffFile(String, Language, Codepage, INativeTextLocationMessageReporter, ISettingsBundle)
  nameWithType: IFileTypeDefinition.SniffFile(String, Language, Codepage, INativeTextLocationMessageReporter, ISettingsBundle)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.SniffFile(System.String, Sdl.Core.Globalization.Language, Sdl.Core.Globalization.Codepage, Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter, Sdl.Core.Settings.ISettingsBundle)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCalled by the file type manager to perform file sniffing in order to determine whether\nthe file can be supported by this file type definition.\n"
  syntax:
    content: SniffInfo SniffFile(string nativeFilePath, Language suggestedSourceLanguage, Codepage suggestedCodepage, INativeTextLocationMessageReporter messageReporter, ISettingsBundle settingsBundle)
    parameters:
    - id: nativeFilePath
      type: System.String
    - id: suggestedSourceLanguage
      type: Sdl.Core.Globalization.Language
    - id: suggestedCodepage
      type: Sdl.Core.Globalization.Codepage
    - id: messageReporter
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter
      description: >-
        Optional message reporter; if specified, it may be used

        by the file sniffer to report peculiarities detected in the file
    - id: settingsBundle
      type: Sdl.Core.Settings.ISettingsBundle
      description: >-
        This settings bundle may be used by the file type Definition implementation

        to retrieve a settings group, and pass it to the file sniffer through the ISettingsAware implementation.
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo
    content.vb: Function SniffFile(nativeFilePath As String, suggestedSourceLanguage As Language, suggestedCodepage As Codepage, messageReporter As INativeTextLocationMessageReporter, settingsBundle As ISettingsBundle) As SniffInfo
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.SniffFile*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.FileTypeInformation
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.FileTypeInformation
  id: FileTypeInformation
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: FileTypeInformation
  nameWithType: IFileTypeDefinition.FileTypeInformation
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.FileTypeInformation
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nEverything you want to know about the file type this particular\nfile type definition represents.\n"
  syntax:
    content: IFileTypeInformation FileTypeInformation { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation
    content.vb: ReadOnly Property FileTypeInformation As IFileTypeInformation
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.FileTypeInformation*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.ComponentBuilder
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.ComponentBuilder
  id: ComponentBuilder
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: ComponentBuilder
  nameWithType: IFileTypeDefinition.ComponentBuilder
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.ComponentBuilder
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe factory that is used to instantiate actual components for this file type.\n"
  syntax:
    content: IFileTypeComponentBuilder ComponentBuilder { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
    content.vb: Property ComponentBuilder As IFileTypeComponentBuilder
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.ComponentBuilder*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.CustomizationLevel
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.CustomizationLevel
  id: CustomizationLevel
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  langs:
  - csharp
  - vb
  name: CustomizationLevel
  nameWithType: IFileTypeDefinition.CustomizationLevel
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.CustomizationLevel
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nDetermines if the file type definition is standard, customized standard or has been overridden by a file type profile.\n"
  syntax:
    content: FileTypeDefinitionCustomizationLevel CustomizationLevel { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeDefinitionCustomizationLevel
    content.vb: Property CustomizationLevel As FileTypeDefinitionCustomizationLevel
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.CustomizationLevel*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildQuickTagsFactory*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildQuickTagsFactory
  isExternal: true
  name: BuildQuickTagsFactory
  nameWithType: IFileTypeDefinition.BuildQuickTagsFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildQuickTagsFactory
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IQuickTagsFactory
  nameWithType: IQuickTagsFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.GetQuickInserts*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.GetQuickInserts
  isExternal: true
  name: GetQuickInserts
  nameWithType: IFileTypeDefinition.GetQuickInserts
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.GetQuickInserts
- uid: Sdl.Core.Settings.ISettingsBundle
  isExternal: true
  name: ISettingsBundle
  nameWithType: ISettingsBundle
  fullName: Sdl.Core.Settings.ISettingsBundle
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IFileProperties
  nameWithType: IFileProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTags
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTags
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IQuickTags
  nameWithType: IQuickTags
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTags
- uid: Sdl.FileTypeSupport.Framework.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildQuickInsertIdsList*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildQuickInsertIdsList
  isExternal: true
  name: BuildQuickInsertIdsList
  nameWithType: IFileTypeDefinition.BuildQuickInsertIdsList
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildQuickInsertIdsList
- uid: System.Collections.Generic.List{Sdl.FileTypeSupport.Framework.IntegrationApi.QuickInserts.QuickInsertIds}
  commentId: T:System.Collections.Generic.List{Sdl.FileTypeSupport.Framework.IntegrationApi.QuickInserts.QuickInsertIds}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<QuickInsertIds>
  nameWithType: List<QuickInsertIds>
  fullName: System.Collections.Generic.List<Sdl.FileTypeSupport.Framework.IntegrationApi.QuickInserts.QuickInsertIds>
  nameWithType.vb: List(Of QuickInsertIds)
  fullName.vb: System.Collections.Generic.List(Of Sdl.FileTypeSupport.Framework.IntegrationApi.QuickInserts.QuickInsertIds)
  name.vb: List(Of QuickInsertIds)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.QuickInserts.QuickInsertIds
    name: QuickInsertIds
    nameWithType: QuickInsertIds
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.QuickInserts.QuickInsertIds
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.QuickInserts.QuickInsertIds
    name: QuickInsertIds
    nameWithType: QuickInsertIds
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.QuickInserts.QuickInsertIds
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewSetsFactory*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewSetsFactory
  isExternal: true
  name: BuildPreviewSetsFactory
  nameWithType: IFileTypeDefinition.BuildPreviewSetsFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewSetsFactory
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IPreviewSetsFactory
  nameWithType: IPreviewSetsFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildExtractor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildExtractor
  isExternal: true
  name: BuildExtractor
  nameWithType: IFileTypeDefinition.BuildExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildExtractor
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileExtractor
  nameWithType: IFileExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildSubContentExtractor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildSubContentExtractor
  isExternal: true
  name: BuildSubContentExtractor
  nameWithType: IFileTypeDefinition.BuildSubContentExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildSubContentExtractor
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: ISubContentExtractor
  nameWithType: ISubContentExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildSubContentGenerator*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildSubContentGenerator
  isExternal: true
  name: BuildSubContentGenerator
  nameWithType: IFileTypeDefinition.BuildSubContentGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildSubContentGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentGenerator
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentGenerator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: ISubContentGenerator
  nameWithType: ISubContentGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildNativeGenerator*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildNativeGenerator
  isExternal: true
  name: BuildNativeGenerator
  nameWithType: IFileTypeDefinition.BuildNativeGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildNativeGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileGenerator
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileGenerator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileGenerator
  nameWithType: IFileGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildBilingualDocumentGenerator*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildBilingualDocumentGenerator
  isExternal: true
  name: BuildBilingualDocumentGenerator
  nameWithType: IFileTypeDefinition.BuildBilingualDocumentGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildBilingualDocumentGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IBilingualDocumentGenerator
  nameWithType: IBilingualDocumentGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildGenerator*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildGenerator
  isExternal: true
  name: BuildGenerator
  nameWithType: IFileTypeDefinition.BuildGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: GeneratorId
  nameWithType: GeneratorId
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractGenerator
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractGenerator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IAbstractGenerator
  nameWithType: IAbstractGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildAdditionalGeneratorsInfo*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildAdditionalGeneratorsInfo
  isExternal: true
  name: BuildAdditionalGeneratorsInfo
  nameWithType: IFileTypeDefinition.BuildAdditionalGeneratorsInfo
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildAdditionalGeneratorsInfo
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IAdditionalGeneratorsInfo
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IAdditionalGeneratorsInfo
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IAdditionalGeneratorsInfo
  nameWithType: IAdditionalGeneratorsInfo
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IAdditionalGeneratorsInfo
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewControl*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewControl
  isExternal: true
  name: BuildPreviewControl
  nameWithType: IFileTypeDefinition.BuildPreviewControl
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewControl
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewControlId
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewControlId
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: PreviewControlId
  nameWithType: PreviewControlId
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewControlId
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewControl
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewControl
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IAbstractPreviewControl
  nameWithType: IAbstractPreviewControl
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewControl
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewApplication*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewApplication
  isExternal: true
  name: BuildPreviewApplication
  nameWithType: IFileTypeDefinition.BuildPreviewApplication
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewApplication
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: PreviewApplicationId
  nameWithType: PreviewApplicationId
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IAbstractPreviewApplication
  nameWithType: IAbstractPreviewApplication
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildVerifierCollection*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildVerifierCollection
  isExternal: true
  name: BuildVerifierCollection
  nameWithType: IFileTypeDefinition.BuildVerifierCollection
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildVerifierCollection
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IVerifierCollection
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IVerifierCollection
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IVerifierCollection
  nameWithType: IVerifierCollection
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IVerifierCollection
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.IsSupportedFilename*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.IsSupportedFilename
  isExternal: true
  name: IsSupportedFilename
  nameWithType: IFileTypeDefinition.IsSupportedFilename
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.IsSupportedFilename
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.SniffFile*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.SniffFile
  isExternal: true
  name: SniffFile
  nameWithType: IFileTypeDefinition.SniffFile
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.SniffFile
- uid: Sdl.Core.Globalization.Language
  isExternal: true
  name: Language
  nameWithType: Language
  fullName: Sdl.Core.Globalization.Language
- uid: Sdl.Core.Globalization.Codepage
  isExternal: true
  name: Codepage
  nameWithType: Codepage
  fullName: Sdl.Core.Globalization.Codepage
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: INativeTextLocationMessageReporter
  nameWithType: INativeTextLocationMessageReporter
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: SniffInfo
  nameWithType: SniffInfo
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.FileTypeInformation*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.FileTypeInformation
  isExternal: true
  name: FileTypeInformation
  nameWithType: IFileTypeDefinition.FileTypeInformation
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.FileTypeInformation
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileTypeInformation
  nameWithType: IFileTypeInformation
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.ComponentBuilder*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.ComponentBuilder
  isExternal: true
  name: ComponentBuilder
  nameWithType: IFileTypeDefinition.ComponentBuilder
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.ComponentBuilder
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileTypeComponentBuilder
  nameWithType: IFileTypeComponentBuilder
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.CustomizationLevel*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.CustomizationLevel
  isExternal: true
  name: CustomizationLevel
  nameWithType: IFileTypeDefinition.CustomizationLevel
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.CustomizationLevel
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeDefinitionCustomizationLevel
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeDefinitionCustomizationLevel
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: FileTypeDefinitionCustomizationLevel
  nameWithType: FileTypeDefinitionCustomizationLevel
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeDefinitionCustomizationLevel
