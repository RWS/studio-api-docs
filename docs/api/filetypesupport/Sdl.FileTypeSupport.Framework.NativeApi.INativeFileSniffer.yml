### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer
  id: INativeFileSniffer
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer.Sniff(System.String,Sdl.Core.Globalization.Language,Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter,Sdl.Core.Settings.ISettingsGroup)
  langs:
  - csharp
  - vb
  name: INativeFileSniffer
  nameWithType: INativeFileSniffer
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nA file sniffer is a component that gets invoked to determine\nif a particular file can be processed.\n\n<p>\nIf the file is supported, the file sniffer may also detect the language and the encoding of\na given file, in addition to any other information that will be useful to set up the\nparser to correctly process it.\n</p>\n"
  remarks: "\n<p>\nFile sniffers allow the framework to distinguish between different file types that use the\nsame file extension. A file sniffer is expected to look at the actual file content to\ndetermine if the file is supported.\n</p>\n<p>\nThe file sniffer implementation should return a <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo\" data-throw-if-not-resolved=\"false\"></xref> instance where the\n<xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo.IsSupported\" data-throw-if-not-resolved=\"false\"></xref> is set to <code>true</code> if the file is of the expected type.\n</p>\n<p>\nThe file sniffer may also attempt to automatically detect the encoding and the source (and target)\nlanguage of the file. When detecting such things, the file sniffer also specifies a confidence level\nfor the detection, which allows applications to determine whether they may need to ask the user for additional\ninformation or not.\n</p>\n<p>\nThe file type manager invokes the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer.Sniff(System.String%2cSdl.Core.Globalization.Language%2cSdl.Core.Globalization.Codepage%2cSdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter%2cSdl.Core.Settings.ISettingsGroup)\" data-throw-if-not-resolved=\"false\"></xref> method on a file\nsniffer associated with a file type definition to determine if the file\nis of a type that can be processed.\n</p>\n<p>\nThe file sniffer implementation must be stateless and thread safe, since for performance reasons\nthe file sniffer may be cached and re-used across multiple files, possibly \nalso in a multi-threaded environment. The easiest way to accomplish this is by ensuring\nthat the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer.Sniff(System.String%2cSdl.Core.Globalization.Language%2cSdl.Core.Globalization.Codepage%2cSdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter%2cSdl.Core.Settings.ISettingsGroup)\" data-throw-if-not-resolved=\"false\"></xref> implementation does not modify any class member fields\nand to avoid using static variables.\n</p>\n<p>\nThe file sniffer is also recommended (but not required) to \nimplement <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware\" data-throw-if-not-resolved=\"false\"></xref>. If \nthis interface is implemented, it will be used by the framework to communicate the file type definition \nused to instantiate the sniffer.\n</p>\n"
  syntax:
    content: public interface INativeFileSniffer
    content.vb: Public Interface INativeFileSniffer
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer.Sniff(System.String,Sdl.Core.Globalization.Language,Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter,Sdl.Core.Settings.ISettingsGroup)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer.Sniff(System.String,Sdl.Core.Globalization.Language,Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter,Sdl.Core.Settings.ISettingsGroup)
  id: Sniff(System.String,Sdl.Core.Globalization.Language,Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter,Sdl.Core.Settings.ISettingsGroup)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer
  langs:
  - csharp
  - vb
  name: Sniff(String, Language, Codepage, INativeTextLocationMessageReporter, ISettingsGroup)
  nameWithType: INativeFileSniffer.Sniff(String, Language, Codepage, INativeTextLocationMessageReporter, ISettingsGroup)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer.Sniff(System.String, Sdl.Core.Globalization.Language, Sdl.Core.Globalization.Codepage, Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter, Sdl.Core.Settings.ISettingsGroup)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nCalled by the framework to invoke the file sniffer for a specific file.\n"
  remarks: "\nThe implementation of this method must be stateless and thread-safe.\n"
  syntax:
    content: SniffInfo Sniff(string nativeFilePath, Language suggestedSourceLanguage, Codepage suggestedCodepage, INativeTextLocationMessageReporter messageReporter, ISettingsGroup settingsGroup)
    parameters:
    - id: nativeFilePath
      type: System.String
      description: Fill path to the file to sniff.
    - id: suggestedSourceLanguage
      type: Sdl.Core.Globalization.Language
      description: Expected source language of the file.
    - id: suggestedCodepage
      type: Sdl.Core.Globalization.Codepage
      description: Possible suggested codepage of the file (based on its expected language).
    - id: messageReporter
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter
      description: >-
        Supplied by the framework to allow file sniffers to report

        file-related information that may be of interest.
    - id: settingsGroup
      type: Sdl.Core.Settings.ISettingsGroup
      description: >-
        Supplied by the framework to allow file sniffers to change their behavior

        depending on their settings. This parameter is intended as the sole means to gain access to settings in the

        sniffer - methods used for other components will invalidate the stateless model of file sniffers and should not be used.
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo
      description: "An instance of a <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo\" data-throw-if-not-resolved=\"false\"></xref> object where the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo.IsSupported\" data-throw-if-not-resolved=\"false\"></xref> property\nhas been set to <code>true</code> or <code>false</code> to indicate if the file is of a supported type. The return value\nmay also indicate the detected encoding, source, and target language, together with the detection \nconfidence levels."
    content.vb: Function Sniff(nativeFilePath As String, suggestedSourceLanguage As Language, suggestedCodepage As Codepage, messageReporter As INativeTextLocationMessageReporter, settingsGroup As ISettingsGroup) As SniffInfo
  overload: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer.Sniff*
references:
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer.Sniff*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer.Sniff
  isExternal: true
  name: Sniff
  nameWithType: INativeFileSniffer.Sniff
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer.Sniff
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Core.Globalization.Language
  isExternal: true
  name: Language
  nameWithType: Language
  fullName: Sdl.Core.Globalization.Language
- uid: Sdl.Core.Globalization.Codepage
  isExternal: true
  name: Codepage
  nameWithType: Codepage
  fullName: Sdl.Core.Globalization.Codepage
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: INativeTextLocationMessageReporter
  nameWithType: INativeTextLocationMessageReporter
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter
- uid: Sdl.Core.Settings.ISettingsGroup
  isExternal: true
  name: ISettingsGroup
  nameWithType: ISettingsGroup
  fullName: Sdl.Core.Settings.ISettingsGroup
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: SniffInfo
  nameWithType: SniffInfo
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
