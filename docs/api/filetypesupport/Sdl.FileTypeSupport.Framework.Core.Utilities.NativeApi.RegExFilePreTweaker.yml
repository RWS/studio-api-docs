### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker
  id: RegExFilePreTweaker
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.#ctor
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.#ctor(System.String,System.String)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.ReplaceInfo
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.WillFileBeTweaked(System.String)
  langs:
  - csharp
  - vb
  name: RegExFilePreTweaker
  nameWithType: RegExFilePreTweaker
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nAn implementation of a FileTweaker that can be used by filters to perform the simple task of\nreplacing text in a native file.\n"
  example:
  - "\nNormally, this class would be derived from to create a specific implementation for a particular file type. E.g.:\n<pre><code>    public class XmlFilePreTweaker : RegExFilePreTweaker\n{\n   public XmlFilePreTweaker()\n   {\n       List&lt;Pair&lt;string, string>> replaceInfo = new List&lt;Pair&lt;string, string>>();\n\n       replaceInfo.Add(new Pair&lt;string, string>(&quot;&amp;lt;&quot;, &quot;&lt;SDL:lt />&quot;));\n       replaceInfo.Add(new Pair&lt;string, string>(&quot;&amp;gt;&quot;, &quot;&lt;SDL:gt />&quot;));\n       replaceInfo.Add(new Pair&lt;string, string>(&quot;&amp;quot;&quot;, &quot;&lt;SDL:quot />&quot;));\n       replaceInfo.Add(new Pair&lt;string, string>(&quot;&amp;apos;&quot;, &quot;&lt;SDL:apos />&quot;));\n       replaceInfo.Add(new Pair&lt;string, string>(&quot;&amp;amp;&quot;, &quot;&lt;SDL:amp />&quot;));\n\n       base.ReplaceInfo = replaceInfo;\n   }\n}</code></pre>\n"
  syntax:
    content: 'public class RegExFilePreTweaker : AbstractFilePreTweaker, IFilePreTweaker, IFileTweaker'
    content.vb: >-
      Public Class RegExFilePreTweaker
          Inherits AbstractFilePreTweaker
          Implements IFilePreTweaker, IFileTweaker
  inheritance:
  - System.Object
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IFilePreTweaker
  - Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker
  inheritedMembers:
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.TweakFilePreParsing(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.RequireValidEncoding
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Name
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.MessageReporter
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Enabled
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker
  langs:
  - csharp
  - vb
  name: RegExFilePreTweaker()
  nameWithType: RegExFilePreTweaker.RegExFilePreTweaker()
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.RegExFilePreTweaker()
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nDefault constructor. If the object is created with this constructor, then <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.ReplaceInfo\" data-throw-if-not-resolved=\"false\"></xref>\nshould be set.\n"
  syntax:
    content: public RegExFilePreTweaker()
    content.vb: Public Sub New
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.#ctor(System.String,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker
  langs:
  - csharp
  - vb
  name: RegExFilePreTweaker(String, String)
  nameWithType: RegExFilePreTweaker.RegExFilePreTweaker(String, String)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.RegExFilePreTweaker(System.String, System.String)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nSimple constructor that can be used when there is only a single match/replace to be performed\non the native file. \n"
  syntax:
    content: public RegExFilePreTweaker(string regExMatch, string regExReplace)
    parameters:
    - id: regExMatch
      type: System.String
      description: The string that will be matched. This can use the full .NET RegEx syntax.
    - id: regExReplace
      type: System.String
      description: The string that will replace any matches. This can use the full .NET RegEx syntax, and - as such - can incorporate parts of the matched string.
    content.vb: Public Sub New(regExMatch As String, regExReplace As String)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  id: '#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})'
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker
  langs:
  - csharp
  - vb
  name: RegExFilePreTweaker(List<String>, List<String>)
  nameWithType: RegExFilePreTweaker.RegExFilePreTweaker(List<String>, List<String>)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.RegExFilePreTweaker(System.Collections.Generic.List<System.String>, System.Collections.Generic.List<System.String>)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nConstructor that takes two ordered lists of strings that contain the match and replace values to apply to the file.\nThe first item in the list of matches will be replace by the first item in the list of replacements, and so on.\n"
  syntax:
    content: public RegExFilePreTweaker(List<string> regExMatchList, List<string> regExReplaceList)
    parameters:
    - id: regExMatchList
      type: System.Collections.Generic.List{System.String}
      description: The list of strings that will be matched. This can use the full .NET RegEx syntax.
    - id: regExReplaceList
      type: System.Collections.Generic.List{System.String}
      description: The list of strings that will replace any matches. This can use the full .NET RegEx syntax, and - as such - can incorporate parts of the matched string.
    content.vb: Public Sub New(regExMatchList As List(Of String), regExReplaceList As List(Of String))
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.#ctor*
  nameWithType.vb: RegExFilePreTweaker.RegExFilePreTweaker(List(Of String), List(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.RegExFilePreTweaker(System.Collections.Generic.List(Of System.String), System.Collections.Generic.List(Of System.String))
  name.vb: RegExFilePreTweaker(List(Of String), List(Of String))
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  id: Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker
  langs:
  - csharp
  - vb
  name: Tweak(IPersistentFileConversionProperties)
  nameWithType: RegExFilePreTweaker.Tweak(IPersistentFileConversionProperties)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nThe implementation of the Tweak method from the <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker\" data-throw-if-not-resolved=\"false\"></xref>\nbase class. \n"
  syntax:
    content: protected override void Tweak(IPersistentFileConversionProperties properties)
    parameters:
    - id: properties
      type: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
      description: The properties object that contains information on the file that will be parsed
    content.vb: Protected Overrides Sub Tweak(properties As IPersistentFileConversionProperties)
  overridden: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.Tweak*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.WillFileBeTweaked(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.WillFileBeTweaked(System.String)
  id: WillFileBeTweaked(System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker
  langs:
  - csharp
  - vb
  name: WillFileBeTweaked(String)
  nameWithType: RegExFilePreTweaker.WillFileBeTweaked(String)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.WillFileBeTweaked(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nThe implementation of the WillFileBeTweaked method from the <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker\" data-throw-if-not-resolved=\"false\"></xref>\nbase class. \n"
  syntax:
    content: protected override bool WillFileBeTweaked(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: The path to the file
    return:
      type: System.Boolean
      description: Whether the file matches any of the supplied regexs
    content.vb: Protected Overrides Function WillFileBeTweaked(filePath As String) As Boolean
  overridden: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.WillFileBeTweaked(System.String)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.WillFileBeTweaked*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.ReplaceInfo
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.ReplaceInfo
  id: ReplaceInfo
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker
  langs:
  - csharp
  - vb
  name: ReplaceInfo
  nameWithType: RegExFilePreTweaker.ReplaceInfo
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.ReplaceInfo
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nThe list of RegEx match and replace values. These values will be used\nduring either the Tweak or UnTweak processes depending on whether the FileTweaker is added to the \nExtractor or to the Generator\n"
  syntax:
    content: public List<Pair<string, string>> ReplaceInfo { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.FileTypeSupport.Framework.Pair{System.String,System.String}}
    content.vb: Public Property ReplaceInfo As List(Of Pair(Of String, String))
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.ReplaceInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  isExternal: true
  name: AbstractFilePreTweaker
  nameWithType: AbstractFilePreTweaker
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IFilePreTweaker
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IFilePreTweaker
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IFilePreTweaker
  nameWithType: IFilePreTweaker
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IFilePreTweaker
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IFileTweaker
  nameWithType: IFileTweaker
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.TweakFilePreParsing(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.TweakFilePreParsing(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  isExternal: true
  name: TweakFilePreParsing(IPersistentFileConversionProperties, IPropertiesFactory)
  nameWithType: AbstractFilePreTweaker.TweakFilePreParsing(IPersistentFileConversionProperties, IPropertiesFactory)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.TweakFilePreParsing(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties, Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.TweakFilePreParsing(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory)
    name: TweakFilePreParsing
    nameWithType: AbstractFilePreTweaker.TweakFilePreParsing
    fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.TweakFilePreParsing
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    name: IPersistentFileConversionProperties
    nameWithType: IPersistentFileConversionProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
    name: IPropertiesFactory
    nameWithType: IPropertiesFactory
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.TweakFilePreParsing(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory)
    name: TweakFilePreParsing
    nameWithType: AbstractFilePreTweaker.TweakFilePreParsing
    fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.TweakFilePreParsing
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    name: IPersistentFileConversionProperties
    nameWithType: IPersistentFileConversionProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
    name: IPropertiesFactory
    nameWithType: IPropertiesFactory
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.RequireValidEncoding
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.RequireValidEncoding
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  isExternal: true
  name: RequireValidEncoding
  nameWithType: AbstractFilePreTweaker.RequireValidEncoding
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.RequireValidEncoding
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Name
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Name
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  isExternal: true
  name: Name
  nameWithType: AbstractFilePreTweaker.Name
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Name
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.MessageReporter
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.MessageReporter
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  isExternal: true
  name: MessageReporter
  nameWithType: AbstractFilePreTweaker.MessageReporter
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.MessageReporter
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Enabled
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Enabled
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  isExternal: true
  name: Enabled
  nameWithType: AbstractFilePreTweaker.Enabled
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Enabled
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.#ctor
  isExternal: true
  name: RegExFilePreTweaker
  nameWithType: RegExFilePreTweaker.RegExFilePreTweaker
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.RegExFilePreTweaker
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  isExternal: true
  name: Tweak(IPersistentFileConversionProperties)
  nameWithType: AbstractFilePreTweaker.Tweak(IPersistentFileConversionProperties)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
    name: Tweak
    nameWithType: AbstractFilePreTweaker.Tweak
    fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    name: IPersistentFileConversionProperties
    nameWithType: IPersistentFileConversionProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
    name: Tweak
    nameWithType: AbstractFilePreTweaker.Tweak
    fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    name: IPersistentFileConversionProperties
    nameWithType: IPersistentFileConversionProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.Tweak*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.Tweak
  isExternal: true
  name: Tweak
  nameWithType: RegExFilePreTweaker.Tweak
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.Tweak
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IPersistentFileConversionProperties
  nameWithType: IPersistentFileConversionProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.WillFileBeTweaked(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.WillFileBeTweaked(System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  isExternal: true
  name: WillFileBeTweaked(String)
  nameWithType: AbstractFilePreTweaker.WillFileBeTweaked(String)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.WillFileBeTweaked(System.String)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.WillFileBeTweaked(System.String)
    name: WillFileBeTweaked
    nameWithType: AbstractFilePreTweaker.WillFileBeTweaked
    fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.WillFileBeTweaked
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.WillFileBeTweaked(System.String)
    name: WillFileBeTweaked
    nameWithType: AbstractFilePreTweaker.WillFileBeTweaked
    fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.WillFileBeTweaked
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.WillFileBeTweaked*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.WillFileBeTweaked
  isExternal: true
  name: WillFileBeTweaked
  nameWithType: RegExFilePreTweaker.WillFileBeTweaked
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.WillFileBeTweaked
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.ReplaceInfo*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.ReplaceInfo
  isExternal: true
  name: ReplaceInfo
  nameWithType: RegExFilePreTweaker.ReplaceInfo
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker.ReplaceInfo
- uid: System.Collections.Generic.List{Sdl.FileTypeSupport.Framework.Pair{System.String,System.String}}
  commentId: T:System.Collections.Generic.List{Sdl.FileTypeSupport.Framework.Pair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Pair<String, String>>
  nameWithType: List<Pair<String, String>>
  fullName: System.Collections.Generic.List<Sdl.FileTypeSupport.Framework.Pair<System.String, System.String>>
  nameWithType.vb: List(Of Pair(Of String, String))
  fullName.vb: System.Collections.Generic.List(Of Sdl.FileTypeSupport.Framework.Pair(Of System.String, System.String))
  name.vb: List(Of Pair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    nameWithType: Pair
    fullName: Sdl.FileTypeSupport.Framework.Pair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    nameWithType: Pair
    fullName: Sdl.FileTypeSupport.Framework.Pair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
