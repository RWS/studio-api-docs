### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.SourceCount
  id: SourceCount
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.#ctor
  - Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.#ctor(Sdl.FileTypeSupport.Framework.NativeApi.SourceCount)
  - Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Clone
  - Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Equals(System.Object)
  - Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.GetHashCode
  - Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Unit
  - Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Value
  langs:
  - csharp
  - vb
  name: SourceCount
  nameWithType: SourceCount
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nA word or character count value\n"
  syntax:
    content: 'public class SourceCount : ICloneable'
    content.vb: >-
      Public Class SourceCount
          Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount
  langs:
  - csharp
  - vb
  name: SourceCount()
  nameWithType: SourceCount.SourceCount()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.SourceCount()
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nDefault constructor - creates an uninitialized object.\n"
  syntax:
    content: public SourceCount()
    content.vb: Public Sub New
  overload: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.#ctor(Sdl.FileTypeSupport.Framework.NativeApi.SourceCount)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.#ctor(Sdl.FileTypeSupport.Framework.NativeApi.SourceCount)
  id: '#ctor(Sdl.FileTypeSupport.Framework.NativeApi.SourceCount)'
  parent: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount
  langs:
  - csharp
  - vb
  name: SourceCount(SourceCount)
  nameWithType: SourceCount.SourceCount(SourceCount)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.SourceCount(Sdl.FileTypeSupport.Framework.NativeApi.SourceCount)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nProtected copy constructor used during cloning\n"
  syntax:
    content: protected SourceCount(SourceCount other)
    parameters:
    - id: other
      type: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount
    content.vb: Protected Sub New(other As SourceCount)
  overload: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Equals(System.Object)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SourceCount.Equals(Object)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Equals(System.Object)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nObjects are considered equal if they have the same unit and value.\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.GetHashCode
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.GetHashCode
  id: GetHashCode
  parent: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SourceCount.GetHashCode()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.GetHashCode()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe hash code is computed from the unit and value. Same unit and value yields same hash code.\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Clone
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Clone
  id: Clone
  parent: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SourceCount.Clone()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Clone()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nReturns a deep clone of the object\n"
  syntax:
    content: public object Clone()
    return:
      type: System.Object
    content.vb: Public Function Clone As Object
  overload: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Unit
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Unit
  id: Unit
  parent: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount
  langs:
  - csharp
  - vb
  name: Unit
  nameWithType: SourceCount.Unit
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Unit
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe type of items that the value represents\n"
  syntax:
    content: public SourceCount.CountUnit Unit { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.CountUnit
    content.vb: Public Property Unit As SourceCount.CountUnit
  overload: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Unit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Value
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Value
  id: Value
  parent: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: SourceCount.Value
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Value
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe value that the count represents\n"
  syntax:
    content: public long Value { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Value As Long
  overload: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.#ctor
  isExternal: true
  name: SourceCount
  nameWithType: SourceCount.SourceCount
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.SourceCount
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.SourceCount
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: SourceCount
  nameWithType: SourceCount
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Equals*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Equals
  isExternal: true
  name: Equals
  nameWithType: SourceCount.Equals
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.GetHashCode*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: SourceCount.GetHashCode
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Clone*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Clone
  isExternal: true
  name: Clone
  nameWithType: SourceCount.Clone
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Unit*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Unit
  isExternal: true
  name: Unit
  nameWithType: SourceCount.Unit
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Unit
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.CountUnit
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.CountUnit
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: SourceCount.CountUnit
  nameWithType: SourceCount.CountUnit
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.CountUnit
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Value*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Value
  isExternal: true
  name: Value
  nameWithType: SourceCount.Value
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SourceCount.Value
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
