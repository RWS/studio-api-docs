### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  id: IBilingualDocumentGenerator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.AddFileTweaker(Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.AllComponents
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.FileTweakers
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Input
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.RemoveFileTweaker(Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Writer
  langs:
  - csharp
  - vb
  name: IBilingualDocumentGenerator
  nameWithType: IBilingualDocumentGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nA set of bilingual content processors together with a bilingual writer\nthat can be used to process the entire content (all files) of a bilingual document.\n"
  remarks: "\n<p>\nThe content is passed to the generator in the form of calls on the <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Input\" data-throw-if-not-resolved=\"false\"></xref>\nproperty implementation. Each call will be further processed in turn by each bilingual content\nprocessor, and last by the bilingual writer.\n</p>\n"
  syntax:
    content: 'public interface IBilingualDocumentGenerator : IBilingualProcessorContainer, IAbstractGenerator, IFileTypeDefinitionAware'
    content.vb: >-
      Public Interface IBilingualDocumentGenerator
          Inherits IBilingualProcessorContainer, IAbstractGenerator, IFileTypeDefinitionAware
  inheritedMembers:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.AddFileTweaker(Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.AddFileTweaker(Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker)
  id: AddFileTweaker(Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  langs:
  - csharp
  - vb
  name: AddFileTweaker(IFilePostTweaker)
  nameWithType: IBilingualDocumentGenerator.AddFileTweaker(IFilePostTweaker)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.AddFileTweaker(Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nAppends a file tweaker that will be used to modify the output file after generating.\n"
  syntax:
    content: void AddFileTweaker(IFilePostTweaker tweaker)
    parameters:
    - id: tweaker
      type: Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker
    content.vb: Sub AddFileTweaker(tweaker As IFilePostTweaker)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.AddFileTweaker*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.RemoveFileTweaker(Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.RemoveFileTweaker(Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker)
  id: RemoveFileTweaker(Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  langs:
  - csharp
  - vb
  name: RemoveFileTweaker(IFilePostTweaker)
  nameWithType: IBilingualDocumentGenerator.RemoveFileTweaker(IFilePostTweaker)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.RemoveFileTweaker(Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nRemoves the tweaker from the generator.\n"
  syntax:
    content: void RemoveFileTweaker(IFilePostTweaker tweakerToRemove)
    parameters:
    - id: tweakerToRemove
      type: Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker
      description: The file tweaker to remove
    content.vb: Sub RemoveFileTweaker(tweakerToRemove As IFilePostTweaker)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.RemoveFileTweaker*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Input
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Input
  id: Input
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: IBilingualDocumentGenerator.Input
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Input
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nAll content to be processed by the generator is passed through\nthis interface.\n"
  syntax:
    content: IBilingualContentHandler Input { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler
    content.vb: ReadOnly Property Input As IBilingualContentHandler
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Input*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Writer
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Writer
  id: Writer
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  langs:
  - csharp
  - vb
  name: Writer
  nameWithType: IBilingualDocumentGenerator.Writer
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Writer
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe bilingual writer that creates the final output.\n"
  remarks: "\n<p>\nThis property can be <code>null</code>.\n</p>\n"
  syntax:
    content: IBilingualDocumentWriter Writer { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentWriter
    content.vb: Property Writer As IBilingualDocumentWriter
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Writer*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.AllComponents
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.AllComponents
  id: AllComponents
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  langs:
  - csharp
  - vb
  name: AllComponents
  nameWithType: IBilingualDocumentGenerator.AllComponents
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.AllComponents
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCalled by the framework during component initialization to detect and initialize\nparser components that implement special interfaces such as <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.ISharedObjectsAware\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: IEnumerable<object> AllComponents { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: All (bilingual) file type components
    content.vb: ReadOnly Property AllComponents As IEnumerable(Of Object)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.AllComponents*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.FileTweakers
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.FileTweakers
  id: FileTweakers
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  langs:
  - csharp
  - vb
  name: FileTweakers
  nameWithType: IBilingualDocumentGenerator.FileTweakers
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.FileTweakers
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe file tweakers used by the generator, in the\norder in which they will be invoked.\n\nFile tweakers should be added using <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.AddFileTweaker(Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: IEnumerable<IFilePostTweaker> FileTweakers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker}
    content.vb: ReadOnly Property FileTweakers As IEnumerable(Of IFilePostTweaker)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.FileTweakers*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: AddBilingualProcessor(IBilingualContentProcessor)
  nameWithType: IBilingualProcessorContainer.AddBilingualProcessor(IBilingualContentProcessor)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: AddBilingualProcessor
    nameWithType: IBilingualProcessorContainer.AddBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: AddBilingualProcessor
    nameWithType: IBilingualProcessorContainer.AddBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: InsertBilingualProcessor(Int32, IBilingualContentProcessor)
  nameWithType: IBilingualProcessorContainer.InsertBilingualProcessor(Int32, IBilingualContentProcessor)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32, Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: InsertBilingualProcessor
    nameWithType: IBilingualProcessorContainer.InsertBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: InsertBilingualProcessor
    nameWithType: IBilingualProcessorContainer.InsertBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: RemoveBilingualProcessor(IBilingualContentProcessor)
  nameWithType: IBilingualProcessorContainer.RemoveBilingualProcessor(IBilingualContentProcessor)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: RemoveBilingualProcessor
    nameWithType: IBilingualProcessorContainer.RemoveBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: RemoveBilingualProcessor
    nameWithType: IBilingualProcessorContainer.RemoveBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: GetBilingualProcessors()
  nameWithType: IBilingualProcessorContainer.GetBilingualProcessors()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
    name: GetBilingualProcessors
    nameWithType: IBilingualProcessorContainer.GetBilingualProcessors
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
    name: GetBilingualProcessors
    nameWithType: IBilingualProcessorContainer.GetBilingualProcessors
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: FileRestriction
  nameWithType: IBilingualProcessorContainer.FileRestriction
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: ParagraphUnitRestriction
  nameWithType: IBilingualProcessorContainer.ParagraphUnitRestriction
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
  isExternal: true
  name: FileTypeDefinition
  nameWithType: IFileTypeDefinitionAware.FileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IBilingualProcessorContainer
  nameWithType: IBilingualProcessorContainer
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileTypeDefinitionAware
  nameWithType: IFileTypeDefinitionAware
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.AddFileTweaker*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.AddFileTweaker
  isExternal: true
  name: AddFileTweaker
  nameWithType: IBilingualDocumentGenerator.AddFileTweaker
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.AddFileTweaker
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IFilePostTweaker
  nameWithType: IFilePostTweaker
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.RemoveFileTweaker*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.RemoveFileTweaker
  isExternal: true
  name: RemoveFileTweaker
  nameWithType: IBilingualDocumentGenerator.RemoveFileTweaker
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.RemoveFileTweaker
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Input*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Input
  isExternal: true
  name: Input
  nameWithType: IBilingualDocumentGenerator.Input
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Input
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IBilingualContentHandler
  nameWithType: IBilingualContentHandler
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler
- uid: Sdl.FileTypeSupport.Framework.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Writer*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Writer
  isExternal: true
  name: Writer
  nameWithType: IBilingualDocumentGenerator.Writer
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Writer
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentWriter
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentWriter
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IBilingualDocumentWriter
  nameWithType: IBilingualDocumentWriter
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentWriter
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.AllComponents*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.AllComponents
  isExternal: true
  name: AllComponents
  nameWithType: IBilingualDocumentGenerator.AllComponents
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.AllComponents
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.FileTweakers*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.FileTweakers
  isExternal: true
  name: FileTweakers
  nameWithType: IBilingualDocumentGenerator.FileTweakers
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.FileTweakers
- uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IFilePostTweaker>
  nameWithType: IEnumerable<IFilePostTweaker>
  fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker>
  nameWithType.vb: IEnumerable(Of IFilePostTweaker)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker)
  name.vb: IEnumerable(Of IFilePostTweaker)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker
    name: IFilePostTweaker
    nameWithType: IFilePostTweaker
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker
    name: IFilePostTweaker
    nameWithType: IFilePostTweaker
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IFilePostTweaker
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
