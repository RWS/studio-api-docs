### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  commentId: T:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  id: IFormattingItem
  parent: Sdl.FileTypeSupport.Framework.Formatting
  children:
  - Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.AcceptVisitor(Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor)
  - Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.FormattingName
  - Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedFormattingName
  - Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedStringValue
  - Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.StringValue
  langs:
  - csharp
  - vb
  name: IFormattingItem
  nameWithType: IFormattingItem
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nThis interface represents an individual formatting property, which is typically used as part of semi-WYSIWYG\ndisplay formatting.\n"
  remarks: "\n<p>\nExamples of formatting items include <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.Bold\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.FontSize\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nThe formatting property is effectively a key/value pair, in which the\n<xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.FormattingName\" data-throw-if-not-resolved=\"false\"></xref> acts as a key describing the formatting property type (e.g. &quot;Bold&quot;),\nand the <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.StringValue\" data-throw-if-not-resolved=\"false\"></xref> represents the value associated with the formatting type (e.g. &quot;On&quot;). \nImplementation classes typically provide convenience accessors that can be used to set the string value using\nstrong types (e.g. color or bool). However, the actual value should also be accessible and settable via the <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.StringValue\" data-throw-if-not-resolved=\"false\"></xref>\nproperty. \n</p>\n<p>\nFormatting items are serialized as a key/value pair using the <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.FormattingName\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.StringValue\" data-throw-if-not-resolved=\"false\"></xref> properties.\nThey can be de-serialized from a string key/value pair by calling <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingItemFactory.CreateFormattingItem(System.String%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nFormatting items are typically instantiated directly (e.g. <code>new Bold()</code>), and assigned to an <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup\" data-throw-if-not-resolved=\"false\"></xref>\ninstance.\n</p>\n<p>\nIf the formatting needs to be shown in text form to the user, the <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedFormattingName\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedStringValue\" data-throw-if-not-resolved=\"false\"></xref>\nproperties should be used. Implementation classes should return culture specific values for these properties as appropriate.\n</p>\n<p>\nThis interface also implements a visitor pattern (via <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.AcceptVisitor(Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor)\" data-throw-if-not-resolved=\"false\"></xref>) that can be used by applications \nto discover the well-known formatting item types defined in <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nTo represent formatting types other than the well-known ones, which are listed in the <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor\" data-throw-if-not-resolved=\"false\"></xref> interface, you can either\nuse an explicit instance of <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.UnknownFormatting\" data-throw-if-not-resolved=\"false\"></xref> (e.g. <code>new UnknownFormatting(&quot;Emboss&quot;, &quot;On&quot;)</code>), or derive your \nown implementation class from this type. (If you derive your own implementation, you may also want to provide your own implementation\nof the <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingItemFactory\" data-throw-if-not-resolved=\"false\"></xref> to ensure that formatting items are correctly de-serialized to your implementation class.\nGiven the complexities of this approach, it is typically preferred to use an explicit <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.UnknownFormatting\" data-throw-if-not-resolved=\"false\"></xref> instance.)\n</p>\n"
  syntax:
    content: 'public interface IFormattingItem : ICloneable'
    content.vb: >-
      Public Interface IFormattingItem
          Inherits ICloneable
  inheritedMembers:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.AcceptVisitor(Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor)
  commentId: M:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.AcceptVisitor(Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor)
  id: AcceptVisitor(Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor)
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  langs:
  - csharp
  - vb
  name: AcceptVisitor(IFormattingVisitor)
  nameWithType: IFormattingItem.AcceptVisitor(IFormattingVisitor)
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.AcceptVisitor(Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nImplementation of the visitor pattern for formatting items\n"
  syntax:
    content: void AcceptVisitor(IFormattingVisitor visitor)
    parameters:
    - id: visitor
      type: Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor
    content.vb: Sub AcceptVisitor(visitor As IFormattingVisitor)
  overload: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.AcceptVisitor*
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.FormattingName
  commentId: P:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.FormattingName
  id: FormattingName
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  langs:
  - csharp
  - vb
  name: FormattingName
  nameWithType: IFormattingItem.FormattingName
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.FormattingName
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nThe name of this type of formatting.\n\n<p>The name may be used as an attribute name when storing this particular\nformatting in XML format, in which case the value of the attribute\nrepresents the StringValue property.</p>\n"
  remarks: >-
    The name must be unique for each type of formatting.

    It may be used as a key for an indexed collection, and it may be used

    by factories to create object instances when de-serializing.
  syntax:
    content: string FormattingName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property FormattingName As String
  overload: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.FormattingName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.StringValue
  commentId: P:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.StringValue
  id: StringValue
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  langs:
  - csharp
  - vb
  name: StringValue
  nameWithType: IFormattingItem.StringValue
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.StringValue
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nThe value this formatting represents as a string.\n\nFormatting classes should allow their entire value to be\nretrieved and set through this property.\n\n<p>The name and string value may be used for storing the formatting as\nan XML attribute with a value.</p>\n"
  syntax:
    content: string StringValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property StringValue As String
  overload: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.StringValue*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedFormattingName
  commentId: P:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedFormattingName
  id: LocalizedFormattingName
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  langs:
  - csharp
  - vb
  name: LocalizedFormattingName
  nameWithType: IFormattingItem.LocalizedFormattingName
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedFormattingName
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nA localized representation of the formatting name. This can be used\nwhen displaying the formatting in a client UI.\n"
  syntax:
    content: string LocalizedFormattingName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property LocalizedFormattingName As String
  overload: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedFormattingName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedStringValue
  commentId: P:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedStringValue
  id: LocalizedStringValue
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  langs:
  - csharp
  - vb
  name: LocalizedStringValue
  nameWithType: IFormattingItem.LocalizedStringValue
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedStringValue
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nA localized representation of the formatting value. This can be used\nwhen displaying the formatting value in a client UI.\n"
  syntax:
    content: string LocalizedStringValue { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property LocalizedStringValue As String
  overload: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedStringValue*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.Formatting
  commentId: N:Sdl.FileTypeSupport.Framework.Formatting
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Formatting
  nameWithType: Sdl.FileTypeSupport.Framework.Formatting
  fullName: Sdl.FileTypeSupport.Framework.Formatting
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.AcceptVisitor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.AcceptVisitor
  isExternal: true
  name: AcceptVisitor
  nameWithType: IFormattingItem.AcceptVisitor
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.AcceptVisitor
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor
  commentId: T:Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor
  parent: Sdl.FileTypeSupport.Framework.Formatting
  isExternal: true
  name: IFormattingVisitor
  nameWithType: IFormattingVisitor
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.FormattingName*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.FormattingName
  isExternal: true
  name: FormattingName
  nameWithType: IFormattingItem.FormattingName
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.FormattingName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.StringValue*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.StringValue
  isExternal: true
  name: StringValue
  nameWithType: IFormattingItem.StringValue
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.StringValue
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedFormattingName*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedFormattingName
  isExternal: true
  name: LocalizedFormattingName
  nameWithType: IFormattingItem.LocalizedFormattingName
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedFormattingName
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedStringValue*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedStringValue
  isExternal: true
  name: LocalizedStringValue
  nameWithType: IFormattingItem.LocalizedStringValue
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedStringValue
