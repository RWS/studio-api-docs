### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication
  id: IAbstractPreviewApplication
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.Launch
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.NotifyCanClose
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.PreviewClosed
  langs:
  - csharp
  - vb
  name: IAbstractPreviewApplication
  nameWithType: IAbstractPreviewApplication
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCommon base interface for managing standalone applications\nthat are used for previews.\n"
  syntax:
    content: 'public interface IAbstractPreviewApplication : IAbstractPreviewController'
    content.vb: >-
      Public Interface IAbstractPreviewApplication
          Inherits IAbstractPreviewController
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.Launch
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.Launch
  id: Launch
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication
  langs:
  - csharp
  - vb
  name: Launch()
  nameWithType: IAbstractPreviewApplication.Launch()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.Launch()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe host application calls this to launch the preview applications.\n"
  syntax:
    content: void Launch()
    content.vb: Sub Launch
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.Launch*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.NotifyCanClose
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.NotifyCanClose
  id: NotifyCanClose
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication
  langs:
  - csharp
  - vb
  name: NotifyCanClose()
  nameWithType: IAbstractPreviewApplication.NotifyCanClose()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.NotifyCanClose()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe host application may call this when the external preview is no longer\nexpected to be needed, e.g. when the file that is being worked on is closed\nor when a new preview is about to be launched.\n"
  remarks: "\nThe implementation may attempt to close the application and/or preview file at this point,\nor it may ignore this call and leave it up to the user to\nclose the application manually.\n"
  syntax:
    content: void NotifyCanClose()
    content.vb: Sub NotifyCanClose
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.NotifyCanClose*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.PreviewClosed
  commentId: E:Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.PreviewClosed
  id: PreviewClosed
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication
  langs:
  - csharp
  - vb
  name: PreviewClosed
  nameWithType: IAbstractPreviewApplication.PreviewClosed
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.PreviewClosed
  type: Event
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe implementation may raise this event to notify the host application\nwhen the standalone application no longer needs to be tracked, e.g. when the\nfile that is being previewed is closed, or when the preview application is closed. \n"
  remarks: "\nThis signals to the host application that temp files, etc. can be\ncleaned up.\n"
  syntax:
    content: event EventHandler<PreviewClosedEventArgs> PreviewClosed
    return:
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewClosedEventArgs}
    content.vb: Event PreviewClosed As EventHandler(Of PreviewClosedEventArgs)
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.Launch*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.Launch
  isExternal: true
  name: Launch
  nameWithType: IAbstractPreviewApplication.Launch
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.Launch
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.NotifyCanClose*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.NotifyCanClose
  isExternal: true
  name: NotifyCanClose
  nameWithType: IAbstractPreviewApplication.NotifyCanClose
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.NotifyCanClose
- uid: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewClosedEventArgs}
  commentId: T:System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewClosedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PreviewClosedEventArgs>
  nameWithType: EventHandler<PreviewClosedEventArgs>
  fullName: System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewClosedEventArgs>
  nameWithType.vb: EventHandler(Of PreviewClosedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewClosedEventArgs)
  name.vb: EventHandler(Of PreviewClosedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewClosedEventArgs
    name: PreviewClosedEventArgs
    nameWithType: PreviewClosedEventArgs
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewClosedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewClosedEventArgs
    name: PreviewClosedEventArgs
    nameWithType: PreviewClosedEventArgs
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewClosedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
