### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.DateTimeUtilities
  commentId: T:Sdl.LanguagePlatform.Core.DateTimeUtilities
  id: DateTimeUtilities
  parent: Sdl.LanguagePlatform.Core
  children:
  - Sdl.LanguagePlatform.Core.DateTimeUtilities.Normalize(System.DateTime)
  - Sdl.LanguagePlatform.Core.DateTimeUtilities.TryParseWithFallback(System.String,System.DateTime@)
  langs:
  - csharp
  - vb
  name: DateTimeUtilities
  nameWithType: DateTimeUtilities
  fullName: Sdl.LanguagePlatform.Core.DateTimeUtilities
  type: Class
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nUtilities for date and time manipulation.\n<p>\nThis class is intended for internal use and should not be used directly in third-party appliations.\n</p>\n"
  syntax:
    content: public static class DateTimeUtilities
    content.vb: Public Module DateTimeUtilities
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sdl.LanguagePlatform.Core.DateTimeUtilities.Normalize(System.DateTime)
  commentId: M:Sdl.LanguagePlatform.Core.DateTimeUtilities.Normalize(System.DateTime)
  id: Normalize(System.DateTime)
  parent: Sdl.LanguagePlatform.Core.DateTimeUtilities
  langs:
  - csharp
  - vb
  name: Normalize(DateTime)
  nameWithType: DateTimeUtilities.Normalize(DateTime)
  fullName: Sdl.LanguagePlatform.Core.DateTimeUtilities.Normalize(System.DateTime)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nNormalizes the date to UTC, unless <code data-dev-comment-type=\"paramref\" class=\"paramref\">dt</code>&apos;s date is already specified in UTC.\n"
  syntax:
    content: public static DateTime Normalize(DateTime dt)
    parameters:
    - id: dt
      type: System.DateTime
      description: The date to normalize
    return:
      type: System.DateTime
      description: The UTC-normalized date, or the identical value if the date is already in UTC.
    content.vb: Public Shared Function Normalize(dt As Date) As Date
  overload: Sdl.LanguagePlatform.Core.DateTimeUtilities.Normalize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.DateTimeUtilities.TryParseWithFallback(System.String,System.DateTime@)
  commentId: M:Sdl.LanguagePlatform.Core.DateTimeUtilities.TryParseWithFallback(System.String,System.DateTime@)
  id: TryParseWithFallback(System.String,System.DateTime@)
  parent: Sdl.LanguagePlatform.Core.DateTimeUtilities
  langs:
  - csharp
  - vb
  name: TryParseWithFallback(String, out DateTime)
  nameWithType: DateTimeUtilities.TryParseWithFallback(String, out DateTime)
  fullName: Sdl.LanguagePlatform.Core.DateTimeUtilities.TryParseWithFallback(System.String, out System.DateTime)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nAttempts to parse the specified string into a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object. First, \nSystem.DateTime.TryParse is used to attempt a parse in the universal format. \nIf that fails, a parse is attempted using the current local date/time format.\n"
  syntax:
    content: public static bool TryParseWithFallback(string s, out DateTime result)
    parameters:
    - id: s
      type: System.String
      description: The input string
    - id: result
      type: System.DateTime
      description: >-
        If the method returns <code>true</code>, holds the <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> value

        of the successful parse, adjusted to Universal time. If the method returns <code>false</code>, the

        value is undefined and should not be used.
    return:
      type: System.Boolean
      description: <code>true</code> if a parse was successful, and <code>false</code> otherwise.
    content.vb: Public Shared Function TryParseWithFallback(s As String, ByRef result As Date) As Boolean
  overload: Sdl.LanguagePlatform.Core.DateTimeUtilities.TryParseWithFallback*
  nameWithType.vb: DateTimeUtilities.TryParseWithFallback(String, ByRef DateTime)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.LanguagePlatform.Core.DateTimeUtilities.TryParseWithFallback(System.String, ByRef System.DateTime)
  name.vb: TryParseWithFallback(String, ByRef DateTime)
references:
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core.DateTimeUtilities.Normalize*
  commentId: Overload:Sdl.LanguagePlatform.Core.DateTimeUtilities.Normalize
  isExternal: true
  name: Normalize
  nameWithType: DateTimeUtilities.Normalize
  fullName: Sdl.LanguagePlatform.Core.DateTimeUtilities.Normalize
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Sdl.LanguagePlatform.Core.DateTimeUtilities.TryParseWithFallback*
  commentId: Overload:Sdl.LanguagePlatform.Core.DateTimeUtilities.TryParseWithFallback
  isExternal: true
  name: TryParseWithFallback
  nameWithType: DateTimeUtilities.TryParseWithFallback
  fullName: Sdl.LanguagePlatform.Core.DateTimeUtilities.TryParseWithFallback
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
