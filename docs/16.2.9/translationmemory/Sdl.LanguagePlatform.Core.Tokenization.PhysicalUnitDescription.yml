### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  id: PhysicalUnitDescription
  parent: Sdl.LanguagePlatform.Core.Tokenization
  children:
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor(Sdl.LanguagePlatform.Core.Tokenization.Unit,Sdl.LanguagePlatform.Core.Tokenization.UnitType,Sdl.LanguagePlatform.Core.Tokenization.UnitSystem,System.Boolean,System.Int32,System.Double,Sdl.LanguagePlatform.Core.Tokenization.Unit,System.String,System.String)
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor(Sdl.LanguagePlatform.Core.Tokenization.Unit,Sdl.LanguagePlatform.Core.Tokenization.UnitType,Sdl.LanguagePlatform.Core.Tokenization.UnitSystem,System.Boolean,System.Int32,System.Double,Sdl.LanguagePlatform.Core.Tokenization.Unit,System.String,System.String,System.String)
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Abbreviations
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Category
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.ConversionFactor
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.ConversionUnit
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.CultureSpecificAbbreviations
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.GetCultureSpecificAbbreviations(System.Globalization.CultureInfo)
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.GetPreferredAbbreviation(System.Globalization.CultureInfo)
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.HasAbbreviation(System.String)
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.HasAbbreviation(System.String,System.Globalization.CultureInfo)
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.IsCanonical
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Magnitude
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Name
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Unit
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.UnitSystem
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.UnitType
  langs:
  - csharp
  - vb
  name: PhysicalUnitDescription
  nameWithType: PhysicalUnitDescription
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  type: Class
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nRepresents data associated with physical units known and processed by the system.\n"
  syntax:
    content: public class PhysicalUnitDescription
    content.vb: Public Class PhysicalUnitDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: PhysicalUnitDescription()
  nameWithType: PhysicalUnitDescription.PhysicalUnitDescription()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.PhysicalUnitDescription()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nFor XML (de)serialization only\n"
  syntax:
    content: public PhysicalUnitDescription()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)
  id: '#ctor(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)'
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: PhysicalUnitDescription(PhysicalUnitDescription)
  nameWithType: PhysicalUnitDescription.PhysicalUnitDescription(PhysicalUnitDescription)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.PhysicalUnitDescription(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nInitializes a new instance, using the values of another instance, creating a deep copy.\n"
  syntax:
    content: public PhysicalUnitDescription(PhysicalUnitDescription other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
      description: The instance to copy
    content.vb: Public Sub New(other As PhysicalUnitDescription)
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor(Sdl.LanguagePlatform.Core.Tokenization.Unit,Sdl.LanguagePlatform.Core.Tokenization.UnitType,Sdl.LanguagePlatform.Core.Tokenization.UnitSystem,System.Boolean,System.Int32,System.Double,Sdl.LanguagePlatform.Core.Tokenization.Unit,System.String,System.String)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor(Sdl.LanguagePlatform.Core.Tokenization.Unit,Sdl.LanguagePlatform.Core.Tokenization.UnitType,Sdl.LanguagePlatform.Core.Tokenization.UnitSystem,System.Boolean,System.Int32,System.Double,Sdl.LanguagePlatform.Core.Tokenization.Unit,System.String,System.String)
  id: '#ctor(Sdl.LanguagePlatform.Core.Tokenization.Unit,Sdl.LanguagePlatform.Core.Tokenization.UnitType,Sdl.LanguagePlatform.Core.Tokenization.UnitSystem,System.Boolean,System.Int32,System.Double,Sdl.LanguagePlatform.Core.Tokenization.Unit,System.String,System.String)'
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: PhysicalUnitDescription(Unit, UnitType, UnitSystem, Boolean, Int32, Double, Unit, String, String)
  nameWithType: PhysicalUnitDescription.PhysicalUnitDescription(Unit, UnitType, UnitSystem, Boolean, Int32, Double, Unit, String, String)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.PhysicalUnitDescription(Sdl.LanguagePlatform.Core.Tokenization.Unit, Sdl.LanguagePlatform.Core.Tokenization.UnitType, Sdl.LanguagePlatform.Core.Tokenization.UnitSystem, System.Boolean, System.Int32, System.Double, Sdl.LanguagePlatform.Core.Tokenization.Unit, System.String, System.String)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nInitializes a new instance with the provided values.\n"
  syntax:
    content: public PhysicalUnitDescription(Unit u, UnitType ut, UnitSystem us, bool isCanonical, int magnitude, double conversionFactor, Unit conversionUnit, string name, string abbreviation)
    parameters:
    - id: u
      type: Sdl.LanguagePlatform.Core.Tokenization.Unit
      description: The unit
    - id: ut
      type: Sdl.LanguagePlatform.Core.Tokenization.UnitType
      description: The unit type
    - id: us
      type: Sdl.LanguagePlatform.Core.Tokenization.UnitSystem
      description: The unit system
    - id: isCanonical
      type: System.Boolean
      description: "A flag indicating whether this unit is canonical for the \nspecified unit type (i.e. is the base for conversions)"
    - id: magnitude
      type: System.Int32
      description: The magnitude level of this unit
    - id: conversionFactor
      type: System.Double
      description: The conversion factor to the conversion unit
    - id: conversionUnit
      type: Sdl.LanguagePlatform.Core.Tokenization.Unit
      description: The unit to use for conversions
    - id: name
      type: System.String
      description: The name of the unit
    - id: abbreviation
      type: System.String
      description: The abbreviations of this unit, separated by a vertical bar
    content.vb: Public Sub New(u As Unit, ut As UnitType, us As UnitSystem, isCanonical As Boolean, magnitude As Integer, conversionFactor As Double, conversionUnit As Unit, name As String, abbreviation As String)
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor(Sdl.LanguagePlatform.Core.Tokenization.Unit,Sdl.LanguagePlatform.Core.Tokenization.UnitType,Sdl.LanguagePlatform.Core.Tokenization.UnitSystem,System.Boolean,System.Int32,System.Double,Sdl.LanguagePlatform.Core.Tokenization.Unit,System.String,System.String,System.String)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor(Sdl.LanguagePlatform.Core.Tokenization.Unit,Sdl.LanguagePlatform.Core.Tokenization.UnitType,Sdl.LanguagePlatform.Core.Tokenization.UnitSystem,System.Boolean,System.Int32,System.Double,Sdl.LanguagePlatform.Core.Tokenization.Unit,System.String,System.String,System.String)
  id: '#ctor(Sdl.LanguagePlatform.Core.Tokenization.Unit,Sdl.LanguagePlatform.Core.Tokenization.UnitType,Sdl.LanguagePlatform.Core.Tokenization.UnitSystem,System.Boolean,System.Int32,System.Double,Sdl.LanguagePlatform.Core.Tokenization.Unit,System.String,System.String,System.String)'
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: PhysicalUnitDescription(Unit, UnitType, UnitSystem, Boolean, Int32, Double, Unit, String, String, String)
  nameWithType: PhysicalUnitDescription.PhysicalUnitDescription(Unit, UnitType, UnitSystem, Boolean, Int32, Double, Unit, String, String, String)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.PhysicalUnitDescription(Sdl.LanguagePlatform.Core.Tokenization.Unit, Sdl.LanguagePlatform.Core.Tokenization.UnitType, Sdl.LanguagePlatform.Core.Tokenization.UnitSystem, System.Boolean, System.Int32, System.Double, Sdl.LanguagePlatform.Core.Tokenization.Unit, System.String, System.String, System.String)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nInitializes a new instance with the provided values.\n"
  syntax:
    content: public PhysicalUnitDescription(Unit u, UnitType ut, UnitSystem us, bool isCanonical, int magnitude, double conversionFactor, Unit conversionUnit, string name, string abbreviation, string preferredAbbreviation)
    parameters:
    - id: u
      type: Sdl.LanguagePlatform.Core.Tokenization.Unit
      description: The unit
    - id: ut
      type: Sdl.LanguagePlatform.Core.Tokenization.UnitType
      description: The unit type
    - id: us
      type: Sdl.LanguagePlatform.Core.Tokenization.UnitSystem
      description: The unit system
    - id: isCanonical
      type: System.Boolean
      description: "A flag indicating whether this unit is canonical for the \nspecified unit type (i.e. is the base for conversions)"
    - id: magnitude
      type: System.Int32
      description: The magnitude level of this unit
    - id: conversionFactor
      type: System.Double
      description: The conversion factor to the conversion unit
    - id: conversionUnit
      type: Sdl.LanguagePlatform.Core.Tokenization.Unit
      description: The unit to use for conversions
    - id: name
      type: System.String
      description: The name of the unit
    - id: abbreviation
      type: System.String
      description: The abbreviations of this unit, separated by a vertical bar
    - id: preferredAbbreviation
      type: System.String
      description: The preferred abbreviation (optional)
    content.vb: Public Sub New(u As Unit, ut As UnitType, us As UnitSystem, isCanonical As Boolean, magnitude As Integer, conversionFactor As Double, conversionUnit As Unit, name As String, abbreviation As String, preferredAbbreviation As String)
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.GetPreferredAbbreviation(System.Globalization.CultureInfo)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.GetPreferredAbbreviation(System.Globalization.CultureInfo)
  id: GetPreferredAbbreviation(System.Globalization.CultureInfo)
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: GetPreferredAbbreviation(CultureInfo)
  nameWithType: PhysicalUnitDescription.GetPreferredAbbreviation(CultureInfo)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.GetPreferredAbbreviation(System.Globalization.CultureInfo)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\n\n"
  syntax:
    content: public string GetPreferredAbbreviation(CultureInfo culture)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
    return:
      type: System.String
    content.vb: Public Function GetPreferredAbbreviation(culture As CultureInfo) As String
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.GetPreferredAbbreviation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.HasAbbreviation(System.String)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.HasAbbreviation(System.String)
  id: HasAbbreviation(System.String)
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: HasAbbreviation(String)
  nameWithType: PhysicalUnitDescription.HasAbbreviation(String)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.HasAbbreviation(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nComputes a value indicating whether the specified abbreviation is a known \nabbreviation for this unit.\n"
  syntax:
    content: public bool HasAbbreviation(string abbr)
    parameters:
    - id: abbr
      type: System.String
      description: A unit abbreviation
    return:
      type: System.Boolean
      description: "A value indicating whether the specified abbreviation is a known \nabbreviation for this unit."
    content.vb: Public Function HasAbbreviation(abbr As String) As Boolean
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.HasAbbreviation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.GetCultureSpecificAbbreviations(System.Globalization.CultureInfo)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.GetCultureSpecificAbbreviations(System.Globalization.CultureInfo)
  id: GetCultureSpecificAbbreviations(System.Globalization.CultureInfo)
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: GetCultureSpecificAbbreviations(CultureInfo)
  nameWithType: PhysicalUnitDescription.GetCultureSpecificAbbreviations(CultureInfo)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.GetCultureSpecificAbbreviations(System.Globalization.CultureInfo)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nObtains the culture-specific abbreviations for this unit, separated by a \nvertical bar.\n"
  syntax:
    content: public string GetCultureSpecificAbbreviations(CultureInfo culture)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: The culture to obtain the abbreviations for
    return:
      type: System.String
      description: The culture-specific unit abbreviations, or <code>null</code> if none are known
    content.vb: Public Function GetCultureSpecificAbbreviations(culture As CultureInfo) As String
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.GetCultureSpecificAbbreviations*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.HasAbbreviation(System.String,System.Globalization.CultureInfo)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.HasAbbreviation(System.String,System.Globalization.CultureInfo)
  id: HasAbbreviation(System.String,System.Globalization.CultureInfo)
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: HasAbbreviation(String, CultureInfo)
  nameWithType: PhysicalUnitDescription.HasAbbreviation(String, CultureInfo)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.HasAbbreviation(System.String, System.Globalization.CultureInfo)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nComputes a value indicating whether the specified abbreviation is a known \nabbreviation for this unit.\n"
  syntax:
    content: public bool HasAbbreviation(string abbr, CultureInfo culture)
    parameters:
    - id: abbr
      type: System.String
      description: A unit abbreviation
    - id: culture
      type: System.Globalization.CultureInfo
      description: "If specified, the culture-specific abbreviations for the \nunit will be checked in addition to the default abbreviations."
    return:
      type: System.Boolean
      description: "A value indicating whether the specified abbreviation is a known \nabbreviation for this unit."
    content.vb: Public Function HasAbbreviation(abbr As String, culture As CultureInfo) As Boolean
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.HasAbbreviation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Unit
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Unit
  id: Unit
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: Unit
  nameWithType: PhysicalUnitDescription.Unit
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Unit
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets or sets the unit\n"
  syntax:
    content: public Unit Unit { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.Unit
    content.vb: Public Property Unit As Unit
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Unit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.UnitType
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.UnitType
  id: UnitType
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: UnitType
  nameWithType: PhysicalUnitDescription.UnitType
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.UnitType
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets or sets the unit type\n"
  syntax:
    content: public UnitType UnitType { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.UnitType
    content.vb: Public Property UnitType As UnitType
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.UnitType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.UnitSystem
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.UnitSystem
  id: UnitSystem
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: UnitSystem
  nameWithType: PhysicalUnitDescription.UnitSystem
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.UnitSystem
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets or sets the unit system\n"
  syntax:
    content: public UnitSystem UnitSystem { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.UnitSystem
    content.vb: Public Property UnitSystem As UnitSystem
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.UnitSystem*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.IsCanonical
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.IsCanonical
  id: IsCanonical
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: IsCanonical
  nameWithType: PhysicalUnitDescription.IsCanonical
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.IsCanonical
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets or sets a flag which indicates whether this unit is the canonical unit in the \ncurrent unit type and system\n"
  syntax:
    content: public bool IsCanonical { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsCanonical As Boolean
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.IsCanonical*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Magnitude
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Magnitude
  id: Magnitude
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: Magnitude
  nameWithType: PhysicalUnitDescription.Magnitude
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Magnitude
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets or sets the magnitude of this unit, in comparison to other units of the same type and system.\n"
  syntax:
    content: public int Magnitude { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Magnitude As Integer
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Magnitude*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.ConversionFactor
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.ConversionFactor
  id: ConversionFactor
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: ConversionFactor
  nameWithType: PhysicalUnitDescription.ConversionFactor
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.ConversionFactor
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets or sets the conversion factor to apply when converting to the <xref href=\"Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.ConversionUnit\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public double ConversionFactor { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property ConversionFactor As Double
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.ConversionFactor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.ConversionUnit
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.ConversionUnit
  id: ConversionUnit
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: ConversionUnit
  nameWithType: PhysicalUnitDescription.ConversionUnit
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.ConversionUnit
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets or sets the conversion unit to use when converting across unit systems\n"
  syntax:
    content: public Unit ConversionUnit { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.Unit
    content.vb: Public Property ConversionUnit As Unit
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.ConversionUnit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Name
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Name
  id: Name
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PhysicalUnitDescription.Name
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Name
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets or sets the name of the unit\n"
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Abbreviations
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Abbreviations
  id: Abbreviations
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: Abbreviations
  nameWithType: PhysicalUnitDescription.Abbreviations
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Abbreviations
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets or sets the standard (culture-independent) abbreviations of this unit, separated by a \nvertical bar.\n"
  syntax:
    content: public string Abbreviations { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Abbreviations As String
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Abbreviations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.CultureSpecificAbbreviations
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.CultureSpecificAbbreviations
  id: CultureSpecificAbbreviations
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: CultureSpecificAbbreviations
  nameWithType: PhysicalUnitDescription.CultureSpecificAbbreviations
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.CultureSpecificAbbreviations
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets or sets a list of culture-specific abbreviations for this unit, \nin the form of pairs where the first part is a culture code, and the\nsecond is the list of abbreviations.\n"
  syntax:
    content: public List<Pair<string>> CultureSpecificAbbreviations { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Pair{System.String}}
    content.vb: Public Property CultureSpecificAbbreviations As List(Of Pair(Of String))
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.CultureSpecificAbbreviations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Category
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Category
  id: Category
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: PhysicalUnitDescription.Category
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Category
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public string Category { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Category As String
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Category*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.Core.Tokenization
  commentId: N:Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Sdl.LanguagePlatform.Core.Tokenization
  nameWithType: Sdl.LanguagePlatform.Core.Tokenization
  fullName: Sdl.LanguagePlatform.Core.Tokenization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.#ctor
  isExternal: true
  name: PhysicalUnitDescription
  nameWithType: PhysicalUnitDescription.PhysicalUnitDescription
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.PhysicalUnitDescription
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: PhysicalUnitDescription
  nameWithType: PhysicalUnitDescription
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
- uid: Sdl.LanguagePlatform.Core.Tokenization.Unit
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.Unit
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Unit
  nameWithType: Unit
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Unit
- uid: Sdl.LanguagePlatform.Core.Tokenization.UnitType
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.UnitType
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: UnitType
  nameWithType: UnitType
  fullName: Sdl.LanguagePlatform.Core.Tokenization.UnitType
- uid: Sdl.LanguagePlatform.Core.Tokenization.UnitSystem
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.UnitSystem
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: UnitSystem
  nameWithType: UnitSystem
  fullName: Sdl.LanguagePlatform.Core.Tokenization.UnitSystem
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.GetPreferredAbbreviation*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.GetPreferredAbbreviation
  isExternal: true
  name: GetPreferredAbbreviation
  nameWithType: PhysicalUnitDescription.GetPreferredAbbreviation
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.GetPreferredAbbreviation
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.HasAbbreviation*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.HasAbbreviation
  isExternal: true
  name: HasAbbreviation
  nameWithType: PhysicalUnitDescription.HasAbbreviation
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.HasAbbreviation
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.GetCultureSpecificAbbreviations*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.GetCultureSpecificAbbreviations
  isExternal: true
  name: GetCultureSpecificAbbreviations
  nameWithType: PhysicalUnitDescription.GetCultureSpecificAbbreviations
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.GetCultureSpecificAbbreviations
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Unit*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Unit
  isExternal: true
  name: Unit
  nameWithType: PhysicalUnitDescription.Unit
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Unit
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.UnitType*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.UnitType
  isExternal: true
  name: UnitType
  nameWithType: PhysicalUnitDescription.UnitType
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.UnitType
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.UnitSystem*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.UnitSystem
  isExternal: true
  name: UnitSystem
  nameWithType: PhysicalUnitDescription.UnitSystem
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.UnitSystem
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.IsCanonical*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.IsCanonical
  isExternal: true
  name: IsCanonical
  nameWithType: PhysicalUnitDescription.IsCanonical
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.IsCanonical
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Magnitude*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Magnitude
  isExternal: true
  name: Magnitude
  nameWithType: PhysicalUnitDescription.Magnitude
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Magnitude
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.ConversionFactor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.ConversionFactor
  isExternal: true
  name: ConversionFactor
  nameWithType: PhysicalUnitDescription.ConversionFactor
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.ConversionFactor
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.ConversionUnit*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.ConversionUnit
  isExternal: true
  name: ConversionUnit
  nameWithType: PhysicalUnitDescription.ConversionUnit
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.ConversionUnit
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Name*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Name
  isExternal: true
  name: Name
  nameWithType: PhysicalUnitDescription.Name
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Name
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Abbreviations*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Abbreviations
  isExternal: true
  name: Abbreviations
  nameWithType: PhysicalUnitDescription.Abbreviations
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Abbreviations
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.CultureSpecificAbbreviations*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.CultureSpecificAbbreviations
  isExternal: true
  name: CultureSpecificAbbreviations
  nameWithType: PhysicalUnitDescription.CultureSpecificAbbreviations
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.CultureSpecificAbbreviations
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Pair{System.String}}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Pair{System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Pair<String>>
  nameWithType: List<Pair<String>>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Pair<System.String>>
  nameWithType.vb: List(Of Pair(Of String))
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Pair(Of System.String))
  name.vb: List(Of Pair(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.Pair`1
    name: Pair
    nameWithType: Pair
    fullName: Sdl.LanguagePlatform.Core.Pair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.Pair`1
    name: Pair
    nameWithType: Pair
    fullName: Sdl.LanguagePlatform.Core.Pair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Category*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Category
  isExternal: true
  name: Category
  nameWithType: PhysicalUnitDescription.Category
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription.Category
