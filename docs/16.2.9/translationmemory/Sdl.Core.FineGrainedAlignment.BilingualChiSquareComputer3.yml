### YamlMime:ManagedReference
items:
- uid: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3
  commentId: T:Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3
  id: BilingualChiSquareComputer3
  parent: Sdl.Core.FineGrainedAlignment
  children:
  - Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.#ctor(Sdl.LanguagePlatform.Stat.DataLocation2,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Pair{Sdl.LanguagePlatform.Stat.IntSegment}})
  - Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Compute
  - Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Compute(System.Double,System.Int32,System.Int32)
  - Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Progress
  langs:
  - csharp
  - vb
  name: BilingualChiSquareComputer3
  nameWithType: BilingualChiSquareComputer3
  fullName: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3
  type: Class
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public class BilingualChiSquareComputer3
    content.vb: Public Class BilingualChiSquareComputer3
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Progress
  commentId: F:Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Progress
  id: Progress
  parent: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: BilingualChiSquareComputer3.Progress
  fullName: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Progress
  type: Field
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public EventHandler<TranslationModelProgressEventArgs> Progress
    return:
      type: System.EventHandler{Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs}
    content.vb: Public Progress As EventHandler(Of TranslationModelProgressEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.#ctor(Sdl.LanguagePlatform.Stat.DataLocation2,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Pair{Sdl.LanguagePlatform.Stat.IntSegment}})
  commentId: M:Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.#ctor(Sdl.LanguagePlatform.Stat.DataLocation2,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Pair{Sdl.LanguagePlatform.Stat.IntSegment}})
  id: '#ctor(Sdl.LanguagePlatform.Stat.DataLocation2,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Pair{Sdl.LanguagePlatform.Stat.IntSegment}})'
  parent: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3
  langs:
  - csharp
  - vb
  name: BilingualChiSquareComputer3(DataLocation2, IEnumerable<Pair<IntSegment>>)
  nameWithType: BilingualChiSquareComputer3.BilingualChiSquareComputer3(DataLocation2, IEnumerable<Pair<IntSegment>>)
  fullName: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.BilingualChiSquareComputer3(Sdl.LanguagePlatform.Stat.DataLocation2, System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.Core.Pair<Sdl.LanguagePlatform.Stat.IntSegment>>)
  type: Constructor
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public BilingualChiSquareComputer3(DataLocation2 location, IEnumerable<Pair<IntSegment>> segmentReaders)
    parameters:
    - id: location
      type: Sdl.LanguagePlatform.Stat.DataLocation2
    - id: segmentReaders
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Pair{Sdl.LanguagePlatform.Stat.IntSegment}}
    content.vb: Public Sub New(location As DataLocation2, segmentReaders As IEnumerable(Of Pair(Of IntSegment)))
  overload: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.#ctor*
  nameWithType.vb: BilingualChiSquareComputer3.BilingualChiSquareComputer3(DataLocation2, IEnumerable(Of Pair(Of IntSegment)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.BilingualChiSquareComputer3(Sdl.LanguagePlatform.Stat.DataLocation2, System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.Core.Pair(Of Sdl.LanguagePlatform.Stat.IntSegment)))
  name.vb: BilingualChiSquareComputer3(DataLocation2, IEnumerable(Of Pair(Of IntSegment)))
- uid: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Compute
  commentId: M:Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Compute
  id: Compute
  parent: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3
  langs:
  - csharp
  - vb
  name: Compute()
  nameWithType: BilingualChiSquareComputer3.Compute()
  fullName: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Compute()
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  summary: "\nComputes chi-square scores for all token pairs in the corpus, using default parameters.\n"
  syntax:
    content: public SparseMatrix<double> Compute()
    return:
      type: Sdl.LanguagePlatform.Stat.SparseMatrix{System.Double}
      description: A matrix with the scores. Empty cells are below the min score
    content.vb: Public Function Compute As SparseMatrix(Of Double)
  overload: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Compute*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Compute(System.Double,System.Int32,System.Int32)
  commentId: M:Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Compute(System.Double,System.Int32,System.Int32)
  id: Compute(System.Double,System.Int32,System.Int32)
  parent: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3
  langs:
  - csharp
  - vb
  name: Compute(Double, Int32, Int32)
  nameWithType: BilingualChiSquareComputer3.Compute(Double, Int32, Int32)
  fullName: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Compute(System.Double, System.Int32, System.Int32)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  summary: "\nComputes chi-square scores for all token pairs of the corpus. Can take very long (several hours) to\ncompute on larger TMs (200.000 TUs and up).\n"
  syntax:
    content: public SparseMatrix<double> Compute(double minScore, int minFreq, int minCooc)
    parameters:
    - id: minScore
      type: System.Double
      description: The minimum chi-square score a token pair must have to be included in the result. 5% ~= minscore = 3.841 (should be the minimum)
    - id: minFreq
      type: System.Int32
      description: minimum occurrence (frequency) of a token to be considered
    - id: minCooc
      type: System.Int32
      description: minimum co-occurrence of a token pair to be considered
    return:
      type: Sdl.LanguagePlatform.Stat.SparseMatrix{System.Double}
      description: A matrix with the scores. Empty cells are below the min score
    content.vb: Public Function Compute(minScore As Double, minFreq As Integer, minCooc As Integer) As SparseMatrix(Of Double)
  overload: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Compute*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.Core.FineGrainedAlignment
  commentId: N:Sdl.Core.FineGrainedAlignment
  isExternal: true
  name: Sdl.Core.FineGrainedAlignment
  nameWithType: Sdl.Core.FineGrainedAlignment
  fullName: Sdl.Core.FineGrainedAlignment
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs}
  commentId: T:System.EventHandler{Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<TranslationModelProgressEventArgs>
  nameWithType: EventHandler<TranslationModelProgressEventArgs>
  fullName: System.EventHandler<Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs>
  nameWithType.vb: EventHandler(Of TranslationModelProgressEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs)
  name.vb: EventHandler(Of TranslationModelProgressEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs
    name: TranslationModelProgressEventArgs
    nameWithType: TranslationModelProgressEventArgs
    fullName: Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs
    name: TranslationModelProgressEventArgs
    nameWithType: TranslationModelProgressEventArgs
    fullName: Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.#ctor*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.#ctor
  isExternal: true
  name: BilingualChiSquareComputer3
  nameWithType: BilingualChiSquareComputer3.BilingualChiSquareComputer3
  fullName: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.BilingualChiSquareComputer3
- uid: Sdl.LanguagePlatform.Stat.DataLocation2
  commentId: '!:Sdl.LanguagePlatform.Stat.DataLocation2'
  isExternal: true
  name: DataLocation2
  nameWithType: DataLocation2
  fullName: Sdl.LanguagePlatform.Stat.DataLocation2
- uid: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Pair{Sdl.LanguagePlatform.Stat.IntSegment}}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Pair{Sdl.LanguagePlatform.Stat.IntSegment}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Pair<IntSegment>>
  nameWithType: IEnumerable<Pair<IntSegment>>
  fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.Core.Pair<Sdl.LanguagePlatform.Stat.IntSegment>>
  nameWithType.vb: IEnumerable(Of Pair(Of IntSegment))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.Core.Pair(Of Sdl.LanguagePlatform.Stat.IntSegment))
  name.vb: IEnumerable(Of Pair(Of IntSegment))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.Pair`1
    name: Pair
    nameWithType: Pair
    fullName: Sdl.LanguagePlatform.Core.Pair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Stat.IntSegment
    name: IntSegment
    nameWithType: IntSegment
    fullName: Sdl.LanguagePlatform.Stat.IntSegment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.Pair`1
    name: Pair
    nameWithType: Pair
    fullName: Sdl.LanguagePlatform.Core.Pair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Stat.IntSegment
    name: IntSegment
    nameWithType: IntSegment
    fullName: Sdl.LanguagePlatform.Stat.IntSegment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Compute*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Compute
  isExternal: true
  name: Compute
  nameWithType: BilingualChiSquareComputer3.Compute
  fullName: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Compute
- uid: Sdl.LanguagePlatform.Stat.SparseMatrix{System.Double}
  commentId: '!:Sdl.LanguagePlatform.Stat.SparseMatrix{System.Double}'
  definition: Sdl.LanguagePlatform.Stat.SparseMatrix`1
  name: SparseMatrix<Double>
  nameWithType: SparseMatrix<Double>
  fullName: Sdl.LanguagePlatform.Stat.SparseMatrix<System.Double>
  nameWithType.vb: SparseMatrix(Of Double)
  fullName.vb: Sdl.LanguagePlatform.Stat.SparseMatrix(Of System.Double)
  name.vb: SparseMatrix(Of Double)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Stat.SparseMatrix`1
    name: SparseMatrix
    nameWithType: SparseMatrix
    fullName: Sdl.LanguagePlatform.Stat.SparseMatrix
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.LanguagePlatform.Stat.SparseMatrix`1
    name: SparseMatrix
    nameWithType: SparseMatrix
    fullName: Sdl.LanguagePlatform.Stat.SparseMatrix
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Stat.SparseMatrix`1
  isExternal: true
  name: SparseMatrix<>
  nameWithType: SparseMatrix<>
  fullName: Sdl.LanguagePlatform.Stat.SparseMatrix<>
  nameWithType.vb: SparseMatrix(Of )
  fullName.vb: Sdl.LanguagePlatform.Stat.SparseMatrix(Of )
  name.vb: SparseMatrix(Of )
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Stat.SparseMatrix`1
    name: SparseMatrix
    nameWithType: SparseMatrix
    fullName: Sdl.LanguagePlatform.Stat.SparseMatrix
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.LanguagePlatform.Stat.SparseMatrix`1
    name: SparseMatrix
    nameWithType: SparseMatrix
    fullName: Sdl.LanguagePlatform.Stat.SparseMatrix
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
