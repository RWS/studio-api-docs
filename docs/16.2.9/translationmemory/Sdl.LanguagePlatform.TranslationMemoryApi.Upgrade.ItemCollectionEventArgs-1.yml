### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs`1
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs`1
  id: ItemCollectionEventArgs`1
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs`1.#ctor(`0)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs`1.Item
  langs:
  - csharp
  - vb
  name: ItemCollectionEventArgs<T>
  nameWithType: ItemCollectionEventArgs<T>
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs<T>
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nItemCollectionEventArgs class represents item collection event arguments.\n"
  syntax:
    content: 'public abstract class ItemCollectionEventArgs<T> : EventArgs'
    typeParameters:
    - id: T
      description: item type
    content.vb: >-
      Public MustInherit Class ItemCollectionEventArgs(Of T)
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  derivedClasses:
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionAddedEventArgs`1
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionRemovedEventArgs`1
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ItemCollectionEventArgs(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs(Of T)
  name.vb: ItemCollectionEventArgs(Of T)
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs`1.#ctor(`0)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs`1
  langs:
  - csharp
  - vb
  name: ItemCollectionEventArgs(T)
  nameWithType: ItemCollectionEventArgs<T>.ItemCollectionEventArgs(T)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs<T>.ItemCollectionEventArgs(T)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nConstructor that takes the given item.\n"
  syntax:
    content: protected ItemCollectionEventArgs(T item)
    parameters:
    - id: item
      type: '{T}'
      description: item
    content.vb: Protected Sub New(item As T)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs`1.#ctor*
  nameWithType.vb: ItemCollectionEventArgs(Of T).ItemCollectionEventArgs(T)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs(Of T).ItemCollectionEventArgs(T)
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs`1.Item
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs`1.Item
  id: Item
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs`1
  langs:
  - csharp
  - vb
  name: Item
  nameWithType: ItemCollectionEventArgs<T>.Item
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs<T>.Item
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nItem property represents the item that has been added or removed.\n"
  syntax:
    content: public T Item { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property Item As T
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs`1.Item*
  nameWithType.vb: ItemCollectionEventArgs(Of T).Item
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs(Of T).Item
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs`1.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs`1.#ctor
  isExternal: true
  name: ItemCollectionEventArgs
  nameWithType: ItemCollectionEventArgs<T>.ItemCollectionEventArgs
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs<T>.ItemCollectionEventArgs
  nameWithType.vb: ItemCollectionEventArgs(Of T).ItemCollectionEventArgs
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs(Of T).ItemCollectionEventArgs
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs`1.Item*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs`1.Item
  isExternal: true
  name: Item
  nameWithType: ItemCollectionEventArgs<T>.Item
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs<T>.Item
  nameWithType.vb: ItemCollectionEventArgs(Of T).Item
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ItemCollectionEventArgs(Of T).Item
