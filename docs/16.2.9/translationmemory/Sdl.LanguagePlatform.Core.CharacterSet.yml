### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.CharacterSet
  commentId: T:Sdl.LanguagePlatform.Core.CharacterSet
  id: CharacterSet
  parent: Sdl.LanguagePlatform.Core
  children:
  - Sdl.LanguagePlatform.Core.CharacterSet.#ctor
  - Sdl.LanguagePlatform.Core.CharacterSet.Add(Sdl.LanguagePlatform.Core.CharacterSet)
  - Sdl.LanguagePlatform.Core.CharacterSet.Add(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterSet.Add(System.Char,System.Char)
  - Sdl.LanguagePlatform.Core.CharacterSet.Add(System.Globalization.UnicodeCategory)
  - Sdl.LanguagePlatform.Core.CharacterSet.Contains(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterSet.Negated
  - Sdl.LanguagePlatform.Core.CharacterSet.Signature
  - Sdl.LanguagePlatform.Core.CharacterSet.ToString
  langs:
  - csharp
  - vb
  name: CharacterSet
  nameWithType: CharacterSet
  fullName: Sdl.LanguagePlatform.Core.CharacterSet
  type: Class
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nRepresents a collection of characters. \n<remarks>This class is internal and not intended to be used directly\nin your code.</remarks>\n"
  syntax:
    content: public class CharacterSet
    content.vb: Public Class CharacterSet
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.Core.CharacterSet.Contains(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterSet.Contains(System.Char)
  id: Contains(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterSet
  langs:
  - csharp
  - vb
  name: Contains(Char)
  nameWithType: CharacterSet.Contains(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterSet.Contains(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nTests whether the character <code data-dev-comment-type=\"paramref\" class=\"paramref\">c</code> is contained in this character set.\n"
  syntax:
    content: public bool Contains(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character
    return:
      type: System.Boolean
      description: <code>true</code> if <code data-dev-comment-type="paramref" class="paramref">c</code> is contained in the set, and <code>false</code> otherwise.
    content.vb: Public Function Contains(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterSet.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.CharacterSet.Add(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterSet.Add(System.Char)
  id: Add(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterSet
  langs:
  - csharp
  - vb
  name: Add(Char)
  nameWithType: CharacterSet.Add(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterSet.Add(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nAdds <code data-dev-comment-type=\"paramref\" class=\"paramref\">c</code> to this set.\n"
  syntax:
    content: public void Add(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character to add.
    content.vb: Public Sub Add(c As Char)
  overload: Sdl.LanguagePlatform.Core.CharacterSet.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.CharacterSet.Add(System.Char,System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterSet.Add(System.Char,System.Char)
  id: Add(System.Char,System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterSet
  langs:
  - csharp
  - vb
  name: Add(Char, Char)
  nameWithType: CharacterSet.Add(Char, Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterSet.Add(System.Char, System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nAdds a range of characters to this set.\n"
  syntax:
    content: public void Add(char lower, char upper)
    parameters:
    - id: lower
      type: System.Char
      description: The lower bound of the range
    - id: upper
      type: System.Char
      description: The upper bound of the range (inclusive)
    content.vb: Public Sub Add(lower As Char, upper As Char)
  overload: Sdl.LanguagePlatform.Core.CharacterSet.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.CharacterSet.Add(System.Globalization.UnicodeCategory)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterSet.Add(System.Globalization.UnicodeCategory)
  id: Add(System.Globalization.UnicodeCategory)
  parent: Sdl.LanguagePlatform.Core.CharacterSet
  langs:
  - csharp
  - vb
  name: Add(UnicodeCategory)
  nameWithType: CharacterSet.Add(UnicodeCategory)
  fullName: Sdl.LanguagePlatform.Core.CharacterSet.Add(System.Globalization.UnicodeCategory)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nAdds the specified <xref href=\"System.Globalization.UnicodeCategory\" data-throw-if-not-resolved=\"false\"></xref> to the set.\n"
  syntax:
    content: public void Add(UnicodeCategory category)
    parameters:
    - id: category
      type: System.Globalization.UnicodeCategory
      description: The category to add.
    content.vb: Public Sub Add(category As UnicodeCategory)
  overload: Sdl.LanguagePlatform.Core.CharacterSet.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.CharacterSet.Add(Sdl.LanguagePlatform.Core.CharacterSet)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterSet.Add(Sdl.LanguagePlatform.Core.CharacterSet)
  id: Add(Sdl.LanguagePlatform.Core.CharacterSet)
  parent: Sdl.LanguagePlatform.Core.CharacterSet
  langs:
  - csharp
  - vb
  name: Add(CharacterSet)
  nameWithType: CharacterSet.Add(CharacterSet)
  fullName: Sdl.LanguagePlatform.Core.CharacterSet.Add(Sdl.LanguagePlatform.Core.CharacterSet)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nAdds the members of the <code data-dev-comment-type=\"paramref\" class=\"paramref\">other</code> character set to this set. \n<remarks>\nThe <xref href=\"Sdl.LanguagePlatform.Core.CharacterSet.Negated\" data-throw-if-not-resolved=\"false\"></xref> flags of both sets are ignored, which may effectively inverse\nmembership semantics. It is advised to test the negated flags before.\n</remarks>\n"
  syntax:
    content: public void Add(CharacterSet other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.CharacterSet
      description: The character set to add to this set
    content.vb: Public Sub Add(other As CharacterSet)
  overload: Sdl.LanguagePlatform.Core.CharacterSet.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.CharacterSet.Signature
  commentId: M:Sdl.LanguagePlatform.Core.CharacterSet.Signature
  id: Signature
  parent: Sdl.LanguagePlatform.Core.CharacterSet
  langs:
  - csharp
  - vb
  name: Signature()
  nameWithType: CharacterSet.Signature()
  fullName: Sdl.LanguagePlatform.Core.CharacterSet.Signature()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\n\n"
  syntax:
    content: public string Signature()
    return:
      type: System.String
    content.vb: Public Function Signature As String
  overload: Sdl.LanguagePlatform.Core.CharacterSet.Signature*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.CharacterSet.ToString
  commentId: M:Sdl.LanguagePlatform.Core.CharacterSet.ToString
  id: ToString
  parent: Sdl.LanguagePlatform.Core.CharacterSet
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CharacterSet.ToString()
  fullName: Sdl.LanguagePlatform.Core.CharacterSet.ToString()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\n<xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representation of the object, for display purposes.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sdl.LanguagePlatform.Core.CharacterSet.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.CharacterSet.#ctor
  commentId: M:Sdl.LanguagePlatform.Core.CharacterSet.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.Core.CharacterSet
  langs:
  - csharp
  - vb
  name: CharacterSet()
  nameWithType: CharacterSet.CharacterSet()
  fullName: Sdl.LanguagePlatform.Core.CharacterSet.CharacterSet()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public CharacterSet()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.Core.CharacterSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.CharacterSet.Negated
  commentId: P:Sdl.LanguagePlatform.Core.CharacterSet.Negated
  id: Negated
  parent: Sdl.LanguagePlatform.Core.CharacterSet
  langs:
  - csharp
  - vb
  name: Negated
  nameWithType: CharacterSet.Negated
  fullName: Sdl.LanguagePlatform.Core.CharacterSet.Negated
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nGets or sets whether this character set is inversed (negated) or not. \n"
  syntax:
    content: public bool Negated { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Negated As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterSet.Negated*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core.CharacterSet.Contains*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterSet.Contains
  isExternal: true
  name: Contains
  nameWithType: CharacterSet.Contains
  fullName: Sdl.LanguagePlatform.Core.CharacterSet.Contains
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.Core.CharacterSet.Add*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterSet.Add
  isExternal: true
  name: Add
  nameWithType: CharacterSet.Add
  fullName: Sdl.LanguagePlatform.Core.CharacterSet.Add
- uid: System.Globalization.UnicodeCategory
  commentId: T:System.Globalization.UnicodeCategory
  parent: System.Globalization
  isExternal: true
  name: UnicodeCategory
  nameWithType: UnicodeCategory
  fullName: System.Globalization.UnicodeCategory
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Sdl.LanguagePlatform.Core.CharacterSet
  commentId: T:Sdl.LanguagePlatform.Core.CharacterSet
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: CharacterSet
  nameWithType: CharacterSet
  fullName: Sdl.LanguagePlatform.Core.CharacterSet
- uid: Sdl.LanguagePlatform.Core.CharacterSet.Signature*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterSet.Signature
  isExternal: true
  name: Signature
  nameWithType: CharacterSet.Signature
  fullName: Sdl.LanguagePlatform.Core.CharacterSet.Signature
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.CharacterSet.ToString*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterSet.ToString
  isExternal: true
  name: ToString
  nameWithType: CharacterSet.ToString
  fullName: Sdl.LanguagePlatform.Core.CharacterSet.ToString
- uid: Sdl.LanguagePlatform.Core.CharacterSet.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterSet.#ctor
  isExternal: true
  name: CharacterSet
  nameWithType: CharacterSet.CharacterSet
  fullName: Sdl.LanguagePlatform.Core.CharacterSet.CharacterSet
- uid: Sdl.LanguagePlatform.Core.CharacterSet.Negated*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterSet.Negated
  isExternal: true
  name: Negated
  nameWithType: CharacterSet.Negated
  fullName: Sdl.LanguagePlatform.Core.CharacterSet.Negated
