### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  id: ILegacyTranslationMemorySetup
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Copyright
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Description
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.ExpirationDate
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.FGASupport
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Fields
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.FuzzyIndexes
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.LanguageDirections
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Name
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Recognizers
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TextContextMatchType
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TokenizerFlags
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TotalTranslationUnitCount
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.UsesIdContextMatch
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.WordCountFlags
  langs:
  - csharp
  - vb
  name: ILegacyTranslationMemorySetup
  nameWithType: ILegacyTranslationMemorySetup
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  type: Interface
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nRepresents setup information retrieved from a legacy translation memory (see <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemory.GetSetup\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  syntax:
    content: public interface ILegacyTranslationMemorySetup
    content.vb: Public Interface ILegacyTranslationMemorySetup
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Name
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Name
  id: Name
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ILegacyTranslationMemorySetup.Name
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Name
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets the name of the translation memory.\n"
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.LanguageDirections
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.LanguageDirections
  id: LanguageDirections
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  langs:
  - csharp
  - vb
  name: LanguageDirections
  nameWithType: ILegacyTranslationMemorySetup.LanguageDirections
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.LanguageDirections
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets the language directions of the translation memory.\n"
  syntax:
    content: ILegacyLanguageDirectionData[] LanguageDirections { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageDirectionData[]
    content.vb: ReadOnly Property LanguageDirections As ILegacyLanguageDirectionData()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.LanguageDirections*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TotalTranslationUnitCount
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TotalTranslationUnitCount
  id: TotalTranslationUnitCount
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  langs:
  - csharp
  - vb
  name: TotalTranslationUnitCount
  nameWithType: ILegacyTranslationMemorySetup.TotalTranslationUnitCount
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TotalTranslationUnitCount
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets the total number of translation units across all available language directions. Returns <pre><code>-1</code></pre> if this is not available \n(or cannot easily be obtained).\n"
  syntax:
    content: int TotalTranslationUnitCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property TotalTranslationUnitCount As Integer
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TotalTranslationUnitCount*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Fields
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Fields
  id: Fields
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: ILegacyTranslationMemorySetup.Fields
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Fields
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets the fields present in the legacy translation memory.\n"
  syntax:
    content: IList<FieldDefinition> Fields { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition}
    content.vb: ReadOnly Property Fields As IList(Of FieldDefinition)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Fields*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Copyright
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Copyright
  id: Copyright
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  langs:
  - csharp
  - vb
  name: Copyright
  nameWithType: ILegacyTranslationMemorySetup.Copyright
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Copyright
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets the copyright string. Can be null.\n"
  syntax:
    content: string Copyright { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Copyright As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Copyright*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Description
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Description
  id: Description
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ILegacyTranslationMemorySetup.Description
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Description
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets the translation memory description. Can be null.\n"
  syntax:
    content: string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Description As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Description*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Recognizers
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Recognizers
  id: Recognizers
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  langs:
  - csharp
  - vb
  name: Recognizers
  nameWithType: ILegacyTranslationMemorySetup.Recognizers
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Recognizers
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets which entities are being recognized when working with the translation memory.\n"
  syntax:
    content: BuiltinRecognizers Recognizers { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.BuiltinRecognizers
    content.vb: ReadOnly Property Recognizers As BuiltinRecognizers
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Recognizers*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.ExpirationDate
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.ExpirationDate
  id: ExpirationDate
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  langs:
  - csharp
  - vb
  name: ExpirationDate
  nameWithType: ILegacyTranslationMemorySetup.ExpirationDate
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.ExpirationDate
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets the expiration date of the translation memory. Can be null.\n"
  syntax:
    content: DateTime? ExpirationDate { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: ReadOnly Property ExpirationDate As Date?
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.ExpirationDate*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.FuzzyIndexes
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.FuzzyIndexes
  id: FuzzyIndexes
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  langs:
  - csharp
  - vb
  name: FuzzyIndexes
  nameWithType: ILegacyTranslationMemorySetup.FuzzyIndexes
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.FuzzyIndexes
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets the index types that are present in the translation memory.\n"
  syntax:
    content: FuzzyIndexes FuzzyIndexes { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexes
    content.vb: ReadOnly Property FuzzyIndexes As FuzzyIndexes
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.FuzzyIndexes*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TokenizerFlags
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TokenizerFlags
  id: TokenizerFlags
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  langs:
  - csharp
  - vb
  name: TokenizerFlags
  nameWithType: ILegacyTranslationMemorySetup.TokenizerFlags
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TokenizerFlags
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the flags affecting tokenizer behaviour for this TM.\n<remarks>Note that changing tokenizer flags may require reindexing.</remarks>\n"
  syntax:
    content: TokenizerFlags TokenizerFlags { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.TokenizerFlags
    content.vb: Property TokenizerFlags As TokenizerFlags
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TokenizerFlags*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.WordCountFlags
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.WordCountFlags
  id: WordCountFlags
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  langs:
  - csharp
  - vb
  name: WordCountFlags
  nameWithType: ILegacyTranslationMemorySetup.WordCountFlags
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.WordCountFlags
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the flags affecting word count behaviour for this TM.\n"
  syntax:
    content: WordCountFlags WordCountFlags { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.WordCountFlags
    content.vb: Property WordCountFlags As WordCountFlags
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.WordCountFlags*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.FGASupport
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.FGASupport
  id: FGASupport
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  langs:
  - csharp
  - vb
  name: FGASupport
  nameWithType: ILegacyTranslationMemorySetup.FGASupport
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.FGASupport
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the fine-grained alignment support for this TM.\n"
  syntax:
    content: FGASupport FGASupport { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FGASupport
    content.vb: Property FGASupport As FGASupport
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.FGASupport*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TextContextMatchType
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TextContextMatchType
  id: TextContextMatchType
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  langs:
  - csharp
  - vb
  name: TextContextMatchType
  nameWithType: ILegacyTranslationMemorySetup.TextContextMatchType
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TextContextMatchType
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nReturns the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TextContextMatchType\" data-throw-if-not-resolved=\"false\"></xref> specified for this TM when it was created.\n"
  syntax:
    content: TextContextMatchType TextContextMatchType { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.TextContextMatchType
    content.vb: Property TextContextMatchType As TextContextMatchType
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TextContextMatchType*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.UsesIdContextMatch
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.UsesIdContextMatch
  id: UsesIdContextMatch
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  langs:
  - csharp
  - vb
  name: UsesIdContextMatch
  nameWithType: ILegacyTranslationMemorySetup.UsesIdContextMatch
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.UsesIdContextMatch
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nIndicates whether this TM was created with IdContextMatch support\n"
  syntax:
    content: bool UsesIdContextMatch { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property UsesIdContextMatch As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.UsesIdContextMatch*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Name*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Name
  isExternal: true
  name: Name
  nameWithType: ILegacyTranslationMemorySetup.Name
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.LanguageDirections*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.LanguageDirections
  isExternal: true
  name: LanguageDirections
  nameWithType: ILegacyTranslationMemorySetup.LanguageDirections
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.LanguageDirections
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageDirectionData[]
  isExternal: true
  name: ILegacyLanguageDirectionData[]
  nameWithType: ILegacyLanguageDirectionData[]
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageDirectionData[]
  nameWithType.vb: ILegacyLanguageDirectionData()
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageDirectionData()
  name.vb: ILegacyLanguageDirectionData()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageDirectionData
    name: ILegacyLanguageDirectionData
    nameWithType: ILegacyLanguageDirectionData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageDirectionData
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageDirectionData
    name: ILegacyLanguageDirectionData
    nameWithType: ILegacyLanguageDirectionData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageDirectionData
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TotalTranslationUnitCount*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TotalTranslationUnitCount
  isExternal: true
  name: TotalTranslationUnitCount
  nameWithType: ILegacyTranslationMemorySetup.TotalTranslationUnitCount
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TotalTranslationUnitCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Fields*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Fields
  isExternal: true
  name: Fields
  nameWithType: ILegacyTranslationMemorySetup.Fields
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Fields
- uid: System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition}
  commentId: T:System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<FieldDefinition>
  nameWithType: IList<FieldDefinition>
  fullName: System.Collections.Generic.IList<Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition>
  nameWithType.vb: IList(Of FieldDefinition)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition)
  name.vb: IList(Of FieldDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
    name: FieldDefinition
    nameWithType: FieldDefinition
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
    name: FieldDefinition
    nameWithType: FieldDefinition
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Copyright*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Copyright
  isExternal: true
  name: Copyright
  nameWithType: ILegacyTranslationMemorySetup.Copyright
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Copyright
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Description*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Description
  isExternal: true
  name: Description
  nameWithType: ILegacyTranslationMemorySetup.Description
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Description
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Recognizers*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Recognizers
  isExternal: true
  name: Recognizers
  nameWithType: ILegacyTranslationMemorySetup.Recognizers
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.Recognizers
- uid: Sdl.LanguagePlatform.Core.Tokenization.BuiltinRecognizers
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.BuiltinRecognizers
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: BuiltinRecognizers
  nameWithType: BuiltinRecognizers
  fullName: Sdl.LanguagePlatform.Core.Tokenization.BuiltinRecognizers
- uid: Sdl.LanguagePlatform.Core.Tokenization
  commentId: N:Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Sdl.LanguagePlatform.Core.Tokenization
  nameWithType: Sdl.LanguagePlatform.Core.Tokenization
  fullName: Sdl.LanguagePlatform.Core.Tokenization
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.ExpirationDate*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.ExpirationDate
  isExternal: true
  name: ExpirationDate
  nameWithType: ILegacyTranslationMemorySetup.ExpirationDate
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.ExpirationDate
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.FuzzyIndexes*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.FuzzyIndexes
  isExternal: true
  name: FuzzyIndexes
  nameWithType: ILegacyTranslationMemorySetup.FuzzyIndexes
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.FuzzyIndexes
- uid: Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexes
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexes
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FuzzyIndexes
  nameWithType: FuzzyIndexes
  fullName: Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexes
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TokenizerFlags*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TokenizerFlags
  isExternal: true
  name: TokenizerFlags
  nameWithType: ILegacyTranslationMemorySetup.TokenizerFlags
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TokenizerFlags
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenizerFlags
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.TokenizerFlags
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: TokenizerFlags
  nameWithType: TokenizerFlags
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenizerFlags
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.WordCountFlags*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.WordCountFlags
  isExternal: true
  name: WordCountFlags
  nameWithType: ILegacyTranslationMemorySetup.WordCountFlags
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.WordCountFlags
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCountFlags
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.WordCountFlags
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: WordCountFlags
  nameWithType: WordCountFlags
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCountFlags
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.FGASupport*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.FGASupport
  isExternal: true
  name: FGASupport
  nameWithType: ILegacyTranslationMemorySetup.FGASupport
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.FGASupport
- uid: Sdl.LanguagePlatform.TranslationMemory.FGASupport
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FGASupport
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FGASupport
  nameWithType: FGASupport
  fullName: Sdl.LanguagePlatform.TranslationMemory.FGASupport
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TextContextMatchType*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TextContextMatchType
  isExternal: true
  name: TextContextMatchType
  nameWithType: ILegacyTranslationMemorySetup.TextContextMatchType
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.TextContextMatchType
- uid: Sdl.LanguagePlatform.TranslationMemory.TextContextMatchType
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TextContextMatchType
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: TextContextMatchType
  nameWithType: TextContextMatchType
  fullName: Sdl.LanguagePlatform.TranslationMemory.TextContextMatchType
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.UsesIdContextMatch*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.UsesIdContextMatch
  isExternal: true
  name: UsesIdContextMatch
  nameWithType: ILegacyTranslationMemorySetup.UsesIdContextMatch
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup.UsesIdContextMatch
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
