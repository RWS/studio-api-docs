### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.FileBased.PublishProjectResult
  commentId: T:Sdl.ProjectAutomation.FileBased.PublishProjectResult
  id: PublishProjectResult
  parent: Sdl.ProjectAutomation.FileBased
  children:
  - Sdl.ProjectAutomation.FileBased.PublishProjectResult.#ctor(Sdl.ProjectAutomation.Core.PublicationStatus,Sdl.ProjectAutomation.Core.ExecutionMessage[])
  - Sdl.ProjectAutomation.FileBased.PublishProjectResult.Messages
  - Sdl.ProjectAutomation.FileBased.PublishProjectResult.Status
  langs:
  - csharp
  - vb
  name: PublishProjectResult
  nameWithType: PublishProjectResult
  fullName: Sdl.ProjectAutomation.FileBased.PublishProjectResult
  type: Class
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nReturns the final status and any messages that occured during the Publish Project operation\n"
  syntax:
    content: public class PublishProjectResult
    content.vb: Public Class PublishProjectResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.FileBased.PublishProjectResult.#ctor(Sdl.ProjectAutomation.Core.PublicationStatus,Sdl.ProjectAutomation.Core.ExecutionMessage[])
  commentId: M:Sdl.ProjectAutomation.FileBased.PublishProjectResult.#ctor(Sdl.ProjectAutomation.Core.PublicationStatus,Sdl.ProjectAutomation.Core.ExecutionMessage[])
  id: '#ctor(Sdl.ProjectAutomation.Core.PublicationStatus,Sdl.ProjectAutomation.Core.ExecutionMessage[])'
  parent: Sdl.ProjectAutomation.FileBased.PublishProjectResult
  langs:
  - csharp
  - vb
  name: PublishProjectResult(PublicationStatus, ExecutionMessage[])
  nameWithType: PublishProjectResult.PublishProjectResult(PublicationStatus, ExecutionMessage[])
  fullName: Sdl.ProjectAutomation.FileBased.PublishProjectResult.PublishProjectResult(Sdl.ProjectAutomation.Core.PublicationStatus, Sdl.ProjectAutomation.Core.ExecutionMessage[])
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\n\n"
  syntax:
    content: public PublishProjectResult(PublicationStatus status, ExecutionMessage[] messages)
    parameters:
    - id: status
      type: Sdl.ProjectAutomation.Core.PublicationStatus
    - id: messages
      type: Sdl.ProjectAutomation.Core.ExecutionMessage[]
    content.vb: Public Sub New(status As PublicationStatus, messages As ExecutionMessage())
  overload: Sdl.ProjectAutomation.FileBased.PublishProjectResult.#ctor*
  nameWithType.vb: PublishProjectResult.PublishProjectResult(PublicationStatus, ExecutionMessage())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.PublishProjectResult.PublishProjectResult(Sdl.ProjectAutomation.Core.PublicationStatus, Sdl.ProjectAutomation.Core.ExecutionMessage())
  name.vb: PublishProjectResult(PublicationStatus, ExecutionMessage())
- uid: Sdl.ProjectAutomation.FileBased.PublishProjectResult.Status
  commentId: P:Sdl.ProjectAutomation.FileBased.PublishProjectResult.Status
  id: Status
  parent: Sdl.ProjectAutomation.FileBased.PublishProjectResult
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: PublishProjectResult.Status
  fullName: Sdl.ProjectAutomation.FileBased.PublishProjectResult.Status
  type: Property
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nThe Publication Status\n"
  syntax:
    content: public PublicationStatus Status { get; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.Core.PublicationStatus
    content.vb: Public ReadOnly Property Status As PublicationStatus
  overload: Sdl.ProjectAutomation.FileBased.PublishProjectResult.Status*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.FileBased.PublishProjectResult.Messages
  commentId: P:Sdl.ProjectAutomation.FileBased.PublishProjectResult.Messages
  id: Messages
  parent: Sdl.ProjectAutomation.FileBased.PublishProjectResult
  langs:
  - csharp
  - vb
  name: Messages
  nameWithType: PublishProjectResult.Messages
  fullName: Sdl.ProjectAutomation.FileBased.PublishProjectResult.Messages
  type: Property
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nArray of messages generated during the publish operation\n"
  syntax:
    content: public ExecutionMessage[] Messages { get; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.Core.ExecutionMessage[]
    content.vb: Public ReadOnly Property Messages As ExecutionMessage()
  overload: Sdl.ProjectAutomation.FileBased.PublishProjectResult.Messages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.ProjectAutomation.FileBased
  commentId: N:Sdl.ProjectAutomation.FileBased
  isExternal: true
  name: Sdl.ProjectAutomation.FileBased
  nameWithType: Sdl.ProjectAutomation.FileBased
  fullName: Sdl.ProjectAutomation.FileBased
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.FileBased.PublishProjectResult.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.PublishProjectResult.#ctor
  isExternal: true
  name: PublishProjectResult
  nameWithType: PublishProjectResult.PublishProjectResult
  fullName: Sdl.ProjectAutomation.FileBased.PublishProjectResult.PublishProjectResult
- uid: Sdl.ProjectAutomation.Core.PublicationStatus
  commentId: T:Sdl.ProjectAutomation.Core.PublicationStatus
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: PublicationStatus
  nameWithType: PublicationStatus
  fullName: Sdl.ProjectAutomation.Core.PublicationStatus
- uid: Sdl.ProjectAutomation.Core.ExecutionMessage[]
  isExternal: true
  name: ExecutionMessage[]
  nameWithType: ExecutionMessage[]
  fullName: Sdl.ProjectAutomation.Core.ExecutionMessage[]
  nameWithType.vb: ExecutionMessage()
  fullName.vb: Sdl.ProjectAutomation.Core.ExecutionMessage()
  name.vb: ExecutionMessage()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.ExecutionMessage
    name: ExecutionMessage
    nameWithType: ExecutionMessage
    fullName: Sdl.ProjectAutomation.Core.ExecutionMessage
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.ExecutionMessage
    name: ExecutionMessage
    nameWithType: ExecutionMessage
    fullName: Sdl.ProjectAutomation.Core.ExecutionMessage
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectAutomation.Core
  commentId: N:Sdl.ProjectAutomation.Core
  isExternal: true
  name: Sdl.ProjectAutomation.Core
  nameWithType: Sdl.ProjectAutomation.Core
  fullName: Sdl.ProjectAutomation.Core
- uid: Sdl.ProjectAutomation.FileBased.PublishProjectResult.Status*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.PublishProjectResult.Status
  isExternal: true
  name: Status
  nameWithType: PublishProjectResult.Status
  fullName: Sdl.ProjectAutomation.FileBased.PublishProjectResult.Status
- uid: Sdl.ProjectAutomation.FileBased.PublishProjectResult.Messages*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.PublishProjectResult.Messages
  isExternal: true
  name: Messages
  nameWithType: PublishProjectResult.Messages
  fullName: Sdl.ProjectAutomation.FileBased.PublishProjectResult.Messages
