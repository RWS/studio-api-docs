### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Core.ProjectInfo
  commentId: T:Sdl.ProjectAutomation.Core.ProjectInfo
  id: ProjectInfo
  parent: Sdl.ProjectAutomation.Core
  children:
  - Sdl.ProjectAutomation.Core.ProjectInfo.#ctor
  - Sdl.ProjectAutomation.Core.ProjectInfo.CreatedAt
  - Sdl.ProjectAutomation.Core.ProjectInfo.CreatedBy
  - Sdl.ProjectAutomation.Core.ProjectInfo.Description
  - Sdl.ProjectAutomation.Core.ProjectInfo.DueDate
  - Sdl.ProjectAutomation.Core.ProjectInfo.IconPath
  - Sdl.ProjectAutomation.Core.ProjectInfo.Id
  - Sdl.ProjectAutomation.Core.ProjectInfo.IsCompleted
  - Sdl.ProjectAutomation.Core.ProjectInfo.LocalProjectFolder
  - Sdl.ProjectAutomation.Core.ProjectInfo.Name
  - Sdl.ProjectAutomation.Core.ProjectInfo.OrganizationPath
  - Sdl.ProjectAutomation.Core.ProjectInfo.ProjectOrigin
  - Sdl.ProjectAutomation.Core.ProjectInfo.ProjectType
  - Sdl.ProjectAutomation.Core.ProjectInfo.PublicationStatus
  - Sdl.ProjectAutomation.Core.ProjectInfo.ServerUri
  - Sdl.ProjectAutomation.Core.ProjectInfo.SourceLanguage
  - Sdl.ProjectAutomation.Core.ProjectInfo.Status
  - Sdl.ProjectAutomation.Core.ProjectInfo.TargetLanguages
  - Sdl.ProjectAutomation.Core.ProjectInfo.Uri
  langs:
  - csharp
  - vb
  name: ProjectInfo
  nameWithType: ProjectInfo
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo
  type: Class
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nHolds information about a project.\nThis class is used when accessing information about an existing project, and \nfor updating a project with new information. It is also used when creating a new project.\nNot all properties are supported for project updating.\n"
  syntax:
    content: public class ProjectInfo
    content.vb: Public Class ProjectInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.#ctor
  commentId: M:Sdl.ProjectAutomation.Core.ProjectInfo.#ctor
  id: '#ctor'
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: ProjectInfo()
  nameWithType: ProjectInfo.ProjectInfo()
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.ProjectInfo()
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public ProjectInfo()
    content.vb: Public Sub New
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.Id
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.Id
  id: Id
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ProjectInfo.Id
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.Id
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nThe ID of the project\n"
  syntax:
    content: public Guid Id { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public ReadOnly Property Id As Guid
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.Uri
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.Uri
  id: Uri
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: ProjectInfo.Uri
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.Uri
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nThe URI of the project\n"
  syntax:
    content: public Uri Uri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property Uri As Uri
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.Uri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.Name
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.Name
  id: Name
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ProjectInfo.Name
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.Name
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nThe name of the project.\n"
  remarks: >-
    This property can only be set for use during project creation.

    It is not valid to set for project updating.
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
      description: The name.
    content.vb: Public Property Name As String
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.Description
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.Description
  id: Description
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ProjectInfo.Description
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.Description
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nThe description of the project.\n"
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.CreatedAt
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.CreatedAt
  id: CreatedAt
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: ProjectInfo.CreatedAt
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.CreatedAt
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets the date/time the project was created.\n"
  syntax:
    content: public DateTime CreatedAt { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property CreatedAt As Date
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.CreatedAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.DueDate
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.DueDate
  id: DueDate
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: DueDate
  nameWithType: ProjectInfo.DueDate
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.DueDate
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets the due date for this project.\n"
  syntax:
    content: public DateTime? DueDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property DueDate As Date?
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.DueDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.SourceLanguage
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.SourceLanguage
  id: SourceLanguage
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: SourceLanguage
  nameWithType: ProjectInfo.SourceLanguage
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.SourceLanguage
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nThe source language of the project\n"
  remarks: "\n<p>It is optional to set this property during project creation. If it is not set, the source language\nof the reference project or template is used. If a template has more than one source language, the first one is used.</p>\n<p>This property can only be set for use during project creation.\nIt is not valid to set for project updating.</p>\n"
  syntax:
    content: public Language SourceLanguage { get; set; }
    parameters: []
    return:
      type: Sdl.Core.Globalization.Language
    content.vb: Public Property SourceLanguage As Language
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.SourceLanguage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.TargetLanguages
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.TargetLanguages
  id: TargetLanguages
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: TargetLanguages
  nameWithType: ProjectInfo.TargetLanguages
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.TargetLanguages
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nThe target languages of the project.\n"
  remarks: "\n<p>It is optional to set this property during project creation. If it is not set, the target languages\nof the reference project or template are used.</p>\n<p>This property can only be set for use during project creation.\nIt is not valid to set for project updating.</p>\n"
  syntax:
    content: public Language[] TargetLanguages { get; set; }
    parameters: []
    return:
      type: Sdl.Core.Globalization.Language[]
    content.vb: Public Property TargetLanguages As Language()
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.TargetLanguages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.LocalProjectFolder
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.LocalProjectFolder
  id: LocalProjectFolder
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: LocalProjectFolder
  nameWithType: ProjectInfo.LocalProjectFolder
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.LocalProjectFolder
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nThe local folder used to store project files.\n"
  remarks: >-
    This property can only be set for use during project creation.

    It is not valid to set for project updating.
  syntax:
    content: public string LocalProjectFolder { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LocalProjectFolder As String
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.LocalProjectFolder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.CreatedBy
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.CreatedBy
  id: CreatedBy
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: ProjectInfo.CreatedBy
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.CreatedBy
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nThe ID of the user that created this project\n"
  syntax:
    content: public string CreatedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CreatedBy As String
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.CreatedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.PublicationStatus
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.PublicationStatus
  id: PublicationStatus
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: PublicationStatus
  nameWithType: ProjectInfo.PublicationStatus
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.PublicationStatus
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets the status of publication for this project on a project server\n"
  syntax:
    content: public PublicationStatus PublicationStatus { get; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.Core.PublicationStatus
    content.vb: Public ReadOnly Property PublicationStatus As PublicationStatus
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.PublicationStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.IsCompleted
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.IsCompleted
  id: IsCompleted
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: IsCompleted
  nameWithType: ProjectInfo.IsCompleted
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.IsCompleted
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nSet when the project has been completed\n"
  syntax:
    content: public bool IsCompleted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCompleted As Boolean
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.IsCompleted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.OrganizationPath
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.OrganizationPath
  id: OrganizationPath
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: OrganizationPath
  nameWithType: ProjectInfo.OrganizationPath
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.OrganizationPath
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets the organization path on the server to where the project is published.\n"
  syntax:
    content: public string OrganizationPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property OrganizationPath As String
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.OrganizationPath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.ServerUri
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.ServerUri
  id: ServerUri
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: ServerUri
  nameWithType: ProjectInfo.ServerUri
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.ServerUri
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets the Uri of the server\n"
  syntax:
    content: public Uri ServerUri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property ServerUri As Uri
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.ServerUri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.ProjectOrigin
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.ProjectOrigin
  id: ProjectOrigin
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: ProjectOrigin
  nameWithType: ProjectInfo.ProjectOrigin
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.ProjectOrigin
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets the source of the project\n"
  syntax:
    content: public string ProjectOrigin { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ProjectOrigin As String
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.ProjectOrigin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.IconPath
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.IconPath
  id: IconPath
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: IconPath
  nameWithType: ProjectInfo.IconPath
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.IconPath
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets the physical path of the project icon\n"
  syntax:
    content: public string IconPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IconPath As String
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.IconPath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.Status
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.Status
  id: Status
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ProjectInfo.Status
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.Status
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets the current status of the project\n"
  syntax:
    content: public ProjectStatus Status { get; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.Core.ProjectStatus
    content.vb: Public ReadOnly Property Status As ProjectStatus
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.Status*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.ProjectType
  commentId: P:Sdl.ProjectAutomation.Core.ProjectInfo.ProjectType
  id: ProjectType
  parent: Sdl.ProjectAutomation.Core.ProjectInfo
  langs:
  - csharp
  - vb
  name: ProjectType
  nameWithType: ProjectInfo.ProjectType
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.ProjectType
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets the current project type\n"
  syntax:
    content: public ProjectType ProjectType { get; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.Core.ProjectType
    content.vb: Public ReadOnly Property ProjectType As ProjectType
  overload: Sdl.ProjectAutomation.Core.ProjectInfo.ProjectType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.ProjectAutomation.Core
  commentId: N:Sdl.ProjectAutomation.Core
  isExternal: true
  name: Sdl.ProjectAutomation.Core
  nameWithType: Sdl.ProjectAutomation.Core
  fullName: Sdl.ProjectAutomation.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.#ctor
  isExternal: true
  name: ProjectInfo
  nameWithType: ProjectInfo.ProjectInfo
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.ProjectInfo
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.Id*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.Id
  isExternal: true
  name: Id
  nameWithType: ProjectInfo.Id
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.Id
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.Uri*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.Uri
  isExternal: true
  name: Uri
  nameWithType: ProjectInfo.Uri
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.Uri
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.Name*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.Name
  isExternal: true
  name: Name
  nameWithType: ProjectInfo.Name
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.Description*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.Description
  isExternal: true
  name: Description
  nameWithType: ProjectInfo.Description
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.Description
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.CreatedAt*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.CreatedAt
  isExternal: true
  name: CreatedAt
  nameWithType: ProjectInfo.CreatedAt
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.CreatedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.DueDate*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.DueDate
  isExternal: true
  name: DueDate
  nameWithType: ProjectInfo.DueDate
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.DueDate
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.SourceLanguage*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.SourceLanguage
  isExternal: true
  name: SourceLanguage
  nameWithType: ProjectInfo.SourceLanguage
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.SourceLanguage
- uid: Sdl.Core.Globalization.Language
  isExternal: true
  name: Language
  nameWithType: Language
  fullName: Sdl.Core.Globalization.Language
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.TargetLanguages*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.TargetLanguages
  isExternal: true
  name: TargetLanguages
  nameWithType: ProjectInfo.TargetLanguages
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.TargetLanguages
- uid: Sdl.Core.Globalization.Language[]
  isExternal: true
  name: Language[]
  nameWithType: Language[]
  fullName: Sdl.Core.Globalization.Language[]
  nameWithType.vb: Language()
  fullName.vb: Sdl.Core.Globalization.Language()
  name.vb: Language()
  spec.csharp:
  - uid: Sdl.Core.Globalization.Language
    name: Language
    nameWithType: Language
    fullName: Sdl.Core.Globalization.Language
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.Core.Globalization.Language
    name: Language
    nameWithType: Language
    fullName: Sdl.Core.Globalization.Language
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.LocalProjectFolder*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.LocalProjectFolder
  isExternal: true
  name: LocalProjectFolder
  nameWithType: ProjectInfo.LocalProjectFolder
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.LocalProjectFolder
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.CreatedBy*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.CreatedBy
  isExternal: true
  name: CreatedBy
  nameWithType: ProjectInfo.CreatedBy
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.CreatedBy
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.PublicationStatus*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.PublicationStatus
  isExternal: true
  name: PublicationStatus
  nameWithType: ProjectInfo.PublicationStatus
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.PublicationStatus
- uid: Sdl.ProjectAutomation.Core.PublicationStatus
  commentId: T:Sdl.ProjectAutomation.Core.PublicationStatus
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: PublicationStatus
  nameWithType: PublicationStatus
  fullName: Sdl.ProjectAutomation.Core.PublicationStatus
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.IsCompleted*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.IsCompleted
  isExternal: true
  name: IsCompleted
  nameWithType: ProjectInfo.IsCompleted
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.IsCompleted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.OrganizationPath*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.OrganizationPath
  isExternal: true
  name: OrganizationPath
  nameWithType: ProjectInfo.OrganizationPath
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.OrganizationPath
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.ServerUri*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.ServerUri
  isExternal: true
  name: ServerUri
  nameWithType: ProjectInfo.ServerUri
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.ServerUri
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.ProjectOrigin*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.ProjectOrigin
  isExternal: true
  name: ProjectOrigin
  nameWithType: ProjectInfo.ProjectOrigin
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.ProjectOrigin
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.IconPath*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.IconPath
  isExternal: true
  name: IconPath
  nameWithType: ProjectInfo.IconPath
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.IconPath
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.Status*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.Status
  isExternal: true
  name: Status
  nameWithType: ProjectInfo.Status
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.Status
- uid: Sdl.ProjectAutomation.Core.ProjectStatus
  commentId: T:Sdl.ProjectAutomation.Core.ProjectStatus
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ProjectStatus
  nameWithType: ProjectStatus
  fullName: Sdl.ProjectAutomation.Core.ProjectStatus
- uid: Sdl.ProjectAutomation.Core.ProjectInfo.ProjectType*
  commentId: Overload:Sdl.ProjectAutomation.Core.ProjectInfo.ProjectType
  isExternal: true
  name: ProjectType
  nameWithType: ProjectInfo.ProjectType
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo.ProjectType
- uid: Sdl.ProjectAutomation.Core.ProjectType
  commentId: T:Sdl.ProjectAutomation.Core.ProjectType
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ProjectType
  nameWithType: ProjectType
  fullName: Sdl.ProjectAutomation.Core.ProjectType
