### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations
  commentId: T:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations
  id: ProjectReportsOperations
  parent: Sdl.ProjectAutomation.FileBased.Reports.Operations
  children:
  - Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.#ctor(Sdl.ProjectAutomation.FileBased.FileBasedProject)
  - Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.AddReport(System.String,System.String,System.String,System.String,System.String)
  - Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetProjectReports
  - Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportDefinition(System.String)
  - Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRendering(System.Guid,System.String)
  - Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRendering(System.Guid,System.String,System.String)
  - Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRenderingSupportedFileFormats(System.Guid)
  - Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.RemoveReports(System.Collections.Generic.List{System.Guid})
  - Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.UpdateReport(System.Guid,System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: ProjectReportsOperations
  nameWithType: ProjectReportsOperations
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations
  type: Class
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased.Reports.Operations
  summary: "\nUse this class to manage the project reports operations\n"
  syntax:
    content: public class ProjectReportsOperations
    content.vb: Public Class ProjectReportsOperations
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.#ctor(Sdl.ProjectAutomation.FileBased.FileBasedProject)
  commentId: M:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.#ctor(Sdl.ProjectAutomation.FileBased.FileBasedProject)
  id: '#ctor(Sdl.ProjectAutomation.FileBased.FileBasedProject)'
  parent: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations
  langs:
  - csharp
  - vb
  name: ProjectReportsOperations(FileBasedProject)
  nameWithType: ProjectReportsOperations.ProjectReportsOperations(FileBasedProject)
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.ProjectReportsOperations(Sdl.ProjectAutomation.FileBased.FileBasedProject)
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased.Reports.Operations
  syntax:
    content: public ProjectReportsOperations(FileBasedProject fileBasedProject)
    parameters:
    - id: fileBasedProject
      type: Sdl.ProjectAutomation.FileBased.FileBasedProject
    content.vb: Public Sub New(fileBasedProject As FileBasedProject)
  overload: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetProjectReports
  commentId: M:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetProjectReports
  id: GetProjectReports
  parent: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations
  langs:
  - csharp
  - vb
  name: GetProjectReports()
  nameWithType: ProjectReportsOperations.GetProjectReports()
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetProjectReports()
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased.Reports.Operations
  summary: "\nReturns the project reports list\n"
  syntax:
    content: public List<Report> GetProjectReports()
    return:
      type: System.Collections.Generic.List{Sdl.ProjectAutomation.FileBased.Reports.Models.Report}
      description: List of reports
    content.vb: Public Function GetProjectReports As List(Of Report)
  overload: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetProjectReports*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.AddReport(System.String,System.String,System.String,System.String,System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.AddReport(System.String,System.String,System.String,System.String,System.String)
  id: AddReport(System.String,System.String,System.String,System.String,System.String)
  parent: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations
  langs:
  - csharp
  - vb
  name: AddReport(String, String, String, String, String)
  nameWithType: ProjectReportsOperations.AddReport(String, String, String, String, String)
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.AddReport(System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased.Reports.Operations
  summary: "\nAdd a report based on Studio report templates\n"
  syntax:
    content: public Report AddReport(string templateId, string name, string description, string languageAbbreviation, string data)
    parameters:
    - id: templateId
      type: System.String
      description: Report template Id
    - id: name
      type: System.String
      description: Report name
    - id: description
      type: System.String
      description: Report description
    - id: languageAbbreviation
      type: System.String
      description: ISO abbreviation for the report language
    - id: data
      type: System.String
      description: Report html data
    return:
      type: Sdl.ProjectAutomation.FileBased.Reports.Models.Report
      description: The newly generated report
    content.vb: Public Function AddReport(templateId As String, name As String, description As String, languageAbbreviation As String, data As String) As Report
  overload: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.AddReport*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.UpdateReport(System.Guid,System.String,System.String,System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.UpdateReport(System.Guid,System.String,System.String,System.String)
  id: UpdateReport(System.Guid,System.String,System.String,System.String)
  parent: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations
  langs:
  - csharp
  - vb
  name: UpdateReport(Guid, String, String, String)
  nameWithType: ProjectReportsOperations.UpdateReport(Guid, String, String, String)
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.UpdateReport(System.Guid, System.String, System.String, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased.Reports.Operations
  summary: "\nUpdate a report\n"
  syntax:
    content: public void UpdateReport(Guid reportId, string name, string description, string data)
    parameters:
    - id: reportId
      type: System.Guid
      description: Report Id
    - id: name
      type: System.String
      description: Report name
    - id: description
      type: System.String
      description: Report description
    - id: data
      type: System.String
      description: Report html data
    content.vb: Public Sub UpdateReport(reportId As Guid, name As String, description As String, data As String)
  overload: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.UpdateReport*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.RemoveReports(System.Collections.Generic.List{System.Guid})
  commentId: M:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.RemoveReports(System.Collections.Generic.List{System.Guid})
  id: RemoveReports(System.Collections.Generic.List{System.Guid})
  parent: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations
  langs:
  - csharp
  - vb
  name: RemoveReports(List<Guid>)
  nameWithType: ProjectReportsOperations.RemoveReports(List<Guid>)
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.RemoveReports(System.Collections.Generic.List<System.Guid>)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased.Reports.Operations
  summary: "\nRemove a set of reports\n"
  syntax:
    content: public void RemoveReports(List<Guid> reportIds)
    parameters:
    - id: reportIds
      type: System.Collections.Generic.List{System.Guid}
      description: List of report Ids
    content.vb: Public Sub RemoveReports(reportIds As List(Of Guid))
  overload: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.RemoveReports*
  nameWithType.vb: ProjectReportsOperations.RemoveReports(List(Of Guid))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.RemoveReports(System.Collections.Generic.List(Of System.Guid))
  name.vb: RemoveReports(List(Of Guid))
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportDefinition(System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportDefinition(System.String)
  id: GetReportDefinition(System.String)
  parent: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations
  langs:
  - csharp
  - vb
  name: GetReportDefinition(String)
  nameWithType: ProjectReportsOperations.GetReportDefinition(String)
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportDefinition(System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased.Reports.Operations
  summary: "\nReturns the report definition\n"
  syntax:
    content: public ReportDefinition GetReportDefinition(string taskTemplateId)
    parameters:
    - id: taskTemplateId
      type: System.String
      description: Task template Id
    return:
      type: Sdl.ProjectAutomation.FileBased.Reports.Models.ReportDefinition
      description: The report definition
    content.vb: Public Function GetReportDefinition(taskTemplateId As String) As ReportDefinition
  overload: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportDefinition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRendering(System.Guid,System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRendering(System.Guid,System.String)
  id: GetReportRendering(System.Guid,System.String)
  parent: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations
  langs:
  - csharp
  - vb
  name: GetReportRendering(Guid, String)
  nameWithType: ProjectReportsOperations.GetReportRendering(Guid, String)
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRendering(System.Guid, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased.Reports.Operations
  summary: "\nReturns the report rendering\n"
  syntax:
    content: public byte[] GetReportRendering(Guid reportId, string fileExtension)
    parameters:
    - id: reportId
      type: System.Guid
      description: Report Id
    - id: fileExtension
      type: System.String
      description: Report file extension
    return:
      type: System.Byte[]
      description: The report content in the specified format
    content.vb: Public Function GetReportRendering(reportId As Guid, fileExtension As String) As Byte()
  overload: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRendering*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRendering(System.Guid,System.String,System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRendering(System.Guid,System.String,System.String)
  id: GetReportRendering(System.Guid,System.String,System.String)
  parent: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations
  langs:
  - csharp
  - vb
  name: GetReportRendering(Guid, String, String)
  nameWithType: ProjectReportsOperations.GetReportRendering(Guid, String, String)
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRendering(System.Guid, System.String, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased.Reports.Operations
  summary: "\nReturns the report rendering based on custom report template\n"
  syntax:
    content: public byte[] GetReportRendering(Guid reportId, string customTemplate, string fileExtension)
    parameters:
    - id: reportId
      type: System.Guid
      description: Report Id
    - id: customTemplate
      type: System.String
      description: Custom report template
    - id: fileExtension
      type: System.String
      description: Report file extension
    return:
      type: System.Byte[]
      description: The report content in the specified format
    content.vb: Public Function GetReportRendering(reportId As Guid, customTemplate As String, fileExtension As String) As Byte()
  overload: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRendering*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRenderingSupportedFileFormats(System.Guid)
  commentId: M:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRenderingSupportedFileFormats(System.Guid)
  id: GetReportRenderingSupportedFileFormats(System.Guid)
  parent: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations
  langs:
  - csharp
  - vb
  name: GetReportRenderingSupportedFileFormats(Guid)
  nameWithType: ProjectReportsOperations.GetReportRenderingSupportedFileFormats(Guid)
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRenderingSupportedFileFormats(System.Guid)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased.Reports.Operations
  summary: "\nReturns the list of supported file extensions by the report rendering engine\n"
  syntax:
    content: public List<string> GetReportRenderingSupportedFileFormats(Guid reportId)
    parameters:
    - id: reportId
      type: System.Guid
      description: Report Id
    return:
      type: System.Collections.Generic.List{System.String}
      description: The list with supported file extensions
    content.vb: Public Function GetReportRenderingSupportedFileFormats(reportId As Guid) As List(Of String)
  overload: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRenderingSupportedFileFormats*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations
  commentId: N:Sdl.ProjectAutomation.FileBased.Reports.Operations
  isExternal: true
  name: Sdl.ProjectAutomation.FileBased.Reports.Operations
  nameWithType: Sdl.ProjectAutomation.FileBased.Reports.Operations
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.#ctor
  isExternal: true
  name: ProjectReportsOperations
  nameWithType: ProjectReportsOperations.ProjectReportsOperations
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.ProjectReportsOperations
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject
  commentId: T:Sdl.ProjectAutomation.FileBased.FileBasedProject
  parent: Sdl.ProjectAutomation.FileBased
  isExternal: true
  name: FileBasedProject
  nameWithType: FileBasedProject
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject
- uid: Sdl.ProjectAutomation.FileBased
  commentId: N:Sdl.ProjectAutomation.FileBased
  isExternal: true
  name: Sdl.ProjectAutomation.FileBased
  nameWithType: Sdl.ProjectAutomation.FileBased
  fullName: Sdl.ProjectAutomation.FileBased
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetProjectReports*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetProjectReports
  isExternal: true
  name: GetProjectReports
  nameWithType: ProjectReportsOperations.GetProjectReports
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetProjectReports
- uid: System.Collections.Generic.List{Sdl.ProjectAutomation.FileBased.Reports.Models.Report}
  commentId: T:System.Collections.Generic.List{Sdl.ProjectAutomation.FileBased.Reports.Models.Report}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Report>
  nameWithType: List<Report>
  fullName: System.Collections.Generic.List<Sdl.ProjectAutomation.FileBased.Reports.Models.Report>
  nameWithType.vb: List(Of Report)
  fullName.vb: System.Collections.Generic.List(Of Sdl.ProjectAutomation.FileBased.Reports.Models.Report)
  name.vb: List(Of Report)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.FileBased.Reports.Models.Report
    name: Report
    nameWithType: Report
    fullName: Sdl.ProjectAutomation.FileBased.Reports.Models.Report
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.FileBased.Reports.Models.Report
    name: Report
    nameWithType: Report
    fullName: Sdl.ProjectAutomation.FileBased.Reports.Models.Report
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.AddReport*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.AddReport
  isExternal: true
  name: AddReport
  nameWithType: ProjectReportsOperations.AddReport
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.AddReport
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.ProjectAutomation.FileBased.Reports.Models.Report
  commentId: T:Sdl.ProjectAutomation.FileBased.Reports.Models.Report
  parent: Sdl.ProjectAutomation.FileBased.Reports.Models
  isExternal: true
  name: Report
  nameWithType: Report
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Models.Report
- uid: Sdl.ProjectAutomation.FileBased.Reports.Models
  commentId: N:Sdl.ProjectAutomation.FileBased.Reports.Models
  isExternal: true
  name: Sdl.ProjectAutomation.FileBased.Reports.Models
  nameWithType: Sdl.ProjectAutomation.FileBased.Reports.Models
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Models
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.UpdateReport*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.UpdateReport
  isExternal: true
  name: UpdateReport
  nameWithType: ProjectReportsOperations.UpdateReport
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.UpdateReport
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.RemoveReports*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.RemoveReports
  isExternal: true
  name: RemoveReports
  nameWithType: ProjectReportsOperations.RemoveReports
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.RemoveReports
- uid: System.Collections.Generic.List{System.Guid}
  commentId: T:System.Collections.Generic.List{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Guid>
  nameWithType: List<Guid>
  fullName: System.Collections.Generic.List<System.Guid>
  nameWithType.vb: List(Of Guid)
  fullName.vb: System.Collections.Generic.List(Of System.Guid)
  name.vb: List(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportDefinition*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportDefinition
  isExternal: true
  name: GetReportDefinition
  nameWithType: ProjectReportsOperations.GetReportDefinition
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportDefinition
- uid: Sdl.ProjectAutomation.FileBased.Reports.Models.ReportDefinition
  commentId: T:Sdl.ProjectAutomation.FileBased.Reports.Models.ReportDefinition
  parent: Sdl.ProjectAutomation.FileBased.Reports.Models
  isExternal: true
  name: ReportDefinition
  nameWithType: ReportDefinition
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Models.ReportDefinition
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRendering*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRendering
  isExternal: true
  name: GetReportRendering
  nameWithType: ProjectReportsOperations.GetReportRendering
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRendering
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRenderingSupportedFileFormats*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRenderingSupportedFileFormats
  isExternal: true
  name: GetReportRenderingSupportedFileFormats
  nameWithType: ProjectReportsOperations.GetReportRenderingSupportedFileFormats
  fullName: Sdl.ProjectAutomation.FileBased.Reports.Operations.ProjectReportsOperations.GetReportRenderingSupportedFileFormats
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
