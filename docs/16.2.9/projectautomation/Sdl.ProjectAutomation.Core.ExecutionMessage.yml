### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Core.ExecutionMessage
  commentId: T:Sdl.ProjectAutomation.Core.ExecutionMessage
  id: ExecutionMessage
  parent: Sdl.ProjectAutomation.Core
  children:
  - Sdl.ProjectAutomation.Core.ExecutionMessage.#ctor
  - Sdl.ProjectAutomation.Core.ExecutionMessage.Exception
  - Sdl.ProjectAutomation.Core.ExecutionMessage.Level
  - Sdl.ProjectAutomation.Core.ExecutionMessage.Message
  - Sdl.ProjectAutomation.Core.ExecutionMessage.ProjectFileId
  - Sdl.ProjectAutomation.Core.ExecutionMessage.Source
  langs:
  - csharp
  - vb
  name: ExecutionMessage
  nameWithType: ExecutionMessage
  fullName: Sdl.ProjectAutomation.Core.ExecutionMessage
  type: Class
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nRepresents a message generated while executing an automatic task (see <xref href=\"Sdl.ProjectAutomation.Core.AutomaticTask.Messages\" data-throw-if-not-resolved=\"false\"></xref>) \nor performing a package-related operation (see <xref href=\"Sdl.ProjectAutomation.Core.PackageOperation.Messages\" data-throw-if-not-resolved=\"false\"></xref>).\nThe message may be relevant to the entire process or to a specific file (see <xref href=\"Sdl.ProjectAutomation.Core.ExecutionMessage.ProjectFileId\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  syntax:
    content: public class ExecutionMessage
    content.vb: Public Class ExecutionMessage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.Core.ExecutionMessage.#ctor
  commentId: M:Sdl.ProjectAutomation.Core.ExecutionMessage.#ctor
  id: '#ctor'
  parent: Sdl.ProjectAutomation.Core.ExecutionMessage
  langs:
  - csharp
  - vb
  name: ExecutionMessage()
  nameWithType: ExecutionMessage.ExecutionMessage()
  fullName: Sdl.ProjectAutomation.Core.ExecutionMessage.ExecutionMessage()
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public ExecutionMessage()
    content.vb: Public Sub New
  overload: Sdl.ProjectAutomation.Core.ExecutionMessage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.ExecutionMessage.ProjectFileId
  commentId: P:Sdl.ProjectAutomation.Core.ExecutionMessage.ProjectFileId
  id: ProjectFileId
  parent: Sdl.ProjectAutomation.Core.ExecutionMessage
  langs:
  - csharp
  - vb
  name: ProjectFileId
  nameWithType: ExecutionMessage.ProjectFileId
  fullName: Sdl.ProjectAutomation.Core.ExecutionMessage.ProjectFileId
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets the project file to which this message is relevant. This returns <pre><code>null</code></pre>\nif the message is not file-specific.\n"
  syntax:
    content: public Guid? ProjectFileId { get; }
    parameters: []
    return:
      type: System.Nullable{System.Guid}
    content.vb: Public ReadOnly Property ProjectFileId As Guid?
  overload: Sdl.ProjectAutomation.Core.ExecutionMessage.ProjectFileId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.ExecutionMessage.Source
  commentId: P:Sdl.ProjectAutomation.Core.ExecutionMessage.Source
  id: Source
  parent: Sdl.ProjectAutomation.Core.ExecutionMessage
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: ExecutionMessage.Source
  fullName: Sdl.ProjectAutomation.Core.ExecutionMessage.Source
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets a friendly name for the component that generated the message.\n"
  syntax:
    content: public string Source { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Source As String
  overload: Sdl.ProjectAutomation.Core.ExecutionMessage.Source*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.ExecutionMessage.Message
  commentId: P:Sdl.ProjectAutomation.Core.ExecutionMessage.Message
  id: Message
  parent: Sdl.ProjectAutomation.Core.ExecutionMessage
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ExecutionMessage.Message
  fullName: Sdl.ProjectAutomation.Core.ExecutionMessage.Message
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets the message text.\n"
  syntax:
    content: public string Message { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Message As String
  overload: Sdl.ProjectAutomation.Core.ExecutionMessage.Message*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.ExecutionMessage.Level
  commentId: P:Sdl.ProjectAutomation.Core.ExecutionMessage.Level
  id: Level
  parent: Sdl.ProjectAutomation.Core.ExecutionMessage
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: ExecutionMessage.Level
  fullName: Sdl.ProjectAutomation.Core.ExecutionMessage.Level
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets the severity level of the message.\n"
  syntax:
    content: public MessageLevel Level { get; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.Core.MessageLevel
    content.vb: Public ReadOnly Property Level As MessageLevel
  overload: Sdl.ProjectAutomation.Core.ExecutionMessage.Level*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.ExecutionMessage.Exception
  commentId: P:Sdl.ProjectAutomation.Core.ExecutionMessage.Exception
  id: Exception
  parent: Sdl.ProjectAutomation.Core.ExecutionMessage
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: ExecutionMessage.Exception
  fullName: Sdl.ProjectAutomation.Core.ExecutionMessage.Exception
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets the exception that caused the message to be reported. This might not always be available, depending on the type of exception.\n"
  syntax:
    content: public Exception Exception { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property Exception As Exception
  overload: Sdl.ProjectAutomation.Core.ExecutionMessage.Exception*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.ProjectAutomation.Core
  commentId: N:Sdl.ProjectAutomation.Core
  isExternal: true
  name: Sdl.ProjectAutomation.Core
  nameWithType: Sdl.ProjectAutomation.Core
  fullName: Sdl.ProjectAutomation.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Core.ExecutionMessage.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.Core.ExecutionMessage.#ctor
  isExternal: true
  name: ExecutionMessage
  nameWithType: ExecutionMessage.ExecutionMessage
  fullName: Sdl.ProjectAutomation.Core.ExecutionMessage.ExecutionMessage
- uid: Sdl.ProjectAutomation.Core.ExecutionMessage.ProjectFileId*
  commentId: Overload:Sdl.ProjectAutomation.Core.ExecutionMessage.ProjectFileId
  isExternal: true
  name: ProjectFileId
  nameWithType: ExecutionMessage.ProjectFileId
  fullName: Sdl.ProjectAutomation.Core.ExecutionMessage.ProjectFileId
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.ExecutionMessage.Source*
  commentId: Overload:Sdl.ProjectAutomation.Core.ExecutionMessage.Source
  isExternal: true
  name: Source
  nameWithType: ExecutionMessage.Source
  fullName: Sdl.ProjectAutomation.Core.ExecutionMessage.Source
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.ProjectAutomation.Core.ExecutionMessage.Message*
  commentId: Overload:Sdl.ProjectAutomation.Core.ExecutionMessage.Message
  isExternal: true
  name: Message
  nameWithType: ExecutionMessage.Message
  fullName: Sdl.ProjectAutomation.Core.ExecutionMessage.Message
- uid: Sdl.ProjectAutomation.Core.ExecutionMessage.Level*
  commentId: Overload:Sdl.ProjectAutomation.Core.ExecutionMessage.Level
  isExternal: true
  name: Level
  nameWithType: ExecutionMessage.Level
  fullName: Sdl.ProjectAutomation.Core.ExecutionMessage.Level
- uid: Sdl.ProjectAutomation.Core.MessageLevel
  commentId: T:Sdl.ProjectAutomation.Core.MessageLevel
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: MessageLevel
  nameWithType: MessageLevel
  fullName: Sdl.ProjectAutomation.Core.MessageLevel
- uid: Sdl.ProjectAutomation.Core.ExecutionMessage.Exception*
  commentId: Overload:Sdl.ProjectAutomation.Core.ExecutionMessage.Exception
  isExternal: true
  name: Exception
  nameWithType: ExecutionMessage.Exception
  fullName: Sdl.ProjectAutomation.Core.ExecutionMessage.Exception
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
