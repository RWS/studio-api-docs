### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Core.TaskFileInfo
  commentId: T:Sdl.ProjectAutomation.Core.TaskFileInfo
  id: TaskFileInfo
  parent: Sdl.ProjectAutomation.Core
  children:
  - Sdl.ProjectAutomation.Core.TaskFileInfo.#ctor
  - Sdl.ProjectAutomation.Core.TaskFileInfo.ProjectFileId
  - Sdl.ProjectAutomation.Core.TaskFileInfo.ReadOnly
  langs:
  - csharp
  - vb
  name: TaskFileInfo
  nameWithType: TaskFileInfo
  fullName: Sdl.ProjectAutomation.Core.TaskFileInfo
  type: Class
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nRepresents the necessary information to create a <xref href=\"Sdl.ProjectAutomation.Core.TaskFile\" data-throw-if-not-resolved=\"false\"></xref> for inclusion in a manual task, consisting\nof a project file ID and a boolean that indicates whether the file should be included in the task as \na read-only file. See <xref href=\"Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String%2cSystem.String%2cSystem.DateTime%2cSystem.Guid%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public class TaskFileInfo
    content.vb: Public Class TaskFileInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.Core.TaskFileInfo.#ctor
  commentId: M:Sdl.ProjectAutomation.Core.TaskFileInfo.#ctor
  id: '#ctor'
  parent: Sdl.ProjectAutomation.Core.TaskFileInfo
  langs:
  - csharp
  - vb
  name: TaskFileInfo()
  nameWithType: TaskFileInfo.TaskFileInfo()
  fullName: Sdl.ProjectAutomation.Core.TaskFileInfo.TaskFileInfo()
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public TaskFileInfo()
    content.vb: Public Sub New
  overload: Sdl.ProjectAutomation.Core.TaskFileInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TaskFileInfo.ProjectFileId
  commentId: P:Sdl.ProjectAutomation.Core.TaskFileInfo.ProjectFileId
  id: ProjectFileId
  parent: Sdl.ProjectAutomation.Core.TaskFileInfo
  langs:
  - csharp
  - vb
  name: ProjectFileId
  nameWithType: TaskFileInfo.ProjectFileId
  fullName: Sdl.ProjectAutomation.Core.TaskFileInfo.ProjectFileId
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets the ID of the project file.\n"
  syntax:
    content: public Guid ProjectFileId { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public Property ProjectFileId As Guid
  overload: Sdl.ProjectAutomation.Core.TaskFileInfo.ProjectFileId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TaskFileInfo.ReadOnly
  commentId: P:Sdl.ProjectAutomation.Core.TaskFileInfo.ReadOnly
  id: ReadOnly
  parent: Sdl.ProjectAutomation.Core.TaskFileInfo
  langs:
  - csharp
  - vb
  name: ReadOnly
  nameWithType: TaskFileInfo.ReadOnly
  fullName: Sdl.ProjectAutomation.Core.TaskFileInfo.ReadOnly
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets whether to include this file as a read-only file.\nWhen set to <pre><code>true</code></pre>, this means the user will not be able to change the file.\n"
  syntax:
    content: public bool ReadOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ReadOnly As Boolean
  overload: Sdl.ProjectAutomation.Core.TaskFileInfo.ReadOnly*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.ProjectAutomation.Core
  commentId: N:Sdl.ProjectAutomation.Core
  isExternal: true
  name: Sdl.ProjectAutomation.Core
  nameWithType: Sdl.ProjectAutomation.Core
  fullName: Sdl.ProjectAutomation.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Core.TaskFileInfo.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.Core.TaskFileInfo.#ctor
  isExternal: true
  name: TaskFileInfo
  nameWithType: TaskFileInfo.TaskFileInfo
  fullName: Sdl.ProjectAutomation.Core.TaskFileInfo.TaskFileInfo
- uid: Sdl.ProjectAutomation.Core.TaskFileInfo.ProjectFileId*
  commentId: Overload:Sdl.ProjectAutomation.Core.TaskFileInfo.ProjectFileId
  isExternal: true
  name: ProjectFileId
  nameWithType: TaskFileInfo.ProjectFileId
  fullName: Sdl.ProjectAutomation.Core.TaskFileInfo.ProjectFileId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Sdl.ProjectAutomation.Core.TaskFileInfo.ReadOnly*
  commentId: Overload:Sdl.ProjectAutomation.Core.TaskFileInfo.ReadOnly
  isExternal: true
  name: ReadOnly
  nameWithType: TaskFileInfo.ReadOnly
  fullName: Sdl.ProjectAutomation.Core.TaskFileInfo.ReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
