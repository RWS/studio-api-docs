### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
  commentId: T:Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
  id: TranslationProviderConfiguration
  parent: Sdl.ProjectAutomation.Core
  children:
  - Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.#ctor
  - Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.#ctor(System.Collections.Generic.List{Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry},System.Boolean,System.Boolean)
  - Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries
  - Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.OverrideParent
  - Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.StopSearchingWhenResultsFound
  langs:
  - csharp
  - vb
  name: TranslationProviderConfiguration
  nameWithType: TranslationProviderConfiguration
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
  type: Class
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nThis class represents the configuration settings related to the use of translation providers within a project, including\nthe list of translation providers to use, the project translation memories and in which scenarios to use these\ntranslation providers.\n"
  remarks: "\nThe translation provider configuration can be defined on the project level (see <xref href=\"Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration\" data-throw-if-not-resolved=\"false\"></xref>)\nand can be overridden for a specific project target language (see \n<xref href=\"Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)\" data-throw-if-not-resolved=\"false\"></xref> \nand <xref href=\"Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)\" data-throw-if-not-resolved=\"false\"></xref>). \n"
  syntax:
    content: public class TranslationProviderConfiguration
    content.vb: Public Class TranslationProviderConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.#ctor
  commentId: M:Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.#ctor
  id: '#ctor'
  parent: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
  langs:
  - csharp
  - vb
  name: TranslationProviderConfiguration()
  nameWithType: TranslationProviderConfiguration.TranslationProviderConfiguration()
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.TranslationProviderConfiguration()
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nDefault constructor. Creates an empty configuration that doesn&apos;t override the parent.\n"
  syntax:
    content: public TranslationProviderConfiguration()
    content.vb: Public Sub New
  overload: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.#ctor(System.Collections.Generic.List{Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry},System.Boolean,System.Boolean)
  commentId: M:Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.#ctor(System.Collections.Generic.List{Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry},System.Boolean,System.Boolean)
  id: '#ctor(System.Collections.Generic.List{Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry},System.Boolean,System.Boolean)'
  parent: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
  langs:
  - csharp
  - vb
  name: TranslationProviderConfiguration(List<TranslationProviderCascadeEntry>, Boolean, Boolean)
  nameWithType: TranslationProviderConfiguration.TranslationProviderConfiguration(List<TranslationProviderCascadeEntry>, Boolean, Boolean)
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.TranslationProviderConfiguration(System.Collections.Generic.List<Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry>, System.Boolean, System.Boolean)
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nConstructor that takes the given cascade entry items, cascade search mode, and override parent flag.\n"
  syntax:
    content: public TranslationProviderConfiguration(List<TranslationProviderCascadeEntry> entries, bool stopSearchingWhenResultsFound, bool overrideParent)
    parameters:
    - id: entries
      type: System.Collections.Generic.List{Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry}
      description: The cascade entries. Can be empty, but not <code>null</code>.
    - id: stopSearchingWhenResultsFound
      type: System.Boolean
      description: >-
        Whether to stop searching translation providers once a result has been found.

        The translation providers are usually searched sequentially in the order they are specified in the <xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries" data-throw-if-not-resolved="false"></xref> list.
    - id: overrideParent
      type: System.Boolean
      description: "Whether this configuration should override the parent translation provider configuration.\nThis is only applicable when working with a target-language specific translation provider configuration (see \n<xref href=\"Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)\" data-throw-if-not-resolved=\"false\"></xref> \nand <xref href=\"Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)\" data-throw-if-not-resolved=\"false\"></xref>).\n"
    content.vb: Public Sub New(entries As List(Of TranslationProviderCascadeEntry), stopSearchingWhenResultsFound As Boolean, overrideParent As Boolean)
  overload: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.#ctor*
  nameWithType.vb: TranslationProviderConfiguration.TranslationProviderConfiguration(List(Of TranslationProviderCascadeEntry), Boolean, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.TranslationProviderConfiguration(System.Collections.Generic.List(Of Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry), System.Boolean, System.Boolean)
  name.vb: TranslationProviderConfiguration(List(Of TranslationProviderCascadeEntry), Boolean, Boolean)
- uid: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries
  commentId: P:Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries
  id: Entries
  parent: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
  langs:
  - csharp
  - vb
  name: Entries
  nameWithType: TranslationProviderConfiguration.Entries
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets the ordered list of translation provider cascade entries in this configuration. Can be empty but not <code>null</code>.\n"
  remarks: >-
    The order of the entries in this list is significant. It determines the order in which look-ups and updates

    are performed. When <xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.StopSearchingWhenResultsFound" data-throw-if-not-resolved="false"></xref> is set to <pre><code>true</code></pre>, this means the results returned

    could be different depending on the order of the entries.
  syntax:
    content: public List<TranslationProviderCascadeEntry> Entries { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry}
    content.vb: Public Property Entries As List(Of TranslationProviderCascadeEntry)
  overload: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.StopSearchingWhenResultsFound
  commentId: P:Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.StopSearchingWhenResultsFound
  id: StopSearchingWhenResultsFound
  parent: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
  langs:
  - csharp
  - vb
  name: StopSearchingWhenResultsFound
  nameWithType: TranslationProviderConfiguration.StopSearchingWhenResultsFound
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.StopSearchingWhenResultsFound
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets whether to stop searching translation providers once a result has been found.\nThe translation providers are usually searched sequentially in the order they are specified in the <xref href=\"Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries\" data-throw-if-not-resolved=\"false\"></xref> list.\n"
  syntax:
    content: public bool StopSearchingWhenResultsFound { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property StopSearchingWhenResultsFound As Boolean
  overload: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.StopSearchingWhenResultsFound*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.OverrideParent
  commentId: P:Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.OverrideParent
  id: OverrideParent
  parent: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
  langs:
  - csharp
  - vb
  name: OverrideParent
  nameWithType: TranslationProviderConfiguration.OverrideParent
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.OverrideParent
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets or sets whether this configuration should override the parent translation provider configuration.\nThis is only applicable when working with a target-language specific translation provider configuration (see \n<xref href=\"Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)\" data-throw-if-not-resolved=\"false\"></xref> \nand <xref href=\"Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  syntax:
    content: public bool OverrideParent { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property OverrideParent As Boolean
  overload: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.OverrideParent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.ProjectAutomation.Core
  commentId: N:Sdl.ProjectAutomation.Core
  isExternal: true
  name: Sdl.ProjectAutomation.Core
  nameWithType: Sdl.ProjectAutomation.Core
  fullName: Sdl.ProjectAutomation.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.#ctor
  isExternal: true
  name: TranslationProviderConfiguration
  nameWithType: TranslationProviderConfiguration.TranslationProviderConfiguration
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.TranslationProviderConfiguration
- uid: System.Collections.Generic.List{Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry}
  commentId: T:System.Collections.Generic.List{Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TranslationProviderCascadeEntry>
  nameWithType: List<TranslationProviderCascadeEntry>
  fullName: System.Collections.Generic.List<Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry>
  nameWithType.vb: List(Of TranslationProviderCascadeEntry)
  fullName.vb: System.Collections.Generic.List(Of Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry)
  name.vb: List(Of TranslationProviderCascadeEntry)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
    name: TranslationProviderCascadeEntry
    nameWithType: TranslationProviderCascadeEntry
    fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
    name: TranslationProviderCascadeEntry
    nameWithType: TranslationProviderCascadeEntry
    fullName: Sdl.ProjectAutomation.Core.TranslationProviderCascadeEntry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries*
  commentId: Overload:Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries
  isExternal: true
  name: Entries
  nameWithType: TranslationProviderConfiguration.Entries
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.Entries
- uid: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.StopSearchingWhenResultsFound*
  commentId: Overload:Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.StopSearchingWhenResultsFound
  isExternal: true
  name: StopSearchingWhenResultsFound
  nameWithType: TranslationProviderConfiguration.StopSearchingWhenResultsFound
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.StopSearchingWhenResultsFound
- uid: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.OverrideParent*
  commentId: Overload:Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.OverrideParent
  isExternal: true
  name: OverrideParent
  nameWithType: TranslationProviderConfiguration.OverrideParent
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.OverrideParent
