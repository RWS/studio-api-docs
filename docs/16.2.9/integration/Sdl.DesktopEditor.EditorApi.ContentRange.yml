### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.ContentRange
  commentId: T:Sdl.DesktopEditor.EditorApi.ContentRange
  id: ContentRange
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.ContentRange.#ctor
  - Sdl.DesktopEditor.EditorApi.ContentRange.#ctor(Sdl.DesktopEditor.EditorApi.ContentRange)
  - Sdl.DesktopEditor.EditorApi.ContentRange.#ctor(Sdl.DesktopEditor.EditorApi.IAbstractContentNode,Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  - Sdl.DesktopEditor.EditorApi.ContentRange.#ctor(Sdl.DesktopEditor.EditorApi.IContentSelection)
  - Sdl.DesktopEditor.EditorApi.ContentRange.#ctor(Sdl.DesktopEditor.EditorApi.Position)
  - Sdl.DesktopEditor.EditorApi.ContentRange.#ctor(Sdl.DesktopEditor.EditorApi.Position,Sdl.DesktopEditor.EditorApi.Position)
  - Sdl.DesktopEditor.EditorApi.ContentRange.Clone
  - Sdl.DesktopEditor.EditorApi.ContentRange.Contains(Sdl.DesktopEditor.EditorApi.Position)
  - Sdl.DesktopEditor.EditorApi.ContentRange.First
  - Sdl.DesktopEditor.EditorApi.ContentRange.From
  - Sdl.DesktopEditor.EditorApi.ContentRange.GetIntersection(Sdl.DesktopEditor.EditorApi.ContentRange)
  - Sdl.DesktopEditor.EditorApi.ContentRange.IsEmpty
  - Sdl.DesktopEditor.EditorApi.ContentRange.IsReversed
  - Sdl.DesktopEditor.EditorApi.ContentRange.IsValid
  - Sdl.DesktopEditor.EditorApi.ContentRange.Last
  - Sdl.DesktopEditor.EditorApi.ContentRange.Normalize
  - Sdl.DesktopEditor.EditorApi.ContentRange.Overlaps(Sdl.DesktopEditor.EditorApi.ContentRange)
  - Sdl.DesktopEditor.EditorApi.ContentRange.ReduceRanges(System.Collections.Generic.List{Sdl.DesktopEditor.EditorApi.ContentRange},Sdl.DesktopEditor.EditorApi.ContentRange.ReductionAllowedTest)
  - Sdl.DesktopEditor.EditorApi.ContentRange.Reverse
  - Sdl.DesktopEditor.EditorApi.ContentRange.SetFromSelection(Sdl.DesktopEditor.EditorApi.IContentSelection)
  - Sdl.DesktopEditor.EditorApi.ContentRange.Upto
  langs:
  - csharp
  - vb
  name: ContentRange
  nameWithType: ContentRange
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange
  type: Class
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nSpans a set of content in a document. Used when performing operations on the document content.\n"
  syntax:
    content: 'public class ContentRange : ICloneable'
    content.vb: >-
      Public Class ContentRange
          Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.ReduceRanges(System.Collections.Generic.List{Sdl.DesktopEditor.EditorApi.ContentRange},Sdl.DesktopEditor.EditorApi.ContentRange.ReductionAllowedTest)
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentRange.ReduceRanges(System.Collections.Generic.List{Sdl.DesktopEditor.EditorApi.ContentRange},Sdl.DesktopEditor.EditorApi.ContentRange.ReductionAllowedTest)
  id: ReduceRanges(System.Collections.Generic.List{Sdl.DesktopEditor.EditorApi.ContentRange},Sdl.DesktopEditor.EditorApi.ContentRange.ReductionAllowedTest)
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: ReduceRanges(List<ContentRange>, ContentRange.ReductionAllowedTest)
  nameWithType: ContentRange.ReduceRanges(List<ContentRange>, ContentRange.ReductionAllowedTest)
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.ReduceRanges(System.Collections.Generic.List<Sdl.DesktopEditor.EditorApi.ContentRange>, Sdl.DesktopEditor.EditorApi.ContentRange.ReductionAllowedTest)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nHelper function to reduce a set of same-parent ranges to the \nsmallest set of same-parent ranges necessary to span the content from the first to \nthe last range.\n"
  remarks: "\n<p>\nThis method is used as a helper in the implementation of IFrameworkDocument.GetMarkupDataRanges\nin the EditorApi.\n</p>\n<p>\nThe input range should be sorted so that all ranges appear in the correct order.\nThe output ranges will also be sorted in this order.\n</p>\n<p>\nNOTE: The input ranges may get modified in the process.</p>\n"
  syntax:
    content: public static List<ContentRange> ReduceRanges(List<ContentRange> rangesToReduce, ContentRange.ReductionAllowedTest additionalCondition)
    parameters:
    - id: rangesToReduce
      type: System.Collections.Generic.List{Sdl.DesktopEditor.EditorApi.ContentRange}
      description: Set of same-parent ranges to be processed
    - id: additionalCondition
      type: Sdl.DesktopEditor.EditorApi.ContentRange.ReductionAllowedTest
      description: >-
        Additional condition that will be evaluated to determine if

        the range can be reduced. Can be <code>null</code>, in which case ranges will always be reduced if possible.
    return:
      type: System.Collections.Generic.List{Sdl.DesktopEditor.EditorApi.ContentRange}
      description: >-
        The smallest set of same-parent ranges necessary to span all content in the input ranges

        (and anything between them)
    content.vb: Public Shared Function ReduceRanges(rangesToReduce As List(Of ContentRange), additionalCondition As ContentRange.ReductionAllowedTest) As List(Of ContentRange)
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.ReduceRanges*
  nameWithType.vb: ContentRange.ReduceRanges(List(Of ContentRange), ContentRange.ReductionAllowedTest)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.DesktopEditor.EditorApi.ContentRange.ReduceRanges(System.Collections.Generic.List(Of Sdl.DesktopEditor.EditorApi.ContentRange), Sdl.DesktopEditor.EditorApi.ContentRange.ReductionAllowedTest)
  name.vb: ReduceRanges(List(Of ContentRange), ContentRange.ReductionAllowedTest)
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.#ctor
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentRange.#ctor
  id: '#ctor'
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: ContentRange()
  nameWithType: ContentRange.ContentRange()
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.ContentRange()
  type: Constructor
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nCreate a range with uninitialized (invalid) from and upto positions.\n"
  syntax:
    content: public ContentRange()
    content.vb: Public Sub New
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.#ctor(Sdl.DesktopEditor.EditorApi.Position)
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentRange.#ctor(Sdl.DesktopEditor.EditorApi.Position)
  id: '#ctor(Sdl.DesktopEditor.EditorApi.Position)'
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: ContentRange(Position)
  nameWithType: ContentRange.ContentRange(Position)
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.ContentRange(Sdl.DesktopEditor.EditorApi.Position)
  type: Constructor
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nSets the from and upto positions to clones fo the specified position.\n"
  syntax:
    content: public ContentRange(Position location)
    parameters:
    - id: location
      type: Sdl.DesktopEditor.EditorApi.Position
    content.vb: Public Sub New(location As Position)
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.#ctor(Sdl.DesktopEditor.EditorApi.Position,Sdl.DesktopEditor.EditorApi.Position)
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentRange.#ctor(Sdl.DesktopEditor.EditorApi.Position,Sdl.DesktopEditor.EditorApi.Position)
  id: '#ctor(Sdl.DesktopEditor.EditorApi.Position,Sdl.DesktopEditor.EditorApi.Position)'
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: ContentRange(Position, Position)
  nameWithType: ContentRange.ContentRange(Position, Position)
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.ContentRange(Sdl.DesktopEditor.EditorApi.Position, Sdl.DesktopEditor.EditorApi.Position)
  type: Constructor
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nClone the specified from and upto positions.\n"
  syntax:
    content: public ContentRange(Position from, Position upto)
    parameters:
    - id: from
      type: Sdl.DesktopEditor.EditorApi.Position
    - id: upto
      type: Sdl.DesktopEditor.EditorApi.Position
    content.vb: Public Sub New(from As Position, upto As Position)
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.#ctor(Sdl.DesktopEditor.EditorApi.IAbstractContentNode,Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentRange.#ctor(Sdl.DesktopEditor.EditorApi.IAbstractContentNode,Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  id: '#ctor(Sdl.DesktopEditor.EditorApi.IAbstractContentNode,Sdl.DesktopEditor.EditorApi.IAbstractContentNode)'
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: ContentRange(IAbstractContentNode, IAbstractContentNode)
  nameWithType: ContentRange.ContentRange(IAbstractContentNode, IAbstractContentNode)
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.ContentRange(Sdl.DesktopEditor.EditorApi.IAbstractContentNode, Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  type: Constructor
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nCreate from and upto positions from nodes, using offset 0 for both nodes.\n"
  syntax:
    content: public ContentRange(IAbstractContentNode from, IAbstractContentNode upto)
    parameters:
    - id: from
      type: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
    - id: upto
      type: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
    content.vb: Public Sub New(from As IAbstractContentNode, upto As IAbstractContentNode)
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.#ctor(Sdl.DesktopEditor.EditorApi.IContentSelection)
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentRange.#ctor(Sdl.DesktopEditor.EditorApi.IContentSelection)
  id: '#ctor(Sdl.DesktopEditor.EditorApi.IContentSelection)'
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: ContentRange(IContentSelection)
  nameWithType: ContentRange.ContentRange(IContentSelection)
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.ContentRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
  type: Constructor
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nCreate a range spanning the same content as a selection.\n"
  syntax:
    content: public ContentRange(IContentSelection selection)
    parameters:
    - id: selection
      type: Sdl.DesktopEditor.EditorApi.IContentSelection
    content.vb: Public Sub New(selection As IContentSelection)
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.#ctor(Sdl.DesktopEditor.EditorApi.ContentRange)
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentRange.#ctor(Sdl.DesktopEditor.EditorApi.ContentRange)
  id: '#ctor(Sdl.DesktopEditor.EditorApi.ContentRange)'
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: ContentRange(ContentRange)
  nameWithType: ContentRange.ContentRange(ContentRange)
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.ContentRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  type: Constructor
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nClone another range\n"
  syntax:
    content: protected ContentRange(ContentRange other)
    parameters:
    - id: other
      type: Sdl.DesktopEditor.EditorApi.ContentRange
    content.vb: Protected Sub New(other As ContentRange)
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.Clone
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentRange.Clone
  id: Clone
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ContentRange.Clone()
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.Clone()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nCreate a clone of the object. The position objects are cloned, but the fields\nthey reference are not (obviously).\n"
  syntax:
    content: public virtual object Clone()
    return:
      type: System.Object
    content.vb: Public Overridable Function Clone As Object
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.SetFromSelection(Sdl.DesktopEditor.EditorApi.IContentSelection)
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentRange.SetFromSelection(Sdl.DesktopEditor.EditorApi.IContentSelection)
  id: SetFromSelection(Sdl.DesktopEditor.EditorApi.IContentSelection)
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: SetFromSelection(IContentSelection)
  nameWithType: ContentRange.SetFromSelection(IContentSelection)
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.SetFromSelection(Sdl.DesktopEditor.EditorApi.IContentSelection)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nClone the from and upto locations from the selection.\n"
  syntax:
    content: public virtual void SetFromSelection(IContentSelection selection)
    parameters:
    - id: selection
      type: Sdl.DesktopEditor.EditorApi.IContentSelection
    content.vb: Public Overridable Sub SetFromSelection(selection As IContentSelection)
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.SetFromSelection*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.Reverse
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentRange.Reverse
  id: Reverse
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: Reverse()
  nameWithType: ContentRange.Reverse()
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.Reverse()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nswaps from and upto\n"
  syntax:
    content: public virtual void Reverse()
    content.vb: Public Overridable Sub Reverse
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.Reverse*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.Normalize
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentRange.Normalize
  id: Normalize
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: ContentRange.Normalize()
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.Normalize()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nswaps from and upto if the range is reversed\n"
  syntax:
    content: public virtual void Normalize()
    content.vb: Public Overridable Sub Normalize
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.Normalize*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.Contains(Sdl.DesktopEditor.EditorApi.Position)
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentRange.Contains(Sdl.DesktopEditor.EditorApi.Position)
  id: Contains(Sdl.DesktopEditor.EditorApi.Position)
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: Contains(Position)
  nameWithType: ContentRange.Contains(Position)
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.Contains(Sdl.DesktopEditor.EditorApi.Position)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\ntrue if the position is inside the range\n"
  syntax:
    content: public virtual bool Contains(Position position)
    parameters:
    - id: position
      type: Sdl.DesktopEditor.EditorApi.Position
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Contains(position As Position) As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.Contains*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.Overlaps(Sdl.DesktopEditor.EditorApi.ContentRange)
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentRange.Overlaps(Sdl.DesktopEditor.EditorApi.ContentRange)
  id: Overlaps(Sdl.DesktopEditor.EditorApi.ContentRange)
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: Overlaps(ContentRange)
  nameWithType: ContentRange.Overlaps(ContentRange)
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.Overlaps(Sdl.DesktopEditor.EditorApi.ContentRange)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\ntrue if there is an overlap between this and the other range\n"
  syntax:
    content: public virtual bool Overlaps(ContentRange other)
    parameters:
    - id: other
      type: Sdl.DesktopEditor.EditorApi.ContentRange
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Overlaps(other As ContentRange) As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.Overlaps*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.GetIntersection(Sdl.DesktopEditor.EditorApi.ContentRange)
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentRange.GetIntersection(Sdl.DesktopEditor.EditorApi.ContentRange)
  id: GetIntersection(Sdl.DesktopEditor.EditorApi.ContentRange)
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: GetIntersection(ContentRange)
  nameWithType: ContentRange.GetIntersection(ContentRange)
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.GetIntersection(Sdl.DesktopEditor.EditorApi.ContentRange)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nReturns the normalized range that represents the intersection between \nthis range and the other, or <code>null</code> if they don&apos;t overlap.\n"
  syntax:
    content: public virtual ContentRange GetIntersection(ContentRange other)
    parameters:
    - id: other
      type: Sdl.DesktopEditor.EditorApi.ContentRange
    return:
      type: Sdl.DesktopEditor.EditorApi.ContentRange
    content.vb: Public Overridable Function GetIntersection(other As ContentRange) As ContentRange
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.GetIntersection*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.From
  commentId: P:Sdl.DesktopEditor.EditorApi.ContentRange.From
  id: From
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: From
  nameWithType: ContentRange.From
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.From
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe from location\n"
  syntax:
    content: public virtual Position From { get; set; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.Position
    content.vb: Public Overridable Property From As Position
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.From*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.Upto
  commentId: P:Sdl.DesktopEditor.EditorApi.ContentRange.Upto
  id: Upto
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: Upto
  nameWithType: ContentRange.Upto
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.Upto
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe upto location.\n"
  syntax:
    content: public virtual Position Upto { get; set; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.Position
    content.vb: Public Overridable Property Upto As Position
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.Upto*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.IsEmpty
  commentId: P:Sdl.DesktopEditor.EditorApi.ContentRange.IsEmpty
  id: IsEmpty
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: ContentRange.IsEmpty
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.IsEmpty
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nTrue if from and upto are valid and are the same nodes.\n"
  syntax:
    content: public virtual bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsEmpty As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.IsEmpty*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.IsValid
  commentId: P:Sdl.DesktopEditor.EditorApi.ContentRange.IsValid
  id: IsValid
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: ContentRange.IsValid
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.IsValid
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nTrue if from and upto are valid and have the same root node.\n"
  syntax:
    content: public virtual bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsValid As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.IsValid*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.IsReversed
  commentId: P:Sdl.DesktopEditor.EditorApi.ContentRange.IsReversed
  id: IsReversed
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: IsReversed
  nameWithType: ContentRange.IsReversed
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.IsReversed
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nTrue if the upto position appears before the from position and the range is valid.\n"
  syntax:
    content: public virtual bool IsReversed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsReversed As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.IsReversed*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.First
  commentId: P:Sdl.DesktopEditor.EditorApi.ContentRange.First
  id: First
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: First
  nameWithType: ContentRange.First
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.First
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe first of the from and upto positions.\n"
  syntax:
    content: public virtual Position First { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.Position
    content.vb: Public Overridable ReadOnly Property First As Position
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.First*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.Last
  commentId: P:Sdl.DesktopEditor.EditorApi.ContentRange.Last
  id: Last
  parent: Sdl.DesktopEditor.EditorApi.ContentRange
  langs:
  - csharp
  - vb
  name: Last
  nameWithType: ContentRange.Last
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.Last
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe last of the from and upto positions\n"
  syntax:
    content: public virtual Position Last { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.Position
    content.vb: Public Overridable ReadOnly Property Last As Position
  overload: Sdl.DesktopEditor.EditorApi.ContentRange.Last*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.ReduceRanges*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentRange.ReduceRanges
  isExternal: true
  name: ReduceRanges
  nameWithType: ContentRange.ReduceRanges
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.ReduceRanges
- uid: System.Collections.Generic.List{Sdl.DesktopEditor.EditorApi.ContentRange}
  commentId: T:System.Collections.Generic.List{Sdl.DesktopEditor.EditorApi.ContentRange}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ContentRange>
  nameWithType: List<ContentRange>
  fullName: System.Collections.Generic.List<Sdl.DesktopEditor.EditorApi.ContentRange>
  nameWithType.vb: List(Of ContentRange)
  fullName.vb: System.Collections.Generic.List(Of Sdl.DesktopEditor.EditorApi.ContentRange)
  name.vb: List(Of ContentRange)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.ContentRange
    name: ContentRange
    nameWithType: ContentRange
    fullName: Sdl.DesktopEditor.EditorApi.ContentRange
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.ContentRange
    name: ContentRange
    nameWithType: ContentRange
    fullName: Sdl.DesktopEditor.EditorApi.ContentRange
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.ReductionAllowedTest
  commentId: T:Sdl.DesktopEditor.EditorApi.ContentRange.ReductionAllowedTest
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: ContentRange.ReductionAllowedTest
  nameWithType: ContentRange.ReductionAllowedTest
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.ReductionAllowedTest
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.#ctor*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentRange.#ctor
  isExternal: true
  name: ContentRange
  nameWithType: ContentRange.ContentRange
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.ContentRange
- uid: Sdl.DesktopEditor.EditorApi.Position
  commentId: T:Sdl.DesktopEditor.EditorApi.Position
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Position
  nameWithType: Position
  fullName: Sdl.DesktopEditor.EditorApi.Position
- uid: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
  commentId: T:Sdl.DesktopEditor.EditorApi.IAbstractContentNode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IAbstractContentNode
  nameWithType: IAbstractContentNode
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection
  commentId: T:Sdl.DesktopEditor.EditorApi.IContentSelection
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IContentSelection
  nameWithType: IContentSelection
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection
- uid: Sdl.DesktopEditor.EditorApi.ContentRange
  commentId: T:Sdl.DesktopEditor.EditorApi.ContentRange
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: ContentRange
  nameWithType: ContentRange
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.Clone*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentRange.Clone
  isExternal: true
  name: Clone
  nameWithType: ContentRange.Clone
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.SetFromSelection*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentRange.SetFromSelection
  isExternal: true
  name: SetFromSelection
  nameWithType: ContentRange.SetFromSelection
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.SetFromSelection
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.Reverse*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentRange.Reverse
  isExternal: true
  name: Reverse
  nameWithType: ContentRange.Reverse
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.Reverse
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.Normalize*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentRange.Normalize
  isExternal: true
  name: Normalize
  nameWithType: ContentRange.Normalize
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.Normalize
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.Contains*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentRange.Contains
  isExternal: true
  name: Contains
  nameWithType: ContentRange.Contains
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.Overlaps*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentRange.Overlaps
  isExternal: true
  name: Overlaps
  nameWithType: ContentRange.Overlaps
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.Overlaps
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.GetIntersection*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentRange.GetIntersection
  isExternal: true
  name: GetIntersection
  nameWithType: ContentRange.GetIntersection
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.GetIntersection
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.From*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentRange.From
  isExternal: true
  name: From
  nameWithType: ContentRange.From
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.From
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.Upto*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentRange.Upto
  isExternal: true
  name: Upto
  nameWithType: ContentRange.Upto
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.Upto
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.IsEmpty*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentRange.IsEmpty
  isExternal: true
  name: IsEmpty
  nameWithType: ContentRange.IsEmpty
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.IsEmpty
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.IsValid*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentRange.IsValid
  isExternal: true
  name: IsValid
  nameWithType: ContentRange.IsValid
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.IsValid
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.IsReversed*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentRange.IsReversed
  isExternal: true
  name: IsReversed
  nameWithType: ContentRange.IsReversed
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.IsReversed
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.First*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentRange.First
  isExternal: true
  name: First
  nameWithType: ContentRange.First
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.First
- uid: Sdl.DesktopEditor.EditorApi.ContentRange.Last*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentRange.Last
  isExternal: true
  name: Last
  nameWithType: ContentRange.Last
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange.Last
