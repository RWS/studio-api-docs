### YamlMime:ManagedReference
items:
- uid: Sdl.Versioning.Versions
  commentId: T:Sdl.Versioning.Versions
  id: Versions
  parent: Sdl.Versioning
  children:
  - Sdl.Versioning.Versions.BaseProductDescription
  - Sdl.Versioning.Versions.BaseProductIdentifier
  - Sdl.Versioning.Versions.BaseProductName
  - Sdl.Versioning.Versions.Company
  - Sdl.Versioning.Versions.Copyright
  - Sdl.Versioning.Versions.CopyrightYear
  - Sdl.Versioning.Versions.Edition
  - Sdl.Versioning.Versions.GetBuildVersion
  - Sdl.Versioning.Versions.KnownStudioVersions
  - Sdl.Versioning.Versions.LicensingVersion
  - Sdl.Versioning.Versions.MajorVersion
  - Sdl.Versioning.Versions.MarketingProductName
  - Sdl.Versioning.Versions.MultiTermApplicationCLSID
  - Sdl.Versioning.Versions.PluginPackagePath
  - Sdl.Versioning.Versions.PluginUnpackPath
  - Sdl.Versioning.Versions.ProductDescription
  - Sdl.Versioning.Versions.ProductHelpUrI
  - Sdl.Versioning.Versions.ProductIdentifier
  - Sdl.Versioning.Versions.ProductName
  - Sdl.Versioning.Versions.ProductNameWithEdition
  - Sdl.Versioning.Versions.ProductYear
  - Sdl.Versioning.Versions.ProjectTemplatesVersionId
  - Sdl.Versioning.Versions.SamplesVersionId
  - Sdl.Versioning.Versions.ServicePackTag
  - Sdl.Versioning.Versions.StudioDocumentsFolderName
  - Sdl.Versioning.Versions.TermbaseDefinitionCLSID
  langs:
  - csharp
  - vb
  name: Versions
  nameWithType: Versions
  fullName: Sdl.Versioning.Versions
  type: Class
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nThis class defines Version specific constants for default items in studio.\n"
  syntax:
    content: public static class Versions
    content.vb: Public Module Versions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sdl.Versioning.Versions.MajorVersion
  commentId: F:Sdl.Versioning.Versions.MajorVersion
  id: MajorVersion
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: MajorVersion
  nameWithType: Versions.MajorVersion
  fullName: Sdl.Versioning.Versions.MajorVersion
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const int MajorVersion = 16
    return:
      type: System.Int32
    content.vb: Public Const MajorVersion As Integer = 16
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.Company
  commentId: F:Sdl.Versioning.Versions.Company
  id: Company
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: Company
  nameWithType: Versions.Company
  fullName: Sdl.Versioning.Versions.Company
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string Company = "SDL"
    return:
      type: System.String
    content.vb: Public Const Company As String = "SDL"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.ProductHelpUrI
  commentId: F:Sdl.Versioning.Versions.ProductHelpUrI
  id: ProductHelpUrI
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: ProductHelpUrI
  nameWithType: Versions.ProductHelpUrI
  fullName: Sdl.Versioning.Versions.ProductHelpUrI
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string ProductHelpUrI = "https://docs.sdl.com/SDL_Trados_Studio_2021"
    return:
      type: System.String
    content.vb: Public Const ProductHelpUrI As String = "https://docs.sdl.com/SDL_Trados_Studio_2021"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.BaseProductIdentifier
  commentId: F:Sdl.Versioning.Versions.BaseProductIdentifier
  id: BaseProductIdentifier
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: BaseProductIdentifier
  nameWithType: Versions.BaseProductIdentifier
  fullName: Sdl.Versioning.Versions.BaseProductIdentifier
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string BaseProductIdentifier = "Studio16"
    return:
      type: System.String
    content.vb: Public Const BaseProductIdentifier As String = "Studio16"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.ProductIdentifier
  commentId: F:Sdl.Versioning.Versions.ProductIdentifier
  id: ProductIdentifier
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: ProductIdentifier
  nameWithType: Versions.ProductIdentifier
  fullName: Sdl.Versioning.Versions.ProductIdentifier
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string ProductIdentifier = "Studio16Beta"
    return:
      type: System.String
    content.vb: Public Const ProductIdentifier As String = "Studio16Beta"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.SamplesVersionId
  commentId: F:Sdl.Versioning.Versions.SamplesVersionId
  id: SamplesVersionId
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: SamplesVersionId
  nameWithType: Versions.SamplesVersionId
  fullName: Sdl.Versioning.Versions.SamplesVersionId
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string SamplesVersionId = "Samples16"
    return:
      type: System.String
    content.vb: Public Const SamplesVersionId As String = "Samples16"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.Edition
  commentId: F:Sdl.Versioning.Versions.Edition
  id: Edition
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: Edition
  nameWithType: Versions.Edition
  fullName: Sdl.Versioning.Versions.Edition
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string Edition = "beta"
    return:
      type: System.String
    content.vb: Public Const Edition As String = "beta"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.StudioDocumentsFolderName
  commentId: F:Sdl.Versioning.Versions.StudioDocumentsFolderName
  id: StudioDocumentsFolderName
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: StudioDocumentsFolderName
  nameWithType: Versions.StudioDocumentsFolderName
  fullName: Sdl.Versioning.Versions.StudioDocumentsFolderName
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string StudioDocumentsFolderName = "Studio 2021"
    return:
      type: System.String
    content.vb: Public Const StudioDocumentsFolderName As String = "Studio 2021"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.ProjectTemplatesVersionId
  commentId: F:Sdl.Versioning.Versions.ProjectTemplatesVersionId
  id: ProjectTemplatesVersionId
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: ProjectTemplatesVersionId
  nameWithType: Versions.ProjectTemplatesVersionId
  fullName: Sdl.Versioning.Versions.ProjectTemplatesVersionId
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string ProjectTemplatesVersionId = "ProjectTemplates16"
    return:
      type: System.String
    content.vb: Public Const ProjectTemplatesVersionId As String = "ProjectTemplates16"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.LicensingVersion
  commentId: F:Sdl.Versioning.Versions.LicensingVersion
  id: LicensingVersion
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: LicensingVersion
  nameWithType: Versions.LicensingVersion
  fullName: Sdl.Versioning.Versions.LicensingVersion
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string LicensingVersion = "2021"
    return:
      type: System.String
    content.vb: Public Const LicensingVersion As String = "2021"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.CopyrightYear
  commentId: F:Sdl.Versioning.Versions.CopyrightYear
  id: CopyrightYear
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: CopyrightYear
  nameWithType: Versions.CopyrightYear
  fullName: Sdl.Versioning.Versions.CopyrightYear
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string CopyrightYear = "2021"
    return:
      type: System.String
    content.vb: Public Const CopyrightYear As String = "2021"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.ProductYear
  commentId: F:Sdl.Versioning.Versions.ProductYear
  id: ProductYear
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: ProductYear
  nameWithType: Versions.ProductYear
  fullName: Sdl.Versioning.Versions.ProductYear
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string ProductYear = "2021"
    return:
      type: System.String
    content.vb: Public Const ProductYear As String = "2021"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.TermbaseDefinitionCLSID
  commentId: F:Sdl.Versioning.Versions.TermbaseDefinitionCLSID
  id: TermbaseDefinitionCLSID
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: TermbaseDefinitionCLSID
  nameWithType: Versions.TermbaseDefinitionCLSID
  fullName: Sdl.Versioning.Versions.TermbaseDefinitionCLSID
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string TermbaseDefinitionCLSID = "BA0FA330-AC80-4DCB-8F86-6D47BFE10B1E"
    return:
      type: System.String
    content.vb: Public Const TermbaseDefinitionCLSID As String = "BA0FA330-AC80-4DCB-8F86-6D47BFE10B1E"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.MultiTermApplicationCLSID
  commentId: F:Sdl.Versioning.Versions.MultiTermApplicationCLSID
  id: MultiTermApplicationCLSID
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: MultiTermApplicationCLSID
  nameWithType: Versions.MultiTermApplicationCLSID
  fullName: Sdl.Versioning.Versions.MultiTermApplicationCLSID
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string MultiTermApplicationCLSID = "DE9C39C5-7957-46C5-9DC9-B1B68CA55577"
    return:
      type: System.String
    content.vb: Public Const MultiTermApplicationCLSID As String = "DE9C39C5-7957-46C5-9DC9-B1B68CA55577"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.ProductName
  commentId: F:Sdl.Versioning.Versions.ProductName
  id: ProductName
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: ProductName
  nameWithType: Versions.ProductName
  fullName: Sdl.Versioning.Versions.ProductName
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string ProductName = "Trados Studio"
    return:
      type: System.String
    content.vb: Public Const ProductName As String = "Trados Studio"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.BaseProductName
  commentId: F:Sdl.Versioning.Versions.BaseProductName
  id: BaseProductName
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: BaseProductName
  nameWithType: Versions.BaseProductName
  fullName: Sdl.Versioning.Versions.BaseProductName
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string BaseProductName = "SDL Trados Studio"
    return:
      type: System.String
    content.vb: Public Const BaseProductName As String = "SDL Trados Studio"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.MarketingProductName
  commentId: F:Sdl.Versioning.Versions.MarketingProductName
  id: MarketingProductName
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: MarketingProductName
  nameWithType: Versions.MarketingProductName
  fullName: Sdl.Versioning.Versions.MarketingProductName
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string MarketingProductName = "Trados Studio 2021"
    return:
      type: System.String
    content.vb: Public Const MarketingProductName As String = "Trados Studio 2021"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.ProductNameWithEdition
  commentId: F:Sdl.Versioning.Versions.ProductNameWithEdition
  id: ProductNameWithEdition
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: ProductNameWithEdition
  nameWithType: Versions.ProductNameWithEdition
  fullName: Sdl.Versioning.Versions.ProductNameWithEdition
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string ProductNameWithEdition = "Trados Studio {0}"
    return:
      type: System.String
    content.vb: Public Const ProductNameWithEdition As String = "Trados Studio {0}"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.ServicePackTag
  commentId: F:Sdl.Versioning.Versions.ServicePackTag
  id: ServicePackTag
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: ServicePackTag
  nameWithType: Versions.ServicePackTag
  fullName: Sdl.Versioning.Versions.ServicePackTag
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string ServicePackTag = "SR2"
    return:
      type: System.String
    content.vb: Public Const ServicePackTag As String = "SR2"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.PluginPackagePath
  commentId: F:Sdl.Versioning.Versions.PluginPackagePath
  id: PluginPackagePath
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: PluginPackagePath
  nameWithType: Versions.PluginPackagePath
  fullName: Sdl.Versioning.Versions.PluginPackagePath
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string PluginPackagePath = "SDL\\SDL Trados Studio\\{0}\\Plugins\\Packages"
    return:
      type: System.String
    content.vb: Public Const PluginPackagePath As String = "SDL\SDL Trados Studio\{0}\Plugins\Packages"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.PluginUnpackPath
  commentId: F:Sdl.Versioning.Versions.PluginUnpackPath
  id: PluginUnpackPath
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: PluginUnpackPath
  nameWithType: Versions.PluginUnpackPath
  fullName: Sdl.Versioning.Versions.PluginUnpackPath
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public const string PluginUnpackPath = "SDL\\SDL Trados Studio\\{0}\\Plugins\\Unpacked"
    return:
      type: System.String
    content.vb: Public Const PluginUnpackPath As String = "SDL\SDL Trados Studio\{0}\Plugins\Unpacked"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Versioning.Versions.KnownStudioVersions
  commentId: F:Sdl.Versioning.Versions.KnownStudioVersions
  id: KnownStudioVersions
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: KnownStudioVersions
  nameWithType: Versions.KnownStudioVersions
  fullName: Sdl.Versioning.Versions.KnownStudioVersions
  type: Field
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nReturns a list mapping Studio Version Names with official Names\n"
  syntax:
    content: public static readonly IReadOnlyDictionary<string, string> KnownStudioVersions
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
    content.vb: Public Shared ReadOnly KnownStudioVersions As IReadOnlyDictionary(Of String, String)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.Versioning.Versions.GetBuildVersion
  commentId: M:Sdl.Versioning.Versions.GetBuildVersion
  id: GetBuildVersion
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: GetBuildVersion()
  nameWithType: Versions.GetBuildVersion()
  fullName: Sdl.Versioning.Versions.GetBuildVersion()
  type: Method
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nReturns the current build version\n"
  syntax:
    content: public static string GetBuildVersion()
    return:
      type: System.String
    content.vb: Public Shared Function GetBuildVersion As String
  overload: Sdl.Versioning.Versions.GetBuildVersion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Versioning.Versions.Copyright
  commentId: P:Sdl.Versioning.Versions.Copyright
  id: Copyright
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: Copyright
  nameWithType: Versions.Copyright
  fullName: Sdl.Versioning.Versions.Copyright
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nReturns CopyRight text\n"
  syntax:
    content: public static string Copyright { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property Copyright As String
  overload: Sdl.Versioning.Versions.Copyright*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.Versioning.Versions.ProductDescription
  commentId: P:Sdl.Versioning.Versions.ProductDescription
  id: ProductDescription
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: ProductDescription
  nameWithType: Versions.ProductDescription
  fullName: Sdl.Versioning.Versions.ProductDescription
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nReturns the Product Description\n"
  syntax:
    content: public static string ProductDescription { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property ProductDescription As String
  overload: Sdl.Versioning.Versions.ProductDescription*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.Versioning.Versions.BaseProductDescription
  commentId: P:Sdl.Versioning.Versions.BaseProductDescription
  id: BaseProductDescription
  parent: Sdl.Versioning.Versions
  langs:
  - csharp
  - vb
  name: BaseProductDescription
  nameWithType: Versions.BaseProductDescription
  fullName: Sdl.Versioning.Versions.BaseProductDescription
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nReturns the Product Description without edition\n"
  syntax:
    content: public static string BaseProductDescription { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property BaseProductDescription As String
  overload: Sdl.Versioning.Versions.BaseProductDescription*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Sdl.Versioning
  commentId: N:Sdl.Versioning
  isExternal: true
  name: Sdl.Versioning
  nameWithType: Sdl.Versioning
  fullName: Sdl.Versioning
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, String>
  nameWithType: IReadOnlyDictionary<String, String>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>
  nameWithType.vb: IReadOnlyDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.String)
  name.vb: IReadOnlyDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.Versioning.Versions.GetBuildVersion*
  commentId: Overload:Sdl.Versioning.Versions.GetBuildVersion
  isExternal: true
  name: GetBuildVersion
  nameWithType: Versions.GetBuildVersion
  fullName: Sdl.Versioning.Versions.GetBuildVersion
- uid: Sdl.Versioning.Versions.Copyright*
  commentId: Overload:Sdl.Versioning.Versions.Copyright
  isExternal: true
  name: Copyright
  nameWithType: Versions.Copyright
  fullName: Sdl.Versioning.Versions.Copyright
- uid: Sdl.Versioning.Versions.ProductDescription*
  commentId: Overload:Sdl.Versioning.Versions.ProductDescription
  isExternal: true
  name: ProductDescription
  nameWithType: Versions.ProductDescription
  fullName: Sdl.Versioning.Versions.ProductDescription
- uid: Sdl.Versioning.Versions.BaseProductDescription*
  commentId: Overload:Sdl.Versioning.Versions.BaseProductDescription
  isExternal: true
  name: BaseProductDescription
  nameWithType: Versions.BaseProductDescription
  fullName: Sdl.Versioning.Versions.BaseProductDescription
