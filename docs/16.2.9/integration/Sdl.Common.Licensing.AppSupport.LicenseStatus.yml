### YamlMime:ManagedReference
items:
- uid: Sdl.Common.Licensing.AppSupport.LicenseStatus
  commentId: T:Sdl.Common.Licensing.AppSupport.LicenseStatus
  id: LicenseStatus
  parent: Sdl.Common.Licensing.AppSupport
  children:
  - Sdl.Common.Licensing.AppSupport.LicenseStatus.Authorized
  - Sdl.Common.Licensing.AppSupport.LicenseStatus.DemoExpired
  - Sdl.Common.Licensing.AppSupport.LicenseStatus.ExportExpired
  - Sdl.Common.Licensing.AppSupport.LicenseStatus.LeaseExpired
  - Sdl.Common.Licensing.AppSupport.LicenseStatus.NotAuthorized
  - Sdl.Common.Licensing.AppSupport.LicenseStatus.UnknownError
  langs:
  - csharp
  - vb
  name: LicenseStatus
  nameWithType: LicenseStatus
  fullName: Sdl.Common.Licensing.AppSupport.LicenseStatus
  type: Enum
  source:
    path: Sdl.Common.Licensing.AppSupport
    isExternal: true
  assemblies:
  - Sdl.Common.Licensing.AppSupport
  namespace: Sdl.Common.Licensing.AppSupport
  syntax:
    content: public enum LicenseStatus
    content.vb: Public Enum LicenseStatus
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Sdl.Common.Licensing.AppSupport.LicenseStatus.Authorized
  commentId: F:Sdl.Common.Licensing.AppSupport.LicenseStatus.Authorized
  id: Authorized
  parent: Sdl.Common.Licensing.AppSupport.LicenseStatus
  langs:
  - csharp
  - vb
  name: Authorized
  nameWithType: LicenseStatus.Authorized
  fullName: Sdl.Common.Licensing.AppSupport.LicenseStatus.Authorized
  type: Field
  source:
    path: Sdl.Common.Licensing.AppSupport
    isExternal: true
  assemblies:
  - Sdl.Common.Licensing.AppSupport
  namespace: Sdl.Common.Licensing.AppSupport
  summary: "\nThe license is fully Authorized\n"
  syntax:
    content: Authorized = 0
    return:
      type: Sdl.Common.Licensing.AppSupport.LicenseStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Common.Licensing.AppSupport.LicenseStatus.NotAuthorized
  commentId: F:Sdl.Common.Licensing.AppSupport.LicenseStatus.NotAuthorized
  id: NotAuthorized
  parent: Sdl.Common.Licensing.AppSupport.LicenseStatus
  langs:
  - csharp
  - vb
  name: NotAuthorized
  nameWithType: LicenseStatus.NotAuthorized
  fullName: Sdl.Common.Licensing.AppSupport.LicenseStatus.NotAuthorized
  type: Field
  source:
    path: Sdl.Common.Licensing.AppSupport
    isExternal: true
  assemblies:
  - Sdl.Common.Licensing.AppSupport
  namespace: Sdl.Common.Licensing.AppSupport
  summary: "\nThe license is not authorized\n"
  syntax:
    content: NotAuthorized = 1
    return:
      type: Sdl.Common.Licensing.AppSupport.LicenseStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Common.Licensing.AppSupport.LicenseStatus.DemoExpired
  commentId: F:Sdl.Common.Licensing.AppSupport.LicenseStatus.DemoExpired
  id: DemoExpired
  parent: Sdl.Common.Licensing.AppSupport.LicenseStatus
  langs:
  - csharp
  - vb
  name: DemoExpired
  nameWithType: LicenseStatus.DemoExpired
  fullName: Sdl.Common.Licensing.AppSupport.LicenseStatus.DemoExpired
  type: Field
  source:
    path: Sdl.Common.Licensing.AppSupport
    isExternal: true
  assemblies:
  - Sdl.Common.Licensing.AppSupport
  namespace: Sdl.Common.Licensing.AppSupport
  summary: "\nThe license is not authorized - the demo period has expired\n"
  syntax:
    content: DemoExpired = 2
    return:
      type: Sdl.Common.Licensing.AppSupport.LicenseStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Common.Licensing.AppSupport.LicenseStatus.LeaseExpired
  commentId: F:Sdl.Common.Licensing.AppSupport.LicenseStatus.LeaseExpired
  id: LeaseExpired
  parent: Sdl.Common.Licensing.AppSupport.LicenseStatus
  langs:
  - csharp
  - vb
  name: LeaseExpired
  nameWithType: LicenseStatus.LeaseExpired
  fullName: Sdl.Common.Licensing.AppSupport.LicenseStatus.LeaseExpired
  type: Field
  source:
    path: Sdl.Common.Licensing.AppSupport
    isExternal: true
  assemblies:
  - Sdl.Common.Licensing.AppSupport
  namespace: Sdl.Common.Licensing.AppSupport
  summary: "\nThe license is not authorized - the lease period has expired\n"
  syntax:
    content: LeaseExpired = 3
    return:
      type: Sdl.Common.Licensing.AppSupport.LicenseStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Common.Licensing.AppSupport.LicenseStatus.ExportExpired
  commentId: F:Sdl.Common.Licensing.AppSupport.LicenseStatus.ExportExpired
  id: ExportExpired
  parent: Sdl.Common.Licensing.AppSupport.LicenseStatus
  langs:
  - csharp
  - vb
  name: ExportExpired
  nameWithType: LicenseStatus.ExportExpired
  fullName: Sdl.Common.Licensing.AppSupport.LicenseStatus.ExportExpired
  type: Field
  source:
    path: Sdl.Common.Licensing.AppSupport
    isExternal: true
  assemblies:
  - Sdl.Common.Licensing.AppSupport
  namespace: Sdl.Common.Licensing.AppSupport
  summary: "\nThe license is not authorized - the exported license has expired\n"
  syntax:
    content: ExportExpired = 4
    return:
      type: Sdl.Common.Licensing.AppSupport.LicenseStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.Common.Licensing.AppSupport.LicenseStatus.UnknownError
  commentId: F:Sdl.Common.Licensing.AppSupport.LicenseStatus.UnknownError
  id: UnknownError
  parent: Sdl.Common.Licensing.AppSupport.LicenseStatus
  langs:
  - csharp
  - vb
  name: UnknownError
  nameWithType: LicenseStatus.UnknownError
  fullName: Sdl.Common.Licensing.AppSupport.LicenseStatus.UnknownError
  type: Field
  source:
    path: Sdl.Common.Licensing.AppSupport
    isExternal: true
  assemblies:
  - Sdl.Common.Licensing.AppSupport
  namespace: Sdl.Common.Licensing.AppSupport
  summary: "\nThe license is not authorized - an error occurred\n"
  syntax:
    content: UnknownError = 5
    return:
      type: Sdl.Common.Licensing.AppSupport.LicenseStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Sdl.Common.Licensing.AppSupport
  commentId: N:Sdl.Common.Licensing.AppSupport
  isExternal: true
  name: Sdl.Common.Licensing.AppSupport
  nameWithType: Sdl.Common.Licensing.AppSupport
  fullName: Sdl.Common.Licensing.AppSupport
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.Common.Licensing.AppSupport.LicenseStatus
  commentId: T:Sdl.Common.Licensing.AppSupport.LicenseStatus
  parent: Sdl.Common.Licensing.AppSupport
  isExternal: true
  name: LicenseStatus
  nameWithType: LicenseStatus
  fullName: Sdl.Common.Licensing.AppSupport.LicenseStatus
