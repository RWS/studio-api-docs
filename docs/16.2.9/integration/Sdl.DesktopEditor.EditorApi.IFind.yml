### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.IFind
  commentId: T:Sdl.DesktopEditor.EditorApi.IFind
  id: IFind
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.IFind.Finished
  - Sdl.DesktopEditor.EditorApi.IFind.Match
  - Sdl.DesktopEditor.EditorApi.IFind.MatchFound
  - Sdl.DesktopEditor.EditorApi.IFind.NextMatch
  - Sdl.DesktopEditor.EditorApi.IFind.Properties
  - Sdl.DesktopEditor.EditorApi.IFind.Range
  - Sdl.DesktopEditor.EditorApi.IFind.ReplaceRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  - Sdl.DesktopEditor.EditorApi.IFind.Text
  - Sdl.DesktopEditor.EditorApi.IFind.UpdateRangeFrom(Sdl.DesktopEditor.EditorApi.Position)
  - Sdl.DesktopEditor.EditorApi.IFind.UpdateRangeUpTo(Sdl.DesktopEditor.EditorApi.Position)
  langs:
  - csharp
  - vb
  name: IFind
  nameWithType: IFind
  fullName: Sdl.DesktopEditor.EditorApi.IFind
  type: Interface
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThis interface provides functionality for searching the document, for example,\na &quot;find and replace&quot; feature.\n"
  syntax:
    content: public interface IFind
    content.vb: Public Interface IFind
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.DesktopEditor.EditorApi.IFind.NextMatch
  commentId: M:Sdl.DesktopEditor.EditorApi.IFind.NextMatch
  id: NextMatch
  parent: Sdl.DesktopEditor.EditorApi.IFind
  langs:
  - csharp
  - vb
  name: NextMatch()
  nameWithType: IFind.NextMatch()
  fullName: Sdl.DesktopEditor.EditorApi.IFind.NextMatch()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nMoves the find operation to the next match and returns true while a match exists.\n"
  syntax:
    content: bool NextMatch()
    return:
      type: System.Boolean
    content.vb: Function NextMatch As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IFind.NextMatch*
- uid: Sdl.DesktopEditor.EditorApi.IFind.UpdateRangeFrom(Sdl.DesktopEditor.EditorApi.Position)
  commentId: M:Sdl.DesktopEditor.EditorApi.IFind.UpdateRangeFrom(Sdl.DesktopEditor.EditorApi.Position)
  id: UpdateRangeFrom(Sdl.DesktopEditor.EditorApi.Position)
  parent: Sdl.DesktopEditor.EditorApi.IFind
  langs:
  - csharp
  - vb
  name: UpdateRangeFrom(Position)
  nameWithType: IFind.UpdateRangeFrom(Position)
  fullName: Sdl.DesktopEditor.EditorApi.IFind.UpdateRangeFrom(Sdl.DesktopEditor.EditorApi.Position)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nUpdates the &quot;from&quot; position of the <xref href=\"Sdl.DesktopEditor.EditorApi.IFind.Range\" data-throw-if-not-resolved=\"false\"></xref> property.  This should be a\nvalid position in the document.\n"
  syntax:
    content: void UpdateRangeFrom(Position from)
    parameters:
    - id: from
      type: Sdl.DesktopEditor.EditorApi.Position
    content.vb: Sub UpdateRangeFrom(from As Position)
  overload: Sdl.DesktopEditor.EditorApi.IFind.UpdateRangeFrom*
- uid: Sdl.DesktopEditor.EditorApi.IFind.UpdateRangeUpTo(Sdl.DesktopEditor.EditorApi.Position)
  commentId: M:Sdl.DesktopEditor.EditorApi.IFind.UpdateRangeUpTo(Sdl.DesktopEditor.EditorApi.Position)
  id: UpdateRangeUpTo(Sdl.DesktopEditor.EditorApi.Position)
  parent: Sdl.DesktopEditor.EditorApi.IFind
  langs:
  - csharp
  - vb
  name: UpdateRangeUpTo(Position)
  nameWithType: IFind.UpdateRangeUpTo(Position)
  fullName: Sdl.DesktopEditor.EditorApi.IFind.UpdateRangeUpTo(Sdl.DesktopEditor.EditorApi.Position)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nUpdates the &quot;upto&quot; position of the <xref href=\"Sdl.DesktopEditor.EditorApi.IFind.Range\" data-throw-if-not-resolved=\"false\"></xref> property.  This should be a\nvalid position in the document.\n"
  syntax:
    content: void UpdateRangeUpTo(Position upTo)
    parameters:
    - id: upTo
      type: Sdl.DesktopEditor.EditorApi.Position
    content.vb: Sub UpdateRangeUpTo(upTo As Position)
  overload: Sdl.DesktopEditor.EditorApi.IFind.UpdateRangeUpTo*
- uid: Sdl.DesktopEditor.EditorApi.IFind.ReplaceRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  commentId: M:Sdl.DesktopEditor.EditorApi.IFind.ReplaceRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  id: ReplaceRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  parent: Sdl.DesktopEditor.EditorApi.IFind
  langs:
  - csharp
  - vb
  name: ReplaceRange(ContentRange)
  nameWithType: IFind.ReplaceRange(ContentRange)
  fullName: Sdl.DesktopEditor.EditorApi.IFind.ReplaceRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nReplace the entire range. This is a heavyweight operation and should only be\nused if replace operations break the range beyond repair.\n"
  syntax:
    content: void ReplaceRange(ContentRange range)
    parameters:
    - id: range
      type: Sdl.DesktopEditor.EditorApi.ContentRange
      description: The new range to use.
    content.vb: Sub ReplaceRange(range As ContentRange)
  overload: Sdl.DesktopEditor.EditorApi.IFind.ReplaceRange*
- uid: Sdl.DesktopEditor.EditorApi.IFind.Range
  commentId: P:Sdl.DesktopEditor.EditorApi.IFind.Range
  id: Range
  parent: Sdl.DesktopEditor.EditorApi.IFind
  langs:
  - csharp
  - vb
  name: Range
  nameWithType: IFind.Range
  fullName: Sdl.DesktopEditor.EditorApi.IFind.Range
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe range in the document that the search applies to.\n"
  syntax:
    content: ContentRange Range { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.ContentRange
    content.vb: ReadOnly Property Range As ContentRange
  overload: Sdl.DesktopEditor.EditorApi.IFind.Range*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IFind.Properties
  commentId: P:Sdl.DesktopEditor.EditorApi.IFind.Properties
  id: Properties
  parent: Sdl.DesktopEditor.EditorApi.IFind
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: IFind.Properties
  fullName: Sdl.DesktopEditor.EditorApi.IFind.Properties
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe properties that describe the settings used when running the search.\n"
  syntax:
    content: IFindProperties Properties { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IFindProperties
    content.vb: ReadOnly Property Properties As IFindProperties
  overload: Sdl.DesktopEditor.EditorApi.IFind.Properties*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IFind.Text
  commentId: P:Sdl.DesktopEditor.EditorApi.IFind.Text
  id: Text
  parent: Sdl.DesktopEditor.EditorApi.IFind
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: IFind.Text
  fullName: Sdl.DesktopEditor.EditorApi.IFind.Text
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe text to search for.\n"
  syntax:
    content: string Text { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Text As String
  overload: Sdl.DesktopEditor.EditorApi.IFind.Text*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IFind.Finished
  commentId: P:Sdl.DesktopEditor.EditorApi.IFind.Finished
  id: Finished
  parent: Sdl.DesktopEditor.EditorApi.IFind
  langs:
  - csharp
  - vb
  name: Finished
  nameWithType: IFind.Finished
  fullName: Sdl.DesktopEditor.EditorApi.IFind.Finished
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\ntrue if the search has completed.\n"
  syntax:
    content: bool Finished { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Finished As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IFind.Finished*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IFind.MatchFound
  commentId: P:Sdl.DesktopEditor.EditorApi.IFind.MatchFound
  id: MatchFound
  parent: Sdl.DesktopEditor.EditorApi.IFind
  langs:
  - csharp
  - vb
  name: MatchFound
  nameWithType: IFind.MatchFound
  fullName: Sdl.DesktopEditor.EditorApi.IFind.MatchFound
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\ntrue if a match was found.\n"
  syntax:
    content: bool MatchFound { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property MatchFound As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IFind.MatchFound*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IFind.Match
  commentId: P:Sdl.DesktopEditor.EditorApi.IFind.Match
  id: Match
  parent: Sdl.DesktopEditor.EditorApi.IFind
  langs:
  - csharp
  - vb
  name: Match
  nameWithType: IFind.Match
  fullName: Sdl.DesktopEditor.EditorApi.IFind.Match
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe range denoting the start and end of the current match.\n"
  syntax:
    content: ContentRange Match { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.ContentRange
    content.vb: ReadOnly Property Match As ContentRange
  overload: Sdl.DesktopEditor.EditorApi.IFind.Match*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.IFind.NextMatch*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IFind.NextMatch
  isExternal: true
  name: NextMatch
  nameWithType: IFind.NextMatch
  fullName: Sdl.DesktopEditor.EditorApi.IFind.NextMatch
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.DesktopEditor.EditorApi.IFind.UpdateRangeFrom*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IFind.UpdateRangeFrom
  isExternal: true
  name: UpdateRangeFrom
  nameWithType: IFind.UpdateRangeFrom
  fullName: Sdl.DesktopEditor.EditorApi.IFind.UpdateRangeFrom
- uid: Sdl.DesktopEditor.EditorApi.Position
  commentId: T:Sdl.DesktopEditor.EditorApi.Position
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Position
  nameWithType: Position
  fullName: Sdl.DesktopEditor.EditorApi.Position
- uid: Sdl.DesktopEditor.EditorApi.IFind.UpdateRangeUpTo*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IFind.UpdateRangeUpTo
  isExternal: true
  name: UpdateRangeUpTo
  nameWithType: IFind.UpdateRangeUpTo
  fullName: Sdl.DesktopEditor.EditorApi.IFind.UpdateRangeUpTo
- uid: Sdl.DesktopEditor.EditorApi.IFind.ReplaceRange*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IFind.ReplaceRange
  isExternal: true
  name: ReplaceRange
  nameWithType: IFind.ReplaceRange
  fullName: Sdl.DesktopEditor.EditorApi.IFind.ReplaceRange
- uid: Sdl.DesktopEditor.EditorApi.ContentRange
  commentId: T:Sdl.DesktopEditor.EditorApi.ContentRange
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: ContentRange
  nameWithType: ContentRange
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange
- uid: Sdl.DesktopEditor.EditorApi.IFind.Range*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IFind.Range
  isExternal: true
  name: Range
  nameWithType: IFind.Range
  fullName: Sdl.DesktopEditor.EditorApi.IFind.Range
- uid: Sdl.DesktopEditor.EditorApi.IFind.Properties*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IFind.Properties
  isExternal: true
  name: Properties
  nameWithType: IFind.Properties
  fullName: Sdl.DesktopEditor.EditorApi.IFind.Properties
- uid: Sdl.DesktopEditor.EditorApi.IFindProperties
  commentId: T:Sdl.DesktopEditor.EditorApi.IFindProperties
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IFindProperties
  nameWithType: IFindProperties
  fullName: Sdl.DesktopEditor.EditorApi.IFindProperties
- uid: Sdl.DesktopEditor.EditorApi.IFind.Text*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IFind.Text
  isExternal: true
  name: Text
  nameWithType: IFind.Text
  fullName: Sdl.DesktopEditor.EditorApi.IFind.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.DesktopEditor.EditorApi.IFind.Finished*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IFind.Finished
  isExternal: true
  name: Finished
  nameWithType: IFind.Finished
  fullName: Sdl.DesktopEditor.EditorApi.IFind.Finished
- uid: Sdl.DesktopEditor.EditorApi.IFind.MatchFound*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IFind.MatchFound
  isExternal: true
  name: MatchFound
  nameWithType: IFind.MatchFound
  fullName: Sdl.DesktopEditor.EditorApi.IFind.MatchFound
- uid: Sdl.DesktopEditor.EditorApi.IFind.Match*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IFind.Match
  isExternal: true
  name: Match
  nameWithType: IFind.Match
  fullName: Sdl.DesktopEditor.EditorApi.IFind.Match
