### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.IFindProperties
  commentId: T:Sdl.DesktopEditor.EditorApi.IFindProperties
  id: IFindProperties
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.IFindProperties.CaseSensitive
  - Sdl.DesktopEditor.EditorApi.IFindProperties.MatchWholeWord
  - Sdl.DesktopEditor.EditorApi.IFindProperties.Type
  langs:
  - csharp
  - vb
  name: IFindProperties
  nameWithType: IFindProperties
  fullName: Sdl.DesktopEditor.EditorApi.IFindProperties
  type: Interface
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nProperties used to describe the search that is being performed.\n"
  syntax:
    content: public interface IFindProperties
    content.vb: Public Interface IFindProperties
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.DesktopEditor.EditorApi.IFindProperties.Type
  commentId: P:Sdl.DesktopEditor.EditorApi.IFindProperties.Type
  id: Type
  parent: Sdl.DesktopEditor.EditorApi.IFindProperties
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: IFindProperties.Type
  fullName: Sdl.DesktopEditor.EditorApi.IFindProperties.Type
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nReturns the type of data being searched for.\n"
  syntax:
    content: FindType Type { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.FindType
    content.vb: ReadOnly Property Type As FindType
  overload: Sdl.DesktopEditor.EditorApi.IFindProperties.Type*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IFindProperties.CaseSensitive
  commentId: P:Sdl.DesktopEditor.EditorApi.IFindProperties.CaseSensitive
  id: CaseSensitive
  parent: Sdl.DesktopEditor.EditorApi.IFindProperties
  langs:
  - csharp
  - vb
  name: CaseSensitive
  nameWithType: IFindProperties.CaseSensitive
  fullName: Sdl.DesktopEditor.EditorApi.IFindProperties.CaseSensitive
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\ntrue if performaing a case sensitive search.\n"
  syntax:
    content: bool CaseSensitive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property CaseSensitive As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IFindProperties.CaseSensitive*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IFindProperties.MatchWholeWord
  commentId: P:Sdl.DesktopEditor.EditorApi.IFindProperties.MatchWholeWord
  id: MatchWholeWord
  parent: Sdl.DesktopEditor.EditorApi.IFindProperties
  langs:
  - csharp
  - vb
  name: MatchWholeWord
  nameWithType: IFindProperties.MatchWholeWord
  fullName: Sdl.DesktopEditor.EditorApi.IFindProperties.MatchWholeWord
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\ntrue if the search should match the whole word.\n"
  syntax:
    content: bool MatchWholeWord { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property MatchWholeWord As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IFindProperties.MatchWholeWord*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.IFindProperties.Type*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IFindProperties.Type
  isExternal: true
  name: Type
  nameWithType: IFindProperties.Type
  fullName: Sdl.DesktopEditor.EditorApi.IFindProperties.Type
- uid: Sdl.DesktopEditor.EditorApi.FindType
  commentId: T:Sdl.DesktopEditor.EditorApi.FindType
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: FindType
  nameWithType: FindType
  fullName: Sdl.DesktopEditor.EditorApi.FindType
- uid: Sdl.DesktopEditor.EditorApi.IFindProperties.CaseSensitive*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IFindProperties.CaseSensitive
  isExternal: true
  name: CaseSensitive
  nameWithType: IFindProperties.CaseSensitive
  fullName: Sdl.DesktopEditor.EditorApi.IFindProperties.CaseSensitive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.DesktopEditor.EditorApi.IFindProperties.MatchWholeWord*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IFindProperties.MatchWholeWord
  isExternal: true
  name: MatchWholeWord
  nameWithType: IFindProperties.MatchWholeWord
  fullName: Sdl.DesktopEditor.EditorApi.IFindProperties.MatchWholeWord
