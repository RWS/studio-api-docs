### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.ISearchMarkupResult
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.ISearchMarkupResult
  id: ISearchMarkupResult
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.ISearchMarkupResult.Positions
  langs:
  - csharp
  - vb
  name: ISearchMarkupResult
  nameWithType: ISearchMarkupResult
  fullName: Sdl.Terminology.TerminologyProvider.Core.ISearchMarkupResult
  type: Interface
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nTerm recognition results. Includes markup positions of a matching term in the text/segment. See <xref href=\"Sdl.Terminology.TerminologyProvider.Core.ITerminologyMarkupProvider\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: 'public interface ISearchMarkupResult : ISearchResult'
    content.vb: >-
      Public Interface ISearchMarkupResult
          Inherits ISearchResult
  inheritedMembers:
  - Sdl.Terminology.TerminologyProvider.Core.ISearchResult.Id
  - Sdl.Terminology.TerminologyProvider.Core.ISearchResult.Text
  - Sdl.Terminology.TerminologyProvider.Core.ISearchResult.Score
  - Sdl.Terminology.TerminologyProvider.Core.ISearchResult.Language
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Terminology.TerminologyProvider.Core.ISearchMarkupResult.Positions
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ISearchMarkupResult.Positions
  id: Positions
  parent: Sdl.Terminology.TerminologyProvider.Core.ISearchMarkupResult
  langs:
  - csharp
  - vb
  name: Positions
  nameWithType: ISearchMarkupResult.Positions
  fullName: Sdl.Terminology.TerminologyProvider.Core.ISearchMarkupResult.Positions
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nList of markup positions\n"
  syntax:
    content: IList<IMarkupPosition> Positions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.IMarkupPosition}
    content.vb: ReadOnly Property Positions As IList(Of IMarkupPosition)
  overload: Sdl.Terminology.TerminologyProvider.Core.ISearchMarkupResult.Positions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
- uid: Sdl.Terminology.TerminologyProvider.Core.ISearchResult.Id
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ISearchResult.Id
  parent: Sdl.Terminology.TerminologyProvider.Core.ISearchResult
  isExternal: true
  name: Id
  nameWithType: ISearchResult.Id
  fullName: Sdl.Terminology.TerminologyProvider.Core.ISearchResult.Id
- uid: Sdl.Terminology.TerminologyProvider.Core.ISearchResult.Text
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ISearchResult.Text
  parent: Sdl.Terminology.TerminologyProvider.Core.ISearchResult
  isExternal: true
  name: Text
  nameWithType: ISearchResult.Text
  fullName: Sdl.Terminology.TerminologyProvider.Core.ISearchResult.Text
- uid: Sdl.Terminology.TerminologyProvider.Core.ISearchResult.Score
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ISearchResult.Score
  parent: Sdl.Terminology.TerminologyProvider.Core.ISearchResult
  isExternal: true
  name: Score
  nameWithType: ISearchResult.Score
  fullName: Sdl.Terminology.TerminologyProvider.Core.ISearchResult.Score
- uid: Sdl.Terminology.TerminologyProvider.Core.ISearchResult.Language
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ISearchResult.Language
  parent: Sdl.Terminology.TerminologyProvider.Core.ISearchResult
  isExternal: true
  name: Language
  nameWithType: ISearchResult.Language
  fullName: Sdl.Terminology.TerminologyProvider.Core.ISearchResult.Language
- uid: Sdl.Terminology.TerminologyProvider.Core.ISearchResult
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.ISearchResult
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: ISearchResult
  nameWithType: ISearchResult
  fullName: Sdl.Terminology.TerminologyProvider.Core.ISearchResult
- uid: Sdl.Terminology.TerminologyProvider.Core.ISearchMarkupResult.Positions*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ISearchMarkupResult.Positions
  isExternal: true
  name: Positions
  nameWithType: ISearchMarkupResult.Positions
  fullName: Sdl.Terminology.TerminologyProvider.Core.ISearchMarkupResult.Positions
- uid: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.IMarkupPosition}
  commentId: T:System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.IMarkupPosition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IMarkupPosition>
  nameWithType: IList<IMarkupPosition>
  fullName: System.Collections.Generic.IList<Sdl.Terminology.TerminologyProvider.Core.IMarkupPosition>
  nameWithType.vb: IList(Of IMarkupPosition)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.Terminology.TerminologyProvider.Core.IMarkupPosition)
  name.vb: IList(Of IMarkupPosition)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.IMarkupPosition
    name: IMarkupPosition
    nameWithType: IMarkupPosition
    fullName: Sdl.Terminology.TerminologyProvider.Core.IMarkupPosition
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Terminology.TerminologyProvider.Core.IMarkupPosition
    name: IMarkupPosition
    nameWithType: IMarkupPosition
    fullName: Sdl.Terminology.TerminologyProvider.Core.IMarkupPosition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
