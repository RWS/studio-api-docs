### YamlMime:ManagedReference
items:
- uid: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware
  commentId: T:Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware
  id: AbstractSettingsBundleAware
  parent: Sdl.Core.Settings.Implementation
  children:
  - Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.#ctor
  - Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SetSettingsBundle(Sdl.Core.Settings.ISettingsBundle)
  - Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SettingsBundle
  langs:
  - csharp
  - vb
  name: AbstractSettingsBundleAware
  nameWithType: AbstractSettingsBundleAware
  fullName: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware
  type: Class
  source:
    path: Sdl.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.Core.Settings
  namespace: Sdl.Core.Settings.Implementation
  summary: "\nOptional abstract base class for components implementing <xref href=\"Sdl.Core.Settings.ISettingsBundleAware\" data-throw-if-not-resolved=\"false\"></xref>.\nThe settings received are accessible from the <xref href=\"Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SettingsBundle\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  remarks: "\n<p>\nThis base class provides a convenient default implementation of this interface that \nimplementations may (but are not required to) use.\n</p>\n"
  syntax:
    content: 'public abstract class AbstractSettingsBundleAware : ISettingsBundleAware'
    content.vb: >-
      Public MustInherit Class AbstractSettingsBundleAware
          Implements ISettingsBundleAware
  inheritance:
  - System.Object
  implements:
  - Sdl.Core.Settings.ISettingsBundleAware
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SetSettingsBundle(Sdl.Core.Settings.ISettingsBundle)
  commentId: M:Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SetSettingsBundle(Sdl.Core.Settings.ISettingsBundle)
  id: SetSettingsBundle(Sdl.Core.Settings.ISettingsBundle)
  parent: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware
  langs:
  - csharp
  - vb
  name: SetSettingsBundle(ISettingsBundle)
  nameWithType: AbstractSettingsBundleAware.SetSettingsBundle(ISettingsBundle)
  fullName: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SetSettingsBundle(Sdl.Core.Settings.ISettingsBundle)
  type: Method
  source:
    path: Sdl.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.Core.Settings
  namespace: Sdl.Core.Settings.Implementation
  summary: "\nImplementation stores the settings bundle in a member that can be accessed through the\n<xref href=\"Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SettingsBundle\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  syntax:
    content: public virtual void SetSettingsBundle(ISettingsBundle settingsBundle)
    parameters:
    - id: settingsBundle
      type: Sdl.Core.Settings.ISettingsBundle
      description: the settingsBundle value to set the property to
    content.vb: Public Overridable Sub SetSettingsBundle(settingsBundle As ISettingsBundle)
  overload: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SetSettingsBundle*
  implements:
  - Sdl.Core.Settings.ISettingsBundleAware.SetSettingsBundle(Sdl.Core.Settings.ISettingsBundle)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.#ctor
  commentId: M:Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.#ctor
  id: '#ctor'
  parent: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware
  langs:
  - csharp
  - vb
  name: AbstractSettingsBundleAware()
  nameWithType: AbstractSettingsBundleAware.AbstractSettingsBundleAware()
  fullName: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.AbstractSettingsBundleAware()
  type: Constructor
  source:
    path: Sdl.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.Core.Settings
  namespace: Sdl.Core.Settings.Implementation
  syntax:
    content: protected AbstractSettingsBundleAware()
    content.vb: Protected Sub New
  overload: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SettingsBundle
  commentId: P:Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SettingsBundle
  id: SettingsBundle
  parent: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware
  langs:
  - csharp
  - vb
  name: SettingsBundle
  nameWithType: AbstractSettingsBundleAware.SettingsBundle
  fullName: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SettingsBundle
  type: Property
  source:
    path: Sdl.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.Core.Settings
  namespace: Sdl.Core.Settings.Implementation
  summary: "\nAccess to the settings bundle.\n"
  remarks: "\n<p>\nOnce <xref href=\"Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SetSettingsBundle(Sdl.Core.Settings.ISettingsBundle)\" data-throw-if-not-resolved=\"false\"></xref> has been called the settings\ncan be accessed from this property. Before that the value is <code>null</code>.\n</p>\n"
  syntax:
    content: public ISettingsBundle SettingsBundle { get; set; }
    parameters: []
    return:
      type: Sdl.Core.Settings.ISettingsBundle
    content.vb: Public Property SettingsBundle As ISettingsBundle
  overload: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SettingsBundle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.Core.Settings.Implementation
  commentId: N:Sdl.Core.Settings.Implementation
  isExternal: true
  name: Sdl.Core.Settings.Implementation
  nameWithType: Sdl.Core.Settings.Implementation
  fullName: Sdl.Core.Settings.Implementation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.Core.Settings.ISettingsBundleAware
  commentId: T:Sdl.Core.Settings.ISettingsBundleAware
  parent: Sdl.Core.Settings
  isExternal: true
  name: ISettingsBundleAware
  nameWithType: ISettingsBundleAware
  fullName: Sdl.Core.Settings.ISettingsBundleAware
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.Settings
  commentId: N:Sdl.Core.Settings
  isExternal: true
  name: Sdl.Core.Settings
  nameWithType: Sdl.Core.Settings
  fullName: Sdl.Core.Settings
- uid: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SetSettingsBundle*
  commentId: Overload:Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SetSettingsBundle
  isExternal: true
  name: SetSettingsBundle
  nameWithType: AbstractSettingsBundleAware.SetSettingsBundle
  fullName: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SetSettingsBundle
- uid: Sdl.Core.Settings.ISettingsBundleAware.SetSettingsBundle(Sdl.Core.Settings.ISettingsBundle)
  commentId: M:Sdl.Core.Settings.ISettingsBundleAware.SetSettingsBundle(Sdl.Core.Settings.ISettingsBundle)
  parent: Sdl.Core.Settings.ISettingsBundleAware
  isExternal: true
  name: SetSettingsBundle(ISettingsBundle)
  nameWithType: ISettingsBundleAware.SetSettingsBundle(ISettingsBundle)
  fullName: Sdl.Core.Settings.ISettingsBundleAware.SetSettingsBundle(Sdl.Core.Settings.ISettingsBundle)
  spec.csharp:
  - uid: Sdl.Core.Settings.ISettingsBundleAware.SetSettingsBundle(Sdl.Core.Settings.ISettingsBundle)
    name: SetSettingsBundle
    nameWithType: ISettingsBundleAware.SetSettingsBundle
    fullName: Sdl.Core.Settings.ISettingsBundleAware.SetSettingsBundle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Settings.ISettingsBundle
    name: ISettingsBundle
    nameWithType: ISettingsBundle
    fullName: Sdl.Core.Settings.ISettingsBundle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.Settings.ISettingsBundleAware.SetSettingsBundle(Sdl.Core.Settings.ISettingsBundle)
    name: SetSettingsBundle
    nameWithType: ISettingsBundleAware.SetSettingsBundle
    fullName: Sdl.Core.Settings.ISettingsBundleAware.SetSettingsBundle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Settings.ISettingsBundle
    name: ISettingsBundle
    nameWithType: ISettingsBundle
    fullName: Sdl.Core.Settings.ISettingsBundle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.Settings.ISettingsBundle
  commentId: T:Sdl.Core.Settings.ISettingsBundle
  parent: Sdl.Core.Settings
  isExternal: true
  name: ISettingsBundle
  nameWithType: ISettingsBundle
  fullName: Sdl.Core.Settings.ISettingsBundle
- uid: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.#ctor*
  commentId: Overload:Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.#ctor
  isExternal: true
  name: AbstractSettingsBundleAware
  nameWithType: AbstractSettingsBundleAware.AbstractSettingsBundleAware
  fullName: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.AbstractSettingsBundleAware
- uid: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SettingsBundle*
  commentId: Overload:Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SettingsBundle
  isExternal: true
  name: SettingsBundle
  nameWithType: AbstractSettingsBundleAware.SettingsBundle
  fullName: Sdl.Core.Settings.Implementation.AbstractSettingsBundleAware.SettingsBundle
