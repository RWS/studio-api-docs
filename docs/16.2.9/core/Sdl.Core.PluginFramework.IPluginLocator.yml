### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.IPluginLocator
  commentId: T:Sdl.Core.PluginFramework.IPluginLocator
  id: IPluginLocator
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors
  langs:
  - csharp
  - vb
  name: IPluginLocator
  nameWithType: IPluginLocator
  fullName: Sdl.Core.PluginFramework.IPluginLocator
  type: Interface
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nRepresents a plug-in locator, which is used by a plug-in registry to locate plug-ins.\n"
  remarks: "\n<p>The framework includes one implementation, <xref href=\"Sdl.Core.PluginFramework.DefaultPluginLocator\" data-throw-if-not-resolved=\"false\"></xref>, which loads locates plug-ins within\na directory on the local file system.</p>\n<p>The plug-in locator is automatically disposed when the plug-in registry that owns it is disposed.</p>"
  syntax:
    content: 'public interface IPluginLocator : IDisposable'
    content.vb: >-
      Public Interface IPluginLocator
          Inherits IDisposable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors
  commentId: M:Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors
  id: GetPluginDescriptors
  parent: Sdl.Core.PluginFramework.IPluginLocator
  langs:
  - csharp
  - vb
  name: GetPluginDescriptors()
  nameWithType: IPluginLocator.GetPluginDescriptors()
  fullName: Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors()
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nReturns an array of plug-in descriptors for plug-ins found.\n"
  syntax:
    content: IPluginDescriptor[] GetPluginDescriptors()
    return:
      type: Sdl.Core.PluginFramework.IPluginDescriptor[]
      description: An array of plug-in descriptors.
    content.vb: Function GetPluginDescriptors As IPluginDescriptor()
  overload: Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors*
references:
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors*
  commentId: Overload:Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors
  isExternal: true
  name: GetPluginDescriptors
  nameWithType: IPluginLocator.GetPluginDescriptors
  fullName: Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors
- uid: Sdl.Core.PluginFramework.IPluginDescriptor[]
  isExternal: true
  name: IPluginDescriptor[]
  nameWithType: IPluginDescriptor[]
  fullName: Sdl.Core.PluginFramework.IPluginDescriptor[]
  nameWithType.vb: IPluginDescriptor()
  fullName.vb: Sdl.Core.PluginFramework.IPluginDescriptor()
  name.vb: IPluginDescriptor()
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.IPluginDescriptor
    name: IPluginDescriptor
    nameWithType: IPluginDescriptor
    fullName: Sdl.Core.PluginFramework.IPluginDescriptor
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.Core.PluginFramework.IPluginDescriptor
    name: IPluginDescriptor
    nameWithType: IPluginDescriptor
    fullName: Sdl.Core.PluginFramework.IPluginDescriptor
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
