### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer
  id: ParagraphUnitBuffer
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi
  children:
  - Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.#ctor
  - Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.BufferedParagraphUnits
  - Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Hold
  - Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.IsEmpty
  - Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.IsHolding
  - Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Output
  - Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.ProcessParagraphUnit(Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Release
  langs:
  - csharp
  - vb
  name: ParagraphUnitBuffer
  nameWithType: ParagraphUnitBuffer
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi
  summary: "\nA buffer for <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit\" data-throw-if-not-resolved=\"false\"></xref> instances\n<p>The buffer can be turned on and off. While turned on, it caches all paragraph units passed\nto it through calls on <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.ProcessParagraphUnit(Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit)\" data-throw-if-not-resolved=\"false\"></xref>. When turned off, the paragraph units are output\nto the <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler\" data-throw-if-not-resolved=\"false\"></xref> set as the <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Output\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>Call <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Hold\" data-throw-if-not-resolved=\"false\"></xref> to make the buffer start buffering paragraph\nunit calls. Call <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Release\" data-throw-if-not-resolved=\"false\"></xref> to have all buffered paragraph units output to the \n<xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Output\" data-throw-if-not-resolved=\"false\"></xref> content processor and stop buffering calls.</p>\n<p>\nYou can access and modify the content of the buffer through the <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.BufferedParagraphUnits\" data-throw-if-not-resolved=\"false\"></xref> property.\n</p>\n"
  remarks: "\n<p>\nThis class is used in the implementation of the Native to Bilingual Converter and other\nimplementations in which buffering of bilingual content is necessary.\n</p>\n"
  syntax:
    content: public class ParagraphUnitBuffer
    content.vb: Public Class ParagraphUnitBuffer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer
  langs:
  - csharp
  - vb
  name: ParagraphUnitBuffer()
  nameWithType: ParagraphUnitBuffer.ParagraphUnitBuffer()
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.ParagraphUnitBuffer()
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi
  summary: "\nDefault constructor - creates a new empty buffer that is not holding.\n"
  syntax:
    content: public ParagraphUnitBuffer()
    content.vb: Public Sub New
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler)
  id: '#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler)'
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer
  langs:
  - csharp
  - vb
  name: ParagraphUnitBuffer(IBilingualContentHandler)
  nameWithType: ParagraphUnitBuffer.ParagraphUnitBuffer(IBilingualContentHandler)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.ParagraphUnitBuffer(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi
  summary: "\nConstruct with the bilingual content processor that will be used for output\nfrom the buffer.\n"
  syntax:
    content: public ParagraphUnitBuffer(IBilingualContentHandler output)
    parameters:
    - id: output
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler
    content.vb: Public Sub New(output As IBilingualContentHandler)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Hold
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Hold
  id: Hold
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer
  langs:
  - csharp
  - vb
  name: Hold()
  nameWithType: ParagraphUnitBuffer.Hold()
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Hold()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi
  summary: "\nStart buffering ParagraphUnits.\nIf the buffer is already holding, this call has no effect.\n"
  syntax:
    content: public void Hold()
    content.vb: Public Sub Hold
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Hold*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Release
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Release
  id: Release
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer
  langs:
  - csharp
  - vb
  name: Release()
  nameWithType: ParagraphUnitBuffer.Release()
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Release()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi
  summary: "\nReleases the buffer content by calling the appropriate Process method \nfor each ParagraphUnit on the Output. Removes all ParagraphUnits from the buffer.\n"
  syntax:
    content: public void Release()
    content.vb: Public Sub Release
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Release*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.ProcessParagraphUnit(Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.ProcessParagraphUnit(Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit)
  id: ProcessParagraphUnit(Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer
  langs:
  - csharp
  - vb
  name: ProcessParagraphUnit(IParagraphUnit)
  nameWithType: ParagraphUnitBuffer.ProcessParagraphUnit(IParagraphUnit)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.ProcessParagraphUnit(Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi
  summary: "\nCall this to process a ParagraphUnit.\nIf the buffer is holding, the paragraph unit will be added to the buffer and output once\nthe buffer has been released. If not, the paragraph unit will be output immediately.\n"
  syntax:
    content: public void ProcessParagraphUnit(IParagraphUnit pu)
    parameters:
    - id: pu
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
    content.vb: Public Sub ProcessParagraphUnit(pu As IParagraphUnit)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.ProcessParagraphUnit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Output
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Output
  id: Output
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer
  langs:
  - csharp
  - vb
  name: Output
  nameWithType: ParagraphUnitBuffer.Output
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Output
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi
  summary: "\nWhen the buffer is not holding calls, all ParagraphUnits will be output\nto this interface.\n"
  syntax:
    content: public IBilingualContentHandler Output { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler
    content.vb: Public Property Output As IBilingualContentHandler
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Output*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.BufferedParagraphUnits
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.BufferedParagraphUnits
  id: BufferedParagraphUnits
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer
  langs:
  - csharp
  - vb
  name: BufferedParagraphUnits
  nameWithType: ParagraphUnitBuffer.BufferedParagraphUnits
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.BufferedParagraphUnits
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi
  summary: "\nProvides access to the ParagraphUnits that are currently in the buffer.\n"
  syntax:
    content: public List<IParagraphUnit> BufferedParagraphUnits { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit}
    content.vb: Public ReadOnly Property BufferedParagraphUnits As List(Of IParagraphUnit)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.BufferedParagraphUnits*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.IsHolding
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.IsHolding
  id: IsHolding
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer
  langs:
  - csharp
  - vb
  name: IsHolding
  nameWithType: ParagraphUnitBuffer.IsHolding
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.IsHolding
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi
  summary: "\nIndicates if the buffer is actively buffering calls.\n"
  syntax:
    content: public bool IsHolding { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsHolding As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.IsHolding*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.IsEmpty
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.IsEmpty
  id: IsEmpty
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: ParagraphUnitBuffer.IsEmpty
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.IsEmpty
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi
  summary: "\n<code>true</code> if the buffer is empty.\n"
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.IsEmpty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.#ctor
  isExternal: true
  name: ParagraphUnitBuffer
  nameWithType: ParagraphUnitBuffer.ParagraphUnitBuffer
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.ParagraphUnitBuffer
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IBilingualContentHandler
  nameWithType: IBilingualContentHandler
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler
- uid: Sdl.FileTypeSupport.Framework.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Hold*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Hold
  isExternal: true
  name: Hold
  nameWithType: ParagraphUnitBuffer.Hold
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Hold
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Release*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Release
  isExternal: true
  name: Release
  nameWithType: ParagraphUnitBuffer.Release
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Release
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.ProcessParagraphUnit*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.ProcessParagraphUnit
  isExternal: true
  name: ProcessParagraphUnit
  nameWithType: ParagraphUnitBuffer.ProcessParagraphUnit
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.ProcessParagraphUnit
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IParagraphUnit
  nameWithType: IParagraphUnit
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Output*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Output
  isExternal: true
  name: Output
  nameWithType: ParagraphUnitBuffer.Output
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.Output
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.BufferedParagraphUnits*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.BufferedParagraphUnits
  isExternal: true
  name: BufferedParagraphUnits
  nameWithType: ParagraphUnitBuffer.BufferedParagraphUnits
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.BufferedParagraphUnits
- uid: System.Collections.Generic.List{Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit}
  commentId: T:System.Collections.Generic.List{Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IParagraphUnit>
  nameWithType: List<IParagraphUnit>
  fullName: System.Collections.Generic.List<Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit>
  nameWithType.vb: List(Of IParagraphUnit)
  fullName.vb: System.Collections.Generic.List(Of Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit)
  name.vb: List(Of IParagraphUnit)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
    name: IParagraphUnit
    nameWithType: IParagraphUnit
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
    name: IParagraphUnit
    nameWithType: IParagraphUnit
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.IsHolding*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.IsHolding
  isExternal: true
  name: IsHolding
  nameWithType: ParagraphUnitBuffer.IsHolding
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.IsHolding
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.IsEmpty*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.IsEmpty
  isExternal: true
  name: IsEmpty
  nameWithType: ParagraphUnitBuffer.IsEmpty
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.ParagraphUnitBuffer.IsEmpty
