### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType
  id: IPreviewType
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType.SourceGeneratorId
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType.TargetGeneratorId
  langs:
  - csharp
  - vb
  name: IPreviewType
  nameWithType: IPreviewType
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nDescribes a type of preview that is available for a file type\nthrough its file type definition. This interface is further specialized\ninto <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IControlPreviewType\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IApplicationPreviewType\" data-throw-if-not-resolved=\"false\"></xref>\nfor previews that can be hosted in controls or launch standalone\napplications. The preview type is normally defined as part of a <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet\" data-throw-if-not-resolved=\"false\"></xref>.\nThe preview set determines whether the preview type is used as a source, target, or side-by-side\npreview in the user interface.\n"
  remarks: "\n<p>\nThe preview type determines which preview file generators should be used\nfor generating the preview files.\n</p>\n<p>\nDifferent generator types can be defined for source and target files. However,\nvery often the same generator is used for both. By setting the generator id\nto <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId.Default\" data-throw-if-not-resolved=\"false\"></xref> (which is the equivalent to <code>default(GeneratorId)</code> \nor <code>new GenertorId(null)</code>) the default generator type defined for the file\ntype will be used. (This is the default value. It will be used in case it is not explicitly set.)\n</p>\n<p>\nGenerators can be either of the type <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IFileGenerator\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator\" data-throw-if-not-resolved=\"false\"></xref>.\nIt is up to the host application to determine which one, and set up the \nfile conversion (and the output properties) accordingly.\n</p>\n"
  syntax:
    content: public interface IPreviewType
    content.vb: Public Interface IPreviewType
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType.SourceGeneratorId
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType.SourceGeneratorId
  id: SourceGeneratorId
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType
  langs:
  - csharp
  - vb
  name: SourceGeneratorId
  nameWithType: IPreviewType.SourceGeneratorId
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType.SourceGeneratorId
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nIdentifier for the generator that can generate the source language\nfile to be displayed using the preview.\n"
  remarks: "\nIf <code>null</code>, the <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType.TargetGeneratorId\" data-throw-if-not-resolved=\"false\"></xref> will be used also\nto generate the source file (if applicable).\n"
  syntax:
    content: GeneratorId? SourceGeneratorId { get; set; }
    parameters: []
    return:
      type: System.Nullable{Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId}
    content.vb: Property SourceGeneratorId As GeneratorId?
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType.SourceGeneratorId*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType.TargetGeneratorId
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType.TargetGeneratorId
  id: TargetGeneratorId
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType
  langs:
  - csharp
  - vb
  name: TargetGeneratorId
  nameWithType: IPreviewType.TargetGeneratorId
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType.TargetGeneratorId
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nIdentifier for the generator that can generate the target language\nfile to be displayed in the preview.\n"
  remarks: "\n<p>\nTo use the default generator associated with the file type, set this\nvalue to <code>GeneratorId.Default</code>.\n</p>\n<p>\n\n</p>\n"
  syntax:
    content: GeneratorId TargetGeneratorId { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId
    content.vb: Property TargetGeneratorId As GeneratorId
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType.TargetGeneratorId*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType.SourceGeneratorId*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType.SourceGeneratorId
  isExternal: true
  name: SourceGeneratorId
  nameWithType: IPreviewType.SourceGeneratorId
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType.SourceGeneratorId
- uid: System.Nullable{Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId}
  commentId: T:System.Nullable{Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId}
  parent: System
  definition: System.Nullable`1
  name: Nullable<GeneratorId>
  nameWithType: Nullable<GeneratorId>
  fullName: System.Nullable<Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId>
  nameWithType.vb: Nullable(Of GeneratorId)
  fullName.vb: System.Nullable(Of Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId)
  name.vb: Nullable(Of GeneratorId)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId
    name: GeneratorId
    nameWithType: GeneratorId
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId
    name: GeneratorId
    nameWithType: GeneratorId
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType.TargetGeneratorId*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType.TargetGeneratorId
  isExternal: true
  name: TargetGeneratorId
  nameWithType: IPreviewType.TargetGeneratorId
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType.TargetGeneratorId
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: GeneratorId
  nameWithType: GeneratorId
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.GeneratorId
