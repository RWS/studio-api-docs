### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  id: NativeTextLocation
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.#ctor
  - Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.#ctor(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  - Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.#ctor(System.Int32,System.Int32)
  - Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Clone
  - Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.CompareTo(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  - Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Equals(System.Object)
  - Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.GetHashCode
  - Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.IsAfter(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  - Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.IsBefore(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  - Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Line
  - Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Offset
  - Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.ToString
  langs:
  - csharp
  - vb
  name: NativeTextLocation
  nameWithType: NativeTextLocation
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nReference to a location inside a plain text file,\nspecified through line and offset numbers.\n"
  remarks: "\nLine and offset numbers are 1-based, i.e. line number 1 is the first\nline in a file, and offset number 1 is the first character on the line.\n"
  syntax:
    content: 'public class NativeTextLocation : ICloneable, IComparable<NativeTextLocation>'
    content.vb: >-
      Public Class NativeTextLocation
          Implements ICloneable, IComparable(Of NativeTextLocation)
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.IComparable{Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  langs:
  - csharp
  - vb
  name: NativeTextLocation()
  nameWithType: NativeTextLocation.NativeTextLocation()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.NativeTextLocation()
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nCreates an uninitialized instance, where line and offset are both 0.\n"
  syntax:
    content: public NativeTextLocation()
    content.vb: Public Sub New
  overload: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.#ctor(System.Int32,System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  langs:
  - csharp
  - vb
  name: NativeTextLocation(Int32, Int32)
  nameWithType: NativeTextLocation.NativeTextLocation(Int32, Int32)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.NativeTextLocation(System.Int32, System.Int32)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nInitializes with the specified line and offset numbers.\n"
  syntax:
    content: public NativeTextLocation(int line, int offset)
    parameters:
    - id: line
      type: System.Int32
    - id: offset
      type: System.Int32
    content.vb: Public Sub New(line As Integer, offset As Integer)
  overload: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.#ctor(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.#ctor(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  id: '#ctor(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)'
  parent: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  langs:
  - csharp
  - vb
  name: NativeTextLocation(NativeTextLocation)
  nameWithType: NativeTextLocation.NativeTextLocation(NativeTextLocation)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.NativeTextLocation(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nProtected constructor used in cloning\n"
  syntax:
    content: protected NativeTextLocation(NativeTextLocation other)
    parameters:
    - id: other
      type: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
    content.vb: Protected Sub New(other As NativeTextLocation)
  overload: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.ToString
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.ToString
  id: ToString
  parent: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: NativeTextLocation.ToString()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.ToString()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nReturns a string in the format &quot;(line, offset)&quot; that\nis intended for ease of use in debugging\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Equals(System.Object)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: NativeTextLocation.Equals(Object)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Equals(System.Object)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nTrue if both line and offset numbers are equal.\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.GetHashCode
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.GetHashCode
  id: GetHashCode
  parent: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: NativeTextLocation.GetHashCode()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.GetHashCode()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe hash code is computed by shifting and combining the line and offset numbers.\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.IsBefore(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.IsBefore(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  id: IsBefore(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  langs:
  - csharp
  - vb
  name: IsBefore(NativeTextLocation)
  nameWithType: NativeTextLocation.IsBefore(NativeTextLocation)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.IsBefore(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\n<code>True</code> if this instance has line and offset numbers\nthat indicate that it appears earlier in the content than the\nother instance.\n"
  syntax:
    content: public bool IsBefore(NativeTextLocation other)
    parameters:
    - id: other
      type: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
      description: must not be null
    return:
      type: System.Boolean
    content.vb: Public Function IsBefore(other As NativeTextLocation) As Boolean
  overload: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.IsBefore*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.IsAfter(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.IsAfter(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  id: IsAfter(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  langs:
  - csharp
  - vb
  name: IsAfter(NativeTextLocation)
  nameWithType: NativeTextLocation.IsAfter(NativeTextLocation)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.IsAfter(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\n<code>True</code> if this instance has line and offset numbers\nthat indicate that it appears later in the content than the\nother instance.\n"
  syntax:
    content: public bool IsAfter(NativeTextLocation other)
    parameters:
    - id: other
      type: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
      description: Must not be null
    return:
      type: System.Boolean
    content.vb: Public Function IsAfter(other As NativeTextLocation) As Boolean
  overload: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.IsAfter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Clone
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Clone
  id: Clone
  parent: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: NativeTextLocation.Clone()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Clone()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nReturns a deep clone of this object.\n"
  syntax:
    content: public object Clone()
    return:
      type: System.Object
    content.vb: Public Function Clone As Object
  overload: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.CompareTo(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.CompareTo(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  id: CompareTo(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  langs:
  - csharp
  - vb
  name: CompareTo(NativeTextLocation)
  nameWithType: NativeTextLocation.CompareTo(NativeTextLocation)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.CompareTo(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nReturns 1 if this is after the other, -1 if this is before the other,\nand 0 if equal to the other.\n"
  syntax:
    content: public int CompareTo(NativeTextLocation other)
    parameters:
    - id: other
      type: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
      description: Must not be null
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As NativeTextLocation) As Integer
  overload: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.CompareTo*
  implements:
  - System.IComparable{Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation}.CompareTo(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Line
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Line
  id: Line
  parent: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  langs:
  - csharp
  - vb
  name: Line
  nameWithType: NativeTextLocation.Line
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Line
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nLine number in the text. The first line in a file\nis line number 1. A value of 0 indicates that\nthe line number has not been set. Negative values\nare not allowed.\n"
  remarks: "\nA new line starts when one of the following character\ncombinations are encountered:\n<ul><li></li><li></li><li></li></ul>\n"
  syntax:
    content: public virtual int Line { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property Line As Integer
  overload: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Line*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Offset
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Offset
  id: Offset
  parent: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  langs:
  - csharp
  - vb
  name: Offset
  nameWithType: NativeTextLocation.Offset
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Offset
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nCharacter offset on the current line. The first character\non the line is offset 1. A value of 0 indicates that the\noffset has not be specified. Negative values are not allowed.\n"
  syntax:
    content: public virtual int Offset { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property Offset As Integer
  overload: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Offset*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IComparable{Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation}
  commentId: T:System.IComparable{Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation}
  parent: System
  definition: System.IComparable`1
  name: IComparable<NativeTextLocation>
  nameWithType: IComparable<NativeTextLocation>
  fullName: System.IComparable<Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation>
  nameWithType.vb: IComparable(Of NativeTextLocation)
  fullName.vb: System.IComparable(Of Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  name.vb: IComparable(Of NativeTextLocation)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
    name: NativeTextLocation
    nameWithType: NativeTextLocation
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
    name: NativeTextLocation
    nameWithType: NativeTextLocation
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.#ctor
  isExternal: true
  name: NativeTextLocation
  nameWithType: NativeTextLocation.NativeTextLocation
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.NativeTextLocation
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: NativeTextLocation
  nameWithType: NativeTextLocation
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.ToString*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.ToString
  isExternal: true
  name: ToString
  nameWithType: NativeTextLocation.ToString
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Equals*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Equals
  isExternal: true
  name: Equals
  nameWithType: NativeTextLocation.Equals
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.GetHashCode*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: NativeTextLocation.GetHashCode
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.GetHashCode
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.IsBefore*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.IsBefore
  isExternal: true
  name: IsBefore
  nameWithType: NativeTextLocation.IsBefore
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.IsBefore
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.IsAfter*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.IsAfter
  isExternal: true
  name: IsAfter
  nameWithType: NativeTextLocation.IsAfter
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.IsAfter
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Clone*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Clone
  isExternal: true
  name: Clone
  nameWithType: NativeTextLocation.Clone
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.CompareTo*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.CompareTo
  isExternal: true
  name: CompareTo
  nameWithType: NativeTextLocation.CompareTo
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.CompareTo
- uid: System.IComparable{Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation}.CompareTo(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  commentId: M:System.IComparable{Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation}.CompareTo(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  parent: System.IComparable{Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(NativeTextLocation)
  nameWithType: IComparable<NativeTextLocation>.CompareTo(NativeTextLocation)
  fullName: System.IComparable<Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation>.CompareTo(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  nameWithType.vb: IComparable(Of NativeTextLocation).CompareTo(NativeTextLocation)
  fullName.vb: System.IComparable(Of Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation).CompareTo(Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<NativeTextLocation>.CompareTo
    fullName: System.IComparable<Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
    name: NativeTextLocation
    nameWithType: NativeTextLocation
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of NativeTextLocation).CompareTo
    fullName: System.IComparable(Of Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
    name: NativeTextLocation
    nameWithType: NativeTextLocation
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Line*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Line
  isExternal: true
  name: Line
  nameWithType: NativeTextLocation.Line
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Line
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Offset*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Offset
  isExternal: true
  name: Offset
  nameWithType: NativeTextLocation.Offset
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation.Offset
