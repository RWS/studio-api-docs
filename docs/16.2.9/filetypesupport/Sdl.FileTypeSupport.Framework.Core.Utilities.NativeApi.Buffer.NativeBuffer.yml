### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  id: NativeBuffer
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  children:
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.#ctor
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.BufferedCalls
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ChangeContext(Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CommentEnd
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CommentStart(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CustomInfo(Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.EndOfInput
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ExtractionOutput
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.GenerationOutput
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Hold
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlineEndTag(Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlinePlaceholderTag(Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlineStartTag(Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.IsEndOfInput
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.IsHolding
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LastBufferedCall
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LocationMark(Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LockedContentEnd
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LockedContentStart(Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Output
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphComments(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphUnitEnd
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphUnitStart(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Release
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.RevisionEnd
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.RevisionStart(Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Sdl#FileTypeSupport#Framework#NativeApi#INativeExtractionContentProcessor#Output
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Sdl#FileTypeSupport#Framework#NativeApi#INativeGenerationContentProcessor#Output
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SegmentEnd
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SegmentStart(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SetFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.StartOfInput
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.StructureTag(Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Text(Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties)
  langs:
  - csharp
  - vb
  name: NativeBuffer
  nameWithType: NativeBuffer
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nA buffer for calls to INativeExtractionContentHandler and INativeGenerationContentHandler\n\nSet the <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Output\" data-throw-if-not-resolved=\"false\"></xref> property on the buffer to the correct derived type.\nStrongly typed properties <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ExtractionOutput\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.GenerationOutput\" data-throw-if-not-resolved=\"false\"></xref>\nBoth map to the same <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Output\" data-throw-if-not-resolved=\"false\"></xref> instance, and can be used equivocally.\n\nStart buffering calls by calling <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Hold\" data-throw-if-not-resolved=\"false\"></xref>, and stops buffering\nby calling <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Release\" data-throw-if-not-resolved=\"false\"></xref>. When Release is called, any calls that are\nin the buffer will be invoked on the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentProcessor.Output\" data-throw-if-not-resolved=\"false\"></xref>,\nor <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentProcessor.Output\" data-throw-if-not-resolved=\"false\"></xref>. \n\nIf Release is called after EndOfInput is received and there is content left in the \nbuffer, an exception is thrown, since the output should not be generated after EndOfInput.\nIt is the buffer user&apos;s responsibility to ensure that the buffer is emptied before\nend of input is called for the parser components following it.\n"
  syntax:
    content: 'public class NativeBuffer : INativeExtractionContentProcessor, INativeExtractionContentHandler, INativeGenerationContentProcessor, INativeGenerationContentHandler, IAbstractNativeContentHandler, INativeContentCycleAware'
    content.vb: >-
      Public Class NativeBuffer
          Implements INativeExtractionContentProcessor, INativeExtractionContentHandler, INativeGenerationContentProcessor, INativeGenerationContentHandler, IAbstractNativeContentHandler, INativeContentCycleAware
  inheritance:
  - System.Object
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentProcessor
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentHandler
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentProcessor
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler
  - Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: NativeBuffer()
  nameWithType: NativeBuffer.NativeBuffer()
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.NativeBuffer()
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nDefault constructor, creates an empty buffer where <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.IsHolding\" data-throw-if-not-resolved=\"false\"></xref> is false.\n"
  syntax:
    content: public NativeBuffer()
    content.vb: Public Sub New
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Hold
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Hold
  id: Hold
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: Hold()
  nameWithType: NativeBuffer.Hold()
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Hold()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nCall this to start buffering calls.\n"
  syntax:
    content: public virtual void Hold()
    content.vb: Public Overridable Sub Hold
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Hold*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Release
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Release
  id: Release
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: Release()
  nameWithType: NativeBuffer.Release()
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Release()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nReleases the buffer content to the Output and turns off buffering.\n"
  syntax:
    content: public virtual void Release()
    content.vb: Public Overridable Sub Release
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Release*
  exceptions:
  - type: Sdl.FileTypeSupport.Framework.FileTypeSupportException
    commentId: T:Sdl.FileTypeSupport.Framework.FileTypeSupportException
    description: thrown, if there is content in the buffer, but EndOfInput has been called.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.StartOfInput
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.StartOfInput
  id: StartOfInput
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: StartOfInput()
  nameWithType: NativeBuffer.StartOfInput()
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.StartOfInput()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nDefault implementation, does nothing\n"
  syntax:
    content: public virtual void StartOfInput()
    content.vb: Public Overridable Sub StartOfInput
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.StartOfInput*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.StartOfInput
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.EndOfInput
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.EndOfInput
  id: EndOfInput
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: EndOfInput()
  nameWithType: NativeBuffer.EndOfInput()
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.EndOfInput()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nSets the end of input flag.\n"
  syntax:
    content: public virtual void EndOfInput()
    content.vb: Public Overridable Sub
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.EndOfInput*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.EndOfInput
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SetFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SetFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  id: SetFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: SetFileProperties(IFileProperties)
  nameWithType: NativeBuffer.SetFileProperties(IFileProperties)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SetFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nDefault implementation, does nothing\n"
  syntax:
    content: public virtual void SetFileProperties(IFileProperties properties)
    parameters:
    - id: properties
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
    content.vb: Public Overridable Sub SetFileProperties(properties As IFileProperties)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SetFileProperties*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.SetFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.StructureTag(Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.StructureTag(Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties)
  id: StructureTag(Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: StructureTag(IStructureTagProperties)
  nameWithType: NativeBuffer.StructureTag(IStructureTagProperties)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.StructureTag(Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds content to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void StructureTag(IStructureTagProperties tagInfo)
    parameters:
    - id: tagInfo
      type: Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties
    content.vb: Public Overridable Sub StructureTag(tagInfo As IStructureTagProperties)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.StructureTag*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.StructureTag(Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlineStartTag(Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlineStartTag(Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties)
  id: InlineStartTag(Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: InlineStartTag(IStartTagProperties)
  nameWithType: NativeBuffer.InlineStartTag(IStartTagProperties)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlineStartTag(Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds content to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void InlineStartTag(IStartTagProperties tagInfo)
    parameters:
    - id: tagInfo
      type: Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties
    content.vb: Public Overridable Sub InlineStartTag(tagInfo As IStartTagProperties)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlineStartTag*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlineStartTag(Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlineEndTag(Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlineEndTag(Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties)
  id: InlineEndTag(Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: InlineEndTag(IEndTagProperties)
  nameWithType: NativeBuffer.InlineEndTag(IEndTagProperties)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlineEndTag(Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds content to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void InlineEndTag(IEndTagProperties tagInfo)
    parameters:
    - id: tagInfo
      type: Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties
    content.vb: Public Overridable Sub InlineEndTag(tagInfo As IEndTagProperties)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlineEndTag*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlineEndTag(Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlinePlaceholderTag(Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlinePlaceholderTag(Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties)
  id: InlinePlaceholderTag(Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: InlinePlaceholderTag(IPlaceholderTagProperties)
  nameWithType: NativeBuffer.InlinePlaceholderTag(IPlaceholderTagProperties)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlinePlaceholderTag(Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds content to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void InlinePlaceholderTag(IPlaceholderTagProperties tagInfo)
    parameters:
    - id: tagInfo
      type: Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties
    content.vb: Public Overridable Sub InlinePlaceholderTag(tagInfo As IPlaceholderTagProperties)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlinePlaceholderTag*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlinePlaceholderTag(Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Text(Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Text(Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties)
  id: Text(Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: Text(ITextProperties)
  nameWithType: NativeBuffer.Text(ITextProperties)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Text(Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds content to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void Text(ITextProperties textInfo)
    parameters:
    - id: textInfo
      type: Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties
    content.vb: Public Overridable Sub Text(textInfo As ITextProperties)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Text*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.Text(Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CustomInfo(Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CustomInfo(Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties)
  id: CustomInfo(Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: CustomInfo(ICustomInfoProperties)
  nameWithType: NativeBuffer.CustomInfo(ICustomInfoProperties)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CustomInfo(Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds content to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void CustomInfo(ICustomInfoProperties info)
    parameters:
    - id: info
      type: Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties
    content.vb: Public Overridable Sub CustomInfo(info As ICustomInfoProperties)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CustomInfo*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CustomInfo(Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LocationMark(Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LocationMark(Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId)
  id: LocationMark(Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: LocationMark(LocationMarkerId)
  nameWithType: NativeBuffer.LocationMark(LocationMarkerId)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LocationMark(Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdd to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void LocationMark(LocationMarkerId markerId)
    parameters:
    - id: markerId
      type: Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId
    content.vb: Public Overridable Sub LocationMark(markerId As LocationMarkerId)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LocationMark*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LocationMark(Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ChangeContext(Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ChangeContext(Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties)
  id: ChangeContext(Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: ChangeContext(IContextProperties)
  nameWithType: NativeBuffer.ChangeContext(IContextProperties)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ChangeContext(Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds content to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void ChangeContext(IContextProperties contexts)
    parameters:
    - id: contexts
      type: Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties
    content.vb: Public Overridable Sub ChangeContext(contexts As IContextProperties)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ChangeContext*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.ChangeContext(Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LockedContentStart(Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LockedContentStart(Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties)
  id: LockedContentStart(Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: LockedContentStart(ILockedContentProperties)
  nameWithType: NativeBuffer.LockedContentStart(ILockedContentProperties)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LockedContentStart(Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds content to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void LockedContentStart(ILockedContentProperties lockedContentInfo)
    parameters:
    - id: lockedContentInfo
      type: Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties
    content.vb: Public Overridable Sub LockedContentStart(lockedContentInfo As ILockedContentProperties)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LockedContentStart*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LockedContentStart(Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LockedContentEnd
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LockedContentEnd
  id: LockedContentEnd
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: LockedContentEnd()
  nameWithType: NativeBuffer.LockedContentEnd()
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LockedContentEnd()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void LockedContentEnd()
    content.vb: Public Overridable Sub LockedContentEnd
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LockedContentEnd*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LockedContentEnd
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.RevisionStart(Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.RevisionStart(Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties)
  id: RevisionStart(Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: RevisionStart(IRevisionProperties)
  nameWithType: NativeBuffer.RevisionStart(IRevisionProperties)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.RevisionStart(Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void RevisionStart(IRevisionProperties revisionInfo)
    parameters:
    - id: revisionInfo
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties
      description: The revision properties.
    content.vb: Public Overridable Sub RevisionStart(revisionInfo As IRevisionProperties)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.RevisionStart*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.RevisionStart(Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.RevisionEnd
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.RevisionEnd
  id: RevisionEnd
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: RevisionEnd()
  nameWithType: NativeBuffer.RevisionEnd()
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.RevisionEnd()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void RevisionEnd()
    content.vb: Public Overridable Sub RevisionEnd
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.RevisionEnd*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.RevisionEnd
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CommentStart(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CommentStart(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  id: CommentStart(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: CommentStart(ICommentProperties)
  nameWithType: NativeBuffer.CommentStart(ICommentProperties)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CommentStart(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void CommentStart(ICommentProperties commentInfo)
    parameters:
    - id: commentInfo
      type: Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties
      description: The comment properties.
    content.vb: Public Overridable Sub CommentStart(commentInfo As ICommentProperties)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CommentStart*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CommentStart(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CommentEnd
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CommentEnd
  id: CommentEnd
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: CommentEnd()
  nameWithType: NativeBuffer.CommentEnd()
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CommentEnd()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void CommentEnd()
    content.vb: Public Overridable Sub CommentEnd
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CommentEnd*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CommentEnd
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphComments(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphComments(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  id: ParagraphComments(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: ParagraphComments(ICommentProperties)
  nameWithType: NativeBuffer.ParagraphComments(ICommentProperties)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphComments(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void ParagraphComments(ICommentProperties commentInfo)
    parameters:
    - id: commentInfo
      type: Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties
      description: The commnet properties.
    content.vb: Public Overridable Sub ParagraphComments(commentInfo As ICommentProperties)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphComments*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.ParagraphComments(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphUnitStart(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphUnitStart(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  id: ParagraphUnitStart(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: ParagraphUnitStart(IParagraphUnitProperties)
  nameWithType: NativeBuffer.ParagraphUnitStart(IParagraphUnitProperties)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphUnitStart(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void ParagraphUnitStart(IParagraphUnitProperties properties)
    parameters:
    - id: properties
      type: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
    content.vb: Public Overridable Sub ParagraphUnitStart(properties As IParagraphUnitProperties)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphUnitStart*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.ParagraphUnitStart(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphUnitEnd
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphUnitEnd
  id: ParagraphUnitEnd
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: ParagraphUnitEnd()
  nameWithType: NativeBuffer.ParagraphUnitEnd()
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphUnitEnd()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void ParagraphUnitEnd()
    content.vb: Public Overridable Sub ParagraphUnitEnd
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphUnitEnd*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.ParagraphUnitEnd
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SegmentStart(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SegmentStart(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  id: SegmentStart(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: SegmentStart(ISegmentPairProperties)
  nameWithType: NativeBuffer.SegmentStart(ISegmentPairProperties)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SegmentStart(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void SegmentStart(ISegmentPairProperties properties)
    parameters:
    - id: properties
      type: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
    content.vb: Public Overridable Sub SegmentStart(properties As ISegmentPairProperties)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SegmentStart*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.SegmentStart(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SegmentEnd
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SegmentEnd
  id: SegmentEnd
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: SegmentEnd()
  nameWithType: NativeBuffer.SegmentEnd()
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SegmentEnd()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAdds to buffer if holding, otherwise output directly.\n"
  syntax:
    content: public virtual void SegmentEnd()
    content.vb: Public Overridable Sub SegmentEnd
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SegmentEnd*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.SegmentEnd
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Output
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Output
  id: Output
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: Output
  nameWithType: NativeBuffer.Output
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Output
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nAgnostic access to the output handler. Accesses the\nvery same object instance as the <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ExtractionOutput\" data-throw-if-not-resolved=\"false\"></xref>\nand the <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.GenerationOutput\" data-throw-if-not-resolved=\"false\"></xref> properties.\n"
  syntax:
    content: public virtual IAbstractNativeContentHandler Output { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
    content.vb: Public Overridable Property Output As IAbstractNativeContentHandler
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Output*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ExtractionOutput
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ExtractionOutput
  id: ExtractionOutput
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: ExtractionOutput
  nameWithType: NativeBuffer.ExtractionOutput
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ExtractionOutput
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nStrongly typed output content handler that can be used\nwhen the buffer is used for extraction.\n"
  remarks: "\nAccesses the very same object instance as the <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Output\" data-throw-if-not-resolved=\"false\"></xref>\nand the <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.GenerationOutput\" data-throw-if-not-resolved=\"false\"></xref> properties.\n"
  syntax:
    content: public virtual INativeExtractionContentHandler ExtractionOutput { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentHandler
    content.vb: Public Overridable Property ExtractionOutput As INativeExtractionContentHandler
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ExtractionOutput*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.GenerationOutput
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.GenerationOutput
  id: GenerationOutput
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: GenerationOutput
  nameWithType: NativeBuffer.GenerationOutput
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.GenerationOutput
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nStrongly typed output content handler that can be used\nwhen the buffer is used for generation.\n"
  remarks: "\nAccesses the very same object instance as the <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Output\" data-throw-if-not-resolved=\"false\"></xref>\nand the <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.GenerationOutput\" data-throw-if-not-resolved=\"false\"></xref> properties.\n"
  syntax:
    content: public virtual INativeGenerationContentHandler GenerationOutput { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler
    content.vb: Public Overridable Property GenerationOutput As INativeGenerationContentHandler
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.GenerationOutput*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.IsEndOfInput
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.IsEndOfInput
  id: IsEndOfInput
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: IsEndOfInput
  nameWithType: NativeBuffer.IsEndOfInput
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.IsEndOfInput
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nTrue, if EndOfInput has been reached. After that, Release() is no longer\npermitted if the buffer contains any content.\n\nThis property can be set to override this behaviour, but that is an \nadvanced option that should only be exercised if no other option is available.\n"
  syntax:
    content: public virtual bool IsEndOfInput { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property IsEndOfInput As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.IsEndOfInput*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.BufferedCalls
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.BufferedCalls
  id: BufferedCalls
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: BufferedCalls
  nameWithType: NativeBuffer.BufferedCalls
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.BufferedCalls
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nProvides access to the calls currently in the buffer.\n"
  syntax:
    content: public List<AbstractContentItem> BufferedCalls { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.AbstractContentItem}
    content.vb: Public ReadOnly Property BufferedCalls As List(Of AbstractContentItem)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.BufferedCalls*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LastBufferedCall
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LastBufferedCall
  id: LastBufferedCall
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: LastBufferedCall
  nameWithType: NativeBuffer.LastBufferedCall
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LastBufferedCall
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nProvides easy access to the most recent of the calls in the buffer.\n\nIf no calls are in the buffer, this property returns null.\n"
  syntax:
    content: public AbstractContentItem LastBufferedCall { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.AbstractContentItem
    content.vb: Public ReadOnly Property LastBufferedCall As AbstractContentItem
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LastBufferedCall*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.IsHolding
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.IsHolding
  id: IsHolding
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: IsHolding
  nameWithType: NativeBuffer.IsHolding
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.IsHolding
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nIndicates whether the buffer is actively buffering calls.\n"
  syntax:
    content: public bool IsHolding { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsHolding As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.IsHolding*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Sdl#FileTypeSupport#Framework#NativeApi#INativeExtractionContentProcessor#Output
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Sdl#FileTypeSupport#Framework#NativeApi#INativeExtractionContentProcessor#Output
  id: Sdl#FileTypeSupport#Framework#NativeApi#INativeExtractionContentProcessor#Output
  isEii: true
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: INativeExtractionContentProcessor.Output
  nameWithType: NativeBuffer.INativeExtractionContentProcessor.Output
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentProcessor.Output
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nRedirected to <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ExtractionOutput\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: INativeExtractionContentHandler INativeExtractionContentProcessor.Output { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentHandler
    content.vb: ReadOnly WriteOnly Property Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentProcessor.Output As INativeExtractionContentHandler Implements INativeExtractionContentProcessor.Output
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Sdl#FileTypeSupport#Framework#NativeApi#INativeExtractionContentProcessor#Output*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentProcessor.Output
  nameWithType.vb: NativeBuffer.Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentProcessor.Output
  modifiers.csharp:
  - get
  - set
  name.vb: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentProcessor.Output
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Sdl#FileTypeSupport#Framework#NativeApi#INativeGenerationContentProcessor#Output
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Sdl#FileTypeSupport#Framework#NativeApi#INativeGenerationContentProcessor#Output
  id: Sdl#FileTypeSupport#Framework#NativeApi#INativeGenerationContentProcessor#Output
  isEii: true
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer
  langs:
  - csharp
  - vb
  name: INativeGenerationContentProcessor.Output
  nameWithType: NativeBuffer.INativeGenerationContentProcessor.Output
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentProcessor.Output
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  summary: "\nRedirected to <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.GenerationOutput\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: INativeGenerationContentHandler INativeGenerationContentProcessor.Output { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler
    content.vb: ReadOnly WriteOnly Property Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentProcessor.Output As INativeGenerationContentHandler Implements INativeGenerationContentProcessor.Output
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Sdl#FileTypeSupport#Framework#NativeApi#INativeGenerationContentProcessor#Output*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentProcessor.Output
  nameWithType.vb: NativeBuffer.Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentProcessor.Output
  modifiers.csharp:
  - get
  - set
  name.vb: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentProcessor.Output
references:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentProcessor
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentProcessor
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: INativeExtractionContentProcessor
  nameWithType: INativeExtractionContentProcessor
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentProcessor
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentHandler
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentHandler
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: INativeExtractionContentHandler
  nameWithType: INativeExtractionContentHandler
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentHandler
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentProcessor
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentProcessor
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: INativeGenerationContentProcessor
  nameWithType: INativeGenerationContentProcessor
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentProcessor
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: INativeGenerationContentHandler
  nameWithType: INativeGenerationContentHandler
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IAbstractNativeContentHandler
  nameWithType: IAbstractNativeContentHandler
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: INativeContentCycleAware
  nameWithType: INativeContentCycleAware
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.#ctor
  isExternal: true
  name: NativeBuffer
  nameWithType: NativeBuffer.NativeBuffer
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.NativeBuffer
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Hold*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Hold
  isExternal: true
  name: Hold
  nameWithType: NativeBuffer.Hold
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Hold
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Release*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Release
  isExternal: true
  name: Release
  nameWithType: NativeBuffer.Release
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Release
- uid: Sdl.FileTypeSupport.Framework.FileTypeSupportException
  commentId: T:Sdl.FileTypeSupport.Framework.FileTypeSupportException
  parent: Sdl.FileTypeSupport.Framework
  isExternal: true
  name: FileTypeSupportException
  nameWithType: FileTypeSupportException
  fullName: Sdl.FileTypeSupport.Framework.FileTypeSupportException
- uid: Sdl.FileTypeSupport.Framework
  commentId: N:Sdl.FileTypeSupport.Framework
  isExternal: true
  name: Sdl.FileTypeSupport.Framework
  nameWithType: Sdl.FileTypeSupport.Framework
  fullName: Sdl.FileTypeSupport.Framework
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.StartOfInput*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.StartOfInput
  isExternal: true
  name: StartOfInput
  nameWithType: NativeBuffer.StartOfInput
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.StartOfInput
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.StartOfInput
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.StartOfInput
  parent: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware
  isExternal: true
  name: StartOfInput()
  nameWithType: INativeContentCycleAware.StartOfInput()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.StartOfInput()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.StartOfInput
    name: StartOfInput
    nameWithType: INativeContentCycleAware.StartOfInput
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.StartOfInput
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.StartOfInput
    name: StartOfInput
    nameWithType: INativeContentCycleAware.StartOfInput
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.StartOfInput
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.EndOfInput*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.EndOfInput
  isExternal: true
  name: EndOfInput
  nameWithType: NativeBuffer.EndOfInput
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.EndOfInput
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.EndOfInput
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.EndOfInput
  parent: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware
  isExternal: true
  name: EndOfInput()
  nameWithType: INativeContentCycleAware.EndOfInput()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.EndOfInput()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.EndOfInput
    name: EndOfInput
    nameWithType: INativeContentCycleAware.EndOfInput
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.EndOfInput
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.EndOfInput
    name: EndOfInput
    nameWithType: INativeContentCycleAware.EndOfInput
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.EndOfInput
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SetFileProperties*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SetFileProperties
  isExternal: true
  name: SetFileProperties
  nameWithType: NativeBuffer.SetFileProperties
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SetFileProperties
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.SetFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.SetFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware
  isExternal: true
  name: SetFileProperties(IFileProperties)
  nameWithType: INativeContentCycleAware.SetFileProperties(IFileProperties)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.SetFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.SetFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
    name: SetFileProperties
    nameWithType: INativeContentCycleAware.SetFileProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.SetFileProperties
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
    name: IFileProperties
    nameWithType: IFileProperties
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.SetFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
    name: SetFileProperties
    nameWithType: INativeContentCycleAware.SetFileProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.SetFileProperties
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
    name: IFileProperties
    nameWithType: IFileProperties
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IFileProperties
  nameWithType: IFileProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
- uid: Sdl.FileTypeSupport.Framework.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.StructureTag*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.StructureTag
  isExternal: true
  name: StructureTag
  nameWithType: NativeBuffer.StructureTag
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.StructureTag
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.StructureTag(Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.StructureTag(Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  isExternal: true
  name: StructureTag(IStructureTagProperties)
  nameWithType: IAbstractNativeContentHandler.StructureTag(IStructureTagProperties)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.StructureTag(Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.StructureTag(Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties)
    name: StructureTag
    nameWithType: IAbstractNativeContentHandler.StructureTag
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.StructureTag
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties
    name: IStructureTagProperties
    nameWithType: IStructureTagProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.StructureTag(Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties)
    name: StructureTag
    nameWithType: IAbstractNativeContentHandler.StructureTag
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.StructureTag
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties
    name: IStructureTagProperties
    nameWithType: IStructureTagProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IStructureTagProperties
  nameWithType: IStructureTagProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IStructureTagProperties
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlineStartTag*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlineStartTag
  isExternal: true
  name: InlineStartTag
  nameWithType: NativeBuffer.InlineStartTag
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlineStartTag
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlineStartTag(Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlineStartTag(Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  isExternal: true
  name: InlineStartTag(IStartTagProperties)
  nameWithType: IAbstractNativeContentHandler.InlineStartTag(IStartTagProperties)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlineStartTag(Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlineStartTag(Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties)
    name: InlineStartTag
    nameWithType: IAbstractNativeContentHandler.InlineStartTag
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlineStartTag
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties
    name: IStartTagProperties
    nameWithType: IStartTagProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlineStartTag(Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties)
    name: InlineStartTag
    nameWithType: IAbstractNativeContentHandler.InlineStartTag
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlineStartTag
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties
    name: IStartTagProperties
    nameWithType: IStartTagProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IStartTagProperties
  nameWithType: IStartTagProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlineEndTag*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlineEndTag
  isExternal: true
  name: InlineEndTag
  nameWithType: NativeBuffer.InlineEndTag
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlineEndTag
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlineEndTag(Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlineEndTag(Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  isExternal: true
  name: InlineEndTag(IEndTagProperties)
  nameWithType: IAbstractNativeContentHandler.InlineEndTag(IEndTagProperties)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlineEndTag(Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlineEndTag(Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties)
    name: InlineEndTag
    nameWithType: IAbstractNativeContentHandler.InlineEndTag
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlineEndTag
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties
    name: IEndTagProperties
    nameWithType: IEndTagProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlineEndTag(Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties)
    name: InlineEndTag
    nameWithType: IAbstractNativeContentHandler.InlineEndTag
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlineEndTag
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties
    name: IEndTagProperties
    nameWithType: IEndTagProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IEndTagProperties
  nameWithType: IEndTagProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlinePlaceholderTag*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlinePlaceholderTag
  isExternal: true
  name: InlinePlaceholderTag
  nameWithType: NativeBuffer.InlinePlaceholderTag
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.InlinePlaceholderTag
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlinePlaceholderTag(Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlinePlaceholderTag(Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  isExternal: true
  name: InlinePlaceholderTag(IPlaceholderTagProperties)
  nameWithType: IAbstractNativeContentHandler.InlinePlaceholderTag(IPlaceholderTagProperties)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlinePlaceholderTag(Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlinePlaceholderTag(Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties)
    name: InlinePlaceholderTag
    nameWithType: IAbstractNativeContentHandler.InlinePlaceholderTag
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlinePlaceholderTag
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties
    name: IPlaceholderTagProperties
    nameWithType: IPlaceholderTagProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlinePlaceholderTag(Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties)
    name: InlinePlaceholderTag
    nameWithType: IAbstractNativeContentHandler.InlinePlaceholderTag
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.InlinePlaceholderTag
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties
    name: IPlaceholderTagProperties
    nameWithType: IPlaceholderTagProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IPlaceholderTagProperties
  nameWithType: IPlaceholderTagProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPlaceholderTagProperties
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Text*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Text
  isExternal: true
  name: Text
  nameWithType: NativeBuffer.Text
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Text
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.Text(Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.Text(Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  isExternal: true
  name: Text(ITextProperties)
  nameWithType: IAbstractNativeContentHandler.Text(ITextProperties)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.Text(Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.Text(Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties)
    name: Text
    nameWithType: IAbstractNativeContentHandler.Text
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.Text
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties
    name: ITextProperties
    nameWithType: ITextProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.Text(Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties)
    name: Text
    nameWithType: IAbstractNativeContentHandler.Text
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.Text
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties
    name: ITextProperties
    nameWithType: ITextProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: ITextProperties
  nameWithType: ITextProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITextProperties
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CustomInfo*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CustomInfo
  isExternal: true
  name: CustomInfo
  nameWithType: NativeBuffer.CustomInfo
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CustomInfo
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CustomInfo(Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CustomInfo(Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  isExternal: true
  name: CustomInfo(ICustomInfoProperties)
  nameWithType: IAbstractNativeContentHandler.CustomInfo(ICustomInfoProperties)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CustomInfo(Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CustomInfo(Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties)
    name: CustomInfo
    nameWithType: IAbstractNativeContentHandler.CustomInfo
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CustomInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties
    name: ICustomInfoProperties
    nameWithType: ICustomInfoProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CustomInfo(Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties)
    name: CustomInfo
    nameWithType: IAbstractNativeContentHandler.CustomInfo
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CustomInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties
    name: ICustomInfoProperties
    nameWithType: ICustomInfoProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: ICustomInfoProperties
  nameWithType: ICustomInfoProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ICustomInfoProperties
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LocationMark*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LocationMark
  isExternal: true
  name: LocationMark
  nameWithType: NativeBuffer.LocationMark
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LocationMark
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LocationMark(Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LocationMark(Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  isExternal: true
  name: LocationMark(LocationMarkerId)
  nameWithType: IAbstractNativeContentHandler.LocationMark(LocationMarkerId)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LocationMark(Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LocationMark(Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId)
    name: LocationMark
    nameWithType: IAbstractNativeContentHandler.LocationMark
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LocationMark
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId
    name: LocationMarkerId
    nameWithType: LocationMarkerId
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LocationMark(Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId)
    name: LocationMark
    nameWithType: IAbstractNativeContentHandler.LocationMark
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LocationMark
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId
    name: LocationMarkerId
    nameWithType: LocationMarkerId
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: LocationMarkerId
  nameWithType: LocationMarkerId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.LocationMarkerId
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ChangeContext*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ChangeContext
  isExternal: true
  name: ChangeContext
  nameWithType: NativeBuffer.ChangeContext
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ChangeContext
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.ChangeContext(Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.ChangeContext(Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  isExternal: true
  name: ChangeContext(IContextProperties)
  nameWithType: IAbstractNativeContentHandler.ChangeContext(IContextProperties)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.ChangeContext(Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.ChangeContext(Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties)
    name: ChangeContext
    nameWithType: IAbstractNativeContentHandler.ChangeContext
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.ChangeContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties
    name: IContextProperties
    nameWithType: IContextProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.ChangeContext(Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties)
    name: ChangeContext
    nameWithType: IAbstractNativeContentHandler.ChangeContext
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.ChangeContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties
    name: IContextProperties
    nameWithType: IContextProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IContextProperties
  nameWithType: IContextProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LockedContentStart*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LockedContentStart
  isExternal: true
  name: LockedContentStart
  nameWithType: NativeBuffer.LockedContentStart
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LockedContentStart
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LockedContentStart(Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LockedContentStart(Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  isExternal: true
  name: LockedContentStart(ILockedContentProperties)
  nameWithType: IAbstractNativeContentHandler.LockedContentStart(ILockedContentProperties)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LockedContentStart(Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LockedContentStart(Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties)
    name: LockedContentStart
    nameWithType: IAbstractNativeContentHandler.LockedContentStart
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LockedContentStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties
    name: ILockedContentProperties
    nameWithType: ILockedContentProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LockedContentStart(Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties)
    name: LockedContentStart
    nameWithType: IAbstractNativeContentHandler.LockedContentStart
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LockedContentStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties
    name: ILockedContentProperties
    nameWithType: ILockedContentProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: ILockedContentProperties
  nameWithType: ILockedContentProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ILockedContentProperties
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LockedContentEnd*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LockedContentEnd
  isExternal: true
  name: LockedContentEnd
  nameWithType: NativeBuffer.LockedContentEnd
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LockedContentEnd
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LockedContentEnd
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LockedContentEnd
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  isExternal: true
  name: LockedContentEnd()
  nameWithType: IAbstractNativeContentHandler.LockedContentEnd()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LockedContentEnd()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LockedContentEnd
    name: LockedContentEnd
    nameWithType: IAbstractNativeContentHandler.LockedContentEnd
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LockedContentEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LockedContentEnd
    name: LockedContentEnd
    nameWithType: IAbstractNativeContentHandler.LockedContentEnd
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.LockedContentEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.RevisionStart*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.RevisionStart
  isExternal: true
  name: RevisionStart
  nameWithType: NativeBuffer.RevisionStart
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.RevisionStart
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.RevisionStart(Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.RevisionStart(Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  isExternal: true
  name: RevisionStart(IRevisionProperties)
  nameWithType: IAbstractNativeContentHandler.RevisionStart(IRevisionProperties)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.RevisionStart(Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.RevisionStart(Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties)
    name: RevisionStart
    nameWithType: IAbstractNativeContentHandler.RevisionStart
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.RevisionStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties
    name: IRevisionProperties
    nameWithType: IRevisionProperties
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.RevisionStart(Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties)
    name: RevisionStart
    nameWithType: IAbstractNativeContentHandler.RevisionStart
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.RevisionStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties
    name: IRevisionProperties
    nameWithType: IRevisionProperties
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IRevisionProperties
  nameWithType: IRevisionProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.RevisionEnd*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.RevisionEnd
  isExternal: true
  name: RevisionEnd
  nameWithType: NativeBuffer.RevisionEnd
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.RevisionEnd
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.RevisionEnd
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.RevisionEnd
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  isExternal: true
  name: RevisionEnd()
  nameWithType: IAbstractNativeContentHandler.RevisionEnd()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.RevisionEnd()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.RevisionEnd
    name: RevisionEnd
    nameWithType: IAbstractNativeContentHandler.RevisionEnd
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.RevisionEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.RevisionEnd
    name: RevisionEnd
    nameWithType: IAbstractNativeContentHandler.RevisionEnd
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.RevisionEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CommentStart*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CommentStart
  isExternal: true
  name: CommentStart
  nameWithType: NativeBuffer.CommentStart
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CommentStart
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CommentStart(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CommentStart(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  isExternal: true
  name: CommentStart(ICommentProperties)
  nameWithType: IAbstractNativeContentHandler.CommentStart(ICommentProperties)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CommentStart(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CommentStart(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
    name: CommentStart
    nameWithType: IAbstractNativeContentHandler.CommentStart
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CommentStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties
    name: ICommentProperties
    nameWithType: ICommentProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CommentStart(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
    name: CommentStart
    nameWithType: IAbstractNativeContentHandler.CommentStart
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CommentStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties
    name: ICommentProperties
    nameWithType: ICommentProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: ICommentProperties
  nameWithType: ICommentProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CommentEnd*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CommentEnd
  isExternal: true
  name: CommentEnd
  nameWithType: NativeBuffer.CommentEnd
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.CommentEnd
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CommentEnd
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CommentEnd
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  isExternal: true
  name: CommentEnd()
  nameWithType: IAbstractNativeContentHandler.CommentEnd()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CommentEnd()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CommentEnd
    name: CommentEnd
    nameWithType: IAbstractNativeContentHandler.CommentEnd
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CommentEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CommentEnd
    name: CommentEnd
    nameWithType: IAbstractNativeContentHandler.CommentEnd
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.CommentEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphComments*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphComments
  isExternal: true
  name: ParagraphComments
  nameWithType: NativeBuffer.ParagraphComments
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphComments
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.ParagraphComments(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.ParagraphComments(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler
  isExternal: true
  name: ParagraphComments(ICommentProperties)
  nameWithType: IAbstractNativeContentHandler.ParagraphComments(ICommentProperties)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.ParagraphComments(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.ParagraphComments(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
    name: ParagraphComments
    nameWithType: IAbstractNativeContentHandler.ParagraphComments
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.ParagraphComments
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties
    name: ICommentProperties
    nameWithType: ICommentProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.ParagraphComments(Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties)
    name: ParagraphComments
    nameWithType: IAbstractNativeContentHandler.ParagraphComments
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IAbstractNativeContentHandler.ParagraphComments
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties
    name: ICommentProperties
    nameWithType: ICommentProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ICommentProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphUnitStart*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphUnitStart
  isExternal: true
  name: ParagraphUnitStart
  nameWithType: NativeBuffer.ParagraphUnitStart
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphUnitStart
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.ParagraphUnitStart(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.ParagraphUnitStart(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler
  isExternal: true
  name: ParagraphUnitStart(IParagraphUnitProperties)
  nameWithType: INativeGenerationContentHandler.ParagraphUnitStart(IParagraphUnitProperties)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.ParagraphUnitStart(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.ParagraphUnitStart(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
    name: ParagraphUnitStart
    nameWithType: INativeGenerationContentHandler.ParagraphUnitStart
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.ParagraphUnitStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
    name: IParagraphUnitProperties
    nameWithType: IParagraphUnitProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.ParagraphUnitStart(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
    name: ParagraphUnitStart
    nameWithType: INativeGenerationContentHandler.ParagraphUnitStart
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.ParagraphUnitStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
    name: IParagraphUnitProperties
    nameWithType: IParagraphUnitProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IParagraphUnitProperties
  nameWithType: IParagraphUnitProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphUnitEnd*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphUnitEnd
  isExternal: true
  name: ParagraphUnitEnd
  nameWithType: NativeBuffer.ParagraphUnitEnd
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ParagraphUnitEnd
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.ParagraphUnitEnd
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.ParagraphUnitEnd
  parent: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler
  isExternal: true
  name: ParagraphUnitEnd()
  nameWithType: INativeGenerationContentHandler.ParagraphUnitEnd()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.ParagraphUnitEnd()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.ParagraphUnitEnd
    name: ParagraphUnitEnd
    nameWithType: INativeGenerationContentHandler.ParagraphUnitEnd
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.ParagraphUnitEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.ParagraphUnitEnd
    name: ParagraphUnitEnd
    nameWithType: INativeGenerationContentHandler.ParagraphUnitEnd
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.ParagraphUnitEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SegmentStart*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SegmentStart
  isExternal: true
  name: SegmentStart
  nameWithType: NativeBuffer.SegmentStart
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SegmentStart
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.SegmentStart(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.SegmentStart(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler
  isExternal: true
  name: SegmentStart(ISegmentPairProperties)
  nameWithType: INativeGenerationContentHandler.SegmentStart(ISegmentPairProperties)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.SegmentStart(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.SegmentStart(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
    name: SegmentStart
    nameWithType: INativeGenerationContentHandler.SegmentStart
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.SegmentStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
    name: ISegmentPairProperties
    nameWithType: ISegmentPairProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.SegmentStart(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
    name: SegmentStart
    nameWithType: INativeGenerationContentHandler.SegmentStart
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.SegmentStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
    name: ISegmentPairProperties
    nameWithType: ISegmentPairProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: ISegmentPairProperties
  nameWithType: ISegmentPairProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SegmentEnd*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SegmentEnd
  isExternal: true
  name: SegmentEnd
  nameWithType: NativeBuffer.SegmentEnd
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.SegmentEnd
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.SegmentEnd
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.SegmentEnd
  parent: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler
  isExternal: true
  name: SegmentEnd()
  nameWithType: INativeGenerationContentHandler.SegmentEnd()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.SegmentEnd()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.SegmentEnd
    name: SegmentEnd
    nameWithType: INativeGenerationContentHandler.SegmentEnd
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.SegmentEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.SegmentEnd
    name: SegmentEnd
    nameWithType: INativeGenerationContentHandler.SegmentEnd
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentHandler.SegmentEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Output*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Output
  isExternal: true
  name: Output
  nameWithType: NativeBuffer.Output
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Output
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ExtractionOutput*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ExtractionOutput
  isExternal: true
  name: ExtractionOutput
  nameWithType: NativeBuffer.ExtractionOutput
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.ExtractionOutput
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.GenerationOutput*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.GenerationOutput
  isExternal: true
  name: GenerationOutput
  nameWithType: NativeBuffer.GenerationOutput
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.GenerationOutput
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.IsEndOfInput*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.IsEndOfInput
  isExternal: true
  name: IsEndOfInput
  nameWithType: NativeBuffer.IsEndOfInput
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.IsEndOfInput
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.BufferedCalls*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.BufferedCalls
  isExternal: true
  name: BufferedCalls
  nameWithType: NativeBuffer.BufferedCalls
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.BufferedCalls
- uid: System.Collections.Generic.List{Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.AbstractContentItem}
  commentId: T:System.Collections.Generic.List{Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.AbstractContentItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<AbstractContentItem>
  nameWithType: List<AbstractContentItem>
  fullName: System.Collections.Generic.List<Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.AbstractContentItem>
  nameWithType.vb: List(Of AbstractContentItem)
  fullName.vb: System.Collections.Generic.List(Of Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.AbstractContentItem)
  name.vb: List(Of AbstractContentItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.AbstractContentItem
    name: AbstractContentItem
    nameWithType: AbstractContentItem
    fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.AbstractContentItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.AbstractContentItem
    name: AbstractContentItem
    nameWithType: AbstractContentItem
    fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.AbstractContentItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LastBufferedCall*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LastBufferedCall
  isExternal: true
  name: LastBufferedCall
  nameWithType: NativeBuffer.LastBufferedCall
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.LastBufferedCall
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.AbstractContentItem
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.AbstractContentItem
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer
  isExternal: true
  name: AbstractContentItem
  nameWithType: AbstractContentItem
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.AbstractContentItem
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.IsHolding*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.IsHolding
  isExternal: true
  name: IsHolding
  nameWithType: NativeBuffer.IsHolding
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.IsHolding
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Sdl#FileTypeSupport#Framework#NativeApi#INativeExtractionContentProcessor#Output*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Sdl#FileTypeSupport#Framework#NativeApi#INativeExtractionContentProcessor#Output
  isExternal: true
  name: INativeExtractionContentProcessor.Output
  nameWithType: NativeBuffer.INativeExtractionContentProcessor.Output
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentProcessor.Output
  nameWithType.vb: NativeBuffer.Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentProcessor.Output
  name.vb: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentProcessor.Output
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentProcessor.Output
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentProcessor.Output
  parent: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentProcessor
  isExternal: true
  name: Output
  nameWithType: INativeExtractionContentProcessor.Output
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractionContentProcessor.Output
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Sdl#FileTypeSupport#Framework#NativeApi#INativeGenerationContentProcessor#Output*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Sdl#FileTypeSupport#Framework#NativeApi#INativeGenerationContentProcessor#Output
  isExternal: true
  name: INativeGenerationContentProcessor.Output
  nameWithType: NativeBuffer.INativeGenerationContentProcessor.Output
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.Buffer.NativeBuffer.Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentProcessor.Output
  nameWithType.vb: NativeBuffer.Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentProcessor.Output
  name.vb: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentProcessor.Output
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentProcessor.Output
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentProcessor.Output
  parent: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentProcessor
  isExternal: true
  name: Output
  nameWithType: INativeGenerationContentProcessor.Output
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerationContentProcessor.Output
