### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator
  id: DependencyFileLocator
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  children:
  - Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.#ctor(System.Object,System.IntPtr)
  - Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.BeginInvoke(Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties,System.AsyncCallback,System.Object)
  - Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.EndInvoke(System.IAsyncResult)
  - Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.Invoke(Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties)
  langs:
  - csharp
  - vb
  name: DependencyFileLocator
  nameWithType: DependencyFileLocator
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator
  type: Delegate
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nUsed by bilingual document parsers. Helps locate missing dependency files.\nThe implementation should try to locate the file based on the provided information.\nIf successful, it returns the actual file path. The implementation may alternatively \nthrow an exception to abort parsing, or return an empty or null string if the file \ncould not be located, but parsing should attempt to proceed anyway.\n"
  syntax:
    content: public delegate string DependencyFileLocator(IDependencyFileProperties missingFileInfo);
    parameters:
    - id: missingFileInfo
      type: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
      description: "Everything that is known about the missing dependency file. \nThe implementation is not expected to change any of these properties, but is not prevented\nfrom doing so."
    return:
      type: System.String
      description: Full path to the located dependency file.
    content.vb: Public Delegate Function DependencyFileLocator(missingFileInfo As IDependencyFileProperties) As String
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.#ctor(System.Object,System.IntPtr)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.#ctor(System.Object,System.IntPtr)
  id: '#ctor(System.Object,System.IntPtr)'
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator
  langs:
  - csharp
  - vb
  name: DependencyFileLocator(Object, IntPtr)
  nameWithType: DependencyFileLocator.DependencyFileLocator(Object, IntPtr)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.DependencyFileLocator(System.Object, System.IntPtr)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  syntax:
    content: public DependencyFileLocator(object object, IntPtr method)
    parameters:
    - id: object
      type: System.Object
    - id: method
      type: System.IntPtr
    content.vb: Public Sub New(object As Object, method As IntPtr)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.Invoke(Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.Invoke(Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties)
  id: Invoke(Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator
  langs:
  - csharp
  - vb
  name: Invoke(IDependencyFileProperties)
  nameWithType: DependencyFileLocator.Invoke(IDependencyFileProperties)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.Invoke(Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  syntax:
    content: public virtual string Invoke(IDependencyFileProperties missingFileInfo)
    parameters:
    - id: missingFileInfo
      type: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
    return:
      type: System.String
    content.vb: Public Overridable Function Invoke(missingFileInfo As IDependencyFileProperties) As String
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.Invoke*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.BeginInvoke(Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties,System.AsyncCallback,System.Object)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.BeginInvoke(Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties,System.AsyncCallback,System.Object)
  id: BeginInvoke(Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties,System.AsyncCallback,System.Object)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator
  langs:
  - csharp
  - vb
  name: BeginInvoke(IDependencyFileProperties, AsyncCallback, Object)
  nameWithType: DependencyFileLocator.BeginInvoke(IDependencyFileProperties, AsyncCallback, Object)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.BeginInvoke(Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties, System.AsyncCallback, System.Object)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  syntax:
    content: public virtual IAsyncResult BeginInvoke(IDependencyFileProperties missingFileInfo, AsyncCallback callback, object object)
    parameters:
    - id: missingFileInfo
      type: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
    - id: callback
      type: System.AsyncCallback
    - id: object
      type: System.Object
    return:
      type: System.IAsyncResult
    content.vb: Public Overridable Function BeginInvoke(missingFileInfo As IDependencyFileProperties, callback As AsyncCallback, object As Object) As IAsyncResult
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.BeginInvoke*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.EndInvoke(System.IAsyncResult)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.EndInvoke(System.IAsyncResult)
  id: EndInvoke(System.IAsyncResult)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator
  langs:
  - csharp
  - vb
  name: EndInvoke(IAsyncResult)
  nameWithType: DependencyFileLocator.EndInvoke(IAsyncResult)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.EndInvoke(System.IAsyncResult)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  syntax:
    content: public virtual string EndInvoke(IAsyncResult result)
    parameters:
    - id: result
      type: System.IAsyncResult
    return:
      type: System.String
    content.vb: Public Overridable Function EndInvoke(result As IAsyncResult) As String
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.EndInvoke*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Sdl.FileTypeSupport.Framework.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IDependencyFileProperties
  nameWithType: IDependencyFileProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.#ctor
  isExternal: true
  name: DependencyFileLocator
  nameWithType: DependencyFileLocator.DependencyFileLocator
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.DependencyFileLocator
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.Invoke*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.Invoke
  isExternal: true
  name: Invoke
  nameWithType: DependencyFileLocator.Invoke
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.Invoke
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.BeginInvoke*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.BeginInvoke
  isExternal: true
  name: BeginInvoke
  nameWithType: DependencyFileLocator.BeginInvoke
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.BeginInvoke
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.EndInvoke*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.EndInvoke
  isExternal: true
  name: EndInvoke
  nameWithType: DependencyFileLocator.EndInvoke
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator.EndInvoke
