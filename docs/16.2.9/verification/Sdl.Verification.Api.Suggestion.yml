### YamlMime:ManagedReference
items:
- uid: Sdl.Verification.Api.Suggestion
  commentId: T:Sdl.Verification.Api.Suggestion
  id: Suggestion
  parent: Sdl.Verification.Api
  children:
  - Sdl.Verification.Api.Suggestion.#ctor(Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation,Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation,Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  - Sdl.Verification.Api.Suggestion.FromLocation
  - Sdl.Verification.Api.Suggestion.SuggestionMarkup
  - Sdl.Verification.Api.Suggestion.UptoLocation
  langs:
  - csharp
  - vb
  name: Suggestion
  nameWithType: Suggestion
  fullName: Sdl.Verification.Api.Suggestion
  type: Class
  source:
    path: Sdl.Verification.Api
    isExternal: true
  assemblies:
  - Sdl.Verification.Api
  namespace: Sdl.Verification.Api
  summary: "\nSuggestion class represents a suggestion that describes a change that can be made to a document\nby replacing the existing markup between the from location and upto location with the suggestion markup. \n"
  syntax:
    content: public class Suggestion
    content.vb: Public Class Suggestion
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Verification.Api.Suggestion.#ctor(Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation,Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation,Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  commentId: M:Sdl.Verification.Api.Suggestion.#ctor(Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation,Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation,Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  id: '#ctor(Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation,Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation,Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)'
  parent: Sdl.Verification.Api.Suggestion
  langs:
  - csharp
  - vb
  name: Suggestion(IMessageLocation, IMessageLocation, IAbstractMarkupData)
  nameWithType: Suggestion.Suggestion(IMessageLocation, IMessageLocation, IAbstractMarkupData)
  fullName: Sdl.Verification.Api.Suggestion.Suggestion(Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation, Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation, Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  type: Constructor
  source:
    path: Sdl.Verification.Api
    isExternal: true
  assemblies:
  - Sdl.Verification.Api
  namespace: Sdl.Verification.Api
  summary: "\nConstructor that takes the from location, upto location, and suggestion markup.\n"
  syntax:
    content: public Suggestion(IMessageLocation fromLocation, IMessageLocation uptoLocation, IAbstractMarkupData suggestionMarkup)
    parameters:
    - id: fromLocation
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation
      description: from location
    - id: uptoLocation
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation
      description: upto location
    - id: suggestionMarkup
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
      description: suggestion markup - set suggestionMarkup to null to suggest deleting the existing markup between the from location and the upto location
    content.vb: Public Sub New(fromLocation As IMessageLocation, uptoLocation As IMessageLocation, suggestionMarkup As IAbstractMarkupData)
  overload: Sdl.Verification.Api.Suggestion.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Verification.Api.Suggestion.FromLocation
  commentId: P:Sdl.Verification.Api.Suggestion.FromLocation
  id: FromLocation
  parent: Sdl.Verification.Api.Suggestion
  langs:
  - csharp
  - vb
  name: FromLocation
  nameWithType: Suggestion.FromLocation
  fullName: Sdl.Verification.Api.Suggestion.FromLocation
  type: Property
  source:
    path: Sdl.Verification.Api
    isExternal: true
  assemblies:
  - Sdl.Verification.Api
  namespace: Sdl.Verification.Api
  summary: "\nFromLocation property represents the &quot;start&quot; location of the existing markup to be replaced.\n"
  syntax:
    content: public IMessageLocation FromLocation { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation
    content.vb: Public ReadOnly Property FromLocation As IMessageLocation
  overload: Sdl.Verification.Api.Suggestion.FromLocation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Verification.Api.Suggestion.UptoLocation
  commentId: P:Sdl.Verification.Api.Suggestion.UptoLocation
  id: UptoLocation
  parent: Sdl.Verification.Api.Suggestion
  langs:
  - csharp
  - vb
  name: UptoLocation
  nameWithType: Suggestion.UptoLocation
  fullName: Sdl.Verification.Api.Suggestion.UptoLocation
  type: Property
  source:
    path: Sdl.Verification.Api
    isExternal: true
  assemblies:
  - Sdl.Verification.Api
  namespace: Sdl.Verification.Api
  summary: "\nUptoLocation property represents the &quot;finish&quot; location of the existing markup to be replaced.\n"
  syntax:
    content: public IMessageLocation UptoLocation { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation
    content.vb: Public ReadOnly Property UptoLocation As IMessageLocation
  overload: Sdl.Verification.Api.Suggestion.UptoLocation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Verification.Api.Suggestion.SuggestionMarkup
  commentId: P:Sdl.Verification.Api.Suggestion.SuggestionMarkup
  id: SuggestionMarkup
  parent: Sdl.Verification.Api.Suggestion
  langs:
  - csharp
  - vb
  name: SuggestionMarkup
  nameWithType: Suggestion.SuggestionMarkup
  fullName: Sdl.Verification.Api.Suggestion.SuggestionMarkup
  type: Property
  source:
    path: Sdl.Verification.Api
    isExternal: true
  assemblies:
  - Sdl.Verification.Api
  namespace: Sdl.Verification.Api
  summary: "\nSuggestionMarkup property represents the suggestion markup to replace the existing markup.\n"
  syntax:
    content: public IAbstractMarkupData SuggestionMarkup { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    content.vb: Public ReadOnly Property SuggestionMarkup As IAbstractMarkupData
  overload: Sdl.Verification.Api.Suggestion.SuggestionMarkup*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.Verification.Api
  commentId: N:Sdl.Verification.Api
  isExternal: true
  name: Sdl.Verification.Api
  nameWithType: Sdl.Verification.Api
  fullName: Sdl.Verification.Api
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Verification.Api.Suggestion.#ctor*
  commentId: Overload:Sdl.Verification.Api.Suggestion.#ctor
  isExternal: true
  name: Suggestion
  nameWithType: Suggestion.Suggestion
  fullName: Sdl.Verification.Api.Suggestion.Suggestion
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation
  isExternal: true
  name: IMessageLocation
  nameWithType: IMessageLocation
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
  isExternal: true
  name: IAbstractMarkupData
  nameWithType: IAbstractMarkupData
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
- uid: Sdl.Verification.Api.Suggestion.FromLocation*
  commentId: Overload:Sdl.Verification.Api.Suggestion.FromLocation
  isExternal: true
  name: FromLocation
  nameWithType: Suggestion.FromLocation
  fullName: Sdl.Verification.Api.Suggestion.FromLocation
- uid: Sdl.Verification.Api.Suggestion.UptoLocation*
  commentId: Overload:Sdl.Verification.Api.Suggestion.UptoLocation
  isExternal: true
  name: UptoLocation
  nameWithType: Suggestion.UptoLocation
  fullName: Sdl.Verification.Api.Suggestion.UptoLocation
- uid: Sdl.Verification.Api.Suggestion.SuggestionMarkup*
  commentId: Overload:Sdl.Verification.Api.Suggestion.SuggestionMarkup
  isExternal: true
  name: SuggestionMarkup
  nameWithType: Suggestion.SuggestionMarkup
  fullName: Sdl.Verification.Api.Suggestion.SuggestionMarkup
