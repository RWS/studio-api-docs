### YamlMime:ManagedReference
items:
- uid: Sdl.Verification.Api.ITermVerifierContext
  commentId: T:Sdl.Verification.Api.ITermVerifierContext
  id: ITermVerifierContext
  parent: Sdl.Verification.Api
  children:
  - Sdl.Verification.Api.ITermVerifierContext.CreateTermRecognitionEngine(System.Globalization.CultureInfo,System.Globalization.CultureInfo,System.Int32)
  - Sdl.Verification.Api.ITermVerifierContext.GetTermbaseIndexName(System.String)
  - Sdl.Verification.Api.ITermVerifierContext.HasTermbase
  langs:
  - csharp
  - vb
  name: ITermVerifierContext
  nameWithType: ITermVerifierContext
  fullName: Sdl.Verification.Api.ITermVerifierContext
  type: Interface
  source:
    path: Sdl.Verification.Api
    isExternal: true
  assemblies:
  - Sdl.Verification.Api
  namespace: Sdl.Verification.Api
  summary: "\nITermVerifierContext interface represents a term verifier context that provides \na term verifier with the term access services that it needs.\n"
  syntax:
    content: public interface ITermVerifierContext
    content.vb: Public Interface ITermVerifierContext
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Verification.Api.ITermVerifierContext.CreateTermRecognitionEngine(System.Globalization.CultureInfo,System.Globalization.CultureInfo,System.Int32)
  commentId: M:Sdl.Verification.Api.ITermVerifierContext.CreateTermRecognitionEngine(System.Globalization.CultureInfo,System.Globalization.CultureInfo,System.Int32)
  id: CreateTermRecognitionEngine(System.Globalization.CultureInfo,System.Globalization.CultureInfo,System.Int32)
  parent: Sdl.Verification.Api.ITermVerifierContext
  langs:
  - csharp
  - vb
  name: CreateTermRecognitionEngine(CultureInfo, CultureInfo, Int32)
  nameWithType: ITermVerifierContext.CreateTermRecognitionEngine(CultureInfo, CultureInfo, Int32)
  fullName: Sdl.Verification.Api.ITermVerifierContext.CreateTermRecognitionEngine(System.Globalization.CultureInfo, System.Globalization.CultureInfo, System.Int32)
  type: Method
  source:
    path: Sdl.Verification.Api
    isExternal: true
  assemblies:
  - Sdl.Verification.Api
  namespace: Sdl.Verification.Api
  summary: "\nCreate the term recognition engine for the given source and target cultures.\n"
  syntax:
    content: ITerminologySearch CreateTermRecognitionEngine(CultureInfo source, CultureInfo target, int minMatch)
    parameters:
    - id: source
      type: System.Globalization.CultureInfo
      description: source culture
    - id: target
      type: System.Globalization.CultureInfo
      description: target culture
    - id: minMatch
      type: System.Int32
      description: minimum match
    return:
      type: Sdl.TranslationStudio.Terminology.Search.ITerminologySearch
      description: term recognition engine
    content.vb: Function CreateTermRecognitionEngine(source As CultureInfo, target As CultureInfo, minMatch As Integer) As ITerminologySearch
  overload: Sdl.Verification.Api.ITermVerifierContext.CreateTermRecognitionEngine*
- uid: Sdl.Verification.Api.ITermVerifierContext.GetTermbaseIndexName(System.String)
  commentId: M:Sdl.Verification.Api.ITermVerifierContext.GetTermbaseIndexName(System.String)
  id: GetTermbaseIndexName(System.String)
  parent: Sdl.Verification.Api.ITermVerifierContext
  langs:
  - csharp
  - vb
  name: GetTermbaseIndexName(String)
  nameWithType: ITermVerifierContext.GetTermbaseIndexName(String)
  fullName: Sdl.Verification.Api.ITermVerifierContext.GetTermbaseIndexName(System.String)
  type: Method
  source:
    path: Sdl.Verification.Api
    isExternal: true
  assemblies:
  - Sdl.Verification.Api
  namespace: Sdl.Verification.Api
  summary: "\nGets the termbase index name for the given culture name.\n"
  syntax:
    content: string GetTermbaseIndexName(string cultureName)
    parameters:
    - id: cultureName
      type: System.String
      description: culture name
    return:
      type: System.String
      description: termbase index name
    content.vb: Function GetTermbaseIndexName(cultureName As String) As String
  overload: Sdl.Verification.Api.ITermVerifierContext.GetTermbaseIndexName*
- uid: Sdl.Verification.Api.ITermVerifierContext.HasTermbase
  commentId: P:Sdl.Verification.Api.ITermVerifierContext.HasTermbase
  id: HasTermbase
  parent: Sdl.Verification.Api.ITermVerifierContext
  langs:
  - csharp
  - vb
  name: HasTermbase
  nameWithType: ITermVerifierContext.HasTermbase
  fullName: Sdl.Verification.Api.ITermVerifierContext.HasTermbase
  type: Property
  source:
    path: Sdl.Verification.Api
    isExternal: true
  assemblies:
  - Sdl.Verification.Api
  namespace: Sdl.Verification.Api
  summary: "\nGets a boolean informing if this context has a termbase\n"
  syntax:
    content: bool HasTermbase { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property HasTermbase As Boolean
  overload: Sdl.Verification.Api.ITermVerifierContext.HasTermbase*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.Verification.Api
  commentId: N:Sdl.Verification.Api
  isExternal: true
  name: Sdl.Verification.Api
  nameWithType: Sdl.Verification.Api
  fullName: Sdl.Verification.Api
- uid: Sdl.Verification.Api.ITermVerifierContext.CreateTermRecognitionEngine*
  commentId: Overload:Sdl.Verification.Api.ITermVerifierContext.CreateTermRecognitionEngine
  isExternal: true
  name: CreateTermRecognitionEngine
  nameWithType: ITermVerifierContext.CreateTermRecognitionEngine
  fullName: Sdl.Verification.Api.ITermVerifierContext.CreateTermRecognitionEngine
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.TranslationStudio.Terminology.Search.ITerminologySearch
  commentId: '!:Sdl.TranslationStudio.Terminology.Search.ITerminologySearch'
  isExternal: true
  name: ITerminologySearch
  nameWithType: ITerminologySearch
  fullName: Sdl.TranslationStudio.Terminology.Search.ITerminologySearch
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Verification.Api.ITermVerifierContext.GetTermbaseIndexName*
  commentId: Overload:Sdl.Verification.Api.ITermVerifierContext.GetTermbaseIndexName
  isExternal: true
  name: GetTermbaseIndexName
  nameWithType: ITermVerifierContext.GetTermbaseIndexName
  fullName: Sdl.Verification.Api.ITermVerifierContext.GetTermbaseIndexName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Verification.Api.ITermVerifierContext.HasTermbase*
  commentId: Overload:Sdl.Verification.Api.ITermVerifierContext.HasTermbase
  isExternal: true
  name: HasTermbase
  nameWithType: ITermVerifierContext.HasTermbase
  fullName: Sdl.Verification.Api.ITermVerifierContext.HasTermbase
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
