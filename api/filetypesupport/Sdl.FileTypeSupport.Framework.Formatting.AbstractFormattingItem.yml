### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem
  commentId: T:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem
  id: AbstractFormattingItem
  parent: Sdl.FileTypeSupport.Framework.Formatting
  children:
  - Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.#ctor
  - Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.AcceptVisitor(Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor)
  - Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.Clone
  - Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.Equals(System.Object)
  - Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.FormattingName
  - Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.GetDefaultName(System.Reflection.MemberInfo)
  - Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.GetHashCode
  - Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.LocalizedFormattingName
  - Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.LocalizedStringValue
  - Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.StringValue
  - Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.ToString
  langs:
  - csharp
  - vb
  name: AbstractFormattingItem
  nameWithType: AbstractFormattingItem
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nAbstract base class for formatting items; provides a default implementation\nof the <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem\" data-throw-if-not-resolved=\"false\"></xref> interface, implements <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.GetHashCode\" data-throw-if-not-resolved=\"false\"></xref> using the <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.FormattingName\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.StringValue\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: 'public abstract class AbstractFormattingItem : IFormattingItem, ICloneable'
    content.vb: >-
      Public MustInherit Class AbstractFormattingItem
          Implements IFormattingItem, ICloneable
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.FileTypeSupport.Framework.Formatting.AbstractBooleanFormatting
  - Sdl.FileTypeSupport.Framework.Formatting.BackgroundColor
  - Sdl.FileTypeSupport.Framework.Formatting.FontName
  - Sdl.FileTypeSupport.Framework.Formatting.FontSize
  - Sdl.FileTypeSupport.Framework.Formatting.TextColor
  - Sdl.FileTypeSupport.Framework.Formatting.TextDirection
  - Sdl.FileTypeSupport.Framework.Formatting.TextPosition
  - Sdl.FileTypeSupport.Framework.Formatting.UnknownFormatting
  implements:
  - Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  - System.ICloneable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.GetDefaultName(System.Reflection.MemberInfo)
  commentId: M:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.GetDefaultName(System.Reflection.MemberInfo)
  id: GetDefaultName(System.Reflection.MemberInfo)
  parent: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem
  langs:
  - csharp
  - vb
  name: GetDefaultName(MemberInfo)
  nameWithType: AbstractFormattingItem.GetDefaultName(MemberInfo)
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.GetDefaultName(System.Reflection.MemberInfo)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nThe default name for an IFormattingItem type\n"
  syntax:
    content: protected static string GetDefaultName(MemberInfo type)
    parameters:
    - id: type
      type: System.Reflection.MemberInfo
    return:
      type: System.String
    content.vb: Protected Shared Function GetDefaultName(type As MemberInfo) As String
  overload: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.GetDefaultName*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.AcceptVisitor(Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor)
  commentId: M:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.AcceptVisitor(Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor)
  id: AcceptVisitor(Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor)
  parent: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem
  langs:
  - csharp
  - vb
  name: AcceptVisitor(IFormattingVisitor)
  nameWithType: AbstractFormattingItem.AcceptVisitor(IFormattingVisitor)
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.AcceptVisitor(Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nImplementation of the visitor pattern.\n<p>Derived formatting classes should implement this by calling into\nthe appropriate method on the visitor.</p>\n"
  syntax:
    content: public abstract void AcceptVisitor(IFormattingVisitor visitor)
    parameters:
    - id: visitor
      type: Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor
    content.vb: Public MustOverride Sub AcceptVisitor(visitor As IFormattingVisitor)
  overload: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.AcceptVisitor*
  implements:
  - Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.AcceptVisitor(Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.Equals(System.Object)
  commentId: M:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: AbstractFormattingItem.Equals(Object)
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.Equals(System.Object)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: Compares the name and value properties of the objects.
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with the current <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: True if the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to the current <xref href="System.Object" data-throw-if-not-resolved="false"></xref>, otherwise false.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.GetHashCode
  commentId: M:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.GetHashCode
  id: GetHashCode
  parent: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: AbstractFormattingItem.GetHashCode()
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.GetHashCode()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.ToString
  commentId: M:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.ToString
  id: ToString
  parent: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AbstractFormattingItem.ToString()
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.ToString()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nFor debugging; returns &quot;FormattingName = StringValue&quot;.\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.Clone
  commentId: M:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.Clone
  id: Clone
  parent: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: AbstractFormattingItem.Clone()
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.Clone()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nMust be overridden in all directly and indirectly derived classes to return\nobjects of the correct type.\n"
  syntax:
    content: public abstract object Clone()
    return:
      type: System.Object
      description: A clone of this object
    content.vb: Public MustOverride Function Clone As Object
  overload: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem
  langs:
  - csharp
  - vb
  name: AbstractFormattingItem()
  nameWithType: AbstractFormattingItem.AbstractFormattingItem()
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.AbstractFormattingItem()
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  syntax:
    content: protected AbstractFormattingItem()
    content.vb: Protected Sub New
  overload: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.FormattingName
  commentId: P:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.FormattingName
  id: FormattingName
  parent: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem
  langs:
  - csharp
  - vb
  name: FormattingName
  nameWithType: AbstractFormattingItem.FormattingName
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.FormattingName
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nThe name of this type of formatting.\nThe default implementation returns the type name of the actual class,\nbut this can be overridden in derived classes.\n\n<p>The name may be used as an attribute name when storing this\nformatting in XML format, in which case the value of the attribute\nrepresents the StringValue property.</p>\n"
  syntax:
    content: public virtual string FormattingName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property FormattingName As String
  overload: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.FormattingName*
  implements:
  - Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.FormattingName
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.LocalizedFormattingName
  commentId: P:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.LocalizedFormattingName
  id: LocalizedFormattingName
  parent: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem
  langs:
  - csharp
  - vb
  name: LocalizedFormattingName
  nameWithType: AbstractFormattingItem.LocalizedFormattingName
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.LocalizedFormattingName
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nA localized representation of the formatting name; the default implementation\nreturns <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.FormattingName\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public virtual string LocalizedFormattingName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property LocalizedFormattingName As String
  overload: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.LocalizedFormattingName*
  implements:
  - Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedFormattingName
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.StringValue
  commentId: P:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.StringValue
  id: StringValue
  parent: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem
  langs:
  - csharp
  - vb
  name: StringValue
  nameWithType: AbstractFormattingItem.StringValue
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.StringValue
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nThe value this formatting represents as a string.\n\nDerived formatting classes should allow their entire value to be\nretrieved and set through this property.\n\n<p>The name and string value may be used for storing formatting as\nan XML attribute with a value.</p>\n"
  syntax:
    content: public abstract string StringValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride Property StringValue As String
  overload: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.StringValue*
  implements:
  - Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.StringValue
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.LocalizedStringValue
  commentId: P:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.LocalizedStringValue
  id: LocalizedStringValue
  parent: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem
  langs:
  - csharp
  - vb
  name: LocalizedStringValue
  nameWithType: AbstractFormattingItem.LocalizedStringValue
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.LocalizedStringValue
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nA localized representation of the formatting value. The default implementation\nreturns <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.StringValue\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public virtual string LocalizedStringValue { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property LocalizedStringValue As String
  overload: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.LocalizedStringValue*
  implements:
  - Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedStringValue
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.Formatting
  commentId: N:Sdl.FileTypeSupport.Framework.Formatting
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Formatting
  nameWithType: Sdl.FileTypeSupport.Framework.Formatting
  fullName: Sdl.FileTypeSupport.Framework.Formatting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  commentId: T:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  parent: Sdl.FileTypeSupport.Framework.Formatting
  isExternal: true
  name: IFormattingItem
  nameWithType: IFormattingItem
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.GetDefaultName*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.GetDefaultName
  isExternal: true
  name: GetDefaultName
  nameWithType: AbstractFormattingItem.GetDefaultName
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.GetDefaultName
- uid: System.Reflection.MemberInfo
  commentId: T:System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.AcceptVisitor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.AcceptVisitor
  isExternal: true
  name: AcceptVisitor
  nameWithType: AbstractFormattingItem.AcceptVisitor
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.AcceptVisitor
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.AcceptVisitor(Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor)
  commentId: M:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.AcceptVisitor(Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor)
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  isExternal: true
  name: AcceptVisitor(IFormattingVisitor)
  nameWithType: IFormattingItem.AcceptVisitor(IFormattingVisitor)
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.AcceptVisitor(Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.AcceptVisitor(Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor)
    name: AcceptVisitor
    nameWithType: IFormattingItem.AcceptVisitor
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.AcceptVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor
    name: IFormattingVisitor
    nameWithType: IFormattingVisitor
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.AcceptVisitor(Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor)
    name: AcceptVisitor
    nameWithType: IFormattingItem.AcceptVisitor
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.AcceptVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor
    name: IFormattingVisitor
    nameWithType: IFormattingVisitor
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor
  commentId: T:Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor
  parent: Sdl.FileTypeSupport.Framework.Formatting
  isExternal: true
  name: IFormattingVisitor
  nameWithType: IFormattingVisitor
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingVisitor
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.Equals*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.Equals
  isExternal: true
  name: Equals
  nameWithType: AbstractFormattingItem.Equals
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.GetHashCode*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: AbstractFormattingItem.GetHashCode
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.ToString*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.ToString
  isExternal: true
  name: ToString
  nameWithType: AbstractFormattingItem.ToString
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.ToString
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.Clone*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.Clone
  isExternal: true
  name: Clone
  nameWithType: AbstractFormattingItem.Clone
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.#ctor
  isExternal: true
  name: AbstractFormattingItem
  nameWithType: AbstractFormattingItem.AbstractFormattingItem
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.AbstractFormattingItem
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.FormattingName*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.FormattingName
  isExternal: true
  name: FormattingName
  nameWithType: AbstractFormattingItem.FormattingName
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.FormattingName
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.FormattingName
  commentId: P:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.FormattingName
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  isExternal: true
  name: FormattingName
  nameWithType: IFormattingItem.FormattingName
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.FormattingName
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.LocalizedFormattingName*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.LocalizedFormattingName
  isExternal: true
  name: LocalizedFormattingName
  nameWithType: AbstractFormattingItem.LocalizedFormattingName
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.LocalizedFormattingName
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedFormattingName
  commentId: P:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedFormattingName
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  isExternal: true
  name: LocalizedFormattingName
  nameWithType: IFormattingItem.LocalizedFormattingName
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedFormattingName
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.StringValue*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.StringValue
  isExternal: true
  name: StringValue
  nameWithType: AbstractFormattingItem.StringValue
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.StringValue
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.StringValue
  commentId: P:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.StringValue
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  isExternal: true
  name: StringValue
  nameWithType: IFormattingItem.StringValue
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.StringValue
- uid: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.LocalizedStringValue*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.LocalizedStringValue
  isExternal: true
  name: LocalizedStringValue
  nameWithType: AbstractFormattingItem.LocalizedStringValue
  fullName: Sdl.FileTypeSupport.Framework.Formatting.AbstractFormattingItem.LocalizedStringValue
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedStringValue
  commentId: P:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedStringValue
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  isExternal: true
  name: LocalizedStringValue
  nameWithType: IFormattingItem.LocalizedStringValue
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.LocalizedStringValue
