### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor
  id: IValueProcessor
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  children:
  - Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass,Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass,System.Boolean)
  - Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.Boolean,System.Boolean)
  - Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  - Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.Collections.Generic.IReadOnlyList{Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass},System.Collections.Generic.IReadOnlyList{Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass})
  - Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  - Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.Int32,System.Int32)
  - Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: IValueProcessor
  nameWithType: IValueProcessor
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  syntax:
    content: public interface IValueProcessor
    content.vb: Public Interface IValueProcessor
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.Int32,System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.Int32,System.Int32)
  id: Process(System.String,System.Int32,System.Int32)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor
  langs:
  - csharp
  - vb
  name: Process(String, Int32, Int32)
  nameWithType: IValueProcessor.Process(String, Int32, Int32)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String, System.Int32, System.Int32)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  syntax:
    content: void Process(string key, int value, int defaultValue)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Int32
    - id: defaultValue
      type: System.Int32
    content.vb: Sub Process(key As String, value As Integer, defaultValue As Integer)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process*
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.String,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.String,System.String)
  id: Process(System.String,System.String,System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor
  langs:
  - csharp
  - vb
  name: Process(String, String, String)
  nameWithType: IValueProcessor.Process(String, String, String)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String, System.String, System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  syntax:
    content: void Process(string key, string value, string defaultValue)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.String
    - id: defaultValue
      type: System.String
    content.vb: Sub Process(key As String, value As String, defaultValue As String)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process*
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.Boolean,System.Boolean)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.Boolean,System.Boolean)
  id: Process(System.String,System.Boolean,System.Boolean)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor
  langs:
  - csharp
  - vb
  name: Process(String, Boolean, Boolean)
  nameWithType: IValueProcessor.Process(String, Boolean, Boolean)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  syntax:
    content: void Process(string key, bool value, bool defaultValue)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Boolean
    - id: defaultValue
      type: System.Boolean
    content.vb: Sub Process(key As String, value As Boolean, defaultValue As Boolean)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process*
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass,Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass,System.Boolean)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass,Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass,System.Boolean)
  id: Process(System.String,Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass,Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass,System.Boolean)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor
  langs:
  - csharp
  - vb
  name: Process(String, ISettingsClass, ISettingsClass, Boolean)
  nameWithType: IValueProcessor.Process(String, ISettingsClass, ISettingsClass, Boolean)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String, Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass, Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass, System.Boolean)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  syntax:
    content: void Process(string key, ISettingsClass value, ISettingsClass defaultValue, bool discardKey)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass
    - id: defaultValue
      type: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass
    - id: discardKey
      type: System.Boolean
    content.vb: Sub Process(key As String, value As ISettingsClass, defaultValue As ISettingsClass, discardKey As Boolean)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process*
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  id: Process(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor
  langs:
  - csharp
  - vb
  name: Process(String, List<String>, List<String>)
  nameWithType: IValueProcessor.Process(String, List<String>, List<String>)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String, System.Collections.Generic.List<System.String>, System.Collections.Generic.List<System.String>)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  syntax:
    content: void Process(string key, List<string> value, List<string> defaultValue)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Collections.Generic.List{System.String}
    - id: defaultValue
      type: System.Collections.Generic.List{System.String}
    content.vb: Sub Process(key As String, value As List(Of String), defaultValue As List(Of String))
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process*
  nameWithType.vb: IValueProcessor.Process(String, List(Of String), List(Of String))
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String, System.Collections.Generic.List(Of System.String), System.Collections.Generic.List(Of System.String))
  name.vb: Process(String, List(Of String), List(Of String))
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  id: Process(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor
  langs:
  - csharp
  - vb
  name: Process(String, IReadOnlyDictionary<String, String>, IReadOnlyDictionary<String, String>)
  nameWithType: IValueProcessor.Process(String, IReadOnlyDictionary<String, String>, IReadOnlyDictionary<String, String>)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String, System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>, System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  syntax:
    content: void Process(string key, IReadOnlyDictionary<string, string> value, IReadOnlyDictionary<string, string> defaultValues)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
    - id: defaultValues
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
    content.vb: Sub Process(key As String, value As IReadOnlyDictionary(Of String, String), defaultValues As IReadOnlyDictionary(Of String, String))
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process*
  nameWithType.vb: IValueProcessor.Process(String, IReadOnlyDictionary(Of String, String), IReadOnlyDictionary(Of String, String))
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.String), System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.String))
  name.vb: Process(String, IReadOnlyDictionary(Of String, String), IReadOnlyDictionary(Of String, String))
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.Collections.Generic.IReadOnlyList{Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass},System.Collections.Generic.IReadOnlyList{Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass})
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String,System.Collections.Generic.IReadOnlyList{Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass},System.Collections.Generic.IReadOnlyList{Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass})
  id: Process(System.String,System.Collections.Generic.IReadOnlyList{Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass},System.Collections.Generic.IReadOnlyList{Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass})
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor
  langs:
  - csharp
  - vb
  name: Process(String, IReadOnlyList<ISettingsClass>, IReadOnlyList<ISettingsClass>)
  nameWithType: IValueProcessor.Process(String, IReadOnlyList<ISettingsClass>, IReadOnlyList<ISettingsClass>)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String, System.Collections.Generic.IReadOnlyList<Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass>, System.Collections.Generic.IReadOnlyList<Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass>)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  syntax:
    content: void Process(string key, IReadOnlyList<ISettingsClass> value, IReadOnlyList<ISettingsClass> defaultValue)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Collections.Generic.IReadOnlyList{Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass}
    - id: defaultValue
      type: System.Collections.Generic.IReadOnlyList{Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass}
    content.vb: Sub Process(key As String, value As IReadOnlyList(Of ISettingsClass), defaultValue As IReadOnlyList(Of ISettingsClass))
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process*
  nameWithType.vb: IValueProcessor.Process(String, IReadOnlyList(Of ISettingsClass), IReadOnlyList(Of ISettingsClass))
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process(System.String, System.Collections.Generic.IReadOnlyList(Of Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass), System.Collections.Generic.IReadOnlyList(Of Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass))
  name.vb: Process(String, IReadOnlyList(Of ISettingsClass), IReadOnlyList(Of ISettingsClass))
references:
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process
  isExternal: true
  name: Process
  nameWithType: IValueProcessor.Process
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueProcessor.Process
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  isExternal: true
  name: ISettingsClass
  nameWithType: ISettingsClass
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, String>
  nameWithType: IReadOnlyDictionary<String, String>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>
  nameWithType.vb: IReadOnlyDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.String)
  name.vb: IReadOnlyDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass}
  commentId: T:System.Collections.Generic.IReadOnlyList{Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ISettingsClass>
  nameWithType: IReadOnlyList<ISettingsClass>
  fullName: System.Collections.Generic.IReadOnlyList<Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass>
  nameWithType.vb: IReadOnlyList(Of ISettingsClass)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass)
  name.vb: IReadOnlyList(Of ISettingsClass)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass
    name: ISettingsClass
    nameWithType: ISettingsClass
    fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass
    name: ISettingsClass
    nameWithType: ISettingsClass
    fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.ISettingsClass
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
