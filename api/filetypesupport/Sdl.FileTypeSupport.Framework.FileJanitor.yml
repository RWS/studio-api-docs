### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.FileJanitor
  commentId: T:Sdl.FileTypeSupport.Framework.FileJanitor
  id: FileJanitor
  parent: Sdl.FileTypeSupport.Framework
  children:
  - Sdl.FileTypeSupport.Framework.FileJanitor.#ctor(System.String)
  - Sdl.FileTypeSupport.Framework.FileJanitor.CancelDelete
  - Sdl.FileTypeSupport.Framework.FileJanitor.DeleteDirectoryIfEmpty
  - Sdl.FileTypeSupport.Framework.FileJanitor.DeleteFile
  - Sdl.FileTypeSupport.Framework.FileJanitor.Deleted
  - Sdl.FileTypeSupport.Framework.FileJanitor.Dispose
  - Sdl.FileTypeSupport.Framework.FileJanitor.Dispose(System.Boolean)
  - Sdl.FileTypeSupport.Framework.FileJanitor.FilePath
  - Sdl.FileTypeSupport.Framework.FileJanitor.Finalize
  langs:
  - csharp
  - vb
  name: FileJanitor
  nameWithType: FileJanitor
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor
  type: Class
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: Deletes the associated file when this object is finalized or disposed.
  remarks: >-
    <p>

    Provides a convenient way to manage session-scope temporary files. Make sure that

    all objects needing access to the file holds a reference to the corresponding FileJanitor object.

    When the file janitor is garbage collected or disposed the file is deleted.

    </p>

    <p>

    The class also implements <code>IDisposable</code> interface. The

    file is deleted in the <code>Dispose()</code> implementation.

    </p>

    <p>

    If the file for some reason cannot be deleted no error is raised.

    </p>

    <p>

    Note that the .NET Framework does not guarantee that finalizers will be called,

    so there is always a possibility that the file does not get deleted.

    </p>
  example: []
  syntax:
    content: 'public class FileJanitor : IDisposable'
    content.vb: Public Class FileJanitor Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.#ctor(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.FileJanitor.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.FileTypeSupport.Framework.FileJanitor
  langs:
  - csharp
  - vb
  name: FileJanitor(string)
  nameWithType: FileJanitor.FileJanitor(string)
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.FileJanitor(string)
  type: Constructor
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: Associates the janitor with the specified file.
  example: []
  syntax:
    content: public FileJanitor(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: ''
    content.vb: Public Sub New(filePath As String)
  overload: Sdl.FileTypeSupport.Framework.FileJanitor.#ctor*
  nameWithType.vb: FileJanitor.New(String)
  fullName.vb: Sdl.FileTypeSupport.Framework.FileJanitor.New(String)
  name.vb: New(String)
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.Finalize
  commentId: M:Sdl.FileTypeSupport.Framework.FileJanitor.Finalize
  id: Finalize
  parent: Sdl.FileTypeSupport.Framework.FileJanitor
  langs:
  - csharp
  - vb
  name: ~FileJanitor()
  nameWithType: FileJanitor.~FileJanitor()
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.~FileJanitor()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: Deletes the file, if possible.
  example: []
  syntax:
    content: protected ~FileJanitor()
    content.vb: 'Protected '
  overload: Sdl.FileTypeSupport.Framework.FileJanitor.Finalize*
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.Dispose(System.Boolean)
  commentId: M:Sdl.FileTypeSupport.Framework.FileJanitor.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Sdl.FileTypeSupport.Framework.FileJanitor
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: FileJanitor.Dispose(bool)
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.Dispose(bool)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: Implementation of the recommended dispose protocol. Deletes the file if possible.
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true if this method is called from IDisposable.Dispose() and false if called from Finalizer
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Sdl.FileTypeSupport.Framework.FileJanitor.Dispose*
  nameWithType.vb: FileJanitor.Dispose(Boolean)
  fullName.vb: Sdl.FileTypeSupport.Framework.FileJanitor.Dispose(Boolean)
  name.vb: Dispose(Boolean)
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.DeleteFile
  commentId: M:Sdl.FileTypeSupport.Framework.FileJanitor.DeleteFile
  id: DeleteFile
  parent: Sdl.FileTypeSupport.Framework.FileJanitor
  langs:
  - csharp
  - vb
  name: DeleteFile()
  nameWithType: FileJanitor.DeleteFile()
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.DeleteFile()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: Delete the file, if possible. Also deletes the directory if it is empty and <xref href="Sdl.FileTypeSupport.Framework.FileJanitor.DeleteDirectoryIfEmpty" data-throw-if-not-resolved="false"></xref> is true.
  example: []
  syntax:
    content: public virtual void DeleteFile()
    content.vb: Public Overridable Sub DeleteFile()
  overload: Sdl.FileTypeSupport.Framework.FileJanitor.DeleteFile*
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.Dispose
  commentId: M:Sdl.FileTypeSupport.Framework.FileJanitor.Dispose
  id: Dispose
  parent: Sdl.FileTypeSupport.Framework.FileJanitor
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: FileJanitor.Dispose()
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.Dispose()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: Deletes the file, if it exists.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Sdl.FileTypeSupport.Framework.FileJanitor.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.FilePath
  commentId: P:Sdl.FileTypeSupport.Framework.FileJanitor.FilePath
  id: FilePath
  parent: Sdl.FileTypeSupport.Framework.FileJanitor
  langs:
  - csharp
  - vb
  name: FilePath
  nameWithType: FileJanitor.FilePath
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.FilePath
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: Full path to the file to be deleted.
  example: []
  syntax:
    content: public string FilePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FilePath As String
  overload: Sdl.FileTypeSupport.Framework.FileJanitor.FilePath*
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.DeleteDirectoryIfEmpty
  commentId: P:Sdl.FileTypeSupport.Framework.FileJanitor.DeleteDirectoryIfEmpty
  id: DeleteDirectoryIfEmpty
  parent: Sdl.FileTypeSupport.Framework.FileJanitor
  langs:
  - csharp
  - vb
  name: DeleteDirectoryIfEmpty
  nameWithType: FileJanitor.DeleteDirectoryIfEmpty
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.DeleteDirectoryIfEmpty
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: >-
    If <code>true</code> a check will be made after the file

    has been deleted, and if no other files exist in the

    same directory that directory will also be deleted.
  example: []
  syntax:
    content: public bool DeleteDirectoryIfEmpty { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DeleteDirectoryIfEmpty As Boolean
  overload: Sdl.FileTypeSupport.Framework.FileJanitor.DeleteDirectoryIfEmpty*
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.CancelDelete
  commentId: P:Sdl.FileTypeSupport.Framework.FileJanitor.CancelDelete
  id: CancelDelete
  parent: Sdl.FileTypeSupport.Framework.FileJanitor
  langs:
  - csharp
  - vb
  name: CancelDelete
  nameWithType: FileJanitor.CancelDelete
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.CancelDelete
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: If <code>true</code> then this Janitored file is not deleted when this instance is disposed.
  example: []
  syntax:
    content: public bool CancelDelete { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CancelDelete As Boolean
  overload: Sdl.FileTypeSupport.Framework.FileJanitor.CancelDelete*
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.Deleted
  commentId: P:Sdl.FileTypeSupport.Framework.FileJanitor.Deleted
  id: Deleted
  parent: Sdl.FileTypeSupport.Framework.FileJanitor
  langs:
  - csharp
  - vb
  name: Deleted
  nameWithType: FileJanitor.Deleted
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.Deleted
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: If <code>true</code> then this managed file was sucessfully deleted.
  example: []
  syntax:
    content: public bool Deleted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Deleted As Boolean
  overload: Sdl.FileTypeSupport.Framework.FileJanitor.Deleted*
references:
- uid: Sdl.FileTypeSupport.Framework
  commentId: N:Sdl.FileTypeSupport.Framework
  isExternal: true
  href: Sdl.html
  name: Sdl.FileTypeSupport.Framework
  nameWithType: Sdl.FileTypeSupport.Framework
  fullName: Sdl.FileTypeSupport.Framework
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.FileJanitor.#ctor
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.FileJanitor.html#Sdl_FileTypeSupport_Framework_FileJanitor__ctor_System_String_
  name: FileJanitor
  nameWithType: FileJanitor.FileJanitor
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.FileJanitor
  nameWithType.vb: FileJanitor.New
  fullName.vb: Sdl.FileTypeSupport.Framework.FileJanitor.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.Finalize*
  commentId: Overload:Sdl.FileTypeSupport.Framework.FileJanitor.Finalize
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.FileJanitor.html#Sdl_FileTypeSupport_Framework_FileJanitor_Finalize
  name: ~FileJanitor
  nameWithType: FileJanitor.~FileJanitor
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.~FileJanitor
  spec.csharp:
  - name: "~"
  - uid: Sdl.FileTypeSupport.Framework.FileJanitor.Finalize*
    name: FileJanitor
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.FileJanitor.html#Sdl_FileTypeSupport_Framework_FileJanitor_Finalize
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.Dispose*
  commentId: Overload:Sdl.FileTypeSupport.Framework.FileJanitor.Dispose
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.FileJanitor.html#Sdl_FileTypeSupport_Framework_FileJanitor_Dispose_System_Boolean_
  name: Dispose
  nameWithType: FileJanitor.Dispose
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.DeleteDirectoryIfEmpty
  commentId: P:Sdl.FileTypeSupport.Framework.FileJanitor.DeleteDirectoryIfEmpty
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.FileJanitor.html#Sdl_FileTypeSupport_Framework_FileJanitor_DeleteDirectoryIfEmpty
  name: DeleteDirectoryIfEmpty
  nameWithType: FileJanitor.DeleteDirectoryIfEmpty
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.DeleteDirectoryIfEmpty
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.DeleteFile*
  commentId: Overload:Sdl.FileTypeSupport.Framework.FileJanitor.DeleteFile
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.FileJanitor.html#Sdl_FileTypeSupport_Framework_FileJanitor_DeleteFile
  name: DeleteFile
  nameWithType: FileJanitor.DeleteFile
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.DeleteFile
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.FilePath*
  commentId: Overload:Sdl.FileTypeSupport.Framework.FileJanitor.FilePath
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.FileJanitor.html#Sdl_FileTypeSupport_Framework_FileJanitor_FilePath
  name: FilePath
  nameWithType: FileJanitor.FilePath
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.FilePath
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.DeleteDirectoryIfEmpty*
  commentId: Overload:Sdl.FileTypeSupport.Framework.FileJanitor.DeleteDirectoryIfEmpty
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.FileJanitor.html#Sdl_FileTypeSupport_Framework_FileJanitor_DeleteDirectoryIfEmpty
  name: DeleteDirectoryIfEmpty
  nameWithType: FileJanitor.DeleteDirectoryIfEmpty
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.DeleteDirectoryIfEmpty
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.CancelDelete*
  commentId: Overload:Sdl.FileTypeSupport.Framework.FileJanitor.CancelDelete
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.FileJanitor.html#Sdl_FileTypeSupport_Framework_FileJanitor_CancelDelete
  name: CancelDelete
  nameWithType: FileJanitor.CancelDelete
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.CancelDelete
- uid: Sdl.FileTypeSupport.Framework.FileJanitor.Deleted*
  commentId: Overload:Sdl.FileTypeSupport.Framework.FileJanitor.Deleted
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.FileJanitor.html#Sdl_FileTypeSupport_Framework_FileJanitor_Deleted
  name: Deleted
  nameWithType: FileJanitor.Deleted
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor.Deleted
