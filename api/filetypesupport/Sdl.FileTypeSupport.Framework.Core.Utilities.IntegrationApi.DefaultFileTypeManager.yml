### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager
  id: DefaultFileTypeManager
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.CreateInstance
  - Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.CreateInstance(System.Boolean)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.ImplementationAssemblyName
  - Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.ImplementationClassName
  langs:
  - csharp
  - vb
  name: DefaultFileTypeManager
  nameWithType: DefaultFileTypeManager
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  summary: "\nStatic class for creating DefaultFileTypeManager\n"
  syntax:
    content: public static class DefaultFileTypeManager
    content.vb: Public Module DefaultFileTypeManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.ImplementationAssemblyName
  commentId: F:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.ImplementationAssemblyName
  id: ImplementationAssemblyName
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager
  langs:
  - csharp
  - vb
  name: ImplementationAssemblyName
  nameWithType: DefaultFileTypeManager.ImplementationAssemblyName
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.ImplementationAssemblyName
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  summary: "\nThe name of the assembly in which the default implementation of the FileTypeManager is expected to be found\n"
  syntax:
    content: public const string ImplementationAssemblyName = "Sdl.FileTypeSupport.Framework.Implementation"
    return:
      type: System.String
    content.vb: Public Const ImplementationAssemblyName As String = "Sdl.FileTypeSupport.Framework.Implementation"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.ImplementationClassName
  commentId: F:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.ImplementationClassName
  id: ImplementationClassName
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager
  langs:
  - csharp
  - vb
  name: ImplementationClassName
  nameWithType: DefaultFileTypeManager.ImplementationClassName
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.ImplementationClassName
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  summary: "\nThe class name of the expected default implementation of the FileTypeManager\n"
  syntax:
    content: public const string ImplementationClassName = "Sdl.FileTypeSupport.Framework.Integration.PocoFilterManager"
    return:
      type: System.String
    content.vb: Public Const ImplementationClassName As String = "Sdl.FileTypeSupport.Framework.Integration.PocoFilterManager"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.CreateInstance
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.CreateInstance
  id: CreateInstance
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager
  langs:
  - csharp
  - vb
  name: CreateInstance()
  nameWithType: DefaultFileTypeManager.CreateInstance()
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.CreateInstance()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  summary: "\nCreate an instance of the default implementation of FileTypeManager. Note: may return null if instance is not found.\n"
  syntax:
    content: public static IFileTypeManager CreateInstance()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
      description: Default implementation of FileTypeManager or null.
    content.vb: Public Shared Function CreateInstance As IFileTypeManager
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.CreateInstance*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: thrown if the implementation cannot be located.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.CreateInstance(System.Boolean)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.CreateInstance(System.Boolean)
  id: CreateInstance(System.Boolean)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager
  langs:
  - csharp
  - vb
  name: CreateInstance(Boolean)
  nameWithType: DefaultFileTypeManager.CreateInstance(Boolean)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.CreateInstance(System.Boolean)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  summary: "\nCreate an instance of the default implementation of FileTypeManager. Note: may return null if instance is not found.\n"
  syntax:
    content: public static IFileTypeManager CreateInstance(bool autoLoadFileTypes)
    parameters:
    - id: autoLoadFileTypes
      type: System.Boolean
      description: <code>true</code> to autoload all available file types, <code>false</code> to only load file type manager without any file types.
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
      description: Default implementation of FileTypeManager or null.
    content.vb: Public Shared Function CreateInstance(autoLoadFileTypes As Boolean) As IFileTypeManager
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.CreateInstance*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: thrown if the implementation cannot be located.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.CreateInstance*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.CreateInstance
  isExternal: true
  name: CreateInstance
  nameWithType: DefaultFileTypeManager.CreateInstance
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.DefaultFileTypeManager.CreateInstance
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileTypeManager
  nameWithType: IFileTypeManager
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
