### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2
  id: AbstractFileTypeSettingsPage`2
  parent: Sdl.FileTypeSupport.Framework.Core.Settings
  children:
  - Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.#ctor
  - Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Control
  - Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.CreateAndInitializeControl
  - Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.CreateAndInitializeSettings
  - Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Dispose
  - Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Dispose(System.Boolean)
  - Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.FileTypeConfigurationId
  - Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Finalize
  - Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.GetControl
  - Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Refresh
  - Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.ResetToDefaults
  - Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Save
  - Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Settings
  - Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.SettingsBundle
  - Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.SubContentFileTypeConfigurationIds
  langs:
  - csharp
  - vb
  name: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nConvenient implementation class for settings pages that handles the initialization of settings\nand controls, and provides a default implementation of the file type specific settings page interface.\n"
  remarks: "\n<p>\nSettings pages do not need to be derived from this class. However, if they follow standard patterns, deriving from this class\ncan result in a simpler implementation.\n</p>\n"
  example:
  - "\n<p>\nTo use this class in order to implement a file type settings page, take the following steps:\n</p>\n<ul><li>Create a settings class that implements <xref href=\"Sdl.FileTypeSupport.Framework.Core.Settings.FileTypeSettingsBase\" data-throw-if-not-resolved=\"false\"></xref>. Make sure that your property setters\nare raising the <xref href=\"System.ComponentModel.INotifyPropertyChanged.PropertyChanged\" data-throw-if-not-resolved=\"false\"></xref> event when values change. Implement the\n<xref href=\"Sdl.FileTypeSupport.Framework.Core.Settings.FileTypeSettingsBase.ResetToDefaults\" data-throw-if-not-resolved=\"false\"></xref> method by calling the property setters (rather than updating\nthe fields directly). Implement settings reading and writing functionality using the settings bundle.</li><li>\nCreate a settings control for the settings page, and implement <code>IFileTypeSettingsAware</code> for your settings class. \nIn the property setter for Settings, assign the value to <code>LayoutRoot.DataContext</code>. \nImplement the user interface by using two-way data binding to access and update the settings.\n</li><li>\nCreate a settings page class derived from this class and mark it with the <xref href=\"Sdl.FileTypeSupport.Framework.Core.Settings.FileTypeSettingsPageAttribute\" data-throw-if-not-resolved=\"false\"></xref>.\n</li></ul>\n<p>\nThe default implementation of the settings page and the data binding will take care of everything else. Unless you\nrequire special processing for anything, there should be no need to override any of the methods and properties\nin this base class.\n</p>\n"
  syntax:
    content: >-
      public abstract class AbstractFileTypeSettingsPage<SettingsControlType, SettingsType> : AbstractSettingsPage, IFileTypeConfigurationAware where SettingsControlType : new()
          where SettingsType : FileTypeSettingsBase, new()
    typeParameters:
    - id: SettingsControlType
      description: "Control class that will be used to edit the settings; should be derived from <code>Control</code>, and \nhave a default constructor. The control should implement <code>IFileTypeSettingsAware</code>, and use data binding\nto interact with the settings."
    - id: SettingsType
      description: >-
        Settings data container class; should implement <xref href="Sdl.FileTypeSupport.Framework.Core.Settings.FileTypeSettingsBase" data-throw-if-not-resolved="false"></xref> and

        raise property change events when data is changed. Must have a default constructor. The settings class should

        correspond to the settings displayed by the control for the ResetToDefaults function to work as expected without

        manual tweaking. If the settings class contains settings used by other pages, you must override the

        <xref href="Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage%602.ResetToDefaults" data-throw-if-not-resolved="false"></xref> method to ensure that only the settings for this page are reset.
    content.vb: >-
      Public MustInherit Class AbstractFileTypeSettingsPage(Of SettingsControlType As New, SettingsType As {FileTypeSettingsBase, New})
          Inherits AbstractSettingsPage
          Implements IFileTypeConfigurationAware
  inheritance:
  - System.Object
  implements:
  - Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeConfigurationAware
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType)
  name.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2
  langs:
  - csharp
  - vb
  name: AbstractFileTypeSettingsPage()
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.AbstractFileTypeSettingsPage()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.AbstractFileTypeSettingsPage()
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nDefault constructor, does not do anything\n"
  syntax:
    content: protected AbstractFileTypeSettingsPage()
    content.vb: Protected Sub New
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.#ctor*
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).AbstractFileTypeSettingsPage()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).AbstractFileTypeSettingsPage()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Finalize
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Finalize
  id: Finalize
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Finalize()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Finalize()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nFinalizer calls <xref href=\"Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage%602.Dispose(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> with <code>false</code>\n"
  syntax:
    content: protected override void Finalize()
    content.vb: Protected Overrides Sub Finalize
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Finalize*
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Finalize()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Finalize()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Dispose(System.Boolean)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Dispose(Boolean)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Dispose(System.Boolean)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nOverride this method to perform additional clean-up tasks when the object is destroyed.\n"
  remarks: "\nThe default implementation disposes of the settings if they implement IDisposable.\n"
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: >-
        Indicates whether the call originates from the <xref href="System.IDisposable.Dispose" data-throw-if-not-resolved="false"></xref> method

        or from the finalizer.
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Dispose*
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Dispose(Boolean)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Dispose(System.Boolean)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.CreateAndInitializeControl
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.CreateAndInitializeControl
  id: CreateAndInitializeControl
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2
  langs:
  - csharp
  - vb
  name: CreateAndInitializeControl()
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.CreateAndInitializeControl()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.CreateAndInitializeControl()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nCalled from <xref href=\"Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage%602.GetControl\" data-throw-if-not-resolved=\"false\"></xref> when the control implementation is needed for the first time.\nThe implementation should create and initialize the control.\n"
  remarks: "\n<p>\nThe default implementation creates a new instance of the control class using the default constructor,\nand if the control implements <xref href=\"Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeSettingsAware%601\" data-throw-if-not-resolved=\"false\"></xref>, the settings are\ncommunicated to the control.\n</p>\n<p>\nOverride this if you need to do additional initialization.\n</p>\n"
  syntax:
    content: protected virtual SettingsControlType CreateAndInitializeControl()
    return:
      type: '{SettingsControlType}'
    content.vb: Protected Overridable Function CreateAndInitializeControl As SettingsControlType
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.CreateAndInitializeControl*
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).CreateAndInitializeControl()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).CreateAndInitializeControl()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.CreateAndInitializeSettings
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.CreateAndInitializeSettings
  id: CreateAndInitializeSettings
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2
  langs:
  - csharp
  - vb
  name: CreateAndInitializeSettings()
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.CreateAndInitializeSettings()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.CreateAndInitializeSettings()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nCalled to create the settings the first time they are needed, typically \nduring the first call to <xref href=\"Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage%602.GetControl\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nThe default implementation creates a new instance of the settings class\nusing the default constructor, and calls <xref href=\"Sdl.FileTypeSupport.Framework.Core.Settings.FileTypeSettingsBase.PopulateFromSettingsBundle(Sdl.Core.Settings.ISettingsBundle%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nOverride this if you need to do additional initialization of the settings.\n</p>\n"
  syntax:
    content: protected virtual SettingsType CreateAndInitializeSettings()
    return:
      type: '{SettingsType}'
    content.vb: Protected Overridable Function CreateAndInitializeSettings As SettingsType
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.CreateAndInitializeSettings*
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).CreateAndInitializeSettings()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).CreateAndInitializeSettings()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.GetControl
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.GetControl
  id: GetControl
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2
  langs:
  - csharp
  - vb
  name: GetControl()
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.GetControl()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.GetControl()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nCalled by the framework to obtain the user interface control.\n"
  remarks: "\nThe default implementation calls <xref href=\"Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage%602.CreateAndInitializeControl\" data-throw-if-not-resolved=\"false\"></xref> the first time that this method is called.\nIf custom initialization is required for the control, it is recommended that you override that particular custom method rather than this one.\n"
  syntax:
    content: public override object GetControl()
    return:
      type: System.Object
    content.vb: Public Overrides Function GetControl As Object
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.GetControl*
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).GetControl()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).GetControl()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Save
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Save
  id: Save
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Save()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Save()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nCalled when settings should be saved. The implementation is responsible for persisting the settings.\n"
  remarks: "\n<p>This method is called once after <xref href=\"Sdl.Core.Settings.AbstractSettingsPage.ValidateInput\" data-throw-if-not-resolved=\"false\"></xref> has been called.\n</p>\n<p>\nThe default implementation calls <xref href=\"Sdl.FileTypeSupport.Framework.Core.Settings.FileTypeSettingsBase.SaveToSettingsBundle(Sdl.Core.Settings.ISettingsBundle%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> on the settings.\n</p>\n"
  syntax:
    content: public override void Save()
    content.vb: Public Overrides Sub Save
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Save*
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Save()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Save()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.ResetToDefaults
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.ResetToDefaults
  id: ResetToDefaults
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2
  langs:
  - csharp
  - vb
  name: ResetToDefaults()
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.ResetToDefaults()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.ResetToDefaults()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nCalled to reset settings to their default values. Should update the user interface accordingly.\n"
  remarks: "\n<p>\nThis method should not save the settings yet. This should be done in <xref href=\"Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage%602.Save\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>This method will not be called if <xref href=\"Sdl.Core.Settings.AbstractSettingsPage.HasDefaultSettings\" data-throw-if-not-resolved=\"false\"></xref> returns <code>false</code>.</p>\n<p>\nThe default implementation calls <xref href=\"Sdl.FileTypeSupport.Framework.Core.Settings.FileTypeSettingsBase.ResetToDefaults\" data-throw-if-not-resolved=\"false\"></xref>. If you are using\ndata binding with the settings as data context and have implemented property change notification events for the settings,\nthe user interface should update automatically to reflect the changes (assuming ResetToDefaults() on \nthe settings invokes the property setters). If not, you will need to override this\nmethod and ensure that the user interface is updated.\n</p>\n"
  syntax:
    content: public override void ResetToDefaults()
    content.vb: Public Overrides Sub ResetToDefaults
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.ResetToDefaults*
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).ResetToDefaults()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).ResetToDefaults()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Refresh
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Refresh
  id: Refresh
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Refresh()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Refresh()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nCalled to re-populate the settings when the underlying data source has been changed externally. This\ncan happen when settings are imported, for example.\n"
  remarks: "\n<p>\nIf you are using\ndata binding with the settings as data context and have implemented property change notification events for the settings,\nthe user interface should update automatically to reflect the changes (assuming PopulateFromSettingsBundle() on \nthe settings invokes the property setters). If not, you will need to override this\nmethod and ensure that the user interface is updated.\n</p>\n"
  syntax:
    content: public override void Refresh()
    content.vb: Public Overrides Sub Refresh
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Refresh*
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Refresh()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Refresh()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Dispose
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Dispose
  id: Dispose
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Dispose()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Dispose()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nStandard implementation of the Dispose method; calls <xref href=\"Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage%602.Dispose(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> with <code>true</code>\nand suppresses finalization.\n"
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Dispose*
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Dispose()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Dispose()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.SettingsBundle
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.SettingsBundle
  id: SettingsBundle
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2
  langs:
  - csharp
  - vb
  name: SettingsBundle
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.SettingsBundle
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.SettingsBundle
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nThe SettingsBundle which contains setting information for the page\n"
  syntax:
    content: public ISettingsBundle SettingsBundle { get; set; }
    parameters: []
    return:
      type: Sdl.Core.Settings.ISettingsBundle
    content.vb: Public Property SettingsBundle As ISettingsBundle
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.SettingsBundle*
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).SettingsBundle
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).SettingsBundle
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Settings
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Settings
  id: Settings
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Settings
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Settings
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nThe settings are created and initialized the first time\nthis property is accessed.\n"
  syntax:
    content: public virtual SettingsType Settings { get; protected set; }
    parameters: []
    return:
      type: '{SettingsType}'
    content.vb: Public Overridable Property Settings As SettingsType
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Settings*
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Settings
  modifiers.csharp:
  - public
  - virtual
  - get
  - protected set
  modifiers.vb:
  - Public
  - Overridable
  - Get
  - Protected Set
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Settings
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Control
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Control
  id: Control
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2
  langs:
  - csharp
  - vb
  name: Control
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Control
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Control
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nThis property provides derived classes direct access to the\ncontrol, which may or may not yet have been created.\n"
  remarks: "\n<p>\nNormally the control should be accessed by calling <xref href=\"Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage%602.GetControl\" data-throw-if-not-resolved=\"false\"></xref> instead\nof accessing this property, as the control does not get created until the first time\n<xref href=\"Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage%602.GetControl\" data-throw-if-not-resolved=\"false\"></xref> is called.\n</p>\n<p>\nThis property may be <code>null</code> before the first call to <xref href=\"Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage%602.GetControl\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  syntax:
    content: protected SettingsControlType Control { get; set; }
    parameters: []
    return:
      type: '{SettingsControlType}'
    content.vb: Protected Property Control As SettingsControlType
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Control*
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Control
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Control
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.FileTypeConfigurationId
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.FileTypeConfigurationId
  id: FileTypeConfigurationId
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2
  langs:
  - csharp
  - vb
  name: FileTypeConfigurationId
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.FileTypeConfigurationId
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.FileTypeConfigurationId
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nId of the file type that is being configured. This id can be used (as a key) to retrieve \nthe settings group representing the file type settings from a settings\nbundle.\n"
  remarks: "\n<p>\nThe framework sets this property before the settings page is initialized.\n</p>\n<p>\nThe configuration id is typically the same as the file type definition id.\n</p>\n"
  syntax:
    content: public string FileTypeConfigurationId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileTypeConfigurationId As String
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.FileTypeConfigurationId*
  implements:
  - Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeConfigurationAware.FileTypeConfigurationId
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).FileTypeConfigurationId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).FileTypeConfigurationId
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.SubContentFileTypeConfigurationIds
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.SubContentFileTypeConfigurationIds
  id: SubContentFileTypeConfigurationIds
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2
  langs:
  - csharp
  - vb
  name: SubContentFileTypeConfigurationIds
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.SubContentFileTypeConfigurationIds
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.SubContentFileTypeConfigurationIds
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nList of FileTypeConfigurationIds of all subcontent processing file types\n"
  syntax:
    content: public List<string> SubContentFileTypeConfigurationIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property SubContentFileTypeConfigurationIds As List(Of String)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.SubContentFileTypeConfigurationIds*
  implements:
  - Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeConfigurationAware.SubContentFileTypeConfigurationIds
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).SubContentFileTypeConfigurationIds
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).SubContentFileTypeConfigurationIds
references:
- uid: Sdl.FileTypeSupport.Framework.Core.Settings
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Settings
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Core.Settings
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Settings
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeConfigurationAware
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeConfigurationAware
  parent: Sdl.FileTypeSupport.Framework.Core.Settings
  isExternal: true
  name: IFileTypeConfigurationAware
  nameWithType: IFileTypeConfigurationAware
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeConfigurationAware
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.#ctor
  isExternal: true
  name: AbstractFileTypeSettingsPage
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.AbstractFileTypeSettingsPage
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.AbstractFileTypeSettingsPage
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).AbstractFileTypeSettingsPage
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).AbstractFileTypeSettingsPage
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Finalize*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Finalize
  isExternal: true
  name: Finalize
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Finalize
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Finalize
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Finalize
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Finalize
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Dispose*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Dispose
  isExternal: true
  name: Dispose
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Dispose
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Dispose
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Dispose
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.CreateAndInitializeControl*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.CreateAndInitializeControl
  isExternal: true
  name: CreateAndInitializeControl
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.CreateAndInitializeControl
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.CreateAndInitializeControl
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).CreateAndInitializeControl
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).CreateAndInitializeControl
- uid: '{SettingsControlType}'
  commentId: '!:SettingsControlType'
  definition: SettingsControlType
  name: SettingsControlType
  nameWithType: SettingsControlType
  fullName: SettingsControlType
- uid: SettingsControlType
  name: SettingsControlType
  nameWithType: SettingsControlType
  fullName: SettingsControlType
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.CreateAndInitializeSettings*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.CreateAndInitializeSettings
  isExternal: true
  name: CreateAndInitializeSettings
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.CreateAndInitializeSettings
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.CreateAndInitializeSettings
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).CreateAndInitializeSettings
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).CreateAndInitializeSettings
- uid: '{SettingsType}'
  commentId: '!:SettingsType'
  definition: SettingsType
  name: SettingsType
  nameWithType: SettingsType
  fullName: SettingsType
- uid: SettingsType
  name: SettingsType
  nameWithType: SettingsType
  fullName: SettingsType
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.GetControl*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.GetControl
  isExternal: true
  name: GetControl
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.GetControl
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.GetControl
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).GetControl
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).GetControl
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Save*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Save
  isExternal: true
  name: Save
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Save
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Save
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Save
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Save
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.ResetToDefaults*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.ResetToDefaults
  isExternal: true
  name: ResetToDefaults
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.ResetToDefaults
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.ResetToDefaults
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).ResetToDefaults
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).ResetToDefaults
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Refresh*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Refresh
  isExternal: true
  name: Refresh
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Refresh
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Refresh
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Refresh
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Refresh
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.SettingsBundle*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.SettingsBundle
  isExternal: true
  name: SettingsBundle
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.SettingsBundle
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.SettingsBundle
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).SettingsBundle
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).SettingsBundle
- uid: Sdl.Core.Settings.ISettingsBundle
  isExternal: true
  name: ISettingsBundle
  nameWithType: ISettingsBundle
  fullName: Sdl.Core.Settings.ISettingsBundle
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Settings*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Settings
  isExternal: true
  name: Settings
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Settings
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Settings
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Settings
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Settings
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Control*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.Control
  isExternal: true
  name: Control
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Control
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.Control
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Control
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).Control
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.FileTypeConfigurationId*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.FileTypeConfigurationId
  isExternal: true
  name: FileTypeConfigurationId
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.FileTypeConfigurationId
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.FileTypeConfigurationId
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).FileTypeConfigurationId
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).FileTypeConfigurationId
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeConfigurationAware.FileTypeConfigurationId
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeConfigurationAware.FileTypeConfigurationId
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeConfigurationAware
  isExternal: true
  name: FileTypeConfigurationId
  nameWithType: IFileTypeConfigurationAware.FileTypeConfigurationId
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeConfigurationAware.FileTypeConfigurationId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.SubContentFileTypeConfigurationIds*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage`2.SubContentFileTypeConfigurationIds
  isExternal: true
  name: SubContentFileTypeConfigurationIds
  nameWithType: AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.SubContentFileTypeConfigurationIds
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage<SettingsControlType, SettingsType>.SubContentFileTypeConfigurationIds
  nameWithType.vb: AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).SubContentFileTypeConfigurationIds
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.AbstractFileTypeSettingsPage(Of SettingsControlType, SettingsType).SubContentFileTypeConfigurationIds
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeConfigurationAware.SubContentFileTypeConfigurationIds
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeConfigurationAware.SubContentFileTypeConfigurationIds
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeConfigurationAware
  isExternal: true
  name: SubContentFileTypeConfigurationIds
  nameWithType: IFileTypeConfigurationAware.SubContentFileTypeConfigurationIds
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeConfigurationAware.SubContentFileTypeConfigurationIds
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
