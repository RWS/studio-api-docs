### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  id: ObservableDictionary`2
  parent: Sdl.FileTypeSupport.Framework.Core.Settings
  children:
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.#ctor
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.#ctor(System.Int32)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Add(`0,`1)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Clear
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.ClearDictionaryItemSettings(Sdl.Core.Settings.ISettingsGroup,System.String)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.CollectionChanged
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.ContainsKey(`0)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Count
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetDictionaryItemFromSettings``1(Sdl.Core.Settings.ISettingsGroup,System.String,System.Boolean@)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetEnumerator
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.IsReadOnly
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Item(`0)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Keys
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.PropertyChanged
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Remove(`0)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.TryGetValue(`0,`1@)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Values
  langs:
  - csharp
  - vb
  name: ObservableDictionary<TKey, TValue>
  nameWithType: ObservableDictionary<TKey, TValue>
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>
  type: Class
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: >-
    An implementation of <code>IDictionary&lt;TKey&gt;&lt;TValue&gt;</code> which fires <xref href="System.Collections.Specialized.INotifyCollectionChanged" data-throw-if-not-resolved="false"></xref>

    and <xref href="System.ComponentModel.INotifyPropertyChanged" data-throw-if-not-resolved="false"></xref> when required. This allows the dictionary to be used as

    a data source for WPF user controls implementing data-binding.
  example: []
  syntax:
    content: 'public class ObservableDictionary<TKey, TValue> : IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable, INotifyCollectionChanged, INotifyPropertyChanged, ISerializable'
    typeParameters:
    - id: TKey
      description: The type of the key used in the dictionary.
    - id: TValue
      description: The type of the value used in the dictionary.
    content.vb: Public Class ObservableDictionary(Of TKey, TValue) Implements IDictionary(Of TKey, TValue), ICollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEnumerable, INotifyCollectionChanged, INotifyPropertyChanged, ISerializable
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.FormattingGroup
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.IEnumerable
  - System.Collections.Specialized.INotifyCollectionChanged
  - System.ComponentModel.INotifyPropertyChanged
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ObservableDictionary(Of TKey, TValue)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue)
  name.vb: ObservableDictionary(Of TKey, TValue)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: ObservableDictionary()
  nameWithType: ObservableDictionary<TKey, TValue>.ObservableDictionary()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.ObservableDictionary()
  type: Constructor
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Default constructor creating a new dictionary with the default capacity.
  example: []
  syntax:
    content: public ObservableDictionary()
    content.vb: Public Sub New()
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.#ctor*
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).New()
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).New()
  name.vb: New()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.#ctor(System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: ObservableDictionary(int)
  nameWithType: ObservableDictionary<TKey, TValue>.ObservableDictionary(int)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.ObservableDictionary(int)
  type: Constructor
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Constructor creating a new dictionary with the specified capacity.
  example: []
  syntax:
    content: public ObservableDictionary(int size)
    parameters:
    - id: size
      type: System.Int32
      description: The initial capacity of the dictionary.
    content.vb: Public Sub New(size As Integer)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.#ctor*
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).New(Integer)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).New(Integer)
  name.vb: New(Integer)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Add(`0,`1)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Add(`0,`1)
  id: Add(`0,`1)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: Add(TKey, TValue)
  nameWithType: ObservableDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.Add(TKey, TValue)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: >-
    Adds an element with the key and value to the dictionary or updates the value

    if the key already exists.
  example: []
  syntax:
    content: public void Add(TKey key, TValue value)
    parameters:
    - id: key
      type: '{TKey}'
      description: The object to use as the key for the element.
    - id: value
      type: '{TValue}'
      description: The object to use as the value for the element.
    content.vb: Public Sub Add(key As TKey, value As TValue)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Add*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue})
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).Add(TKey, TValue)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.ContainsKey(`0)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: ContainsKey(TKey)
  nameWithType: ObservableDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.ContainsKey(TKey)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Determines whether the dictionary contains an element with the specified key.
  example: []
  syntax:
    content: public bool ContainsKey(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key to search the dictionary for.
    return:
      type: System.Boolean
      description: <code>true</code> if the key exists in the dictionary.
    content.vb: Public Function ContainsKey(key As TKey) As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.ContainsKey*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey})
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).ContainsKey(TKey)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Remove(`0)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Remove(`0)
  id: Remove(`0)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: Remove(TKey)
  nameWithType: ObservableDictionary<TKey, TValue>.Remove(TKey)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.Remove(TKey)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Removes the element with the specified key from the dictionary.
  example: []
  syntax:
    content: public bool Remove(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the element to remove.
    return:
      type: System.Boolean
      description: <code>true</code> if the element was successfully removed.
    content.vb: Public Function Remove(key As TKey) As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Remove*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey})
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).Remove(TKey)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.TryGetValue(`0,`1@)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: TryGetValue(TKey, out TValue)
  nameWithType: ObservableDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: >-
    Gets the value of the element with the specified key if it

    exists.
  example: []
  syntax:
    content: public bool TryGetValue(TKey key, out TValue value)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the element to get.
    - id: value
      type: '{TValue}'
      description: The value of the element at the specified key.
    return:
      type: System.Boolean
      description: <code>true</code> if an element with the specified key exists.
    content.vb: Public Function TryGetValue(key As TKey, value As TValue) As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.TryGetValue*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  id: Add(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: Add(KeyValuePair<TKey, TValue>)
  nameWithType: ObservableDictionary<TKey, TValue>.Add(KeyValuePair<TKey, TValue>)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Adds a new element to the dictionary.
  example: []
  syntax:
    content: public void Add(KeyValuePair<TKey, TValue> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
      description: The element to add to the dictionary.
    content.vb: Public Sub Add(item As KeyValuePair(Of TKey, TValue))
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Add*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Add(KeyValuePair(Of TKey, TValue))
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Add(KeyValuePair(Of TKey, TValue))
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Clear
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Clear
  id: Clear
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ObservableDictionary<TKey, TValue>.Clear()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.Clear()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Removes all elements from the dictionary.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Clear*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Clear
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Clear()
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).Clear()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  id: Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: Contains(KeyValuePair<TKey, TValue>)
  nameWithType: ObservableDictionary<TKey, TValue>.Contains(KeyValuePair<TKey, TValue>)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Determines whether the dictionary contains the specified item.
  example: []
  syntax:
    content: public bool Contains(KeyValuePair<TKey, TValue> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
      description: The item to look for.
    return:
      type: System.Boolean
      description: <code>true</code> if the item exists in the dictionary.
    content.vb: Public Function Contains(item As KeyValuePair(Of TKey, TValue)) As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Contains*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Contains(KeyValuePair(Of TKey, TValue))
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Contains(KeyValuePair(Of TKey, TValue))
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  id: CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: CopyTo(KeyValuePair<TKey, TValue>[], int)
  nameWithType: ObservableDictionary<TKey, TValue>.CopyTo(KeyValuePair<TKey, TValue>[], int)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], int)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: >-
    Copies the dictionary elements into the provided array, starting

    from the specified index in the array.
  example: []
  syntax:
    content: public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]
      description: The index to copy the dictionary elements in to.
    - id: arrayIndex
      type: System.Int32
      description: The index in the array to start copying from.
    content.vb: Public Sub CopyTo(array As KeyValuePair(Of TKey, TValue)(), arrayIndex As Integer)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).CopyTo(KeyValuePair(Of TKey, TValue)(), Integer)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), Integer)
  name.vb: CopyTo(KeyValuePair(Of TKey, TValue)(), Integer)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  id: Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: Remove(KeyValuePair<TKey, TValue>)
  nameWithType: ObservableDictionary<TKey, TValue>.Remove(KeyValuePair<TKey, TValue>)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Removes the specified item from the dictionary.
  example: []
  syntax:
    content: public bool Remove(KeyValuePair<TKey, TValue> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
      description: The item to remove from the dictionary.
    return:
      type: System.Boolean
      description: <code>true</code> if the item was successfully removed from the dictionary.
    content.vb: Public Function Remove(item As KeyValuePair(Of TKey, TValue)) As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Remove*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Remove(KeyValuePair(Of TKey, TValue))
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Remove(KeyValuePair(Of TKey, TValue))
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetEnumerator
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetEnumerator
  id: GetEnumerator
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ObservableDictionary<TKey, TValue>.GetEnumerator()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.GetEnumerator()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Returns an enumerator that iterates through the collection.
  example: []
  syntax:
    content: public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: ''
    content.vb: Public Function GetEnumerator() As IEnumerator(Of KeyValuePair(Of TKey, TValue))
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).GetEnumerator()
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).GetEnumerator()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: ObservableDictionary(SerializationInfo, StreamingContext)
  nameWithType: ObservableDictionary<TKey, TValue>.ObservableDictionary(SerializationInfo, StreamingContext)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.ObservableDictionary(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Creates a new dictionary based on the serialization information provided.
  example: []
  syntax:
    content: protected ObservableDictionary(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: ''
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: ''
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.#ctor*
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).New(SerializationInfo, StreamingContext)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).New(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  name.vb: New(SerializationInfo, StreamingContext)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ObservableDictionary<TKey, TValue>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Populates serialization information with the elements in the dictionary.
  example: []
  syntax:
    content: public void GetObjectData(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: ''
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: ''
    content.vb: Public Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetObjectData*
  implements:
  - System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).GetObjectData(SerializationInfo, StreamingContext)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  id: SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: SaveToSettingsGroup(ISettingsGroup, string)
  nameWithType: ObservableDictionary<TKey, TValue>.SaveToSettingsGroup(ISettingsGroup, string)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup, string)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Saves this dictionary to the settings group using the setting ID as a base.
  example: []
  syntax:
    content: public virtual void SaveToSettingsGroup(ISettingsGroup settingsGroup, string listSettingId)
    parameters:
    - id: settingsGroup
      type: Sdl.Core.Settings.ISettingsGroup
      description: The settings group to save to.
    - id: listSettingId
      type: System.String
      description: The setting ID to use as a base when saving the dictionary.
    content.vb: Public Overridable Sub SaveToSettingsGroup(settingsGroup As ISettingsGroup, listSettingId As String)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.SaveToSettingsGroup*
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).SaveToSettingsGroup(ISettingsGroup, String)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup, String)
  name.vb: SaveToSettingsGroup(ISettingsGroup, String)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  id: PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: PopulateFromSettingsGroup(ISettingsGroup, string)
  nameWithType: ObservableDictionary<TKey, TValue>.PopulateFromSettingsGroup(ISettingsGroup, string)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup, string)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Restores the dictionary from the settings group and populates itself using the setting ID as its base.
  example: []
  syntax:
    content: public virtual void PopulateFromSettingsGroup(ISettingsGroup settingsGroup, string listSettingId)
    parameters:
    - id: settingsGroup
      type: Sdl.Core.Settings.ISettingsGroup
      description: The settings group to load from.
    - id: listSettingId
      type: System.String
      description: The setting ID to use as a base when populating the dictionary.
    content.vb: Public Overridable Sub PopulateFromSettingsGroup(settingsGroup As ISettingsGroup, listSettingId As String)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.PopulateFromSettingsGroup*
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).PopulateFromSettingsGroup(ISettingsGroup, String)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup, String)
  name.vb: PopulateFromSettingsGroup(ISettingsGroup, String)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.ClearDictionaryItemSettings(Sdl.Core.Settings.ISettingsGroup,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.ClearDictionaryItemSettings(Sdl.Core.Settings.ISettingsGroup,System.String)
  id: ClearDictionaryItemSettings(Sdl.Core.Settings.ISettingsGroup,System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: ClearDictionaryItemSettings(ISettingsGroup, string)
  nameWithType: ObservableDictionary<TKey, TValue>.ClearDictionaryItemSettings(ISettingsGroup, string)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.ClearDictionaryItemSettings(Sdl.Core.Settings.ISettingsGroup, string)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: >-
    Removes all saved items belonging to this dictionary from the stored settings group. This is

    called from <xref href="Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary%602.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to make sure that the settings being updated

    are all saved cleanly.
  example: []
  syntax:
    content: protected virtual void ClearDictionaryItemSettings(ISettingsGroup settingsGroup, string listSettingId)
    parameters:
    - id: settingsGroup
      type: Sdl.Core.Settings.ISettingsGroup
      description: The settings group to remove the settings from.
    - id: listSettingId
      type: System.String
      description: The ID of the setting to remove.
    content.vb: Protected Overridable Sub ClearDictionaryItemSettings(settingsGroup As ISettingsGroup, listSettingId As String)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.ClearDictionaryItemSettings*
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).ClearDictionaryItemSettings(ISettingsGroup, String)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).ClearDictionaryItemSettings(Sdl.Core.Settings.ISettingsGroup, String)
  name.vb: ClearDictionaryItemSettings(ISettingsGroup, String)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetDictionaryItemFromSettings``1(Sdl.Core.Settings.ISettingsGroup,System.String,System.Boolean@)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetDictionaryItemFromSettings``1(Sdl.Core.Settings.ISettingsGroup,System.String,System.Boolean@)
  id: GetDictionaryItemFromSettings``1(Sdl.Core.Settings.ISettingsGroup,System.String,System.Boolean@)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: GetDictionaryItemFromSettings<T>(ISettingsGroup, string, out bool)
  nameWithType: ObservableDictionary<TKey, TValue>.GetDictionaryItemFromSettings<T>(ISettingsGroup, string, out bool)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.GetDictionaryItemFromSettings<T>(Sdl.Core.Settings.ISettingsGroup, string, out bool)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Gets the setting for the dictionary item from the settings group and populates it.
  example: []
  syntax:
    content: protected virtual T GetDictionaryItemFromSettings<T>(ISettingsGroup settingsGroup, string listItemSetting, out bool found)
    parameters:
    - id: settingsGroup
      type: Sdl.Core.Settings.ISettingsGroup
      description: The settings group containing the dictionary item settings.
    - id: listItemSetting
      type: System.String
      description: The setting ID to use to retrieve the setting.
    - id: found
      type: System.Boolean
      description: A flag which reports if the setting was found or not.
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: The populated dictionary item.
    content.vb: Protected Overridable Function GetDictionaryItemFromSettings(Of T)(settingsGroup As ISettingsGroup, listItemSetting As String, found As Boolean) As T
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetDictionaryItemFromSettings*
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).GetDictionaryItemFromSettings(Of T)(ISettingsGroup, String, Boolean)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).GetDictionaryItemFromSettings(Of T)(Sdl.Core.Settings.ISettingsGroup, String, Boolean)
  name.vb: GetDictionaryItemFromSettings(Of T)(ISettingsGroup, String, Boolean)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Keys
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Keys
  id: Keys
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: ObservableDictionary<TKey, TValue>.Keys
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.Keys
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: A collection of all element keys contained in the dictionary.
  example: []
  syntax:
    content: public ICollection<TKey> Keys { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TKey}}
    content.vb: Public ReadOnly Property Keys As ICollection(Of TKey)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Keys*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Keys
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).Keys
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Values
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Values
  id: Values
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: ObservableDictionary<TKey, TValue>.Values
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.Values
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: A collection of all element values contained in the dictionary.
  example: []
  syntax:
    content: public ICollection<TValue> Values { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TValue}}
    content.vb: Public ReadOnly Property Values As ICollection(Of TValue)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Values*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Values
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).Values
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Item(`0)
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Item(`0)
  id: Item(`0)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: this[TKey]
  nameWithType: ObservableDictionary<TKey, TValue>.this[TKey]
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.this[TKey]
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Retrieves the dictionary element value at the specified key.
  example: []
  syntax:
    content: public TValue this[TKey key] { get; set; }
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the element to get.
    return:
      type: '{TValue}'
      description: The value of the element at the specified key.
    content.vb: Public Default Property this[](key As TKey) As TValue
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Item*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey})
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Count
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Count
  id: Count
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ObservableDictionary<TKey, TValue>.Count
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.Count
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: The number of elements contained in the dictionary.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Count*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Count
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).Count
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.IsReadOnly
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.IsReadOnly
  id: IsReadOnly
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ObservableDictionary<TKey, TValue>.IsReadOnly
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.IsReadOnly
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Determines whether the dictionary is read-only.
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).IsReadOnly
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).IsReadOnly
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.CollectionChanged
  commentId: E:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.CollectionChanged
  id: CollectionChanged
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: CollectionChanged
  nameWithType: ObservableDictionary<TKey, TValue>.CollectionChanged
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.CollectionChanged
  type: Event
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Event that is fired whenever the contents of the collection are changed.
  example: []
  syntax:
    content: public event NotifyCollectionChangedEventHandler CollectionChanged
    return:
      type: System.Collections.Specialized.NotifyCollectionChangedEventHandler
    content.vb: Public Event CollectionChanged As NotifyCollectionChangedEventHandler
  implements:
  - System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).CollectionChanged
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).CollectionChanged
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.PropertyChanged
  commentId: E:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.PropertyChanged
  id: PropertyChanged
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: ObservableDictionary<TKey, TValue>.PropertyChanged
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.PropertyChanged
  type: Event
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Event that is fired whenever the value of a property of the collection is changed.
  example: []
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).PropertyChanged
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).PropertyChanged
references:
- uid: System.Collections.Specialized.INotifyCollectionChanged
  commentId: T:System.Collections.Specialized.INotifyCollectionChanged
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.inotifycollectionchanged
  name: INotifyCollectionChanged
  nameWithType: INotifyCollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: Sdl.FileTypeSupport.Framework.Core.Settings
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Settings
  isExternal: true
  href: Sdl.html
  name: Sdl.FileTypeSupport.Framework.Core.Settings
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Settings
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.Core
    name: Core
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Core.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.Core.Settings
    name: Settings
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Core.Settings.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.Core
    name: Core
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Core.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.Core.Settings
    name: Settings
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Core.Settings.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.IDictionary{`0,`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<KeyValuePair<TKey, TValue>>
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: ICollection(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<TKey, TValue>>
  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.#ctor
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2__ctor
  name: ObservableDictionary
  nameWithType: ObservableDictionary<TKey, TValue>.ObservableDictionary
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.ObservableDictionary
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).New
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Add*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Add
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_Add__0__1_
  name: Add
  nameWithType: ObservableDictionary<TKey, TValue>.Add
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.Add
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Add
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).Add
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue})
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Add(`0,`1)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  name: Add(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  name: Add(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.ContainsKey*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.ContainsKey
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_ContainsKey__0_
  name: ContainsKey
  nameWithType: ObservableDictionary<TKey, TValue>.ContainsKey
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.ContainsKey
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).ContainsKey
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).ContainsKey
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey})
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.ContainsKey(`0)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  name: ContainsKey(TKey)
  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  name: ContainsKey(TKey)
  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Remove*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Remove
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_Remove__0_
  name: Remove
  nameWithType: ObservableDictionary<TKey, TValue>.Remove
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.Remove
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Remove
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).Remove
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey})
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Remove(`0)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  name: Remove(TKey)
  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Remove(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  name: Remove(TKey)
  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - name: TKey
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.TryGetValue*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.TryGetValue
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_TryGetValue__0__1__
  name: TryGetValue
  nameWithType: ObservableDictionary<TKey, TValue>.TryGetValue
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.TryGetValue
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).TryGetValue
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).TryGetValue
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.TryGetValue(`0,`1@)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  name: TryGetValue(TKey, out TValue)
  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  name: TryGetValue(TKey, out TValue)
  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(KeyValuePair<TKey, TValue>)
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Add(KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Add(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.KeyValuePair{`0,`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.KeyValuePair`2
  commentId: T:System.Collections.Generic.KeyValuePair`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Clear*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Clear
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_Clear
  name: Clear
  nameWithType: ObservableDictionary<TKey, TValue>.Clear
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.Clear
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Clear
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).Clear
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Clear
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Clear
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Clear()
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear()
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Contains*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Contains
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_Contains_System_Collections_Generic_KeyValuePair__0__1__
  name: Contains
  nameWithType: ObservableDictionary<TKey, TValue>.Contains
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.Contains
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Contains
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).Contains
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(KeyValuePair<TKey, TValue>)
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Contains(KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Contains(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.CopyTo*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.CopyTo
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_CopyTo_System_Collections_Generic_KeyValuePair__0__1____System_Int32_
  name: CopyTo
  nameWithType: ObservableDictionary<TKey, TValue>.CopyTo
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.CopyTo
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).CopyTo
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).CopyTo
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(KeyValuePair<TKey, TValue>[], int)
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], int)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], int)
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo(KeyValuePair(Of TKey, TValue)(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), Integer)
  name.vb: CopyTo(KeyValuePair(Of TKey, TValue)(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  name: KeyValuePair<TKey, TValue>[]
  nameWithType: KeyValuePair<TKey, TValue>[]
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>[]
  nameWithType.vb: KeyValuePair(Of TKey, TValue)()
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)()
  name.vb: KeyValuePair(Of TKey, TValue)()
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(KeyValuePair<TKey, TValue>)
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Remove(KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Remove(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetEnumerator*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetEnumerator
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_GetEnumerator
  name: GetEnumerator
  nameWithType: ObservableDictionary<TKey, TValue>.GetEnumerator
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.GetEnumerator
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).GetEnumerator
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<KeyValuePair<TKey, TValue>>
  nameWithType: IEnumerator<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetObjectData*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetObjectData
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  name: GetObjectData
  nameWithType: ObservableDictionary<TKey, TValue>.GetObjectData
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.GetObjectData
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).GetObjectData
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).GetObjectData
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable.getobjectdata
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable.getobjectdata
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  - name: )
  spec.vb:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable.getobjectdata
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.SaveToSettingsGroup*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.SaveToSettingsGroup
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_SaveToSettingsGroup_Sdl_Core_Settings_ISettingsGroup_System_String_
  name: SaveToSettingsGroup
  nameWithType: ObservableDictionary<TKey, TValue>.SaveToSettingsGroup
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.SaveToSettingsGroup
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).SaveToSettingsGroup
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).SaveToSettingsGroup
- uid: Sdl.Core.Settings.ISettingsGroup
  commentId: T:Sdl.Core.Settings.ISettingsGroup
  parent: Sdl.Core.Settings
  isExternal: true
  name: ISettingsGroup
  nameWithType: ISettingsGroup
  fullName: Sdl.Core.Settings.ISettingsGroup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Sdl.Core.Settings
  commentId: N:Sdl.Core.Settings
  isExternal: true
  name: Sdl.Core.Settings
  nameWithType: Sdl.Core.Settings
  fullName: Sdl.Core.Settings
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
  - name: .
  - uid: Sdl.Core.Settings
    name: Settings
    isExternal: true
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
  - name: .
  - uid: Sdl.Core.Settings
    name: Settings
    isExternal: true
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.PopulateFromSettingsGroup*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.PopulateFromSettingsGroup
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_PopulateFromSettingsGroup_Sdl_Core_Settings_ISettingsGroup_System_String_
  name: PopulateFromSettingsGroup
  nameWithType: ObservableDictionary<TKey, TValue>.PopulateFromSettingsGroup
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.PopulateFromSettingsGroup
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).PopulateFromSettingsGroup
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).PopulateFromSettingsGroup
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_SaveToSettingsGroup_Sdl_Core_Settings_ISettingsGroup_System_String_
  name: SaveToSettingsGroup(ISettingsGroup, string)
  nameWithType: ObservableDictionary<TKey, TValue>.SaveToSettingsGroup(ISettingsGroup, string)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup, string)
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).SaveToSettingsGroup(ISettingsGroup, String)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup, String)
  name.vb: SaveToSettingsGroup(ISettingsGroup, String)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
    name: SaveToSettingsGroup
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_SaveToSettingsGroup_Sdl_Core_Settings_ISettingsGroup_System_String_
  - name: (
  - uid: Sdl.Core.Settings.ISettingsGroup
    name: ISettingsGroup
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
    name: SaveToSettingsGroup
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_SaveToSettingsGroup_Sdl_Core_Settings_ISettingsGroup_System_String_
  - name: (
  - uid: Sdl.Core.Settings.ISettingsGroup
    name: ISettingsGroup
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.ClearDictionaryItemSettings*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.ClearDictionaryItemSettings
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_ClearDictionaryItemSettings_Sdl_Core_Settings_ISettingsGroup_System_String_
  name: ClearDictionaryItemSettings
  nameWithType: ObservableDictionary<TKey, TValue>.ClearDictionaryItemSettings
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.ClearDictionaryItemSettings
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).ClearDictionaryItemSettings
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).ClearDictionaryItemSettings
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetDictionaryItemFromSettings*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.GetDictionaryItemFromSettings
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_GetDictionaryItemFromSettings__1_Sdl_Core_Settings_ISettingsGroup_System_String_System_Boolean__
  name: GetDictionaryItemFromSettings
  nameWithType: ObservableDictionary<TKey, TValue>.GetDictionaryItemFromSettings
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.GetDictionaryItemFromSettings
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).GetDictionaryItemFromSettings
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).GetDictionaryItemFromSettings
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Keys*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Keys
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_Keys
  name: Keys
  nameWithType: ObservableDictionary<TKey, TValue>.Keys
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.Keys
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Keys
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).Keys
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys
  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Keys
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Keys
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.keys
  name: Keys
  nameWithType: IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: IDictionary(Of TKey, TValue).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
- uid: System.Collections.Generic.ICollection{{TKey}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TKey>
  nameWithType: ICollection<TKey>
  fullName: System.Collections.Generic.ICollection<TKey>
  nameWithType.vb: ICollection(Of TKey)
  fullName.vb: System.Collections.Generic.ICollection(Of TKey)
  name.vb: ICollection(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Keys
  commentId: P:System.Collections.Generic.IDictionary`2.Keys
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.keys
  name: Keys
  nameWithType: IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: IDictionary(Of TKey, TValue).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Values*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Values
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_Values
  name: Values
  nameWithType: ObservableDictionary<TKey, TValue>.Values
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.Values
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Values
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).Values
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values
  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Values
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Values
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.values
  name: Values
  nameWithType: IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: IDictionary(Of TKey, TValue).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
- uid: System.Collections.Generic.ICollection{{TValue}}
  commentId: T:System.Collections.Generic.ICollection{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TValue>
  nameWithType: ICollection<TValue>
  fullName: System.Collections.Generic.ICollection<TValue>
  nameWithType.vb: ICollection(Of TValue)
  fullName.vb: System.Collections.Generic.ICollection(Of TValue)
  name.vb: ICollection(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Values
  commentId: P:System.Collections.Generic.IDictionary`2.Values
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.values
  name: Values
  nameWithType: IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: IDictionary(Of TKey, TValue).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Item*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Item
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_Item__0_
  name: this
  nameWithType: ObservableDictionary<TKey, TValue>.this
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.this
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).this[]
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).this[]
  name.vb: this[]
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey})
  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Item(`0)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Item(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  name: this[TKey]
  nameWithType: IDictionary<TKey, TValue>.this[TKey]
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.this[TKey]
  nameWithType.vb: IDictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
  spec.csharp:
  - name: this
  - name: '['
  - name: TKey
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.Item(`0)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Item(`0)
  commentId: P:System.Collections.Generic.IDictionary`2.Item(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  name: this[TKey]
  nameWithType: IDictionary<TKey, TValue>.this[TKey]
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.this[TKey]
  nameWithType.vb: IDictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
  spec.csharp:
  - name: this
  - name: '['
  - name: TKey
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  - name: (
  - name: TKey
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Count*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.Count
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_Count
  name: Count
  nameWithType: ObservableDictionary<TKey, TValue>.Count
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.Count
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Count
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).Count
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Count
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Count
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Count
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Count
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.IsReadOnly*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary`2.IsReadOnly
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary-2.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableDictionary_2_IsReadOnly
  name: IsReadOnly
  nameWithType: ObservableDictionary<TKey, TValue>.IsReadOnly
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary<TKey, TValue>.IsReadOnly
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).IsReadOnly
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableDictionary(Of TKey, TValue).IsReadOnly
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
  commentId: E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
  parent: System.Collections.Specialized.INotifyCollectionChanged
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.inotifycollectionchanged.collectionchanged
  name: CollectionChanged
  nameWithType: INotifyCollectionChanged.CollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
- uid: System.Collections.Specialized.NotifyCollectionChangedEventHandler
  commentId: T:System.Collections.Specialized.NotifyCollectionChangedEventHandler
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventhandler
  name: NotifyCollectionChangedEventHandler
  nameWithType: NotifyCollectionChangedEventHandler
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventHandler
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged.propertychanged
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventhandler
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
