### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
  id: IDependencyFileProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.CurrentFilePath
  - Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.Description
  - Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.DisposableObject
  - Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.ExpectedUsage
  - Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.FileExists
  - Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.Id
  - Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.OriginalFilePath
  - Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.OriginalLastChangeDate
  - Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.PathRelativeToConverted
  - Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.PreferredLinkage
  - Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.ZippedCurrentFile
  langs:
  - csharp
  - vb
  name: IDependencyFileProperties
  nameWithType: IDependencyFileProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
  type: Interface
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: Information on a dependency file used during file conversion.
  remarks: >-
    <p>

    Some examples of dependency files include: 

    <ul><li>The original native file, if needed for generation of translated native file.</li><li>The Filter Framework 1 filter definition file, if required by Filter Framework 1 filter and adapter.</li><li>Image files required to correctly display an HTML file during preview.</li><li>An XML schema required for validation of the output.</li><li>A translation memory that may be used during translation.</li></ul>

    </p>

    <p>

    Dependency files are not processed for localizable content.

    </p>

    <p>

    Information on dependency files is particularly important when moving bilingual

    documents between systems (or even between different locations on the same system). After

    saving a bilingual document <xref href="Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentOutputProperties.LinkedDependencyFiles" data-throw-if-not-resolved="false"></xref>, 

    this contains information on which dependency files (if any) were explicitly linked rather than 

    embedded in the bilingual file.

    </p>
  example: []
  syntax:
    content: 'public interface IDependencyFileProperties : ICloneable'
    content.vb: Public Interface IDependencyFileProperties Inherits ICloneable
  inheritedMembers:
  - System.ICloneable.Clone
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.Id
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.Id
  id: Id
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IDependencyFileProperties.Id
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.Id
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: Id associated with this dependency file. (optional)
  remarks: >-
    <p>

    Can be used by related file type components to ensure that they pick the right

    file to use for the right purpose.

    </p>

    <p>

    To avoid interference between unrelated components working together it is 

    recommended to use a URI as the id.

    </p>
  example: []
  syntax:
    content: string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Id As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.Id*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.FileExists
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.FileExists
  id: FileExists
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
  langs:
  - csharp
  - vb
  name: FileExists
  nameWithType: IDependencyFileProperties.FileExists
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.FileExists
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: >-
    <code>True</code> if the <xref href="Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.CurrentFilePath" data-throw-if-not-resolved="false"></xref> references a file

    that exists.
  example: []
  syntax:
    content: bool FileExists { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property FileExists As Boolean
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.FileExists*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.CurrentFilePath
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.CurrentFilePath
  id: CurrentFilePath
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
  langs:
  - csharp
  - vb
  name: CurrentFilePath
  nameWithType: IDependencyFileProperties.CurrentFilePath
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.CurrentFilePath
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: The current path to the dependency file
  example: []
  syntax:
    content: string CurrentFilePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property CurrentFilePath As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.CurrentFilePath*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.ZippedCurrentFile
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.ZippedCurrentFile
  id: ZippedCurrentFile
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
  langs:
  - csharp
  - vb
  name: ZippedCurrentFile
  nameWithType: IDependencyFileProperties.ZippedCurrentFile
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.ZippedCurrentFile
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: A <xref href="Sdl.FileTypeSupport.Framework.FileJanitor" data-throw-if-not-resolved="false"></xref> instance managing the lifetime of a temporary .zip file containing a copy of the file stored in <xref href="Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.CurrentFilePath" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    <p>

    The zipped file is generated on demand, and will also be deleted during garbage collection.

    </p>
  example: []
  syntax:
    content: FileJanitor ZippedCurrentFile { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.FileJanitor
    content.vb: ReadOnly Property ZippedCurrentFile As FileJanitor
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.ZippedCurrentFile*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.OriginalFilePath
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.OriginalFilePath
  id: OriginalFilePath
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
  langs:
  - csharp
  - vb
  name: OriginalFilePath
  nameWithType: IDependencyFileProperties.OriginalFilePath
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.OriginalFilePath
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: The original path of the dependency file (if known)
  remarks: >-
    <p>

    Temporarily generated dependency files may not have an original file path.

    </p>
  example: []
  syntax:
    content: string OriginalFilePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property OriginalFilePath As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.OriginalFilePath*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.OriginalLastChangeDate
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.OriginalLastChangeDate
  id: OriginalLastChangeDate
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
  langs:
  - csharp
  - vb
  name: OriginalLastChangeDate
  nameWithType: IDependencyFileProperties.OriginalLastChangeDate
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.OriginalLastChangeDate
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: The timestamp (the last change date) of the original dependency file (if known)
  example: []
  syntax:
    content: DateTime OriginalLastChangeDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Property OriginalLastChangeDate As Date
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.OriginalLastChangeDate*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.PathRelativeToConverted
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.PathRelativeToConverted
  id: PathRelativeToConverted
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
  langs:
  - csharp
  - vb
  name: PathRelativeToConverted
  nameWithType: IDependencyFileProperties.PathRelativeToConverted
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.PathRelativeToConverted
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: >-
    If the file is a direct dependency of the file being converted, and it is linked rather than embedded,

    then this property may contain the path to the linked dependency file relative to the .sdlxliff file

    that refers to it.
  remarks: >-
    <p>

    This property can be <code>null</code> if no relative path should be associated with

    this dependency.

    </p>
  example: []
  syntax:
    content: string PathRelativeToConverted { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property PathRelativeToConverted As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.PathRelativeToConverted*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.Description
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.Description
  id: Description
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: IDependencyFileProperties.Description
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.Description
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: >-
    Optional clear text description of the file. This can be used e.g. to explain 

    the origin and purpose of the file to other users and developers.
  example: []
  syntax:
    content: string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Description As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.Description*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.ExpectedUsage
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.ExpectedUsage
  id: ExpectedUsage
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
  langs:
  - csharp
  - vb
  name: ExpectedUsage
  nameWithType: IDependencyFileProperties.ExpectedUsage
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.ExpectedUsage
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: Expected usage for this dependency file (optional)
  remarks: >-
    <p>

    This does not limit the possible usage of the file, it merely serves as a hint on

    what it is used for.

    </p>
  example: []
  syntax:
    content: DependencyFileUsage ExpectedUsage { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.DependencyFileUsage
    content.vb: Property ExpectedUsage As DependencyFileUsage
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.ExpectedUsage*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.PreferredLinkage
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.PreferredLinkage
  id: PreferredLinkage
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
  langs:
  - csharp
  - vb
  name: PreferredLinkage
  nameWithType: IDependencyFileProperties.PreferredLinkage
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.PreferredLinkage
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: >-
    Indicates the preferred way of handling this file when writing intermediate

    bilingual content. (optional)
  remarks: >-
    <p>

    Set this value e.g. to specifically request that the dependency file gets 

    referenced as an external link rather than being embedded when saving 

    to an intermediate bilingual format such as SDL XLIFF.

    </p>

    <p>

    Note that this serves as a recommendation only, the writer is not 

    required to honor this setting. For some file formats it may e.g. not

    be possible to embed dependency files. The host application needs to check

    the properties of the writer after conversion to find out which 

    external dependencies it produced.

    </p>
  example: []
  syntax:
    content: DependencyFileLinkOption PreferredLinkage { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.DependencyFileLinkOption
    content.vb: Property PreferredLinkage As DependencyFileLinkOption
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.PreferredLinkage*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.DisposableObject
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.DisposableObject
  id: DisposableObject
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
  langs:
  - csharp
  - vb
  name: DisposableObject
  nameWithType: IDependencyFileProperties.DisposableObject
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.DisposableObject
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: >-
    This property can be used to hold a reference to a disposable object,

    such as a temp file that should be deleted when it has no more references. (optional)
  remarks: >-
    <p>

    You can assign a temp file object with a finalizer that deletes the temp file to

    this property, and the file should be kept alive as long as anyone has

    a reference to it (unless, of course, someone explicitly calls <code>Dispose</code> on it).

    </p>

    <p>

    Normally, users should NOT explicitly invoke <code>Dispose</code> on this object,

    as it may still be referenced by others. The <code>IDisposable</code> interface

    is used here mainly to indicate that the object is expected

    to do some clean-up work at some point when it is no longer needed.

    </p>

    <p>

    This property is (for obvious reasons) not serialized.

    </p>
  example: []
  syntax:
    content: IDisposable DisposableObject { get; set; }
    parameters: []
    return:
      type: System.IDisposable
    content.vb: Property DisposableObject As IDisposable
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.DisposableObject*
references:
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentOutputProperties.LinkedDependencyFiles
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentOutputProperties.LinkedDependencyFiles
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentOutputProperties.html#Sdl_FileTypeSupport_Framework_BilingualApi_IBilingualDocumentOutputProperties_LinkedDependencyFiles
  name: LinkedDependencyFiles
  nameWithType: IBilingualDocumentOutputProperties.LinkedDependencyFiles
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentOutputProperties.LinkedDependencyFiles
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  href: Sdl.html
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.NativeApi
    name: NativeApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.NativeApi
    name: NativeApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.html
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.Id*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.Id
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.html#Sdl_FileTypeSupport_Framework_NativeApi_IDependencyFileProperties_Id
  name: Id
  nameWithType: IDependencyFileProperties.Id
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.CurrentFilePath
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.CurrentFilePath
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.html#Sdl_FileTypeSupport_Framework_NativeApi_IDependencyFileProperties_CurrentFilePath
  name: CurrentFilePath
  nameWithType: IDependencyFileProperties.CurrentFilePath
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.CurrentFilePath
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.FileExists*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.FileExists
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.html#Sdl_FileTypeSupport_Framework_NativeApi_IDependencyFileProperties_FileExists
  name: FileExists
  nameWithType: IDependencyFileProperties.FileExists
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.FileExists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.CurrentFilePath*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.CurrentFilePath
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.html#Sdl_FileTypeSupport_Framework_NativeApi_IDependencyFileProperties_CurrentFilePath
  name: CurrentFilePath
  nameWithType: IDependencyFileProperties.CurrentFilePath
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.CurrentFilePath
- uid: Sdl.FileTypeSupport.Framework.FileJanitor
  commentId: T:Sdl.FileTypeSupport.Framework.FileJanitor
  parent: Sdl.FileTypeSupport.Framework
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.FileJanitor.html
  name: FileJanitor
  nameWithType: FileJanitor
  fullName: Sdl.FileTypeSupport.Framework.FileJanitor
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.ZippedCurrentFile*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.ZippedCurrentFile
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.html#Sdl_FileTypeSupport_Framework_NativeApi_IDependencyFileProperties_ZippedCurrentFile
  name: ZippedCurrentFile
  nameWithType: IDependencyFileProperties.ZippedCurrentFile
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.ZippedCurrentFile
- uid: Sdl.FileTypeSupport.Framework
  commentId: N:Sdl.FileTypeSupport.Framework
  isExternal: true
  href: Sdl.html
  name: Sdl.FileTypeSupport.Framework
  nameWithType: Sdl.FileTypeSupport.Framework
  fullName: Sdl.FileTypeSupport.Framework
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.OriginalFilePath*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.OriginalFilePath
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.html#Sdl_FileTypeSupport_Framework_NativeApi_IDependencyFileProperties_OriginalFilePath
  name: OriginalFilePath
  nameWithType: IDependencyFileProperties.OriginalFilePath
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.OriginalFilePath
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.OriginalLastChangeDate*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.OriginalLastChangeDate
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.html#Sdl_FileTypeSupport_Framework_NativeApi_IDependencyFileProperties_OriginalLastChangeDate
  name: OriginalLastChangeDate
  nameWithType: IDependencyFileProperties.OriginalLastChangeDate
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.OriginalLastChangeDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.PathRelativeToConverted*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.PathRelativeToConverted
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.html#Sdl_FileTypeSupport_Framework_NativeApi_IDependencyFileProperties_PathRelativeToConverted
  name: PathRelativeToConverted
  nameWithType: IDependencyFileProperties.PathRelativeToConverted
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.PathRelativeToConverted
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.Description*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.Description
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.html#Sdl_FileTypeSupport_Framework_NativeApi_IDependencyFileProperties_Description
  name: Description
  nameWithType: IDependencyFileProperties.Description
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.Description
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.ExpectedUsage*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.ExpectedUsage
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.html#Sdl_FileTypeSupport_Framework_NativeApi_IDependencyFileProperties_ExpectedUsage
  name: ExpectedUsage
  nameWithType: IDependencyFileProperties.ExpectedUsage
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.ExpectedUsage
- uid: Sdl.FileTypeSupport.Framework.NativeApi.DependencyFileUsage
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.DependencyFileUsage
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.DependencyFileUsage.html
  name: DependencyFileUsage
  nameWithType: DependencyFileUsage
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.DependencyFileUsage
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.PreferredLinkage*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.PreferredLinkage
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.html#Sdl_FileTypeSupport_Framework_NativeApi_IDependencyFileProperties_PreferredLinkage
  name: PreferredLinkage
  nameWithType: IDependencyFileProperties.PreferredLinkage
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.PreferredLinkage
- uid: Sdl.FileTypeSupport.Framework.NativeApi.DependencyFileLinkOption
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.DependencyFileLinkOption
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.DependencyFileLinkOption.html
  name: DependencyFileLinkOption
  nameWithType: DependencyFileLinkOption
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.DependencyFileLinkOption
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.DisposableObject*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.DisposableObject
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.html#Sdl_FileTypeSupport_Framework_NativeApi_IDependencyFileProperties_DisposableObject
  name: DisposableObject
  nameWithType: IDependencyFileProperties.DisposableObject
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties.DisposableObject
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
