### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileUtils
  commentId: T:Sdl.FileTypeSupport.Framework.PreviewControls.TempFileUtils
  id: TempFileUtils
  parent: Sdl.FileTypeSupport.Framework.PreviewControls
  children:
  - Sdl.FileTypeSupport.Framework.PreviewControls.TempFileUtils.GetModifiedTempFilePath(System.String[],System.String)
  langs:
  - csharp
  - vb
  name: TempFileUtils
  nameWithType: TempFileUtils
  fullName: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileUtils
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.PreviewControls
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.PreviewControls
  namespace: Sdl.FileTypeSupport.Framework.PreviewControls
  summary: "\nNamespace for methods that have to do with temporary file manipulations.\n"
  syntax:
    content: public static class TempFileUtils
    content.vb: Public Module TempFileUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileUtils.GetModifiedTempFilePath(System.String[],System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.PreviewControls.TempFileUtils.GetModifiedTempFilePath(System.String[],System.String)
  id: GetModifiedTempFilePath(System.String[],System.String)
  parent: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileUtils
  langs:
  - csharp
  - vb
  name: GetModifiedTempFilePath(String[], String)
  nameWithType: TempFileUtils.GetModifiedTempFilePath(String[], String)
  fullName: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileUtils.GetModifiedTempFilePath(System.String[], System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.PreviewControls
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.PreviewControls
  namespace: Sdl.FileTypeSupport.Framework.PreviewControls
  summary: "\nConstruct a temp file name based on an original file name (which may include a path).\nThis can optionally be done using a list of file extension mappings given in extensionMaps parameter.\n"
  syntax:
    content: public static string GetModifiedTempFilePath(string[] extensionMaps, string originalFilePath)
    parameters:
    - id: extensionMaps
      type: System.String[]
      description: "\n<p>\nA list of file extension maps that can be used to map the original filename extension to a new file extension\nthat can be used for previews.\n</p>\n<p>\nEach string in the extensionMaps array can either be in two formats.  This first is \nthe original file extension followed by &apos;|&apos; and then the new file extension that will be used for a preview.  This will\ngenerate preview files using the second extension for all previews of file with the original file that matches first extension.  E.g.\n<pre><code>&quot;.txt | .htm&quot;</code></pre>\nWill preview all .txt files by generating the a temp file using the .htm extension.\n</p>\n<p>\nThe second format that can be used for a string in the extensionMaps array is simply the file extension to be used for\nthe preview and all original file extensions will be previewed using this preview file extension. E.g.\n<pre><code>&quot;.html&quot;</code></pre>\n</p>\n"
    - id: originalFilePath
      type: System.String
      description: "\nThe original file path of the file being previewed.\n"
    return:
      type: System.String
      description: "\nA tempoary file name that can be used to generate a preview.\n"
    content.vb: Public Shared Function GetModifiedTempFilePath(extensionMaps As String(), originalFilePath As String) As String
  overload: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileUtils.GetModifiedTempFilePath*
  nameWithType.vb: TempFileUtils.GetModifiedTempFilePath(String(), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileUtils.GetModifiedTempFilePath(System.String(), System.String)
  name.vb: GetModifiedTempFilePath(String(), String)
references:
- uid: Sdl.FileTypeSupport.Framework.PreviewControls
  commentId: N:Sdl.FileTypeSupport.Framework.PreviewControls
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.PreviewControls
  nameWithType: Sdl.FileTypeSupport.Framework.PreviewControls
  fullName: Sdl.FileTypeSupport.Framework.PreviewControls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileUtils.GetModifiedTempFilePath*
  commentId: Overload:Sdl.FileTypeSupport.Framework.PreviewControls.TempFileUtils.GetModifiedTempFilePath
  isExternal: true
  name: GetModifiedTempFilePath
  nameWithType: TempFileUtils.GetModifiedTempFilePath
  fullName: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileUtils.GetModifiedTempFilePath
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
