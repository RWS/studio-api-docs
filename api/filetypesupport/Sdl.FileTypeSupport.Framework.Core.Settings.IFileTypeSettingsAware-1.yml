### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeSettingsAware`1
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeSettingsAware`1
  id: IFileTypeSettingsAware`1
  parent: Sdl.FileTypeSupport.Framework.Core.Settings
  children:
  - Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeSettingsAware`1.Settings
  langs:
  - csharp
  - vb
  name: IFileTypeSettingsAware<SettingsType>
  nameWithType: IFileTypeSettingsAware<SettingsType>
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeSettingsAware<SettingsType>
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nThis interface may be implemented by file type settings controls to provide\naccess to the settings.\n"
  remarks: "\n<p>\nImplementing this interface is optional, but recommended, as it provides a standardized way to \ncommunicate settings to the control, which can be used by standard implementations such as \n<code>AbstractFileTypeSettingsPage</code>.\n</p>\n"
  syntax:
    content: >-
      public interface IFileTypeSettingsAware<SettingsType>
          where SettingsType : FileTypeSettingsBase
    typeParameters:
    - id: SettingsType
    content.vb: Public Interface IFileTypeSettingsAware(Of SettingsType As FileTypeSettingsBase)
  nameWithType.vb: IFileTypeSettingsAware(Of SettingsType)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeSettingsAware(Of SettingsType)
  name.vb: IFileTypeSettingsAware(Of SettingsType)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeSettingsAware`1.Settings
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeSettingsAware`1.Settings
  id: Settings
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeSettingsAware`1
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: IFileTypeSettingsAware<SettingsType>.Settings
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeSettingsAware<SettingsType>.Settings
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nThe settings\n"
  syntax:
    content: SettingsType Settings { get; set; }
    parameters: []
    return:
      type: '{SettingsType}'
    content.vb: Property Settings As SettingsType
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeSettingsAware`1.Settings*
  nameWithType.vb: IFileTypeSettingsAware(Of SettingsType).Settings
  modifiers.csharp:
  - get
  - set
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeSettingsAware(Of SettingsType).Settings
references:
- uid: Sdl.FileTypeSupport.Framework.Core.Settings
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Settings
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Core.Settings
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Settings
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeSettingsAware`1.Settings*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeSettingsAware`1.Settings
  isExternal: true
  name: Settings
  nameWithType: IFileTypeSettingsAware<SettingsType>.Settings
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeSettingsAware<SettingsType>.Settings
  nameWithType.vb: IFileTypeSettingsAware(Of SettingsType).Settings
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.IFileTypeSettingsAware(Of SettingsType).Settings
- uid: '{SettingsType}'
  commentId: '!:SettingsType'
  definition: SettingsType
  name: SettingsType
  nameWithType: SettingsType
  fullName: SettingsType
- uid: SettingsType
  name: SettingsType
  nameWithType: SettingsType
  fullName: SettingsType
