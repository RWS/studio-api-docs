### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution
  id: IdConflictResolution
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution.ReplaceExisting
  - Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution.ThrowException
  langs:
  - csharp
  - vb
  name: IdConflictResolution
  nameWithType: IdConflictResolution
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution
  type: Enum
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nIndicates how conflicting ids should be handled in calls to <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.ISharedObjects.PublishSharedObject(System.String%2cSystem.Object%2cSdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public enum IdConflictResolution
    content.vb: Public Enum IdConflictResolution
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution.ReplaceExisting
  commentId: F:Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution.ReplaceExisting
  id: ReplaceExisting
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution
  langs:
  - csharp
  - vb
  name: ReplaceExisting
  nameWithType: IdConflictResolution.ReplaceExisting
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution.ReplaceExisting
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe object being published replaces the existing object with the same id.\n"
  syntax:
    content: ReplaceExisting = 0
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution.ThrowException
  commentId: F:Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution.ThrowException
  id: ThrowException
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution
  langs:
  - csharp
  - vb
  name: ThrowException
  nameWithType: IdConflictResolution.ThrowException
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution.ThrowException
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nA <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.ConflictingIdException\" data-throw-if-not-resolved=\"false\"></xref> is thrown if an object with the same\nid already is shared.\n"
  syntax:
    content: ThrowException = 1
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IdConflictResolution
  nameWithType: IdConflictResolution
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution
