### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair
  id: ITagPair
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  children:
  - Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.EndTagProperties
  - Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.EndTagRevisionProperties
  - Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.IsEndTagGhost
  - Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.IsStartTagGhost
  - Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.StartTagProperties
  - Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.StartTagRevisionProperties
  langs:
  - csharp
  - vb
  name: ITagPair
  nameWithType: ITagPair
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nA pair of tags (i.e. start and end) in the bilingual content model, with the content enclosed by the tag pair\n"
  syntax:
    content: 'public interface ITagPair : IAbstractTag, IAbstractDataContent, IAbstractMarkupData, ICloneable, IAbstractMarkupDataContainer, ISupportsUniqueId, IList<IAbstractMarkupData>, ICollection<IAbstractMarkupData>, IEnumerable<IAbstractMarkupData>, IEnumerable'
    content.vb: >-
      Public Interface ITagPair
          Inherits IAbstractTag, IAbstractDataContent, IAbstractMarkupData, ICloneable, ISupportsUniqueId, IAbstractMarkupDataContainer, IList(Of IAbstractMarkupData), ICollection(Of IAbstractMarkupData), IEnumerable(Of IAbstractMarkupData), IEnumerable
  inheritedMembers:
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.AddSubSegmentReference(Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.AddSubSegmentReferences(System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference})
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.RemoveSubSegmentReference(Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.ClearSubSegmentReferences
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.SubSegments
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.TagProperties
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.HasSubSegmentReferences
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.AcceptVisitor(Sdl.FileTypeSupport.Framework.BilingualApi.IMarkupDataVisitor)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.RemoveFromParent
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.Parent
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.IndexInParent
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.ParentParagraph
  - System.ICloneable.Clone
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(System.Int32)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32,System.Int32)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.GetLocationsFrom(Sdl.FileTypeSupport.Framework.BilingualApi.Location)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(Sdl.FileTypeSupport.Framework.BilingualApi.Location,System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem(System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.AllSubItems
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.CanBeSplit
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Locations
  - Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.UniqueId
  - System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.IndexOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  - System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Insert(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  - System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.RemoveAt(System.Int32)
  - System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Item(System.Int32)
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Add(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Clear
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Contains(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.CopyTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData[],System.Int32)
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Remove(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Count
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.IsReadOnly
  - System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.GetEnumerator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.StartTagProperties
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.StartTagProperties
  id: StartTagProperties
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair
  langs:
  - csharp
  - vb
  name: StartTagProperties
  nameWithType: ITagPair.StartTagProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.StartTagProperties
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nThe tag properties communicated by the native file processing components that refer to the start tag of the paired tags\n"
  syntax:
    content: IStartTagProperties StartTagProperties { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties
    content.vb: Property StartTagProperties As IStartTagProperties
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.StartTagProperties*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.StartTagRevisionProperties
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.StartTagRevisionProperties
  id: StartTagRevisionProperties
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair
  langs:
  - csharp
  - vb
  name: StartTagRevisionProperties
  nameWithType: ITagPair.StartTagRevisionProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.StartTagRevisionProperties
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nRevision information that is directly associated with the start tag, or <code>null</code> if none\n"
  syntax:
    content: IRevisionProperties StartTagRevisionProperties { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties
    content.vb: Property StartTagRevisionProperties As IRevisionProperties
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.StartTagRevisionProperties*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.IsStartTagGhost
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.IsStartTagGhost
  id: IsStartTagGhost
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair
  langs:
  - csharp
  - vb
  name: IsStartTagGhost
  nameWithType: ITagPair.IsStartTagGhost
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.IsStartTagGhost
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\n<p>When true, the start tag of the tag pair has ghost status.</p>\n<p>\nGhost tags occur when either the start tag or the end tag of a tag pair has been deleted. \nSuch operations would leave the tag pair in an invalid state until either the remaining start or end\ntag has been removed too (provided that the entire tag pair can be deleted properly). SDL Trados Studio supports\nthis behavior in the editor by leaving the tag pair in place until both start\nand end tags have been deleted. While only one tag of a pair has been deleted, the &quot;deleted&quot; tag is\ntemporarily marked as a (transparent) &quot;ghost&quot; tag, but retains its position.\n</p>\n"
  remarks: "\n<p>\nUnder normal circumstances, tags should never have ghost status, however,\nwe still need to support serialization of the ghost status when saving files\nto an intermediate bilingual format, which is why this interface had to be introduced.\n</p>\n"
  syntax:
    content: bool IsStartTagGhost { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsStartTagGhost As Boolean
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.IsStartTagGhost*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.EndTagProperties
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.EndTagProperties
  id: EndTagProperties
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair
  langs:
  - csharp
  - vb
  name: EndTagProperties
  nameWithType: ITagPair.EndTagProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.EndTagProperties
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nThe tag properties communicated from the native file processing components that refer to the end tag of the paired tags\n"
  syntax:
    content: IEndTagProperties EndTagProperties { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties
    content.vb: Property EndTagProperties As IEndTagProperties
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.EndTagProperties*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.EndTagRevisionProperties
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.EndTagRevisionProperties
  id: EndTagRevisionProperties
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair
  langs:
  - csharp
  - vb
  name: EndTagRevisionProperties
  nameWithType: ITagPair.EndTagRevisionProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.EndTagRevisionProperties
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nRevision information directly associated with the end tag, or <code>null</code> if none\n"
  syntax:
    content: IRevisionProperties EndTagRevisionProperties { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties
    content.vb: Property EndTagRevisionProperties As IRevisionProperties
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.EndTagRevisionProperties*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.IsEndTagGhost
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.IsEndTagGhost
  id: IsEndTagGhost
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair
  langs:
  - csharp
  - vb
  name: IsEndTagGhost
  nameWithType: ITagPair.IsEndTagGhost
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.IsEndTagGhost
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nWhen true, the end tag of the tag pair has ghost status.\n<p>\nGhost tags occur when either the start tag or the end tag of a tag pair has been deleted. \nSuch operations would leave the tag pair in an invalid state until either the remaining start or end\ntag has been removed too (provided that the entire tag pair can be deleted properly). SDL Trados Studio supports\nthis behavior in the editor by leaving the tag pair in place until both start\nand end tags have been deleted. While only one tag of a pair has been deleted, the &quot;deleted&quot; tag is\ntemporarily marked as a (transparent) &quot;ghost&quot; tag, but retains its position.\n</p>\n"
  remarks: "\n<p>\nUnder normal circumstances, tags should never have ghost status, however,\nwe still need to support serialization of the ghost status when saving files\nto an intermediate bilingual format, which is why this interface had to be introduced.\n</p>\n"
  syntax:
    content: bool IsEndTagGhost { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsEndTagGhost As Boolean
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.IsEndTagGhost*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.FileTypeSupport.Framework.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.AddSubSegmentReference(Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.AddSubSegmentReference(Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag
  isExternal: true
  name: AddSubSegmentReference(ISubSegmentReference)
  nameWithType: IAbstractTag.AddSubSegmentReference(ISubSegmentReference)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.AddSubSegmentReference(Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.AddSubSegmentReference(Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference)
    name: AddSubSegmentReference
    nameWithType: IAbstractTag.AddSubSegmentReference
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.AddSubSegmentReference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference
    name: ISubSegmentReference
    nameWithType: ISubSegmentReference
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.AddSubSegmentReference(Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference)
    name: AddSubSegmentReference
    nameWithType: IAbstractTag.AddSubSegmentReference
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.AddSubSegmentReference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference
    name: ISubSegmentReference
    nameWithType: ISubSegmentReference
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.AddSubSegmentReferences(System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference})
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.AddSubSegmentReferences(System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference})
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag
  isExternal: true
  name: AddSubSegmentReferences(IEnumerable<ISubSegmentReference>)
  nameWithType: IAbstractTag.AddSubSegmentReferences(IEnumerable<ISubSegmentReference>)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.AddSubSegmentReferences(System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference>)
  nameWithType.vb: IAbstractTag.AddSubSegmentReferences(IEnumerable(Of ISubSegmentReference))
  fullName.vb: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.AddSubSegmentReferences(System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference))
  name.vb: AddSubSegmentReferences(IEnumerable(Of ISubSegmentReference))
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.AddSubSegmentReferences(System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference})
    name: AddSubSegmentReferences
    nameWithType: IAbstractTag.AddSubSegmentReferences
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.AddSubSegmentReferences
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference
    name: ISubSegmentReference
    nameWithType: ISubSegmentReference
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.AddSubSegmentReferences(System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference})
    name: AddSubSegmentReferences
    nameWithType: IAbstractTag.AddSubSegmentReferences
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.AddSubSegmentReferences
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference
    name: ISubSegmentReference
    nameWithType: ISubSegmentReference
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.RemoveSubSegmentReference(Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.RemoveSubSegmentReference(Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag
  isExternal: true
  name: RemoveSubSegmentReference(ISubSegmentReference)
  nameWithType: IAbstractTag.RemoveSubSegmentReference(ISubSegmentReference)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.RemoveSubSegmentReference(Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.RemoveSubSegmentReference(Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference)
    name: RemoveSubSegmentReference
    nameWithType: IAbstractTag.RemoveSubSegmentReference
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.RemoveSubSegmentReference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference
    name: ISubSegmentReference
    nameWithType: ISubSegmentReference
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.RemoveSubSegmentReference(Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference)
    name: RemoveSubSegmentReference
    nameWithType: IAbstractTag.RemoveSubSegmentReference
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.RemoveSubSegmentReference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference
    name: ISubSegmentReference
    nameWithType: ISubSegmentReference
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISubSegmentReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.ClearSubSegmentReferences
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.ClearSubSegmentReferences
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag
  isExternal: true
  name: ClearSubSegmentReferences()
  nameWithType: IAbstractTag.ClearSubSegmentReferences()
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.ClearSubSegmentReferences()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.ClearSubSegmentReferences
    name: ClearSubSegmentReferences
    nameWithType: IAbstractTag.ClearSubSegmentReferences
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.ClearSubSegmentReferences
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.ClearSubSegmentReferences
    name: ClearSubSegmentReferences
    nameWithType: IAbstractTag.ClearSubSegmentReferences
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.ClearSubSegmentReferences
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.SubSegments
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.SubSegments
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag
  isExternal: true
  name: SubSegments
  nameWithType: IAbstractTag.SubSegments
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.SubSegments
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.TagProperties
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.TagProperties
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag
  isExternal: true
  name: TagProperties
  nameWithType: IAbstractTag.TagProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.TagProperties
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.HasSubSegmentReferences
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.HasSubSegmentReferences
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag
  isExternal: true
  name: HasSubSegmentReferences
  nameWithType: IAbstractTag.HasSubSegmentReferences
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag.HasSubSegmentReferences
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.AcceptVisitor(Sdl.FileTypeSupport.Framework.BilingualApi.IMarkupDataVisitor)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.AcceptVisitor(Sdl.FileTypeSupport.Framework.BilingualApi.IMarkupDataVisitor)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
  isExternal: true
  name: AcceptVisitor(IMarkupDataVisitor)
  nameWithType: IAbstractMarkupData.AcceptVisitor(IMarkupDataVisitor)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.AcceptVisitor(Sdl.FileTypeSupport.Framework.BilingualApi.IMarkupDataVisitor)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.AcceptVisitor(Sdl.FileTypeSupport.Framework.BilingualApi.IMarkupDataVisitor)
    name: AcceptVisitor
    nameWithType: IAbstractMarkupData.AcceptVisitor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.AcceptVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IMarkupDataVisitor
    name: IMarkupDataVisitor
    nameWithType: IMarkupDataVisitor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IMarkupDataVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.AcceptVisitor(Sdl.FileTypeSupport.Framework.BilingualApi.IMarkupDataVisitor)
    name: AcceptVisitor
    nameWithType: IAbstractMarkupData.AcceptVisitor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.AcceptVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IMarkupDataVisitor
    name: IMarkupDataVisitor
    nameWithType: IMarkupDataVisitor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IMarkupDataVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.RemoveFromParent
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.RemoveFromParent
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
  isExternal: true
  name: RemoveFromParent()
  nameWithType: IAbstractMarkupData.RemoveFromParent()
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.RemoveFromParent()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.RemoveFromParent
    name: RemoveFromParent
    nameWithType: IAbstractMarkupData.RemoveFromParent
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.RemoveFromParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.RemoveFromParent
    name: RemoveFromParent
    nameWithType: IAbstractMarkupData.RemoveFromParent
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.RemoveFromParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.Parent
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.Parent
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
  isExternal: true
  name: Parent
  nameWithType: IAbstractMarkupData.Parent
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.Parent
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.IndexInParent
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.IndexInParent
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
  isExternal: true
  name: IndexInParent
  nameWithType: IAbstractMarkupData.IndexInParent
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.IndexInParent
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.ParentParagraph
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.ParentParagraph
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
  isExternal: true
  name: ParentParagraph
  nameWithType: IAbstractMarkupData.ParentParagraph
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.ParentParagraph
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(System.Int32)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  isExternal: true
  name: Split(Int32)
  nameWithType: IAbstractMarkupDataContainer.Split(Int32)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(System.Int32)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(System.Int32)
    name: Split
    nameWithType: IAbstractMarkupDataContainer.Split
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(System.Int32)
    name: Split
    nameWithType: IAbstractMarkupDataContainer.Split
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  isExternal: true
  name: MoveAllItemsTo(IAbstractMarkupDataContainer)
  nameWithType: IAbstractMarkupDataContainer.MoveAllItemsTo(IAbstractMarkupDataContainer)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
    name: MoveAllItemsTo
    nameWithType: IAbstractMarkupDataContainer.MoveAllItemsTo
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    name: IAbstractMarkupDataContainer
    nameWithType: IAbstractMarkupDataContainer
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
    name: MoveAllItemsTo
    nameWithType: IAbstractMarkupDataContainer.MoveAllItemsTo
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    name: IAbstractMarkupDataContainer
    nameWithType: IAbstractMarkupDataContainer
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  isExternal: true
  name: MoveAllItemsTo(IAbstractMarkupDataContainer, Int32)
  nameWithType: IAbstractMarkupDataContainer.MoveAllItemsTo(IAbstractMarkupDataContainer, Int32)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer, System.Int32)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32)
    name: MoveAllItemsTo
    nameWithType: IAbstractMarkupDataContainer.MoveAllItemsTo
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    name: IAbstractMarkupDataContainer
    nameWithType: IAbstractMarkupDataContainer
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32)
    name: MoveAllItemsTo
    nameWithType: IAbstractMarkupDataContainer.MoveAllItemsTo
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    name: IAbstractMarkupDataContainer
    nameWithType: IAbstractMarkupDataContainer
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  isExternal: true
  name: MoveItemsTo(IAbstractMarkupDataContainer, Int32, Int32)
  nameWithType: IAbstractMarkupDataContainer.MoveItemsTo(IAbstractMarkupDataContainer, Int32, Int32)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer, System.Int32, System.Int32)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32)
    name: MoveItemsTo
    nameWithType: IAbstractMarkupDataContainer.MoveItemsTo
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    name: IAbstractMarkupDataContainer
    nameWithType: IAbstractMarkupDataContainer
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32)
    name: MoveItemsTo
    nameWithType: IAbstractMarkupDataContainer.MoveItemsTo
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    name: IAbstractMarkupDataContainer
    nameWithType: IAbstractMarkupDataContainer
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32,System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32,System.Int32)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  isExternal: true
  name: MoveItemsTo(IAbstractMarkupDataContainer, Int32, Int32, Int32)
  nameWithType: IAbstractMarkupDataContainer.MoveItemsTo(IAbstractMarkupDataContainer, Int32, Int32, Int32)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32,System.Int32)
    name: MoveItemsTo
    nameWithType: IAbstractMarkupDataContainer.MoveItemsTo
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    name: IAbstractMarkupDataContainer
    nameWithType: IAbstractMarkupDataContainer
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32,System.Int32)
    name: MoveItemsTo
    nameWithType: IAbstractMarkupDataContainer.MoveItemsTo
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    name: IAbstractMarkupDataContainer
    nameWithType: IAbstractMarkupDataContainer
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.GetLocationsFrom(Sdl.FileTypeSupport.Framework.BilingualApi.Location)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.GetLocationsFrom(Sdl.FileTypeSupport.Framework.BilingualApi.Location)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  isExternal: true
  name: GetLocationsFrom(Location)
  nameWithType: IAbstractMarkupDataContainer.GetLocationsFrom(Location)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.GetLocationsFrom(Sdl.FileTypeSupport.Framework.BilingualApi.Location)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.GetLocationsFrom(Sdl.FileTypeSupport.Framework.BilingualApi.Location)
    name: GetLocationsFrom
    nameWithType: IAbstractMarkupDataContainer.GetLocationsFrom
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.GetLocationsFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    name: Location
    nameWithType: Location
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.GetLocationsFrom(Sdl.FileTypeSupport.Framework.BilingualApi.Location)
    name: GetLocationsFrom
    nameWithType: IAbstractMarkupDataContainer.GetLocationsFrom
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.GetLocationsFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    name: Location
    nameWithType: Location
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  isExternal: true
  name: Find(Predicate<Location>)
  nameWithType: IAbstractMarkupDataContainer.Find(Predicate<Location>)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate<Sdl.FileTypeSupport.Framework.BilingualApi.Location>)
  nameWithType.vb: IAbstractMarkupDataContainer.Find(Predicate(Of Location))
  fullName.vb: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate(Of Sdl.FileTypeSupport.Framework.BilingualApi.Location))
  name.vb: Find(Predicate(Of Location))
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
    name: Find
    nameWithType: IAbstractMarkupDataContainer.Find
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    name: Location
    nameWithType: Location
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
    name: Find
    nameWithType: IAbstractMarkupDataContainer.Find
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    name: Location
    nameWithType: Location
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  isExternal: true
  name: Find(Predicate<IAbstractMarkupData>)
  nameWithType: IAbstractMarkupDataContainer.Find(Predicate<IAbstractMarkupData>)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>)
  nameWithType.vb: IAbstractMarkupDataContainer.Find(Predicate(Of IAbstractMarkupData))
  fullName.vb: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData))
  name.vb: Find(Predicate(Of IAbstractMarkupData))
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
    name: Find
    nameWithType: IAbstractMarkupDataContainer.Find
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
    name: Find
    nameWithType: IAbstractMarkupDataContainer.Find
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(Sdl.FileTypeSupport.Framework.BilingualApi.Location,System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(Sdl.FileTypeSupport.Framework.BilingualApi.Location,System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  isExternal: true
  name: Find(Location, Predicate<Location>)
  nameWithType: IAbstractMarkupDataContainer.Find(Location, Predicate<Location>)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(Sdl.FileTypeSupport.Framework.BilingualApi.Location, System.Predicate<Sdl.FileTypeSupport.Framework.BilingualApi.Location>)
  nameWithType.vb: IAbstractMarkupDataContainer.Find(Location, Predicate(Of Location))
  fullName.vb: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(Sdl.FileTypeSupport.Framework.BilingualApi.Location, System.Predicate(Of Sdl.FileTypeSupport.Framework.BilingualApi.Location))
  name.vb: Find(Location, Predicate(Of Location))
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(Sdl.FileTypeSupport.Framework.BilingualApi.Location,System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
    name: Find
    nameWithType: IAbstractMarkupDataContainer.Find
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    name: Location
    nameWithType: Location
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    name: Location
    nameWithType: Location
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(Sdl.FileTypeSupport.Framework.BilingualApi.Location,System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
    name: Find
    nameWithType: IAbstractMarkupDataContainer.Find
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    name: Location
    nameWithType: Location
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    name: Location
    nameWithType: Location
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem(System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem(System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  isExternal: true
  name: ForEachSubItem(Action<IAbstractMarkupData>)
  nameWithType: IAbstractMarkupDataContainer.ForEachSubItem(Action<IAbstractMarkupData>)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem(System.Action<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>)
  nameWithType.vb: IAbstractMarkupDataContainer.ForEachSubItem(Action(Of IAbstractMarkupData))
  fullName.vb: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem(System.Action(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData))
  name.vb: ForEachSubItem(Action(Of IAbstractMarkupData))
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem(System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
    name: ForEachSubItem
    nameWithType: IAbstractMarkupDataContainer.ForEachSubItem
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem(System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
    name: ForEachSubItem
    nameWithType: IAbstractMarkupDataContainer.ForEachSubItem
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.AllSubItems
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.AllSubItems
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  isExternal: true
  name: AllSubItems
  nameWithType: IAbstractMarkupDataContainer.AllSubItems
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.AllSubItems
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.CanBeSplit
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.CanBeSplit
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  isExternal: true
  name: CanBeSplit
  nameWithType: IAbstractMarkupDataContainer.CanBeSplit
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.CanBeSplit
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Locations
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Locations
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  isExternal: true
  name: Locations
  nameWithType: IAbstractMarkupDataContainer.Locations
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Locations
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.UniqueId
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.UniqueId
  parent: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId
  isExternal: true
  name: UniqueId
  nameWithType: ISupportsUniqueId.UniqueId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.UniqueId
- uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.IndexOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  commentId: M:System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.IndexOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  parent: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  name: IndexOf(IAbstractMarkupData)
  nameWithType: IList<IAbstractMarkupData>.IndexOf(IAbstractMarkupData)
  fullName: System.Collections.Generic.IList<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.IndexOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  nameWithType.vb: IList(Of IAbstractMarkupData).IndexOf(IAbstractMarkupData)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).IndexOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<IAbstractMarkupData>.IndexOf
    fullName: System.Collections.Generic.IList<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of IAbstractMarkupData).IndexOf
    fullName: System.Collections.Generic.IList(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Insert(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  commentId: M:System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Insert(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  parent: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  name: Insert(Int32, IAbstractMarkupData)
  nameWithType: IList<IAbstractMarkupData>.Insert(Int32, IAbstractMarkupData)
  fullName: System.Collections.Generic.IList<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Insert(System.Int32, Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  nameWithType.vb: IList(Of IAbstractMarkupData).Insert(Int32, IAbstractMarkupData)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Insert(System.Int32, Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<IAbstractMarkupData>.Insert
    fullName: System.Collections.Generic.IList<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of IAbstractMarkupData).Insert
    fullName: System.Collections.Generic.IList(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: IList<IAbstractMarkupData>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of IAbstractMarkupData).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<IAbstractMarkupData>.RemoveAt
    fullName: System.Collections.Generic.IList<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of IAbstractMarkupData).RemoveAt
    fullName: System.Collections.Generic.IList(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Item(System.Int32)
  parent: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IList<IAbstractMarkupData>.Item[Int32]
  fullName: System.Collections.Generic.IList<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Item[System.Int32]
  nameWithType.vb: IList(Of IAbstractMarkupData).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<IAbstractMarkupData>.Item
    fullName: System.Collections.Generic.IList<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of IAbstractMarkupData).Item
    fullName: System.Collections.Generic.IList(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Add(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  commentId: M:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Add(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(IAbstractMarkupData)
  nameWithType: ICollection<IAbstractMarkupData>.Add(IAbstractMarkupData)
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Add(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  nameWithType.vb: ICollection(Of IAbstractMarkupData).Add(IAbstractMarkupData)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Add(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<IAbstractMarkupData>.Add
    fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of IAbstractMarkupData).Add
    fullName: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Clear
  commentId: M:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Clear
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<IAbstractMarkupData>.Clear()
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Clear()
  nameWithType.vb: ICollection(Of IAbstractMarkupData).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<IAbstractMarkupData>.Clear
    fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of IAbstractMarkupData).Clear
    fullName: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Contains(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  commentId: M:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Contains(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(IAbstractMarkupData)
  nameWithType: ICollection<IAbstractMarkupData>.Contains(IAbstractMarkupData)
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Contains(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  nameWithType.vb: ICollection(Of IAbstractMarkupData).Contains(IAbstractMarkupData)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Contains(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<IAbstractMarkupData>.Contains
    fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of IAbstractMarkupData).Contains
    fullName: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.CopyTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.CopyTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData[],System.Int32)
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(IAbstractMarkupData[], Int32)
  nameWithType: ICollection<IAbstractMarkupData>.CopyTo(IAbstractMarkupData[], Int32)
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.CopyTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData[], System.Int32)
  nameWithType.vb: ICollection(Of IAbstractMarkupData).CopyTo(IAbstractMarkupData(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).CopyTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData(), System.Int32)
  name.vb: CopyTo(IAbstractMarkupData(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<IAbstractMarkupData>.CopyTo
    fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of IAbstractMarkupData).CopyTo
    fullName: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Remove(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  commentId: M:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Remove(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(IAbstractMarkupData)
  nameWithType: ICollection<IAbstractMarkupData>.Remove(IAbstractMarkupData)
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Remove(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  nameWithType.vb: ICollection(Of IAbstractMarkupData).Remove(IAbstractMarkupData)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Remove(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<IAbstractMarkupData>.Remove
    fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of IAbstractMarkupData).Remove
    fullName: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Count
  commentId: P:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Count
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<IAbstractMarkupData>.Count
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Count
  nameWithType.vb: ICollection(Of IAbstractMarkupData).Count
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Count
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.IsReadOnly
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<IAbstractMarkupData>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.IsReadOnly
  nameWithType.vb: ICollection(Of IAbstractMarkupData).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).IsReadOnly
- uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IAbstractMarkupData>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IAbstractMarkupData).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<IAbstractMarkupData>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of IAbstractMarkupData).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IAbstractTag
  nameWithType: IAbstractTag
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractTag
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IAbstractMarkupData
  nameWithType: IAbstractMarkupData
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IAbstractMarkupDataContainer
  nameWithType: IAbstractMarkupDataContainer
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: ISupportsUniqueId
  nameWithType: ISupportsUniqueId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<T>.IndexOf
    fullName: System.Collections.Generic.IList<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of T).IndexOf
    fullName: System.Collections.Generic.IList(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  commentId: T:System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IAbstractMarkupData>
  nameWithType: IList<IAbstractMarkupData>
  fullName: System.Collections.Generic.IList<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>
  nameWithType.vb: IList(Of IAbstractMarkupData)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  name.vb: IList(Of IAbstractMarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: IList<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: IList(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<T>.Insert
    fullName: System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of T).Insert
    fullName: System.Collections.Generic.IList(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IList<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<T>.RemoveAt
    fullName: System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of T).RemoveAt
    fullName: System.Collections.Generic.IList(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IList<T>.Item[Int32]
  fullName: System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: IList(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<T>.Item
    fullName: System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of T).Item
    fullName: System.Collections.Generic.IList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  commentId: T:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IAbstractMarkupData>
  nameWithType: ICollection<IAbstractMarkupData>
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>
  nameWithType.vb: ICollection(Of IAbstractMarkupData)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  name.vb: ICollection(Of IAbstractMarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IAbstractMarkupData>
  nameWithType: IEnumerable<IAbstractMarkupData>
  fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>
  nameWithType.vb: IEnumerable(Of IAbstractMarkupData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  name.vb: IEnumerable(Of IAbstractMarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    nameWithType: IAbstractMarkupData
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.StartTagProperties*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.StartTagProperties
  isExternal: true
  name: StartTagProperties
  nameWithType: ITagPair.StartTagProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.StartTagProperties
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IStartTagProperties
  nameWithType: IStartTagProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IStartTagProperties
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.StartTagRevisionProperties*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.StartTagRevisionProperties
  isExternal: true
  name: StartTagRevisionProperties
  nameWithType: ITagPair.StartTagRevisionProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.StartTagRevisionProperties
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IRevisionProperties
  nameWithType: IRevisionProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRevisionProperties
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.IsStartTagGhost*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.IsStartTagGhost
  isExternal: true
  name: IsStartTagGhost
  nameWithType: ITagPair.IsStartTagGhost
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.IsStartTagGhost
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.EndTagProperties*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.EndTagProperties
  isExternal: true
  name: EndTagProperties
  nameWithType: ITagPair.EndTagProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.EndTagProperties
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IEndTagProperties
  nameWithType: IEndTagProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IEndTagProperties
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.EndTagRevisionProperties*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.EndTagRevisionProperties
  isExternal: true
  name: EndTagRevisionProperties
  nameWithType: ITagPair.EndTagRevisionProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.EndTagRevisionProperties
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.IsEndTagGhost*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.IsEndTagGhost
  isExternal: true
  name: IsEndTagGhost
  nameWithType: ITagPair.IsEndTagGhost
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.IsEndTagGhost
