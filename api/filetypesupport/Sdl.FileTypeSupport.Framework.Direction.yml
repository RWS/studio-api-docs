### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Direction
  commentId: T:Sdl.FileTypeSupport.Framework.Direction
  id: Direction
  parent: Sdl.FileTypeSupport.Framework
  children:
  - Sdl.FileTypeSupport.Framework.Direction.Inherit
  - Sdl.FileTypeSupport.Framework.Direction.LeftToRight
  - Sdl.FileTypeSupport.Framework.Direction.RightToLeft
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: Direction
  fullName: Sdl.FileTypeSupport.Framework.Direction
  type: Enum
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: Reading order directionality for text
  example: []
  syntax:
    content: public enum Direction
    content.vb: Public Enum Direction
- uid: Sdl.FileTypeSupport.Framework.Direction.Inherit
  commentId: F:Sdl.FileTypeSupport.Framework.Direction.Inherit
  id: Inherit
  parent: Sdl.FileTypeSupport.Framework.Direction
  langs:
  - csharp
  - vb
  name: Inherit
  nameWithType: Direction.Inherit
  fullName: Sdl.FileTypeSupport.Framework.Direction.Inherit
  type: Field
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: Same directionality as surrounding content, or the default directionality if none
  example: []
  syntax:
    content: Inherit = 0
    return:
      type: Sdl.FileTypeSupport.Framework.Direction
- uid: Sdl.FileTypeSupport.Framework.Direction.LeftToRight
  commentId: F:Sdl.FileTypeSupport.Framework.Direction.LeftToRight
  id: LeftToRight
  parent: Sdl.FileTypeSupport.Framework.Direction
  langs:
  - csharp
  - vb
  name: LeftToRight
  nameWithType: Direction.LeftToRight
  fullName: Sdl.FileTypeSupport.Framework.Direction.LeftToRight
  type: Field
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: Explicit left-to-right reading order, independent of the surrounding content
  example: []
  syntax:
    content: LeftToRight = 1
    return:
      type: Sdl.FileTypeSupport.Framework.Direction
- uid: Sdl.FileTypeSupport.Framework.Direction.RightToLeft
  commentId: F:Sdl.FileTypeSupport.Framework.Direction.RightToLeft
  id: RightToLeft
  parent: Sdl.FileTypeSupport.Framework.Direction
  langs:
  - csharp
  - vb
  name: RightToLeft
  nameWithType: Direction.RightToLeft
  fullName: Sdl.FileTypeSupport.Framework.Direction.RightToLeft
  type: Field
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: Explicit right-to-left reading order, independent of the surrounding content
  example: []
  syntax:
    content: RightToLeft = 2
    return:
      type: Sdl.FileTypeSupport.Framework.Direction
references:
- uid: Sdl.FileTypeSupport.Framework
  commentId: N:Sdl.FileTypeSupport.Framework
  isExternal: true
  href: Sdl.html
  name: Sdl.FileTypeSupport.Framework
  nameWithType: Sdl.FileTypeSupport.Framework
  fullName: Sdl.FileTypeSupport.Framework
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
- uid: Sdl.FileTypeSupport.Framework.Direction
  commentId: T:Sdl.FileTypeSupport.Framework.Direction
  parent: Sdl.FileTypeSupport.Framework
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Direction.html
  name: Direction
  nameWithType: Direction
  fullName: Sdl.FileTypeSupport.Framework.Direction
