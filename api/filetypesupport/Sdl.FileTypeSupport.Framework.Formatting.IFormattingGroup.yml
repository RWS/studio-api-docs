### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
  commentId: T:Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
  id: IFormattingGroup
  parent: Sdl.FileTypeSupport.Framework.Formatting
  children:
  - Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Add(Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  - Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Contains(Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  - Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Contains(System.String)
  - Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Item(System.String)
  - Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
  - Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
  langs:
  - csharp
  - vb
  name: IFormattingGroup
  nameWithType: IFormattingGroup
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\n<p>\nA collection of non-conflicting formatting items that together\nspecify a fully defined formatting or a formatting override.\n</p>\n"
  remarks: "\n<p>\nInstances of this class should normally be created by calling <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingItemFactory.CreateFormatting\" data-throw-if-not-resolved=\"false\"></xref>, or\nby cloning an existing instance. (<xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingItemFactory\" data-throw-if-not-resolved=\"false\"></xref> is typically accessed from \nthe <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory.FormattingItemFactory\" data-throw-if-not-resolved=\"false\"></xref> property.)\n</p>\n<p>\nThe collection is a dictionary indexed using the <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem.FormattingName\" data-throw-if-not-resolved=\"false\"></xref> as keys\nfor the contained formatting items.\n</p>\n<p>\nCan be combined with other formatting by calling <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)\" data-throw-if-not-resolved=\"false\"></xref> or\n<xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  example:
  - "\nHere is an example that shows how to explicitly turn off bold formatting\nonly when the formatting is set:\n<pre><code>void SetNoBold(IFormattingGroup fmt)\n{\n	// check if there is bold formatting already\n	if (fmt.ContainsKey(Bold.Name))\n	{\n		// explicitly override by setting our formatting instead\n		Bold notBold = new Bold(false);\n		fmt.Add(notBold);\n	}\n}</code></pre>"
  syntax:
    content: 'public interface IFormattingGroup : IDictionary<string, IFormattingItem>, ICollection<KeyValuePair<string, IFormattingItem>>, IEnumerable<KeyValuePair<string, IFormattingItem>>, IEnumerable, ICloneable'
    content.vb: >-
      Public Interface IFormattingGroup
          Inherits IDictionary(Of String, IFormattingItem), ICollection(Of KeyValuePair(Of String, IFormattingItem)), IEnumerable(Of KeyValuePair(Of String, IFormattingItem)), IEnumerable, ICloneable, IXmlSerializable
  inheritedMembers:
  - System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.ContainsKey(System.String)
  - System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.Add(System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  - System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.Remove(System.String)
  - System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.TryGetValue(System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem@)
  - System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.Item(System.String)
  - System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.Keys
  - System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.Values
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.Add(System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem})
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.Clear
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.Contains(System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem})
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}[],System.Int32)
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.Remove(System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem})
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.Count
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.IsReadOnly
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.GetEnumerator
  - System.Collections.IEnumerable.GetEnumerator
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Add(Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  commentId: M:Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Add(Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  id: Add(Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
  langs:
  - csharp
  - vb
  name: Add(IFormattingItem)
  nameWithType: IFormattingGroup.Add(IFormattingItem)
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Add(Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nAdds a formatting item to the collection. The FormattingName is used as a key.\nIf a formatting of this type already exists, it will be replaced.\n"
  syntax:
    content: void Add(IFormattingItem formatting)
    parameters:
    - id: formatting
      type: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    content.vb: Sub Add(formatting As IFormattingItem)
  overload: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Add*
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Contains(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Contains(System.String)
  id: Contains(System.String)
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
  langs:
  - csharp
  - vb
  name: Contains(String)
  nameWithType: IFormattingGroup.Contains(String)
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Contains(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nTests whether the collection contains a formatting item of a certain type.\n"
  syntax:
    content: bool Contains(string formattingName)
    parameters:
    - id: formattingName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function Contains(formattingName As String) As Boolean
  overload: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Contains*
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Contains(Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  commentId: M:Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Contains(Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  id: Contains(Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
  langs:
  - csharp
  - vb
  name: Contains(IFormattingItem)
  nameWithType: IFormattingGroup.Contains(IFormattingItem)
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Contains(Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nTests whether an equivalent formatting is part of the collection.\n"
  syntax:
    content: bool Contains(IFormattingItem formatting)
    parameters:
    - id: formatting
      type: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    return:
      type: System.Boolean
    content.vb: Function Contains(formatting As IFormattingItem) As Boolean
  overload: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Contains*
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
  commentId: M:Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
  id: OverrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
  langs:
  - csharp
  - vb
  name: OverrideWith(IFormattingGroup)
  nameWithType: IFormattingGroup.OverrideWith(IFormattingGroup)
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nAdds each formatting item from the other object to this one, thereby overwriting\nany formatting of the same type in this object. Any formatting items\nin this object that do not have corresponding formatting items in the\nother object remain unchanged.\n\n<p>This can be used to apply a formatting override.</p>\n"
  remarks: >-
    Note that this operation only overrides and appends items,

    and thus cannot be used to explicitly remove formatting items (without overriding them).
  syntax:
    content: void OverrideWith(IFormattingGroup otherFormatting)
    parameters:
    - id: otherFormatting
      type: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
    content.vb: Sub OverrideWith(otherFormatting As IFormattingGroup)
  overload: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith*
  seealso:
  - linkId: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
    commentId: M:Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
  commentId: M:Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
  id: UnderrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
  langs:
  - csharp
  - vb
  name: UnderrideWith(IFormattingGroup)
  nameWithType: IFormattingGroup.UnderrideWith(IFormattingGroup)
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nAdds each formatting item from the other formatting that does not already\nexist in this collection.\n\n<p>This can be used to &quot;overlay&quot; formatting overrides when starting from\nthe most significant formatting.</p>\n<p>The difference to <xref href=\"Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)\" data-throw-if-not-resolved=\"false\"></xref> is the fact that existing formatting\nin this object is always preserved.</p>\n"
  syntax:
    content: void UnderrideWith(IFormattingGroup otherFormatting)
    parameters:
    - id: otherFormatting
      type: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
    content.vb: Sub UnderrideWith(otherFormatting As IFormattingGroup)
  overload: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith*
  seealso:
  - linkId: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
    commentId: M:Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Item(System.String)
  commentId: P:Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Item(System.String)
  id: Item(System.String)
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: IFormattingGroup.Item[String]
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Item[System.String]
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.Formatting
  summary: "\nRetrieves a formatting item of a specified type.\n"
  syntax:
    content: IFormattingItem this[string formattingName] { get; }
    parameters:
    - id: formattingName
      type: System.String
    return:
      type: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
      description: Null if no such formatting exists in the collection.
    content.vb: ReadOnly Property Item(formattingName As String) As IFormattingItem
  overload: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Item*
  nameWithType.vb: IFormattingGroup.Item(String)
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Item(System.String)
  name.vb: Item(String)
references:
- uid: Sdl.FileTypeSupport.Framework.Formatting
  commentId: N:Sdl.FileTypeSupport.Framework.Formatting
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Formatting
  nameWithType: Sdl.FileTypeSupport.Framework.Formatting
  fullName: Sdl.FileTypeSupport.Framework.Formatting
- uid: System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.ContainsKey(System.String)
  commentId: M:System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.ContainsKey(System.String)
  parent: System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}
  definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  name: ContainsKey(String)
  nameWithType: IDictionary<String, IFormattingItem>.ContainsKey(String)
  fullName: System.Collections.Generic.IDictionary<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>.ContainsKey(System.String)
  nameWithType.vb: IDictionary(Of String, IFormattingItem).ContainsKey(String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem).ContainsKey(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary<String, IFormattingItem>.ContainsKey
    fullName: System.Collections.Generic.IDictionary<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary(Of String, IFormattingItem).ContainsKey
    fullName: System.Collections.Generic.IDictionary(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.Add(System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  commentId: M:System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.Add(System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  parent: System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}
  definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  name: Add(String, IFormattingItem)
  nameWithType: IDictionary<String, IFormattingItem>.Add(String, IFormattingItem)
  fullName: System.Collections.Generic.IDictionary<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>.Add(System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  nameWithType.vb: IDictionary(Of String, IFormattingItem).Add(String, IFormattingItem)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem).Add(System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary<String, IFormattingItem>.Add
    fullName: System.Collections.Generic.IDictionary<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary(Of String, IFormattingItem).Add
    fullName: System.Collections.Generic.IDictionary(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.Remove(System.String)
  commentId: M:System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.Remove(System.String)
  parent: System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}
  definition: System.Collections.Generic.IDictionary`2.Remove(`0)
  name: Remove(String)
  nameWithType: IDictionary<String, IFormattingItem>.Remove(String)
  fullName: System.Collections.Generic.IDictionary<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>.Remove(System.String)
  nameWithType.vb: IDictionary(Of String, IFormattingItem).Remove(String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem).Remove(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary<String, IFormattingItem>.Remove
    fullName: System.Collections.Generic.IDictionary<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary(Of String, IFormattingItem).Remove
    fullName: System.Collections.Generic.IDictionary(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.TryGetValue(System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem@)
  commentId: M:System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.TryGetValue(System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem@)
  parent: System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}
  definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(String, IFormattingItem)
  nameWithType: IDictionary<String, IFormattingItem>.TryGetValue(String, IFormattingItem)
  fullName: System.Collections.Generic.IDictionary<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>.TryGetValue(System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  nameWithType.vb: IDictionary(Of String, IFormattingItem).TryGetValue(String, IFormattingItem)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem).TryGetValue(System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary<String, IFormattingItem>.TryGetValue
    fullName: System.Collections.Generic.IDictionary<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary(Of String, IFormattingItem).TryGetValue
    fullName: System.Collections.Generic.IDictionary(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.Item(System.String)
  commentId: P:System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.Item(System.String)
  parent: System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}
  definition: System.Collections.Generic.IDictionary`2.Item(`0)
  name: Item[String]
  nameWithType: IDictionary<String, IFormattingItem>.Item[String]
  fullName: System.Collections.Generic.IDictionary<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>.Item[System.String]
  nameWithType.vb: IDictionary(Of String, IFormattingItem).Item(String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary<String, IFormattingItem>.Item
    fullName: System.Collections.Generic.IDictionary<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary(Of String, IFormattingItem).Item
    fullName: System.Collections.Generic.IDictionary(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.Keys
  commentId: P:System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.Keys
  parent: System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}
  definition: System.Collections.Generic.IDictionary`2.Keys
  name: Keys
  nameWithType: IDictionary<String, IFormattingItem>.Keys
  fullName: System.Collections.Generic.IDictionary<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>.Keys
  nameWithType.vb: IDictionary(Of String, IFormattingItem).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem).Keys
- uid: System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.Values
  commentId: P:System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}.Values
  parent: System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}
  definition: System.Collections.Generic.IDictionary`2.Values
  name: Values
  nameWithType: IDictionary<String, IFormattingItem>.Values
  fullName: System.Collections.Generic.IDictionary<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>.Values
  nameWithType.vb: IDictionary(Of String, IFormattingItem).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem).Values
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.Add(System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.Add(System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(KeyValuePair<String, IFormattingItem>)
  nameWithType: ICollection<KeyValuePair<String, IFormattingItem>>.Add(KeyValuePair<String, IFormattingItem>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>>.Add(System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, IFormattingItem)).Add(KeyValuePair(Of String, IFormattingItem))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)).Add(System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem))
  name.vb: Add(KeyValuePair(Of String, IFormattingItem))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<KeyValuePair<String, IFormattingItem>>.Add
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of KeyValuePair(Of String, IFormattingItem)).Add
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.Clear
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.Clear
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<KeyValuePair<String, IFormattingItem>>.Clear()
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>>.Clear()
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, IFormattingItem)).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<KeyValuePair<String, IFormattingItem>>.Clear
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of KeyValuePair(Of String, IFormattingItem)).Clear
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.Contains(System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.Contains(System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(KeyValuePair<String, IFormattingItem>)
  nameWithType: ICollection<KeyValuePair<String, IFormattingItem>>.Contains(KeyValuePair<String, IFormattingItem>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>>.Contains(System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, IFormattingItem)).Contains(KeyValuePair(Of String, IFormattingItem))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)).Contains(System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem))
  name.vb: Contains(KeyValuePair(Of String, IFormattingItem))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<KeyValuePair<String, IFormattingItem>>.Contains
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of KeyValuePair(Of String, IFormattingItem)).Contains
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(KeyValuePair<String, IFormattingItem>[], Int32)
  nameWithType: ICollection<KeyValuePair<String, IFormattingItem>>.CopyTo(KeyValuePair<String, IFormattingItem>[], Int32)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>[], System.Int32)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, IFormattingItem)).CopyTo(KeyValuePair(Of String, IFormattingItem)(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)).CopyTo(System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)(), System.Int32)
  name.vb: CopyTo(KeyValuePair(Of String, IFormattingItem)(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<KeyValuePair<String, IFormattingItem>>.CopyTo
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of KeyValuePair(Of String, IFormattingItem)).CopyTo
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.Remove(System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.Remove(System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(KeyValuePair<String, IFormattingItem>)
  nameWithType: ICollection<KeyValuePair<String, IFormattingItem>>.Remove(KeyValuePair<String, IFormattingItem>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>>.Remove(System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, IFormattingItem)).Remove(KeyValuePair(Of String, IFormattingItem))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)).Remove(System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem))
  name.vb: Remove(KeyValuePair(Of String, IFormattingItem))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<KeyValuePair<String, IFormattingItem>>.Remove
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of KeyValuePair(Of String, IFormattingItem)).Remove
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.Count
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.Count
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<KeyValuePair<String, IFormattingItem>>.Count
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>>.Count
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, IFormattingItem)).Count
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)).Count
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<KeyValuePair<String, IFormattingItem>>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>>.IsReadOnly
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, IFormattingItem)).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)).IsReadOnly
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<String, IFormattingItem>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, IFormattingItem)).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<KeyValuePair<String, IFormattingItem>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of KeyValuePair(Of String, IFormattingItem)).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  isExternal: true
  name: ContainsKey(TKey)
  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary<TKey, TValue>.ContainsKey
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary(Of TKey, TValue).ContainsKey
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, IFormattingItem>
  nameWithType: IDictionary<String, IFormattingItem>
  fullName: System.Collections.Generic.IDictionary<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>
  nameWithType.vb: IDictionary(Of String, IFormattingItem)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem)
  name.vb: IDictionary(Of String, IFormattingItem)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)
  isExternal: true
  name: Add(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary<TKey, TValue>.Add
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary(Of TKey, TValue).Add
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Remove(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)
  isExternal: true
  name: Remove(TKey)
  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary<TKey, TValue>.Remove
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary(Of TKey, TValue).Remove
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  name: TryGetValue(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary<TKey, TValue>.TryGetValue
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary(Of TKey, TValue).TryGetValue
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Item(`0)
  commentId: P:System.Collections.Generic.IDictionary`2.Item(`0)
  isExternal: true
  name: Item[TKey]
  nameWithType: IDictionary<TKey, TValue>.Item[TKey]
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: IDictionary(Of TKey, TValue).Item(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary<TKey, TValue>.Item
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary(Of TKey, TValue).Item
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Keys
  commentId: P:System.Collections.Generic.IDictionary`2.Keys
  isExternal: true
  name: Keys
  nameWithType: IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: IDictionary(Of TKey, TValue).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
- uid: System.Collections.Generic.IDictionary`2.Values
  commentId: P:System.Collections.Generic.IDictionary`2.Values
  isExternal: true
  name: Values
  nameWithType: IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: IDictionary(Of TKey, TValue).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<KeyValuePair<String, IFormattingItem>>
  nameWithType: ICollection<KeyValuePair<String, IFormattingItem>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, IFormattingItem))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem))
  name.vb: ICollection(Of KeyValuePair(Of String, IFormattingItem))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, IFormattingItem>>
  nameWithType: IEnumerable<KeyValuePair<String, IFormattingItem>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, IFormattingItem))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem))
  name.vb: IEnumerable(Of KeyValuePair(Of String, IFormattingItem))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    name: IFormattingItem
    nameWithType: IFormattingItem
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Add*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Add
  isExternal: true
  name: Add
  nameWithType: IFormattingGroup.Add
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Add
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  commentId: T:Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
  parent: Sdl.FileTypeSupport.Framework.Formatting
  isExternal: true
  name: IFormattingItem
  nameWithType: IFormattingItem
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingItem
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Contains*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Contains
  isExternal: true
  name: Contains
  nameWithType: IFormattingGroup.Contains
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Contains
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith
  isExternal: true
  name: OverrideWith
  nameWithType: IFormattingGroup.OverrideWith
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
  commentId: M:Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
  isExternal: true
  name: UnderrideWith(IFormattingGroup)
  nameWithType: IFormattingGroup.UnderrideWith(IFormattingGroup)
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
    name: UnderrideWith
    nameWithType: IFormattingGroup.UnderrideWith
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
    name: IFormattingGroup
    nameWithType: IFormattingGroup
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
    name: UnderrideWith
    nameWithType: IFormattingGroup.UnderrideWith
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
    name: IFormattingGroup
    nameWithType: IFormattingGroup
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
  commentId: T:Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
  parent: Sdl.FileTypeSupport.Framework.Formatting
  isExternal: true
  name: IFormattingGroup
  nameWithType: IFormattingGroup
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith
  isExternal: true
  name: UnderrideWith
  nameWithType: IFormattingGroup.UnderrideWith
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.UnderrideWith
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
  commentId: M:Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
  parent: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
  isExternal: true
  name: OverrideWith(IFormattingGroup)
  nameWithType: IFormattingGroup.OverrideWith(IFormattingGroup)
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
    name: OverrideWith
    nameWithType: IFormattingGroup.OverrideWith
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
    name: IFormattingGroup
    nameWithType: IFormattingGroup
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith(Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup)
    name: OverrideWith
    nameWithType: IFormattingGroup.OverrideWith
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.OverrideWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
    name: IFormattingGroup
    nameWithType: IFormattingGroup
    fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Item*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Item
  isExternal: true
  name: Item
  nameWithType: IFormattingGroup.Item
  fullName: Sdl.FileTypeSupport.Framework.Formatting.IFormattingGroup.Item
