### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
  id: IPreviewSetsFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.CreatePreviewSet
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.CreatePreviewType``1
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.GetPreviewSets(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.IsFileAgnostic
  langs:
  - csharp
  - vb
  name: IPreviewSetsFactory
  nameWithType: IPreviewSetsFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nInterface used for instantiating a set of preview types available\nfor a specific file. \n"
  remarks: "\n<p>Normally accessed via <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildPreviewSetsFactory\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\nThe set of available preview types for a file type sometimes depends on \nthe actual file itself (e.g. for TTX where the underlying file\nformat can vary significantly). However, for most file formats\nthe set is the same for all document instances. You can check the\n<xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.IsFileAgnostic\" data-throw-if-not-resolved=\"false\"></xref> property to determine if this is the case.\n</p>\n"
  syntax:
    content: 'public interface IPreviewSetsFactory : IFileTypeDefinitionAware'
    content.vb: >-
      Public Interface IPreviewSetsFactory
          Inherits IFileTypeDefinitionAware
  inheritedMembers:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.GetPreviewSets(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.GetPreviewSets(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  id: GetPreviewSets(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
  langs:
  - csharp
  - vb
  name: GetPreviewSets(IFileProperties)
  nameWithType: IPreviewSetsFactory.GetPreviewSets(IFileProperties)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.GetPreviewSets(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets the set of previews that can be used with the specified file.\n"
  remarks: "\n<p>\nThe file properties are used to determine available previews for\nfile types like TTX, for which the previews depend on the underlying file format.\n</p>\n<p>\nFor most file formats, the preview sets do not depend on the file\nproperties.\n</p>\n"
  syntax:
    content: IPreviewSets GetPreviewSets(IFileProperties fileProperties)
    parameters:
    - id: fileProperties
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
      description: >-
        Properties of the file instance

        for which previews should be specialized, or <code>null</code> to get

        previews that are available for all files of this type.
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets
      description: The preview sets available from this factory, or <code>null</code> if none.
    content.vb: Function GetPreviewSets(fileProperties As IFileProperties) As IPreviewSets
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.GetPreviewSets*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.CreatePreviewSet
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.CreatePreviewSet
  id: CreatePreviewSet
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
  langs:
  - csharp
  - vb
  name: CreatePreviewSet()
  nameWithType: IPreviewSetsFactory.CreatePreviewSet()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.CreatePreviewSet()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nProvides access to the creation of a new preview set.\n"
  syntax:
    content: IPreviewSet CreatePreviewSet()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    content.vb: Function CreatePreviewSet As IPreviewSet
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.CreatePreviewSet*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.CreatePreviewType``1
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.CreatePreviewType``1
  id: CreatePreviewType``1
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
  langs:
  - csharp
  - vb
  name: CreatePreviewType<T>()
  nameWithType: IPreviewSetsFactory.CreatePreviewType<T>()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.CreatePreviewType<T>()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCreates a preview type of type T. T can either be an <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IApplicationPreviewType\" data-throw-if-not-resolved=\"false\"></xref> or\nan <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IControlPreviewType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: IPreviewType CreatePreviewType<T>()
    typeParameters:
    - id: T
      description: The type of preview type to create.
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType
    content.vb: Function CreatePreviewType(Of T) As IPreviewType
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.CreatePreviewType*
  nameWithType.vb: IPreviewSetsFactory.CreatePreviewType(Of T)()
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.CreatePreviewType(Of T)()
  name.vb: CreatePreviewType(Of T)()
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.IsFileAgnostic
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.IsFileAgnostic
  id: IsFileAgnostic
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
  langs:
  - csharp
  - vb
  name: IsFileAgnostic
  nameWithType: IPreviewSetsFactory.IsFileAgnostic
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.IsFileAgnostic
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReturns <code>true</code> if the set of previews is the same for\nall files that the factory applies to, in which case passing \n<code>null</code> to <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.GetPreviewSets(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)\" data-throw-if-not-resolved=\"false\"></xref> will yield \nall previews that are specifically available for this document type.\n"
  syntax:
    content: bool IsFileAgnostic { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsFileAgnostic As Boolean
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.IsFileAgnostic*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
  isExternal: true
  name: FileTypeDefinition
  nameWithType: IFileTypeDefinitionAware.FileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileTypeDefinitionAware
  nameWithType: IFileTypeDefinitionAware
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.GetPreviewSets*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.GetPreviewSets
  isExternal: true
  name: GetPreviewSets
  nameWithType: IPreviewSetsFactory.GetPreviewSets
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.GetPreviewSets
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IFileProperties
  nameWithType: IFileProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IPreviewSets
  nameWithType: IPreviewSets
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets
- uid: Sdl.FileTypeSupport.Framework.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.CreatePreviewSet*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.CreatePreviewSet
  isExternal: true
  name: CreatePreviewSet
  nameWithType: IPreviewSetsFactory.CreatePreviewSet
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.CreatePreviewSet
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IPreviewSet
  nameWithType: IPreviewSet
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.CreatePreviewType*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.CreatePreviewType
  isExternal: true
  name: CreatePreviewType
  nameWithType: IPreviewSetsFactory.CreatePreviewType
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.CreatePreviewType
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IPreviewType
  nameWithType: IPreviewType
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewType
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.IsFileAgnostic*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.IsFileAgnostic
  isExternal: true
  name: IsFileAgnostic
  nameWithType: IPreviewSetsFactory.IsFileAgnostic
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.IsFileAgnostic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
