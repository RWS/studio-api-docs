### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Pair`2
  commentId: T:Sdl.FileTypeSupport.Framework.Pair`2
  id: Pair`2
  parent: Sdl.FileTypeSupport.Framework
  children:
  - Sdl.FileTypeSupport.Framework.Pair`2.#ctor(`0,`1)
  - Sdl.FileTypeSupport.Framework.Pair`2.Clone
  - Sdl.FileTypeSupport.Framework.Pair`2.Equals(System.Object)
  - Sdl.FileTypeSupport.Framework.Pair`2.First
  - Sdl.FileTypeSupport.Framework.Pair`2.GetHashCode
  - Sdl.FileTypeSupport.Framework.Pair`2.Second
  langs:
  - csharp
  - vb
  name: Pair<FirstType, SecondType>
  nameWithType: Pair<FirstType, SecondType>
  fullName: Sdl.FileTypeSupport.Framework.Pair<FirstType, SecondType>
  type: Class
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: >-
    Two objects as one.

    Use this e.g. to store objects that belong together in a single collection.
  example: []
  syntax:
    content: 'public class Pair<FirstType, SecondType> : ICloneable'
    typeParameters:
    - id: FirstType
      description: ''
    - id: SecondType
      description: ''
    content.vb: Public Class Pair(Of FirstType, SecondType) Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: Pair(Of FirstType, SecondType)
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of FirstType, SecondType)
  name.vb: Pair(Of FirstType, SecondType)
- uid: Sdl.FileTypeSupport.Framework.Pair`2.#ctor(`0,`1)
  commentId: M:Sdl.FileTypeSupport.Framework.Pair`2.#ctor(`0,`1)
  id: '#ctor(`0,`1)'
  parent: Sdl.FileTypeSupport.Framework.Pair`2
  langs:
  - csharp
  - vb
  name: Pair(FirstType, SecondType)
  nameWithType: Pair<FirstType, SecondType>.Pair(FirstType, SecondType)
  fullName: Sdl.FileTypeSupport.Framework.Pair<FirstType, SecondType>.Pair(FirstType, SecondType)
  type: Constructor
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: Contruct a new pair form the specifiec objects.
  example: []
  syntax:
    content: public Pair(FirstType first, SecondType second)
    parameters:
    - id: first
      type: '{FirstType}'
      description: ''
    - id: second
      type: '{SecondType}'
      description: ''
    content.vb: Public Sub New(first As FirstType, second As SecondType)
  overload: Sdl.FileTypeSupport.Framework.Pair`2.#ctor*
  nameWithType.vb: Pair(Of FirstType, SecondType).New(FirstType, SecondType)
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of FirstType, SecondType).New(FirstType, SecondType)
  name.vb: New(FirstType, SecondType)
- uid: Sdl.FileTypeSupport.Framework.Pair`2.Equals(System.Object)
  commentId: M:Sdl.FileTypeSupport.Framework.Pair`2.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.FileTypeSupport.Framework.Pair`2
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Pair<FirstType, SecondType>.Equals(object)
  fullName: Sdl.FileTypeSupport.Framework.Pair<FirstType, SecondType>.Equals(object)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: <code>true</code> if First and Second are equal for both objects.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.FileTypeSupport.Framework.Pair`2.Equals*
  nameWithType.vb: Pair(Of FirstType, SecondType).Equals(Object)
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of FirstType, SecondType).Equals(Object)
  name.vb: Equals(Object)
- uid: Sdl.FileTypeSupport.Framework.Pair`2.GetHashCode
  commentId: M:Sdl.FileTypeSupport.Framework.Pair`2.GetHashCode
  id: GetHashCode
  parent: Sdl.FileTypeSupport.Framework.Pair`2
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Pair<FirstType, SecondType>.GetHashCode()
  fullName: Sdl.FileTypeSupport.Framework.Pair<FirstType, SecondType>.GetHashCode()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: Returns a combiniation of the hash codes of First and Second.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.FileTypeSupport.Framework.Pair`2.GetHashCode*
  nameWithType.vb: Pair(Of FirstType, SecondType).GetHashCode()
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of FirstType, SecondType).GetHashCode()
- uid: Sdl.FileTypeSupport.Framework.Pair`2.Clone
  commentId: M:Sdl.FileTypeSupport.Framework.Pair`2.Clone
  id: Clone
  parent: Sdl.FileTypeSupport.Framework.Pair`2
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Pair<FirstType, SecondType>.Clone()
  fullName: Sdl.FileTypeSupport.Framework.Pair<FirstType, SecondType>.Clone()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: Clone the pair. If a type implements ICloneable it is deep cloned, otherwise a shallow clone is used.
  example: []
  syntax:
    content: public virtual object Clone()
    return:
      type: System.Object
      description: ''
    content.vb: Public Overridable Function Clone() As Object
  overload: Sdl.FileTypeSupport.Framework.Pair`2.Clone*
  implements:
  - System.ICloneable.Clone
  nameWithType.vb: Pair(Of FirstType, SecondType).Clone()
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of FirstType, SecondType).Clone()
- uid: Sdl.FileTypeSupport.Framework.Pair`2.First
  commentId: P:Sdl.FileTypeSupport.Framework.Pair`2.First
  id: First
  parent: Sdl.FileTypeSupport.Framework.Pair`2
  langs:
  - csharp
  - vb
  name: First
  nameWithType: Pair<FirstType, SecondType>.First
  fullName: Sdl.FileTypeSupport.Framework.Pair<FirstType, SecondType>.First
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: The first of the two objects in the pair.
  example: []
  syntax:
    content: public FirstType First { get; set; }
    parameters: []
    return:
      type: '{FirstType}'
    content.vb: Public Property First As FirstType
  overload: Sdl.FileTypeSupport.Framework.Pair`2.First*
  nameWithType.vb: Pair(Of FirstType, SecondType).First
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of FirstType, SecondType).First
- uid: Sdl.FileTypeSupport.Framework.Pair`2.Second
  commentId: P:Sdl.FileTypeSupport.Framework.Pair`2.Second
  id: Second
  parent: Sdl.FileTypeSupport.Framework.Pair`2
  langs:
  - csharp
  - vb
  name: Second
  nameWithType: Pair<FirstType, SecondType>.Second
  fullName: Sdl.FileTypeSupport.Framework.Pair<FirstType, SecondType>.Second
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: The second of the two objects in the pair.
  example: []
  syntax:
    content: public SecondType Second { get; set; }
    parameters: []
    return:
      type: '{SecondType}'
    content.vb: Public Property Second As SecondType
  overload: Sdl.FileTypeSupport.Framework.Pair`2.Second*
  nameWithType.vb: Pair(Of FirstType, SecondType).Second
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of FirstType, SecondType).Second
references:
- uid: Sdl.FileTypeSupport.Framework
  commentId: N:Sdl.FileTypeSupport.Framework
  isExternal: true
  href: Sdl.html
  name: Sdl.FileTypeSupport.Framework
  nameWithType: Sdl.FileTypeSupport.Framework
  fullName: Sdl.FileTypeSupport.Framework
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.Pair`2.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Pair`2.#ctor
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Pair-2.html#Sdl_FileTypeSupport_Framework_Pair_2__ctor__0__1_
  name: Pair
  nameWithType: Pair<FirstType, SecondType>.Pair
  fullName: Sdl.FileTypeSupport.Framework.Pair<FirstType, SecondType>.Pair
  nameWithType.vb: Pair(Of FirstType, SecondType).New
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of FirstType, SecondType).New
  name.vb: New
- uid: '{FirstType}'
  commentId: '!:FirstType'
  definition: FirstType
  name: FirstType
  nameWithType: FirstType
  fullName: FirstType
- uid: '{SecondType}'
  commentId: '!:SecondType'
  definition: SecondType
  name: SecondType
  nameWithType: SecondType
  fullName: SecondType
- uid: FirstType
  name: FirstType
  nameWithType: FirstType
  fullName: FirstType
- uid: SecondType
  name: SecondType
  nameWithType: SecondType
  fullName: SecondType
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Pair`2.Equals*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Pair`2.Equals
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Pair-2.html#Sdl_FileTypeSupport_Framework_Pair_2_Equals_System_Object_
  name: Equals
  nameWithType: Pair<FirstType, SecondType>.Equals
  fullName: Sdl.FileTypeSupport.Framework.Pair<FirstType, SecondType>.Equals
  nameWithType.vb: Pair(Of FirstType, SecondType).Equals
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of FirstType, SecondType).Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Pair`2.GetHashCode*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Pair`2.GetHashCode
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Pair-2.html#Sdl_FileTypeSupport_Framework_Pair_2_GetHashCode
  name: GetHashCode
  nameWithType: Pair<FirstType, SecondType>.GetHashCode
  fullName: Sdl.FileTypeSupport.Framework.Pair<FirstType, SecondType>.GetHashCode
  nameWithType.vb: Pair(Of FirstType, SecondType).GetHashCode
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of FirstType, SecondType).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Sdl.FileTypeSupport.Framework.Pair`2.Clone*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Pair`2.Clone
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Pair-2.html#Sdl_FileTypeSupport_Framework_Pair_2_Clone
  name: Clone
  nameWithType: Pair<FirstType, SecondType>.Clone
  fullName: Sdl.FileTypeSupport.Framework.Pair<FirstType, SecondType>.Clone
  nameWithType.vb: Pair(Of FirstType, SecondType).Clone
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of FirstType, SecondType).Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Pair`2.First*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Pair`2.First
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Pair-2.html#Sdl_FileTypeSupport_Framework_Pair_2_First
  name: First
  nameWithType: Pair<FirstType, SecondType>.First
  fullName: Sdl.FileTypeSupport.Framework.Pair<FirstType, SecondType>.First
  nameWithType.vb: Pair(Of FirstType, SecondType).First
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of FirstType, SecondType).First
- uid: Sdl.FileTypeSupport.Framework.Pair`2.Second*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Pair`2.Second
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Pair-2.html#Sdl_FileTypeSupport_Framework_Pair_2_Second
  name: Second
  nameWithType: Pair<FirstType, SecondType>.Second
  fullName: Sdl.FileTypeSupport.Framework.Pair<FirstType, SecondType>.Second
  nameWithType.vb: Pair(Of FirstType, SecondType).Second
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of FirstType, SecondType).Second
