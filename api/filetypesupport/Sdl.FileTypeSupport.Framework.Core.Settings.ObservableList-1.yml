### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  id: ObservableList`1
  parent: Sdl.FileTypeSupport.Framework.Core.Settings
  children:
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.#ctor
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Add(`0)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Clear
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.ClearListItemSettings(Sdl.Core.Settings.ISettingsGroup,System.String)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.CollectionChanged
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Contains(`0)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.CopyTo(`0[],System.Int32)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Count
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.CreateObservableStringList(System.String[])
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Equals(System.Object)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Find(System.Predicate{`0})
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetEnumerator
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetHashCode
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetListItemFromSettings(Sdl.Core.Settings.ISettingsGroup,System.String,System.Boolean@)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.IndexOf(`0)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Insert(System.Int32,`0)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.IsReadOnly
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Item(System.Int32)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.PropertyChanged
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Remove(`0)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.RemoveAt(System.Int32)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Sort
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Sort(System.Collections.Generic.IComparer{`0})
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Sort(System.Comparison{`0})
  - Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.ToArray
  langs:
  - csharp
  - vb
  name: ObservableList<T>
  nameWithType: ObservableList<T>
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>
  type: Class
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: >-
    An implementation of <code>IList&lt;T&gt;</code> which fires <xref href="System.Collections.Specialized.INotifyCollectionChanged" data-throw-if-not-resolved="false"></xref>

    and <xref href="System.ComponentModel.INotifyPropertyChanged" data-throw-if-not-resolved="false"></xref> when required. This allows the list to be used as

    a data source for WPF user controls implementing data-binding.
  example: []
  syntax:
    content: 'public class ObservableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable, INotifyCollectionChanged, INotifyPropertyChanged'
    typeParameters:
    - id: T
      description: The type of object contained in the list.
    content.vb: Public Class ObservableList(Of T) Implements IList(Of T), ICollection(Of T), IEnumerable(Of T), IEnumerable, INotifyCollectionChanged, INotifyPropertyChanged
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.FileTypeSupport.Framework.Core.Settings.ComplexObservableList`1
  implements:
  - System.Collections.Generic.IList{{T}}
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  - System.Collections.Specialized.INotifyCollectionChanged
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ObservableList(Of T)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T)
  name.vb: ObservableList(Of T)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.CreateObservableStringList(System.String[])
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.CreateObservableStringList(System.String[])
  id: CreateObservableStringList(System.String[])
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: CreateObservableStringList(string[])
  nameWithType: ObservableList<T>.CreateObservableStringList(string[])
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.CreateObservableStringList(string[])
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: >-
    Factory method used by the Spring framework to create observable string lists

    to assign to the properties that require them.
  example: []
  syntax:
    content: public static ObservableList<string> CreateObservableStringList(string[] strings)
    parameters:
    - id: strings
      type: System.String[]
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList{System.String}
      description: ''
    content.vb: Public Shared Function CreateObservableStringList(strings As String()) As ObservableList(Of String)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.CreateObservableStringList*
  nameWithType.vb: ObservableList(Of T).CreateObservableStringList(String())
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).CreateObservableStringList(String())
  name.vb: CreateObservableStringList(String())
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: ObservableList()
  nameWithType: ObservableList<T>.ObservableList()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.ObservableList()
  type: Constructor
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Default constructor creating a new empty list with a default capacity.
  example: []
  syntax:
    content: public ObservableList()
    content.vb: Public Sub New()
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.#ctor*
  nameWithType.vb: ObservableList(Of T).New()
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).New()
  name.vb: New()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: ObservableList(IEnumerable<T>)
  nameWithType: ObservableList<T>.ObservableList(IEnumerable<T>)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.ObservableList(System.Collections.Generic.IEnumerable<T>)
  type: Constructor
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Constructor which takes a collection of T and adds it to this list
  example: []
  syntax:
    content: public ObservableList(IEnumerable<T> collection)
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection to be added
    content.vb: Public Sub New(collection As IEnumerable(Of T))
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.#ctor*
  nameWithType.vb: ObservableList(Of T).New(IEnumerable(Of T))
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).New(System.Collections.Generic.IEnumerable(Of T))
  name.vb: New(IEnumerable(Of T))
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  id: InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: InsertRange(int, IEnumerable<T>)
  nameWithType: ObservableList<T>.InsertRange(int, IEnumerable<T>)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.InsertRange(int, System.Collections.Generic.IEnumerable<T>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Inserts the elements of a collection into list at the specified index.
  example: []
  syntax:
    content: public void InsertRange(int index, IEnumerable<T> collection)
    parameters:
    - id: index
      type: System.Int32
      description: The index to insert elements at.
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The elements to insert into the list.
    content.vb: Public Sub InsertRange(index As Integer, collection As IEnumerable(Of T))
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.InsertRange*
  nameWithType.vb: ObservableList(Of T).InsertRange(Integer, IEnumerable(Of T))
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).InsertRange(Integer, System.Collections.Generic.IEnumerable(Of T))
  name.vb: InsertRange(Integer, IEnumerable(Of T))
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  id: AddRange(System.Collections.Generic.IEnumerable{`0})
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: AddRange(IEnumerable<T>)
  nameWithType: ObservableList<T>.AddRange(IEnumerable<T>)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Adds the elements of the specified collection to the list.
  example: []
  syntax:
    content: public void AddRange(IEnumerable<T> collection)
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection of elements to add to the list.
    content.vb: Public Sub AddRange(collection As IEnumerable(Of T))
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.AddRange*
  nameWithType.vb: ObservableList(Of T).AddRange(IEnumerable(Of T))
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.ToArray
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.ToArray
  id: ToArray
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: ToArray()
  nameWithType: ObservableList<T>.ToArray()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.ToArray()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Copies the elements of the list to a new array.
  example: []
  syntax:
    content: public T[] ToArray()
    return:
      type: '{T}[]'
      description: A new array containing the elements of the list.
    content.vb: Public Function ToArray() As T()
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.ToArray*
  nameWithType.vb: ObservableList(Of T).ToArray()
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).ToArray()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Sort
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Sort
  id: Sort
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: Sort()
  nameWithType: ObservableList<T>.Sort()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Sort()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Sorts the list using the default comparer.
  example: []
  syntax:
    content: public void Sort()
    content.vb: Public Sub Sort()
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Sort*
  nameWithType.vb: ObservableList(Of T).Sort()
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Sort()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Sort(System.Collections.Generic.IComparer{`0})
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Sort(System.Collections.Generic.IComparer{`0})
  id: Sort(System.Collections.Generic.IComparer{`0})
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: Sort(IComparer<T>)
  nameWithType: ObservableList<T>.Sort(IComparer<T>)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Sort(System.Collections.Generic.IComparer<T>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Sorts the list using the provided comparer.
  example: []
  syntax:
    content: public void Sort(IComparer<T> comparer)
    parameters:
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
      description: The comparer to sort the list with.
    content.vb: Public Sub Sort(comparer As IComparer(Of T))
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Sort*
  nameWithType.vb: ObservableList(Of T).Sort(IComparer(Of T))
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Sort(System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(IComparer(Of T))
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Sort(System.Comparison{`0})
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Sort(System.Comparison{`0})
  id: Sort(System.Comparison{`0})
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: Sort(Comparison<T>)
  nameWithType: ObservableList<T>.Sort(Comparison<T>)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Sort(System.Comparison<T>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Sorts the list using the provided comparison delegate
  example: []
  syntax:
    content: public void Sort(Comparison<T> comparison)
    parameters:
    - id: comparison
      type: System.Comparison{{T}}
      description: The delegate to use when comparing
    content.vb: Public Sub Sort(comparison As Comparison(Of T))
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Sort*
  nameWithType.vb: ObservableList(Of T).Sort(Comparison(Of T))
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Sort(System.Comparison(Of T))
  name.vb: Sort(Comparison(Of T))
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.IndexOf(`0)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: IndexOf(T)
  nameWithType: ObservableList<T>.IndexOf(T)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.IndexOf(T)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Determines the index of the specified item in the list.
  example: []
  syntax:
    content: public int IndexOf(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The item to locate in the list.
    return:
      type: System.Int32
      description: The zero-based index of the item in the list.
    content.vb: Public Function IndexOf(item As T) As Integer
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.IndexOf*
  implements:
  - System.Collections.Generic.IList{{T}}.IndexOf({T})
  nameWithType.vb: ObservableList(Of T).IndexOf(T)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).IndexOf(T)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Insert(System.Int32,`0)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: Insert(int, T)
  nameWithType: ObservableList<T>.Insert(int, T)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Insert(int, T)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Inserts an item into the list at the specified index.
  example: []
  syntax:
    content: public void Insert(int index, T item)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index to insert the item at.
    - id: item
      type: '{T}'
      description: The item to insert into the list.
    content.vb: Public Sub Insert(index As Integer, item As T)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Insert*
  implements:
  - System.Collections.Generic.IList{{T}}.Insert(System.Int32,{T})
  nameWithType.vb: ObservableList(Of T).Insert(Integer, T)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Find(System.Predicate{`0})
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Find(System.Predicate{`0})
  id: Find(System.Predicate{`0})
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: Find(Predicate<T>)
  nameWithType: ObservableList<T>.Find(Predicate<T>)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Find(System.Predicate<T>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: >-
    Searches for an element that matches the conditions defined by the specified predicate, 

    and returns the first occurrence within the entire ObservableList.
  example: []
  syntax:
    content: public T Find(Predicate<T> match)
    parameters:
    - id: match
      type: System.Predicate{{T}}
      description: The <xref href="System.Predicate%601" data-throw-if-not-resolved="false"></xref> delegate that defines the conditions of the element to search for.
    return:
      type: '{T}'
      description: The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type T.
    content.vb: Public Function Find(match As Predicate(Of T)) As T
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Find*
  nameWithType.vb: ObservableList(Of T).Find(Predicate(Of T))
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Find(System.Predicate(Of T))
  name.vb: Find(Predicate(Of T))
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.RemoveAt(System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: RemoveAt(int)
  nameWithType: ObservableList<T>.RemoveAt(int)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.RemoveAt(int)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Removes the list item at the specified index.
  example: []
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the item to remove.
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.RemoveAt*
  implements:
  - System.Collections.Generic.IList{{T}}.RemoveAt(System.Int32)
  nameWithType.vb: ObservableList(Of T).RemoveAt(Integer)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Add(`0)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Add(`0)
  id: Add(`0)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: ObservableList<T>.Add(T)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Add(T)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Adds an item to the list.
  example: []
  syntax:
    content: public void Add(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The item to add to the list.
    content.vb: Public Sub Add(item As T)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Add*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Add({T})
  nameWithType.vb: ObservableList(Of T).Add(T)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Add(T)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Clear
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Clear
  id: Clear
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ObservableList<T>.Clear()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Clear()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Removes all items from the list.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Clear*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Clear
  nameWithType.vb: ObservableList(Of T).Clear()
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Clear()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Contains(`0)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Contains(`0)
  id: Contains(`0)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: ObservableList<T>.Contains(T)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Contains(T)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Determines whether the list contains a specific item.
  example: []
  syntax:
    content: public bool Contains(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The item to search the list for.
    return:
      type: System.Boolean
      description: <code>true</code> if the list contains the item.
    content.vb: Public Function Contains(item As T) As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Contains*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Contains({T})
  nameWithType.vb: ObservableList(Of T).Contains(T)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Contains(T)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.CopyTo(`0[],System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: CopyTo(T[], int)
  nameWithType: ObservableList<T>.CopyTo(T[], int)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.CopyTo(T[], int)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Copies the elements of the list to an array, starting at a particular index.
  example: []
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    parameters:
    - id: array
      type: '{T}[]'
      description: The array to copy the list items in to.
    - id: arrayIndex
      type: System.Int32
      description: The zero-based index of the array from which to start copying.
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  nameWithType.vb: ObservableList(Of T).CopyTo(T(), Integer)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Remove(`0)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Remove(`0)
  id: Remove(`0)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: ObservableList<T>.Remove(T)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Remove(T)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Removes the first occurrence of a specific item from the list.
  example: []
  syntax:
    content: public bool Remove(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The item to remove.
    return:
      type: System.Boolean
      description: <code>true</code> if the item was successfully removed.
    content.vb: Public Function Remove(item As T) As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Remove*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Remove({T})
  nameWithType.vb: ObservableList(Of T).Remove(T)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Remove(T)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetEnumerator
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetEnumerator
  id: GetEnumerator
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ObservableList<T>.GetEnumerator()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.GetEnumerator()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Returns an enumerator that iterates through the list.
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: An enumerator that iterates through the list.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of T)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: ObservableList(Of T).GetEnumerator()
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).GetEnumerator()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  id: SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: SaveToSettingsGroup(ISettingsGroup, string)
  nameWithType: ObservableList<T>.SaveToSettingsGroup(ISettingsGroup, string)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup, string)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Saves this list to the settings group using the setting ID as a base.
  example: []
  syntax:
    content: public virtual void SaveToSettingsGroup(ISettingsGroup settingsGroup, string listSettingId)
    parameters:
    - id: settingsGroup
      type: Sdl.Core.Settings.ISettingsGroup
      description: The settings group to save to.
    - id: listSettingId
      type: System.String
      description: The setting ID to use as a base when saving the list.
    content.vb: Public Overridable Sub SaveToSettingsGroup(settingsGroup As ISettingsGroup, listSettingId As String)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.SaveToSettingsGroup*
  nameWithType.vb: ObservableList(Of T).SaveToSettingsGroup(ISettingsGroup, String)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup, String)
  name.vb: SaveToSettingsGroup(ISettingsGroup, String)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  id: PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: PopulateFromSettingsGroup(ISettingsGroup, string)
  nameWithType: ObservableList<T>.PopulateFromSettingsGroup(ISettingsGroup, string)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup, string)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Restores the list from the settings group and populates itself using the setting ID as its base.
  example: []
  syntax:
    content: public virtual void PopulateFromSettingsGroup(ISettingsGroup settingsGroup, string listSettingId)
    parameters:
    - id: settingsGroup
      type: Sdl.Core.Settings.ISettingsGroup
      description: The settings group to load from.
    - id: listSettingId
      type: System.String
      description: The setting ID to use as a base when populating the list.
    content.vb: Public Overridable Sub PopulateFromSettingsGroup(settingsGroup As ISettingsGroup, listSettingId As String)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.PopulateFromSettingsGroup*
  nameWithType.vb: ObservableList(Of T).PopulateFromSettingsGroup(ISettingsGroup, String)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup, String)
  name.vb: PopulateFromSettingsGroup(ISettingsGroup, String)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.ClearListItemSettings(Sdl.Core.Settings.ISettingsGroup,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.ClearListItemSettings(Sdl.Core.Settings.ISettingsGroup,System.String)
  id: ClearListItemSettings(Sdl.Core.Settings.ISettingsGroup,System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: ClearListItemSettings(ISettingsGroup, string)
  nameWithType: ObservableList<T>.ClearListItemSettings(ISettingsGroup, string)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.ClearListItemSettings(Sdl.Core.Settings.ISettingsGroup, string)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: >-
    Removes all saved items belonging to this list from the stored settings group. This is

    called from <xref href="Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList%601.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to make sure that the settings being updated

    are all saved cleanly.
  example: []
  syntax:
    content: public virtual void ClearListItemSettings(ISettingsGroup settingsGroup, string listSettingId)
    parameters:
    - id: settingsGroup
      type: Sdl.Core.Settings.ISettingsGroup
      description: The settings group to remove the settings from.
    - id: listSettingId
      type: System.String
      description: The ID of the setting to remove.
    content.vb: Public Overridable Sub ClearListItemSettings(settingsGroup As ISettingsGroup, listSettingId As String)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.ClearListItemSettings*
  nameWithType.vb: ObservableList(Of T).ClearListItemSettings(ISettingsGroup, String)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).ClearListItemSettings(Sdl.Core.Settings.ISettingsGroup, String)
  name.vb: ClearListItemSettings(ISettingsGroup, String)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetListItemFromSettings(Sdl.Core.Settings.ISettingsGroup,System.String,System.Boolean@)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetListItemFromSettings(Sdl.Core.Settings.ISettingsGroup,System.String,System.Boolean@)
  id: GetListItemFromSettings(Sdl.Core.Settings.ISettingsGroup,System.String,System.Boolean@)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: GetListItemFromSettings(ISettingsGroup, string, out bool)
  nameWithType: ObservableList<T>.GetListItemFromSettings(ISettingsGroup, string, out bool)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.GetListItemFromSettings(Sdl.Core.Settings.ISettingsGroup, string, out bool)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Gets the setting for the list item from the settings group and populates it.
  example: []
  syntax:
    content: protected virtual T GetListItemFromSettings(ISettingsGroup settingsGroup, string listItemSetting, out bool foundSetting)
    parameters:
    - id: settingsGroup
      type: Sdl.Core.Settings.ISettingsGroup
      description: The settings group containing the list item settings.
    - id: listItemSetting
      type: System.String
      description: The setting ID to use to retrieve the setting.
    - id: foundSetting
      type: System.Boolean
      description: A flag which reports if the setting was found or not.
    return:
      type: '{T}'
      description: The populated list item.
    content.vb: Protected Overridable Function GetListItemFromSettings(settingsGroup As ISettingsGroup, listItemSetting As String, foundSetting As Boolean) As T
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetListItemFromSettings*
  nameWithType.vb: ObservableList(Of T).GetListItemFromSettings(ISettingsGroup, String, Boolean)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).GetListItemFromSettings(Sdl.Core.Settings.ISettingsGroup, String, Boolean)
  name.vb: GetListItemFromSettings(ISettingsGroup, String, Boolean)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Equals(System.Object)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: ObservableList<T>.Equals(object)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Equals(object)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Determines whether the given object is equal to this object.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: given object
    return:
      type: System.Boolean
      description: whether equal to this object
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Equals*
  nameWithType.vb: ObservableList(Of T).Equals(Object)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Equals(Object)
  name.vb: Equals(Object)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetHashCode
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetHashCode
  id: GetHashCode
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ObservableList<T>.GetHashCode()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.GetHashCode()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Gets the hash code.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: hash code
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetHashCode*
  nameWithType.vb: ObservableList(Of T).GetHashCode()
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).GetHashCode()
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Item(System.Int32)
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: ObservableList<T>.this[int]
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.this[int]
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Retrieves the list item at the specified index.
  example: []
  syntax:
    content: public T this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the item to retrieve.
    return:
      type: '{T}'
      description: The item located at the index.
    content.vb: Public Default Property this[](index As Integer) As T
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Item*
  implements:
  - System.Collections.Generic.IList{{T}}.Item(System.Int32)
  nameWithType.vb: ObservableList(Of T).this[](Integer)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).this[](Integer)
  name.vb: this[](Integer)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Count
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Count
  id: Count
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ObservableList<T>.Count
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Count
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: The number of elements contained in the list.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Count*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Count
  nameWithType.vb: ObservableList(Of T).Count
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Count
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.IsReadOnly
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.IsReadOnly
  id: IsReadOnly
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ObservableList<T>.IsReadOnly
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.IsReadOnly
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Determines whether the list is read-only.
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{{T}}.IsReadOnly
  nameWithType.vb: ObservableList(Of T).IsReadOnly
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).IsReadOnly
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.CollectionChanged
  commentId: E:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.CollectionChanged
  id: CollectionChanged
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: CollectionChanged
  nameWithType: ObservableList<T>.CollectionChanged
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.CollectionChanged
  type: Event
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Event that is fired whenever the list collection has changed.
  example: []
  syntax:
    content: public event NotifyCollectionChangedEventHandler CollectionChanged
    return:
      type: System.Collections.Specialized.NotifyCollectionChangedEventHandler
    content.vb: Public Event CollectionChanged As NotifyCollectionChangedEventHandler
  implements:
  - System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
  nameWithType.vb: ObservableList(Of T).CollectionChanged
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).CollectionChanged
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.PropertyChanged
  commentId: E:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.PropertyChanged
  id: PropertyChanged
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: ObservableList<T>.PropertyChanged
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.PropertyChanged
  type: Event
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: Event that is fired whenever the value of a property on the list has changed.
  example: []
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  nameWithType.vb: ObservableList(Of T).PropertyChanged
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).PropertyChanged
references:
- uid: System.Collections.Specialized.INotifyCollectionChanged
  commentId: T:System.Collections.Specialized.INotifyCollectionChanged
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.inotifycollectionchanged
  name: INotifyCollectionChanged
  nameWithType: INotifyCollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: Sdl.FileTypeSupport.Framework.Core.Settings
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Settings
  isExternal: true
  href: Sdl.html
  name: Sdl.FileTypeSupport.Framework.Core.Settings
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Settings
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.Core
    name: Core
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Core.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.Core.Settings
    name: Settings
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Core.Settings.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.Core
    name: Core
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Core.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.Core.Settings
    name: Settings
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Core.Settings.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection{{T}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.CreateObservableStringList*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.CreateObservableStringList
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_CreateObservableStringList_System_String___
  name: CreateObservableStringList
  nameWithType: ObservableList<T>.CreateObservableStringList
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.CreateObservableStringList
  nameWithType.vb: ObservableList(Of T).CreateObservableStringList
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).CreateObservableStringList
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList{System.String}
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList{System.String}
  parent: Sdl.FileTypeSupport.Framework.Core.Settings
  definition: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html
  name: ObservableList<string>
  nameWithType: ObservableList<string>
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<string>
  nameWithType.vb: ObservableList(Of String)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of String)
  name.vb: ObservableList(Of String)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
    name: ObservableList
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
    name: ObservableList
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html
  name: ObservableList<T>
  nameWithType: ObservableList<T>
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>
  nameWithType.vb: ObservableList(Of T)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T)
  name.vb: ObservableList(Of T)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
    name: ObservableList
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1
    name: ObservableList
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.#ctor
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1__ctor
  name: ObservableList
  nameWithType: ObservableList<T>.ObservableList
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.ObservableList
  nameWithType.vb: ObservableList(Of T).New
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).New
  name.vb: New
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.InsertRange*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.InsertRange
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_InsertRange_System_Int32_System_Collections_Generic_IEnumerable__0__
  name: InsertRange
  nameWithType: ObservableList<T>.InsertRange
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.InsertRange
  nameWithType.vb: ObservableList(Of T).InsertRange
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).InsertRange
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.AddRange*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.AddRange
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_AddRange_System_Collections_Generic_IEnumerable__0__
  name: AddRange
  nameWithType: ObservableList<T>.AddRange
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.AddRange
  nameWithType.vb: ObservableList(Of T).AddRange
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).AddRange
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.ToArray*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.ToArray
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_ToArray
  name: ToArray
  nameWithType: ObservableList<T>.ToArray
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.ToArray
  nameWithType.vb: ObservableList(Of T).ToArray
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).ToArray
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Sort*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Sort
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_Sort
  name: Sort
  nameWithType: ObservableList<T>.Sort
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Sort
  nameWithType.vb: ObservableList(Of T).Sort
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Sort
- uid: System.Collections.Generic.IComparer{{T}}
  commentId: T:System.Collections.Generic.IComparer{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Comparison{{T}}
  commentId: T:System.Comparison{`0}
  parent: System
  definition: System.Comparison`1
  href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  name: Comparison<T>
  nameWithType: Comparison<T>
  fullName: System.Comparison<T>
  nameWithType.vb: Comparison(Of T)
  fullName.vb: System.Comparison(Of T)
  name.vb: Comparison(Of T)
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Comparison`1
  commentId: T:System.Comparison`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  name: Comparison<T>
  nameWithType: Comparison<T>
  fullName: System.Comparison<T>
  nameWithType.vb: Comparison(Of T)
  fullName.vb: System.Comparison(Of T)
  name.vb: Comparison(Of T)
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.IndexOf*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.IndexOf
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_IndexOf__0_
  name: IndexOf
  nameWithType: ObservableList<T>.IndexOf
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.IndexOf
  nameWithType.vb: ObservableList(Of T).IndexOf
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).IndexOf
- uid: System.Collections.Generic.IList{{T}}.IndexOf({T})
  commentId: M:System.Collections.Generic.IList{`0}.IndexOf(`0)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Insert*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Insert
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_Insert_System_Int32__0_
  name: Insert
  nameWithType: ObservableList<T>.Insert
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Insert
  nameWithType.vb: ObservableList(Of T).Insert
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Insert
- uid: System.Collections.Generic.IList{{T}}.Insert(System.Int32,{T})
  commentId: M:System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, T)
  nameWithType: IList<T>.Insert(int, T)
  fullName: System.Collections.Generic.IList<T>.Insert(int, T)
  nameWithType.vb: IList(Of T).Insert(Integer, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, T)
  nameWithType: IList<T>.Insert(int, T)
  fullName: System.Collections.Generic.IList<T>.Insert(int, T)
  nameWithType.vb: IList(Of T).Insert(Integer, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Find*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Find
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_Find_System_Predicate__0__
  name: Find
  nameWithType: ObservableList<T>.Find
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Find
  nameWithType.vb: ObservableList(Of T).Find
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Find
- uid: System.Predicate{{T}}
  commentId: T:System.Predicate{`0}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.RemoveAt*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.RemoveAt
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_RemoveAt_System_Int32_
  name: RemoveAt
  nameWithType: ObservableList<T>.RemoveAt
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.RemoveAt
  nameWithType.vb: ObservableList(Of T).RemoveAt
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).RemoveAt
- uid: System.Collections.Generic.IList{{T}}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<T>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(int)
  nameWithType.vb: IList(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<T>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(int)
  nameWithType.vb: IList(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Add*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Add
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_Add__0_
  name: Add
  nameWithType: ObservableList<T>.Add
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Add
  nameWithType.vb: ObservableList(Of T).Add
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Add
- uid: System.Collections.Generic.ICollection{{T}}.Add({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Add(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Clear*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Clear
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_Clear
  name: Clear
  nameWithType: ObservableList<T>.Clear
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Clear
  nameWithType.vb: ObservableList(Of T).Clear
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Clear
- uid: System.Collections.Generic.ICollection{{T}}.Clear
  commentId: M:System.Collections.Generic.ICollection{`0}.Clear
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Contains*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Contains
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_Contains__0_
  name: Contains
  nameWithType: ObservableList<T>.Contains
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Contains
  nameWithType.vb: ObservableList(Of T).Contains
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Contains
- uid: System.Collections.Generic.ICollection{{T}}.Contains({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Contains(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.CopyTo*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.CopyTo
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_CopyTo__0___System_Int32_
  name: CopyTo
  nameWithType: ObservableList<T>.CopyTo
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.CopyTo
  nameWithType.vb: ObservableList(Of T).CopyTo
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).CopyTo
- uid: System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Remove*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Remove
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_Remove__0_
  name: Remove
  nameWithType: ObservableList<T>.Remove
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Remove
  nameWithType.vb: ObservableList(Of T).Remove
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Remove
- uid: System.Collections.Generic.ICollection{{T}}.Remove({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Remove(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetEnumerator*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetEnumerator
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_GetEnumerator
  name: GetEnumerator
  nameWithType: ObservableList<T>.GetEnumerator
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.GetEnumerator
  nameWithType.vb: ObservableList(Of T).GetEnumerator
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.SaveToSettingsGroup*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.SaveToSettingsGroup
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_SaveToSettingsGroup_Sdl_Core_Settings_ISettingsGroup_System_String_
  name: SaveToSettingsGroup
  nameWithType: ObservableList<T>.SaveToSettingsGroup
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.SaveToSettingsGroup
  nameWithType.vb: ObservableList(Of T).SaveToSettingsGroup
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).SaveToSettingsGroup
- uid: Sdl.Core.Settings.ISettingsGroup
  commentId: T:Sdl.Core.Settings.ISettingsGroup
  parent: Sdl.Core.Settings
  isExternal: true
  name: ISettingsGroup
  nameWithType: ISettingsGroup
  fullName: Sdl.Core.Settings.ISettingsGroup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Sdl.Core.Settings
  commentId: N:Sdl.Core.Settings
  isExternal: true
  name: Sdl.Core.Settings
  nameWithType: Sdl.Core.Settings
  fullName: Sdl.Core.Settings
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
  - name: .
  - uid: Sdl.Core.Settings
    name: Settings
    isExternal: true
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
  - name: .
  - uid: Sdl.Core.Settings
    name: Settings
    isExternal: true
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.PopulateFromSettingsGroup*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.PopulateFromSettingsGroup
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_PopulateFromSettingsGroup_Sdl_Core_Settings_ISettingsGroup_System_String_
  name: PopulateFromSettingsGroup
  nameWithType: ObservableList<T>.PopulateFromSettingsGroup
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.PopulateFromSettingsGroup
  nameWithType.vb: ObservableList(Of T).PopulateFromSettingsGroup
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).PopulateFromSettingsGroup
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_SaveToSettingsGroup_Sdl_Core_Settings_ISettingsGroup_System_String_
  name: SaveToSettingsGroup(ISettingsGroup, string)
  nameWithType: ObservableList<T>.SaveToSettingsGroup(ISettingsGroup, string)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup, string)
  nameWithType.vb: ObservableList(Of T).SaveToSettingsGroup(ISettingsGroup, String)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup, String)
  name.vb: SaveToSettingsGroup(ISettingsGroup, String)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
    name: SaveToSettingsGroup
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_SaveToSettingsGroup_Sdl_Core_Settings_ISettingsGroup_System_String_
  - name: (
  - uid: Sdl.Core.Settings.ISettingsGroup
    name: ISettingsGroup
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
    name: SaveToSettingsGroup
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_SaveToSettingsGroup_Sdl_Core_Settings_ISettingsGroup_System_String_
  - name: (
  - uid: Sdl.Core.Settings.ISettingsGroup
    name: ISettingsGroup
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.ClearListItemSettings*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.ClearListItemSettings
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_ClearListItemSettings_Sdl_Core_Settings_ISettingsGroup_System_String_
  name: ClearListItemSettings
  nameWithType: ObservableList<T>.ClearListItemSettings
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.ClearListItemSettings
  nameWithType.vb: ObservableList(Of T).ClearListItemSettings
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).ClearListItemSettings
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetListItemFromSettings*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetListItemFromSettings
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_GetListItemFromSettings_Sdl_Core_Settings_ISettingsGroup_System_String_System_Boolean__
  name: GetListItemFromSettings
  nameWithType: ObservableList<T>.GetListItemFromSettings
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.GetListItemFromSettings
  nameWithType.vb: ObservableList(Of T).GetListItemFromSettings
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).GetListItemFromSettings
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Equals*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Equals
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_Equals_System_Object_
  name: Equals
  nameWithType: ObservableList<T>.Equals
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Equals
  nameWithType.vb: ObservableList(Of T).Equals
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetHashCode*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.GetHashCode
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_GetHashCode
  name: GetHashCode
  nameWithType: ObservableList<T>.GetHashCode
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.GetHashCode
  nameWithType.vb: ObservableList(Of T).GetHashCode
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).GetHashCode
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Item*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Item
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_Item_System_Int32_
  name: this
  nameWithType: ObservableList<T>.this
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.this
  nameWithType.vb: ObservableList(Of T).this[]
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).this[]
  name.vb: this[]
- uid: System.Collections.Generic.IList{{T}}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{`0}.Item(System.Int32)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<T>.this[int]
  fullName: System.Collections.Generic.IList<T>.this[int]
  nameWithType.vb: IList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<T>.this[int]
  fullName: System.Collections.Generic.IList<T>.this[int]
  nameWithType.vb: IList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Count*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.Count
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_Count
  name: Count
  nameWithType: ObservableList<T>.Count
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.Count
  nameWithType.vb: ObservableList(Of T).Count
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).Count
- uid: System.Collections.Generic.ICollection{{T}}.Count
  commentId: P:System.Collections.Generic.ICollection{`0}.Count
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.IsReadOnly*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList`1.IsReadOnly
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList-1.html#Sdl_FileTypeSupport_Framework_Core_Settings_ObservableList_1_IsReadOnly
  name: IsReadOnly
  nameWithType: ObservableList<T>.IsReadOnly
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList<T>.IsReadOnly
  nameWithType.vb: ObservableList(Of T).IsReadOnly
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.ObservableList(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection{{T}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{`0}.IsReadOnly
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
  commentId: E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
  parent: System.Collections.Specialized.INotifyCollectionChanged
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.inotifycollectionchanged.collectionchanged
  name: CollectionChanged
  nameWithType: INotifyCollectionChanged.CollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
- uid: System.Collections.Specialized.NotifyCollectionChangedEventHandler
  commentId: T:System.Collections.Specialized.NotifyCollectionChangedEventHandler
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventhandler
  name: NotifyCollectionChangedEventHandler
  nameWithType: NotifyCollectionChangedEventHandler
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventHandler
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged.propertychanged
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventhandler
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
