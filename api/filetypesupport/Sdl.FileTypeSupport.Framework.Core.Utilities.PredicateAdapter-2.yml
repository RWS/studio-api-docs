### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2
  id: PredicateAdapter`2
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities
  children:
  - Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.#ctor(System.Predicate{`0})
  - Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Adaptee
  - Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Evaluate(`1)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Target
  langs:
  - csharp
  - vb
  name: PredicateAdapter<AdapteeType, TargetType>
  nameWithType: PredicateAdapter<AdapteeType, TargetType>
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter<AdapteeType, TargetType>
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities
  summary: "\nGeneric adapter that allows one predicate to be used\nas another.\n"
  remarks: "\nTo use the adapter, construct it from the implementation predicate and \npass the value of the <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter%602.Target\" data-throw-if-not-resolved=\"false\"></xref> property to the method that requires a\npredicate of the Into type.\n"
  syntax:
    content: >-
      public class PredicateAdapter<AdapteeType, TargetType>
          where AdapteeType : class
    typeParameters:
    - id: AdapteeType
      description: The generic argument type of the implementation predicate
    - id: TargetType
      description: The generic argument type of the desired predicate
    content.vb: Public Class PredicateAdapter(Of AdapteeType As Class, TargetType)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: PredicateAdapter(Of AdapteeType, TargetType)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter(Of AdapteeType, TargetType)
  name.vb: PredicateAdapter(Of AdapteeType, TargetType)
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.#ctor(System.Predicate{`0})
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.#ctor(System.Predicate{`0})
  id: '#ctor(System.Predicate{`0})'
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2
  langs:
  - csharp
  - vb
  name: PredicateAdapter(Predicate<AdapteeType>)
  nameWithType: PredicateAdapter<AdapteeType, TargetType>.PredicateAdapter(Predicate<AdapteeType>)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter<AdapteeType, TargetType>.PredicateAdapter(System.Predicate<AdapteeType>)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities
  summary: "\nConstruct the adapter from an implementation predicate.\n"
  syntax:
    content: public PredicateAdapter(Predicate<AdapteeType> adaptee)
    parameters:
    - id: adaptee
      type: System.Predicate{{AdapteeType}}
    content.vb: Public Sub New(adaptee As Predicate(Of AdapteeType))
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.#ctor*
  nameWithType.vb: PredicateAdapter(Of AdapteeType, TargetType).PredicateAdapter(Predicate(Of AdapteeType))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter(Of AdapteeType, TargetType).PredicateAdapter(System.Predicate(Of AdapteeType))
  name.vb: PredicateAdapter(Predicate(Of AdapteeType))
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Evaluate(`1)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Evaluate(`1)
  id: Evaluate(`1)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2
  langs:
  - csharp
  - vb
  name: Evaluate(TargetType)
  nameWithType: PredicateAdapter<AdapteeType, TargetType>.Evaluate(TargetType)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter<AdapteeType, TargetType>.Evaluate(TargetType)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities
  summary: "\nImplementation of the adapter. Attempts to cast the \nargument from the AdapteeType into the TargetType and\nif successful, evaluates the implementation predicate\nfor it. If the cast is unsuccessful, the method returns false.\n"
  syntax:
    content: public bool Evaluate(TargetType toEvaluate)
    parameters:
    - id: toEvaluate
      type: '{TargetType}'
    return:
      type: System.Boolean
      description: result of the implementation predicate
    content.vb: Public Function Evaluate(toEvaluate As TargetType) As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Evaluate*
  nameWithType.vb: PredicateAdapter(Of AdapteeType, TargetType).Evaluate(TargetType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter(Of AdapteeType, TargetType).Evaluate(TargetType)
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Adaptee
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Adaptee
  id: Adaptee
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2
  langs:
  - csharp
  - vb
  name: Adaptee
  nameWithType: PredicateAdapter<AdapteeType, TargetType>.Adaptee
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter<AdapteeType, TargetType>.Adaptee
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities
  summary: "\nThe predicate used for the evaluation.\n"
  syntax:
    content: public Predicate<AdapteeType> Adaptee { get; set; }
    parameters: []
    return:
      type: System.Predicate{{AdapteeType}}
    content.vb: Public Property Adaptee As Predicate(Of AdapteeType)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Adaptee*
  nameWithType.vb: PredicateAdapter(Of AdapteeType, TargetType).Adaptee
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter(Of AdapteeType, TargetType).Adaptee
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Target
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Target
  id: Target
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: PredicateAdapter<AdapteeType, TargetType>.Target
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter<AdapteeType, TargetType>.Target
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities
  summary: "\nThe implementation of the desired predicate.\n"
  syntax:
    content: public Predicate<TargetType> Target { get; }
    parameters: []
    return:
      type: System.Predicate{{TargetType}}
    content.vb: Public ReadOnly Property Target As Predicate(Of TargetType)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Target*
  nameWithType.vb: PredicateAdapter(Of AdapteeType, TargetType).Target
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter(Of AdapteeType, TargetType).Target
references:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Utilities
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Core.Utilities
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Utilities
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.#ctor
  isExternal: true
  name: PredicateAdapter
  nameWithType: PredicateAdapter<AdapteeType, TargetType>.PredicateAdapter
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter<AdapteeType, TargetType>.PredicateAdapter
  nameWithType.vb: PredicateAdapter(Of AdapteeType, TargetType).PredicateAdapter
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter(Of AdapteeType, TargetType).PredicateAdapter
- uid: System.Predicate{{AdapteeType}}
  commentId: T:System.Predicate{`0}
  parent: System
  definition: System.Predicate`1
  name: Predicate<AdapteeType>
  nameWithType: Predicate<AdapteeType>
  fullName: System.Predicate<AdapteeType>
  nameWithType.vb: Predicate(Of AdapteeType)
  fullName.vb: System.Predicate(Of AdapteeType)
  name.vb: Predicate(Of AdapteeType)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: AdapteeType
    nameWithType: AdapteeType
    fullName: AdapteeType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: AdapteeType
    nameWithType: AdapteeType
    fullName: AdapteeType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Evaluate*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Evaluate
  isExternal: true
  name: Evaluate
  nameWithType: PredicateAdapter<AdapteeType, TargetType>.Evaluate
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter<AdapteeType, TargetType>.Evaluate
  nameWithType.vb: PredicateAdapter(Of AdapteeType, TargetType).Evaluate
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter(Of AdapteeType, TargetType).Evaluate
- uid: '{TargetType}'
  commentId: '!:TargetType'
  definition: TargetType
  name: TargetType
  nameWithType: TargetType
  fullName: TargetType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TargetType
  commentId: '!:TargetType'
  name: TargetType
  nameWithType: TargetType
  fullName: TargetType
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Adaptee*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Adaptee
  isExternal: true
  name: Adaptee
  nameWithType: PredicateAdapter<AdapteeType, TargetType>.Adaptee
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter<AdapteeType, TargetType>.Adaptee
  nameWithType.vb: PredicateAdapter(Of AdapteeType, TargetType).Adaptee
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter(Of AdapteeType, TargetType).Adaptee
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Target*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter`2.Target
  isExternal: true
  name: Target
  nameWithType: PredicateAdapter<AdapteeType, TargetType>.Target
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter<AdapteeType, TargetType>.Target
  nameWithType.vb: PredicateAdapter(Of AdapteeType, TargetType).Target
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Utilities.PredicateAdapter(Of AdapteeType, TargetType).Target
- uid: System.Predicate{{TargetType}}
  commentId: T:System.Predicate{`1}
  parent: System
  definition: System.Predicate`1
  name: Predicate<TargetType>
  nameWithType: Predicate<TargetType>
  fullName: System.Predicate<TargetType>
  nameWithType.vb: Predicate(Of TargetType)
  fullName.vb: System.Predicate(Of TargetType)
  name.vb: Predicate(Of TargetType)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TargetType
    nameWithType: TargetType
    fullName: TargetType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TargetType
    nameWithType: TargetType
    fullName: TargetType
  - name: )
    nameWithType: )
    fullName: )
