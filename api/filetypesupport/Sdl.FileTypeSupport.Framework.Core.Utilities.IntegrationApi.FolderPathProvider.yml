### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider
  id: FolderPathProvider
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.#ctor(System.String)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.IgnoreProposedFilename
  - Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.InitializeOutputSettings(Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.OutputFolder
  - Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.Provider
  langs:
  - csharp
  - vb
  name: FolderPathProvider
  nameWithType: FolderPathProvider
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  summary: "\nImplementation of the output settings provider that saves the files\nwith their original name in the specified output folder.\n"
  syntax:
    content: public class FolderPathProvider
    content.vb: Public Class FolderPathProvider
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.#ctor(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider
  langs:
  - csharp
  - vb
  name: FolderPathProvider(String)
  nameWithType: FolderPathProvider.FolderPathProvider(String)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.FolderPathProvider(System.String)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  summary: "\nConstruct with a specified folder path\n"
  syntax:
    content: public FolderPathProvider(string outputFolder)
    parameters:
    - id: outputFolder
      type: System.String
    content.vb: Public Sub New(outputFolder As String)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.InitializeOutputSettings(Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.InitializeOutputSettings(Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo)
  id: InitializeOutputSettings(Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider
  langs:
  - csharp
  - vb
  name: InitializeOutputSettings(INativeOutputFileProperties, IPersistentFileConversionProperties, IOutputFileInfo)
  nameWithType: FolderPathProvider.InitializeOutputSettings(INativeOutputFileProperties, IPersistentFileConversionProperties, IOutputFileInfo)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.InitializeOutputSettings(Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties, Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties, Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  summary: "\nCreates the output file path by combining the <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.OutputFolder\" data-throw-if-not-resolved=\"false\"></xref> path with the \nfile name proposed by the file type component or the name of the original file.\n"
  syntax:
    content: public void InitializeOutputSettings(INativeOutputFileProperties outputProperties, IPersistentFileConversionProperties conversionProperties, IOutputFileInfo suggestedFileInfo)
    parameters:
    - id: outputProperties
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties
    - id: conversionProperties
      type: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    - id: suggestedFileInfo
      type: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo
      description: "the file name is used if available \nand if <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.IgnoreProposedFilename\" data-throw-if-not-resolved=\"false\"></xref> is false."
    content.vb: Public Sub InitializeOutputSettings(outputProperties As INativeOutputFileProperties, conversionProperties As IPersistentFileConversionProperties, suggestedFileInfo As IOutputFileInfo)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.InitializeOutputSettings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.OutputFolder
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.OutputFolder
  id: OutputFolder
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider
  langs:
  - csharp
  - vb
  name: OutputFolder
  nameWithType: FolderPathProvider.OutputFolder
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.OutputFolder
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  summary: "\nThe folder path\n"
  syntax:
    content: public string OutputFolder { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property OutputFolder As String
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.OutputFolder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.IgnoreProposedFilename
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.IgnoreProposedFilename
  id: IgnoreProposedFilename
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider
  langs:
  - csharp
  - vb
  name: IgnoreProposedFilename
  nameWithType: FolderPathProvider.IgnoreProposedFilename
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.IgnoreProposedFilename
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  summary: "\nIf <code>true</code> (default), the name of the original file will\nalways be used, even if a proposed file name is passed\nto the output settings provider. \nIf <code>false</code>, the proposed file name is used (if available),\notherwise the original file name is used.\n"
  syntax:
    content: public bool IgnoreProposedFilename { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IgnoreProposedFilename As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.IgnoreProposedFilename*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.Provider
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.Provider
  id: Provider
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: FolderPathProvider.Provider
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.Provider
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  summary: "\nThe provider that generates file names for this output folder.\n"
  syntax:
    content: public OutputPropertiesProvider Provider { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
    content.vb: Public ReadOnly Property Provider As OutputPropertiesProvider
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.Provider*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.#ctor
  isExternal: true
  name: FolderPathProvider
  nameWithType: FolderPathProvider.FolderPathProvider
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.FolderPathProvider
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.InitializeOutputSettings*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.InitializeOutputSettings
  isExternal: true
  name: InitializeOutputSettings
  nameWithType: FolderPathProvider.InitializeOutputSettings
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.InitializeOutputSettings
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: INativeOutputFileProperties
  nameWithType: INativeOutputFileProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IPersistentFileConversionProperties
  nameWithType: IPersistentFileConversionProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IOutputFileInfo
  nameWithType: IOutputFileInfo
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.OutputFolder*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.OutputFolder
  isExternal: true
  name: OutputFolder
  nameWithType: FolderPathProvider.OutputFolder
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.OutputFolder
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.IgnoreProposedFilename*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.IgnoreProposedFilename
  isExternal: true
  name: IgnoreProposedFilename
  nameWithType: FolderPathProvider.IgnoreProposedFilename
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.IgnoreProposedFilename
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.Provider*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.Provider
  isExternal: true
  name: Provider
  nameWithType: FolderPathProvider.Provider
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.IntegrationApi.FolderPathProvider.Provider
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: OutputPropertiesProvider
  nameWithType: OutputPropertiesProvider
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
