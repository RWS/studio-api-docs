### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  id: FileTypeProfile
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.#ctor
  - Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.ApplyProfile(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition,Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.Description
  - Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.Expression
  - Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.ExtensionData
  - Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileDialogWildcardExpression
  - Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDefinitionId
  - Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDocumentName
  - Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDocumentsName
  - Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeName
  - Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.GetFileTypeProfile(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.GetFileTypeProfileXml(Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.IconContent
  - Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.IsStandardCustomization
  langs:
  - csharp
  - vb
  name: FileTypeProfile
  nameWithType: FileTypeProfile
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThis class is a collection of data that&apos;s required to build up an XML chunk for file type information override\n"
  syntax:
    content: public sealed class FileTypeProfile
    content.vb: Public NotInheritable Class FileTypeProfile
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.IExtensibleDataObject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.GetFileTypeProfile(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.GetFileTypeProfile(System.String)
  id: GetFileTypeProfile(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  langs:
  - csharp
  - vb
  name: GetFileTypeProfile(String)
  nameWithType: FileTypeProfile.GetFileTypeProfile(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.GetFileTypeProfile(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets the file type profile from the given file type profile xml.\n"
  syntax:
    content: public static FileTypeProfile GetFileTypeProfile(string fileTypeProfileXml)
    parameters:
    - id: fileTypeProfileXml
      type: System.String
      description: file type profile xml
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
      description: file type profile
    content.vb: Public Shared Function GetFileTypeProfile(fileTypeProfileXml As String) As FileTypeProfile
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.GetFileTypeProfile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.GetFileTypeProfileXml(Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.GetFileTypeProfileXml(Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  id: GetFileTypeProfileXml(Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  langs:
  - csharp
  - vb
  name: GetFileTypeProfileXml(FileTypeProfile)
  nameWithType: FileTypeProfile.GetFileTypeProfileXml(FileTypeProfile)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.GetFileTypeProfileXml(Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets the file type profile xml from the given file type profile.\n"
  syntax:
    content: public static string GetFileTypeProfileXml(FileTypeProfile fileTypeProfile)
    parameters:
    - id: fileTypeProfile
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
      description: file type profile
    return:
      type: System.String
      description: file type profile xml
    content.vb: Public Shared Function GetFileTypeProfileXml(fileTypeProfile As FileTypeProfile) As String
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.GetFileTypeProfileXml*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.ApplyProfile(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition,Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.ApplyProfile(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition,Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  id: ApplyProfile(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition,Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  langs:
  - csharp
  - vb
  name: ApplyProfile(IFileTypeDefinition, FileTypeProfile)
  nameWithType: FileTypeProfile.ApplyProfile(IFileTypeDefinition, FileTypeProfile)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.ApplyProfile(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition, Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nApplies the profile to the provided file type definition\n"
  syntax:
    content: public static void ApplyProfile(IFileTypeDefinition fileTypeDefinition, FileTypeProfile fileTypeProfile)
    parameters:
    - id: fileTypeDefinition
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
      description: The file type definition to override with the profile.
    - id: fileTypeProfile
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
      description: The profile to use.
    content.vb: Public Shared Sub ApplyProfile(fileTypeDefinition As IFileTypeDefinition, fileTypeProfile As FileTypeProfile)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.ApplyProfile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  langs:
  - csharp
  - vb
  name: FileTypeProfile()
  nameWithType: FileTypeProfile.FileTypeProfile()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeProfile()
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  syntax:
    content: public FileTypeProfile()
    content.vb: Public Sub New
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDefinitionId
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDefinitionId
  id: FileTypeDefinitionId
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  langs:
  - csharp
  - vb
  name: FileTypeDefinitionId
  nameWithType: FileTypeProfile.FileTypeDefinitionId
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDefinitionId
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nUnique file type definition identifier.\nThe convention is to use the following format: &quot;[Document Type] [Document Type Version] v [File Type Definition version]&quot;,\nwhere the file type definition version is a four digit version number.\nExample: &quot;SDL XLIFF 1.0 v 1.0.0.0&quot;, for version 1.0.0.0 of the file type definition for \nthe SDL XLIFF file format, version 1.0, or &quot;Microsoft Word 2007 v 1.1.0.0&quot;, and so on.\n"
  syntax:
    content: public string FileTypeDefinitionId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileTypeDefinitionId As String
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDefinitionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeName
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeName
  id: FileTypeName
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  langs:
  - csharp
  - vb
  name: FileTypeName
  nameWithType: FileTypeProfile.FileTypeName
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeName
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nFriendly name for the file type, which may be shown to the user.\n"
  syntax:
    content: public string FileTypeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileTypeName As String
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDocumentName
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDocumentName
  id: FileTypeDocumentName
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  langs:
  - csharp
  - vb
  name: FileTypeDocumentName
  nameWithType: FileTypeProfile.FileTypeDocumentName
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDocumentName
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nFriendly name of the type of an individual file of this file type. This is used\nwhen referring to a single item, e.g. in a File Save As dialog.\n"
  syntax:
    content: public string FileTypeDocumentName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileTypeDocumentName As String
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDocumentName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDocumentsName
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDocumentsName
  id: FileTypeDocumentsName
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  langs:
  - csharp
  - vb
  name: FileTypeDocumentsName
  nameWithType: FileTypeProfile.FileTypeDocumentsName
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDocumentsName
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nFriendly name of a set of files of this file type. This name is used when referring\nto a collection of files, e.g. in a File Open dialog.\n"
  syntax:
    content: public string FileTypeDocumentsName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileTypeDocumentsName As String
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDocumentsName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileDialogWildcardExpression
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileDialogWildcardExpression
  id: FileDialogWildcardExpression
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  langs:
  - csharp
  - vb
  name: FileDialogWildcardExpression
  nameWithType: FileTypeProfile.FileDialogWildcardExpression
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileDialogWildcardExpression
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe wildcard expression shows up with the file type name in File Open dialogs.\n<p>\nThis is used both for displaying and for filtering file types in the file dialog.\n</p>\n"
  syntax:
    content: public string FileDialogWildcardExpression { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileDialogWildcardExpression As String
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileDialogWildcardExpression*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.Expression
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.Expression
  id: Expression
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: FileTypeProfile.Expression
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.Expression
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThis regular expression is applied to the file name to determine if it matches,\nwhen the file is about to be opened. It provides more control than the wildcard\nname that is used in the open dialog.\n\nIf this property is null, the FileDialogWildcardExpression is used instead.\n"
  syntax:
    content: public Regex Expression { get; set; }
    parameters: []
    return:
      type: System.Text.RegularExpressions.Regex
    content.vb: Public Property Expression As Regex
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.Expression*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.IsStandardCustomization
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.IsStandardCustomization
  id: IsStandardCustomization
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  langs:
  - csharp
  - vb
  name: IsStandardCustomization
  nameWithType: FileTypeProfile.IsStandardCustomization
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.IsStandardCustomization
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReturns true when FileTypeProfile is used to override Standard File Type Definition rather than\ncreating custom one.\n"
  syntax:
    content: public bool IsStandardCustomization { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsStandardCustomization As Boolean
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.IsStandardCustomization*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.Description
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.Description
  id: Description
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: FileTypeProfile.Description
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.Description
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nDescriptive text for the file type definition.\n"
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.IconContent
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.IconContent
  id: IconContent
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  langs:
  - csharp
  - vb
  name: IconContent
  nameWithType: FileTypeProfile.IconContent
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.IconContent
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nIcon base-64 content.\n"
  remarks: "\nIf null then the icon from the underlying file type definition would be used.\n"
  syntax:
    content: public string IconContent { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IconContent As String
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.IconContent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.ExtensionData
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.ExtensionData
  id: ExtensionData
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  langs:
  - csharp
  - vb
  name: ExtensionData
  nameWithType: FileTypeProfile.ExtensionData
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.ExtensionData
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nExtensionData stores data not in the contract and allows round tripping between different versions.\n"
  syntax:
    content: public ExtensionDataObject ExtensionData { get; set; }
    parameters: []
    return:
      type: System.Runtime.Serialization.ExtensionDataObject
    content.vb: Public Property ExtensionData As ExtensionDataObject
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.ExtensionData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Serialization.IExtensibleDataObject
  commentId: '!:System.Runtime.Serialization.IExtensibleDataObject'
  isExternal: true
  name: IExtensibleDataObject
  nameWithType: IExtensibleDataObject
  fullName: System.Runtime.Serialization.IExtensibleDataObject
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.GetFileTypeProfile*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.GetFileTypeProfile
  isExternal: true
  name: GetFileTypeProfile
  nameWithType: FileTypeProfile.GetFileTypeProfile
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.GetFileTypeProfile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: FileTypeProfile
  nameWithType: FileTypeProfile
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.GetFileTypeProfileXml*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.GetFileTypeProfileXml
  isExternal: true
  name: GetFileTypeProfileXml
  nameWithType: FileTypeProfile.GetFileTypeProfileXml
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.GetFileTypeProfileXml
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.ApplyProfile*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.ApplyProfile
  isExternal: true
  name: ApplyProfile
  nameWithType: FileTypeProfile.ApplyProfile
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.ApplyProfile
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileTypeDefinition
  nameWithType: IFileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.#ctor
  isExternal: true
  name: FileTypeProfile
  nameWithType: FileTypeProfile.FileTypeProfile
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeProfile
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDefinitionId*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDefinitionId
  isExternal: true
  name: FileTypeDefinitionId
  nameWithType: FileTypeProfile.FileTypeDefinitionId
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDefinitionId
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeName*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeName
  isExternal: true
  name: FileTypeName
  nameWithType: FileTypeProfile.FileTypeName
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeName
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDocumentName*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDocumentName
  isExternal: true
  name: FileTypeDocumentName
  nameWithType: FileTypeProfile.FileTypeDocumentName
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDocumentName
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDocumentsName*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDocumentsName
  isExternal: true
  name: FileTypeDocumentsName
  nameWithType: FileTypeProfile.FileTypeDocumentsName
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileTypeDocumentsName
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileDialogWildcardExpression*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileDialogWildcardExpression
  isExternal: true
  name: FileDialogWildcardExpression
  nameWithType: FileTypeProfile.FileDialogWildcardExpression
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.FileDialogWildcardExpression
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.Expression*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.Expression
  isExternal: true
  name: Expression
  nameWithType: FileTypeProfile.Expression
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.Expression
- uid: System.Text.RegularExpressions.Regex
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.IsStandardCustomization*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.IsStandardCustomization
  isExternal: true
  name: IsStandardCustomization
  nameWithType: FileTypeProfile.IsStandardCustomization
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.IsStandardCustomization
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.Description*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.Description
  isExternal: true
  name: Description
  nameWithType: FileTypeProfile.Description
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.Description
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.IconContent*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.IconContent
  isExternal: true
  name: IconContent
  nameWithType: FileTypeProfile.IconContent
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.IconContent
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.ExtensionData*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.ExtensionData
  isExternal: true
  name: ExtensionData
  nameWithType: FileTypeProfile.ExtensionData
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.ExtensionData
- uid: System.Runtime.Serialization.ExtensionDataObject
  commentId: '!:System.Runtime.Serialization.ExtensionDataObject'
  isExternal: true
  name: ExtensionDataObject
  nameWithType: ExtensionDataObject
  fullName: System.Runtime.Serialization.ExtensionDataObject
