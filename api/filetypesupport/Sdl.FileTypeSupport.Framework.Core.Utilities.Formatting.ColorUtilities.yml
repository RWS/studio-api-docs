### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities
  id: ColorUtilities
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting
  children:
  - Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.FromName(System.String)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.GetLocalizedColorName(System.String)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.IsKnownName(System.String)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.KnownColors
  langs:
  - csharp
  - vb
  name: ColorUtilities
  nameWithType: ColorUtilities
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting
  summary: "\nThis class provides Color struct methods which are present in .NET framework but are missing in \nSilverlight.\n"
  syntax:
    content: public static class ColorUtilities
    content.vb: Public Module ColorUtilities
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.FromName(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.FromName(System.String)
  id: FromName(System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities
  langs:
  - csharp
  - vb
  name: FromName(String)
  nameWithType: ColorUtilities.FromName(String)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.FromName(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting
  summary: "\nCreates Color struct by the color name.\n"
  syntax:
    content: public static Color FromName(string colorName)
    parameters:
    - id: colorName
      type: System.String
      description: Color name (refer to http://msdn.microsoft.com/en-us/library/system.drawing.knowncolor.aspx for the list of known colors)
    return:
      type: System.Drawing.Color
      description: Created Color struct
    content.vb: Public Shared Function FromName(colorName As String) As Color
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.FromName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.IsKnownName(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.IsKnownName(System.String)
  id: IsKnownName(System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities
  langs:
  - csharp
  - vb
  name: IsKnownName(String)
  nameWithType: ColorUtilities.IsKnownName(String)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.IsKnownName(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting
  summary: "\nTests whether provided color name is known.\n"
  syntax:
    content: public static bool IsKnownName(string colorName)
    parameters:
    - id: colorName
      type: System.String
      description: Color name
    return:
      type: System.Boolean
      description: 'True if the color is known, false otherwise. '
    content.vb: Public Shared Function IsKnownName(colorName As String) As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.IsKnownName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.GetLocalizedColorName(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.GetLocalizedColorName(System.String)
  id: GetLocalizedColorName(System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities
  langs:
  - csharp
  - vb
  name: GetLocalizedColorName(String)
  nameWithType: ColorUtilities.GetLocalizedColorName(String)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.GetLocalizedColorName(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting
  summary: "\nReturns name of a color specific to current culture.\n"
  syntax:
    content: public static string GetLocalizedColorName(string defaultColorName)
    parameters:
    - id: defaultColorName
      type: System.String
      description: Default name of a color.
    return:
      type: System.String
      description: Name of a color defined for current culture.
    content.vb: Public Shared Function GetLocalizedColorName(defaultColorName As String) As String
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.GetLocalizedColorName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.KnownColors
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.KnownColors
  id: KnownColors
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities
  langs:
  - csharp
  - vb
  name: KnownColors
  nameWithType: ColorUtilities.KnownColors
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.KnownColors
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting
  summary: "\nCollection of known named colors.\n"
  syntax:
    content: public static Dictionary<string, Color> KnownColors { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Drawing.Color}
    content.vb: Public Shared ReadOnly Property KnownColors As Dictionary(Of String, Color)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.KnownColors*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.FromName*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.FromName
  isExternal: true
  name: FromName
  nameWithType: ColorUtilities.FromName
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.FromName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.IsKnownName*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.IsKnownName
  isExternal: true
  name: IsKnownName
  nameWithType: ColorUtilities.IsKnownName
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.IsKnownName
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.GetLocalizedColorName*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.GetLocalizedColorName
  isExternal: true
  name: GetLocalizedColorName
  nameWithType: ColorUtilities.GetLocalizedColorName
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.GetLocalizedColorName
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.KnownColors*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.KnownColors
  isExternal: true
  name: KnownColors
  nameWithType: ColorUtilities.KnownColors
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.Formatting.ColorUtilities.KnownColors
- uid: System.Collections.Generic.Dictionary{System.String,System.Drawing.Color}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Drawing.Color}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Color>
  nameWithType: Dictionary<String, Color>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Drawing.Color>
  nameWithType.vb: Dictionary(Of String, Color)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Drawing.Color)
  name.vb: Dictionary(Of String, Color)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Color
    name: Color
    nameWithType: Color
    fullName: System.Drawing.Color
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Color
    name: Color
    nameWithType: Color
    fullName: System.Drawing.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
