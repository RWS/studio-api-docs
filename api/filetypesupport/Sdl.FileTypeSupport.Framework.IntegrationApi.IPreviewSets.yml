### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets
  id: IPreviewSets
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.DefaultApplicationPreview
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.DefaultControlPreview
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.FindFromId(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.GetApplicationPreviews
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.GetControlPreviews
  langs:
  - csharp
  - vb
  name: IPreviewSets
  nameWithType: IPreviewSets
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCollection of preview types for this file type, with accessors to get\na specified preview by id and the ability to define a \ndefault preview type.\n"
  remarks: "\nIf no default preview type is defined, the host application may choose\nto use the first defined preview type as the default.\n"
  syntax:
    content: 'public interface IPreviewSets : ICollection<IPreviewSet>, IEnumerable<IPreviewSet>, IEnumerable'
    content.vb: >-
      Public Interface IPreviewSets
          Inherits ICollection(Of IPreviewSet), IEnumerable(Of IPreviewSet), IEnumerable
  inheritedMembers:
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.Add(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet)
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.Clear
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.Contains(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet)
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.CopyTo(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet[],System.Int32)
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.Remove(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet)
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.Count
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.IsReadOnly
  - System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.GetEnumerator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.FindFromId(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.FindFromId(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId)
  id: FindFromId(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets
  langs:
  - csharp
  - vb
  name: FindFromId(PreviewSetId)
  nameWithType: IPreviewSets.FindFromId(PreviewSetId)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.FindFromId(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReturns the preview type with the specified id, or <code>null</code> if no preview type\nwith that id is defined in this collection.\n"
  syntax:
    content: IPreviewSet FindFromId(PreviewSetId id)
    parameters:
    - id: id
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    content.vb: Function FindFromId(id As PreviewSetId) As IPreviewSet
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.FindFromId*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.GetControlPreviews
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.GetControlPreviews
  id: GetControlPreviews
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets
  langs:
  - csharp
  - vb
  name: GetControlPreviews()
  nameWithType: IPreviewSets.GetControlPreviews()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.GetControlPreviews()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReturns all preview sets that provide controls that can be hosted in a\nwindow of the host application.\n"
  syntax:
    content: IEnumerable<IPreviewSet> GetControlPreviews()
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}
    content.vb: Function GetControlPreviews As IEnumerable(Of IPreviewSet)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.GetControlPreviews*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.GetApplicationPreviews
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.GetApplicationPreviews
  id: GetApplicationPreviews
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets
  langs:
  - csharp
  - vb
  name: GetApplicationPreviews()
  nameWithType: IPreviewSets.GetApplicationPreviews()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.GetApplicationPreviews()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReturns all &quot;View In&quot; preview sets, i.e. previews that can launch a standalone application\ninstance for viewing the content. \n"
  syntax:
    content: IEnumerable<IPreviewSet> GetApplicationPreviews()
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}
    content.vb: Function GetApplicationPreviews As IEnumerable(Of IPreviewSet)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.GetApplicationPreviews*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.DefaultControlPreview
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.DefaultControlPreview
  id: DefaultControlPreview
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets
  langs:
  - csharp
  - vb
  name: DefaultControlPreview
  nameWithType: IPreviewSets.DefaultControlPreview
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.DefaultControlPreview
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe id of the preview type that should be used as default for control\npreviews for this file type.\n"
  remarks: "\n<p>\nIt is possible to assign a default preview type id that\nis not defined in this collection. This is intentional, in order\nto allow a preview type defined for the default bilingual file type\nto be used as the default for the file format without having to explicitly\ndefine it in the file type definition.\n</p>\n<p>\nThe id can be passed to <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.FindFromId(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId)\" data-throw-if-not-resolved=\"false\"></xref> in order to get the corresponding\npreview type, or <code>null</code> if the preview type is not defined in this\nfile type definition.\n</p>\n"
  syntax:
    content: PreviewSetId? DefaultControlPreview { get; set; }
    parameters: []
    return:
      type: System.Nullable{Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId}
    content.vb: Property DefaultControlPreview As PreviewSetId?
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.DefaultControlPreview*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.DefaultApplicationPreview
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.DefaultApplicationPreview
  id: DefaultApplicationPreview
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets
  langs:
  - csharp
  - vb
  name: DefaultApplicationPreview
  nameWithType: IPreviewSets.DefaultApplicationPreview
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.DefaultApplicationPreview
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe id of the preview type that should be used by default for application\npreviews for this file type.\n"
  remarks: "\n<p>\nIt is possible to assign a default preview type id that\nis not defined in this collection. This is intentional, in order\nto allow a preview type defined for the default bilingual file type\nto be used as the default for the file format without having to explicitly\ndefine it in this file type definition.\n</p>\n<p>\nThe id can be passed to <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.FindFromId(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId)\" data-throw-if-not-resolved=\"false\"></xref> to get the corresponding\npreview type, or <code>null</code> if the preview type is not defined in this\nfile type definition.\n</p>\n"
  syntax:
    content: PreviewSetId? DefaultApplicationPreview { get; set; }
    parameters: []
    return:
      type: System.Nullable{Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId}
    content.vb: Property DefaultApplicationPreview As PreviewSetId?
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.DefaultApplicationPreview*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.Add(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet)
  commentId: M:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.Add(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet)
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(IPreviewSet)
  nameWithType: ICollection<IPreviewSet>.Add(IPreviewSet)
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet>.Add(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet)
  nameWithType.vb: ICollection(Of IPreviewSet).Add(IPreviewSet)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet).Add(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<IPreviewSet>.Add
    fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    name: IPreviewSet
    nameWithType: IPreviewSet
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of IPreviewSet).Add
    fullName: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    name: IPreviewSet
    nameWithType: IPreviewSet
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.Clear
  commentId: M:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.Clear
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<IPreviewSet>.Clear()
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet>.Clear()
  nameWithType.vb: ICollection(Of IPreviewSet).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<IPreviewSet>.Clear
    fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of IPreviewSet).Clear
    fullName: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.Contains(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet)
  commentId: M:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.Contains(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet)
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(IPreviewSet)
  nameWithType: ICollection<IPreviewSet>.Contains(IPreviewSet)
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet>.Contains(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet)
  nameWithType.vb: ICollection(Of IPreviewSet).Contains(IPreviewSet)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet).Contains(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<IPreviewSet>.Contains
    fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    name: IPreviewSet
    nameWithType: IPreviewSet
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of IPreviewSet).Contains
    fullName: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    name: IPreviewSet
    nameWithType: IPreviewSet
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.CopyTo(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.CopyTo(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet[],System.Int32)
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(IPreviewSet[], Int32)
  nameWithType: ICollection<IPreviewSet>.CopyTo(IPreviewSet[], Int32)
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet>.CopyTo(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet[], System.Int32)
  nameWithType.vb: ICollection(Of IPreviewSet).CopyTo(IPreviewSet(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet).CopyTo(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet(), System.Int32)
  name.vb: CopyTo(IPreviewSet(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<IPreviewSet>.CopyTo
    fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    name: IPreviewSet
    nameWithType: IPreviewSet
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of IPreviewSet).CopyTo
    fullName: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    name: IPreviewSet
    nameWithType: IPreviewSet
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.Remove(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet)
  commentId: M:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.Remove(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet)
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(IPreviewSet)
  nameWithType: ICollection<IPreviewSet>.Remove(IPreviewSet)
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet>.Remove(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet)
  nameWithType.vb: ICollection(Of IPreviewSet).Remove(IPreviewSet)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet).Remove(Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<IPreviewSet>.Remove
    fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    name: IPreviewSet
    nameWithType: IPreviewSet
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of IPreviewSet).Remove
    fullName: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    name: IPreviewSet
    nameWithType: IPreviewSet
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.Count
  commentId: P:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.Count
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<IPreviewSet>.Count
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet>.Count
  nameWithType.vb: ICollection(Of IPreviewSet).Count
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet).Count
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.IsReadOnly
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<IPreviewSet>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet>.IsReadOnly
  nameWithType.vb: ICollection(Of IPreviewSet).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet).IsReadOnly
- uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IPreviewSet>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IPreviewSet).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<IPreviewSet>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of IPreviewSet).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}
  commentId: T:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IPreviewSet>
  nameWithType: ICollection<IPreviewSet>
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet>
  nameWithType.vb: ICollection(Of IPreviewSet)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet)
  name.vb: ICollection(Of IPreviewSet)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    name: IPreviewSet
    nameWithType: IPreviewSet
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    name: IPreviewSet
    nameWithType: IPreviewSet
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IPreviewSet>
  nameWithType: IEnumerable<IPreviewSet>
  fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet>
  nameWithType.vb: IEnumerable(Of IPreviewSet)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet)
  name.vb: IEnumerable(Of IPreviewSet)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    name: IPreviewSet
    nameWithType: IPreviewSet
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    name: IPreviewSet
    nameWithType: IPreviewSet
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.FindFromId*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.FindFromId
  isExternal: true
  name: FindFromId
  nameWithType: IPreviewSets.FindFromId
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.FindFromId
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: PreviewSetId
  nameWithType: PreviewSetId
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IPreviewSet
  nameWithType: IPreviewSet
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSet
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.GetControlPreviews*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.GetControlPreviews
  isExternal: true
  name: GetControlPreviews
  nameWithType: IPreviewSets.GetControlPreviews
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.GetControlPreviews
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.GetApplicationPreviews*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.GetApplicationPreviews
  isExternal: true
  name: GetApplicationPreviews
  nameWithType: IPreviewSets.GetApplicationPreviews
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.GetApplicationPreviews
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.DefaultControlPreview*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.DefaultControlPreview
  isExternal: true
  name: DefaultControlPreview
  nameWithType: IPreviewSets.DefaultControlPreview
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.DefaultControlPreview
- uid: System.Nullable{Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId}
  commentId: T:System.Nullable{Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId}
  parent: System
  definition: System.Nullable`1
  name: Nullable<PreviewSetId>
  nameWithType: Nullable<PreviewSetId>
  fullName: System.Nullable<Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId>
  nameWithType.vb: Nullable(Of PreviewSetId)
  fullName.vb: System.Nullable(Of Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId)
  name.vb: Nullable(Of PreviewSetId)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId
    name: PreviewSetId
    nameWithType: PreviewSetId
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId
    name: PreviewSetId
    nameWithType: PreviewSetId
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewSetId
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.DefaultApplicationPreview*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.DefaultApplicationPreview
  isExternal: true
  name: DefaultApplicationPreview
  nameWithType: IPreviewSets.DefaultApplicationPreview
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSets.DefaultApplicationPreview
