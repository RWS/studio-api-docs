### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  id: ISubContentExtractor
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.AllComponents
  - Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.BilingualParser
  - Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.DocumentInfo
  - Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.FileConversionProperties
  - Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.GetParser
  - Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ItemFactory
  - Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Message
  - Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.NativeSubContentExtractor
  - Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Output
  - Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Parse
  - Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ParseNext
  - Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ProcessSubContent
  - Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Progress
  - Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.SettingsBundle
  - Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ToBilingualConverter
  langs:
  - csharp
  - vb
  name: ISubContentExtractor
  nameWithType: ISubContentExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nRepresents a native parser with native components (or a bilingual parser) and bilingual content\nprocessors used when reading native or bilingual file.\n"
  remarks: "\nThe output from the reading operation consists of calls that are generated on \nthe <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler\" data-throw-if-not-resolved=\"false\"></xref> instance\nspecified by setting the <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Output\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  syntax:
    content: 'public interface ISubContentExtractor : IBilingualProcessorContainer, IFileTypeDefinitionAware'
    content.vb: >-
      Public Interface ISubContentExtractor
          Inherits IBilingualProcessorContainer, IFileTypeDefinitionAware
  inheritedMembers:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Parse
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Parse
  id: Parse
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  langs:
  - csharp
  - vb
  name: Parse()
  nameWithType: ISubContentExtractor.Parse()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Parse()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReads the entire content of the input file.\n"
  syntax:
    content: void Parse()
    content.vb: Sub Parse
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Parse*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ParseNext
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ParseNext
  id: ParseNext
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  langs:
  - csharp
  - vb
  name: ParseNext()
  nameWithType: ISubContentExtractor.ParseNext()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ParseNext()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReads the next piece of content from the input file.\n"
  syntax:
    content: bool ParseNext()
    return:
      type: System.Boolean
      description: True if there is more content in the file to be processed, false if not.
    content.vb: Function ParseNext As Boolean
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ParseNext*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.GetParser
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.GetParser
  id: GetParser
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  langs:
  - csharp
  - vb
  name: GetParser()
  nameWithType: ISubContentExtractor.GetParser()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.GetParser()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets the native or bilingual parser\n"
  syntax:
    content: IParser GetParser()
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.IParser
    content.vb: Function GetParser As IParser
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.GetParser*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ItemFactory
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ItemFactory
  id: ItemFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  langs:
  - csharp
  - vb
  name: ItemFactory
  nameWithType: ISubContentExtractor.ItemFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ItemFactory
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe framework will set this property as part of the initialization.\n\nBilingual components should use this factory to create any items\nthat are inserted in the bilingual content model.\n"
  syntax:
    content: IDocumentItemFactory ItemFactory { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory
    content.vb: Property ItemFactory As IDocumentItemFactory
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ItemFactory*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.DocumentInfo
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.DocumentInfo
  id: DocumentInfo
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  langs:
  - csharp
  - vb
  name: DocumentInfo
  nameWithType: ISubContentExtractor.DocumentInfo
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.DocumentInfo
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCommon document properties communicated to all bilingual file type components\n"
  syntax:
    content: IDocumentProperties DocumentInfo { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
    content.vb: Property DocumentInfo As IDocumentProperties
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.DocumentInfo*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.FileConversionProperties
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.FileConversionProperties
  id: FileConversionProperties
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  langs:
  - csharp
  - vb
  name: FileConversionProperties
  nameWithType: ISubContentExtractor.FileConversionProperties
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.FileConversionProperties
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThis object will be passed to each of the file type components during initialization.\nEnsure that this property is configured properly before calling <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Parse\" data-throw-if-not-resolved=\"false\"></xref>.\nFile type components may change these properties, e.g. to store dynamic settings. To ensure that such settings\nare preserved for future conversion operations, these properties should be retrieved after successful parsing,\nand stored for re-use e.g. by persisting them to the bilingual file format.\n"
  syntax:
    content: IPersistentFileConversionProperties FileConversionProperties { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    content.vb: Property FileConversionProperties As IPersistentFileConversionProperties
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.FileConversionProperties*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Output
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Output
  id: Output
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  langs:
  - csharp
  - vb
  name: Output
  nameWithType: ISubContentExtractor.Output
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Output
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThis object (if not null) receives calls that represent the\noutput from the file reading process.\n"
  syntax:
    content: IBilingualContentHandler Output { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler
    content.vb: Property Output As IBilingualContentHandler
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Output*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.BilingualParser
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.BilingualParser
  id: BilingualParser
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  langs:
  - csharp
  - vb
  name: BilingualParser
  nameWithType: ISubContentExtractor.BilingualParser
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.BilingualParser
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nParser for reading a bilingual input file, or <code>null</code> to read native input files.\n"
  remarks: "\n<p>\nIf set, the <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.NativeSubContentExtractor\" data-throw-if-not-resolved=\"false\"></xref> and the <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ToBilingualConverter\" data-throw-if-not-resolved=\"false\"></xref> are not used.\n</p>\n"
  syntax:
    content: IBilingualParser BilingualParser { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser
    content.vb: Property BilingualParser As IBilingualParser
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.BilingualParser*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.NativeSubContentExtractor
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.NativeSubContentExtractor
  id: NativeSubContentExtractor
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  langs:
  - csharp
  - vb
  name: NativeSubContentExtractor
  nameWithType: ISubContentExtractor.NativeSubContentExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.NativeSubContentExtractor
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nUsed for reading a native input file.\n"
  remarks: "\n<p>\nNot used if a <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.BilingualParser\" data-throw-if-not-resolved=\"false\"></xref> has been set.\n</p>\n"
  syntax:
    content: INativeSubContentExtractor NativeSubContentExtractor { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentExtractor
    content.vb: Property NativeSubContentExtractor As INativeSubContentExtractor
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.NativeSubContentExtractor*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ToBilingualConverter
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ToBilingualConverter
  id: ToBilingualConverter
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  langs:
  - csharp
  - vb
  name: ToBilingualConverter
  nameWithType: ISubContentExtractor.ToBilingualConverter
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ToBilingualConverter
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe component used to convert native input to bilingual content\n"
  remarks: "\n<p>\nNot used if a <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.BilingualParser\" data-throw-if-not-resolved=\"false\"></xref> has been set.\n</p>\n"
  syntax:
    content: INativeToBilingualConverter ToBilingualConverter { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.INativeToBilingualConverter
    content.vb: Property ToBilingualConverter As INativeToBilingualConverter
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ToBilingualConverter*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.AllComponents
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.AllComponents
  id: AllComponents
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  langs:
  - csharp
  - vb
  name: AllComponents
  nameWithType: ISubContentExtractor.AllComponents
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.AllComponents
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCalled by the framework during component initialization to detect and initialize\nparser components that implement special interfaces such as <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.ISharedObjectsAware\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: IEnumerable<object> AllComponents { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: All native and bilingual file type components
    content.vb: ReadOnly Property AllComponents As IEnumerable(Of Object)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.AllComponents*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.SettingsBundle
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.SettingsBundle
  id: SettingsBundle
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  langs:
  - csharp
  - vb
  name: SettingsBundle
  nameWithType: ISubContentExtractor.SettingsBundle
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.SettingsBundle
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nSettings used by processing components in the extractor\n"
  syntax:
    content: ISettingsBundle SettingsBundle { get; set; }
    parameters: []
    return:
      type: Sdl.Core.Settings.ISettingsBundle
    content.vb: Property SettingsBundle As ISettingsBundle
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.SettingsBundle*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Progress
  commentId: E:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Progress
  id: Progress
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: ISubContentExtractor.Progress
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Progress
  type: Event
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nFired when progress is reported from the parser.\n"
  syntax:
    content: event EventHandler<ProgressEventArgs> Progress
    return:
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs}
    content.vb: Event Progress As EventHandler(Of ProgressEventArgs)
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ProcessSubContent
  commentId: E:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ProcessSubContent
  id: ProcessSubContent
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  langs:
  - csharp
  - vb
  name: ProcessSubContent
  nameWithType: ISubContentExtractor.ProcessSubContent
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ProcessSubContent
  type: Event
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nFired when sub-content needs to be processed\n"
  syntax:
    content: event EventHandler<ProcessSubContentEventArgs> ProcessSubContent
    return:
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.NativeApi.ProcessSubContentEventArgs}
    content.vb: Event ProcessSubContent As EventHandler(Of ProcessSubContentEventArgs)
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Message
  commentId: E:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Message
  id: Message
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ISubContentExtractor.Message
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Message
  type: Event
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nRaised when a message is reported from a file type component.\n"
  remarks: "\nThe file path property does not need to be set in the event args.\n"
  syntax:
    content: event EventHandler<MessageEventArgs> Message
    return:
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
    content.vb: Event Message As EventHandler(Of MessageEventArgs)
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: AddBilingualProcessor(IBilingualContentProcessor)
  nameWithType: IBilingualProcessorContainer.AddBilingualProcessor(IBilingualContentProcessor)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: AddBilingualProcessor
    nameWithType: IBilingualProcessorContainer.AddBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: AddBilingualProcessor
    nameWithType: IBilingualProcessorContainer.AddBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: InsertBilingualProcessor(Int32, IBilingualContentProcessor)
  nameWithType: IBilingualProcessorContainer.InsertBilingualProcessor(Int32, IBilingualContentProcessor)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32, Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: InsertBilingualProcessor
    nameWithType: IBilingualProcessorContainer.InsertBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: InsertBilingualProcessor
    nameWithType: IBilingualProcessorContainer.InsertBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: RemoveBilingualProcessor(IBilingualContentProcessor)
  nameWithType: IBilingualProcessorContainer.RemoveBilingualProcessor(IBilingualContentProcessor)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: RemoveBilingualProcessor
    nameWithType: IBilingualProcessorContainer.RemoveBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: RemoveBilingualProcessor
    nameWithType: IBilingualProcessorContainer.RemoveBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: GetBilingualProcessors()
  nameWithType: IBilingualProcessorContainer.GetBilingualProcessors()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
    name: GetBilingualProcessors
    nameWithType: IBilingualProcessorContainer.GetBilingualProcessors
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
    name: GetBilingualProcessors
    nameWithType: IBilingualProcessorContainer.GetBilingualProcessors
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: FileRestriction
  nameWithType: IBilingualProcessorContainer.FileRestriction
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: ParagraphUnitRestriction
  nameWithType: IBilingualProcessorContainer.ParagraphUnitRestriction
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
  isExternal: true
  name: FileTypeDefinition
  nameWithType: IFileTypeDefinitionAware.FileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IBilingualProcessorContainer
  nameWithType: IBilingualProcessorContainer
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileTypeDefinitionAware
  nameWithType: IFileTypeDefinitionAware
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Parse*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Parse
  isExternal: true
  name: Parse
  nameWithType: ISubContentExtractor.Parse
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Parse
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ParseNext*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ParseNext
  isExternal: true
  name: ParseNext
  nameWithType: ISubContentExtractor.ParseNext
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ParseNext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.GetParser*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.GetParser
  isExternal: true
  name: GetParser
  nameWithType: ISubContentExtractor.GetParser
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.GetParser
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IParser
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IParser
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IParser
  nameWithType: IParser
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IParser
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ItemFactory*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ItemFactory
  isExternal: true
  name: ItemFactory
  nameWithType: ISubContentExtractor.ItemFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ItemFactory
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IDocumentItemFactory
  nameWithType: IDocumentItemFactory
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory
- uid: Sdl.FileTypeSupport.Framework.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.DocumentInfo*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.DocumentInfo
  isExternal: true
  name: DocumentInfo
  nameWithType: ISubContentExtractor.DocumentInfo
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.DocumentInfo
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IDocumentProperties
  nameWithType: IDocumentProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.FileConversionProperties*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.FileConversionProperties
  isExternal: true
  name: FileConversionProperties
  nameWithType: ISubContentExtractor.FileConversionProperties
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.FileConversionProperties
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IPersistentFileConversionProperties
  nameWithType: IPersistentFileConversionProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Output*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Output
  isExternal: true
  name: Output
  nameWithType: ISubContentExtractor.Output
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.Output
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IBilingualContentHandler
  nameWithType: IBilingualContentHandler
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentHandler
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.BilingualParser*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.BilingualParser
  isExternal: true
  name: BilingualParser
  nameWithType: ISubContentExtractor.BilingualParser
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.BilingualParser
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IBilingualParser
  nameWithType: IBilingualParser
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.NativeSubContentExtractor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.NativeSubContentExtractor
  isExternal: true
  name: NativeSubContentExtractor
  nameWithType: ISubContentExtractor.NativeSubContentExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.NativeSubContentExtractor
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentExtractor
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentExtractor
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: INativeSubContentExtractor
  nameWithType: INativeSubContentExtractor
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentExtractor
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ToBilingualConverter*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ToBilingualConverter
  isExternal: true
  name: ToBilingualConverter
  nameWithType: ISubContentExtractor.ToBilingualConverter
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.ToBilingualConverter
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.INativeToBilingualConverter
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.INativeToBilingualConverter
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: INativeToBilingualConverter
  nameWithType: INativeToBilingualConverter
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.INativeToBilingualConverter
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.AllComponents*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.AllComponents
  isExternal: true
  name: AllComponents
  nameWithType: ISubContentExtractor.AllComponents
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.AllComponents
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.SettingsBundle*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.SettingsBundle
  isExternal: true
  name: SettingsBundle
  nameWithType: ISubContentExtractor.SettingsBundle
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.SettingsBundle
- uid: Sdl.Core.Settings.ISettingsBundle
  isExternal: true
  name: ISettingsBundle
  nameWithType: ISettingsBundle
  fullName: Sdl.Core.Settings.ISettingsBundle
- uid: System.EventHandler{Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs}
  commentId: T:System.EventHandler{Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ProgressEventArgs>
  nameWithType: EventHandler<ProgressEventArgs>
  fullName: System.EventHandler<Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs>
  nameWithType.vb: EventHandler(Of ProgressEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs)
  name.vb: EventHandler(Of ProgressEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.FileTypeSupport.Framework.NativeApi.ProcessSubContentEventArgs}
  commentId: T:System.EventHandler{Sdl.FileTypeSupport.Framework.NativeApi.ProcessSubContentEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ProcessSubContentEventArgs>
  nameWithType: EventHandler<ProcessSubContentEventArgs>
  fullName: System.EventHandler<Sdl.FileTypeSupport.Framework.NativeApi.ProcessSubContentEventArgs>
  nameWithType.vb: EventHandler(Of ProcessSubContentEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.FileTypeSupport.Framework.NativeApi.ProcessSubContentEventArgs)
  name.vb: EventHandler(Of ProcessSubContentEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ProcessSubContentEventArgs
    name: ProcessSubContentEventArgs
    nameWithType: ProcessSubContentEventArgs
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ProcessSubContentEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ProcessSubContentEventArgs
    name: ProcessSubContentEventArgs
    nameWithType: ProcessSubContentEventArgs
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ProcessSubContentEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
  commentId: T:System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<MessageEventArgs>
  nameWithType: EventHandler<MessageEventArgs>
  fullName: System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>
  nameWithType.vb: EventHandler(Of MessageEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs)
  name.vb: EventHandler(Of MessageEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
