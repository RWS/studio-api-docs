### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
  id: PreviewApplicationId
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.#ctor(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Equals(System.Object)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.GetHashCode
  - Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Id
  - Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.op_Equality(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId,Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.op_Inequality(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId,Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.ToString
  langs:
  - csharp
  - vb
  name: PreviewApplicationId
  nameWithType: PreviewApplicationId
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
  type: Struct
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nType safe wrapper around a preview application type id\n"
  syntax:
    content: public struct PreviewApplicationId
    content.vb: Public Structure PreviewApplicationId
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.#ctor(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
  langs:
  - csharp
  - vb
  name: PreviewApplicationId(String)
  nameWithType: PreviewApplicationId.PreviewApplicationId(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.PreviewApplicationId(System.String)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCreates from a string id.\n"
  syntax:
    content: public PreviewApplicationId(string id)
    parameters:
    - id: id
      type: System.String
    content.vb: Public Sub New(id As String)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.ToString
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.ToString
  id: ToString
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PreviewApplicationId.ToString()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.ToString()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe id as a string\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Equals(System.Object)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: PreviewApplicationId.Equals(Object)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Equals(System.Object)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReturns <code>true</code> if the objects have the same id value.\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.GetHashCode
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.GetHashCode
  id: GetHashCode
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: PreviewApplicationId.GetHashCode()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.GetHashCode()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReturns a hash code based on the id value.\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.op_Equality(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId,Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.op_Equality(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId,Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId)
  id: op_Equality(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId,Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
  langs:
  - csharp
  - vb
  name: Equality(PreviewApplicationId, PreviewApplicationId)
  nameWithType: PreviewApplicationId.Equality(PreviewApplicationId, PreviewApplicationId)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Equality(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId, Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId)
  type: Operator
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReturns <code>true</code> if the two ids have the same <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Id\" data-throw-if-not-resolved=\"false\"></xref> value.\n"
  syntax:
    content: public static bool operator ==(PreviewApplicationId first, PreviewApplicationId second)
    parameters:
    - id: first
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
    - id: second
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(first As PreviewApplicationId, second As PreviewApplicationId) As Boolean
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.op_Inequality(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId,Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.op_Inequality(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId,Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId)
  id: op_Inequality(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId,Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
  langs:
  - csharp
  - vb
  name: Inequality(PreviewApplicationId, PreviewApplicationId)
  nameWithType: PreviewApplicationId.Inequality(PreviewApplicationId, PreviewApplicationId)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Inequality(Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId, Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId)
  type: Operator
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReturns <code>true</code> if the two ids have different <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Id\" data-throw-if-not-resolved=\"false\"></xref> values.\n"
  syntax:
    content: public static bool operator !=(PreviewApplicationId first, PreviewApplicationId second)
    parameters:
    - id: first
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
    - id: second
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(first As PreviewApplicationId, second As PreviewApplicationId) As Boolean
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Id
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Id
  id: Id
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: PreviewApplicationId.Id
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Id
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe id for this preview type as a string\n"
  syntax:
    content: public readonly string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Id As String
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Id*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.#ctor
  isExternal: true
  name: PreviewApplicationId
  nameWithType: PreviewApplicationId.PreviewApplicationId
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.PreviewApplicationId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.ToString*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.ToString
  isExternal: true
  name: ToString
  nameWithType: PreviewApplicationId.ToString
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.ToString
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Equals*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Equals
  isExternal: true
  name: Equals
  nameWithType: PreviewApplicationId.Equals
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.GetHashCode*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: PreviewApplicationId.GetHashCode
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.op_Equality*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.op_Equality
  isExternal: true
  name: Equality
  nameWithType: PreviewApplicationId.Equality
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Equality
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: PreviewApplicationId
  nameWithType: PreviewApplicationId
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.op_Inequality*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.op_Inequality
  isExternal: true
  name: Inequality
  nameWithType: PreviewApplicationId.Inequality
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Inequality
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Id*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Id
  isExternal: true
  name: Id
  nameWithType: PreviewApplicationId.Id
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.PreviewApplicationId.Id
