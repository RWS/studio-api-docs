### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
  id: IParagraphUnit
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  children:
  - Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSegmentPair(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegment(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegmentLocation(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegment(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegmentLocation(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.IsStructure
  - Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Properties
  - Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.SegmentPairs
  - Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Source
  - Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Target
  langs:
  - csharp
  - vb
  name: IParagraphUnit
  nameWithType: IParagraphUnit
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nA continous unit of source language content within a single context,\nand (if applicable) the localized target language version of the content.\nThis often corresponds to a paragraph of text in a native file. \n"
  remarks: "\n<p>\nThere are two types of paragraph units: those that contain localizable content,\nand those that do not contain localizable content. The latter is referred to as a structure paragraph unit,\nand typically only contains structure tags and associated whitespace.\nThe <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.IsStructure\" data-throw-if-not-resolved=\"false\"></xref> property indicates whether this paragraph unit is a structure\nparagraph unit. Since the content of structure paragraph units is not localized,\ntheir <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Target\" data-throw-if-not-resolved=\"false\"></xref> property is null.\n</p>\n<p>\nParagraph units that are not structure paragraph units are referred to as localizable\nparagraph units. They normally have both <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Source\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Target\" data-throw-if-not-resolved=\"false\"></xref>,\nand never contain structure tags.\n</p>\n<p>\nThe <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Properties\" data-throw-if-not-resolved=\"false\"></xref> of the paragraph unit contains associated\ninformation, including contexts and the paragraph unit&apos;s unique id.\n</p>\n<p>\nThe content in localizable paragraph units is typically divided into segments.\nA segment is usually a sentence. Segments exist in source and target language versions,\nand you can iterate over them using the <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.SegmentPairs\" data-throw-if-not-resolved=\"false\"></xref> property.\n</p>\n<p>\nWhen processing content in a localizable paragraph, it is important to be aware of the fact that\nthe segments do not represent all content of the paragraph. There may also be content between\nsegments. Examples of such content include space characters (which separate sentences), \ntags that appearr between sentences, etc. Content between segments can differ between the <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Source\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Target\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nTo iterate over content between segments you can use a <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.Location\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegmentLocation(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegmentLocation(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)\" data-throw-if-not-resolved=\"false\"></xref> methods can be useful for this task.\n</p>\n<p>\nThe <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegment(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegment(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)\" data-throw-if-not-resolved=\"false\"></xref> methods provide a convenient\nway of locating the corresponding source/target version for a segment.\n</p>\n"
  syntax:
    content: 'public interface IParagraphUnit : ICloneable'
    content.vb: >-
      Public Interface IParagraphUnit
          Inherits ICloneable
  inheritedMembers:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegment(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegment(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  id: GetSourceSegment(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
  langs:
  - csharp
  - vb
  name: GetSourceSegment(SegmentId)
  nameWithType: IParagraphUnit.GetSourceSegment(SegmentId)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegment(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nReturns the segment with the specified id if it exists in the source of this ParagraphUnit.\n"
  syntax:
    content: ISegment GetSourceSegment(SegmentId id)
    parameters:
    - id: id
      type: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegment
      description: <code>Null</code> if no segment with that id exists in the source
    content.vb: Function GetSourceSegment(id As SegmentId) As ISegment
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegment*
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegment(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegment(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  id: GetTargetSegment(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
  langs:
  - csharp
  - vb
  name: GetTargetSegment(SegmentId)
  nameWithType: IParagraphUnit.GetTargetSegment(SegmentId)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegment(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nReturns the segment with the specified id if it exists in the target of this ParagraphUnit.\n"
  syntax:
    content: ISegment GetTargetSegment(SegmentId id)
    parameters:
    - id: id
      type: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegment
      description: <code>Null</code> if no segment with that id exists in the target
    content.vb: Function GetTargetSegment(id As SegmentId) As ISegment
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegment*
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSegmentPair(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSegmentPair(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  id: GetSegmentPair(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
  langs:
  - csharp
  - vb
  name: GetSegmentPair(SegmentId)
  nameWithType: IParagraphUnit.GetSegmentPair(SegmentId)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSegmentPair(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nGet the source and target segment with a specified id.\n"
  syntax:
    content: ISegmentPair GetSegmentPair(SegmentId id)
    parameters:
    - id: id
      type: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
      description: <code>Null</code> if no segments with that id exist in the source
    content.vb: Function GetSegmentPair(id As SegmentId) As ISegmentPair
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSegmentPair*
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegmentLocation(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegmentLocation(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  id: GetSourceSegmentLocation(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
  langs:
  - csharp
  - vb
  name: GetSourceSegmentLocation(SegmentId)
  nameWithType: IParagraphUnit.GetSourceSegmentLocation(SegmentId)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegmentLocation(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nLocates the segment with the specified id inside the source.\n"
  syntax:
    content: Location GetSourceSegmentLocation(SegmentId id)
    parameters:
    - id: id
      type: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
      description: The segment id to search for.
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.Location
      description: Location of the start of the source segment inside the source paragraph, or null if it does not exist.
    content.vb: Function GetSourceSegmentLocation(id As SegmentId) As Location
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegmentLocation*
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegmentLocation(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegmentLocation(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  id: GetTargetSegmentLocation(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
  langs:
  - csharp
  - vb
  name: GetTargetSegmentLocation(SegmentId)
  nameWithType: IParagraphUnit.GetTargetSegmentLocation(SegmentId)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegmentLocation(Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nLocates the segment with the specified id inside the target.\n"
  syntax:
    content: Location GetTargetSegmentLocation(SegmentId id)
    parameters:
    - id: id
      type: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
      description: The segment id to search for.
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.Location
      description: Location of the start of the target segment inside the target paragraph, or null if it does not exist.
    content.vb: Function GetTargetSegmentLocation(id As SegmentId) As Location
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegmentLocation*
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Properties
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Properties
  id: Properties
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: IParagraphUnit.Properties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Properties
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nInformation on this paragraph unit\n"
  syntax:
    content: IParagraphUnitProperties Properties { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
    content.vb: Property Properties As IParagraphUnitProperties
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Properties*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.IsStructure
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.IsStructure
  id: IsStructure
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
  langs:
  - csharp
  - vb
  name: IsStructure
  nameWithType: IParagraphUnit.IsStructure
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.IsStructure
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\n<code>true</code> if this is a structure ParagraphUnit, i.e. a paragraph unit that\ncontains no localizable content (i.e. structure tags and whitespace only).\n"
  syntax:
    content: bool IsStructure { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsStructure As Boolean
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.IsStructure*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Source
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Source
  id: Source
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: IParagraphUnit.Source
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Source
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nSource language content of the ParagraphUnit\n"
  syntax:
    content: IParagraph Source { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraph
    content.vb: Property Source As IParagraph
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Source*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Target
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Target
  id: Target
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: IParagraphUnit.Target
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Target
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nTarget language content of the ParagraphUnit\n"
  syntax:
    content: IParagraph Target { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraph
    content.vb: Property Target As IParagraph
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Target*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.SegmentPairs
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.SegmentPairs
  id: SegmentPairs
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit
  langs:
  - csharp
  - vb
  name: SegmentPairs
  nameWithType: IParagraphUnit.SegmentPairs
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.SegmentPairs
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nIterator for easy access to the source and target segments in the ParagraphUnit\n"
  syntax:
    content: IEnumerable<ISegmentPair> SegmentPairs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair}
    content.vb: ReadOnly Property SegmentPairs As IEnumerable(Of ISegmentPair)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.SegmentPairs*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegment*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegment
  isExternal: true
  name: GetSourceSegment
  nameWithType: IParagraphUnit.GetSourceSegment
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegment
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: SegmentId
  nameWithType: SegmentId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISegment
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.ISegment
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: ISegment
  nameWithType: ISegment
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISegment
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegment*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegment
  isExternal: true
  name: GetTargetSegment
  nameWithType: IParagraphUnit.GetTargetSegment
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegment
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSegmentPair*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSegmentPair
  isExternal: true
  name: GetSegmentPair
  nameWithType: IParagraphUnit.GetSegmentPair
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSegmentPair
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: ISegmentPair
  nameWithType: ISegmentPair
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegmentLocation*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegmentLocation
  isExternal: true
  name: GetSourceSegmentLocation
  nameWithType: IParagraphUnit.GetSourceSegmentLocation
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetSourceSegmentLocation
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.Location
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.Location
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: Location
  nameWithType: Location
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.Location
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegmentLocation*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegmentLocation
  isExternal: true
  name: GetTargetSegmentLocation
  nameWithType: IParagraphUnit.GetTargetSegmentLocation
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.GetTargetSegmentLocation
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Properties*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Properties
  isExternal: true
  name: Properties
  nameWithType: IParagraphUnit.Properties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Properties
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IParagraphUnitProperties
  nameWithType: IParagraphUnitProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.IsStructure*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.IsStructure
  isExternal: true
  name: IsStructure
  nameWithType: IParagraphUnit.IsStructure
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.IsStructure
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Source*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Source
  isExternal: true
  name: Source
  nameWithType: IParagraphUnit.Source
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Source
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraph
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraph
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IParagraph
  nameWithType: IParagraph
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraph
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Target*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Target
  isExternal: true
  name: Target
  nameWithType: IParagraphUnit.Target
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.Target
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.SegmentPairs*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.SegmentPairs
  isExternal: true
  name: SegmentPairs
  nameWithType: IParagraphUnit.SegmentPairs
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraphUnit.SegmentPairs
- uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISegmentPair>
  nameWithType: IEnumerable<ISegmentPair>
  fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair>
  nameWithType.vb: IEnumerable(Of ISegmentPair)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair)
  name.vb: IEnumerable(Of ISegmentPair)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
    name: ISegmentPair
    nameWithType: ISegmentPair
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
    name: ISegmentPair
    nameWithType: ISegmentPair
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
