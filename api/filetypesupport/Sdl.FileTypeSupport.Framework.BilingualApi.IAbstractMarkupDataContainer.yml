### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  id: IAbstractMarkupDataContainer
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  children:
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.AllSubItems
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.CanBeSplit
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(Sdl.FileTypeSupport.Framework.BilingualApi.Location,System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem(System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.GetLocationsFrom(Sdl.FileTypeSupport.Framework.BilingualApi.Location)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Locations
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32,System.Int32)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(System.Int32)
  langs:
  - csharp
  - vb
  name: IAbstractMarkupDataContainer
  nameWithType: IAbstractMarkupDataContainer
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  type: Interface
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: >-
    Abstract interface implemented by containers that hold data items representing localizable content.

    For example, the <xref href="Sdl.FileTypeSupport.Framework.BilingualApi.IParagraph" data-throw-if-not-resolved="false"></xref>, <xref href="Sdl.FileTypeSupport.Framework.BilingualApi.ISegment" data-throw-if-not-resolved="false"></xref>, <xref href="Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair" data-throw-if-not-resolved="false"></xref>, and <xref href="Sdl.FileTypeSupport.Framework.BilingualApi.IOtherMarker" data-throw-if-not-resolved="false"></xref> interfaces are 

    derived from this interface.
  remarks: >-
    <p>

    Adding or inserting an item into the container automatically sets the <xref href="Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.Parent" data-throw-if-not-resolved="false"></xref>

    property of the item. Removing an item from a container automatically sets the parent property to <code>null</code>.

    </p>

    <p>

    An item can never appear in more than one container at the same time. Attempting to add an item to

    a container if it is already in another container causes an exception.

    </p>

    <p>

    If you want an equivalent item to appear in two containers, you can clone it, and insert the clone 

    into the second container. The cloned item will then reference the same properties object(s).

    </p>

    <p>

    Implementations of this interface may or may not be <xref href="Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData" data-throw-if-not-resolved="false"></xref>. <xref href="Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair" data-throw-if-not-resolved="false"></xref> is

    an example of a container that is also a markup data item, and can therefore appear inside other containers.

    <xref href="Sdl.FileTypeSupport.Framework.BilingualApi.IParagraph" data-throw-if-not-resolved="false"></xref> is an example of a container that is NOT a markup data item.

    </p>

    <example>

    <p>

    The following example demonstrates how to retrieve the parent container for a container node if it is a markup data item.

    </p>

    <pre><code class="lang-csharp">IAbstractMarkupData GetParent(IAbstractMarkupDataContainer container)

    {
    	IAbstractMarkupData item = container as IAbstractMarkupData;
    	if (item != null)
    	{
    		return item.Parent;
    	}
    	// container is not a markup data item
    	return null;
    }</code></pre>

    </example>

    <p>

    During content manipulation it is sometimes necessary to split a container into two parts,

    with the first part containing some of the items, the second containing others, and both containers

    referencing the same properties objects. The easiest way to accomplish this is to call <xref href="Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(System.Int32)" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    Note that not all containers can be split (for example, <xref href="Sdl.FileTypeSupport.Framework.BilingualApi.IParagraph" data-throw-if-not-resolved="false"></xref> cannot be split). Before calling

    <xref href="Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(System.Int32)" data-throw-if-not-resolved="false"></xref> you should therefore check the <xref href="Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.CanBeSplit" data-throw-if-not-resolved="false"></xref> property.

    </p>

    <p>

    Another common operation is to move items into a different container. The easiest way to do that is

    to use one of the overloads of <code>MoveAllItemsTo()</code> or <code>MoveItemsTo()</code>.

    </p>

    <p>

    It is sometimes necessary to reference locations inside a container. This can be done using the 

    <xref href="Sdl.FileTypeSupport.Framework.BilingualApi.Location" data-throw-if-not-resolved="false"></xref> class. You can iterate over all possible locations in a container (including

    locations in nested containers) using the <xref href="Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Locations" data-throw-if-not-resolved="false"></xref> iterator.

    </p>
  example: []
  syntax:
    content: 'public interface IAbstractMarkupDataContainer : IList<IAbstractMarkupData>, ICollection<IAbstractMarkupData>, IEnumerable<IAbstractMarkupData>, IEnumerable, ISupportsUniqueId'
    content.vb: Public Interface IAbstractMarkupDataContainer Inherits IList(Of IAbstractMarkupData), ICollection(Of IAbstractMarkupData), IEnumerable(Of IAbstractMarkupData), IEnumerable, ISupportsUniqueId
  inheritedMembers:
  - System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.IndexOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  - System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Insert(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  - System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.RemoveAt(System.Int32)
  - System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Item(System.Int32)
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Add(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Clear
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Contains(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.CopyTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData[],System.Int32)
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Remove(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Count
  - System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.IsReadOnly
  - System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.GetEnumerator
  - Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.UniqueId
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(System.Int32)
  id: Split(System.Int32)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  langs:
  - csharp
  - vb
  name: Split(int)
  nameWithType: IAbstractMarkupDataContainer.Split(int)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(int)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: >-
    Splits this container in two. After the split, this object will hold

    all items with index lower than the splitBeforeItemIndex parameter.

    The returned object is a clone of this object, which contains all other items.
  remarks: >-
    <p>

    Note that if this item is a markup data item that is part of a parent container

    it will remain in that container. The returned item is not automatically inserted

    into the parent container. If you need it to be there, you must insert it manually.

    </p>
  example: []
  syntax:
    content: IAbstractMarkupDataContainer Split(int splitBeforeItemIndex)
    parameters:
    - id: splitBeforeItemIndex
      type: System.Int32
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
      description: ''
    content.vb: Function Split(splitBeforeItemIndex As Integer) As IAbstractMarkupDataContainer
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split*
  exceptions:
  - type: Sdl.FileTypeSupport.Framework.BilingualApi.NotSplittableException
    commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.NotSplittableException
    description: Thrown if the collection cannot be split at the specified location.
  nameWithType.vb: IAbstractMarkupDataContainer.Split(Integer)
  fullName.vb: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(Integer)
  name.vb: Split(Integer)
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  id: MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  langs:
  - csharp
  - vb
  name: MoveAllItemsTo(IAbstractMarkupDataContainer)
  nameWithType: IAbstractMarkupDataContainer.MoveAllItemsTo(IAbstractMarkupDataContainer)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: Moves all items from this container into another one.
  remarks: The items are added at the end of the other container, while the order is preserved.
  example: []
  syntax:
    content: void MoveAllItemsTo(IAbstractMarkupDataContainer destinationContainer)
    parameters:
    - id: destinationContainer
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
      description: >-
        The container that will receive all 
                    items from this container.
    content.vb: Sub MoveAllItemsTo(destinationContainer As IAbstractMarkupDataContainer)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo*
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32)
  id: MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  langs:
  - csharp
  - vb
  name: MoveAllItemsTo(IAbstractMarkupDataContainer, int)
  nameWithType: IAbstractMarkupDataContainer.MoveAllItemsTo(IAbstractMarkupDataContainer, int)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer, int)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: Moves all items from this container to a specific location in another container.
  remarks: The order of the moved items is preserved.
  example: []
  syntax:
    content: void MoveAllItemsTo(IAbstractMarkupDataContainer destinationContainer, int insertAtIndex)
    parameters:
    - id: destinationContainer
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
      description: The container that will receive all items from this container
    - id: insertAtIndex
      type: System.Int32
      description: >-
        The index in the destination container where items should be inserted. 
                    Must be less than or equal to the number of items in the destination container.
    content.vb: Sub MoveAllItemsTo(destinationContainer As IAbstractMarkupDataContainer, insertAtIndex As Integer)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo*
  nameWithType.vb: IAbstractMarkupDataContainer.MoveAllItemsTo(IAbstractMarkupDataContainer, Integer)
  fullName.vb: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer, Integer)
  name.vb: MoveAllItemsTo(IAbstractMarkupDataContainer, Integer)
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32)
  id: MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  langs:
  - csharp
  - vb
  name: MoveItemsTo(IAbstractMarkupDataContainer, int, int)
  nameWithType: IAbstractMarkupDataContainer.MoveItemsTo(IAbstractMarkupDataContainer, int, int)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer, int, int)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: Moves a number of items from this container into another one.
  remarks: The items are added to the end of the container, while the order is preserved.
  example: []
  syntax:
    content: void MoveItemsTo(IAbstractMarkupDataContainer destinationContainer, int startIndex, int count)
    parameters:
    - id: destinationContainer
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
      description: The container into which the items will be moved
    - id: startIndex
      type: System.Int32
      description: Index of the first item in this container to be moved
    - id: count
      type: System.Int32
      description: Number of items to be moved
    content.vb: Sub MoveItemsTo(destinationContainer As IAbstractMarkupDataContainer, startIndex As Integer, count As Integer)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo*
  nameWithType.vb: IAbstractMarkupDataContainer.MoveItemsTo(IAbstractMarkupDataContainer, Integer, Integer)
  fullName.vb: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer, Integer, Integer)
  name.vb: MoveItemsTo(IAbstractMarkupDataContainer, Integer, Integer)
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32,System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32,System.Int32)
  id: MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32,System.Int32,System.Int32)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  langs:
  - csharp
  - vb
  name: MoveItemsTo(IAbstractMarkupDataContainer, int, int, int)
  nameWithType: IAbstractMarkupDataContainer.MoveItemsTo(IAbstractMarkupDataContainer, int, int, int)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer, int, int, int)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: Moves a number of items from this container into a specific location in another one.
  remarks: The order of the moved items is preserved.
  example: []
  syntax:
    content: void MoveItemsTo(IAbstractMarkupDataContainer destinationContainer, int destinationIndex, int startIndex, int count)
    parameters:
    - id: destinationContainer
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
      description: The container into which the items will be moved
    - id: destinationIndex
      type: System.Int32
      description: The location where the items should be inserted in the destination container
    - id: startIndex
      type: System.Int32
      description: Index of the first item in this container to be moved.
    - id: count
      type: System.Int32
      description: Number of items to be moved
    content.vb: Sub MoveItemsTo(destinationContainer As IAbstractMarkupDataContainer, destinationIndex As Integer, startIndex As Integer, count As Integer)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo*
  nameWithType.vb: IAbstractMarkupDataContainer.MoveItemsTo(IAbstractMarkupDataContainer, Integer, Integer, Integer)
  fullName.vb: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer, Integer, Integer, Integer)
  name.vb: MoveItemsTo(IAbstractMarkupDataContainer, Integer, Integer, Integer)
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.GetLocationsFrom(Sdl.FileTypeSupport.Framework.BilingualApi.Location)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.GetLocationsFrom(Sdl.FileTypeSupport.Framework.BilingualApi.Location)
  id: GetLocationsFrom(Sdl.FileTypeSupport.Framework.BilingualApi.Location)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  langs:
  - csharp
  - vb
  name: GetLocationsFrom(Location)
  nameWithType: IAbstractMarkupDataContainer.GetLocationsFrom(Location)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.GetLocationsFrom(Sdl.FileTypeSupport.Framework.BilingualApi.Location)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: Enumerator for locations starting from a specific location
  example: []
  syntax:
    content: IEnumerable<Location> GetLocationsFrom(Location startingFrom)
    parameters:
    - id: startingFrom
      type: Sdl.FileTypeSupport.Framework.BilingualApi.Location
      description: Must be a location inside this collection
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.Location}
      description: Iterator that can be used to iterate over the remainder of the collection
    content.vb: Function GetLocationsFrom(startingFrom As Location) As IEnumerable(Of Location)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.GetLocationsFrom*
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
  id: Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  langs:
  - csharp
  - vb
  name: Find(Predicate<Location>)
  nameWithType: IAbstractMarkupDataContainer.Find(Predicate<Location>)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate<Sdl.FileTypeSupport.Framework.BilingualApi.Location>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: >-
    Returns the first location that matches the specified predecate.

    The iteration is performed over all locations in this collection and all sub-collections until

    the element is located.
  example:
  - >-
    This example shows how this can be used to find the location of an equivalent item inside a paragraph.

    <pre><code class="lang-csharp">Location GetEquivalentItemLocation(IAbstractMarkupData equalItem, IParagraph para)

    {
      return para.Find( 
        delegate(Location location)
        {
          return equalItem.Equals(location.ItemAtLocation);
        });
    }</code></pre>
  syntax:
    content: Location Find(Predicate<Location> match)
    parameters:
    - id: match
      type: System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location}
      description: Delegate that returns true when a matching location has been found
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.Location
      description: >-
        The first location that matches the specified predicate
                    <p>If no corresponding location is found, <code>null</code> is returned.</p>
    content.vb: Function Find(match As Predicate(Of Location)) As Location
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find*
  nameWithType.vb: IAbstractMarkupDataContainer.Find(Predicate(Of Location))
  fullName.vb: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate(Of Sdl.FileTypeSupport.Framework.BilingualApi.Location))
  name.vb: Find(Predicate(Of Location))
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
  id: Find(System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  langs:
  - csharp
  - vb
  name: Find(Predicate<IAbstractMarkupData>)
  nameWithType: IAbstractMarkupDataContainer.Find(Predicate<IAbstractMarkupData>)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: >-
    Returns the first item that matches the specified predecate.

    <p>

    The iteration is performed over all items and sub-items in this collection and all sub-collections until

    the item is located.

    </p>
  example:
  - >-
    The following example shows how this can be used (with an anonymous method) to find the an equivalent item inside a paragraph.

    <pre><code class="lang-csharp">IAbstractMarkupData GetEquivalentItem(IAbstractMarkupData equalItem, IParagraph para)

    {
      return para.Find( 
        delegate(IAbstractMarkupData item)
        {
          return equalItem.Equals(item);
        });
    }</code></pre>
  syntax:
    content: IAbstractMarkupData Find(Predicate<IAbstractMarkupData> match)
    parameters:
    - id: match
      type: System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
      description: Delegate that returns true when a matching item has been found
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
      description: >-
        The first item that matches the specified predicate
                    <p>If no corresponding item is found, <code>null</code> is returned.</p>
    content.vb: Function Find(match As Predicate(Of IAbstractMarkupData)) As IAbstractMarkupData
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find*
  nameWithType.vb: IAbstractMarkupDataContainer.Find(Predicate(Of IAbstractMarkupData))
  fullName.vb: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(System.Predicate(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData))
  name.vb: Find(Predicate(Of IAbstractMarkupData))
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(Sdl.FileTypeSupport.Framework.BilingualApi.Location,System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(Sdl.FileTypeSupport.Framework.BilingualApi.Location,System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
  id: Find(Sdl.FileTypeSupport.Framework.BilingualApi.Location,System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location})
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  langs:
  - csharp
  - vb
  name: Find(Location, Predicate<Location>)
  nameWithType: IAbstractMarkupDataContainer.Find(Location, Predicate<Location>)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(Sdl.FileTypeSupport.Framework.BilingualApi.Location, System.Predicate<Sdl.FileTypeSupport.Framework.BilingualApi.Location>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: >-
    Returns the first location that matches the specified predecate, starting

    at a specific location.
  example: []
  syntax:
    content: Location Find(Location startAt, Predicate<Location> match)
    parameters:
    - id: startAt
      type: Sdl.FileTypeSupport.Framework.BilingualApi.Location
      description: >-
        The location at which the search is started. This must NOT be <code>null</code>.
                    <p>If the predicate matches
                    this location, it will be returned.</p>
                    <p>If no corresponding location is found, <code>null</code> is returned.</p>
    - id: match
      type: System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location}
      description: The predicate to evaluate for each location.
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    content.vb: Function Find(startAt As Location, match As Predicate(Of Location)) As Location
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find*
  nameWithType.vb: IAbstractMarkupDataContainer.Find(Location, Predicate(Of Location))
  fullName.vb: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find(Sdl.FileTypeSupport.Framework.BilingualApi.Location, System.Predicate(Of Sdl.FileTypeSupport.Framework.BilingualApi.Location))
  name.vb: Find(Location, Predicate(Of Location))
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem(System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem(System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
  id: ForEachSubItem(System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData})
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  langs:
  - csharp
  - vb
  name: ForEachSubItem(Action<IAbstractMarkupData>)
  nameWithType: IAbstractMarkupDataContainer.ForEachSubItem(Action<IAbstractMarkupData>)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem(System.Action<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: Execute the specified action on each item and (recursively) each sub-item in this container.
  remarks: >-
    <p>

    The action is executed on the container nodes themselves before it is executed

    on the content items of the containers.

    </p>
  example: []
  syntax:
    content: void ForEachSubItem(Action<IAbstractMarkupData> action)
    parameters:
    - id: action
      type: System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
      description: ''
    content.vb: Sub ForEachSubItem(action As Action(Of IAbstractMarkupData))
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem*
  nameWithType.vb: IAbstractMarkupDataContainer.ForEachSubItem(Action(Of IAbstractMarkupData))
  fullName.vb: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem(System.Action(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData))
  name.vb: ForEachSubItem(Action(Of IAbstractMarkupData))
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.AllSubItems
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.AllSubItems
  id: AllSubItems
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  langs:
  - csharp
  - vb
  name: AllSubItems
  nameWithType: IAbstractMarkupDataContainer.AllSubItems
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.AllSubItems
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: An iterator that can be used to iterate over all child items - including sub-items - in the container.
  remarks: >-
    <p>

    Container items inside the container are encountered before the  actual items that they contain. Note that there is

    no need for the caller to loop through the content of container nodes, as these will also be automatically

    retrieved through this iterator.

    </p>
  example: []
  syntax:
    content: IEnumerable<IAbstractMarkupData> AllSubItems { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
    content.vb: ReadOnly Property AllSubItems As IEnumerable(Of IAbstractMarkupData)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.AllSubItems*
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.CanBeSplit
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.CanBeSplit
  id: CanBeSplit
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  langs:
  - csharp
  - vb
  name: CanBeSplit
  nameWithType: IAbstractMarkupDataContainer.CanBeSplit
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.CanBeSplit
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: >-
    Indicates whether it is possible to split this container into different

    parts by calling the <xref href="Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(System.Int32)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: bool CanBeSplit { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property CanBeSplit As Boolean
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.CanBeSplit*
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Locations
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Locations
  id: Locations
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  langs:
  - csharp
  - vb
  name: Locations
  nameWithType: IAbstractMarkupDataContainer.Locations
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Locations
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: Iterator for all possible locations in the collection and its sub-collections
  example:
  - >-
    Below you find an example of how you can use this iterator:

    <pre><code class="lang-csharp">void ProcessAllText(IAbstractMarkupDataContainer container)

    {
      foreach (Location location in container.Locations)
      {
        IText text = location.ItemAtLocation as IText;
        if (text != null)
        {
          ProcessText(text);
        }
      }
    }</code></pre>
  syntax:
    content: IEnumerable<Location> Locations { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.Location}
    content.vb: ReadOnly Property Locations As IEnumerable(Of Location)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Locations*
references:
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraph
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IParagraph
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraph.html
  name: IParagraph
  nameWithType: IParagraph
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IParagraph
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISegment
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.ISegment
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.ISegment.html
  name: ISegment
  nameWithType: ISegment
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISegment
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair.html
  name: ITagPair
  nameWithType: ITagPair
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ITagPair
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IOtherMarker
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IOtherMarker
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IOtherMarker.html
  name: IOtherMarker
  nameWithType: IOtherMarker
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IOtherMarker
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.Parent
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.Parent
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html#Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupData_Parent
  name: Parent
  nameWithType: IAbstractMarkupData.Parent
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.Parent
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  name: IAbstractMarkupData
  nameWithType: IAbstractMarkupData
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(System.Int32)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.html#Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupDataContainer_Split_System_Int32_
  name: Split(int)
  nameWithType: IAbstractMarkupDataContainer.Split(int)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(int)
  nameWithType.vb: IAbstractMarkupDataContainer.Split(Integer)
  fullName.vb: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(Integer)
  name.vb: Split(Integer)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(System.Int32)
    name: Split
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.html#Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupDataContainer_Split_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split(System.Int32)
    name: Split
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.html#Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupDataContainer_Split_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.CanBeSplit
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.CanBeSplit
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.html#Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupDataContainer_CanBeSplit
  name: CanBeSplit
  nameWithType: IAbstractMarkupDataContainer.CanBeSplit
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.CanBeSplit
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.Location
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.Location
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.Location.html
  name: Location
  nameWithType: Location
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.Location
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Locations
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Locations
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.html#Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupDataContainer_Locations
  name: Locations
  nameWithType: IAbstractMarkupDataContainer.Locations
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Locations
- uid: Sdl.FileTypeSupport.Framework.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  href: Sdl.html
  name: Sdl.FileTypeSupport.Framework.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi
    name: BilingualApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi
    name: BilingualApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.html
- uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.IndexOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  commentId: M:System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.IndexOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  parent: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(IAbstractMarkupData)
  nameWithType: IList<IAbstractMarkupData>.IndexOf(IAbstractMarkupData)
  fullName: System.Collections.Generic.IList<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.IndexOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  nameWithType.vb: IList(Of IAbstractMarkupData).IndexOf(IAbstractMarkupData)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).IndexOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.IndexOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.IndexOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: )
- uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Insert(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  commentId: M:System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Insert(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  parent: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, IAbstractMarkupData)
  nameWithType: IList<IAbstractMarkupData>.Insert(int, IAbstractMarkupData)
  fullName: System.Collections.Generic.IList<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Insert(int, Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  nameWithType.vb: IList(Of IAbstractMarkupData).Insert(Integer, IAbstractMarkupData)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Insert(Integer, Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  name.vb: Insert(Integer, IAbstractMarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Insert(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Insert(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: )
- uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<IAbstractMarkupData>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.RemoveAt(int)
  nameWithType.vb: IList(Of IAbstractMarkupData).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Item(System.Int32)
  parent: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<IAbstractMarkupData>.this[int]
  fullName: System.Collections.Generic.IList<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.this[int]
  nameWithType.vb: IList(Of IAbstractMarkupData).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Add(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  commentId: M:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Add(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(IAbstractMarkupData)
  nameWithType: ICollection<IAbstractMarkupData>.Add(IAbstractMarkupData)
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Add(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  nameWithType.vb: ICollection(Of IAbstractMarkupData).Add(IAbstractMarkupData)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Add(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Add(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Add(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Clear
  commentId: M:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Clear
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<IAbstractMarkupData>.Clear()
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Clear()
  nameWithType.vb: ICollection(Of IAbstractMarkupData).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Contains(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  commentId: M:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Contains(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(IAbstractMarkupData)
  nameWithType: ICollection<IAbstractMarkupData>.Contains(IAbstractMarkupData)
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Contains(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  nameWithType.vb: ICollection(Of IAbstractMarkupData).Contains(IAbstractMarkupData)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Contains(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Contains(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Contains(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.CopyTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.CopyTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData[],System.Int32)
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(IAbstractMarkupData[], int)
  nameWithType: ICollection<IAbstractMarkupData>.CopyTo(IAbstractMarkupData[], int)
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.CopyTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData[], int)
  nameWithType.vb: ICollection(Of IAbstractMarkupData).CopyTo(IAbstractMarkupData(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).CopyTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData(), Integer)
  name.vb: CopyTo(IAbstractMarkupData(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.CopyTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.CopyTo(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Remove(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  commentId: M:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Remove(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(IAbstractMarkupData)
  nameWithType: ICollection<IAbstractMarkupData>.Remove(IAbstractMarkupData)
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Remove(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  nameWithType.vb: ICollection(Of IAbstractMarkupData).Remove(IAbstractMarkupData)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Remove(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Remove(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Remove(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Count
  commentId: P:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.Count
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<IAbstractMarkupData>.Count
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.Count
  nameWithType.vb: ICollection(Of IAbstractMarkupData).Count
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).Count
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.IsReadOnly
  parent: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<IAbstractMarkupData>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.IsReadOnly
  nameWithType.vb: ICollection(Of IAbstractMarkupData).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).IsReadOnly
- uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IAbstractMarkupData>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IAbstractMarkupData).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.UniqueId
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.UniqueId
  parent: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.html#Sdl_FileTypeSupport_Framework_NativeApi_ISupportsUniqueId_UniqueId
  name: UniqueId
  nameWithType: ISupportsUniqueId.UniqueId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.UniqueId
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.html
  name: IAbstractMarkupDataContainer
  nameWithType: IAbstractMarkupDataContainer
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  commentId: T:System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<IAbstractMarkupData>
  nameWithType: IList<IAbstractMarkupData>
  fullName: System.Collections.Generic.IList<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>
  nameWithType.vb: IList(Of IAbstractMarkupData)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  name.vb: IList(Of IAbstractMarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, T)
  nameWithType: IList<T>.Insert(int, T)
  fullName: System.Collections.Generic.IList<T>.Insert(int, T)
  nameWithType.vb: IList(Of T).Insert(Integer, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<T>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(int)
  nameWithType.vb: IList(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<T>.this[int]
  fullName: System.Collections.Generic.IList<T>.this[int]
  nameWithType.vb: IList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  commentId: T:System.Collections.Generic.ICollection{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<IAbstractMarkupData>
  nameWithType: ICollection<IAbstractMarkupData>
  fullName: System.Collections.Generic.ICollection<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>
  nameWithType.vb: ICollection(Of IAbstractMarkupData)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  name.vb: ICollection(Of IAbstractMarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IAbstractMarkupData>
  nameWithType: IEnumerable<IAbstractMarkupData>
  fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>
  nameWithType.vb: IEnumerable(Of IAbstractMarkupData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  name.vb: IEnumerable(Of IAbstractMarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.html
  name: ISupportsUniqueId
  nameWithType: ISupportsUniqueId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  href: Sdl.html
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.NativeApi
    name: NativeApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.NativeApi
    name: NativeApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.html
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.NotSplittableException
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.NotSplittableException
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.NotSplittableException.html
  name: NotSplittableException
  nameWithType: NotSplittableException
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.NotSplittableException
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.html#Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupDataContainer_Split_System_Int32_
  name: Split
  nameWithType: IAbstractMarkupDataContainer.Split
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Split
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.html#Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupDataContainer_MoveAllItemsTo_Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupDataContainer_
  name: MoveAllItemsTo
  nameWithType: IAbstractMarkupDataContainer.MoveAllItemsTo
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveAllItemsTo
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.html#Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupDataContainer_MoveItemsTo_Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupDataContainer_System_Int32_System_Int32_
  name: MoveItemsTo
  nameWithType: IAbstractMarkupDataContainer.MoveItemsTo
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.MoveItemsTo
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.GetLocationsFrom*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.GetLocationsFrom
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.html#Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupDataContainer_GetLocationsFrom_Sdl_FileTypeSupport_Framework_BilingualApi_Location_
  name: GetLocationsFrom
  nameWithType: IAbstractMarkupDataContainer.GetLocationsFrom
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.GetLocationsFrom
- uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.Location}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.Location}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Location>
  nameWithType: IEnumerable<Location>
  fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.BilingualApi.Location>
  nameWithType.vb: IEnumerable(Of Location)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.BilingualApi.Location)
  name.vb: IEnumerable(Of Location)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    name: Location
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.Location.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    name: Location
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.Location.html
  - name: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.html#Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupDataContainer_Find_System_Predicate_Sdl_FileTypeSupport_Framework_BilingualApi_Location__
  name: Find
  nameWithType: IAbstractMarkupDataContainer.Find
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Find
- uid: System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location}
  commentId: T:System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.Location}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<Location>
  nameWithType: Predicate<Location>
  fullName: System.Predicate<Sdl.FileTypeSupport.Framework.BilingualApi.Location>
  nameWithType.vb: Predicate(Of Location)
  fullName.vb: System.Predicate(Of Sdl.FileTypeSupport.Framework.BilingualApi.Location)
  name.vb: Predicate(Of Location)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    name: Location
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.Location.html
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    name: Location
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.Location.html
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  commentId: T:System.Predicate{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<IAbstractMarkupData>
  nameWithType: Predicate<IAbstractMarkupData>
  fullName: System.Predicate<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>
  nameWithType.vb: Predicate(Of IAbstractMarkupData)
  fullName.vb: System.Predicate(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  name.vb: Predicate(Of IAbstractMarkupData)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.html#Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupDataContainer_ForEachSubItem_System_Action_Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupData__
  name: ForEachSubItem
  nameWithType: IAbstractMarkupDataContainer.ForEachSubItem
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.ForEachSubItem
- uid: System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  commentId: T:System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IAbstractMarkupData>
  nameWithType: Action<IAbstractMarkupData>
  fullName: System.Action<Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData>
  nameWithType.vb: Action(Of IAbstractMarkupData)
  fullName.vb: System.Action(Of Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  name.vb: Action(Of IAbstractMarkupData)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    name: IAbstractMarkupData
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.AllSubItems*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.AllSubItems
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.html#Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupDataContainer_AllSubItems
  name: AllSubItems
  nameWithType: IAbstractMarkupDataContainer.AllSubItems
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.AllSubItems
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.CanBeSplit*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.CanBeSplit
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.html#Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupDataContainer_CanBeSplit
  name: CanBeSplit
  nameWithType: IAbstractMarkupDataContainer.CanBeSplit
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.CanBeSplit
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Locations*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Locations
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.html#Sdl_FileTypeSupport_Framework_BilingualApi_IAbstractMarkupDataContainer_Locations
  name: Locations
  nameWithType: IAbstractMarkupDataContainer.Locations
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer.Locations
