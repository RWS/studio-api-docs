### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISingleFilePreviewController
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.ISingleFilePreviewController
  id: ISingleFilePreviewController
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.ISingleFilePreviewController.PreviewFile
  langs:
  - csharp
  - vb
  name: ISingleFilePreviewController
  nameWithType: ISingleFilePreviewController
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISingleFilePreviewController
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nBase interface for preview controllers that take single files as input\n"
  syntax:
    content: public interface ISingleFilePreviewController
    content.vb: Public Interface ISingleFilePreviewController
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISingleFilePreviewController.PreviewFile
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.ISingleFilePreviewController.PreviewFile
  id: PreviewFile
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.ISingleFilePreviewController
  langs:
  - csharp
  - vb
  name: PreviewFile
  nameWithType: ISingleFilePreviewController.PreviewFile
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISingleFilePreviewController.PreviewFile
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nFull path to the file that should be displayed in the preview\n"
  remarks: "\n<p>\nThe host application sets this path after generating the preview file before\ncalling <see cref=\"!:IAbstractPreviewControl.Refresh\"></see> or <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication.Launch\" data-throw-if-not-resolved=\"false\"></xref> in order to display the file.\n</p>\n<p>\nThe file is passed through a temporary file manager, which means that it should \nbe deleted automatically when it is no longer needed.\n</p>\n"
  syntax:
    content: TempFileManager PreviewFile { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.TempFileManager
    content.vb: Property PreviewFile As TempFileManager
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.ISingleFilePreviewController.PreviewFile*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISingleFilePreviewController.PreviewFile*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.ISingleFilePreviewController.PreviewFile
  isExternal: true
  name: PreviewFile
  nameWithType: ISingleFilePreviewController.PreviewFile
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISingleFilePreviewController.PreviewFile
- uid: Sdl.FileTypeSupport.Framework.TempFileManager
  commentId: T:Sdl.FileTypeSupport.Framework.TempFileManager
  parent: Sdl.FileTypeSupport.Framework
  isExternal: true
  name: TempFileManager
  nameWithType: TempFileManager
  fullName: Sdl.FileTypeSupport.Framework.TempFileManager
- uid: Sdl.FileTypeSupport.Framework
  commentId: N:Sdl.FileTypeSupport.Framework
  isExternal: true
  name: Sdl.FileTypeSupport.Framework
  nameWithType: Sdl.FileTypeSupport.Framework
  fullName: Sdl.FileTypeSupport.Framework
