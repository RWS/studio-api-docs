### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IParser
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IParser
  id: IParser
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.NativeApi.IParser.ParseNext
  - Sdl.FileTypeSupport.Framework.NativeApi.IParser.Progress
  langs:
  - csharp
  - vb
  name: IParser
  nameWithType: IParser
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IParser
  type: Interface
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: >-
    Interface implemented by parsers.

    Abstracting this functionality into a separate interface allows you to drive parsing for native and bilingual content in the same way.
  example: []
  syntax:
    content: 'public interface IParser : IDisposable'
    content.vb: Public Interface IParser Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IParser.ParseNext
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IParser.ParseNext
  id: ParseNext
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IParser
  langs:
  - csharp
  - vb
  name: ParseNext()
  nameWithType: IParser.ParseNext()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IParser.ParseNext()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: >-
    This method is called repeatedly by the framework to process the next chunk of input.


    The implementation should parse a suitable (preferably not too large) chunk of the input,

    and return a boolean value that indicates whether there is more work to be done before this file is 

    completely parsed.
  example: []
  syntax:
    content: bool ParseNext()
    return:
      type: System.Boolean
      description: <code>true</code> if there is more content to be parsed, and <code>false</code> if parsing is complete.
    content.vb: Function ParseNext() As Boolean
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IParser.ParseNext*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IParser.Progress
  commentId: E:Sdl.FileTypeSupport.Framework.NativeApi.IParser.Progress
  id: Progress
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IParser
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: IParser.Progress
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IParser.Progress
  type: Event
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: >-
    The parser fires this event at regular intervals

    in order to report the progress so that interested parties can ascertain whether

    the parsing process is indeed in progress and has not hung. That way users

    get an idea about how fast the parsing job is progressing.


    Framework consumers should typically not connect directly to 

    this event, but rather connect to the corresponding event on the 

    <code>IFileConverter</code> instance.
  remarks: >-
    Progress is reported in integer percentage values. It is not

    an error when a parser reports the same percentage number

    in subsequent events. This just indicates to the listeners

    that the progress is slow but the component is still working on it.


    It is unusual (but not unthinkable) that a percentage value

    can decrease. This could happen if the parser gets a better estimate

    of the job size (e.g. when it needs to parse dependency 

    files, too).


    It is customary for a parser to fire this event with a percentage value of 0

    when parsing is about to begin and with a percentage value of 100 when parsing

    is finished.
  example: []
  syntax:
    content: event EventHandler<ProgressEventArgs> Progress
    return:
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs}
    content.vb: Event Progress As EventHandler(Of ProgressEventArgs)
references:
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  href: Sdl.html
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.NativeApi
    name: NativeApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.NativeApi
    name: NativeApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.html
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IParser.ParseNext*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IParser.ParseNext
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.IParser.html#Sdl_FileTypeSupport_Framework_NativeApi_IParser_ParseNext
  name: ParseNext
  nameWithType: IParser.ParseNext
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IParser.ParseNext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.EventHandler{Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs}
  commentId: T:System.EventHandler{Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ProgressEventArgs>
  nameWithType: EventHandler<ProgressEventArgs>
  fullName: System.EventHandler<Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs>
  nameWithType.vb: EventHandler(Of ProgressEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs)
  name.vb: EventHandler(Of ProgressEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs
    name: ProgressEventArgs
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs
    name: ProgressEventArgs
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.ProgressEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
