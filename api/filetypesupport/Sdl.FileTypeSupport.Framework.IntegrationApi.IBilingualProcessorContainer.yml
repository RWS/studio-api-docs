### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  id: IBilingualProcessorContainer
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  langs:
  - csharp
  - vb
  name: IBilingualProcessorContainer
  nameWithType: IBilingualProcessorContainer
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  type: Interface
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Common base interface for components that hold bilingual content processors
  example: []
  syntax:
    content: public interface IBilingualProcessorContainer
    content.vb: Public Interface IBilingualProcessorContainer
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  id: AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  langs:
  - csharp
  - vb
  name: AddBilingualProcessor(IBilingualContentProcessor)
  nameWithType: IBilingualProcessorContainer.AddBilingualProcessor(IBilingualContentProcessor)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Appends a bilingual content processor to the container.
  remarks: >-
    <p>

    To add a bilingual content handler (rather than a processor), use 

    a <code>Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.BilingualContentHandlerAdapter</code>.

    </p>
  example: []
  syntax:
    content: void AddBilingualProcessor(IBilingualContentProcessor processor)
    parameters:
    - id: processor
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
      description: ''
    content.vb: Sub AddBilingualProcessor(processor As IBilingualContentProcessor)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  id: InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  langs:
  - csharp
  - vb
  name: InsertBilingualProcessor(int, IBilingualContentProcessor)
  nameWithType: IBilingualProcessorContainer.InsertBilingualProcessor(int, IBilingualContentProcessor)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(int, Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Inserts a bilingual processor at a specified position in the container.

    Any item that is currently occupying that position will - after this operation - appear after the inserted processor.
  remarks: >-
    <p>

    To insert a bilingual content handler (rather than a processor), use 

    a <code>Sdl.FileTypeSupport.Framework.Core.Utilities.BilingualApi.BilingualContentHandlerAdapter</code>.

    </p>
  example: []
  syntax:
    content: void InsertBilingualProcessor(int index, IBilingualContentProcessor processor)
    parameters:
    - id: index
      type: System.Int32
      description: Must be a value in the range [0 - Count]
    - id: processor
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
      description: ''
    content.vb: Sub InsertBilingualProcessor(index As Integer, processor As IBilingualContentProcessor)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor*
  nameWithType.vb: IBilingualProcessorContainer.InsertBilingualProcessor(Integer, IBilingualContentProcessor)
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(Integer, Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  name.vb: InsertBilingualProcessor(Integer, IBilingualContentProcessor)
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  id: RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  langs:
  - csharp
  - vb
  name: RemoveBilingualProcessor(IBilingualContentProcessor)
  nameWithType: IBilingualProcessorContainer.RemoveBilingualProcessor(IBilingualContentProcessor)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: ''
  example: []
  syntax:
    content: bool RemoveBilingualProcessor(IBilingualContentProcessor processor)
    parameters:
    - id: processor
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
      description: ''
    return:
      type: System.Boolean
      description: True if anything was removed from the collection, otherwise false
    content.vb: Function RemoveBilingualProcessor(processor As IBilingualContentProcessor) As Boolean
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
  id: GetBilingualProcessors
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  langs:
  - csharp
  - vb
  name: GetBilingualProcessors()
  nameWithType: IBilingualProcessorContainer.GetBilingualProcessors()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: The content processors, in the order in which they will be invoked
  example: []
  syntax:
    content: IEnumerable<IBilingualContentProcessor> GetBilingualProcessors()
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor}
    content.vb: Function GetBilingualProcessors() As IEnumerable(Of IBilingualContentProcessor)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
  id: FileRestriction
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  langs:
  - csharp
  - vb
  name: FileRestriction
  nameWithType: IBilingualProcessorContainer.FileRestriction
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    This delegate will be invoked for each file to be processed.

    If the delegate returns <code>true</code>, the file

    will be processed as normal, but if it returns <code>false</code>,

    the file will be skipped.
  remarks: >-
    <p>

    If the value is <code>null</code>, no file restrictions apply, and all files

    will be processed.

    </p>

    <p>

    This allows content processing to be restricted to individual files in

    a multi-file document.

    </p>

    <p>

    </p>
  example: []
  syntax:
    content: Predicate<IPersistentFileConversionProperties> FileRestriction { get; set; }
    parameters: []
    return:
      type: System.Predicate{Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties}
    content.vb: Property FileRestriction As Predicate(Of IPersistentFileConversionProperties)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
  id: ParagraphUnitRestriction
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  langs:
  - csharp
  - vb
  name: ParagraphUnitRestriction
  nameWithType: IBilingualProcessorContainer.ParagraphUnitRestriction
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    If set, this delegate will be invoked for each paragraph unit to be processed.

    If the delegate returns <code>true</code>, the paragraph unit will be processed as normal. If it returns <code>false</code>,

    the paragraph unit will be skipped.
  remarks: This mechanism is used when verifying an individual part of the document.
  example: []
  syntax:
    content: Predicate<IParagraphUnitProperties> ParagraphUnitRestriction { get; set; }
    parameters: []
    return:
      type: System.Predicate{Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties}
    content.vb: Property ParagraphUnitRestriction As Predicate(Of IParagraphUnitProperties)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction*
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.html
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi
    name: IntegrationApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi
    name: IntegrationApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.html
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IBilingualProcessorContainer_AddBilingualProcessor_Sdl_FileTypeSupport_Framework_BilingualApi_IBilingualContentProcessor_
  name: AddBilingualProcessor
  nameWithType: IBilingualProcessorContainer.AddBilingualProcessor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor.html
  name: IBilingualContentProcessor
  nameWithType: IBilingualContentProcessor
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
- uid: Sdl.FileTypeSupport.Framework.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  href: Sdl.html
  name: Sdl.FileTypeSupport.Framework.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi
    name: BilingualApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi
    name: BilingualApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.html
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IBilingualProcessorContainer_InsertBilingualProcessor_System_Int32_Sdl_FileTypeSupport_Framework_BilingualApi_IBilingualContentProcessor_
  name: InsertBilingualProcessor
  nameWithType: IBilingualProcessorContainer.InsertBilingualProcessor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IBilingualProcessorContainer_RemoveBilingualProcessor_Sdl_FileTypeSupport_Framework_BilingualApi_IBilingualContentProcessor_
  name: RemoveBilingualProcessor
  nameWithType: IBilingualProcessorContainer.RemoveBilingualProcessor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IBilingualProcessorContainer_GetBilingualProcessors
  name: GetBilingualProcessors
  nameWithType: IBilingualProcessorContainer.GetBilingualProcessors
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
- uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IBilingualContentProcessor>
  nameWithType: IEnumerable<IBilingualContentProcessor>
  fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor>
  nameWithType.vb: IEnumerable(Of IBilingualContentProcessor)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  name.vb: IEnumerable(Of IBilingualContentProcessor)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IBilingualProcessorContainer_FileRestriction
  name: FileRestriction
  nameWithType: IBilingualProcessorContainer.FileRestriction
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
- uid: System.Predicate{Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties}
  commentId: T:System.Predicate{Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<IPersistentFileConversionProperties>
  nameWithType: Predicate<IPersistentFileConversionProperties>
  fullName: System.Predicate<Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties>
  nameWithType.vb: Predicate(Of IPersistentFileConversionProperties)
  fullName.vb: System.Predicate(Of Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  name.vb: Predicate(Of IPersistentFileConversionProperties)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    name: IPersistentFileConversionProperties
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.html
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    name: IPersistentFileConversionProperties
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.html
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IBilingualProcessorContainer_ParagraphUnitRestriction
  name: ParagraphUnitRestriction
  nameWithType: IBilingualProcessorContainer.ParagraphUnitRestriction
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
- uid: System.Predicate{Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties}
  commentId: T:System.Predicate{Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<IParagraphUnitProperties>
  nameWithType: Predicate<IParagraphUnitProperties>
  fullName: System.Predicate<Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties>
  nameWithType.vb: Predicate(Of IParagraphUnitProperties)
  fullName.vb: System.Predicate(Of Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  name.vb: Predicate(Of IParagraphUnitProperties)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
    name: IParagraphUnitProperties
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties.html
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
    name: IParagraphUnitProperties
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties.html
  - name: )
