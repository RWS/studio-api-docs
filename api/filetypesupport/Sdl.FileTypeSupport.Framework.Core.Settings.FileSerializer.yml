### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer
  id: FileSerializer
  parent: Sdl.FileTypeSupport.Framework.Core.Settings
  children:
  - Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.DeserializeFile(System.String)
  - Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.SerializeFile(System.IO.FileInfo)
  - Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.SerializeFile(System.String)
  - Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.UnzipExternalFile(System.String)
  - Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.ZipExternalFile(System.String)
  langs:
  - csharp
  - vb
  name: FileSerializer
  nameWithType: FileSerializer
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nClass that is used to convert dependency files from and to their native format into a serialized form that can be\nembedded in an XML file, XLIFF file, or file type definition.\n"
  syntax:
    content: public static class FileSerializer
    content.vb: Public Module FileSerializer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.SerializeFile(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.SerializeFile(System.String)
  id: SerializeFile(System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer
  langs:
  - csharp
  - vb
  name: SerializeFile(String)
  nameWithType: FileSerializer.SerializeFile(String)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.SerializeFile(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nSerializes the file into a base-64 encoded string\n"
  syntax:
    content: public static string SerializeFile(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: The path of the file to encode
    return:
      type: System.String
      description: The serialized file string
    content.vb: Public Shared Function SerializeFile(filePath As String) As String
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.SerializeFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.SerializeFile(System.IO.FileInfo)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.SerializeFile(System.IO.FileInfo)
  id: SerializeFile(System.IO.FileInfo)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer
  langs:
  - csharp
  - vb
  name: SerializeFile(FileInfo)
  nameWithType: FileSerializer.SerializeFile(FileInfo)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.SerializeFile(System.IO.FileInfo)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nSerializes the file into a base-64 encoded string\n"
  syntax:
    content: public static string SerializeFile(FileInfo file)
    parameters:
    - id: file
      type: System.IO.FileInfo
      description: The file to encode
    return:
      type: System.String
      description: The serialized file string
    content.vb: Public Shared Function SerializeFile(file As FileInfo) As String
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.SerializeFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.DeserializeFile(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.DeserializeFile(System.String)
  id: DeserializeFile(System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer
  langs:
  - csharp
  - vb
  name: DeserializeFile(String)
  nameWithType: FileSerializer.DeserializeFile(String)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.DeserializeFile(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nDeserializes the file from a base-64 string\n"
  syntax:
    content: public static DeserializeFileInfo DeserializeFile(string encodedFile)
    parameters:
    - id: encodedFile
      type: System.String
      description: The serialized file string
    return:
      type: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo
      description: Information on the file and whether it was created successfully
    content.vb: Public Shared Function DeserializeFile(encodedFile As String) As DeserializeFileInfo
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.DeserializeFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.UnzipExternalFile(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.UnzipExternalFile(System.String)
  id: UnzipExternalFile(System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer
  langs:
  - csharp
  - vb
  name: UnzipExternalFile(String)
  nameWithType: FileSerializer.UnzipExternalFile(String)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.UnzipExternalFile(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nUnzips a file\n"
  syntax:
    content: public static DeserializeFileInfo UnzipExternalFile(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: The path to the zip file.
    return:
      type: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo
      description: Information on the file and whether it was created successfully
    content.vb: Public Shared Function UnzipExternalFile(filePath As String) As DeserializeFileInfo
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.UnzipExternalFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.ZipExternalFile(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.ZipExternalFile(System.String)
  id: ZipExternalFile(System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer
  langs:
  - csharp
  - vb
  name: ZipExternalFile(String)
  nameWithType: FileSerializer.ZipExternalFile(String)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.ZipExternalFile(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nCompresses the file according to the zip standard to reduce the size of the encoded file.\n"
  syntax:
    content: public static string ZipExternalFile(string filepath)
    parameters:
    - id: filepath
      type: System.String
      description: The path to the file that needs to be zipped
    return:
      type: System.String
      description: The path to the zip file
    content.vb: Public Shared Function ZipExternalFile(filepath As String) As String
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.ZipExternalFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Sdl.FileTypeSupport.Framework.Core.Settings
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Settings
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Core.Settings
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Settings
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.SerializeFile*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.SerializeFile
  isExternal: true
  name: SerializeFile
  nameWithType: FileSerializer.SerializeFile
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.SerializeFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileInfo
  commentId: T:System.IO.FileInfo
  parent: System.IO
  isExternal: true
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.DeserializeFile*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.DeserializeFile
  isExternal: true
  name: DeserializeFile
  nameWithType: FileSerializer.DeserializeFile
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.DeserializeFile
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo
  parent: Sdl.FileTypeSupport.Framework.Core.Settings
  isExternal: true
  name: DeserializeFileInfo
  nameWithType: DeserializeFileInfo
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.UnzipExternalFile*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.UnzipExternalFile
  isExternal: true
  name: UnzipExternalFile
  nameWithType: FileSerializer.UnzipExternalFile
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.UnzipExternalFile
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.ZipExternalFile*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.ZipExternalFile
  isExternal: true
  name: ZipExternalFile
  nameWithType: FileSerializer.ZipExternalFile
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FileSerializer.ZipExternalFile
