### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  id: IPersistentFileConversionProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationDate
  - Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationTool
  - Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationToolVersion
  - Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.DependencyFiles
  - Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileId
  - Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileSnifferInfo
  - Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileTypeDefinitionId
  - Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.InputFilePath
  - Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.Item(System.String)
  - Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.OriginalEncoding
  - Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.OriginalFilePath
  - Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.PreferredTargetEncoding
  - Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.SourceLanguage
  - Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.TargetLanguage
  langs:
  - csharp
  - vb
  name: IPersistentFileConversionProperties
  nameWithType: IPersistentFileConversionProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\n<p>\nFile-level properties that are guaranteed to be preserved (if necessary persisted to an\nintermediate bilingual file format) during different stages of the content processing lifecycle;\npassed to native content processors, parsers and writers that implement <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nComponents can set these properties during parsing, and they will be made available when \ngenerating the translated output, or during any other operation used to process content.\n</p>\n<p>\nCustom properties can be stored as metadata key/value pairs through the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer\" data-throw-if-not-resolved=\"false\"></xref> implementation. It is\nrecommended that keys are prefixed with a value that is likely to be unique in order to \navoid conflicts with unrelated components. \n</p>\n"
  remarks: "\n<p>\nComponents can retrieve these properties by implementing <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware\" data-throw-if-not-resolved=\"false\"></xref>. The\nframework calls <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.SetFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)\" data-throw-if-not-resolved=\"false\"></xref> to pass\nthe properties.\n</p>\n<p>\nAll metadata stored by SDL components use keys prefixed &quot;SDL:&quot;. \n</p>\n<p>\nKeys for a number of published file properties used by certain SDL components \nare defined in <code>Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.DefaultPersistentFilePropertiesKeys</code>. \n</p>\n"
  syntax:
    content: 'public interface IPersistentFileConversionProperties : IMetaDataContainer, ICloneable'
    content.vb: >-
      Public Interface IPersistentFileConversionProperties
          Inherits IMetaDataContainer, ICloneable
  inheritedMembers:
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey(System.String)
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String,System.String)
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaData
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.HasMetaData
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataCount
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileId
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileId
  id: FileId
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  langs:
  - csharp
  - vb
  name: FileId
  nameWithType: IPersistentFileConversionProperties.FileId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileId
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nUnique identifier for this file; can be used to unambigously identify\nthe file in a bilingual document with multiple files.\n"
  remarks: "\n<p>\nThis is set by the framework, and should typically never need to be changed.\n</p>\n"
  syntax:
    content: FileId FileId { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.FileId
    content.vb: Property FileId As FileId
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileId*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileTypeDefinitionId
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileTypeDefinitionId
  id: FileTypeDefinitionId
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  langs:
  - csharp
  - vb
  name: FileTypeDefinitionId
  nameWithType: IPersistentFileConversionProperties.FileTypeDefinitionId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileTypeDefinitionId
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe unique identifier for the file type definition used in this conversion.\n"
  remarks: "\n<p>\nCan be used to identify the file type.\n</p>\n"
  syntax:
    content: FileTypeDefinitionId FileTypeDefinitionId { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.FileTypeDefinitionId
    content.vb: Property FileTypeDefinitionId As FileTypeDefinitionId
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileTypeDefinitionId*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.Item(System.String)
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.Item(System.String)
  id: Item(System.String)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: IPersistentFileConversionProperties.Item[String]
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.Item[System.String]
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\n<p>\nConvenience getter and setter for metadata using indexer syntax. \n</p>\n<p>\nThe getter functionality is equivalent to calling <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>,\nand setter functionality is equivalent to <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  syntax:
    content: string this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: Must not be <code>null</code> or empty
    return:
      type: System.String
      description: The corresponding value, or <code>null</code> if none
    content.vb: Property Item(key As String) As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.Item*
  nameWithType.vb: IPersistentFileConversionProperties.Item(String)
  modifiers.csharp:
  - get
  - set
  fullName.vb: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.Item(System.String)
  name.vb: Item(String)
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.DependencyFiles
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.DependencyFiles
  id: DependencyFiles
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  langs:
  - csharp
  - vb
  name: DependencyFiles
  nameWithType: IPersistentFileConversionProperties.DependencyFiles
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.DependencyFiles
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\n<p>\nThe dependency files used or created while parsing.\n</p>\n"
  remarks: "\n<p>\nThe set of dependency files can change while parsing, but\nshould not change after the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.INativeContentCycleAware.EndOfInput\" data-throw-if-not-resolved=\"false\"></xref> call.\n</p>\n<p>\nAny dependency files reported by a parser or file type component when parsing a native file will\nbe passed through this property when writing the native file.\n</p>\n"
  syntax:
    content: IList<IDependencyFileProperties> DependencyFiles { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties}
    content.vb: ReadOnly Property DependencyFiles As IList(Of IDependencyFileProperties)
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.DependencyFiles*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.OriginalFilePath
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.OriginalFilePath
  id: OriginalFilePath
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  langs:
  - csharp
  - vb
  name: OriginalFilePath
  nameWithType: IPersistentFileConversionProperties.OriginalFilePath
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.OriginalFilePath
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nFull path name to the native file the content originates from.\n"
  remarks: "\n<p>\nUsually, this is the same as the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.InputFilePath\" data-throw-if-not-resolved=\"false\"></xref>, but it can\nbe different, e.g. if file tweaking has been applied.\n</p>\n"
  syntax:
    content: string OriginalFilePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property OriginalFilePath As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.OriginalFilePath*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.InputFilePath
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.InputFilePath
  id: InputFilePath
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  langs:
  - csharp
  - vb
  name: InputFilePath
  nameWithType: IPersistentFileConversionProperties.InputFilePath
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.InputFilePath
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\n<p>\nFull path to the file that should be used as source for the parser. \n</p>\n"
  remarks: "\n<p>\nUsually, this will be the same as <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.OriginalFilePath\" data-throw-if-not-resolved=\"false\"></xref>, but under some \ncircumstances (e.g. file tweaking) there may be an alternative input file produced.\n</p>\n"
  syntax:
    content: string InputFilePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property InputFilePath As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.InputFilePath*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.OriginalEncoding
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.OriginalEncoding
  id: OriginalEncoding
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  langs:
  - csharp
  - vb
  name: OriginalEncoding
  nameWithType: IPersistentFileConversionProperties.OriginalEncoding
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.OriginalEncoding
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe original encoding of the native source language file from which the content originates\n"
  syntax:
    content: Codepage OriginalEncoding { get; set; }
    parameters: []
    return:
      type: Sdl.Core.Globalization.Codepage
    content.vb: Property OriginalEncoding As Codepage
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.OriginalEncoding*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.SourceLanguage
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.SourceLanguage
  id: SourceLanguage
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  langs:
  - csharp
  - vb
  name: SourceLanguage
  nameWithType: IPersistentFileConversionProperties.SourceLanguage
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.SourceLanguage
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nOriginal source language of the content\n"
  syntax:
    content: Language SourceLanguage { get; set; }
    parameters: []
    return:
      type: Sdl.Core.Globalization.Language
    content.vb: Property SourceLanguage As Language
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.SourceLanguage*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.TargetLanguage
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.TargetLanguage
  id: TargetLanguage
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  langs:
  - csharp
  - vb
  name: TargetLanguage
  nameWithType: IPersistentFileConversionProperties.TargetLanguage
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.TargetLanguage
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nTarget language into which the content is being translated into.\n"
  remarks: "The target language is typically not set until the file is being translated. \nYou can test the <see cref=\"!:Language.IsValid\"></see> property of the target language\nto find out if it has been set."
  syntax:
    content: Language TargetLanguage { get; set; }
    parameters: []
    return:
      type: Sdl.Core.Globalization.Language
    content.vb: Property TargetLanguage As Language
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.TargetLanguage*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.PreferredTargetEncoding
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.PreferredTargetEncoding
  id: PreferredTargetEncoding
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  langs:
  - csharp
  - vb
  name: PreferredTargetEncoding
  nameWithType: IPersistentFileConversionProperties.PreferredTargetEncoding
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.PreferredTargetEncoding
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nIf set, indicates the preferred codepage that the target language file should be in.\nYou can test the <xref href=\"Sdl.Core.Globalization.Codepage.IsValid\" data-throw-if-not-resolved=\"false\"></xref> property of the returned codepage\nto find out if it has been set.\n\nThis property can be used during editing to warn the user when they try to use\ncharacters in the translation that are not supported by the given codepage.\n\nIf this property is set when writing the target language version of the file, it may\nbe used by the native file writer (though it is ultimately up to the file writer\nto decide).\n"
  syntax:
    content: Codepage PreferredTargetEncoding { get; set; }
    parameters: []
    return:
      type: Sdl.Core.Globalization.Codepage
    content.vb: Property PreferredTargetEncoding As Codepage
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.PreferredTargetEncoding*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileSnifferInfo
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileSnifferInfo
  id: FileSnifferInfo
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  langs:
  - csharp
  - vb
  name: FileSnifferInfo
  nameWithType: IPersistentFileConversionProperties.FileSnifferInfo
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileSnifferInfo
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nProperties determined during successful identification of this\nfile type\n"
  syntax:
    content: SniffInfo FileSnifferInfo { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo
    content.vb: Property FileSnifferInfo As SniffInfo
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileSnifferInfo*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationTool
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationTool
  id: CreationTool
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  langs:
  - csharp
  - vb
  name: CreationTool
  nameWithType: IPersistentFileConversionProperties.CreationTool
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationTool
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe name of the tool used for the conversion\n"
  syntax:
    content: string CreationTool { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property CreationTool As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationTool*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationToolVersion
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationToolVersion
  id: CreationToolVersion
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  langs:
  - csharp
  - vb
  name: CreationToolVersion
  nameWithType: IPersistentFileConversionProperties.CreationToolVersion
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationToolVersion
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe version number of the tool used for the conversion\n"
  syntax:
    content: string CreationToolVersion { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property CreationToolVersion As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationToolVersion*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationDate
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationDate
  id: CreationDate
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  langs:
  - csharp
  - vb
  name: CreationDate
  nameWithType: IPersistentFileConversionProperties.CreationDate
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationDate
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe time of the original conversion\n"
  syntax:
    content: DateTime CreationDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Property CreationDate As Date
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationDate*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey(System.String)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  isExternal: true
  name: MetaDataContainsKey(String)
  nameWithType: IMetaDataContainer.MetaDataContainsKey(String)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey(System.String)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey(System.String)
    name: MetaDataContainsKey
    nameWithType: IMetaDataContainer.MetaDataContainsKey
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey(System.String)
    name: MetaDataContainsKey
    nameWithType: IMetaDataContainer.MetaDataContainsKey
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  isExternal: true
  name: GetMetaData(String)
  nameWithType: IMetaDataContainer.GetMetaData(String)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)
    name: GetMetaData
    nameWithType: IMetaDataContainer.GetMetaData
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)
    name: GetMetaData
    nameWithType: IMetaDataContainer.GetMetaData
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String,System.String)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  isExternal: true
  name: SetMetaData(String, String)
  nameWithType: IMetaDataContainer.SetMetaData(String, String)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String, System.String)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String,System.String)
    name: SetMetaData
    nameWithType: IMetaDataContainer.SetMetaData
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String,System.String)
    name: SetMetaData
    nameWithType: IMetaDataContainer.SetMetaData
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  isExternal: true
  name: RemoveMetaData(String)
  nameWithType: IMetaDataContainer.RemoveMetaData(String)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)
    name: RemoveMetaData
    nameWithType: IMetaDataContainer.RemoveMetaData
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)
    name: RemoveMetaData
    nameWithType: IMetaDataContainer.RemoveMetaData
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  isExternal: true
  name: ClearMetaData()
  nameWithType: IMetaDataContainer.ClearMetaData()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
    name: ClearMetaData
    nameWithType: IMetaDataContainer.ClearMetaData
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
    name: ClearMetaData
    nameWithType: IMetaDataContainer.ClearMetaData
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaData
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaData
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  isExternal: true
  name: MetaData
  nameWithType: IMetaDataContainer.MetaData
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaData
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.HasMetaData
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.HasMetaData
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  isExternal: true
  name: HasMetaData
  nameWithType: IMetaDataContainer.HasMetaData
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.HasMetaData
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataCount
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataCount
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  isExternal: true
  name: MetaDataCount
  nameWithType: IMetaDataContainer.MetaDataCount
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataCount
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IMetaDataContainer
  nameWithType: IMetaDataContainer
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileId*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileId
  isExternal: true
  name: FileId
  nameWithType: IPersistentFileConversionProperties.FileId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileId
- uid: Sdl.FileTypeSupport.Framework.NativeApi.FileId
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.FileId
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: FileId
  nameWithType: FileId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.FileId
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileTypeDefinitionId*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileTypeDefinitionId
  isExternal: true
  name: FileTypeDefinitionId
  nameWithType: IPersistentFileConversionProperties.FileTypeDefinitionId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileTypeDefinitionId
- uid: Sdl.FileTypeSupport.Framework.FileTypeDefinitionId
  commentId: T:Sdl.FileTypeSupport.Framework.FileTypeDefinitionId
  parent: Sdl.FileTypeSupport.Framework
  isExternal: true
  name: FileTypeDefinitionId
  nameWithType: FileTypeDefinitionId
  fullName: Sdl.FileTypeSupport.Framework.FileTypeDefinitionId
- uid: Sdl.FileTypeSupport.Framework
  commentId: N:Sdl.FileTypeSupport.Framework
  isExternal: true
  name: Sdl.FileTypeSupport.Framework
  nameWithType: Sdl.FileTypeSupport.Framework
  fullName: Sdl.FileTypeSupport.Framework
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.Item*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.Item
  isExternal: true
  name: Item
  nameWithType: IPersistentFileConversionProperties.Item
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.Item
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.DependencyFiles*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.DependencyFiles
  isExternal: true
  name: DependencyFiles
  nameWithType: IPersistentFileConversionProperties.DependencyFiles
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.DependencyFiles
- uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties}
  commentId: T:System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IDependencyFileProperties>
  nameWithType: IList<IDependencyFileProperties>
  fullName: System.Collections.Generic.IList<Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties>
  nameWithType.vb: IList(Of IDependencyFileProperties)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties)
  name.vb: IList(Of IDependencyFileProperties)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
    name: IDependencyFileProperties
    nameWithType: IDependencyFileProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
    name: IDependencyFileProperties
    nameWithType: IDependencyFileProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IDependencyFileProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.OriginalFilePath*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.OriginalFilePath
  isExternal: true
  name: OriginalFilePath
  nameWithType: IPersistentFileConversionProperties.OriginalFilePath
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.OriginalFilePath
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.InputFilePath*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.InputFilePath
  isExternal: true
  name: InputFilePath
  nameWithType: IPersistentFileConversionProperties.InputFilePath
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.InputFilePath
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.OriginalEncoding*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.OriginalEncoding
  isExternal: true
  name: OriginalEncoding
  nameWithType: IPersistentFileConversionProperties.OriginalEncoding
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.OriginalEncoding
- uid: Sdl.Core.Globalization.Codepage
  isExternal: true
  name: Codepage
  nameWithType: Codepage
  fullName: Sdl.Core.Globalization.Codepage
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.SourceLanguage*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.SourceLanguage
  isExternal: true
  name: SourceLanguage
  nameWithType: IPersistentFileConversionProperties.SourceLanguage
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.SourceLanguage
- uid: Sdl.Core.Globalization.Language
  isExternal: true
  name: Language
  nameWithType: Language
  fullName: Sdl.Core.Globalization.Language
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.TargetLanguage*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.TargetLanguage
  isExternal: true
  name: TargetLanguage
  nameWithType: IPersistentFileConversionProperties.TargetLanguage
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.TargetLanguage
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.PreferredTargetEncoding*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.PreferredTargetEncoding
  isExternal: true
  name: PreferredTargetEncoding
  nameWithType: IPersistentFileConversionProperties.PreferredTargetEncoding
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.PreferredTargetEncoding
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileSnifferInfo*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileSnifferInfo
  isExternal: true
  name: FileSnifferInfo
  nameWithType: IPersistentFileConversionProperties.FileSnifferInfo
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileSnifferInfo
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: SniffInfo
  nameWithType: SniffInfo
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationTool*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationTool
  isExternal: true
  name: CreationTool
  nameWithType: IPersistentFileConversionProperties.CreationTool
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationTool
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationToolVersion*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationToolVersion
  isExternal: true
  name: CreationToolVersion
  nameWithType: IPersistentFileConversionProperties.CreationToolVersion
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationToolVersion
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationDate*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationDate
  isExternal: true
  name: CreationDate
  nameWithType: IPersistentFileConversionProperties.CreationDate
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.CreationDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
