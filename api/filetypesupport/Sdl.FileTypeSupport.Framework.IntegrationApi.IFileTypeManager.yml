### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  id: IFileTypeManager
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AddFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AutoLoadedFileTypes
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildAdditionalGeneratorsInfo(Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo[])
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildBilingualGenerator(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentWriter)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildBilingualGenerator(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildDefaultBilingualGenerator
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractor(System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractorNoSniffing(System.String,System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileExtractor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractor,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileGenerator(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualWriter)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerator)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileTypeInformation
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildGeneratorInfo
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileWriter)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGeneratorWithVerifiers(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeSubContentExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeSubContentGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileWriter)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildPreviewSetsFactory
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildQuickTagsFactory
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentExtractor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentExtractor,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentGenerator(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualWriter)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentGenerator)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildVerifierCollection
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.ClearFileTypeDefinitions
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.ConfigurationVersionInformation
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder,Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition(System.String,Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.DefaultBilingualFileTypeDefinition
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitionFactory
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitions
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FindFileTypeDefinition(Sdl.FileTypeSupport.Framework.FileTypeDefinitionId)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetAllMatchingFileTypeDefinitions(System.String,Sdl.Core.Globalization.Language,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetAllMatchingFileTypeDefinitions(System.String,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetBestMatchingFileTypeDefinition(System.String,Sdl.Core.Globalization.Language,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetBestMatchingFileTypeDefinition(System.String,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(System.String,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(System.String,System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(System.String[],System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator,Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual(System.String,Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator,Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual(System.String[],Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator,Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(System.String,System.String,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(System.String,System.String,System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(System.String[],System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(System.String,Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(System.String[],Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.InsertFileTypeDefinition(System.Int32,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.RemoveFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.SettingsBundle
  langs:
  - csharp
  - vb
  name: IFileTypeManager
  nameWithType: IFileTypeManager
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  type: Interface
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    <p>

    This is the main access point for file conversion operations.

    </p>

    <p>

    The file type manager holds a prioritized list of file type definitions.

    The order of file type definitions is important, as it determines

    which file types take precedence over others in case multiple file type

    definitions could be used to process the same file.

    The most significant file type definition appears first in the list.

    </p>

    <p>

    In implementations, the file type manager is often pre-configured with a 

    set of file type definitions in the host application. However, the list can also 

    be explicitly manipulated by calling <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AddFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)" data-throw-if-not-resolved="false"></xref>,

    <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.InsertFileTypeDefinition(System.Int32%2cSdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)" data-throw-if-not-resolved="false"></xref> or <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.RemoveFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)" data-throw-if-not-resolved="false"></xref>.

    File type definitions can be instantiated from existing files or resources 

    using the <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitionFactory" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    Call one of the overloaded <code>GetConverter...()</code> methods to use the file type definitions to

    automatically detect file types and initialize a <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter" data-throw-if-not-resolved="false"></xref> to process the content.

    </p>
  remarks: >-
    <p>

    Actual file type manager instances are often provided by the application that hosts the

    framework, in which case they are often pre-configured from some configuration (e.g.

    through the spring framework).

    </p>
  example: []
  syntax:
    content: public interface IFileTypeManager
    content.vb: Public Interface IFileTypeManager
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FindFileTypeDefinition(Sdl.FileTypeSupport.Framework.FileTypeDefinitionId)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FindFileTypeDefinition(Sdl.FileTypeSupport.Framework.FileTypeDefinitionId)
  id: FindFileTypeDefinition(Sdl.FileTypeSupport.Framework.FileTypeDefinitionId)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: FindFileTypeDefinition(FileTypeDefinitionId)
  nameWithType: IFileTypeManager.FindFileTypeDefinition(FileTypeDefinitionId)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FindFileTypeDefinition(Sdl.FileTypeSupport.Framework.FileTypeDefinitionId)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Locates a file type definition from the collection using ids.
  example: []
  syntax:
    content: IFileTypeDefinition FindFileTypeDefinition(FileTypeDefinitionId id)
    parameters:
    - id: id
      type: Sdl.FileTypeSupport.Framework.FileTypeDefinitionId
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
      description: The corresponding file type definition, or <code>null</code> if none
    content.vb: Function FindFileTypeDefinition(id As FileTypeDefinitionId) As IFileTypeDefinition
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FindFileTypeDefinition*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetAllMatchingFileTypeDefinitions(System.String,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetAllMatchingFileTypeDefinitions(System.String,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  id: GetAllMatchingFileTypeDefinitions(System.String,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetAllMatchingFileTypeDefinitions(string, EventHandler<MessageEventArgs>)
  nameWithType: IFileTypeManager.GetAllMatchingFileTypeDefinitions(string, EventHandler<MessageEventArgs>)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetAllMatchingFileTypeDefinitions(string, System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    <p>Returns the file type definitions that can operate on the specified file.</p>

    <p>Each file type definition is evaluated in order to determine if it can process the file,

    which may involve invoking the corresponding file sniffer.</p>

    <p>Only file type definitions that are enabled and not hidden are evaluated.</p>
  remarks: >-
    <p>

    If more than one file type definition is returned, the order corresponds to the order 

    in which the definitions appear in the manager.

    </p>

    <p>

    If all file types are enabled, the first file type definition 

    returned is the one that is used if calling one of the <code>GetConverter</code> overloads.

    </p>

    <p>

    Any messages generated during file sniffing are reported to the optional <code class="paramref">messageHandler</code>.

    </p>
  example: []
  syntax:
    content: IEnumerable<Pair<IFileTypeDefinition, SniffInfo>> GetAllMatchingFileTypeDefinitions(string nativeFilePath, EventHandler<MessageEventArgs> messageHandler)
    parameters:
    - id: nativeFilePath
      type: System.String
      description: The path to the file which is 'sniffed' in order to determine applicable file type definitions.
    - id: messageHandler
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
      description: >-
        Optional handler for messages reported by any file sniffers invoked in the process. 
                    You may pass <code>null</code> for this parameter.
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.Pair{Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition,Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo}}
      description: >-
        File type definitions that can operate on the file specified, and the information
                    from their file sniffers
    content.vb: Function GetAllMatchingFileTypeDefinitions(nativeFilePath As String, messageHandler As EventHandler(Of MessageEventArgs)) As IEnumerable(Of Pair(Of IFileTypeDefinition, SniffInfo))
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetAllMatchingFileTypeDefinitions*
  nameWithType.vb: IFileTypeManager.GetAllMatchingFileTypeDefinitions(String, EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetAllMatchingFileTypeDefinitions(String, System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs))
  name.vb: GetAllMatchingFileTypeDefinitions(String, EventHandler(Of MessageEventArgs))
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetAllMatchingFileTypeDefinitions(System.String,Sdl.Core.Globalization.Language,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetAllMatchingFileTypeDefinitions(System.String,Sdl.Core.Globalization.Language,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  id: GetAllMatchingFileTypeDefinitions(System.String,Sdl.Core.Globalization.Language,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetAllMatchingFileTypeDefinitions(string, Language, Codepage, EventHandler<MessageEventArgs>)
  nameWithType: IFileTypeManager.GetAllMatchingFileTypeDefinitions(string, Language, Codepage, EventHandler<MessageEventArgs>)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetAllMatchingFileTypeDefinitions(string, Sdl.Core.Globalization.Language, Sdl.Core.Globalization.Codepage, System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    <p>Returns the file type definitions that can operate on the specified file.</p>

    <p>Each file type definition is evaluated in order to determine if it can process the file,

    which may involve invoking the corresponding file sniffer.</p>

    <p>Only file type definitions that are enabled and not hidden are evaluated.</p>
  remarks: >-
    <p>

    If more than one file type definition is returned, the order corresponds to the order 

    in which the definitions appear in the manager.

    </p>

    <p>

    If all file types are enabled, the first file type definition 

    returned is the one that is used if calling one of the <code>GetConverter</code> overloads.

    </p>

    <p>

    Any messages generated during file sniffing are reported to the optional <code class="paramref">messageHandler</code>.

    </p>
  example: []
  syntax:
    content: IEnumerable<Pair<IFileTypeDefinition, SniffInfo>> GetAllMatchingFileTypeDefinitions(string nativeFilePath, Language suggestedSourceLanguage, Codepage suggestedCodepage, EventHandler<MessageEventArgs> messageHandler)
    parameters:
    - id: nativeFilePath
      type: System.String
      description: The path to the file which is 'sniffed' in order to determine applicable file type definitions.
    - id: suggestedSourceLanguage
      type: Sdl.Core.Globalization.Language
    - id: suggestedCodepage
      type: Sdl.Core.Globalization.Codepage
    - id: messageHandler
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
      description: >-
        Optional handler for messages reported by any file sniffers invoked in the process. 
                    <param name="suggestedSourceLanguage" />
                    <param name="suggestedCodepage" />
                    You may pass <code>null</code> for this parameter.
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.Pair{Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition,Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo}}
      description: >-
        File type definitions that can operate on the file specified, and the information
                    from their file sniffers
    content.vb: Function GetAllMatchingFileTypeDefinitions(nativeFilePath As String, suggestedSourceLanguage As Language, suggestedCodepage As Codepage, messageHandler As EventHandler(Of MessageEventArgs)) As IEnumerable(Of Pair(Of IFileTypeDefinition, SniffInfo))
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetAllMatchingFileTypeDefinitions*
  nameWithType.vb: IFileTypeManager.GetAllMatchingFileTypeDefinitions(String, Language, Codepage, EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetAllMatchingFileTypeDefinitions(String, Sdl.Core.Globalization.Language, Sdl.Core.Globalization.Codepage, System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs))
  name.vb: GetAllMatchingFileTypeDefinitions(String, Language, Codepage, EventHandler(Of MessageEventArgs))
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetBestMatchingFileTypeDefinition(System.String,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetBestMatchingFileTypeDefinition(System.String,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  id: GetBestMatchingFileTypeDefinition(System.String,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetBestMatchingFileTypeDefinition(string, EventHandler<MessageEventArgs>)
  nameWithType: IFileTypeManager.GetBestMatchingFileTypeDefinition(string, EventHandler<MessageEventArgs>)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetBestMatchingFileTypeDefinition(string, System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: <p>Returns the first file type definition that can operate on the specified file.</p>
  example: []
  syntax:
    content: Pair<IFileTypeDefinition, SniffInfo> GetBestMatchingFileTypeDefinition(string nativeFilePath, EventHandler<MessageEventArgs> messageHandler)
    parameters:
    - id: nativeFilePath
      type: System.String
      description: ''
    - id: messageHandler
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.Pair{Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition,Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo}
      description: ''
    content.vb: Function GetBestMatchingFileTypeDefinition(nativeFilePath As String, messageHandler As EventHandler(Of MessageEventArgs)) As Pair(Of IFileTypeDefinition, SniffInfo)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetBestMatchingFileTypeDefinition*
  nameWithType.vb: IFileTypeManager.GetBestMatchingFileTypeDefinition(String, EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetBestMatchingFileTypeDefinition(String, System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs))
  name.vb: GetBestMatchingFileTypeDefinition(String, EventHandler(Of MessageEventArgs))
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetBestMatchingFileTypeDefinition(System.String,Sdl.Core.Globalization.Language,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetBestMatchingFileTypeDefinition(System.String,Sdl.Core.Globalization.Language,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  id: GetBestMatchingFileTypeDefinition(System.String,Sdl.Core.Globalization.Language,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetBestMatchingFileTypeDefinition(string, Language, Codepage, EventHandler<MessageEventArgs>)
  nameWithType: IFileTypeManager.GetBestMatchingFileTypeDefinition(string, Language, Codepage, EventHandler<MessageEventArgs>)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetBestMatchingFileTypeDefinition(string, Sdl.Core.Globalization.Language, Sdl.Core.Globalization.Codepage, System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: <p>Returns the first file type definition that can operate on the specified file.</p>
  example: []
  syntax:
    content: Pair<IFileTypeDefinition, SniffInfo> GetBestMatchingFileTypeDefinition(string nativeFilePath, Language suggestedSourceLanguage, Codepage suggestedCodepage, EventHandler<MessageEventArgs> messageHandler)
    parameters:
    - id: nativeFilePath
      type: System.String
      description: ''
    - id: suggestedSourceLanguage
      type: Sdl.Core.Globalization.Language
      description: ''
    - id: suggestedCodepage
      type: Sdl.Core.Globalization.Codepage
      description: ''
    - id: messageHandler
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.Pair{Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition,Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo}
      description: ''
    content.vb: Function GetBestMatchingFileTypeDefinition(nativeFilePath As String, suggestedSourceLanguage As Language, suggestedCodepage As Codepage, messageHandler As EventHandler(Of MessageEventArgs)) As Pair(Of IFileTypeDefinition, SniffInfo)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetBestMatchingFileTypeDefinition*
  nameWithType.vb: IFileTypeManager.GetBestMatchingFileTypeDefinition(String, Language, Codepage, EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetBestMatchingFileTypeDefinition(String, Sdl.Core.Globalization.Language, Sdl.Core.Globalization.Codepage, System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs))
  name.vb: GetBestMatchingFileTypeDefinition(String, Language, Codepage, EventHandler(Of MessageEventArgs))
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AddFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AddFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  id: AddFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: AddFileTypeDefinition(IFileTypeDefinition)
  nameWithType: IFileTypeManager.AddFileTypeDefinition(IFileTypeDefinition)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AddFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Appends a file type definition to the collection.
  remarks: The file type definition is added last in the list of known file type definitions.
  example: []
  syntax:
    content: void AddFileTypeDefinition(IFileTypeDefinition fileTypeDefinition)
    parameters:
    - id: fileTypeDefinition
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
      description: ''
    content.vb: Sub AddFileTypeDefinition(fileTypeDefinition As IFileTypeDefinition)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AddFileTypeDefinition*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition(System.String,Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition(System.String,Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  id: CreateFileTypeDefinition(System.String,Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: CreateFileTypeDefinition(string, FileTypeProfile)
  nameWithType: IFileTypeManager.CreateFileTypeDefinition(string, FileTypeProfile)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition(string, Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Creates a file type definition based on the Id and a profile override.

    The FilterManager must discover the actual component builder associated with this definition and create a new definition based on it.

    If a profileOverride has been supplied, then this should override the FileTypeInformation for that definition.
  example: []
  syntax:
    content: IFileTypeDefinition CreateFileTypeDefinition(string fileTypeDefinitionId, FileTypeProfile profileOverride)
    parameters:
    - id: fileTypeDefinitionId
      type: System.String
      description: ID of component builder which should be used to create this filter
    - id: profileOverride
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
      description: profile used to override the FileTypeInformation
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
      description: The created IFileTypeDefinitionInstance
    content.vb: Function CreateFileTypeDefinition(fileTypeDefinitionId As String, profileOverride As FileTypeProfile) As IFileTypeDefinition
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition*
  nameWithType.vb: IFileTypeManager.CreateFileTypeDefinition(String, FileTypeProfile)
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition(String, Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  name.vb: CreateFileTypeDefinition(String, FileTypeProfile)
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder,Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder,Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  id: CreateFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder,Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: CreateFileTypeDefinition(IFileTypeComponentBuilder, FileTypeProfile)
  nameWithType: IFileTypeManager.CreateFileTypeDefinition(IFileTypeComponentBuilder, FileTypeProfile)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder, Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Creates a file type definition based on component builder and overrides the FileTypeInformation with the supplied profile override.
  example: []
  syntax:
    content: IFileTypeDefinition CreateFileTypeDefinition(IFileTypeComponentBuilder componentBuilder, FileTypeProfile profileOverride)
    parameters:
    - id: componentBuilder
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
      description: The component builder used to initialize the FileTypeDefinition
    - id: profileOverride
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
      description: profile used to override the FileTypeInformation
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
      description: The created IFileTypeDefinitionInstance
    content.vb: Function CreateFileTypeDefinition(componentBuilder As IFileTypeComponentBuilder, profileOverride As FileTypeProfile) As IFileTypeDefinition
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition(System.String)
  id: CreateFileTypeDefinition(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: CreateFileTypeDefinition(string)
  nameWithType: IFileTypeManager.CreateFileTypeDefinition(string)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition(string)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Creates a file type definition based on the filter definition ID of component builder which should be used
     to create this filter.
  example: []
  syntax:
    content: IFileTypeDefinition CreateFileTypeDefinition(string fileTypeDefinitionId)
    parameters:
    - id: fileTypeDefinitionId
      type: System.String
      description: ID of component builder which should be used to create this filter
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
      description: The created IFileTypeDefinitionInstance
    content.vb: Function CreateFileTypeDefinition(fileTypeDefinitionId As String) As IFileTypeDefinition
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition*
  nameWithType.vb: IFileTypeManager.CreateFileTypeDefinition(String)
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition(String)
  name.vb: CreateFileTypeDefinition(String)
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.InsertFileTypeDefinition(System.Int32,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.InsertFileTypeDefinition(System.Int32,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  id: InsertFileTypeDefinition(System.Int32,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: InsertFileTypeDefinition(int, IFileTypeDefinition)
  nameWithType: IFileTypeManager.InsertFileTypeDefinition(int, IFileTypeDefinition)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.InsertFileTypeDefinition(int, Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Inserts a file type definition into the collection at a specific priority position.
  example: []
  syntax:
    content: void InsertFileTypeDefinition(int index, IFileTypeDefinition filterDefinition)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        0-based index indicating the file type definition's priority in relation to the
                    other currently known file type definitions.
    - id: filterDefinition
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
      description: ''
    content.vb: Sub InsertFileTypeDefinition(index As Integer, filterDefinition As IFileTypeDefinition)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.InsertFileTypeDefinition*
  nameWithType.vb: IFileTypeManager.InsertFileTypeDefinition(Integer, IFileTypeDefinition)
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.InsertFileTypeDefinition(Integer, Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  name.vb: InsertFileTypeDefinition(Integer, IFileTypeDefinition)
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.RemoveFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.RemoveFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  id: RemoveFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: RemoveFileTypeDefinition(IFileTypeDefinition)
  nameWithType: IFileTypeManager.RemoveFileTypeDefinition(IFileTypeDefinition)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.RemoveFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Removes a file type definition from the collection.

    If no such file type definition exists in the collection, nothing happens.
  example: []
  syntax:
    content: void RemoveFileTypeDefinition(IFileTypeDefinition filterDefinition)
    parameters:
    - id: filterDefinition
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
      description: ''
    content.vb: Sub RemoveFileTypeDefinition(filterDefinition As IFileTypeDefinition)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.RemoveFileTypeDefinition*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.ClearFileTypeDefinitions
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.ClearFileTypeDefinitions
  id: ClearFileTypeDefinitions
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: ClearFileTypeDefinitions()
  nameWithType: IFileTypeManager.ClearFileTypeDefinitions()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.ClearFileTypeDefinitions()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Removes all file type definitions from the collection.
  example: []
  syntax:
    content: void ClearFileTypeDefinitions()
    content.vb: Sub ClearFileTypeDefinitions()
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.ClearFileTypeDefinitions*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual(System.String[],Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator,Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual(System.String[],Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator,Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  id: GetConverterToBilingual(System.String[],Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator,Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetConverterToBilingual(string[], IBilingualDocumentGenerator, BilingualDocumentOutputPropertiesProvider, CultureInfo, Codepage, EventHandler<MessageEventArgs>)
  nameWithType: IFileTypeManager.GetConverterToBilingual(string[], IBilingualDocumentGenerator, BilingualDocumentOutputPropertiesProvider, CultureInfo, Codepage, EventHandler<MessageEventArgs>)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual(string[], Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator, Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider, System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Creates and initializes a file converter using the filters that best match a set of native files.

    The file converter can then be used to process all of the files as one document. The specified

    bilingual writer will be used for output.


    The file type definitions are tested in sequence, and the first file type definition that

    matches a file is used for each file. The following steps are used to determine if 

    a file type definition matches a file:

    <ol><li>The regular expression is evaluated against the name of the file to be converted. If it does not match,

    the file type definition is not used.</li><li>If a file sniffer is defined for the file type definition, it gets applied to the file. If the file sniffer

    does not indicate that the file is supported, the file type definition is not used.</li></ol>

    If no matching file type definition is found, a <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException" data-throw-if-not-resolved="false"></xref> is thrown.
  remarks: To convert bilingual files to native, you would typically rather use <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(System.String%2cSdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider%2cSystem.EventHandler%7bSdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs%7d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: IMultiFileConverter GetConverterToBilingual(string[] nativeFilePaths, IBilingualDocumentGenerator writer, BilingualDocumentOutputPropertiesProvider outputSettingsProvider, CultureInfo sourceLanguage, Codepage suggestedCodepage, EventHandler<MessageEventArgs> messageHandler)
    parameters:
    - id: nativeFilePaths
      type: System.String[]
      description: The native files to be converted
    - id: writer
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
      description: Bilingual writer to use as output with the converter
    - id: outputSettingsProvider
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider
      description: >-
        Implementation of the output settings provider for bilingual
                    document files. Will be passed to the multi-file converter and used for writing bilingual document files.
                    If the bilingual document generator does not have a bilingual document file writer, you can pass <code>null</code>
                    as parameter.
    - id: sourceLanguage
      type: System.Globalization.CultureInfo
      description: >-
        Expected source language of the files. 
                    <p>The same source (and target) language must be used for all the files processed with a single converter instance.</p>
                    <p>If the language can be determined automatically
                    from the content of the file (e.g. when reading a bilingual format such as TTX), this parameter may be ignored by the parser.
                    If this parameter is left undefined, it is up to the file sniffer and/or parser to try to determine the
                    language. Parser components may report an error or a warning if they cannot reliably identify the language.</p>
    - id: suggestedCodepage
      type: Sdl.Core.Globalization.Codepage
      description: >-
        A rough guess on what encoding the files use. This is normally set to the default code page
                    for the language, but can also be <code>null</code>. This serves only as a hint. A file sniffer can be used to determine the actual encoding for each file. An 
                    undefined codepage object can be used if no encoding can be guessed. It is then up to the file sniffer and/or parser 
                    to best determine the encoding, and report an error if they fail or a warning if the result is not definite.
    - id: messageHandler
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
      description: >-
        An (optional) message handler implementation that will receive any messages reported
                    from file sniffers invoked in the process. If a converter is returned, this message handler will also 
                    be connected to the <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Message" data-throw-if-not-resolved="false"></xref> event on the converter. You may specify <code>null</code> for this parameter.
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
      description: >-
        A file converter object initialized to read the files, based on information from the best matching file type definitions.
                    To use the file converter, add your own bilingual processors to the converter and call
                    <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse" data-throw-if-not-resolved="false"></xref> or <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext" data-throw-if-not-resolved="false"></xref> to process the native files.
    content.vb: Function GetConverterToBilingual(nativeFilePaths As String(), writer As IBilingualDocumentGenerator, outputSettingsProvider As BilingualDocumentOutputPropertiesProvider, sourceLanguage As CultureInfo, suggestedCodepage As Codepage, messageHandler As EventHandler(Of MessageEventArgs)) As IMultiFileConverter
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual*
  exceptions:
  - type: Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException
    commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException
    description: thrown if there are files for which no file type definition in the file type manager can be used.
  nameWithType.vb: IFileTypeManager.GetConverterToBilingual(String(), IBilingualDocumentGenerator, BilingualDocumentOutputPropertiesProvider, CultureInfo, Codepage, EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual(String(), Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator, Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider, System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs))
  name.vb: GetConverterToBilingual(String(), IBilingualDocumentGenerator, BilingualDocumentOutputPropertiesProvider, CultureInfo, Codepage, EventHandler(Of MessageEventArgs))
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(System.String[],System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(System.String[],System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  id: GetConverterToDefaultBilingual(System.String[],System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetConverterToDefaultBilingual(string[], string, CultureInfo, Codepage, EventHandler<MessageEventArgs>)
  nameWithType: IFileTypeManager.GetConverterToDefaultBilingual(string[], string, CultureInfo, Codepage, EventHandler<MessageEventArgs>)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(string[], string, System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Creates and initializes a file converter in order to create a bilingual file in the default format.

    <p>

    The converter will automatically use the filters that best match the native files to be converted.

    These converters are selected as described below.

    </p>

    <p>

    The file type definitions are each tested in sequence, and the first file type definition that

    matches a file is used for each file. The following steps are used to determine if 

    a file type definition matches a file:

    </p>

    <ol><li>The regular expression is evaluated against the name of the file to be converted. If it does not match,

    the file type definition is not used.</li><li>If a file sniffer is defined for the file type definition, it is applied to the file. If the file sniffer

    does not indicate that the file is supported, the file type definition is not used.</li></ol>

    If no matching file type definition is found, a <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException" data-throw-if-not-resolved="false"></xref> is thrown.
  remarks: To convert bilingual files to native you would typically use <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(System.String%2cSdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider%2cSystem.EventHandler%7bSdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs%7d)" data-throw-if-not-resolved="false"></xref>.
  example:
  - >-
    This example shows how this method could be used convert a bunch of native files into a single SDL XLIFF document.

    <pre><code class="lang-csharp">void ConvertFilesToXliff(IFileTypeManager manager, string[] nativeFiles, CultureInfo language, Codepage suggestedCodepage, string xliffFilePath)

    {
    	IMultiFileConverter converter = manager.GetConverterToDefaultBilingual(nativeFiles[], xliffFilePath, language, suggestedCodepage, null, settingsBundle);
    	converter.Parse();
    }</code></pre>
  syntax:
    content: IMultiFileConverter GetConverterToDefaultBilingual(string[] nativeFilePaths, string bilingualOutputFilePath, CultureInfo sourceLanguage, Codepage suggestedCodepage, EventHandler<MessageEventArgs> messageHandler)
    parameters:
    - id: nativeFilePaths
      type: System.String[]
      description: The native files to be converted.
    - id: bilingualOutputFilePath
      type: System.String
      description: Full path to the bilingual file to be created.
    - id: sourceLanguage
      type: System.Globalization.CultureInfo
      description: >-
        Expected source language of the files. 
                    <p>The same source (and target) language must be used for all the files processed with a single converter instance.</p>
                    <p>If the language can be determined automatically
                    from the content of the file (e.g. when reading a bilingual format such as TTX), this parameter may be ignored by the parser.
                    If this parameter is left undefined, it is up to the file sniffer and/or parser to try to determine the
                    language. Parser components may report an error or a warning if they cannot reliably identify the language.</p>
    - id: suggestedCodepage
      type: Sdl.Core.Globalization.Codepage
      description: >-
        A rough guess of what encoding the files use. This is normally set to the default codepage
                    for the language, but can also be <code>null</code>. This serves only as a hint. A file sniffer can be used to determine the actual encoding for each file. An 
                    undefined codepage object can be used if no encoding can be guessed. It is then  up to the file sniffer and/or parser 
                    to best determine the encoding and report an error if they fail, or a warning if the result is not definite.
    - id: messageHandler
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
      description: >-
        An (optional) message handler implementation that will receive any messages reported
                    from file sniffers invoked in the process. If a converter is returned, this message handler will also have
                    been connected to the <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Message" data-throw-if-not-resolved="false"></xref> event on the converter. You may specify <code>null</code> for this parameter.
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
      description: >-
        A file converter object initialized to read the files, based on information from the best matching file type definitions.
                    To use the file converter, add your own bilingual processors to the converter and call
                    <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse" data-throw-if-not-resolved="false"></xref> or <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext" data-throw-if-not-resolved="false"></xref> to process the native files.
    content.vb: Function GetConverterToDefaultBilingual(nativeFilePaths As String(), bilingualOutputFilePath As String, sourceLanguage As CultureInfo, suggestedCodepage As Codepage, messageHandler As EventHandler(Of MessageEventArgs)) As IMultiFileConverter
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual*
  exceptions:
  - type: Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException
    commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException
    description: thrown if there are files for which no file type definition in the file type manager can be used.
  nameWithType.vb: IFileTypeManager.GetConverterToDefaultBilingual(String(), String, CultureInfo, Codepage, EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(String(), String, System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs))
  name.vb: GetConverterToDefaultBilingual(String(), String, CultureInfo, Codepage, EventHandler(Of MessageEventArgs))
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(System.String,System.String,System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(System.String,System.String,System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  id: GetConverterToDefaultBilingual(System.String,System.String,System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetConverterToDefaultBilingual(string, string, string, CultureInfo, Codepage, EventHandler<MessageEventArgs>)
  nameWithType: IFileTypeManager.GetConverterToDefaultBilingual(string, string, string, CultureInfo, Codepage, EventHandler<MessageEventArgs>)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(string, string, string, System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Creates and initializes a file converter in order to create a bilingual file in the default format.

    The converter will only use the file type specified by the fileTypeDefinitionId and bypasses the sniffer
  example: []
  syntax:
    content: IMultiFileConverter GetConverterToDefaultBilingual(string fileTypeDefinitionId, string filePath, string bilingualOutputFilePath, CultureInfo sourceLanguage, Codepage suggestedCodepage, EventHandler<MessageEventArgs> messageHandler)
    parameters:
    - id: fileTypeDefinitionId
      type: System.String
      description: ''
    - id: filePath
      type: System.String
      description: ''
    - id: bilingualOutputFilePath
      type: System.String
      description: ''
    - id: sourceLanguage
      type: System.Globalization.CultureInfo
      description: ''
    - id: suggestedCodepage
      type: Sdl.Core.Globalization.Codepage
      description: ''
    - id: messageHandler
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
      description: ''
    content.vb: Function GetConverterToDefaultBilingual(fileTypeDefinitionId As String, filePath As String, bilingualOutputFilePath As String, sourceLanguage As CultureInfo, suggestedCodepage As Codepage, messageHandler As EventHandler(Of MessageEventArgs)) As IMultiFileConverter
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual*
  nameWithType.vb: IFileTypeManager.GetConverterToDefaultBilingual(String, String, String, CultureInfo, Codepage, EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(String, String, String, System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs))
  name.vb: GetConverterToDefaultBilingual(String, String, String, CultureInfo, Codepage, EventHandler(Of MessageEventArgs))
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(System.String[],Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(System.String[],Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  id: GetConverterToNative(System.String[],Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetConverterToNative(string[], OutputPropertiesProvider, CultureInfo, Codepage, EventHandler<MessageEventArgs>)
  nameWithType: IFileTypeManager.GetConverterToNative(string[], OutputPropertiesProvider, CultureInfo, Codepage, EventHandler<MessageEventArgs>)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(string[], Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider, System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Creates and initializes a file converter for reading native files, doing processing on them and

    creating native files as output in one single pass.

    <p>

    The file type definitions are tested in sequence, and the first file type definition that

    matches a file is used for each file. The following steps are used to determine if 

    a file type definition matches a file:

    </p>

    <ol><li>The regular expression is evaluated against the name of the file to be converted. If it does not match,

    the file type definition is not used.</li><li>If a file sniffer is defined for the file type definition, it is applied to the file. If the file sniffer

    does not indicate that the file is supported, the file type definition is not used.</li></ol>

    If no matching file type definition is found, a <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException" data-throw-if-not-resolved="false"></xref> is thrown.
  example: []
  syntax:
    content: IMultiFileConverter GetConverterToNative(string[] nativeFilePaths, OutputPropertiesProvider outputSettingsProvider, CultureInfo sourceLanguage, Codepage suggestedCodepage, EventHandler<MessageEventArgs> messageHandler)
    parameters:
    - id: nativeFilePaths
      type: System.String[]
      description: The native files to be converted
    - id: outputSettingsProvider
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
      description: >-
        Implementation of the output settings provider
                    that will be passed to the multi-file converter and used for writing files as native.

                    <p>The returned converter will be 
                    initialized to use this file type manager to create native file generators, and the specified
                    output settings provider will be used to determine the output properties for the native files
                    when they are created.</p>
    - id: sourceLanguage
      type: System.Globalization.CultureInfo
      description: >-
        Expected source language of the files.
                    <p>The same source (and target) language must be used for all the files processed with a single converter instance.</p>
                    <p>If the language can be determined automatically
                    from the content of the file (e.g. when reading a bilingual format such as TTX), this parameter may be ignored by the parser.
                    If this parameter is left undefined, it is up to the file sniffer and/or parser to try to determine the
                    language. Parser components may report an error or a warning if they cannot reliably identify the language.</p>
    - id: suggestedCodepage
      type: Sdl.Core.Globalization.Codepage
      description: >-
        A rough guess of what encoding the files use. This is normally set to the default codepage
                    for the language, but can also be <code>null</code>. This serves only as a hint. A file sniffer can be used to determine the actual encoding for each file. An 
                    undefined codepage object can be used if no encoding can be guessed. It is then up to the file sniffer and/or parser 
                    to best determine the encoding, and report an error if they fail or a warning if the result is not definite.
    - id: messageHandler
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
      description: >-
        An (optional) message handler implementation that will receive any messages reported
                    from file sniffers invoked in the process. If a converter is returned, this message handler will also be
                    connected to the <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Message" data-throw-if-not-resolved="false"></xref> event on the converter. You may specify <code>null</code> for this parameter.
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
      description: >-
        A file converter object initialized to read the files and write corresponding output files based on the 
                    output settings provider.
                    To use the file converter, add your own bilingual processors to the converter and call
                    <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse" data-throw-if-not-resolved="false"></xref> or <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext" data-throw-if-not-resolved="false"></xref> to process the native files.
    content.vb: Function GetConverterToNative(nativeFilePaths As String(), outputSettingsProvider As OutputPropertiesProvider, sourceLanguage As CultureInfo, suggestedCodepage As Codepage, messageHandler As EventHandler(Of MessageEventArgs)) As IMultiFileConverter
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative*
  exceptions:
  - type: Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException
    commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException
    description: thrown if there are files for which no file type definition in the file type manager can be used.
  nameWithType.vb: IFileTypeManager.GetConverterToNative(String(), OutputPropertiesProvider, CultureInfo, Codepage, EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(String(), Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider, System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs))
  name.vb: GetConverterToNative(String(), OutputPropertiesProvider, CultureInfo, Codepage, EventHandler(Of MessageEventArgs))
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(System.String[],System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(System.String[],System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  id: GetConverter(System.String[],System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetConverter(string[], CultureInfo, Codepage, EventHandler<MessageEventArgs>)
  nameWithType: IFileTypeManager.GetConverter(string[], CultureInfo, Codepage, EventHandler<MessageEventArgs>)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(string[], System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Creates and initializes a file converter for reading native files, without passing the output to anything.
  example: []
  syntax:
    content: IMultiFileConverter GetConverter(string[] nativeFilePaths, CultureInfo sourceLanguage, Codepage suggestedCodepage, EventHandler<MessageEventArgs> messageHandler)
    parameters:
    - id: nativeFilePaths
      type: System.String[]
      description: The native files to be converted
    - id: sourceLanguage
      type: System.Globalization.CultureInfo
      description: >-
        Expected source language of the files. 
                    <p>The same source (and target) language must be used for all the files processed with a single converter instance.</p>
                    <p>If the language can be determined automatically
                    from the content of the file (e.g. when reading a bilingual format such as TTX), this parameter may be ignored by the parser.
                    If this parameter is left undefined, it is up to the file sniffer and/or parser to try to determine the
                    language. Parser components may report an error or a warning if they cannot reliably identify the language.</p>
    - id: suggestedCodepage
      type: Sdl.Core.Globalization.Codepage
      description: >-
        A rough guess of what encoding the files use. This is normally set to the default codepage
                    for the language, but can also be <code>null</code>. This serves only as a hint. A file sniffer can be used to determine the actual encoding for each file. An 
                    undefined codepage object can be used if no encoding can be guessed. It is then up to the file sniffer and/or parser 
                    to best determine the encoding and report an error if they fail or a warning if the result is not definite.
    - id: messageHandler
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
      description: >-
        An (optional) message handler implementation that will receive any messages reported
                    from file sniffers invoked in the process. If a converter is returned, this message handler will also be
                    connected to the <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Message" data-throw-if-not-resolved="false"></xref> event on the converter. You may specify <code>null</code> for this parameter.
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
      description: A file converter object initialized to read the files, based on information from the best matching file type definitions.
    content.vb: Function GetConverter(nativeFilePaths As String(), sourceLanguage As CultureInfo, suggestedCodepage As Codepage, messageHandler As EventHandler(Of MessageEventArgs)) As IMultiFileConverter
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter*
  exceptions:
  - type: Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException
    commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException
    description: Thrown if there are files for which no file type definition in the file type manager can be used.
  nameWithType.vb: IFileTypeManager.GetConverter(String(), CultureInfo, Codepage, EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(String(), System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs))
  name.vb: GetConverter(String(), CultureInfo, Codepage, EventHandler(Of MessageEventArgs))
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(System.String,System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(System.String,System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  id: GetConverter(System.String,System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetConverter(string, string, CultureInfo, Codepage, EventHandler<MessageEventArgs>)
  nameWithType: IFileTypeManager.GetConverter(string, string, CultureInfo, Codepage, EventHandler<MessageEventArgs>)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(string, string, System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Creates and initializes a file converter in order to create a bilingual file.

    The native fileType used for parsing is defined by the fileTypeDefinitionId - no sniffing is done
  example: []
  syntax:
    content: IMultiFileConverter GetConverter(string fileTypeDefinitionId, string filePath, CultureInfo sourceLanguage, Codepage suggestedCodepage, EventHandler<MessageEventArgs> messageHandler)
    parameters:
    - id: fileTypeDefinitionId
      type: System.String
      description: ''
    - id: filePath
      type: System.String
      description: ''
    - id: sourceLanguage
      type: System.Globalization.CultureInfo
      description: ''
    - id: suggestedCodepage
      type: Sdl.Core.Globalization.Codepage
      description: ''
    - id: messageHandler
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
      description: ''
    content.vb: Function GetConverter(fileTypeDefinitionId As String, filePath As String, sourceLanguage As CultureInfo, suggestedCodepage As Codepage, messageHandler As EventHandler(Of MessageEventArgs)) As IMultiFileConverter
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter*
  nameWithType.vb: IFileTypeManager.GetConverter(String, String, CultureInfo, Codepage, EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(String, String, System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs))
  name.vb: GetConverter(String, String, CultureInfo, Codepage, EventHandler(Of MessageEventArgs))
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual(System.String,Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator,Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual(System.String,Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator,Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  id: GetConverterToBilingual(System.String,Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator,Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetConverterToBilingual(string, IBilingualDocumentGenerator, BilingualDocumentOutputPropertiesProvider, EventHandler<MessageEventArgs>)
  nameWithType: IFileTypeManager.GetConverterToBilingual(string, IBilingualDocumentGenerator, BilingualDocumentOutputPropertiesProvider, EventHandler<MessageEventArgs>)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual(string, Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator, Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider, System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Creates and initializes a file converter for a single file, typically of the default bilingual file type.

    The specified bilingual document generator will be used for output.


    The file type definitions are tested in order, and the first file type definition that

    matches the input file is used. The following steps are used to determine if 

    a file type definition matches the file:

    <ol><li>The regular expression is evaluated against the name of the file to be converted. If it does not match,

    the file type definition is not used.</li><li>If a file sniffer is defined for the file type definition, it gets applied to the file. If the file sniffer

    does not indicate that the file is supported, the file type definition is not used.</li></ol>

    If no matching file type definition is found, a <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException" data-throw-if-not-resolved="false"></xref> is thrown.
  example: []
  syntax:
    content: IMultiFileConverter GetConverterToBilingual(string bilingualInputFilePath, IBilingualDocumentGenerator writer, BilingualDocumentOutputPropertiesProvider outputSettingsProvider, EventHandler<MessageEventArgs> messageHandler)
    parameters:
    - id: bilingualInputFilePath
      type: System.String
      description: >-
        The file to be converted. The language and code page of this file is expected
                    to be automatically detected by the file sniffer, no external hints should be necessary.
    - id: writer
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
      description: Bilingual writer to use as output with the converter
    - id: outputSettingsProvider
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider
      description: >-
        Implementation of the output settings provider for bilingual
                    document files. Will be passed to the multi-file converter and used for writing bilingual document files.
                    If the bilingual document generator does not have a bilingual document file writer, you can pass <code>null</code>
                    for this parameter.
    - id: messageHandler
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
      description: >-
        An (optional) message handler implementation that will receive any messages reported
                    from file sniffers invoked in the process. If a converter is returned, this message handler will also be
                    connected to the <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Message" data-throw-if-not-resolved="false"></xref> event on the converter. You may specify <code>null</code> for this parameter.
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
      description: >-
        A file converter object initialized to read the file, based on information from the best matching file type definition.
                    To use the file converter, add your own bilingual processors to the converter, and call
                    <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse" data-throw-if-not-resolved="false"></xref> or <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext" data-throw-if-not-resolved="false"></xref> to process the file.
    content.vb: Function GetConverterToBilingual(bilingualInputFilePath As String, writer As IBilingualDocumentGenerator, outputSettingsProvider As BilingualDocumentOutputPropertiesProvider, messageHandler As EventHandler(Of MessageEventArgs)) As IMultiFileConverter
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual*
  exceptions:
  - type: Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException
    commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException
    description: Thrown if no file type definition in the file type manager can be used.
  nameWithType.vb: IFileTypeManager.GetConverterToBilingual(String, IBilingualDocumentGenerator, BilingualDocumentOutputPropertiesProvider, EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual(String, Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator, Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider, System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs))
  name.vb: GetConverterToBilingual(String, IBilingualDocumentGenerator, BilingualDocumentOutputPropertiesProvider, EventHandler(Of MessageEventArgs))
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(System.String,System.String,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(System.String,System.String,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  id: GetConverterToDefaultBilingual(System.String,System.String,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetConverterToDefaultBilingual(string, string, EventHandler<MessageEventArgs>)
  nameWithType: IFileTypeManager.GetConverterToDefaultBilingual(string, string, EventHandler<MessageEventArgs>)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(string, string, System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Creates and initializes a file converter in order to read a single (typically bilingual) input file and

    write a bilingual output file in the default format.

    <p>

    The converter will automatically use the file type that best matches the file to be converted.

    </p>

    <p>

    The file type definitions are each tested in sequence, and the first file type definition that

    matches the input file is used. The following steps are used to determine if 

    a file type definition matches:

    </p>

    <ol><li>The regular expression is evaluated against the name of the file to be converted. If it does not match,

    the file type definition is not used.</li><li>If a file sniffer is defined for the file type definition, it is applied to the file. If the file sniffer

    does not indicate that the file is supported, the file type definition is not used.</li></ol>

    If no matching file type definition is found, a <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException" data-throw-if-not-resolved="false"></xref> is thrown.
  remarks: To convert bilingual files to native you would typically use <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(System.String%2cSdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider%2cSystem.EventHandler%7bSdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs%7d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: IMultiFileConverter GetConverterToDefaultBilingual(string bilingualInputFilePath, string bilingualOutputFilePath, EventHandler<MessageEventArgs> messageHandler)
    parameters:
    - id: bilingualInputFilePath
      type: System.String
      description: The native files to be converted
    - id: bilingualOutputFilePath
      type: System.String
      description: Full path to the bilingual file to be created
    - id: messageHandler
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
      description: >-
        (optional) A message handler implementation that will receive any messages reported
                    from file sniffers invoked in the process. If a converter is returned, this message handler will also be
                    connected to the <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Message" data-throw-if-not-resolved="false"></xref> event on the converter. You may specify <code>null</code> for this parameter.
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
      description: >-
        A file converter object initialized to read the file, based on information from the best matching file type definition
                    that will create an output file in the default bilingual format with the specified name.
                    To use the file converter, add your own bilingual processors to the converter and call
                    <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse" data-throw-if-not-resolved="false"></xref> or <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function GetConverterToDefaultBilingual(bilingualInputFilePath As String, bilingualOutputFilePath As String, messageHandler As EventHandler(Of MessageEventArgs)) As IMultiFileConverter
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual*
  exceptions:
  - type: Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException
    commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException
    description: Thrown if no file type definition in the file type manager can be used.
  nameWithType.vb: IFileTypeManager.GetConverterToDefaultBilingual(String, String, EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(String, String, System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs))
  name.vb: GetConverterToDefaultBilingual(String, String, EventHandler(Of MessageEventArgs))
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(System.String,Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(System.String,Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  id: GetConverterToNative(System.String,Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetConverterToNative(string, OutputPropertiesProvider, EventHandler<MessageEventArgs>)
  nameWithType: IFileTypeManager.GetConverterToNative(string, OutputPropertiesProvider, EventHandler<MessageEventArgs>)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(string, Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider, System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Creates a converter for parsing a single file and writing native output files.

    <p>This is intended for bilingual file types, in which the languages and codepage can be deducted

    automatically from the file content.</p>


    <p>This version is typically used for parsing SDL XLIFF documents (where support for these

    have been installed as another bilingual file type). However, it could also be used

    for processing individual native files in which source language (and codepage) can be deducted from 

    the file content.</p>
  remarks: >-
    If language (and/or codepage) cannot be successfully determined by the file type components, an exception

    should be thrown.
  example:
  - >-
    The following code example shows how to convert an SDL XLIFF file into native target language files.

    <pre><code class="lang-csharp">void SaveAsTarget(IFileTypeManager manager, string xliffFilePath, string outputFolder)

    {
       FolderPathProvider pathProvider = new FolderPathProvider(outputFolder);
       IMultiFileConverter converter = manager.GetConverterToNative(xliffFilePath, pathProvider.Provider, settingsBundle);
       converter.AddBilingualProcessor(new SourceToTargetCopier(ExistingContentHandling.Preserve));
       converter.Parse();
    }</code></pre>

    Note that a SourceToTargetCopier object is used to ensure that ParagraphUnits without target content are output as source

    (they would otherwise be emitted as nothing, which could lead to unexpected results).
  syntax:
    content: IMultiFileConverter GetConverterToNative(string bilingualInputFilePath, OutputPropertiesProvider outputSettingsProvider, EventHandler<MessageEventArgs> messageHandler)
    parameters:
    - id: bilingualInputFilePath
      type: System.String
      description: Full path to a bilingual (typically SDL XLIFF) file
    - id: outputSettingsProvider
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
      description: >-
        (Optional) implementation of the output settings provider
                    that will be passed to the multi-file converter and used for writing files as native.

                    <p>If this parameter is provided (i.e. not null), the returned converter will be 
                    initialized to use this file type manager to create native file generators, and the specified
                    output settings provider will be used to determine output properties for the native files
                    when they are created.</p>
    - id: messageHandler
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
      description: >-
        An (optional) message handler implementation that will receive any messages reported
                    from file sniffers invoked in the process. If a converter is returned, this message handler will also 
                    be connected to the <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Message" data-throw-if-not-resolved="false"></xref> event on the converter. You may specify <code>null</code> for this parameter.
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
      description: A file converter that may be used to convert bilingual files to native output files
    content.vb: Function GetConverterToNative(bilingualInputFilePath As String, outputSettingsProvider As OutputPropertiesProvider, messageHandler As EventHandler(Of MessageEventArgs)) As IMultiFileConverter
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative*
  nameWithType.vb: IFileTypeManager.GetConverterToNative(String, OutputPropertiesProvider, EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(String, Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider, System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs))
  name.vb: GetConverterToNative(String, OutputPropertiesProvider, EventHandler(Of MessageEventArgs))
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(System.String,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(System.String,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  id: GetConverter(System.String,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetConverter(string, EventHandler<MessageEventArgs>)
  nameWithType: IFileTypeManager.GetConverter(string, EventHandler<MessageEventArgs>)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(string, System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Creates and initializes a file converter that can be used to read a single bilingual file, without

    outputting content to anything in particular.
  example: []
  syntax:
    content: IMultiFileConverter GetConverter(string bilingualInputFilePath, EventHandler<MessageEventArgs> messageHandler)
    parameters:
    - id: bilingualInputFilePath
      type: System.String
      description: Name of the bilingual file to read
    - id: messageHandler
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
      description: >-
        An (optional) message handler implementation that will receive any messages reported
                    from file sniffers invoked in the process. If a converter is returned, this message handler will also have
                    been connected to the <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Message" data-throw-if-not-resolved="false"></xref> event on the converter. You may specify <code>null</code> for this parameter.
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
      description: ''
    content.vb: Function GetConverter(bilingualInputFilePath As String, messageHandler As EventHandler(Of MessageEventArgs)) As IMultiFileConverter
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter*
  nameWithType.vb: IFileTypeManager.GetConverter(String, EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(String, System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs))
  name.vb: GetConverter(String, EventHandler(Of MessageEventArgs))
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator,Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator,Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider)
  id: GetConverterToBilingual(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator,Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetConverterToBilingual(IBilingualParser, IBilingualDocumentGenerator, BilingualDocumentOutputPropertiesProvider)
  nameWithType: IFileTypeManager.GetConverterToBilingual(IBilingualParser, IBilingualDocumentGenerator, BilingualDocumentOutputPropertiesProvider)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser, Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator, Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Creates and initializes a file converter for an existing bilingual parser and writer.
  example: []
  syntax:
    content: IMultiFileConverter GetConverterToBilingual(IBilingualParser bilingualParser, IBilingualDocumentGenerator writer, BilingualDocumentOutputPropertiesProvider outputSettingsProvider)
    parameters:
    - id: bilingualParser
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser
      description: Bilingual parser to be used for input with the converter
    - id: writer
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
      description: Bilingual writer to use as output with the converter
    - id: outputSettingsProvider
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider
      description: >-
        Implementation of the output settings provider for bilingual
                    document files. Will be passed to the multi-file converter and used for writing bilingual document files.
                    If the bilingual document generator does not have a bilingual document file writer, you can pass <code>null</code>
                    for this parameter.
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
      description: >-
        A file converter object initialized to read content using the specified parser and output
                    to the specified writer.
                    To use the file converter, add your own bilingual processors to the converter, and call
                    <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse" data-throw-if-not-resolved="false"></xref> or <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext" data-throw-if-not-resolved="false"></xref> to process the content.
    content.vb: Function GetConverterToBilingual(bilingualParser As IBilingualParser, writer As IBilingualDocumentGenerator, outputSettingsProvider As BilingualDocumentOutputPropertiesProvider) As IMultiFileConverter
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,System.String)
  id: GetConverterToDefaultBilingual(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetConverterToDefaultBilingual(IBilingualParser, string)
  nameWithType: IFileTypeManager.GetConverterToDefaultBilingual(IBilingualParser, string)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser, string)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Creates and initializes a file converter to write a bilingual output file in the default format, reading

    input from a specified bilingual parser.
  example: []
  syntax:
    content: IMultiFileConverter GetConverterToDefaultBilingual(IBilingualParser bilingualParser, string bilingualOutputFilePath)
    parameters:
    - id: bilingualParser
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser
      description: The parser to be used for input
    - id: bilingualOutputFilePath
      type: System.String
      description: Full path to the bilingual file to be created
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
      description: >-
        A file converter object initialized to read content using the bilingual parser and write
                    an output file in the default bilingual format with the specified name.
                    To use the file converter, add your own bilingual processors to the converter and call
                    <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse" data-throw-if-not-resolved="false"></xref> or <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function GetConverterToDefaultBilingual(bilingualParser As IBilingualParser, bilingualOutputFilePath As String) As IMultiFileConverter
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual*
  nameWithType.vb: IFileTypeManager.GetConverterToDefaultBilingual(IBilingualParser, String)
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser, String)
  name.vb: GetConverterToDefaultBilingual(IBilingualParser, String)
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider)
  id: GetConverterToNative(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetConverterToNative(IBilingualParser, OutputPropertiesProvider)
  nameWithType: IFileTypeManager.GetConverterToNative(IBilingualParser, OutputPropertiesProvider)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser, Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Creates a converter for writing native output files for content read by a specified bilingual parser.
  example: []
  syntax:
    content: IMultiFileConverter GetConverterToNative(IBilingualParser bilingualParser, OutputPropertiesProvider outputSettingsProvider)
    parameters:
    - id: bilingualParser
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser
      description: The parser that will be used for input
    - id: outputSettingsProvider
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
      description: >-
        (Optional) implementation of the output settings provider
                    that will be passed to the multi-file converter and used for writing files as native

                    <p>If this parameter is provided (i.e. not <code>null</code>), the returned converter will be 
                    initialized to use this file type manager to create native file generators, and the specified
                    output settings provider will be used to determine output properties for the native files
                    when they are created.</p>
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
      description: A file converter that may be used to convert bilingual content to native output files
    content.vb: Function GetConverterToNative(bilingualParser As IBilingualParser, outputSettingsProvider As OutputPropertiesProvider) As IMultiFileConverter
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser)
  id: GetConverter(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: GetConverter(IBilingualParser)
  nameWithType: IFileTypeManager.GetConverter(IBilingualParser)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Creates and initializes a file converter to use a specific bilingual parser, and not output to anything in particular.
  example: []
  syntax:
    content: IMultiFileConverter GetConverter(IBilingualParser bilingualParser)
    parameters:
    - id: bilingualParser
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
      description: ''
    content.vb: Function GetConverter(bilingualParser As IBilingualParser) As IMultiFileConverter
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractor(System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractor(System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter)
  id: BuildExtractor(System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildExtractor(string, CultureInfo, Codepage, INativeTextLocationMessageReporter)
  nameWithType: IFileTypeManager.BuildExtractor(string, CultureInfo, Codepage, INativeTextLocationMessageReporter)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractor(string, System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Helper function used by the file type manager implementation and other components that need to 

    create components that are normally used through the file converters objects.

    <p>Determines the best matching file type for the specified file according to the rules

    described in the documentation of <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(System.String%5b%5d%2cSystem.Globalization.CultureInfo%2cSdl.Core.Globalization.Codepage%2cSystem.EventHandler%7bSdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs%7d)" data-throw-if-not-resolved="false"></xref> and returns an initialized 

    file extractor that can be used to process the file.</p>
  example: []
  syntax:
    content: IFileExtractor BuildExtractor(string filePath, CultureInfo cultureInfo, Codepage suggestedCodepage, INativeTextLocationMessageReporter messageReporter)
    parameters:
    - id: filePath
      type: System.String
      description: ''
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: Source CultureInfo of the file
    - id: suggestedCodepage
      type: Sdl.Core.Globalization.Codepage
      description: Suggested codepage of the file
    - id: messageReporter
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter
      description: (Optional) message reporter implementation that will be passed to file sniffers
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
      description: ''
    content.vb: Function BuildExtractor(filePath As String, cultureInfo As CultureInfo, suggestedCodepage As Codepage, messageReporter As INativeTextLocationMessageReporter) As IFileExtractor
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractor*
  exceptions:
  - type: Sdl.FileTypeSupport.Framework.IntegrationApi.FileNotSupportedException
    commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.FileNotSupportedException
    description: Thrown if none of the file type definitions can be used to process the file
  nameWithType.vb: IFileTypeManager.BuildExtractor(String, CultureInfo, Codepage, INativeTextLocationMessageReporter)
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractor(String, System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter)
  name.vb: BuildExtractor(String, CultureInfo, Codepage, INativeTextLocationMessageReporter)
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractorNoSniffing(System.String,System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractorNoSniffing(System.String,System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter)
  id: BuildExtractorNoSniffing(System.String,System.String,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildExtractorNoSniffing(string, string, CultureInfo, Codepage, INativeTextLocationMessageReporter)
  nameWithType: IFileTypeManager.BuildExtractorNoSniffing(string, string, CultureInfo, Codepage, INativeTextLocationMessageReporter)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractorNoSniffing(string, string, System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Builds a FileExtractor without sniffing - the FileType to use is defined by the fileTypeDefinitionId
  example: []
  syntax:
    content: IFileExtractor BuildExtractorNoSniffing(string fileTypeDefinitionId, string filePath, CultureInfo suggestedSourceLanguage, Codepage suggestedCodepage, INativeTextLocationMessageReporter messageReporter)
    parameters:
    - id: fileTypeDefinitionId
      type: System.String
      description: ''
    - id: filePath
      type: System.String
      description: ''
    - id: suggestedSourceLanguage
      type: System.Globalization.CultureInfo
      description: ''
    - id: suggestedCodepage
      type: Sdl.Core.Globalization.Codepage
      description: ''
    - id: messageReporter
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
      description: ''
    content.vb: Function BuildExtractorNoSniffing(fileTypeDefinitionId As String, filePath As String, suggestedSourceLanguage As CultureInfo, suggestedCodepage As Codepage, messageReporter As INativeTextLocationMessageReporter) As IFileExtractor
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractorNoSniffing*
  nameWithType.vb: IFileTypeManager.BuildExtractorNoSniffing(String, String, CultureInfo, Codepage, INativeTextLocationMessageReporter)
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractorNoSniffing(String, String, System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter)
  name.vb: BuildExtractorNoSniffing(String, String, CultureInfo, Codepage, INativeTextLocationMessageReporter)
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  id: BuildNativeGenerator(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildNativeGenerator(IPersistentFileConversionProperties)
  nameWithType: IFileTypeManager.BuildNativeGenerator(IPersistentFileConversionProperties)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Helper function used by the file type manager implementation and other components that need to

    create a file generator component from a specific file type definition.

    <p>

    Creates and initializes a file generator that can be used to write native output files.

    </p>
  remarks: >-
    This method may be used as a <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.NativeGeneratorProvider" data-throw-if-not-resolved="false"></xref> delegate in the <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter" data-throw-if-not-resolved="false"></xref>.

    <example>

    The following example shows how to use this method with a multi file converter:

    <pre><code class="lang-csharp">void SetNativeGeneratorProvider(IFileTypeManager manager, IMultiFileConverter converter)

    {
       converter.NativeGeneratorProvider = new NativeGeneratorProvider(manager.BuildFileGenerator);
    }</code></pre>

    </example>
  example: []
  syntax:
    content: IFileGenerator BuildNativeGenerator(IPersistentFileConversionProperties fileConversionProperties)
    parameters:
    - id: fileConversionProperties
      type: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
      description: >-
        Properties with information on the file being generated,
                    including the id of the file type definition used to convert the original native file. 
                    This can either be the persistent file properties that were created when reading
                    the original native file, or they can be retrieved from the bilingual parser.
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileGenerator
      description: A file generator object that can be used to create a single native file.
    content.vb: Function BuildNativeGenerator(fileConversionProperties As IPersistentFileConversionProperties) As IFileGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator*
  exceptions:
  - type: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeDefinitionNotFoundException
    commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeDefinitionNotFoundException
    description: >-
      thrown if the specified file type definition ID is not 
                  one of the file type definitions in the file type manager
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGeneratorWithVerifiers(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGeneratorWithVerifiers(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  id: BuildNativeGeneratorWithVerifiers(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildNativeGeneratorWithVerifiers(IPersistentFileConversionProperties)
  nameWithType: IFileTypeManager.BuildNativeGeneratorWithVerifiers(IPersistentFileConversionProperties)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGeneratorWithVerifiers(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    This is an alternative implementation of the <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)" data-throw-if-not-resolved="false"></xref> method, which creates a generator with

    objects that will perform native verification of the generated file.
  example: []
  syntax:
    content: IFileGenerator BuildNativeGeneratorWithVerifiers(IPersistentFileConversionProperties fileConversionProperties)
    parameters:
    - id: fileConversionProperties
      type: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileGenerator
      description: ''
    content.vb: Function BuildNativeGeneratorWithVerifiers(fileConversionProperties As IPersistentFileConversionProperties) As IFileGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGeneratorWithVerifiers*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildBilingualGenerator(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildBilingualGenerator(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  id: BuildBilingualGenerator(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildBilingualGenerator(IFileTypeDefinition)
  nameWithType: IFileTypeManager.BuildBilingualGenerator(IFileTypeDefinition)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildBilingualGenerator(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Helper function used by the file type manager implementation and other components that need to

    instantiate a bilingual generator for a specific file type.
  remarks: ''
  example: []
  syntax:
    content: IBilingualDocumentGenerator BuildBilingualGenerator(IFileTypeDefinition filterDefinitionToUse)
    parameters:
    - id: filterDefinitionToUse
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
      description: ''
    content.vb: Function BuildBilingualGenerator(filterDefinitionToUse As IFileTypeDefinition) As IBilingualDocumentGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildBilingualGenerator*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildDefaultBilingualGenerator
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildDefaultBilingualGenerator
  id: BuildDefaultBilingualGenerator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildDefaultBilingualGenerator()
  nameWithType: IFileTypeManager.BuildDefaultBilingualGenerator()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildDefaultBilingualGenerator()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Helper function that constructs an instance of a generator for the default bilingual file format,

    if set.
  remarks: ''
  example: []
  syntax:
    content: IBilingualDocumentGenerator BuildDefaultBilingualGenerator()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
      description: <code>null</code> if no default bilingual file type has been set
    content.vb: Function BuildDefaultBilingualGenerator() As IBilingualDocumentGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildDefaultBilingualGenerator*
  seealso:
  - linkId: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.DefaultBilingualFileTypeDefinition
    commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.DefaultBilingualFileTypeDefinition
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildBilingualGenerator(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentWriter)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildBilingualGenerator(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentWriter)
  id: BuildBilingualGenerator(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentWriter)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildBilingualGenerator(IBilingualDocumentWriter)
  nameWithType: IFileTypeManager.BuildBilingualGenerator(IBilingualDocumentWriter)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildBilingualGenerator(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentWriter)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Helper function to create a bilingual generator for a bilingual document writer, so that

    it can be used with relevant overloads to <code>GetConverter</code>.
  example: []
  syntax:
    content: IBilingualDocumentGenerator BuildBilingualGenerator(IBilingualDocumentWriter bilingualWriter)
    parameters:
    - id: bilingualWriter
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentWriter
      description: >-
        a bilingual document writer, capable of serializing the
                    bilingual content model
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
      description: >-
        a bilingual document generator instance where the bilingual writer is assigned
                    to the <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Writer" data-throw-if-not-resolved="false"></xref> property.
    content.vb: Function BuildBilingualGenerator(bilingualWriter As IBilingualDocumentWriter) As IBilingualDocumentGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildBilingualGenerator*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileExtractor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileExtractor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  id: BuildFileExtractor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildFileExtractor(IBilingualParser, IFileTypeComponentBuilder)
  nameWithType: IFileTypeManager.BuildFileExtractor(IBilingualParser, IFileTypeComponentBuilder)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileExtractor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser, Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create a file extractor so that it can be used by filter component builders.
  example: []
  syntax:
    content: IFileExtractor BuildFileExtractor(IBilingualParser fileReader, IFileTypeComponentBuilder componentBuilder)
    parameters:
    - id: fileReader
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser
      description: ''
    - id: componentBuilder
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
      description: ''
    content.vb: Function BuildFileExtractor(fileReader As IBilingualParser, componentBuilder As IFileTypeComponentBuilder) As IFileExtractor
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileExtractor*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentExtractor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentExtractor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  id: BuildSubContentExtractor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildSubContentExtractor(IBilingualParser, IFileTypeComponentBuilder)
  nameWithType: IFileTypeManager.BuildSubContentExtractor(IBilingualParser, IFileTypeComponentBuilder)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentExtractor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser, Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create a sub-content extractor so that it can be used by filter component builders.
  example: []
  syntax:
    content: ISubContentExtractor BuildSubContentExtractor(IBilingualParser fileReader, IFileTypeComponentBuilder componentBuilder)
    parameters:
    - id: fileReader
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser
      description: ''
    - id: componentBuilder
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
      description: ''
    content.vb: Function BuildSubContentExtractor(fileReader As IBilingualParser, componentBuilder As IFileTypeComponentBuilder) As ISubContentExtractor
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentExtractor*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentExtractor,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentExtractor,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  id: BuildSubContentExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentExtractor,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildSubContentExtractor(INativeSubContentExtractor, IFileTypeComponentBuilder)
  nameWithType: IFileTypeManager.BuildSubContentExtractor(INativeSubContentExtractor, IFileTypeComponentBuilder)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentExtractor, Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create a sub-content file extractor so that it can be used by filter component builders.
  example: []
  syntax:
    content: ISubContentExtractor BuildSubContentExtractor(INativeSubContentExtractor subContentReader, IFileTypeComponentBuilder componentBuilder)
    parameters:
    - id: subContentReader
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentExtractor
      description: ''
    - id: componentBuilder
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
      description: ''
    content.vb: Function BuildSubContentExtractor(subContentReader As INativeSubContentExtractor, componentBuilder As IFileTypeComponentBuilder) As ISubContentExtractor
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentExtractor*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractor,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractor,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  id: BuildFileExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractor,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildFileExtractor(INativeExtractor, IFileTypeComponentBuilder)
  nameWithType: IFileTypeManager.BuildFileExtractor(INativeExtractor, IFileTypeComponentBuilder)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractor, Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create a file extractor so that it can be used by filter component builders.
  example: []
  syntax:
    content: IFileExtractor BuildFileExtractor(INativeExtractor fileReader, IFileTypeComponentBuilder componentBuilder)
    parameters:
    - id: fileReader
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractor
      description: ''
    - id: componentBuilder
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
      description: ''
    content.vb: Function BuildFileExtractor(fileReader As INativeExtractor, componentBuilder As IFileTypeComponentBuilder) As IFileExtractor
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileExtractor*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser)
  id: BuildNativeExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildNativeExtractor(INativeFileParser)
  nameWithType: IFileTypeManager.BuildNativeExtractor(INativeFileParser)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create a native extractor so that it can be used by filter component builders.
  example: []
  syntax:
    content: INativeExtractor BuildNativeExtractor(INativeFileParser nativeFileParser)
    parameters:
    - id: nativeFileParser
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractor
      description: ''
    content.vb: Function BuildNativeExtractor(nativeFileParser As INativeFileParser) As INativeExtractor
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeExtractor*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeSubContentExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeSubContentExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser)
  id: BuildNativeSubContentExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildNativeSubContentExtractor(INativeFileParser)
  nameWithType: IFileTypeManager.BuildNativeSubContentExtractor(INativeFileParser)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeSubContentExtractor(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create a native sub-content extractor so that it can be used by filter component builders.
  example: []
  syntax:
    content: INativeSubContentExtractor BuildNativeSubContentExtractor(INativeFileParser nativeFileParser)
    parameters:
    - id: nativeFileParser
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentExtractor
      description: ''
    content.vb: Function BuildNativeSubContentExtractor(nativeFileParser As INativeFileParser) As INativeSubContentExtractor
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeSubContentExtractor*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileTypeInformation
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileTypeInformation
  id: BuildFileTypeInformation
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildFileTypeInformation()
  nameWithType: IFileTypeManager.BuildFileTypeInformation()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileTypeInformation()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create file type information so that it can be used by filter component builders.
  example: []
  syntax:
    content: IFileTypeInformation BuildFileTypeInformation()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation
      description: ''
    content.vb: Function BuildFileTypeInformation() As IFileTypeInformation
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileTypeInformation*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileGenerator(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualWriter)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileGenerator(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualWriter)
  id: BuildFileGenerator(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualWriter)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildFileGenerator(IBilingualWriter)
  nameWithType: IFileTypeManager.BuildFileGenerator(IBilingualWriter)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileGenerator(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualWriter)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create a file generator so that it can be used by filter component builders.
  example: []
  syntax:
    content: IFileGenerator BuildFileGenerator(IBilingualWriter bilingualWriter)
    parameters:
    - id: bilingualWriter
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualWriter
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileGenerator
      description: ''
    content.vb: Function BuildFileGenerator(bilingualWriter As IBilingualWriter) As IFileGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileGenerator*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileWriter)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileWriter)
  id: BuildNativeGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileWriter)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildNativeGenerator(INativeFileWriter)
  nameWithType: IFileTypeManager.BuildNativeGenerator(INativeFileWriter)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileWriter)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create a native generator so that it can be used by filter component builders.
  example: []
  syntax:
    content: INativeGenerator BuildNativeGenerator(INativeFileWriter nativeFileWriter)
    parameters:
    - id: nativeFileWriter
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileWriter
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerator
      description: ''
    content.vb: Function BuildNativeGenerator(nativeFileWriter As INativeFileWriter) As INativeGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerator)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerator)
  id: BuildFileGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerator)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildFileGenerator(INativeGenerator)
  nameWithType: IFileTypeManager.BuildFileGenerator(INativeGenerator)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerator)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create a file generator so that it can be used by filter component builders.
  example: []
  syntax:
    content: IFileGenerator BuildFileGenerator(INativeGenerator nativeGenerator)
    parameters:
    - id: nativeGenerator
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerator
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileGenerator
      description: ''
    content.vb: Function BuildFileGenerator(nativeGenerator As INativeGenerator) As IFileGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileGenerator*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentGenerator(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualWriter)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentGenerator(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualWriter)
  id: BuildSubContentGenerator(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualWriter)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildSubContentGenerator(IBilingualWriter)
  nameWithType: IFileTypeManager.BuildSubContentGenerator(IBilingualWriter)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentGenerator(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualWriter)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create a sub content generator so that it can be used by filter component builders.
  example: []
  syntax:
    content: ISubContentGenerator BuildSubContentGenerator(IBilingualWriter bilingualWriter)
    parameters:
    - id: bilingualWriter
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualWriter
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentGenerator
      description: ''
    content.vb: Function BuildSubContentGenerator(bilingualWriter As IBilingualWriter) As ISubContentGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentGenerator*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeSubContentGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileWriter)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeSubContentGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileWriter)
  id: BuildNativeSubContentGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileWriter)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildNativeSubContentGenerator(INativeFileWriter)
  nameWithType: IFileTypeManager.BuildNativeSubContentGenerator(INativeFileWriter)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeSubContentGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeFileWriter)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create a native sub content generator so that it can be used by filter component builders.
  example: []
  syntax:
    content: INativeSubContentGenerator BuildNativeSubContentGenerator(INativeFileWriter nativeFileWriter)
    parameters:
    - id: nativeFileWriter
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileWriter
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentGenerator
      description: ''
    content.vb: Function BuildNativeSubContentGenerator(nativeFileWriter As INativeFileWriter) As INativeSubContentGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeSubContentGenerator*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentGenerator)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentGenerator)
  id: BuildSubContentGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentGenerator)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildSubContentGenerator(INativeSubContentGenerator)
  nameWithType: IFileTypeManager.BuildSubContentGenerator(INativeSubContentGenerator)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentGenerator(Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentGenerator)
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create a sub content generator so that it can be used by filter component builders.
  example: []
  syntax:
    content: ISubContentGenerator BuildSubContentGenerator(INativeSubContentGenerator nativeSubContentGenerator)
    parameters:
    - id: nativeSubContentGenerator
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentGenerator
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentGenerator
      description: ''
    content.vb: Function BuildSubContentGenerator(nativeSubContentGenerator As INativeSubContentGenerator) As ISubContentGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentGenerator*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildPreviewSetsFactory
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildPreviewSetsFactory
  id: BuildPreviewSetsFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildPreviewSetsFactory()
  nameWithType: IFileTypeManager.BuildPreviewSetsFactory()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildPreviewSetsFactory()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create a preview sets factory so that it can be used by filter compnent builders.
  example: []
  syntax:
    content: IPreviewSetsFactory BuildPreviewSetsFactory()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
      description: ''
    content.vb: Function BuildPreviewSetsFactory() As IPreviewSetsFactory
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildPreviewSetsFactory*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildQuickTagsFactory
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildQuickTagsFactory
  id: BuildQuickTagsFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildQuickTagsFactory()
  nameWithType: IFileTypeManager.BuildQuickTagsFactory()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildQuickTagsFactory()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create a QuickTags factory so that it can be used by filter component builders.
  example: []
  syntax:
    content: IQuickTagsFactory BuildQuickTagsFactory()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory
      description: ''
    content.vb: Function BuildQuickTagsFactory() As IQuickTagsFactory
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildQuickTagsFactory*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildVerifierCollection
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildVerifierCollection
  id: BuildVerifierCollection
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildVerifierCollection()
  nameWithType: IFileTypeManager.BuildVerifierCollection()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildVerifierCollection()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create a verifier collection so that it can be used by filter component builders.
  example: []
  syntax:
    content: IVerifierCollection BuildVerifierCollection()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IVerifierCollection
      description: ''
    content.vb: Function BuildVerifierCollection() As IVerifierCollection
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildVerifierCollection*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildGeneratorInfo
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildGeneratorInfo
  id: BuildGeneratorInfo
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildGeneratorInfo()
  nameWithType: IFileTypeManager.BuildGeneratorInfo()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildGeneratorInfo()
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create generator information so that it can be used by filter component builders.
  example: []
  syntax:
    content: IGeneratorInfo BuildGeneratorInfo()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo
      description: ''
    content.vb: Function BuildGeneratorInfo() As IGeneratorInfo
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildGeneratorInfo*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildAdditionalGeneratorsInfo(Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo[])
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildAdditionalGeneratorsInfo(Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo[])
  id: BuildAdditionalGeneratorsInfo(Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo[])
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: BuildAdditionalGeneratorsInfo(params IGeneratorInfo[])
  nameWithType: IFileTypeManager.BuildAdditionalGeneratorsInfo(params IGeneratorInfo[])
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildAdditionalGeneratorsInfo(params Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo[])
  type: Method
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: Helper method to create additional generator information so that it can be used by filter component builders.
  example: []
  syntax:
    content: IAdditionalGeneratorsInfo BuildAdditionalGeneratorsInfo(params IGeneratorInfo[] generators)
    parameters:
    - id: generators
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo[]
      description: ''
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IAdditionalGeneratorsInfo
      description: ''
    content.vb: Function BuildAdditionalGeneratorsInfo(ParamArray generators As IGeneratorInfo()) As IAdditionalGeneratorsInfo
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildAdditionalGeneratorsInfo*
  nameWithType.vb: IFileTypeManager.BuildAdditionalGeneratorsInfo(ParamArray IGeneratorInfo())
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildAdditionalGeneratorsInfo(ParamArray Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo())
  name.vb: BuildAdditionalGeneratorsInfo(ParamArray IGeneratorInfo())
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.ConfigurationVersionInformation
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.ConfigurationVersionInformation
  id: ConfigurationVersionInformation
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: ConfigurationVersionInformation
  nameWithType: IFileTypeManager.ConfigurationVersionInformation
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.ConfigurationVersionInformation
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    <p>

    Provides information on the version of the configuration information that is used to instantiate the current

    instance of the IFileTypeManager. This can be used to determine whether the instance is working with the 

    latest version of configuration information that the host application requires.

    </p>

    <p>

    For instance, applications may transfer their file type manager configuration information from one system to another.

    By checking this property the application can determine the state of the configuration, and perform additional

    tasks to ensure the configuration is in the format that the application requires (e.g. deploy additional filters

    that have only been released in the latest version of the application).

    </p>
  example: []
  syntax:
    content: string ConfigurationVersionInformation { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ConfigurationVersionInformation As String
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.ConfigurationVersionInformation*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitionFactory
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitionFactory
  id: FileTypeDefinitionFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: FileTypeDefinitionFactory
  nameWithType: IFileTypeManager.FileTypeDefinitionFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitionFactory
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Provides access to the implementation used to instantiate file type

    definitions. Can be used to explicitly create a file type definition

    that can be added to the manager by calling <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AddFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)" data-throw-if-not-resolved="false"></xref>

    or <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.InsertFileTypeDefinition(System.Int32%2cSdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: IFileTypeDefinitionFactory FileTypeDefinitionFactory { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory
    content.vb: ReadOnly Property FileTypeDefinitionFactory As IFileTypeDefinitionFactory
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitionFactory*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitions
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitions
  id: FileTypeDefinitions
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: FileTypeDefinitions
  nameWithType: IFileTypeManager.FileTypeDefinitions
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitions
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    <p>

    The file type definitions that are currently known to this instance of the file type manager.

    </p>

    <p>

    The order of the file type definitions defines their relative priority, with 

    the most significant file type definition appearing first.

    </p>
  example: []
  syntax:
    content: IFileTypeDefinition[] FileTypeDefinitions { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition[]
    content.vb: ReadOnly Property FileTypeDefinitions As IFileTypeDefinition()
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitions*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AutoLoadedFileTypes
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AutoLoadedFileTypes
  id: AutoLoadedFileTypes
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: AutoLoadedFileTypes
  nameWithType: IFileTypeManager.AutoLoadedFileTypes
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AutoLoadedFileTypes
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    Gets a list of filetypes which should be auto-loaded by the Host. This is used to indicate

    new file types in this particular version of the FileTypeManager
  example: []
  syntax:
    content: List<string> AutoLoadedFileTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: ReadOnly Property AutoLoadedFileTypes As List(Of String)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AutoLoadedFileTypes*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.SettingsBundle
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.SettingsBundle
  id: SettingsBundle
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: SettingsBundle
  nameWithType: IFileTypeManager.SettingsBundle
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.SettingsBundle
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: >-
    The settings bundle containing the settings used by components of the

    FileTypeManager. This property should be set before any operations

    requiring the use of settings are invoked (for example, <code>GetConverterToBilingual</code>

    implementations) or the operation may not work as expected.

    This property can return <code>null</code> if no settings bundle has been set.
  example: []
  syntax:
    content: ISettingsBundle SettingsBundle { get; set; }
    parameters: []
    return:
      type: Sdl.Core.Settings.ISettingsBundle
    content.vb: Property SettingsBundle As ISettingsBundle
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.SettingsBundle*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.DefaultBilingualFileTypeDefinition
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.DefaultBilingualFileTypeDefinition
  id: DefaultBilingualFileTypeDefinition
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  langs:
  - csharp
  - vb
  name: DefaultBilingualFileTypeDefinition
  nameWithType: IFileTypeManager.DefaultBilingualFileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.DefaultBilingualFileTypeDefinition
  type: Property
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: The file type definitions that should be used as the default bilingual file type, or <code>null</code> if none.
  remarks: >-
    <p>

    By default, this property returns the first file type definition in the list for which the 

    <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation.IsBilingualDocumentFileType" data-throw-if-not-resolved="false"></xref> is true.

    </p>

    <p>

    The default bilingual file type can be explicitly changed by setting this property to another

    file type definition in the list that is also a bilingual document file type.

    </p>

    <p>

    Attempting to set this property to a file type definition that is not in the list will yield 

    a <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeDefinitionNotFoundException" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    Attempting to set this property to a file type definition that is not a bilingual document file type will

    yield a <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.NotBilingualFileTypeException" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: IFileTypeDefinition DefaultBilingualFileTypeDefinition { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
    content.vb: Property DefaultBilingualFileTypeDefinition As IFileTypeDefinition
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.DefaultBilingualFileTypeDefinition*
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AddFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AddFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_AddFileTypeDefinition_Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeDefinition_
  name: AddFileTypeDefinition(IFileTypeDefinition)
  nameWithType: IFileTypeManager.AddFileTypeDefinition(IFileTypeDefinition)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AddFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AddFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
    name: AddFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_AddFileTypeDefinition_Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeDefinition_
  - name: (
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
    name: IFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.html
  - name: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AddFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
    name: AddFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_AddFileTypeDefinition_Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeDefinition_
  - name: (
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
    name: IFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.html
  - name: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.InsertFileTypeDefinition(System.Int32,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.InsertFileTypeDefinition(System.Int32,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_InsertFileTypeDefinition_System_Int32_Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeDefinition_
  name: InsertFileTypeDefinition(int, IFileTypeDefinition)
  nameWithType: IFileTypeManager.InsertFileTypeDefinition(int, IFileTypeDefinition)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.InsertFileTypeDefinition(int, Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  nameWithType.vb: IFileTypeManager.InsertFileTypeDefinition(Integer, IFileTypeDefinition)
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.InsertFileTypeDefinition(Integer, Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  name.vb: InsertFileTypeDefinition(Integer, IFileTypeDefinition)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.InsertFileTypeDefinition(System.Int32,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
    name: InsertFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_InsertFileTypeDefinition_System_Int32_Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeDefinition_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
    name: IFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.html
  - name: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.InsertFileTypeDefinition(System.Int32,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
    name: InsertFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_InsertFileTypeDefinition_System_Int32_Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeDefinition_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
    name: IFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.html
  - name: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.RemoveFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.RemoveFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_RemoveFileTypeDefinition_Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeDefinition_
  name: RemoveFileTypeDefinition(IFileTypeDefinition)
  nameWithType: IFileTypeManager.RemoveFileTypeDefinition(IFileTypeDefinition)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.RemoveFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.RemoveFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
    name: RemoveFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_RemoveFileTypeDefinition_Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeDefinition_
  - name: (
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
    name: IFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.html
  - name: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.RemoveFileTypeDefinition(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition)
    name: RemoveFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_RemoveFileTypeDefinition_Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeDefinition_
  - name: (
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
    name: IFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.html
  - name: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitionFactory
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitionFactory
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_FileTypeDefinitionFactory
  name: FileTypeDefinitionFactory
  nameWithType: IFileTypeManager.FileTypeDefinitionFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitionFactory
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.html
  name: IMultiFileConverter
  nameWithType: IMultiFileConverter
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.html
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi
    name: IntegrationApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi
    name: IntegrationApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.html
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FindFileTypeDefinition*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FindFileTypeDefinition
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_FindFileTypeDefinition_Sdl_FileTypeSupport_Framework_FileTypeDefinitionId_
  name: FindFileTypeDefinition
  nameWithType: IFileTypeManager.FindFileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FindFileTypeDefinition
- uid: Sdl.FileTypeSupport.Framework.FileTypeDefinitionId
  commentId: T:Sdl.FileTypeSupport.Framework.FileTypeDefinitionId
  parent: Sdl.FileTypeSupport.Framework
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.FileTypeDefinitionId.html
  name: FileTypeDefinitionId
  nameWithType: FileTypeDefinitionId
  fullName: Sdl.FileTypeSupport.Framework.FileTypeDefinitionId
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.html
  name: IFileTypeDefinition
  nameWithType: IFileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
- uid: Sdl.FileTypeSupport.Framework
  commentId: N:Sdl.FileTypeSupport.Framework
  isExternal: true
  href: Sdl.html
  name: Sdl.FileTypeSupport.Framework
  nameWithType: Sdl.FileTypeSupport.Framework
  fullName: Sdl.FileTypeSupport.Framework
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetAllMatchingFileTypeDefinitions*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetAllMatchingFileTypeDefinitions
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_GetAllMatchingFileTypeDefinitions_System_String_System_EventHandler_Sdl_FileTypeSupport_Framework_IntegrationApi_MessageEventArgs__
  name: GetAllMatchingFileTypeDefinitions
  nameWithType: IFileTypeManager.GetAllMatchingFileTypeDefinitions
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetAllMatchingFileTypeDefinitions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
  commentId: T:System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<MessageEventArgs>
  nameWithType: EventHandler<MessageEventArgs>
  fullName: System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>
  nameWithType.vb: EventHandler(Of MessageEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs)
  name.vb: EventHandler(Of MessageEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs
    name: MessageEventArgs
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs
    name: MessageEventArgs
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.Pair{Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition,Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo}}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.Pair{Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition,Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Pair<IFileTypeDefinition, SniffInfo>>
  nameWithType: IEnumerable<Pair<IFileTypeDefinition, SniffInfo>>
  fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.Pair<Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition, Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo>>
  nameWithType.vb: IEnumerable(Of Pair(Of IFileTypeDefinition, SniffInfo))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.Pair(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition, Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo))
  name.vb: IEnumerable(Of Pair(Of IFileTypeDefinition, SniffInfo))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Pair-2.html
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
    name: IFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.html
  - name: ','
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo
    name: SniffInfo
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Pair-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
    name: IFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.html
  - name: ','
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo
    name: SniffInfo
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo.html
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Sdl.Core.Globalization.Language
  commentId: T:Sdl.Core.Globalization.Language
  parent: Sdl.Core.Globalization
  isExternal: true
  name: Language
  nameWithType: Language
  fullName: Sdl.Core.Globalization.Language
- uid: Sdl.Core.Globalization.Codepage
  commentId: T:Sdl.Core.Globalization.Codepage
  parent: Sdl.Core.Globalization
  isExternal: true
  name: Codepage
  nameWithType: Codepage
  fullName: Sdl.Core.Globalization.Codepage
- uid: Sdl.Core.Globalization
  commentId: N:Sdl.Core.Globalization
  isExternal: true
  name: Sdl.Core.Globalization
  nameWithType: Sdl.Core.Globalization
  fullName: Sdl.Core.Globalization
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetBestMatchingFileTypeDefinition*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetBestMatchingFileTypeDefinition
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_GetBestMatchingFileTypeDefinition_System_String_System_EventHandler_Sdl_FileTypeSupport_Framework_IntegrationApi_MessageEventArgs__
  name: GetBestMatchingFileTypeDefinition
  nameWithType: IFileTypeManager.GetBestMatchingFileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetBestMatchingFileTypeDefinition
- uid: Sdl.FileTypeSupport.Framework.Pair{Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition,Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo}
  commentId: T:Sdl.FileTypeSupport.Framework.Pair{Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition,Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo}
  parent: Sdl.FileTypeSupport.Framework
  definition: Sdl.FileTypeSupport.Framework.Pair`2
  href: Sdl.FileTypeSupport.Framework.Pair-2.html
  name: Pair<IFileTypeDefinition, SniffInfo>
  nameWithType: Pair<IFileTypeDefinition, SniffInfo>
  fullName: Sdl.FileTypeSupport.Framework.Pair<Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition, Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo>
  nameWithType.vb: Pair(Of IFileTypeDefinition, SniffInfo)
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition, Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo)
  name.vb: Pair(Of IFileTypeDefinition, SniffInfo)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Pair-2.html
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
    name: IFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.html
  - name: ','
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo
    name: SniffInfo
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo.html
  - name: '>'
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Pair-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
    name: IFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.html
  - name: ','
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo
    name: SniffInfo
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo.html
  - name: )
- uid: Sdl.FileTypeSupport.Framework.Pair`2
  commentId: T:Sdl.FileTypeSupport.Framework.Pair`2
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.Pair-2.html
  name: Pair<FirstType, SecondType>
  nameWithType: Pair<FirstType, SecondType>
  fullName: Sdl.FileTypeSupport.Framework.Pair<FirstType, SecondType>
  nameWithType.vb: Pair(Of FirstType, SecondType)
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of FirstType, SecondType)
  name.vb: Pair(Of FirstType, SecondType)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Pair-2.html
  - name: <
  - name: FirstType
  - name: ','
  - name: " "
  - name: SecondType
  - name: '>'
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.Pair-2.html
  - name: (
  - name: Of
  - name: " "
  - name: FirstType
  - name: ','
  - name: " "
  - name: SecondType
  - name: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AddFileTypeDefinition*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AddFileTypeDefinition
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_AddFileTypeDefinition_Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeDefinition_
  name: AddFileTypeDefinition
  nameWithType: IFileTypeManager.AddFileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AddFileTypeDefinition
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_CreateFileTypeDefinition_System_String_Sdl_FileTypeSupport_Framework_IntegrationApi_FileTypeProfile_
  name: CreateFileTypeDefinition
  nameWithType: IFileTypeManager.CreateFileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.CreateFileTypeDefinition
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile.html
  name: FileTypeProfile
  nameWithType: FileTypeProfile
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.html
  name: IFileTypeComponentBuilder
  nameWithType: IFileTypeComponentBuilder
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.InsertFileTypeDefinition*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.InsertFileTypeDefinition
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_InsertFileTypeDefinition_System_Int32_Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeDefinition_
  name: InsertFileTypeDefinition
  nameWithType: IFileTypeManager.InsertFileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.InsertFileTypeDefinition
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.RemoveFileTypeDefinition*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.RemoveFileTypeDefinition
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_RemoveFileTypeDefinition_Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeDefinition_
  name: RemoveFileTypeDefinition
  nameWithType: IFileTypeManager.RemoveFileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.RemoveFileTypeDefinition
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.ClearFileTypeDefinitions*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.ClearFileTypeDefinitions
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_ClearFileTypeDefinitions
  name: ClearFileTypeDefinitions
  nameWithType: IFileTypeManager.ClearFileTypeDefinitions
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.ClearFileTypeDefinitions
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException.html
  name: OneOrMoreFilesNotSupportedException
  nameWithType: OneOrMoreFilesNotSupportedException
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.OneOrMoreFilesNotSupportedException
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Message
  commentId: E:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Message
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IMultiFileConverter_Message
  name: Message
  nameWithType: IMultiFileConverter.Message
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Message
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IMultiFileConverter_Parse
  name: Parse()
  nameWithType: IMultiFileConverter.Parse()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse
    name: Parse
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IMultiFileConverter_Parse
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse
    name: Parse
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IMultiFileConverter_Parse
  - name: (
  - name: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IMultiFileConverter_ParseNext
  name: ParseNext()
  nameWithType: IMultiFileConverter.ParseNext()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext
    name: ParseNext
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IMultiFileConverter_ParseNext
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext
    name: ParseNext
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IMultiFileConverter_ParseNext
  - name: (
  - name: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(System.String,Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(System.String,Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_GetConverterToNative_System_String_Sdl_FileTypeSupport_Framework_IntegrationApi_OutputPropertiesProvider_System_EventHandler_Sdl_FileTypeSupport_Framework_IntegrationApi_MessageEventArgs__
  name: GetConverterToNative(string, OutputPropertiesProvider, EventHandler<MessageEventArgs>)
  nameWithType: IFileTypeManager.GetConverterToNative(string, OutputPropertiesProvider, EventHandler<MessageEventArgs>)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(string, Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider, System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>)
  nameWithType.vb: IFileTypeManager.GetConverterToNative(String, OutputPropertiesProvider, EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(String, Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider, System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs))
  name.vb: GetConverterToNative(String, OutputPropertiesProvider, EventHandler(Of MessageEventArgs))
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(System.String,Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
    name: GetConverterToNative
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_GetConverterToNative_System_String_Sdl_FileTypeSupport_Framework_IntegrationApi_OutputPropertiesProvider_System_EventHandler_Sdl_FileTypeSupport_Framework_IntegrationApi_MessageEventArgs__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
    name: OutputPropertiesProvider
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider.html
  - name: ','
  - name: " "
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs
    name: MessageEventArgs
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(System.String,Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
    name: GetConverterToNative
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_GetConverterToNative_System_String_Sdl_FileTypeSupport_Framework_IntegrationApi_OutputPropertiesProvider_System_EventHandler_Sdl_FileTypeSupport_Framework_IntegrationApi_MessageEventArgs__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
    name: OutputPropertiesProvider
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider.html
  - name: ','
  - name: " "
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs
    name: MessageEventArgs
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs.html
  - name: )
  - name: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_GetConverterToBilingual_System_String___Sdl_FileTypeSupport_Framework_IntegrationApi_IBilingualDocumentGenerator_Sdl_FileTypeSupport_Framework_IntegrationApi_BilingualDocumentOutputPropertiesProvider_System_Globalization_CultureInfo_Sdl_Core_Globalization_Codepage_System_EventHandler_Sdl_FileTypeSupport_Framework_IntegrationApi_MessageEventArgs__
  name: GetConverterToBilingual
  nameWithType: IFileTypeManager.GetConverterToBilingual
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToBilingual
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.html
  name: IBilingualDocumentGenerator
  nameWithType: IBilingualDocumentGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider.html
  name: BilingualDocumentOutputPropertiesProvider
  nameWithType: BilingualDocumentOutputPropertiesProvider
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_GetConverterToDefaultBilingual_System_String___System_String_System_Globalization_CultureInfo_Sdl_Core_Globalization_Codepage_System_EventHandler_Sdl_FileTypeSupport_Framework_IntegrationApi_MessageEventArgs__
  name: GetConverterToDefaultBilingual
  nameWithType: IFileTypeManager.GetConverterToDefaultBilingual
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToDefaultBilingual
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_GetConverterToNative_System_String___Sdl_FileTypeSupport_Framework_IntegrationApi_OutputPropertiesProvider_System_Globalization_CultureInfo_Sdl_Core_Globalization_Codepage_System_EventHandler_Sdl_FileTypeSupport_Framework_IntegrationApi_MessageEventArgs__
  name: GetConverterToNative
  nameWithType: IFileTypeManager.GetConverterToNative
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider.html
  name: OutputPropertiesProvider
  nameWithType: OutputPropertiesProvider
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_GetConverter_System_String___System_Globalization_CultureInfo_Sdl_Core_Globalization_Codepage_System_EventHandler_Sdl_FileTypeSupport_Framework_IntegrationApi_MessageEventArgs__
  name: GetConverter
  nameWithType: IFileTypeManager.GetConverter
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(System.String[],Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(System.String[],Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_GetConverterToNative_System_String___Sdl_FileTypeSupport_Framework_IntegrationApi_OutputPropertiesProvider_System_Globalization_CultureInfo_Sdl_Core_Globalization_Codepage_System_EventHandler_Sdl_FileTypeSupport_Framework_IntegrationApi_MessageEventArgs__
  name: GetConverterToNative(string[], OutputPropertiesProvider, CultureInfo, Codepage, EventHandler<MessageEventArgs>)
  nameWithType: IFileTypeManager.GetConverterToNative(string[], OutputPropertiesProvider, CultureInfo, Codepage, EventHandler<MessageEventArgs>)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(string[], Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider, System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>)
  nameWithType.vb: IFileTypeManager.GetConverterToNative(String(), OutputPropertiesProvider, CultureInfo, Codepage, EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(String(), Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider, System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs))
  name.vb: GetConverterToNative(String(), OutputPropertiesProvider, CultureInfo, Codepage, EventHandler(Of MessageEventArgs))
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(System.String[],Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
    name: GetConverterToNative
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_GetConverterToNative_System_String___Sdl_FileTypeSupport_Framework_IntegrationApi_OutputPropertiesProvider_System_Globalization_CultureInfo_Sdl_Core_Globalization_Codepage_System_EventHandler_Sdl_FileTypeSupport_Framework_IntegrationApi_MessageEventArgs__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
    name: OutputPropertiesProvider
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider.html
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: Sdl.Core.Globalization.Codepage
    name: Codepage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs
    name: MessageEventArgs
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverterToNative(System.String[],Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider,System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
    name: GetConverterToNative
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_GetConverterToNative_System_String___Sdl_FileTypeSupport_Framework_IntegrationApi_OutputPropertiesProvider_System_Globalization_CultureInfo_Sdl_Core_Globalization_Codepage_System_EventHandler_Sdl_FileTypeSupport_Framework_IntegrationApi_MessageEventArgs__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
    name: OutputPropertiesProvider
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider.html
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: Sdl.Core.Globalization.Codepage
    name: Codepage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs
    name: MessageEventArgs
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs.html
  - name: )
  - name: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser.html
  name: IBilingualParser
  nameWithType: IBilingualParser
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser
- uid: Sdl.FileTypeSupport.Framework.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  href: Sdl.html
  name: Sdl.FileTypeSupport.Framework.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi
    name: BilingualApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi
    name: BilingualApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.BilingualApi.html
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(System.String[],System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(System.String[],System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_GetConverter_System_String___System_Globalization_CultureInfo_Sdl_Core_Globalization_Codepage_System_EventHandler_Sdl_FileTypeSupport_Framework_IntegrationApi_MessageEventArgs__
  name: GetConverter(string[], CultureInfo, Codepage, EventHandler<MessageEventArgs>)
  nameWithType: IFileTypeManager.GetConverter(string[], CultureInfo, Codepage, EventHandler<MessageEventArgs>)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(string[], System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>)
  nameWithType.vb: IFileTypeManager.GetConverter(String(), CultureInfo, Codepage, EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(String(), System.Globalization.CultureInfo, Sdl.Core.Globalization.Codepage, System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs))
  name.vb: GetConverter(String(), CultureInfo, Codepage, EventHandler(Of MessageEventArgs))
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(System.String[],System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
    name: GetConverter
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_GetConverter_System_String___System_Globalization_CultureInfo_Sdl_Core_Globalization_Codepage_System_EventHandler_Sdl_FileTypeSupport_Framework_IntegrationApi_MessageEventArgs__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: Sdl.Core.Globalization.Codepage
    name: Codepage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs
    name: MessageEventArgs
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.GetConverter(System.String[],System.Globalization.CultureInfo,Sdl.Core.Globalization.Codepage,System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs})
    name: GetConverter
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_GetConverter_System_String___System_Globalization_CultureInfo_Sdl_Core_Globalization_Codepage_System_EventHandler_Sdl_FileTypeSupport_Framework_IntegrationApi_MessageEventArgs__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: Sdl.Core.Globalization.Codepage
    name: Codepage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs
    name: MessageEventArgs
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs.html
  - name: )
  - name: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileNotSupportedException
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.FileNotSupportedException
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.FileNotSupportedException.html
  name: FileNotSupportedException
  nameWithType: FileNotSupportedException
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileNotSupportedException
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractor
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildExtractor_System_String_System_Globalization_CultureInfo_Sdl_Core_Globalization_Codepage_Sdl_FileTypeSupport_Framework_NativeApi_INativeTextLocationMessageReporter_
  name: BuildExtractor
  nameWithType: IFileTypeManager.BuildExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractor
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter.html
  name: INativeTextLocationMessageReporter
  nameWithType: INativeTextLocationMessageReporter
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor.html
  name: IFileExtractor
  nameWithType: IFileExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  href: Sdl.html
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.NativeApi
    name: NativeApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
    href: Sdl.FileTypeSupport.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.html
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.NativeApi
    name: NativeApi
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.html
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractorNoSniffing*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractorNoSniffing
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildExtractorNoSniffing_System_String_System_String_System_Globalization_CultureInfo_Sdl_Core_Globalization_Codepage_Sdl_FileTypeSupport_Framework_NativeApi_INativeTextLocationMessageReporter_
  name: BuildExtractorNoSniffing
  nameWithType: IFileTypeManager.BuildExtractorNoSniffing
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildExtractorNoSniffing
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.NativeGeneratorProvider
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.NativeGeneratorProvider
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.NativeGeneratorProvider.html
  name: NativeGeneratorProvider
  nameWithType: NativeGeneratorProvider
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.NativeGeneratorProvider
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeDefinitionNotFoundException
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeDefinitionNotFoundException
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeDefinitionNotFoundException.html
  name: FileTypeDefinitionNotFoundException
  nameWithType: FileTypeDefinitionNotFoundException
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeDefinitionNotFoundException
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildNativeGenerator_Sdl_FileTypeSupport_Framework_NativeApi_IPersistentFileConversionProperties_
  name: BuildNativeGenerator
  nameWithType: IFileTypeManager.BuildNativeGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.html
  name: IPersistentFileConversionProperties
  nameWithType: IPersistentFileConversionProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileGenerator
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileGenerator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileGenerator.html
  name: IFileGenerator
  nameWithType: IFileGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildNativeGenerator_Sdl_FileTypeSupport_Framework_NativeApi_IPersistentFileConversionProperties_
  name: BuildNativeGenerator(IPersistentFileConversionProperties)
  nameWithType: IFileTypeManager.BuildNativeGenerator(IPersistentFileConversionProperties)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
    name: BuildNativeGenerator
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildNativeGenerator_Sdl_FileTypeSupport_Framework_NativeApi_IPersistentFileConversionProperties_
  - name: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    name: IPersistentFileConversionProperties
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.html
  - name: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
    name: BuildNativeGenerator
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildNativeGenerator_Sdl_FileTypeSupport_Framework_NativeApi_IPersistentFileConversionProperties_
  - name: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    name: IPersistentFileConversionProperties
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.html
  - name: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGeneratorWithVerifiers*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGeneratorWithVerifiers
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildNativeGeneratorWithVerifiers_Sdl_FileTypeSupport_Framework_NativeApi_IPersistentFileConversionProperties_
  name: BuildNativeGeneratorWithVerifiers
  nameWithType: IFileTypeManager.BuildNativeGeneratorWithVerifiers
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGeneratorWithVerifiers
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildBilingualGenerator*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildBilingualGenerator
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildBilingualGenerator_Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeDefinition_
  name: BuildBilingualGenerator
  nameWithType: IFileTypeManager.BuildBilingualGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildBilingualGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.DefaultBilingualFileTypeDefinition
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.DefaultBilingualFileTypeDefinition
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_DefaultBilingualFileTypeDefinition
  name: DefaultBilingualFileTypeDefinition
  nameWithType: IFileTypeManager.DefaultBilingualFileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.DefaultBilingualFileTypeDefinition
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildDefaultBilingualGenerator*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildDefaultBilingualGenerator
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildDefaultBilingualGenerator
  name: BuildDefaultBilingualGenerator
  nameWithType: IFileTypeManager.BuildDefaultBilingualGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildDefaultBilingualGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Writer
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Writer
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IBilingualDocumentGenerator_Writer
  name: Writer
  nameWithType: IBilingualDocumentGenerator.Writer
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator.Writer
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentWriter
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentWriter
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentWriter.html
  name: IBilingualDocumentWriter
  nameWithType: IBilingualDocumentWriter
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentWriter
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileExtractor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileExtractor
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildFileExtractor_Sdl_FileTypeSupport_Framework_BilingualApi_IBilingualParser_Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeComponentBuilder_
  name: BuildFileExtractor
  nameWithType: IFileTypeManager.BuildFileExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileExtractor
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentExtractor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentExtractor
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildSubContentExtractor_Sdl_FileTypeSupport_Framework_BilingualApi_IBilingualParser_Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeComponentBuilder_
  name: BuildSubContentExtractor
  nameWithType: IFileTypeManager.BuildSubContentExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentExtractor
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor.html
  name: ISubContentExtractor
  nameWithType: ISubContentExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentExtractor
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentExtractor
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentExtractor
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentExtractor.html
  name: INativeSubContentExtractor
  nameWithType: INativeSubContentExtractor
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentExtractor
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractor
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractor
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractor.html
  name: INativeExtractor
  nameWithType: INativeExtractor
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeExtractor
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeExtractor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeExtractor
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildNativeExtractor_Sdl_FileTypeSupport_Framework_NativeApi_INativeFileParser_
  name: BuildNativeExtractor
  nameWithType: IFileTypeManager.BuildNativeExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeExtractor
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser.html
  name: INativeFileParser
  nameWithType: INativeFileParser
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileParser
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeSubContentExtractor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeSubContentExtractor
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildNativeSubContentExtractor_Sdl_FileTypeSupport_Framework_NativeApi_INativeFileParser_
  name: BuildNativeSubContentExtractor
  nameWithType: IFileTypeManager.BuildNativeSubContentExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeSubContentExtractor
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileTypeInformation*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileTypeInformation
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildFileTypeInformation
  name: BuildFileTypeInformation
  nameWithType: IFileTypeManager.BuildFileTypeInformation
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileTypeInformation
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation.html
  name: IFileTypeInformation
  nameWithType: IFileTypeInformation
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileGenerator*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileGenerator
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildFileGenerator_Sdl_FileTypeSupport_Framework_BilingualApi_IBilingualWriter_
  name: BuildFileGenerator
  nameWithType: IFileTypeManager.BuildFileGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildFileGenerator
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualWriter
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualWriter
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualWriter.html
  name: IBilingualWriter
  nameWithType: IBilingualWriter
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualWriter
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileWriter
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeFileWriter
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileWriter.html
  name: INativeFileWriter
  nameWithType: INativeFileWriter
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileWriter
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerator
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerator
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerator.html
  name: INativeGenerator
  nameWithType: INativeGenerator
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentGenerator*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentGenerator
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildSubContentGenerator_Sdl_FileTypeSupport_Framework_BilingualApi_IBilingualWriter_
  name: BuildSubContentGenerator
  nameWithType: IFileTypeManager.BuildSubContentGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildSubContentGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentGenerator
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentGenerator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentGenerator.html
  name: ISubContentGenerator
  nameWithType: ISubContentGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.ISubContentGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeSubContentGenerator*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeSubContentGenerator
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildNativeSubContentGenerator_Sdl_FileTypeSupport_Framework_NativeApi_INativeFileWriter_
  name: BuildNativeSubContentGenerator
  nameWithType: IFileTypeManager.BuildNativeSubContentGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeSubContentGenerator
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentGenerator
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentGenerator
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentGenerator.html
  name: INativeSubContentGenerator
  nameWithType: INativeSubContentGenerator
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeSubContentGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildPreviewSetsFactory*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildPreviewSetsFactory
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildPreviewSetsFactory
  name: BuildPreviewSetsFactory
  nameWithType: IFileTypeManager.BuildPreviewSetsFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildPreviewSetsFactory
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory.html
  name: IPreviewSetsFactory
  nameWithType: IPreviewSetsFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildQuickTagsFactory*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildQuickTagsFactory
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildQuickTagsFactory
  name: BuildQuickTagsFactory
  nameWithType: IFileTypeManager.BuildQuickTagsFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildQuickTagsFactory
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.html
  name: IQuickTagsFactory
  nameWithType: IQuickTagsFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildVerifierCollection*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildVerifierCollection
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildVerifierCollection
  name: BuildVerifierCollection
  nameWithType: IFileTypeManager.BuildVerifierCollection
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildVerifierCollection
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IVerifierCollection
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IVerifierCollection
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IVerifierCollection.html
  name: IVerifierCollection
  nameWithType: IVerifierCollection
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IVerifierCollection
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildGeneratorInfo*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildGeneratorInfo
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildGeneratorInfo
  name: BuildGeneratorInfo
  nameWithType: IFileTypeManager.BuildGeneratorInfo
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildGeneratorInfo
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo.html
  name: IGeneratorInfo
  nameWithType: IGeneratorInfo
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildAdditionalGeneratorsInfo*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildAdditionalGeneratorsInfo
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_BuildAdditionalGeneratorsInfo_Sdl_FileTypeSupport_Framework_IntegrationApi_IGeneratorInfo___
  name: BuildAdditionalGeneratorsInfo
  nameWithType: IFileTypeManager.BuildAdditionalGeneratorsInfo
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildAdditionalGeneratorsInfo
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo[]
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo.html
  name: IGeneratorInfo[]
  nameWithType: IGeneratorInfo[]
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo[]
  nameWithType.vb: IGeneratorInfo()
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo()
  name.vb: IGeneratorInfo()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo
    name: IGeneratorInfo
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo
    name: IGeneratorInfo
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IGeneratorInfo.html
  - name: (
  - name: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IAdditionalGeneratorsInfo
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IAdditionalGeneratorsInfo
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IAdditionalGeneratorsInfo.html
  name: IAdditionalGeneratorsInfo
  nameWithType: IAdditionalGeneratorsInfo
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IAdditionalGeneratorsInfo
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.ConfigurationVersionInformation*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.ConfigurationVersionInformation
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_ConfigurationVersionInformation
  name: ConfigurationVersionInformation
  nameWithType: IFileTypeManager.ConfigurationVersionInformation
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.ConfigurationVersionInformation
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitionFactory*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitionFactory
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_FileTypeDefinitionFactory
  name: FileTypeDefinitionFactory
  nameWithType: IFileTypeManager.FileTypeDefinitionFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitionFactory
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.html
  name: IFileTypeDefinitionFactory
  nameWithType: IFileTypeDefinitionFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitions*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitions
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_FileTypeDefinitions
  name: FileTypeDefinitions
  nameWithType: IFileTypeManager.FileTypeDefinitions
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitions
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition[]
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.html
  name: IFileTypeDefinition[]
  nameWithType: IFileTypeDefinition[]
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition[]
  nameWithType.vb: IFileTypeDefinition()
  fullName.vb: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition()
  name.vb: IFileTypeDefinition()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
    name: IFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
    name: IFileTypeDefinition
    isExternal: true
    href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.html
  - name: (
  - name: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AutoLoadedFileTypes*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AutoLoadedFileTypes
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_AutoLoadedFileTypes
  name: AutoLoadedFileTypes
  nameWithType: IFileTypeManager.AutoLoadedFileTypes
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.AutoLoadedFileTypes
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.SettingsBundle*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.SettingsBundle
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_SettingsBundle
  name: SettingsBundle
  nameWithType: IFileTypeManager.SettingsBundle
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.SettingsBundle
- uid: Sdl.Core.Settings.ISettingsBundle
  commentId: T:Sdl.Core.Settings.ISettingsBundle
  parent: Sdl.Core.Settings
  isExternal: true
  name: ISettingsBundle
  nameWithType: ISettingsBundle
  fullName: Sdl.Core.Settings.ISettingsBundle
- uid: Sdl.Core.Settings
  commentId: N:Sdl.Core.Settings
  isExternal: true
  name: Sdl.Core.Settings
  nameWithType: Sdl.Core.Settings
  fullName: Sdl.Core.Settings
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
  - name: .
  - uid: Sdl.Core.Settings
    name: Settings
    isExternal: true
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
  - name: .
  - uid: Sdl.Core.Settings
    name: Settings
    isExternal: true
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation.IsBilingualDocumentFileType
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation.IsBilingualDocumentFileType
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeInformation_IsBilingualDocumentFileType
  name: IsBilingualDocumentFileType
  nameWithType: IFileTypeInformation.IsBilingualDocumentFileType
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation.IsBilingualDocumentFileType
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.NotBilingualFileTypeException
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.NotBilingualFileTypeException
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.NotBilingualFileTypeException.html
  name: NotBilingualFileTypeException
  nameWithType: NotBilingualFileTypeException
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.NotBilingualFileTypeException
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.DefaultBilingualFileTypeDefinition*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.DefaultBilingualFileTypeDefinition
  isExternal: true
  href: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.html#Sdl_FileTypeSupport_Framework_IntegrationApi_IFileTypeManager_DefaultBilingualFileTypeDefinition
  name: DefaultBilingualFileTypeDefinition
  nameWithType: IFileTypeManager.DefaultBilingualFileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.DefaultBilingualFileTypeDefinition
