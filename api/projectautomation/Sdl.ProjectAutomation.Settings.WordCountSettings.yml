### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Settings.WordCountSettings
  commentId: T:Sdl.ProjectAutomation.Settings.WordCountSettings
  id: WordCountSettings
  parent: Sdl.ProjectAutomation.Settings
  children:
  - Sdl.ProjectAutomation.Settings.WordCountSettings.#ctor
  - Sdl.ProjectAutomation.Settings.WordCountSettings.CreateReport
  - Sdl.ProjectAutomation.Settings.WordCountSettings.GetDefaultValue(System.String)
  langs:
  - csharp
  - vb
  name: WordCountSettings
  nameWithType: WordCountSettings
  fullName: Sdl.ProjectAutomation.Settings.WordCountSettings
  type: Class
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nSettings group class for the Word count automatic task settings.\n"
  syntax:
    content: 'public class WordCountSettings : SettingsGroup'
    content.vb: >-
      Public Class WordCountSettings
          Inherits SettingsGroup
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.Settings.WordCountSettings.#ctor
  commentId: M:Sdl.ProjectAutomation.Settings.WordCountSettings.#ctor
  id: '#ctor'
  parent: Sdl.ProjectAutomation.Settings.WordCountSettings
  langs:
  - csharp
  - vb
  name: WordCountSettings()
  nameWithType: WordCountSettings.WordCountSettings()
  fullName: Sdl.ProjectAutomation.Settings.WordCountSettings.WordCountSettings()
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nDefault constructor. You should never create this object manually. Use <xref href=\"Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup(System.String)\" data-throw-if-not-resolved=\"false\"></xref> instead.\n"
  syntax:
    content: public WordCountSettings()
    content.vb: Public Sub New
  overload: Sdl.ProjectAutomation.Settings.WordCountSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Settings.WordCountSettings.GetDefaultValue(System.String)
  commentId: M:Sdl.ProjectAutomation.Settings.WordCountSettings.GetDefaultValue(System.String)
  id: GetDefaultValue(System.String)
  parent: Sdl.ProjectAutomation.Settings.WordCountSettings
  langs:
  - csharp
  - vb
  name: GetDefaultValue(String)
  nameWithType: WordCountSettings.GetDefaultValue(String)
  fullName: Sdl.ProjectAutomation.Settings.WordCountSettings.GetDefaultValue(System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nGets the default value.\n"
  syntax:
    content: protected override object GetDefaultValue(string settingId)
    parameters:
    - id: settingId
      type: System.String
      description: The setting id.
    return:
      type: System.Object
      description: The default value.
    content.vb: Protected Overrides Function GetDefaultValue(settingId As String) As Object
  overload: Sdl.ProjectAutomation.Settings.WordCountSettings.GetDefaultValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Sdl.ProjectAutomation.Settings.WordCountSettings.CreateReport
  commentId: P:Sdl.ProjectAutomation.Settings.WordCountSettings.CreateReport
  id: CreateReport
  parent: Sdl.ProjectAutomation.Settings.WordCountSettings
  langs:
  - csharp
  - vb
  name: CreateReport
  nameWithType: WordCountSettings.CreateReport
  fullName: Sdl.ProjectAutomation.Settings.WordCountSettings.CreateReport
  type: Property
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nGets the setting that flags whether a report should be generated. Default: <code>true</code>.\n"
  syntax:
    content: public Setting<bool> CreateReport { get; }
    parameters: []
    return:
      type: Sdl.Core.Settings.Setting{System.Boolean}
    content.vb: Public ReadOnly Property CreateReport As Setting(Of Boolean)
  overload: Sdl.ProjectAutomation.Settings.WordCountSettings.CreateReport*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.ProjectAutomation.Settings
  commentId: N:Sdl.ProjectAutomation.Settings
  isExternal: true
  name: Sdl.ProjectAutomation.Settings
  nameWithType: Sdl.ProjectAutomation.Settings
  fullName: Sdl.ProjectAutomation.Settings
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Settings.WordCountSettings.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.Settings.WordCountSettings.#ctor
  isExternal: true
  name: WordCountSettings
  nameWithType: WordCountSettings.WordCountSettings
  fullName: Sdl.ProjectAutomation.Settings.WordCountSettings.WordCountSettings
- uid: Sdl.ProjectAutomation.Settings.WordCountSettings.GetDefaultValue*
  commentId: Overload:Sdl.ProjectAutomation.Settings.WordCountSettings.GetDefaultValue
  isExternal: true
  name: GetDefaultValue
  nameWithType: WordCountSettings.GetDefaultValue
  fullName: Sdl.ProjectAutomation.Settings.WordCountSettings.GetDefaultValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.ProjectAutomation.Settings.WordCountSettings.CreateReport*
  commentId: Overload:Sdl.ProjectAutomation.Settings.WordCountSettings.CreateReport
  isExternal: true
  name: CreateReport
  nameWithType: WordCountSettings.CreateReport
  fullName: Sdl.ProjectAutomation.Settings.WordCountSettings.CreateReport
- uid: Sdl.Core.Settings.Setting{System.Boolean}
  commentId: '!:Sdl.Core.Settings.Setting{System.Boolean}'
  definition: Sdl.Core.Settings.Setting`1
  name: Setting<Boolean>
  nameWithType: Setting<Boolean>
  fullName: Sdl.Core.Settings.Setting<System.Boolean>
  nameWithType.vb: Setting(Of Boolean)
  fullName.vb: Sdl.Core.Settings.Setting(Of System.Boolean)
  name.vb: Setting(Of Boolean)
  spec.csharp:
  - uid: Sdl.Core.Settings.Setting`1
    name: Setting
    nameWithType: Setting
    fullName: Sdl.Core.Settings.Setting
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.Core.Settings.Setting`1
    name: Setting
    nameWithType: Setting
    fullName: Sdl.Core.Settings.Setting
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.Settings.Setting`1
  isExternal: true
  name: Setting<>
  nameWithType: Setting<>
  fullName: Sdl.Core.Settings.Setting<>
  nameWithType.vb: Setting(Of )
  fullName.vb: Sdl.Core.Settings.Setting(Of )
  name.vb: Setting(Of )
  spec.csharp:
  - uid: Sdl.Core.Settings.Setting`1
    name: Setting
    nameWithType: Setting
    fullName: Sdl.Core.Settings.Setting
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.Core.Settings.Setting`1
    name: Setting
    nameWithType: Setting
    fullName: Sdl.Core.Settings.Setting
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
