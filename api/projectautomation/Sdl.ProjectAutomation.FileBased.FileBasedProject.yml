### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject
  commentId: T:Sdl.ProjectAutomation.FileBased.FileBasedProject
  id: FileBasedProject
  parent: Sdl.ProjectAutomation.FileBased
  children:
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor(Sdl.ProjectAutomation.Core.ProjectInfo)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor(Sdl.ProjectAutomation.Core.ProjectInfo,Sdl.ProjectAutomation.Core.ProjectReference)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor(Sdl.ProjectAutomation.Core.ProjectInfo,Sdl.ProjectAutomation.Core.ProjectTemplateReference)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor(System.String)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor(System.String,System.Boolean,System.String,System.String)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFile(Sdl.ProjectAutomation.Core.BilingualFileMapping)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFile(System.Guid,System.String)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping[])
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFiles(System.String[])
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFiles(System.String[],System.String)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFolderWithFiles(System.String,System.Boolean)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFolderWithFiles(System.String,System.String,System.Boolean)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.AddMasterTM(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration,System.String)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.AddNewFileVersion(System.Guid,System.String)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckinFiles(System.Guid[],System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs})
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckoutFiles(System.Guid[],System.Boolean,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs})
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.Complete
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateFromProjectPackage(System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageImport@)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateFromProjectPackage(System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs},Sdl.ProjectAutomation.Core.ProjectPackageImport@)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateManualTask(System.String,System.String,System.DateTime,Sdl.ProjectAutomation.Core.TaskFileInfo[])
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateManualTask(System.String,System.String,System.DateTime,System.Guid[])
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateMergedProjectFile(System.String,System.String,System.Guid[])
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateReturnPackage(System.Guid[],System.String,System.String)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateReturnPackage(System.Guid[],System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.Credentials
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.Delete
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.DeleteFilesAndDependencies(System.String)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.DeleteFromServer
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadLatestServerVersion(System.Guid,System.EventHandler{Sdl.ProjectApi.Server.DataTransferEventArgs},System.Boolean)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadSpecificServerVersion(System.Guid,System.Int32,System.String,System.EventHandler{Sdl.ProjectApi.Server.DataTransferEventArgs})
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.FilePath
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.GetAutomaticTask(System.Guid)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFile(System.Guid)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFiles(System.Guid[])
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFileTypeConfiguration
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.GetManualTask(System.Guid)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectFileVersionHistory(System.Guid)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectInfo
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectStatistics
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSettings
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSettings(Sdl.Core.Globalization.Language)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSourceLanguageFiles
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTargetLanguageFiles
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTargetLanguageFiles(Sdl.Core.Globalization.Language)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTermbaseConfiguration(System.Boolean)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTranslationProviderConfiguration
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.ImportReturnPackage(System.String)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.ImportReturnPackage(System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.OpenProjectFileStream(System.Guid)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.PublishProject(System.Uri,System.Boolean,System.String,System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.FileBased.PublishProjectEventArgs})
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.RemoveBilingualReferenceFile(System.Guid)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTask(System.Guid[],System.String)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTask(System.Guid[],System.String,System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTasks(System.Guid[],System.String[])
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTasks(System.Guid[],System.String[],System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.RunDefaultTaskSequence(System.Guid[])
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.RunDefaultTaskSequence(System.Guid[],System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.Save
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.SavePackageAs(System.Guid,System.String)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.SaveProjectFileAs(System.Guid,System.String)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.SaveTaskReportAs(System.Guid,System.String,Sdl.ProjectAutomation.Core.ReportFormat)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.SetFileRole(System.Guid[],Sdl.ProjectAutomation.Core.FileRole)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.SynchronizeServerProjectData
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.UndoCheckoutFiles(System.Guid[])
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateProject(Sdl.ProjectAutomation.Core.ProjectInfo)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateSettings(Sdl.Core.Globalization.Language,Sdl.Core.Settings.ISettingsBundle)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateSettings(Sdl.Core.Settings.ISettingsBundle)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTermbaseConfiguration(Sdl.ProjectAutomation.Core.TermbaseConfiguration)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language,Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  - Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  langs:
  - csharp
  - vb
  name: FileBasedProject
  nameWithType: FileBasedProject
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject
  type: Class
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nThis class provides an implementation of the <xref href=\"Sdl.ProjectAutomation.Core.IProject\" data-throw-if-not-resolved=\"false\"></xref> interface for working with Trados Studio projects.\n"
  remarks: "\n<p>An Trados Studio project always resides in a dedicated project folder on disk. Within this, you can find the following:\n\n</p>\n<p>\nWhen creating a new <xref href=\"Sdl.ProjectAutomation.FileBased.FileBasedProject\" data-throw-if-not-resolved=\"false\"></xref> object, the project XML file is loaded into memory. Changes to the project are not saved\nautomatically and only happen in memory. After doing a series of operations on a project, you need to call <xref href=\"Sdl.ProjectAutomation.FileBased.FileBasedProject.Save\" data-throw-if-not-resolved=\"false\"></xref> to save the project XML file.\nYou may choose to do this at key points to prevent losing data in case your application crashes.\n</p>\n<p>The <xref href=\"Sdl.ProjectAutomation.FileBased.FileBasedProject\" data-throw-if-not-resolved=\"false\"></xref> class can be used to open any type of Trados Studio project. In order to create a project from a project package (*.sdlppx), use the static\n<xref href=\"Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateFromProjectPackage(System.String%2cSystem.String%2cSdl.ProjectAutomation.Core.ProjectPackageImport%40)\" data-throw-if-not-resolved=\"false\"></xref> method. </p>\n<p>Project created using the Project Automation API will not automatically be added to the Trados Studio project list. In order to do this,\nsimply open the project in Trados Studio, which will add it to the list.</p>\n"
  syntax:
    content: 'public class FileBasedProject : IProject, IProjectDeleteOperation'
    content.vb: >-
      Public Class FileBasedProject
          Implements IProject, IProjectDeleteOperation
  inheritance:
  - System.Object
  implements:
  - Sdl.ProjectAutomation.Core.IProject
  - Sdl.ProjectAutomation.Core.IProjectDeleteOperation
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateFromProjectPackage(System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageImport@)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateFromProjectPackage(System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageImport@)
  id: CreateFromProjectPackage(System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageImport@)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: CreateFromProjectPackage(String, String, out ProjectPackageImport)
  nameWithType: FileBasedProject.CreateFromProjectPackage(String, String, out ProjectPackageImport)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateFromProjectPackage(System.String, System.String, out Sdl.ProjectAutomation.Core.ProjectPackageImport)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nCreates a new project from a project package.\n"
  remarks: "\n<p>Unlike Trados Studio, this API does not allow you to open a project package and merge it into a project that was\npreviously created by opening a project package that originated from the same project. A new project is created for every project package you\nopen using this method.</p>\n"
  syntax:
    content: public static FileBasedProject CreateFromProjectPackage(string projectPackageFilePath, string projectFolder, out ProjectPackageImport result)
    parameters:
    - id: projectPackageFilePath
      type: System.String
      description: The file path of the project package to open into a new project. Only native Trados Studio packages are supported (*.sdlppx).
    - id: projectFolder
      type: System.String
      description: The file path of an empty folder to create the new project in.
    - id: result
      type: Sdl.ProjectAutomation.Core.ProjectPackageImport
      description: Information about the project package import operation.
    return:
      type: Sdl.ProjectAutomation.FileBased.FileBasedProject
      description: The newly created file-based project; or <code>null</code> if the project package import operation failed.
    content.vb: Public Shared Function CreateFromProjectPackage(projectPackageFilePath As String, projectFolder As String, ByRef result As ProjectPackageImport) As FileBasedProject
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateFromProjectPackage*
  nameWithType.vb: FileBasedProject.CreateFromProjectPackage(String, String, ByRef ProjectPackageImport)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateFromProjectPackage(System.String, System.String, ByRef Sdl.ProjectAutomation.Core.ProjectPackageImport)
  name.vb: CreateFromProjectPackage(String, String, ByRef ProjectPackageImport)
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateFromProjectPackage(System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs},Sdl.ProjectAutomation.Core.ProjectPackageImport@)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateFromProjectPackage(System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs},Sdl.ProjectAutomation.Core.ProjectPackageImport@)
  id: CreateFromProjectPackage(System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs},Sdl.ProjectAutomation.Core.ProjectPackageImport@)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: CreateFromProjectPackage(String, String, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>, out ProjectPackageImport)
  nameWithType: FileBasedProject.CreateFromProjectPackage(String, String, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>, out ProjectPackageImport)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateFromProjectPackage(System.String, System.String, System.EventHandler<Sdl.ProjectAutomation.Core.ProgressEventArgs>, System.EventHandler<Sdl.ProjectAutomation.Core.MessageEventArgs>, out Sdl.ProjectAutomation.Core.ProjectPackageImport)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nCreates a new project from a project package.\n"
  syntax:
    content: public static FileBasedProject CreateFromProjectPackage(string projectPackageFilePath, string projectFolder, EventHandler<ProgressEventArgs> statusEventHandler, EventHandler<MessageEventArgs> messageEventHandler, out ProjectPackageImport result)
    parameters:
    - id: projectPackageFilePath
      type: System.String
      description: The file path of the project package to open into a new project.
    - id: projectFolder
      type: System.String
      description: The file path of an empty folder to create the new project in.
    - id: statusEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs}
      description: Event handler for package creation status events. Can be <code>null</code>.
    - id: messageEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs}
      description: Event handler for message events. Can be <code>null</code>.
    - id: result
      type: Sdl.ProjectAutomation.Core.ProjectPackageImport
      description: Information about the project package import operation.
    return:
      type: Sdl.ProjectAutomation.FileBased.FileBasedProject
      description: The newly created file-based project; or <code>null</code> if the package import failed.
    content.vb: Public Shared Function CreateFromProjectPackage(projectPackageFilePath As String, projectFolder As String, statusEventHandler As EventHandler(Of ProgressEventArgs), messageEventHandler As EventHandler(Of MessageEventArgs), ByRef result As ProjectPackageImport) As FileBasedProject
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateFromProjectPackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">projectFolder</code> or <code data-dev-comment-type="paramref" class="paramref">projectPackageFilePath</code> are <code>null</code> or empty.
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">projectPackageFilePath</code> does not exist.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">projectFolder</code> refers to a non-empty directory.
  nameWithType.vb: FileBasedProject.CreateFromProjectPackage(String, String, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs), ByRef ProjectPackageImport)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateFromProjectPackage(System.String, System.String, System.EventHandler(Of Sdl.ProjectAutomation.Core.ProgressEventArgs), System.EventHandler(Of Sdl.ProjectAutomation.Core.MessageEventArgs), ByRef Sdl.ProjectAutomation.Core.ProjectPackageImport)
  name.vb: CreateFromProjectPackage(String, String, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs), ByRef ProjectPackageImport)
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor(System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: FileBasedProject(String)
  nameWithType: FileBasedProject.FileBasedProject(String)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.FileBasedProject(System.String)
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nOpens an existing project.\n"
  syntax:
    content: public FileBasedProject(string projectFilePath)
    parameters:
    - id: projectFilePath
      type: System.String
      description: The absolute path to the project file (*.sdlproj).
    content.vb: Public Sub New(projectFilePath As String)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code data-dev-comment-type="paramref" class="paramref">projectFilePath</code> is <code>null</code> or empty.
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">projectFilePath</code> does not exist.
  - type: Sdl.ProjectAutomation.Core.ProjectAutomationException
    commentId: T:Sdl.ProjectAutomation.Core.ProjectAutomationException
    description: Thrown when the project at <code data-dev-comment-type="paramref" class="paramref">projectFilePath</code> cannot be loaded.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor(System.String,System.Boolean,System.String,System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor(System.String,System.Boolean,System.String,System.String)
  id: '#ctor(System.String,System.Boolean,System.String,System.String)'
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: FileBasedProject(String, Boolean, String, String)
  nameWithType: FileBasedProject.FileBasedProject(String, Boolean, String, String)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.FileBasedProject(System.String, System.Boolean, System.String, System.String)
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nOpens an existing server project file.\n"
  syntax:
    content: public FileBasedProject(string projectFilePath, bool useWindowsAuthentication, string userName, string password)
    parameters:
    - id: projectFilePath
      type: System.String
    - id: useWindowsAuthentication
      type: System.Boolean
    - id: userName
      type: System.String
    - id: password
      type: System.String
    content.vb: Public Sub New(projectFilePath As String, useWindowsAuthentication As Boolean, userName As String, password As String)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor(Sdl.ProjectAutomation.Core.ProjectInfo)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor(Sdl.ProjectAutomation.Core.ProjectInfo)
  id: '#ctor(Sdl.ProjectAutomation.Core.ProjectInfo)'
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: FileBasedProject(ProjectInfo)
  nameWithType: FileBasedProject.FileBasedProject(ProjectInfo)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.FileBasedProject(Sdl.ProjectAutomation.Core.ProjectInfo)
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nCreates a new project based on the default project template set up in Trados Studio.\n"
  remarks: >-
    The default project template has to be set up before you can use this constructor. This is done automatically when Trados Studio

    starts for the first time after installation.
  syntax:
    content: public FileBasedProject(ProjectInfo projectInfo)
    parameters:
    - id: projectInfo
      type: Sdl.ProjectAutomation.Core.ProjectInfo
      description: Properties to use when creating the project.
    content.vb: Public Sub New(projectInfo As ProjectInfo)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown when trying to use this constructor before Trados Studio has initialized the default project template.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">projectInfo</code> is <code>null</code>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">projectInfo</code> is invalid.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor(Sdl.ProjectAutomation.Core.ProjectInfo,Sdl.ProjectAutomation.Core.ProjectTemplateReference)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor(Sdl.ProjectAutomation.Core.ProjectInfo,Sdl.ProjectAutomation.Core.ProjectTemplateReference)
  id: '#ctor(Sdl.ProjectAutomation.Core.ProjectInfo,Sdl.ProjectAutomation.Core.ProjectTemplateReference)'
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: FileBasedProject(ProjectInfo, ProjectTemplateReference)
  nameWithType: FileBasedProject.FileBasedProject(ProjectInfo, ProjectTemplateReference)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.FileBasedProject(Sdl.ProjectAutomation.Core.ProjectInfo, Sdl.ProjectAutomation.Core.ProjectTemplateReference)
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nCreates a new project based on a project template.\n"
  syntax:
    content: public FileBasedProject(ProjectInfo projectInfo, ProjectTemplateReference templateReference)
    parameters:
    - id: projectInfo
      type: Sdl.ProjectAutomation.Core.ProjectInfo
      description: Properties to use when creating the project.
    - id: templateReference
      type: Sdl.ProjectAutomation.Core.ProjectTemplateReference
      description: The project template to base this new project on.
    content.vb: Public Sub New(projectInfo As ProjectInfo, templateReference As ProjectTemplateReference)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">projectInfo</code> or <code data-dev-comment-type="paramref" class="paramref">templateReference</code> is <code>null</code>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">projectInfo</code> is invalid.
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">templateReference</code> does not exist.
  - type: Sdl.ProjectAutomation.Core.ProjectAutomationException
    commentId: T:Sdl.ProjectAutomation.Core.ProjectAutomationException
    description: Thrown when the template could not be loaded.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor(Sdl.ProjectAutomation.Core.ProjectInfo,Sdl.ProjectAutomation.Core.ProjectReference)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor(Sdl.ProjectAutomation.Core.ProjectInfo,Sdl.ProjectAutomation.Core.ProjectReference)
  id: '#ctor(Sdl.ProjectAutomation.Core.ProjectInfo,Sdl.ProjectAutomation.Core.ProjectReference)'
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: FileBasedProject(ProjectInfo, ProjectReference)
  nameWithType: FileBasedProject.FileBasedProject(ProjectInfo, ProjectReference)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.FileBasedProject(Sdl.ProjectAutomation.Core.ProjectInfo, Sdl.ProjectAutomation.Core.ProjectReference)
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nCreates a new project based on an existing project.\n"
  syntax:
    content: public FileBasedProject(ProjectInfo projectInfo, ProjectReference projectReference)
    parameters:
    - id: projectInfo
      type: Sdl.ProjectAutomation.Core.ProjectInfo
      description: Properties to use when creating the project.
    - id: projectReference
      type: Sdl.ProjectAutomation.Core.ProjectReference
      description: The existing project to base this new project on.
    content.vb: Public Sub New(projectInfo As ProjectInfo, projectReference As ProjectReference)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">projectInfo</code> or <code data-dev-comment-type="paramref" class="paramref">projectReference</code> is <code>null</code>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">projectInfo</code> is invalid.
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">projectReference</code> does not exist.
  - type: Sdl.ProjectAutomation.Core.ProjectAutomationException
    commentId: T:Sdl.ProjectAutomation.Core.ProjectAutomationException
    description: Thrown when the reference project could not be loaded.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.Save
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.Save
  id: Save
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: FileBasedProject.Save()
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.Save()
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nPersists the project file. The file has extension .sdlproj and is located in the folder given by <xref href=\"Sdl.ProjectAutomation.Core.ProjectInfo.LocalProjectFolder\" data-throw-if-not-resolved=\"false\"></xref>.\nThe project file path can be obtained using <xref href=\"Sdl.ProjectAutomation.FileBased.FileBasedProject.FilePath\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "It is recommended to regularly save the project, for example after making a set of changes \nand after running a task."
  syntax:
    content: public void Save()
    content.vb: Public Sub Save
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.Save*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.Save
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTasks(System.Guid[],System.String[],System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTasks(System.Guid[],System.String[],System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  id: RunAutomaticTasks(System.Guid[],System.String[],System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: RunAutomaticTasks(Guid[], String[], EventHandler<TaskStatusEventArgs>, EventHandler<TaskMessageEventArgs>)
  nameWithType: FileBasedProject.RunAutomaticTasks(Guid[], String[], EventHandler<TaskStatusEventArgs>, EventHandler<TaskMessageEventArgs>)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTasks(System.Guid[], System.String[], System.EventHandler<Sdl.ProjectAutomation.Core.TaskStatusEventArgs>, System.EventHandler<Sdl.ProjectAutomation.Core.TaskMessageEventArgs>)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nRuns a sequence of automatic tasks on a set of project files. This can be more efficient than running tasks\nindividually using <xref href=\"Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTask(System.Guid%5b%5d%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>, because content processing tasks can \nbe executed in parallel. See the comments on <xref href=\"Sdl.ProjectAutomation.Core.AutomaticTaskTemplateIds.AnalyzeFiles\" data-throw-if-not-resolved=\"false\"></xref> for more details.\n"
  syntax:
    content: public TaskSequence RunAutomaticTasks(Guid[] projectFileIds, string[] taskTemplateIds, EventHandler<TaskStatusEventArgs> statusEventHandler, EventHandler<TaskMessageEventArgs> messageEventHandler)
    parameters:
    - id: projectFileIds
      type: System.Guid[]
      description: The files to run the task on.
    - id: taskTemplateIds
      type: System.String[]
      description: The IDs of the task templates (i.e. the types of task) to run.
    - id: statusEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs}
      description: Event handler for task status events.
    - id: messageEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs}
      description: Event handler for message events.
    return:
      type: Sdl.ProjectAutomation.Core.TaskSequence
      description: Information about the sequence of tasks that has been run.
    content.vb: Public Function RunAutomaticTasks(projectFileIds As Guid(), taskTemplateIds As String(), statusEventHandler As EventHandler(Of TaskStatusEventArgs), messageEventHandler As EventHandler(Of TaskMessageEventArgs)) As TaskSequence
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTasks*
  nameWithType.vb: FileBasedProject.RunAutomaticTasks(Guid(), String(), EventHandler(Of TaskStatusEventArgs), EventHandler(Of TaskMessageEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTasks(System.Guid(), System.String(), System.EventHandler(Of Sdl.ProjectAutomation.Core.TaskStatusEventArgs), System.EventHandler(Of Sdl.ProjectAutomation.Core.TaskMessageEventArgs))
  name.vb: RunAutomaticTasks(Guid(), String(), EventHandler(Of TaskStatusEventArgs), EventHandler(Of TaskMessageEventArgs))
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunDefaultTaskSequence(System.Guid[])
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.RunDefaultTaskSequence(System.Guid[])
  id: RunDefaultTaskSequence(System.Guid[])
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: RunDefaultTaskSequence(Guid[])
  nameWithType: FileBasedProject.RunDefaultTaskSequence(Guid[])
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunDefaultTaskSequence(System.Guid[])
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nRuns the default task sequence of automatic tasks on a set of project files. \n"
  syntax:
    content: public TaskSequence RunDefaultTaskSequence(Guid[] projectFileIds)
    parameters:
    - id: projectFileIds
      type: System.Guid[]
      description: The files to run the task on.
    return:
      type: Sdl.ProjectAutomation.Core.TaskSequence
      description: Information about the sequence of tasks that has been run.
    content.vb: Public Function RunDefaultTaskSequence(projectFileIds As Guid()) As TaskSequence
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunDefaultTaskSequence*
  nameWithType.vb: FileBasedProject.RunDefaultTaskSequence(Guid())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunDefaultTaskSequence(System.Guid())
  name.vb: RunDefaultTaskSequence(Guid())
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunDefaultTaskSequence(System.Guid[],System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.RunDefaultTaskSequence(System.Guid[],System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  id: RunDefaultTaskSequence(System.Guid[],System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: RunDefaultTaskSequence(Guid[], EventHandler<TaskStatusEventArgs>, EventHandler<TaskMessageEventArgs>)
  nameWithType: FileBasedProject.RunDefaultTaskSequence(Guid[], EventHandler<TaskStatusEventArgs>, EventHandler<TaskMessageEventArgs>)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunDefaultTaskSequence(System.Guid[], System.EventHandler<Sdl.ProjectAutomation.Core.TaskStatusEventArgs>, System.EventHandler<Sdl.ProjectAutomation.Core.TaskMessageEventArgs>)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nRuns the default task sequence of automatic tasks on a set of project files. \n"
  syntax:
    content: public TaskSequence RunDefaultTaskSequence(Guid[] projectFileIds, EventHandler<TaskStatusEventArgs> statusEventHandler, EventHandler<TaskMessageEventArgs> messageEventHandler)
    parameters:
    - id: projectFileIds
      type: System.Guid[]
      description: The files to run the task on.
    - id: statusEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs}
      description: Event handler for task status events.
    - id: messageEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs}
      description: Event handler for message events.
    return:
      type: Sdl.ProjectAutomation.Core.TaskSequence
      description: Information about the sequence of tasks that has been run.
    content.vb: Public Function RunDefaultTaskSequence(projectFileIds As Guid(), statusEventHandler As EventHandler(Of TaskStatusEventArgs), messageEventHandler As EventHandler(Of TaskMessageEventArgs)) As TaskSequence
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunDefaultTaskSequence*
  nameWithType.vb: FileBasedProject.RunDefaultTaskSequence(Guid(), EventHandler(Of TaskStatusEventArgs), EventHandler(Of TaskMessageEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunDefaultTaskSequence(System.Guid(), System.EventHandler(Of Sdl.ProjectAutomation.Core.TaskStatusEventArgs), System.EventHandler(Of Sdl.ProjectAutomation.Core.TaskMessageEventArgs))
  name.vb: RunDefaultTaskSequence(Guid(), EventHandler(Of TaskStatusEventArgs), EventHandler(Of TaskMessageEventArgs))
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTasks(System.Guid[],System.String[])
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTasks(System.Guid[],System.String[])
  id: RunAutomaticTasks(System.Guid[],System.String[])
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: RunAutomaticTasks(Guid[], String[])
  nameWithType: FileBasedProject.RunAutomaticTasks(Guid[], String[])
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTasks(System.Guid[], System.String[])
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nRuns a sequence of automatic tasks on a set of project files. This can be more efficient than running tasks\nindividually using <xref href=\"Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTask(System.Guid%5b%5d%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>, because content processing tasks can \nbe executed in parallel. See the comments on <xref href=\"Sdl.ProjectAutomation.Core.AutomaticTaskTemplateIds.AnalyzeFiles\" data-throw-if-not-resolved=\"false\"></xref> for more details.\n"
  syntax:
    content: public TaskSequence RunAutomaticTasks(Guid[] projectFileIds, string[] taskTemplateIds)
    parameters:
    - id: projectFileIds
      type: System.Guid[]
      description: The files to run the task on.
    - id: taskTemplateIds
      type: System.String[]
      description: The IDs of the task templates (i.e. the types of task) to run.
    return:
      type: Sdl.ProjectAutomation.Core.TaskSequence
      description: Information about the sequence of tasks that has been run.
    content.vb: Public Function RunAutomaticTasks(projectFileIds As Guid(), taskTemplateIds As String()) As TaskSequence
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTasks*
  nameWithType.vb: FileBasedProject.RunAutomaticTasks(Guid(), String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTasks(System.Guid(), System.String())
  name.vb: RunAutomaticTasks(Guid(), String())
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectInfo
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectInfo
  id: GetProjectInfo
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: GetProjectInfo()
  nameWithType: FileBasedProject.GetProjectInfo()
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectInfo()
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nRetrieves information about the project\n"
  syntax:
    content: public ProjectInfo GetProjectInfo()
    return:
      type: Sdl.ProjectAutomation.Core.ProjectInfo
      description: A <xref href="Sdl.ProjectAutomation.Core.ProjectInfo" data-throw-if-not-resolved="false"></xref> object that contains information about this project.
    content.vb: Public Function GetProjectInfo As ProjectInfo
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectInfo*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.GetProjectInfo
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateProject(Sdl.ProjectAutomation.Core.ProjectInfo)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateProject(Sdl.ProjectAutomation.Core.ProjectInfo)
  id: UpdateProject(Sdl.ProjectAutomation.Core.ProjectInfo)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: UpdateProject(ProjectInfo)
  nameWithType: FileBasedProject.UpdateProject(ProjectInfo)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateProject(Sdl.ProjectAutomation.Core.ProjectInfo)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nUpdates the project with the new information contained in <code data-dev-comment-type=\"paramref\" class=\"paramref\">projectInfo</code>.\n"
  remarks: "\nIt is only valid to update certain properties. See the comments in <xref href=\"Sdl.ProjectAutomation.Core.ProjectInfo\" data-throw-if-not-resolved=\"false\"></xref> properties for more details.\nIt is recommended to first obtain a <xref href=\"Sdl.ProjectAutomation.Core.ProjectInfo\" data-throw-if-not-resolved=\"false\"></xref> object using <xref href=\"Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectInfo\" data-throw-if-not-resolved=\"false\"></xref>, then modify its\nproperties before passing into this update method.\n"
  syntax:
    content: public ProjectInfo UpdateProject(ProjectInfo projectInfo)
    parameters:
    - id: projectInfo
      type: Sdl.ProjectAutomation.Core.ProjectInfo
      description: A  object.
    return:
      type: Sdl.ProjectAutomation.Core.ProjectInfo
      description: The updated project information.
    content.vb: Public Function UpdateProject(projectInfo As ProjectInfo) As ProjectInfo
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateProject*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.UpdateProject(Sdl.ProjectAutomation.Core.ProjectInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTranslationProviderConfiguration
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTranslationProviderConfiguration
  id: GetTranslationProviderConfiguration
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: GetTranslationProviderConfiguration()
  nameWithType: FileBasedProject.GetTranslationProviderConfiguration()
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTranslationProviderConfiguration()
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nGets the translation provider configuration for this project.\n"
  remarks: "\nThe translation provider configuration overridden for a specific target language\n(see <xref href=\"Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)\" data-throw-if-not-resolved=\"false\"></xref>)\nand <xref href=\"Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language%2cSdl.ProjectAutomation.Core.TranslationProviderConfiguration)\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  syntax:
    content: public TranslationProviderConfiguration GetTranslationProviderConfiguration()
    return:
      type: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
      description: "\nThe translation provider configuration. This never returns <code>null</code>.\n"
    content.vb: Public Function GetTranslationProviderConfiguration As TranslationProviderConfiguration
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTranslationProviderConfiguration*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)
  id: GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: GetTranslationProviderConfiguration(Language)
  nameWithType: FileBasedProject.GetTranslationProviderConfiguration(Language)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nGets the translation provider configuration for the specified target language. If no specific configuration has been specified for the specified target language,\nthis method returns an empty (not <code>null</code>!) configuration.\n"
  syntax:
    content: public TranslationProviderConfiguration GetTranslationProviderConfiguration(Language targetLanguage)
    parameters:
    - id: targetLanguage
      type: Sdl.Core.Globalization.Language
      description: The target language for which to get the translation provider configuration.
    return:
      type: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
      description: "\nThe translation provider configuration for the specified target language. This never returns <code>null</code>.\n"
    content.vb: Public Function GetTranslationProviderConfiguration(targetLanguage As Language) As TranslationProviderConfiguration
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTranslationProviderConfiguration*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  id: UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: UpdateTranslationProviderConfiguration(TranslationProviderConfiguration)
  nameWithType: FileBasedProject.UpdateTranslationProviderConfiguration(TranslationProviderConfiguration)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nUpdates the project-wide translation provider configuration.\n"
  syntax:
    content: public void UpdateTranslationProviderConfiguration(TranslationProviderConfiguration translationProviderConfiguration)
    parameters:
    - id: translationProviderConfiguration
      type: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
      description: >-
        The translation provider configuration. Note that the project-wide configuration might have been

        overridden for one or more specific project target languages (see <xref href="Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language%2cSdl.ProjectAutomation.Core.TranslationProviderConfiguration)" data-throw-if-not-resolved="false"></xref>). The project-wide configuration will not be used for these target languages.
    content.vb: Public Sub UpdateTranslationProviderConfiguration(translationProviderConfiguration As TranslationProviderConfiguration)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTranslationProviderConfiguration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">translationProviderConfiguration</code> is <code>null</code>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">translationProviderConfiguration</code> is invalid. See <xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration" data-throw-if-not-resolved="false"></xref> for more information.
  implements:
  - Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddMasterTM(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration,System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.AddMasterTM(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration,System.String)
  id: AddMasterTM(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration,System.String)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: AddMasterTM(TranslationProviderConfiguration, String)
  nameWithType: FileBasedProject.AddMasterTM(TranslationProviderConfiguration, String)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddMasterTM(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nSet master tm for target language\n"
  syntax:
    content: public void AddMasterTM(TranslationProviderConfiguration translationProviderConfiguration, string targetIso)
    parameters:
    - id: translationProviderConfiguration
      type: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
    - id: targetIso
      type: System.String
    content.vb: Public Sub AddMasterTM(translationProviderConfiguration As TranslationProviderConfiguration, targetIso As String)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddMasterTM*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language,Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language,Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  id: UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language,Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: UpdateTranslationProviderConfiguration(Language, TranslationProviderConfiguration)
  nameWithType: FileBasedProject.UpdateTranslationProviderConfiguration(Language, TranslationProviderConfiguration)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language, Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nUpdates the translation provider configuration for a specific project target language.\n"
  syntax:
    content: public void UpdateTranslationProviderConfiguration(Language targetLanguage, TranslationProviderConfiguration translationProviderConfiguration)
    parameters:
    - id: targetLanguage
      type: Sdl.Core.Globalization.Language
      description: The project target language for which to update the configuration.
    - id: translationProviderConfiguration
      type: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
      description: >-
        The translation provider configuration. Note that you need to set

        <xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration.OverrideParent" data-throw-if-not-resolved="false"></xref> to <pre><code>true</code></pre> in order for the configuration to be used. If this is

        set to <pre><code>false</code></pre>, the project-wide translation provider configuration will be used instead (<xref href="Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTranslationProviderConfiguration" data-throw-if-not-resolved="false"></xref>).
    content.vb: Public Sub UpdateTranslationProviderConfiguration(targetLanguage As Language, translationProviderConfiguration As TranslationProviderConfiguration)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTranslationProviderConfiguration*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">targetLanguage</code> is <code>null</code>, invalid or not one of the project target languages.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">translationProviderConfiguration</code> is <code>null</code>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">translationProviderConfiguration</code> is invalid. See <xref href="Sdl.ProjectAutomation.Core.TranslationProviderConfiguration" data-throw-if-not-resolved="false"></xref> for more information.
  implements:
  - Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language,Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTermbaseConfiguration(System.Boolean)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTermbaseConfiguration(System.Boolean)
  id: GetTermbaseConfiguration(System.Boolean)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: GetTermbaseConfiguration(Boolean)
  nameWithType: FileBasedProject.GetTermbaseConfiguration(Boolean)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTermbaseConfiguration(System.Boolean)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nRetrieves all termbase-related settings that are associated with this project.\n"
  syntax:
    content: public TermbaseConfiguration GetTermbaseConfiguration(bool obtainCopy = false)
    parameters:
    - id: obtainCopy
      type: System.Boolean
    return:
      type: Sdl.ProjectAutomation.Core.TermbaseConfiguration
      description: A <xref href="Sdl.ProjectAutomation.Core.TermbaseConfiguration" data-throw-if-not-resolved="false"></xref> object containing all termbase-related configuration for this project.
    content.vb: Public Function GetTermbaseConfiguration(obtainCopy As Boolean = False) As TermbaseConfiguration
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTermbaseConfiguration*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.GetTermbaseConfiguration(System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTermbaseConfiguration(Sdl.ProjectAutomation.Core.TermbaseConfiguration)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTermbaseConfiguration(Sdl.ProjectAutomation.Core.TermbaseConfiguration)
  id: UpdateTermbaseConfiguration(Sdl.ProjectAutomation.Core.TermbaseConfiguration)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: UpdateTermbaseConfiguration(TermbaseConfiguration)
  nameWithType: FileBasedProject.UpdateTermbaseConfiguration(TermbaseConfiguration)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTermbaseConfiguration(Sdl.ProjectAutomation.Core.TermbaseConfiguration)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nUpdates the termbase-related settings for this project.\n"
  syntax:
    content: public void UpdateTermbaseConfiguration(TermbaseConfiguration termbaseConfiguration)
    parameters:
    - id: termbaseConfiguration
      type: Sdl.ProjectAutomation.Core.TermbaseConfiguration
      description: >-
        A <xref href="Sdl.ProjectAutomation.Core.TermbaseConfiguration" data-throw-if-not-resolved="false"></xref> object containing all termbase-related configuration for this project.

        This can either be newly created termbase configuration object or one that was retrieved via <xref href="Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTermbaseConfiguration(System.Boolean)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub UpdateTermbaseConfiguration(termbaseConfiguration As TermbaseConfiguration)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTermbaseConfiguration*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.UpdateTermbaseConfiguration(Sdl.ProjectAutomation.Core.TermbaseConfiguration)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSettings
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSettings
  id: GetSettings
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: GetSettings()
  nameWithType: FileBasedProject.GetSettings()
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSettings()
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nGets the project-level settings.\n"
  remarks: >
    Project settings can be overridden for a specific target language using <xref href="Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateSettings(Sdl.Core.Globalization.Language%2cSdl.Core.Settings.ISettingsBundle)" data-throw-if-not-resolved="false"></xref>.

    The override mechanism works on an individual setting level, not on a settings bundle or group level. This means that any setting

    that is not specifically defined/overridden on the target language level will be inherited from the project-level settings.
  syntax:
    content: public ISettingsBundle GetSettings()
    return:
      type: Sdl.Core.Settings.ISettingsBundle
      description: "\nA settings bundle containing the project settings. Never returns <code>null</code>.\n"
    content.vb: Public Function GetSettings As ISettingsBundle
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSettings*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.GetSettings
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSettings(Sdl.Core.Globalization.Language)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSettings(Sdl.Core.Globalization.Language)
  id: GetSettings(Sdl.Core.Globalization.Language)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: GetSettings(Language)
  nameWithType: FileBasedProject.GetSettings(Language)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSettings(Sdl.Core.Globalization.Language)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nGets the settings for a specific target language.\n"
  remarks: >
    Target language settings override settings specified on the project level (see <xref href="Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSettings" data-throw-if-not-resolved="false"></xref>.

    The override mechanism works on an individual setting level, not on a settings bundle or group level. This means that any setting

    that is not specifically defined/overridden on the target language level will be inherited from the project-level settings.
  syntax:
    content: public ISettingsBundle GetSettings(Language targetLanguage)
    parameters:
    - id: targetLanguage
      type: Sdl.Core.Globalization.Language
      description: The project target language for which to retrieve the settings.
    return:
      type: Sdl.Core.Settings.ISettingsBundle
      description: "\nA settings bundle containing the target language specific settings. The settings bundle returned will have a parent\nsettings bundle which represent the current project settings. Never returns <code>null</code>.\n"
    content.vb: Public Function GetSettings(targetLanguage As Language) As ISettingsBundle
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSettings*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">targetLanguage</code> is <code>null</code> or invalid.
  implements:
  - Sdl.ProjectAutomation.Core.IProject.GetSettings(Sdl.Core.Globalization.Language)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateSettings(Sdl.Core.Settings.ISettingsBundle)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateSettings(Sdl.Core.Settings.ISettingsBundle)
  id: UpdateSettings(Sdl.Core.Settings.ISettingsBundle)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: UpdateSettings(ISettingsBundle)
  nameWithType: FileBasedProject.UpdateSettings(ISettingsBundle)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateSettings(Sdl.Core.Settings.ISettingsBundle)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nUpdates the project-level settings.\n"
  remarks: "\n<p>The project settings will be completely replaced with the specified settings, so any settings not present in\nthe updated settings bundle will revert to their defaults.</p>\n<p>You can also override settings for a specific target language. See <xref href=\"Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateSettings(Sdl.Core.Globalization.Language%2cSdl.Core.Settings.ISettingsBundle)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void UpdateSettings(ISettingsBundle settings)
    parameters:
    - id: settings
      type: Sdl.Core.Settings.ISettingsBundle
      description: A settings bundle object containing the new project settings.
    content.vb: Public Sub UpdateSettings(settings As ISettingsBundle)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateSettings*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code data-dev-comment-type="paramref" class="paramref">settings</code> is <code>null</code>.
  implements:
  - Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Settings.ISettingsBundle)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateSettings(Sdl.Core.Globalization.Language,Sdl.Core.Settings.ISettingsBundle)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateSettings(Sdl.Core.Globalization.Language,Sdl.Core.Settings.ISettingsBundle)
  id: UpdateSettings(Sdl.Core.Globalization.Language,Sdl.Core.Settings.ISettingsBundle)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: UpdateSettings(Language, ISettingsBundle)
  nameWithType: FileBasedProject.UpdateSettings(Language, ISettingsBundle)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateSettings(Sdl.Core.Globalization.Language, Sdl.Core.Settings.ISettingsBundle)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nUpdates the settings for a specific target language.\n"
  remarks: "\nNote that this method will only update the target-language settings. If you have changed the parent project-level\nsettings too, thee need to be updated with a separate call to <xref href=\"Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateSettings(Sdl.Core.Settings.ISettingsBundle)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public void UpdateSettings(Language targetLanguage, ISettingsBundle settings)
    parameters:
    - id: targetLanguage
      type: Sdl.Core.Globalization.Language
      description: The target language for which to update the settings.
    - id: settings
      type: Sdl.Core.Settings.ISettingsBundle
      description: A settings bundle representing the new target language settings.
    content.vb: Public Sub UpdateSettings(targetLanguage As Language, settings As ISettingsBundle)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateSettings*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">targetLanguage</code> is <code>null</code> or invalid.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code data-dev-comment-type="paramref" class="paramref">settings</code> is <code>null</code>.
  implements:
  - Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Globalization.Language,Sdl.Core.Settings.ISettingsBundle)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectStatistics
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectStatistics
  id: GetProjectStatistics
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: GetProjectStatistics()
  nameWithType: FileBasedProject.GetProjectStatistics()
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectStatistics()
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nGets the aggregated analysis, word count and confirmation statistics for all the files in the project.\nThis will not actually compute the statistics, but just return a snapshot of the statistics that where most recently computed.\nTo update the statistics, run the relevant task: <xref href=\"Sdl.ProjectAutomation.Core.AutomaticTaskTemplateIds.WordCount\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Sdl.ProjectAutomation.Core.AutomaticTaskTemplateIds.AnalyzeFiles\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Sdl.ProjectAutomation.Core.AutomaticTaskTemplateIds.TranslationCount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public ProjectStatistics GetProjectStatistics()
    return:
      type: Sdl.ProjectAutomation.Core.ProjectStatistics
      description: "\nThe aggregated analysis, word count and confirmation statistics for all the files in the project.\n"
    content.vb: Public Function GetProjectStatistics As ProjectStatistics
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectStatistics*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.GetProjectStatistics
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSourceLanguageFiles
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSourceLanguageFiles
  id: GetSourceLanguageFiles
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: GetSourceLanguageFiles()
  nameWithType: FileBasedProject.GetSourceLanguageFiles()
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSourceLanguageFiles()
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nRetrieves all source language files.\n"
  syntax:
    content: public ProjectFile[] GetSourceLanguageFiles()
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile[]
      description: All the source language files in this project.
    content.vb: Public Function GetSourceLanguageFiles As ProjectFile()
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSourceLanguageFiles*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.GetSourceLanguageFiles
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTargetLanguageFiles(Sdl.Core.Globalization.Language)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTargetLanguageFiles(Sdl.Core.Globalization.Language)
  id: GetTargetLanguageFiles(Sdl.Core.Globalization.Language)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: GetTargetLanguageFiles(Language)
  nameWithType: FileBasedProject.GetTargetLanguageFiles(Language)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTargetLanguageFiles(Sdl.Core.Globalization.Language)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nRetrieves all files for the specified target language.\n"
  remarks: >-
    For merged files (<xref href="Sdl.ProjectAutomation.Core.MergedProjectFile" data-throw-if-not-resolved="false"></xref>) with

    merge state <xref href="Sdl.ProjectAutomation.Core.MergeState.NotMerged" data-throw-if-not-resolved="false"></xref> or <xref href="Sdl.ProjectAutomation.Core.MergeState.Merged" data-throw-if-not-resolved="false"></xref> the merged file will be returned from this method, but not the child files.

    When the merge state is <xref href="Sdl.ProjectAutomation.Core.MergeState.Split" data-throw-if-not-resolved="false"></xref>, only the child files are returned, not the merged file.
  syntax:
    content: public ProjectFile[] GetTargetLanguageFiles(Language targetLanguage)
    parameters:
    - id: targetLanguage
      type: Sdl.Core.Globalization.Language
      description: The target language to retrieve files for.
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile[]
      description: An array of <xref href="Sdl.ProjectAutomation.Core.ProjectFile" data-throw-if-not-resolved="false"></xref> objects, representing all the files in this project with the specified target language.
    content.vb: Public Function GetTargetLanguageFiles(targetLanguage As Language) As ProjectFile()
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTargetLanguageFiles*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles(Sdl.Core.Globalization.Language)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTargetLanguageFiles
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTargetLanguageFiles
  id: GetTargetLanguageFiles
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: GetTargetLanguageFiles()
  nameWithType: FileBasedProject.GetTargetLanguageFiles()
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTargetLanguageFiles()
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nRetrieves all target language files.\n"
  remarks: >-
    For merged files (<xref href="Sdl.ProjectAutomation.Core.MergedProjectFile" data-throw-if-not-resolved="false"></xref>) with

    merge state <xref href="Sdl.ProjectAutomation.Core.MergeState.NotMerged" data-throw-if-not-resolved="false"></xref> or <xref href="Sdl.ProjectAutomation.Core.MergeState.Merged" data-throw-if-not-resolved="false"></xref> the merged file will be returned from this method, but not the child files.

    When the merge state is <xref href="Sdl.ProjectAutomation.Core.MergeState.Split" data-throw-if-not-resolved="false"></xref>, only the child files are returned, not the merged file.
  syntax:
    content: public ProjectFile[] GetTargetLanguageFiles()
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile[]
      description: An array of <xref href="Sdl.ProjectAutomation.Core.ProjectFile" data-throw-if-not-resolved="false"></xref> objects, representing all the target language files in this project.
    content.vb: Public Function GetTargetLanguageFiles As ProjectFile()
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTargetLanguageFiles*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping[])
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping[])
  id: AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping[])
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: AddBilingualReferenceFiles(BilingualFileMapping[])
  nameWithType: FileBasedProject.AddBilingualReferenceFiles(BilingualFileMapping[])
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping[])
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nAssociates bilingual reference files (previously translated versions) to project files using an array of BilingualFileMapping objects \n"
  syntax:
    content: public void AddBilingualReferenceFiles(BilingualFileMapping[] mappings)
    parameters:
    - id: mappings
      type: Sdl.ProjectAutomation.Core.BilingualFileMapping[]
    content.vb: Public Sub AddBilingualReferenceFiles(mappings As BilingualFileMapping())
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFiles*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping[])
  nameWithType.vb: FileBasedProject.AddBilingualReferenceFiles(BilingualFileMapping())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping())
  name.vb: AddBilingualReferenceFiles(BilingualFileMapping())
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFile(Sdl.ProjectAutomation.Core.BilingualFileMapping)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFile(Sdl.ProjectAutomation.Core.BilingualFileMapping)
  id: AddBilingualReferenceFile(Sdl.ProjectAutomation.Core.BilingualFileMapping)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: AddBilingualReferenceFile(BilingualFileMapping)
  nameWithType: FileBasedProject.AddBilingualReferenceFile(BilingualFileMapping)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFile(Sdl.ProjectAutomation.Core.BilingualFileMapping)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nAssociates a bilingual reference file (previously translated version) to a file in the project using a BilingualFileMapping \n"
  syntax:
    content: public void AddBilingualReferenceFile(BilingualFileMapping mapping)
    parameters:
    - id: mapping
      type: Sdl.ProjectAutomation.Core.BilingualFileMapping
    content.vb: Public Sub AddBilingualReferenceFile(mapping As BilingualFileMapping)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFile*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFile(Sdl.ProjectAutomation.Core.BilingualFileMapping)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFile(System.Guid,System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFile(System.Guid,System.String)
  id: AddBilingualReferenceFile(System.Guid,System.String)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: AddBilingualReferenceFile(Guid, String)
  nameWithType: FileBasedProject.AddBilingualReferenceFile(Guid, String)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFile(System.Guid, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nAssociates a bilingual reference file (previously translated version) to a file in the project.\n"
  syntax:
    content: public void AddBilingualReferenceFile(Guid projectFileId, string fileToAdd)
    parameters:
    - id: projectFileId
      type: System.Guid
      description: File Id of the file in the project to associate the bilingual file with.
    - id: fileToAdd
      type: System.String
      description: Absolute path including file name of the bilingual file.
    content.vb: Public Sub AddBilingualReferenceFile(projectFileId As Guid, fileToAdd As String)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.RemoveBilingualReferenceFile(System.Guid)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.RemoveBilingualReferenceFile(System.Guid)
  id: RemoveBilingualReferenceFile(System.Guid)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: RemoveBilingualReferenceFile(Guid)
  nameWithType: FileBasedProject.RemoveBilingualReferenceFile(Guid)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.RemoveBilingualReferenceFile(System.Guid)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nRemoves a bilingual reference file (previously translated version) from a project file\n"
  syntax:
    content: public void RemoveBilingualReferenceFile(Guid projectFileId)
    parameters:
    - id: projectFileId
      type: System.Guid
      description: File Id of the file in the project to remove the bilingual file from.
    content.vb: Public Sub RemoveBilingualReferenceFile(projectFileId As Guid)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.RemoveBilingualReferenceFile*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.RemoveBilingualReferenceFile(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFile(System.Guid)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFile(System.Guid)
  id: GetFile(System.Guid)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: GetFile(Guid)
  nameWithType: FileBasedProject.GetFile(Guid)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFile(System.Guid)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nGets the file.\n"
  syntax:
    content: public ProjectFile GetFile(Guid fileId)
    parameters:
    - id: fileId
      type: System.Guid
      description: The file id.
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile
      description: A <xref href="Sdl.ProjectAutomation.Core.ProjectFile" data-throw-if-not-resolved="false"></xref> object, representing the project file.
    content.vb: Public Function GetFile(fileId As Guid) As ProjectFile
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFile*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.GetFile(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFiles(System.Guid[])
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFiles(System.Guid[])
  id: GetFiles(System.Guid[])
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: GetFiles(Guid[])
  nameWithType: FileBasedProject.GetFiles(Guid[])
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFiles(System.Guid[])
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nGets an array of files from an array of file ids.\n"
  syntax:
    content: public ProjectFile[] GetFiles(Guid[] fileIds)
    parameters:
    - id: fileIds
      type: System.Guid[]
      description: The array containing the fileIds.
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile[]
      description: An array of <xref href="Sdl.ProjectAutomation.Core.ProjectFile" data-throw-if-not-resolved="false"></xref> objects, representing the project files.
    content.vb: Public Function GetFiles(fileIds As Guid()) As ProjectFile()
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFiles*
  nameWithType.vb: FileBasedProject.GetFiles(Guid())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFiles(System.Guid())
  name.vb: GetFiles(Guid())
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.SetFileRole(System.Guid[],Sdl.ProjectAutomation.Core.FileRole)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.SetFileRole(System.Guid[],Sdl.ProjectAutomation.Core.FileRole)
  id: SetFileRole(System.Guid[],Sdl.ProjectAutomation.Core.FileRole)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: SetFileRole(Guid[], FileRole)
  nameWithType: FileBasedProject.SetFileRole(Guid[], FileRole)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.SetFileRole(System.Guid[], Sdl.ProjectAutomation.Core.FileRole)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nChanges the role of the file. A Scan task (<xref href=\"Sdl.ProjectAutomation.Core.AutomaticTaskTemplateIds.Scan\" data-throw-if-not-resolved=\"false\"></xref>) should be run after \nchanging the file role in this way.\n"
  syntax:
    content: public void SetFileRole(Guid[] projectFileIds, FileRole fileRole)
    parameters:
    - id: projectFileIds
      type: System.Guid[]
      description: The IDs of the project files.
    - id: fileRole
      type: Sdl.ProjectAutomation.Core.FileRole
      description: The new <xref href="Sdl.ProjectAutomation.Core.FileRole" data-throw-if-not-resolved="false"></xref> value.
    content.vb: Public Sub SetFileRole(projectFileIds As Guid(), fileRole As FileRole)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.SetFileRole*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.SetFileRole(System.Guid[],Sdl.ProjectAutomation.Core.FileRole)
  nameWithType.vb: FileBasedProject.SetFileRole(Guid(), FileRole)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.SetFileRole(System.Guid(), Sdl.ProjectAutomation.Core.FileRole)
  name.vb: SetFileRole(Guid(), FileRole)
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFiles(System.String[])
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFiles(System.String[])
  id: AddFiles(System.String[])
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: AddFiles(String[])
  nameWithType: FileBasedProject.AddFiles(String[])
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFiles(System.String[])
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nAdds a set of files into the project, in the root folder.\n"
  syntax:
    content: public ProjectFile[] AddFiles(string[] filePaths)
    parameters:
    - id: filePaths
      type: System.String[]
      description: The paths of the files to add. These should be absolute paths.
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile[]
      description: The added files
    content.vb: Public Function AddFiles(filePaths As String()) As ProjectFile()
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFiles*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[])
  nameWithType.vb: FileBasedProject.AddFiles(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFiles(System.String())
  name.vb: AddFiles(String())
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFiles(System.String[],System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFiles(System.String[],System.String)
  id: AddFiles(System.String[],System.String)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: AddFiles(String[], String)
  nameWithType: FileBasedProject.AddFiles(String[], String)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFiles(System.String[], System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nAdds a set of files into the project, below a specified project folder.\n"
  syntax:
    content: public ProjectFile[] AddFiles(string[] filePaths, string folderPathInProject)
    parameters:
    - id: filePaths
      type: System.String[]
      description: The paths of the files to add. These should be absolute paths.
    - id: folderPathInProject
      type: System.String
      description: >-
        The folder in this project below which the files should be added.

        If empty the files will be in the project root folder.
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile[]
      description: The added files
    content.vb: Public Function AddFiles(filePaths As String(), folderPathInProject As String) As ProjectFile()
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFiles*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[],System.String)
  nameWithType.vb: FileBasedProject.AddFiles(String(), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFiles(System.String(), System.String)
  name.vb: AddFiles(String(), String)
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFolderWithFiles(System.String,System.Boolean)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFolderWithFiles(System.String,System.Boolean)
  id: AddFolderWithFiles(System.String,System.Boolean)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: AddFolderWithFiles(String, Boolean)
  nameWithType: FileBasedProject.AddFolderWithFiles(String, Boolean)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFolderWithFiles(System.String, System.Boolean)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nAdds all the files from a folder into the project, in the root folder\n"
  syntax:
    content: public ProjectFile[] AddFolderWithFiles(string localFolderPath, bool recursive)
    parameters:
    - id: localFolderPath
      type: System.String
      description: The absolute path of the folder containing the files to add.
    - id: recursive
      type: System.Boolean
      description: If <code>true</code>, files in sub folders will also be added. The relative folder structure is preserved in the project.
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile[]
      description: The added files
    content.vb: Public Function AddFolderWithFiles(localFolderPath As String, recursive As Boolean) As ProjectFile()
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFolderWithFiles*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFolderWithFiles(System.String,System.String,System.Boolean)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFolderWithFiles(System.String,System.String,System.Boolean)
  id: AddFolderWithFiles(System.String,System.String,System.Boolean)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: AddFolderWithFiles(String, String, Boolean)
  nameWithType: FileBasedProject.AddFolderWithFiles(String, String, Boolean)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFolderWithFiles(System.String, System.String, System.Boolean)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nAdds all the files from a folder into the project, below a specified project folder.\n"
  syntax:
    content: public ProjectFile[] AddFolderWithFiles(string localFolderPath, string folderPathInProject, bool recursive)
    parameters:
    - id: localFolderPath
      type: System.String
      description: The absolute path of the folder containing the files to add.
    - id: folderPathInProject
      type: System.String
      description: >-
        The folder in this project below which the files should be added.

        If empty the files will be in the project root folder.
    - id: recursive
      type: System.Boolean
      description: If <code>true</code>, files in sub folders will also be added. The relative folder structure is preserved in the project.
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile[]
      description: The added files
    content.vb: Public Function AddFolderWithFiles(localFolderPath As String, folderPathInProject As String, recursive As Boolean) As ProjectFile()
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFolderWithFiles*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String,System.String,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddNewFileVersion(System.Guid,System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.AddNewFileVersion(System.Guid,System.String)
  id: AddNewFileVersion(System.Guid,System.String)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: AddNewFileVersion(Guid, String)
  nameWithType: FileBasedProject.AddNewFileVersion(Guid, String)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddNewFileVersion(System.Guid, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nAdds the new file version.\n"
  syntax:
    content: public void AddNewFileVersion(Guid fileId, string localFilePath)
    parameters:
    - id: fileId
      type: System.Guid
      description: The file id.
    - id: localFilePath
      type: System.String
      description: The local file path.
    content.vb: Public Sub AddNewFileVersion(fileId As Guid, localFilePath As String)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddNewFileVersion*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.AddNewFileVersion(System.Guid,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateMergedProjectFile(System.String,System.String,System.Guid[])
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateMergedProjectFile(System.String,System.String,System.Guid[])
  id: CreateMergedProjectFile(System.String,System.String,System.Guid[])
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: CreateMergedProjectFile(String, String, Guid[])
  nameWithType: FileBasedProject.CreateMergedProjectFile(String, String, Guid[])
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateMergedProjectFile(System.String, System.String, System.Guid[])
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nCreates a merged file from a number of translatable files in the project.\nThis allows manipulating the content of all the child files within one physical file.\nFor more information, see <xref href=\"Sdl.ProjectAutomation.Core.MergedProjectFile\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public MergedProjectFile CreateMergedProjectFile(string mergedFileName, string folderPathInProject, Guid[] projectFileIds)
    parameters:
    - id: mergedFileName
      type: System.String
      description: The file name for the newly created merged file. This must have the &quot;.sdlxliff&quot; extension.
    - id: folderPathInProject
      type: System.String
      description: >-
        The folder in this project in which the merged file be added.

        If empty the merged file will be in the project root folder.
    - id: projectFileIds
      type: System.Guid[]
      description: The IDs of the translatable files to be merged in to one.
    return:
      type: Sdl.ProjectAutomation.Core.MergedProjectFile
      description: "\nThe newly created and added merged project file.\n"
    content.vb: Public Function CreateMergedProjectFile(mergedFileName As String, folderPathInProject As String, projectFileIds As Guid()) As MergedProjectFile
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateMergedProjectFile*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile(System.String,System.String,System.Guid[])
  nameWithType.vb: FileBasedProject.CreateMergedProjectFile(String, String, Guid())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateMergedProjectFile(System.String, System.String, System.Guid())
  name.vb: CreateMergedProjectFile(String, String, Guid())
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.OpenProjectFileStream(System.Guid)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.OpenProjectFileStream(System.Guid)
  id: OpenProjectFileStream(System.Guid)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: OpenProjectFileStream(Guid)
  nameWithType: FileBasedProject.OpenProjectFileStream(Guid)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.OpenProjectFileStream(System.Guid)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nReturns a stream that can be used to save out the latest version of the file.\n"
  syntax:
    content: public Stream OpenProjectFileStream(Guid projectFileId)
    parameters:
    - id: projectFileId
      type: System.Guid
      description: The file to obtain the stream for.
    return:
      type: System.IO.Stream
      description: A stream from which the file contents can be read. It is the responsibility of the caller to close this stream.
    content.vb: Public Function OpenProjectFileStream(projectFileId As Guid) As Stream
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.OpenProjectFileStream*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.OpenProjectFileStream(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.SaveProjectFileAs(System.Guid,System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.SaveProjectFileAs(System.Guid,System.String)
  id: SaveProjectFileAs(System.Guid,System.String)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: SaveProjectFileAs(Guid, String)
  nameWithType: FileBasedProject.SaveProjectFileAs(Guid, String)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.SaveProjectFileAs(System.Guid, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nSaves out the file to a specified file location.\n"
  syntax:
    content: public void SaveProjectFileAs(Guid projectFileId, string outputFilePath)
    parameters:
    - id: projectFileId
      type: System.Guid
      description: The file to save.
    - id: outputFilePath
      type: System.String
      description: The file path to save the project file to.
    content.vb: Public Sub SaveProjectFileAs(projectFileId As Guid, outputFilePath As String)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.SaveProjectFileAs*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.SaveProjectFileAs(System.Guid,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTask(System.Guid[],System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTask(System.Guid[],System.String)
  id: RunAutomaticTask(System.Guid[],System.String)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: RunAutomaticTask(Guid[], String)
  nameWithType: FileBasedProject.RunAutomaticTask(Guid[], String)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTask(System.Guid[], System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nRuns an automatic task on a set of files.\nAutomatic task template IDs are defined in <xref href=\"Sdl.ProjectAutomation.Core.AutomaticTaskTemplateIds\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: Multiple automatic tasks can be run together in a sequence using <xref href="Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTasks(System.Guid%5b%5d%2cSystem.String%5b%5d)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public AutomaticTask RunAutomaticTask(Guid[] projectFileIds, string taskTemplateId)
    parameters:
    - id: projectFileIds
      type: System.Guid[]
      description: The files to run the task on.
    - id: taskTemplateId
      type: System.String
      description: The ID of the task template (i.e. the type of task) to run.
    return:
      type: Sdl.ProjectAutomation.Core.AutomaticTask
      description: "\nInformation about the automatic task that has been run.\n"
    content.vb: Public Function RunAutomaticTask(projectFileIds As Guid(), taskTemplateId As String) As AutomaticTask
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTask*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[],System.String)
  nameWithType.vb: FileBasedProject.RunAutomaticTask(Guid(), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTask(System.Guid(), System.String)
  name.vb: RunAutomaticTask(Guid(), String)
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTask(System.Guid[],System.String,System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTask(System.Guid[],System.String,System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  id: RunAutomaticTask(System.Guid[],System.String,System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: RunAutomaticTask(Guid[], String, EventHandler<TaskStatusEventArgs>, EventHandler<TaskMessageEventArgs>)
  nameWithType: FileBasedProject.RunAutomaticTask(Guid[], String, EventHandler<TaskStatusEventArgs>, EventHandler<TaskMessageEventArgs>)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTask(System.Guid[], System.String, System.EventHandler<Sdl.ProjectAutomation.Core.TaskStatusEventArgs>, System.EventHandler<Sdl.ProjectAutomation.Core.TaskMessageEventArgs>)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nRuns an automatic task on a set of files.\nAutomatic task template IDs are defined in <xref href=\"Sdl.ProjectAutomation.Core.AutomaticTaskTemplateIds\" data-throw-if-not-resolved=\"false\"></xref>.\nThis overload allows event handlers to be specified for task status and message events.\nThese events support cancellation of the task.\n"
  remarks: Multiple automatic tasks can be run together in a sequence using <xref href="Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTasks(System.Guid%5b%5d%2cSystem.String%5b%5d)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public AutomaticTask RunAutomaticTask(Guid[] projectFileIds, string taskTemplateId, EventHandler<TaskStatusEventArgs> statusEventHandler, EventHandler<TaskMessageEventArgs> messageEventHandler)
    parameters:
    - id: projectFileIds
      type: System.Guid[]
      description: The files to run the task on.
    - id: taskTemplateId
      type: System.String
      description: The ID of the task template (i.e. the type of task) to run.
    - id: statusEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs}
      description: Event handler for task status events.
    - id: messageEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs}
      description: Event handler for message events.
    return:
      type: Sdl.ProjectAutomation.Core.AutomaticTask
      description: "\nInformation about the automatic task that has been run.\n"
    content.vb: Public Function RunAutomaticTask(projectFileIds As Guid(), taskTemplateId As String, statusEventHandler As EventHandler(Of TaskStatusEventArgs), messageEventHandler As EventHandler(Of TaskMessageEventArgs)) As AutomaticTask
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTask*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[],System.String,System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  nameWithType.vb: FileBasedProject.RunAutomaticTask(Guid(), String, EventHandler(Of TaskStatusEventArgs), EventHandler(Of TaskMessageEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTask(System.Guid(), System.String, System.EventHandler(Of Sdl.ProjectAutomation.Core.TaskStatusEventArgs), System.EventHandler(Of Sdl.ProjectAutomation.Core.TaskMessageEventArgs))
  name.vb: RunAutomaticTask(Guid(), String, EventHandler(Of TaskStatusEventArgs), EventHandler(Of TaskMessageEventArgs))
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.SaveTaskReportAs(System.Guid,System.String,Sdl.ProjectAutomation.Core.ReportFormat)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.SaveTaskReportAs(System.Guid,System.String,Sdl.ProjectAutomation.Core.ReportFormat)
  id: SaveTaskReportAs(System.Guid,System.String,Sdl.ProjectAutomation.Core.ReportFormat)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: SaveTaskReportAs(Guid, String, ReportFormat)
  nameWithType: FileBasedProject.SaveTaskReportAs(Guid, String, ReportFormat)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.SaveTaskReportAs(System.Guid, System.String, Sdl.ProjectAutomation.Core.ReportFormat)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nSaves the task report out to a file, in the specified format\n"
  syntax:
    content: public void SaveTaskReportAs(Guid reportId, string path, ReportFormat reportFormat)
    parameters:
    - id: reportId
      type: System.Guid
      description: The id of the task report to save.
    - id: path
      type: System.String
      description: The file path to save the report to.
    - id: reportFormat
      type: Sdl.ProjectAutomation.Core.ReportFormat
      description: The format used when saving out the report.
    content.vb: Public Sub SaveTaskReportAs(reportId As Guid, path As String, reportFormat As ReportFormat)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.SaveTaskReportAs*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.SaveTaskReportAs(System.Guid,System.String,Sdl.ProjectAutomation.Core.ReportFormat)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateManualTask(System.String,System.String,System.DateTime,Sdl.ProjectAutomation.Core.TaskFileInfo[])
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateManualTask(System.String,System.String,System.DateTime,Sdl.ProjectAutomation.Core.TaskFileInfo[])
  id: CreateManualTask(System.String,System.String,System.DateTime,Sdl.ProjectAutomation.Core.TaskFileInfo[])
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: CreateManualTask(String, String, DateTime, TaskFileInfo[])
  nameWithType: FileBasedProject.CreateManualTask(String, String, DateTime, TaskFileInfo[])
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateManualTask(System.String, System.String, System.DateTime, Sdl.ProjectAutomation.Core.TaskFileInfo[])
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nCreates a manual task. A manual task includes a set of files that is assigned to a user.\nThe created manual task can be used to create a project package using <xref href=\"Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateProjectPackage(System.Guid%2cSystem.String%2cSystem.String%2cSdl.ProjectAutomation.Core.ProjectPackageCreationOptions%2cSystem.EventHandler%7bSdl.ProjectAutomation.Core.ProgressEventArgs%7d%2cSystem.EventHandler%7bSdl.ProjectAutomation.Core.MessageEventArgs%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public ManualTask CreateManualTask(string manualTaskName, string assignToUser, DateTime dueDate, TaskFileInfo[] inputFiles)
    parameters:
    - id: manualTaskName
      type: System.String
      description: The name of the manual task. Typically &quot;Translate&quot; or &quot;Review&quot;, but other task names can be
    - id: assignToUser
      type: System.String
      description: The user to assign the task to.
    - id: dueDate
      type: System.DateTime
      description: The date by which the task should be completed.
    - id: inputFiles
      type: Sdl.ProjectAutomation.Core.TaskFileInfo[]
      description: The files to include in the task.
    return:
      type: Sdl.ProjectAutomation.Core.ManualTask
      description: The newly created manual task.
    content.vb: Public Function CreateManualTask(manualTaskName As String, assignToUser As String, dueDate As Date, inputFiles As TaskFileInfo()) As ManualTask
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateManualTask*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String,System.String,System.DateTime,Sdl.ProjectAutomation.Core.TaskFileInfo[])
  nameWithType.vb: FileBasedProject.CreateManualTask(String, String, DateTime, TaskFileInfo())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateManualTask(System.String, System.String, System.DateTime, Sdl.ProjectAutomation.Core.TaskFileInfo())
  name.vb: CreateManualTask(String, String, DateTime, TaskFileInfo())
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateManualTask(System.String,System.String,System.DateTime,System.Guid[])
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateManualTask(System.String,System.String,System.DateTime,System.Guid[])
  id: CreateManualTask(System.String,System.String,System.DateTime,System.Guid[])
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: CreateManualTask(String, String, DateTime, Guid[])
  nameWithType: FileBasedProject.CreateManualTask(String, String, DateTime, Guid[])
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateManualTask(System.String, System.String, System.DateTime, System.Guid[])
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nCreates a manual task. A manual task includes a set of files that is assigned to a user.\nThe created manual task can be used to create a project package using <xref href=\"Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateProjectPackage(System.Guid%2cSystem.String%2cSystem.String%2cSdl.ProjectAutomation.Core.ProjectPackageCreationOptions%2cSystem.EventHandler%7bSdl.ProjectAutomation.Core.ProgressEventArgs%7d%2cSystem.EventHandler%7bSdl.ProjectAutomation.Core.MessageEventArgs%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  remarks: "\nThis overload allows a list of project file IDs to be specified rather than <xref href=\"Sdl.ProjectAutomation.Core.TaskFileInfo\" data-throw-if-not-resolved=\"false\"></xref> objects.\nA project file will be marked as a &quot;read only&quot; task file if it has a role of <xref href=\"Sdl.ProjectApi.FileRole.Reference\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public ManualTask CreateManualTask(string manualTaskName, string assignToUser, DateTime dueDate, Guid[] projectFileIds)
    parameters:
    - id: manualTaskName
      type: System.String
      description: The name of the manual task. Typically &quot;Translate&quot; or &quot;Review&quot;, but other task names can be
    - id: assignToUser
      type: System.String
      description: The user to assign the task to.
    - id: dueDate
      type: System.DateTime
      description: The date by which the task should be completed.
    - id: projectFileIds
      type: System.Guid[]
      description: The project files to include in the task. Reference files will be marked as &quot;read only&quot; task files
    return:
      type: Sdl.ProjectAutomation.Core.ManualTask
    content.vb: Public Function CreateManualTask(manualTaskName As String, assignToUser As String, dueDate As Date, projectFileIds As Guid()) As ManualTask
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateManualTask*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String,System.String,System.DateTime,System.Guid[])
  nameWithType.vb: FileBasedProject.CreateManualTask(String, String, DateTime, Guid())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateManualTask(System.String, System.String, System.DateTime, System.Guid())
  name.vb: CreateManualTask(String, String, DateTime, Guid())
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetManualTask(System.Guid)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetManualTask(System.Guid)
  id: GetManualTask(System.Guid)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: GetManualTask(Guid)
  nameWithType: FileBasedProject.GetManualTask(Guid)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetManualTask(System.Guid)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nRetrieves an existing manual task.\n"
  syntax:
    content: public ManualTask GetManualTask(Guid manualTaskId)
    parameters:
    - id: manualTaskId
      type: System.Guid
      description: The ID of the manual task
    return:
      type: Sdl.ProjectAutomation.Core.ManualTask
      description: The newly created manual task.
    content.vb: Public Function GetManualTask(manualTaskId As Guid) As ManualTask
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetManualTask*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.GetManualTask(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetAutomaticTask(System.Guid)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetAutomaticTask(System.Guid)
  id: GetAutomaticTask(System.Guid)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: GetAutomaticTask(Guid)
  nameWithType: FileBasedProject.GetAutomaticTask(Guid)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetAutomaticTask(System.Guid)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nRetrieves an existing automatic task.\n"
  syntax:
    content: public AutomaticTask GetAutomaticTask(Guid automaticTaskId)
    parameters:
    - id: automaticTaskId
      type: System.Guid
      description: The ID of the automatic task.
    return:
      type: Sdl.ProjectAutomation.Core.AutomaticTask
      description: The automatic task.
    content.vb: Public Function GetAutomaticTask(automaticTaskId As Guid) As AutomaticTask
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetAutomaticTask*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.GetAutomaticTask(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions)
  id: CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions)
  nameWithType: FileBasedProject.CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateProjectPackage(System.Guid, System.String, System.String, Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nCreates a project package. The package can then be obtained using <xref href=\"Sdl.ProjectAutomation.FileBased.FileBasedProject.SavePackageAs(System.Guid%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public ProjectPackageCreation CreateProjectPackage(Guid manualTaskId, string packageName, string comment, ProjectPackageCreationOptions options)
    parameters:
    - id: manualTaskId
      type: System.Guid
      description: The ID of the task that the package relates to. (The task defines which files are included in the package.)
    - id: packageName
      type: System.String
      description: The name of the package.
    - id: comment
      type: System.String
      description: Optional comment.
    - id: options
      type: Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
      description: Various options to control what will be included in a project package.
    return:
      type: Sdl.ProjectAutomation.Core.ProjectPackageCreation
      description: A <xref href="Sdl.ProjectAutomation.Core.ProjectPackageCreation" data-throw-if-not-resolved="false"></xref> object, which contains the results of the package creation.
    content.vb: Public Function CreateProjectPackage(manualTaskId As Guid, packageName As String, comment As String, options As ProjectPackageCreationOptions) As ProjectPackageCreation
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateProjectPackage*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  id: CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  nameWithType: FileBasedProject.CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateProjectPackage(System.Guid, System.String, System.String, Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions, System.EventHandler<Sdl.ProjectAutomation.Core.ProgressEventArgs>, System.EventHandler<Sdl.ProjectAutomation.Core.MessageEventArgs>)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nCreates a project package. The package can then be obtained using <xref href=\"Sdl.ProjectAutomation.FileBased.FileBasedProject.SavePackageAs(System.Guid%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public ProjectPackageCreation CreateProjectPackage(Guid manualTaskId, string packageName, string comment, ProjectPackageCreationOptions options, EventHandler<ProgressEventArgs> statusEventHandler, EventHandler<MessageEventArgs> messageEventHandler)
    parameters:
    - id: manualTaskId
      type: System.Guid
      description: The ID of the task that the package relates to. (The task defines which files are included in the package.)
    - id: packageName
      type: System.String
      description: The name of the package.
    - id: comment
      type: System.String
      description: Optional comment.
    - id: options
      type: Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
      description: Various options to control what will be included in a project package.
    - id: statusEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs}
      description: Event handler for package creation status events.
    - id: messageEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs}
      description: Event handler for message events.
    return:
      type: Sdl.ProjectAutomation.Core.ProjectPackageCreation
      description: A <xref href="Sdl.ProjectAutomation.Core.ProjectPackageCreation" data-throw-if-not-resolved="false"></xref> object, which contains the results of the package creation.
    content.vb: Public Function CreateProjectPackage(manualTaskId As Guid, packageName As String, comment As String, options As ProjectPackageCreationOptions, statusEventHandler As EventHandler(Of ProgressEventArgs), messageEventHandler As EventHandler(Of MessageEventArgs)) As ProjectPackageCreation
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateProjectPackage*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  nameWithType.vb: FileBasedProject.CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateProjectPackage(System.Guid, System.String, System.String, Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions, System.EventHandler(Of Sdl.ProjectAutomation.Core.ProgressEventArgs), System.EventHandler(Of Sdl.ProjectAutomation.Core.MessageEventArgs))
  name.vb: CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateReturnPackage(System.Guid[],System.String,System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateReturnPackage(System.Guid[],System.String,System.String)
  id: CreateReturnPackage(System.Guid[],System.String,System.String)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: CreateReturnPackage(Guid[], String, String)
  nameWithType: FileBasedProject.CreateReturnPackage(Guid[], String, String)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateReturnPackage(System.Guid[], System.String, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nCreates a return package from a set of files. The files must all have previously been received as part of a\nproject package in order for the return package to be created.\n"
  remarks: It is only valid to call this method if this project was created from a project package
  syntax:
    content: public ReturnPackageCreation CreateReturnPackage(Guid[] projectFileIds, string packageName, string comment)
    parameters:
    - id: projectFileIds
      type: System.Guid[]
      description: The files to include in the return package.
    - id: packageName
      type: System.String
      description: The name of the package.
    - id: comment
      type: System.String
      description: A comment for the package.
    return:
      type: Sdl.ProjectAutomation.Core.ReturnPackageCreation
      description: 'A <xref href="Sdl.ProjectAutomation.Core.ReturnPackageCreation" data-throw-if-not-resolved="false"></xref> object, representing the results of the return package creation. '
    content.vb: Public Function CreateReturnPackage(projectFileIds As Guid(), packageName As String, comment As String) As ReturnPackageCreation
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateReturnPackage*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[],System.String,System.String)
  nameWithType.vb: FileBasedProject.CreateReturnPackage(Guid(), String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateReturnPackage(System.Guid(), System.String, System.String)
  name.vb: CreateReturnPackage(Guid(), String, String)
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateReturnPackage(System.Guid[],System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateReturnPackage(System.Guid[],System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  id: CreateReturnPackage(System.Guid[],System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: CreateReturnPackage(Guid[], String, String, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  nameWithType: FileBasedProject.CreateReturnPackage(Guid[], String, String, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateReturnPackage(System.Guid[], System.String, System.String, System.EventHandler<Sdl.ProjectAutomation.Core.ProgressEventArgs>, System.EventHandler<Sdl.ProjectAutomation.Core.MessageEventArgs>)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nCreates a return package from a set of files. The files must all have previously been received as part of a\nproject package in order for the return package to be created.\n"
  remarks: It is only valid to call this method if this project was created from a project package
  syntax:
    content: public ReturnPackageCreation CreateReturnPackage(Guid[] projectFileIds, string packageName, string comment, EventHandler<ProgressEventArgs> statusEventHandler, EventHandler<MessageEventArgs> messageEventHandler)
    parameters:
    - id: projectFileIds
      type: System.Guid[]
      description: The files to include in the return package.
    - id: packageName
      type: System.String
      description: The name of the package.
    - id: comment
      type: System.String
      description: A comment for the package.
    - id: statusEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs}
      description: Event handler for status events
    - id: messageEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs}
      description: Event handler for message events
    return:
      type: Sdl.ProjectAutomation.Core.ReturnPackageCreation
      description: 'A <xref href="Sdl.ProjectAutomation.Core.ReturnPackageCreation" data-throw-if-not-resolved="false"></xref> object, representing the results of the return package creation. '
    content.vb: Public Function CreateReturnPackage(projectFileIds As Guid(), packageName As String, comment As String, statusEventHandler As EventHandler(Of ProgressEventArgs), messageEventHandler As EventHandler(Of MessageEventArgs)) As ReturnPackageCreation
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateReturnPackage*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[],System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  nameWithType.vb: FileBasedProject.CreateReturnPackage(Guid(), String, String, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateReturnPackage(System.Guid(), System.String, System.String, System.EventHandler(Of Sdl.ProjectAutomation.Core.ProgressEventArgs), System.EventHandler(Of Sdl.ProjectAutomation.Core.MessageEventArgs))
  name.vb: CreateReturnPackage(Guid(), String, String, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.SavePackageAs(System.Guid,System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.SavePackageAs(System.Guid,System.String)
  id: SavePackageAs(System.Guid,System.String)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: SavePackageAs(Guid, String)
  nameWithType: FileBasedProject.SavePackageAs(Guid, String)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.SavePackageAs(System.Guid, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nSaves out the package to a specified file location.\n"
  syntax:
    content: public void SavePackageAs(Guid packageId, string path)
    parameters:
    - id: packageId
      type: System.Guid
      description: The ID of the package to save.
    - id: path
      type: System.String
      description: The file path to save the package to.
    content.vb: Public Sub SavePackageAs(packageId As Guid, path As String)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.SavePackageAs*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.SavePackageAs(System.Guid,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.ImportReturnPackage(System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.ImportReturnPackage(System.String)
  id: ImportReturnPackage(System.String)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: ImportReturnPackage(String)
  nameWithType: FileBasedProject.ImportReturnPackage(String)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.ImportReturnPackage(System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nImports a return package into this project.\n"
  syntax:
    content: public ReturnPackageImport ImportReturnPackage(string returnPackageFilePath)
    parameters:
    - id: returnPackageFilePath
      type: System.String
      description: >-
        The file path of the return package to import.

        Has file extension .sdlrpx
    return:
      type: Sdl.ProjectAutomation.Core.ReturnPackageImport
      description: Information about the import operation.
    content.vb: Public Function ImportReturnPackage(returnPackageFilePath As String) As ReturnPackageImport
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.ImportReturnPackage*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.ImportReturnPackage(System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.ImportReturnPackage(System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  id: ImportReturnPackage(System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: ImportReturnPackage(String, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  nameWithType: FileBasedProject.ImportReturnPackage(String, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.ImportReturnPackage(System.String, System.EventHandler<Sdl.ProjectAutomation.Core.ProgressEventArgs>, System.EventHandler<Sdl.ProjectAutomation.Core.MessageEventArgs>)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nImports a return package into this project.\n"
  syntax:
    content: public ReturnPackageImport ImportReturnPackage(string returnPackageFilePath, EventHandler<ProgressEventArgs> statusEventHandler, EventHandler<MessageEventArgs> messageEventHandler)
    parameters:
    - id: returnPackageFilePath
      type: System.String
      description: >-
        The file path of the return package to import.

        Has file extension .sdlrpx
    - id: statusEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs}
      description: Event handler for status events
    - id: messageEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs}
      description: Event handler for message events
    return:
      type: Sdl.ProjectAutomation.Core.ReturnPackageImport
      description: Information about the import operation.
    content.vb: Public Function ImportReturnPackage(returnPackageFilePath As String, statusEventHandler As EventHandler(Of ProgressEventArgs), messageEventHandler As EventHandler(Of MessageEventArgs)) As ReturnPackageImport
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.ImportReturnPackage*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  nameWithType.vb: FileBasedProject.ImportReturnPackage(String, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.ImportReturnPackage(System.String, System.EventHandler(Of Sdl.ProjectAutomation.Core.ProgressEventArgs), System.EventHandler(Of Sdl.ProjectAutomation.Core.MessageEventArgs))
  name.vb: ImportReturnPackage(String, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.Delete
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.Delete
  id: Delete
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: Delete()
  nameWithType: FileBasedProject.Delete()
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.Delete()
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nDeletes the project. This deletes the entire project folder.\n"
  syntax:
    content: public void Delete()
    content.vb: Public Sub Delete
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.Delete*
  implements:
  - Sdl.ProjectAutomation.Core.IProjectDeleteOperation.Delete
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.DeleteFilesAndDependencies(System.String)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.DeleteFilesAndDependencies(System.String)
  id: DeleteFilesAndDependencies(System.String)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: DeleteFilesAndDependencies(String)
  nameWithType: FileBasedProject.DeleteFilesAndDependencies(String)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.DeleteFilesAndDependencies(System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nDeletes the file and its dependencies\n"
  syntax:
    content: public void DeleteFilesAndDependencies(string fileNameInProject)
    parameters:
    - id: fileNameInProject
      type: System.String
    content.vb: Public Sub DeleteFilesAndDependencies(fileNameInProject As String)
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.DeleteFilesAndDependencies*
  implements:
  - Sdl.ProjectAutomation.Core.IProjectDeleteOperation.DeleteFilesAndDependencies(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.DeleteFromServer
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.DeleteFromServer
  id: DeleteFromServer
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: DeleteFromServer()
  nameWithType: FileBasedProject.DeleteFromServer()
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.DeleteFromServer()
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nDeletes the project from the server\n"
  syntax:
    content: public void DeleteFromServer()
    content.vb: Public Sub DeleteFromServer
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.DeleteFromServer*
  implements:
  - Sdl.ProjectAutomation.Core.IProjectDeleteOperation.DeleteFromServer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.PublishProject(System.Uri,System.Boolean,System.String,System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.FileBased.PublishProjectEventArgs})
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.PublishProject(System.Uri,System.Boolean,System.String,System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.FileBased.PublishProjectEventArgs})
  id: PublishProject(System.Uri,System.Boolean,System.String,System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.FileBased.PublishProjectEventArgs})
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: PublishProject(Uri, Boolean, String, String, String, EventHandler<PublishProjectEventArgs>)
  nameWithType: FileBasedProject.PublishProject(Uri, Boolean, String, String, String, EventHandler<PublishProjectEventArgs>)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.PublishProject(System.Uri, System.Boolean, System.String, System.String, System.String, System.EventHandler<Sdl.ProjectAutomation.FileBased.PublishProjectEventArgs>)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nPublish this project to a Groupshare Project Server.\n"
  syntax:
    content: public PublishProjectResult PublishProject(Uri serverUri, bool useWindowsAuthentication, string userName, string password, string organizationPath, EventHandler<PublishProjectEventArgs> progressEventHandler)
    parameters:
    - id: serverUri
      type: System.Uri
      description: The full URI of the project server e.g. https://projectserver.mydomain.com:8080
    - id: useWindowsAuthentication
      type: System.Boolean
      description: If true use window authentication, false use custom authentication
    - id: userName
      type: System.String
      description: The user name you wish to use to publish the project
    - id: password
      type: System.String
      description: The password you with to use to publish the project
    - id: organizationPath
      type: System.String
      description: The organization path on the Groupshare server where you want the project to be published
    - id: progressEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.FileBased.PublishProjectEventArgs}
      description: Callback for monitoring the
    return:
      type: Sdl.ProjectAutomation.FileBased.PublishProjectResult
    content.vb: Public Function PublishProject(serverUri As Uri, useWindowsAuthentication As Boolean, userName As String, password As String, organizationPath As String, progressEventHandler As EventHandler(Of PublishProjectEventArgs)) As PublishProjectResult
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.PublishProject*
  nameWithType.vb: FileBasedProject.PublishProject(Uri, Boolean, String, String, String, EventHandler(Of PublishProjectEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.PublishProject(System.Uri, System.Boolean, System.String, System.String, System.String, System.EventHandler(Of Sdl.ProjectAutomation.FileBased.PublishProjectEventArgs))
  name.vb: PublishProject(Uri, Boolean, String, String, String, EventHandler(Of PublishProjectEventArgs))
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.SynchronizeServerProjectData
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.SynchronizeServerProjectData
  id: SynchronizeServerProjectData
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: SynchronizeServerProjectData()
  nameWithType: FileBasedProject.SynchronizeServerProjectData()
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.SynchronizeServerProjectData()
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nSynchronizes the local project information with the information stored on the server \n"
  syntax:
    content: public bool SynchronizeServerProjectData()
    return:
      type: System.Boolean
    content.vb: Public Function SynchronizeServerProjectData As Boolean
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.SynchronizeServerProjectData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.UndoCheckoutFiles(System.Guid[])
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.UndoCheckoutFiles(System.Guid[])
  id: UndoCheckoutFiles(System.Guid[])
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: UndoCheckoutFiles(Guid[])
  nameWithType: FileBasedProject.UndoCheckoutFiles(Guid[])
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.UndoCheckoutFiles(System.Guid[])
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nRemoves the lock on server files without changing the version of the file on the server\n"
  syntax:
    content: public void UndoCheckoutFiles(Guid[] projectFileIds)
    parameters:
    - id: projectFileIds
      type: System.Guid[]
      description: The list of files to uncheckout
    content.vb: Public Sub UndoCheckoutFiles(projectFileIds As Guid())
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.UndoCheckoutFiles*
  nameWithType.vb: FileBasedProject.UndoCheckoutFiles(Guid())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.UndoCheckoutFiles(System.Guid())
  name.vb: UndoCheckoutFiles(Guid())
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckinFiles(System.Guid[],System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs})
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckinFiles(System.Guid[],System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs})
  id: CheckinFiles(System.Guid[],System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs})
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: CheckinFiles(Guid[], String, EventHandler<ProgressEventArgs>)
  nameWithType: FileBasedProject.CheckinFiles(Guid[], String, EventHandler<ProgressEventArgs>)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckinFiles(System.Guid[], System.String, System.EventHandler<Sdl.ProjectAutomation.Core.ProgressEventArgs>)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nUploads the specifies including potentially related files that should be uploaded at the same time and checks them in.\n"
  remarks: "\nThe method is to be used for check-out files only\nWhen passing in a locally added target language file, the corresponding source file is checked in and also all the related new target language\nfiles; but no other existing modified target language files.\nWhen passing in a locally added source file, the source file and all corresponding target languages files are uploaded and checked in.\n"
  syntax:
    content: public void CheckinFiles(Guid[] projectFileIds, string comment, EventHandler<ProgressEventArgs> progressEventHandler)
    parameters:
    - id: projectFileIds
      type: System.Guid[]
      description: The files to upload and check-in.
    - id: comment
      type: System.String
      description: A comment for the checkin.
    - id: progressEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs}
      description: Progress event handler.
    content.vb: Public Sub CheckinFiles(projectFileIds As Guid(), comment As String, progressEventHandler As EventHandler(Of ProgressEventArgs))
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckinFiles*
  nameWithType.vb: FileBasedProject.CheckinFiles(Guid(), String, EventHandler(Of ProgressEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckinFiles(System.Guid(), System.String, System.EventHandler(Of Sdl.ProjectAutomation.Core.ProgressEventArgs))
  name.vb: CheckinFiles(Guid(), String, EventHandler(Of ProgressEventArgs))
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckoutFiles(System.Guid[],System.Boolean,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs})
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckoutFiles(System.Guid[],System.Boolean,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs})
  id: CheckoutFiles(System.Guid[],System.Boolean,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs})
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: CheckoutFiles(Guid[], Boolean, EventHandler<ProgressEventArgs>)
  nameWithType: FileBasedProject.CheckoutFiles(Guid[], Boolean, EventHandler<ProgressEventArgs>)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckoutFiles(System.Guid[], System.Boolean, System.EventHandler<Sdl.ProjectAutomation.Core.ProgressEventArgs>)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nChecks out the files specified by project file id\n"
  remarks: "\n"
  syntax:
    content: public void CheckoutFiles(Guid[] projectFileIds, bool overrideOnConflict, EventHandler<ProgressEventArgs> progressEventHandler)
    parameters:
    - id: projectFileIds
      type: System.Guid[]
    - id: overrideOnConflict
      type: System.Boolean
    - id: progressEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs}
    content.vb: Public Sub CheckoutFiles(projectFileIds As Guid(), overrideOnConflict As Boolean, progressEventHandler As EventHandler(Of ProgressEventArgs))
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckoutFiles*
  nameWithType.vb: FileBasedProject.CheckoutFiles(Guid(), Boolean, EventHandler(Of ProgressEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckoutFiles(System.Guid(), System.Boolean, System.EventHandler(Of Sdl.ProjectAutomation.Core.ProgressEventArgs))
  name.vb: CheckoutFiles(Guid(), Boolean, EventHandler(Of ProgressEventArgs))
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadLatestServerVersion(System.Guid,System.EventHandler{Sdl.ProjectApi.Server.DataTransferEventArgs},System.Boolean)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadLatestServerVersion(System.Guid,System.EventHandler{Sdl.ProjectApi.Server.DataTransferEventArgs},System.Boolean)
  id: DownloadLatestServerVersion(System.Guid,System.EventHandler{Sdl.ProjectApi.Server.DataTransferEventArgs},System.Boolean)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: DownloadLatestServerVersion(Guid, EventHandler<DataTransferEventArgs>, Boolean)
  nameWithType: FileBasedProject.DownloadLatestServerVersion(Guid, EventHandler<DataTransferEventArgs>, Boolean)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadLatestServerVersion(System.Guid, System.EventHandler<Sdl.ProjectApi.Server.DataTransferEventArgs>, System.Boolean)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nDownloads the latest version of a file from the project server.\n"
  syntax:
    content: public bool DownloadLatestServerVersion(Guid projectFileId, EventHandler<DataTransferEventArgs> progressEventHandler, bool force)
    parameters:
    - id: projectFileId
      type: System.Guid
      description: The unique file id
    - id: progressEventHandler
      type: System.EventHandler{Sdl.ProjectApi.Server.DataTransferEventArgs}
      description: A progress event handler, allowing the caller to cancel the download if required.
    - id: force
      type: System.Boolean
      description: if set to <code>true</code> download the file from the server regardless of whether the local version is up to date.
    return:
      type: System.Boolean
      description: true if successful
    content.vb: Public Function DownloadLatestServerVersion(projectFileId As Guid, progressEventHandler As EventHandler(Of DataTransferEventArgs), force As Boolean) As Boolean
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadLatestServerVersion*
  nameWithType.vb: FileBasedProject.DownloadLatestServerVersion(Guid, EventHandler(Of DataTransferEventArgs), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadLatestServerVersion(System.Guid, System.EventHandler(Of Sdl.ProjectApi.Server.DataTransferEventArgs), System.Boolean)
  name.vb: DownloadLatestServerVersion(Guid, EventHandler(Of DataTransferEventArgs), Boolean)
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.Complete
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.Complete
  id: Complete
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: Complete()
  nameWithType: FileBasedProject.Complete()
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.Complete()
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nChange the project status to completed.\n"
  syntax:
    content: public void Complete()
    content.vb: Public Sub Complete
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.Complete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadSpecificServerVersion(System.Guid,System.Int32,System.String,System.EventHandler{Sdl.ProjectApi.Server.DataTransferEventArgs})
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadSpecificServerVersion(System.Guid,System.Int32,System.String,System.EventHandler{Sdl.ProjectApi.Server.DataTransferEventArgs})
  id: DownloadSpecificServerVersion(System.Guid,System.Int32,System.String,System.EventHandler{Sdl.ProjectApi.Server.DataTransferEventArgs})
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: DownloadSpecificServerVersion(Guid, Int32, String, EventHandler<DataTransferEventArgs>)
  nameWithType: FileBasedProject.DownloadSpecificServerVersion(Guid, Int32, String, EventHandler<DataTransferEventArgs>)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadSpecificServerVersion(System.Guid, System.Int32, System.String, System.EventHandler<Sdl.ProjectApi.Server.DataTransferEventArgs>)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nDownloads a specific version of a file from the server in to the specified location\n"
  syntax:
    content: public bool DownloadSpecificServerVersion(Guid projectFileId, int versionNumber, string localFilePath, EventHandler<DataTransferEventArgs> progressEventHandler)
    parameters:
    - id: projectFileId
      type: System.Guid
      description: The unique identifier for the file
    - id: versionNumber
      type: System.Int32
      description: The version number of the file you wish to download
    - id: localFilePath
      type: System.String
      description: The location you wish to download the file to
    - id: progressEventHandler
      type: System.EventHandler{Sdl.ProjectApi.Server.DataTransferEventArgs}
      description: '>A progress event handler, allowing the caller to cancel the download if required.'
    return:
      type: System.Boolean
      description: true if successful
    content.vb: Public Function DownloadSpecificServerVersion(projectFileId As Guid, versionNumber As Integer, localFilePath As String, progressEventHandler As EventHandler(Of DataTransferEventArgs)) As Boolean
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadSpecificServerVersion*
  nameWithType.vb: FileBasedProject.DownloadSpecificServerVersion(Guid, Int32, String, EventHandler(Of DataTransferEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadSpecificServerVersion(System.Guid, System.Int32, System.String, System.EventHandler(Of Sdl.ProjectApi.Server.DataTransferEventArgs))
  name.vb: DownloadSpecificServerVersion(Guid, Int32, String, EventHandler(Of DataTransferEventArgs))
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectFileVersionHistory(System.Guid)
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectFileVersionHistory(System.Guid)
  id: GetProjectFileVersionHistory(System.Guid)
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: GetProjectFileVersionHistory(Guid)
  nameWithType: FileBasedProject.GetProjectFileVersionHistory(Guid)
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectFileVersionHistory(System.Guid)
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nRetrieves the history for a specific project file\n"
  syntax:
    content: public ProjectFileVersion[] GetProjectFileVersionHistory(Guid projectFileId)
    parameters:
    - id: projectFileId
      type: System.Guid
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFileVersion[]
    content.vb: Public Function GetProjectFileVersionHistory(projectFileId As Guid) As ProjectFileVersion()
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectFileVersionHistory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFileTypeConfiguration
  commentId: M:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFileTypeConfiguration
  id: GetFileTypeConfiguration
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: GetFileTypeConfiguration()
  nameWithType: FileBasedProject.GetFileTypeConfiguration()
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFileTypeConfiguration()
  type: Method
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  syntax:
    content: public ProjectFileTypeConfiguration GetFileTypeConfiguration()
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFileTypeConfiguration
    content.vb: Public Function GetFileTypeConfiguration As ProjectFileTypeConfiguration
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFileTypeConfiguration*
  implements:
  - Sdl.ProjectAutomation.Core.IProject.GetFileTypeConfiguration
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.FilePath
  commentId: P:Sdl.ProjectAutomation.FileBased.FileBasedProject.FilePath
  id: FilePath
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: FilePath
  nameWithType: FileBasedProject.FilePath
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.FilePath
  type: Property
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nThe file path of the project file.\n"
  syntax:
    content: public string FilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FilePath As String
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.FilePath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.Credentials
  commentId: P:Sdl.ProjectAutomation.FileBased.FileBasedProject.Credentials
  id: Credentials
  parent: Sdl.ProjectAutomation.FileBased.FileBasedProject
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: FileBasedProject.Credentials
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.Credentials
  type: Property
  source:
    path: Sdl.ProjectAutomation.FileBased
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.FileBased
  namespace: Sdl.ProjectAutomation.FileBased
  summary: "\nGets the <xref href=\"Sdl.ProjectAutomation.FileBased.ProjectCredentials\" data-throw-if-not-resolved=\"false\"></xref> which holds credentials for translation providers and termbase servers that will be used during project processing.\n"
  syntax:
    content: public ProjectCredentials Credentials { get; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.FileBased.ProjectCredentials
    content.vb: Public ReadOnly Property Credentials As ProjectCredentials
  overload: Sdl.ProjectAutomation.FileBased.FileBasedProject.Credentials*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.ProjectAutomation.FileBased
  commentId: N:Sdl.ProjectAutomation.FileBased
  isExternal: true
  name: Sdl.ProjectAutomation.FileBased
  nameWithType: Sdl.ProjectAutomation.FileBased
  fullName: Sdl.ProjectAutomation.FileBased
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.ProjectAutomation.Core.IProject
  commentId: T:Sdl.ProjectAutomation.Core.IProject
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: IProject
  nameWithType: IProject
  fullName: Sdl.ProjectAutomation.Core.IProject
- uid: Sdl.ProjectAutomation.Core.IProjectDeleteOperation
  commentId: T:Sdl.ProjectAutomation.Core.IProjectDeleteOperation
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: IProjectDeleteOperation
  nameWithType: IProjectDeleteOperation
  fullName: Sdl.ProjectAutomation.Core.IProjectDeleteOperation
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Core
  commentId: N:Sdl.ProjectAutomation.Core
  isExternal: true
  name: Sdl.ProjectAutomation.Core
  nameWithType: Sdl.ProjectAutomation.Core
  fullName: Sdl.ProjectAutomation.Core
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateFromProjectPackage*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateFromProjectPackage
  isExternal: true
  name: CreateFromProjectPackage
  nameWithType: FileBasedProject.CreateFromProjectPackage
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateFromProjectPackage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.ProjectAutomation.Core.ProjectPackageImport
  commentId: T:Sdl.ProjectAutomation.Core.ProjectPackageImport
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ProjectPackageImport
  nameWithType: ProjectPackageImport
  fullName: Sdl.ProjectAutomation.Core.ProjectPackageImport
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject
  commentId: T:Sdl.ProjectAutomation.FileBased.FileBasedProject
  parent: Sdl.ProjectAutomation.FileBased
  isExternal: true
  name: FileBasedProject
  nameWithType: FileBasedProject
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.IO.FileNotFoundException
  commentId: T:System.IO.FileNotFoundException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs}
  commentId: T:System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ProgressEventArgs>
  nameWithType: EventHandler<ProgressEventArgs>
  fullName: System.EventHandler<Sdl.ProjectAutomation.Core.ProgressEventArgs>
  nameWithType.vb: EventHandler(Of ProgressEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.ProjectAutomation.Core.ProgressEventArgs)
  name.vb: EventHandler(Of ProgressEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.ProjectAutomation.Core.ProgressEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.ProjectAutomation.Core.ProgressEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs}
  commentId: T:System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<MessageEventArgs>
  nameWithType: EventHandler<MessageEventArgs>
  fullName: System.EventHandler<Sdl.ProjectAutomation.Core.MessageEventArgs>
  nameWithType.vb: EventHandler(Of MessageEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.ProjectAutomation.Core.MessageEventArgs)
  name.vb: EventHandler(Of MessageEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: Sdl.ProjectAutomation.Core.MessageEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: Sdl.ProjectAutomation.Core.MessageEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.#ctor
  isExternal: true
  name: FileBasedProject
  nameWithType: FileBasedProject.FileBasedProject
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.FileBasedProject
- uid: Sdl.ProjectAutomation.Core.ProjectAutomationException
  commentId: T:Sdl.ProjectAutomation.Core.ProjectAutomationException
  isExternal: true
  name: ProjectAutomationException
  nameWithType: ProjectAutomationException
  fullName: Sdl.ProjectAutomation.Core.ProjectAutomationException
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: Sdl.ProjectAutomation.Core.ProjectInfo
  commentId: T:Sdl.ProjectAutomation.Core.ProjectInfo
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ProjectInfo
  nameWithType: ProjectInfo
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo
- uid: Sdl.ProjectAutomation.Core.ProjectTemplateReference
  commentId: T:Sdl.ProjectAutomation.Core.ProjectTemplateReference
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ProjectTemplateReference
  nameWithType: ProjectTemplateReference
  fullName: Sdl.ProjectAutomation.Core.ProjectTemplateReference
- uid: Sdl.ProjectAutomation.Core.ProjectReference
  commentId: T:Sdl.ProjectAutomation.Core.ProjectReference
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ProjectReference
  nameWithType: ProjectReference
  fullName: Sdl.ProjectAutomation.Core.ProjectReference
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.Save*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.Save
  isExternal: true
  name: Save
  nameWithType: FileBasedProject.Save
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.Save
- uid: Sdl.ProjectAutomation.Core.IProject.Save
  commentId: M:Sdl.ProjectAutomation.Core.IProject.Save
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: Save()
  nameWithType: IProject.Save()
  fullName: Sdl.ProjectAutomation.Core.IProject.Save()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.Save
    name: Save
    nameWithType: IProject.Save
    fullName: Sdl.ProjectAutomation.Core.IProject.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.Save
    name: Save
    nameWithType: IProject.Save
    fullName: Sdl.ProjectAutomation.Core.IProject.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTasks*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTasks
  isExternal: true
  name: RunAutomaticTasks
  nameWithType: FileBasedProject.RunAutomaticTasks
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTasks
- uid: System.Guid[]
  isExternal: true
  name: Guid[]
  nameWithType: Guid[]
  fullName: System.Guid[]
  nameWithType.vb: Guid()
  fullName.vb: System.Guid()
  name.vb: Guid()
  spec.csharp:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs}
  commentId: T:System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<TaskStatusEventArgs>
  nameWithType: EventHandler<TaskStatusEventArgs>
  fullName: System.EventHandler<Sdl.ProjectAutomation.Core.TaskStatusEventArgs>
  nameWithType.vb: EventHandler(Of TaskStatusEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.ProjectAutomation.Core.TaskStatusEventArgs)
  name.vb: EventHandler(Of TaskStatusEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.TaskStatusEventArgs
    name: TaskStatusEventArgs
    nameWithType: TaskStatusEventArgs
    fullName: Sdl.ProjectAutomation.Core.TaskStatusEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.TaskStatusEventArgs
    name: TaskStatusEventArgs
    nameWithType: TaskStatusEventArgs
    fullName: Sdl.ProjectAutomation.Core.TaskStatusEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs}
  commentId: T:System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<TaskMessageEventArgs>
  nameWithType: EventHandler<TaskMessageEventArgs>
  fullName: System.EventHandler<Sdl.ProjectAutomation.Core.TaskMessageEventArgs>
  nameWithType.vb: EventHandler(Of TaskMessageEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.ProjectAutomation.Core.TaskMessageEventArgs)
  name.vb: EventHandler(Of TaskMessageEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.TaskMessageEventArgs
    name: TaskMessageEventArgs
    nameWithType: TaskMessageEventArgs
    fullName: Sdl.ProjectAutomation.Core.TaskMessageEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.TaskMessageEventArgs
    name: TaskMessageEventArgs
    nameWithType: TaskMessageEventArgs
    fullName: Sdl.ProjectAutomation.Core.TaskMessageEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.TaskSequence
  commentId: T:Sdl.ProjectAutomation.Core.TaskSequence
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: TaskSequence
  nameWithType: TaskSequence
  fullName: Sdl.ProjectAutomation.Core.TaskSequence
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunDefaultTaskSequence*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.RunDefaultTaskSequence
  isExternal: true
  name: RunDefaultTaskSequence
  nameWithType: FileBasedProject.RunDefaultTaskSequence
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunDefaultTaskSequence
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectInfo*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectInfo
  isExternal: true
  name: GetProjectInfo
  nameWithType: FileBasedProject.GetProjectInfo
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectInfo
- uid: Sdl.ProjectAutomation.Core.IProject.GetProjectInfo
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetProjectInfo
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: GetProjectInfo()
  nameWithType: IProject.GetProjectInfo()
  fullName: Sdl.ProjectAutomation.Core.IProject.GetProjectInfo()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetProjectInfo
    name: GetProjectInfo
    nameWithType: IProject.GetProjectInfo
    fullName: Sdl.ProjectAutomation.Core.IProject.GetProjectInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetProjectInfo
    name: GetProjectInfo
    nameWithType: IProject.GetProjectInfo
    fullName: Sdl.ProjectAutomation.Core.IProject.GetProjectInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateProject*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateProject
  isExternal: true
  name: UpdateProject
  nameWithType: FileBasedProject.UpdateProject
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateProject
- uid: Sdl.ProjectAutomation.Core.IProject.UpdateProject(Sdl.ProjectAutomation.Core.ProjectInfo)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.UpdateProject(Sdl.ProjectAutomation.Core.ProjectInfo)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: UpdateProject(ProjectInfo)
  nameWithType: IProject.UpdateProject(ProjectInfo)
  fullName: Sdl.ProjectAutomation.Core.IProject.UpdateProject(Sdl.ProjectAutomation.Core.ProjectInfo)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.UpdateProject(Sdl.ProjectAutomation.Core.ProjectInfo)
    name: UpdateProject
    nameWithType: IProject.UpdateProject
    fullName: Sdl.ProjectAutomation.Core.IProject.UpdateProject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.ProjectAutomation.Core.ProjectInfo
    name: ProjectInfo
    nameWithType: ProjectInfo
    fullName: Sdl.ProjectAutomation.Core.ProjectInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.UpdateProject(Sdl.ProjectAutomation.Core.ProjectInfo)
    name: UpdateProject
    nameWithType: IProject.UpdateProject
    fullName: Sdl.ProjectAutomation.Core.IProject.UpdateProject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.ProjectAutomation.Core.ProjectInfo
    name: ProjectInfo
    nameWithType: ProjectInfo
    fullName: Sdl.ProjectAutomation.Core.ProjectInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTranslationProviderConfiguration*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTranslationProviderConfiguration
  isExternal: true
  name: GetTranslationProviderConfiguration
  nameWithType: FileBasedProject.GetTranslationProviderConfiguration
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTranslationProviderConfiguration
- uid: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: GetTranslationProviderConfiguration()
  nameWithType: IProject.GetTranslationProviderConfiguration()
  fullName: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration
    name: GetTranslationProviderConfiguration
    nameWithType: IProject.GetTranslationProviderConfiguration
    fullName: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration
    name: GetTranslationProviderConfiguration
    nameWithType: IProject.GetTranslationProviderConfiguration
    fullName: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
  commentId: T:Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: TranslationProviderConfiguration
  nameWithType: TranslationProviderConfiguration
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
- uid: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: GetTranslationProviderConfiguration(Language)
  nameWithType: IProject.GetTranslationProviderConfiguration(Language)
  fullName: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)
    name: GetTranslationProviderConfiguration
    nameWithType: IProject.GetTranslationProviderConfiguration
    fullName: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Globalization.Language
    name: Language
    nameWithType: Language
    fullName: Sdl.Core.Globalization.Language
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)
    name: GetTranslationProviderConfiguration
    nameWithType: IProject.GetTranslationProviderConfiguration
    fullName: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Globalization.Language
    name: Language
    nameWithType: Language
    fullName: Sdl.Core.Globalization.Language
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.Globalization.Language
  isExternal: true
  name: Language
  nameWithType: Language
  fullName: Sdl.Core.Globalization.Language
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTranslationProviderConfiguration*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTranslationProviderConfiguration
  isExternal: true
  name: UpdateTranslationProviderConfiguration
  nameWithType: FileBasedProject.UpdateTranslationProviderConfiguration
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTranslationProviderConfiguration
- uid: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: UpdateTranslationProviderConfiguration(TranslationProviderConfiguration)
  nameWithType: IProject.UpdateTranslationProviderConfiguration(TranslationProviderConfiguration)
  fullName: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
    name: UpdateTranslationProviderConfiguration
    nameWithType: IProject.UpdateTranslationProviderConfiguration
    fullName: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
    name: TranslationProviderConfiguration
    nameWithType: TranslationProviderConfiguration
    fullName: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
    name: UpdateTranslationProviderConfiguration
    nameWithType: IProject.UpdateTranslationProviderConfiguration
    fullName: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
    name: TranslationProviderConfiguration
    nameWithType: TranslationProviderConfiguration
    fullName: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddMasterTM*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.AddMasterTM
  isExternal: true
  name: AddMasterTM
  nameWithType: FileBasedProject.AddMasterTM
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddMasterTM
- uid: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language,Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language,Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: UpdateTranslationProviderConfiguration(Language, TranslationProviderConfiguration)
  nameWithType: IProject.UpdateTranslationProviderConfiguration(Language, TranslationProviderConfiguration)
  fullName: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language, Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language,Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
    name: UpdateTranslationProviderConfiguration
    nameWithType: IProject.UpdateTranslationProviderConfiguration
    fullName: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Globalization.Language
    name: Language
    nameWithType: Language
    fullName: Sdl.Core.Globalization.Language
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
    name: TranslationProviderConfiguration
    nameWithType: TranslationProviderConfiguration
    fullName: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language,Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
    name: UpdateTranslationProviderConfiguration
    nameWithType: IProject.UpdateTranslationProviderConfiguration
    fullName: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Globalization.Language
    name: Language
    nameWithType: Language
    fullName: Sdl.Core.Globalization.Language
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
    name: TranslationProviderConfiguration
    nameWithType: TranslationProviderConfiguration
    fullName: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTermbaseConfiguration*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTermbaseConfiguration
  isExternal: true
  name: GetTermbaseConfiguration
  nameWithType: FileBasedProject.GetTermbaseConfiguration
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTermbaseConfiguration
- uid: Sdl.ProjectAutomation.Core.IProject.GetTermbaseConfiguration(System.Boolean)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetTermbaseConfiguration(System.Boolean)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: GetTermbaseConfiguration(Boolean)
  nameWithType: IProject.GetTermbaseConfiguration(Boolean)
  fullName: Sdl.ProjectAutomation.Core.IProject.GetTermbaseConfiguration(System.Boolean)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetTermbaseConfiguration(System.Boolean)
    name: GetTermbaseConfiguration
    nameWithType: IProject.GetTermbaseConfiguration
    fullName: Sdl.ProjectAutomation.Core.IProject.GetTermbaseConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetTermbaseConfiguration(System.Boolean)
    name: GetTermbaseConfiguration
    nameWithType: IProject.GetTermbaseConfiguration
    fullName: Sdl.ProjectAutomation.Core.IProject.GetTermbaseConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.TermbaseConfiguration
  commentId: T:Sdl.ProjectAutomation.Core.TermbaseConfiguration
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: TermbaseConfiguration
  nameWithType: TermbaseConfiguration
  fullName: Sdl.ProjectAutomation.Core.TermbaseConfiguration
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTermbaseConfiguration*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTermbaseConfiguration
  isExternal: true
  name: UpdateTermbaseConfiguration
  nameWithType: FileBasedProject.UpdateTermbaseConfiguration
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateTermbaseConfiguration
- uid: Sdl.ProjectAutomation.Core.IProject.UpdateTermbaseConfiguration(Sdl.ProjectAutomation.Core.TermbaseConfiguration)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.UpdateTermbaseConfiguration(Sdl.ProjectAutomation.Core.TermbaseConfiguration)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: UpdateTermbaseConfiguration(TermbaseConfiguration)
  nameWithType: IProject.UpdateTermbaseConfiguration(TermbaseConfiguration)
  fullName: Sdl.ProjectAutomation.Core.IProject.UpdateTermbaseConfiguration(Sdl.ProjectAutomation.Core.TermbaseConfiguration)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.UpdateTermbaseConfiguration(Sdl.ProjectAutomation.Core.TermbaseConfiguration)
    name: UpdateTermbaseConfiguration
    nameWithType: IProject.UpdateTermbaseConfiguration
    fullName: Sdl.ProjectAutomation.Core.IProject.UpdateTermbaseConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.ProjectAutomation.Core.TermbaseConfiguration
    name: TermbaseConfiguration
    nameWithType: TermbaseConfiguration
    fullName: Sdl.ProjectAutomation.Core.TermbaseConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.UpdateTermbaseConfiguration(Sdl.ProjectAutomation.Core.TermbaseConfiguration)
    name: UpdateTermbaseConfiguration
    nameWithType: IProject.UpdateTermbaseConfiguration
    fullName: Sdl.ProjectAutomation.Core.IProject.UpdateTermbaseConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.ProjectAutomation.Core.TermbaseConfiguration
    name: TermbaseConfiguration
    nameWithType: TermbaseConfiguration
    fullName: Sdl.ProjectAutomation.Core.TermbaseConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSettings*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSettings
  isExternal: true
  name: GetSettings
  nameWithType: FileBasedProject.GetSettings
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSettings
- uid: Sdl.ProjectAutomation.Core.IProject.GetSettings
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetSettings
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: GetSettings()
  nameWithType: IProject.GetSettings()
  fullName: Sdl.ProjectAutomation.Core.IProject.GetSettings()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetSettings
    name: GetSettings
    nameWithType: IProject.GetSettings
    fullName: Sdl.ProjectAutomation.Core.IProject.GetSettings
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetSettings
    name: GetSettings
    nameWithType: IProject.GetSettings
    fullName: Sdl.ProjectAutomation.Core.IProject.GetSettings
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.Settings.ISettingsBundle
  isExternal: true
  name: ISettingsBundle
  nameWithType: ISettingsBundle
  fullName: Sdl.Core.Settings.ISettingsBundle
- uid: Sdl.ProjectAutomation.Core.IProject.GetSettings(Sdl.Core.Globalization.Language)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetSettings(Sdl.Core.Globalization.Language)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: GetSettings(Language)
  nameWithType: IProject.GetSettings(Language)
  fullName: Sdl.ProjectAutomation.Core.IProject.GetSettings(Sdl.Core.Globalization.Language)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetSettings(Sdl.Core.Globalization.Language)
    name: GetSettings
    nameWithType: IProject.GetSettings
    fullName: Sdl.ProjectAutomation.Core.IProject.GetSettings
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Globalization.Language
    name: Language
    nameWithType: Language
    fullName: Sdl.Core.Globalization.Language
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetSettings(Sdl.Core.Globalization.Language)
    name: GetSettings
    nameWithType: IProject.GetSettings
    fullName: Sdl.ProjectAutomation.Core.IProject.GetSettings
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Globalization.Language
    name: Language
    nameWithType: Language
    fullName: Sdl.Core.Globalization.Language
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateSettings*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateSettings
  isExternal: true
  name: UpdateSettings
  nameWithType: FileBasedProject.UpdateSettings
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.UpdateSettings
- uid: Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Settings.ISettingsBundle)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Settings.ISettingsBundle)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: UpdateSettings(ISettingsBundle)
  nameWithType: IProject.UpdateSettings(ISettingsBundle)
  fullName: Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Settings.ISettingsBundle)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Settings.ISettingsBundle)
    name: UpdateSettings
    nameWithType: IProject.UpdateSettings
    fullName: Sdl.ProjectAutomation.Core.IProject.UpdateSettings
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Settings.ISettingsBundle
    name: ISettingsBundle
    nameWithType: ISettingsBundle
    fullName: Sdl.Core.Settings.ISettingsBundle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Settings.ISettingsBundle)
    name: UpdateSettings
    nameWithType: IProject.UpdateSettings
    fullName: Sdl.ProjectAutomation.Core.IProject.UpdateSettings
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Settings.ISettingsBundle
    name: ISettingsBundle
    nameWithType: ISettingsBundle
    fullName: Sdl.Core.Settings.ISettingsBundle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Globalization.Language,Sdl.Core.Settings.ISettingsBundle)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Globalization.Language,Sdl.Core.Settings.ISettingsBundle)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: UpdateSettings(Language, ISettingsBundle)
  nameWithType: IProject.UpdateSettings(Language, ISettingsBundle)
  fullName: Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Globalization.Language, Sdl.Core.Settings.ISettingsBundle)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Globalization.Language,Sdl.Core.Settings.ISettingsBundle)
    name: UpdateSettings
    nameWithType: IProject.UpdateSettings
    fullName: Sdl.ProjectAutomation.Core.IProject.UpdateSettings
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Globalization.Language
    name: Language
    nameWithType: Language
    fullName: Sdl.Core.Globalization.Language
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.Core.Settings.ISettingsBundle
    name: ISettingsBundle
    nameWithType: ISettingsBundle
    fullName: Sdl.Core.Settings.ISettingsBundle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Globalization.Language,Sdl.Core.Settings.ISettingsBundle)
    name: UpdateSettings
    nameWithType: IProject.UpdateSettings
    fullName: Sdl.ProjectAutomation.Core.IProject.UpdateSettings
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Globalization.Language
    name: Language
    nameWithType: Language
    fullName: Sdl.Core.Globalization.Language
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.Core.Settings.ISettingsBundle
    name: ISettingsBundle
    nameWithType: ISettingsBundle
    fullName: Sdl.Core.Settings.ISettingsBundle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectStatistics*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectStatistics
  isExternal: true
  name: GetProjectStatistics
  nameWithType: FileBasedProject.GetProjectStatistics
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectStatistics
- uid: Sdl.ProjectAutomation.Core.IProject.GetProjectStatistics
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetProjectStatistics
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: GetProjectStatistics()
  nameWithType: IProject.GetProjectStatistics()
  fullName: Sdl.ProjectAutomation.Core.IProject.GetProjectStatistics()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetProjectStatistics
    name: GetProjectStatistics
    nameWithType: IProject.GetProjectStatistics
    fullName: Sdl.ProjectAutomation.Core.IProject.GetProjectStatistics
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetProjectStatistics
    name: GetProjectStatistics
    nameWithType: IProject.GetProjectStatistics
    fullName: Sdl.ProjectAutomation.Core.IProject.GetProjectStatistics
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.ProjectStatistics
  commentId: T:Sdl.ProjectAutomation.Core.ProjectStatistics
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ProjectStatistics
  nameWithType: ProjectStatistics
  fullName: Sdl.ProjectAutomation.Core.ProjectStatistics
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSourceLanguageFiles*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSourceLanguageFiles
  isExternal: true
  name: GetSourceLanguageFiles
  nameWithType: FileBasedProject.GetSourceLanguageFiles
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetSourceLanguageFiles
- uid: Sdl.ProjectAutomation.Core.IProject.GetSourceLanguageFiles
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetSourceLanguageFiles
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: GetSourceLanguageFiles()
  nameWithType: IProject.GetSourceLanguageFiles()
  fullName: Sdl.ProjectAutomation.Core.IProject.GetSourceLanguageFiles()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetSourceLanguageFiles
    name: GetSourceLanguageFiles
    nameWithType: IProject.GetSourceLanguageFiles
    fullName: Sdl.ProjectAutomation.Core.IProject.GetSourceLanguageFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetSourceLanguageFiles
    name: GetSourceLanguageFiles
    nameWithType: IProject.GetSourceLanguageFiles
    fullName: Sdl.ProjectAutomation.Core.IProject.GetSourceLanguageFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.ProjectFile[]
  isExternal: true
  name: ProjectFile[]
  nameWithType: ProjectFile[]
  fullName: Sdl.ProjectAutomation.Core.ProjectFile[]
  nameWithType.vb: ProjectFile()
  fullName.vb: Sdl.ProjectAutomation.Core.ProjectFile()
  name.vb: ProjectFile()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.ProjectFile
    name: ProjectFile
    nameWithType: ProjectFile
    fullName: Sdl.ProjectAutomation.Core.ProjectFile
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.ProjectFile
    name: ProjectFile
    nameWithType: ProjectFile
    fullName: Sdl.ProjectAutomation.Core.ProjectFile
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTargetLanguageFiles*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTargetLanguageFiles
  isExternal: true
  name: GetTargetLanguageFiles
  nameWithType: FileBasedProject.GetTargetLanguageFiles
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetTargetLanguageFiles
- uid: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles(Sdl.Core.Globalization.Language)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles(Sdl.Core.Globalization.Language)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: GetTargetLanguageFiles(Language)
  nameWithType: IProject.GetTargetLanguageFiles(Language)
  fullName: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles(Sdl.Core.Globalization.Language)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles(Sdl.Core.Globalization.Language)
    name: GetTargetLanguageFiles
    nameWithType: IProject.GetTargetLanguageFiles
    fullName: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Globalization.Language
    name: Language
    nameWithType: Language
    fullName: Sdl.Core.Globalization.Language
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles(Sdl.Core.Globalization.Language)
    name: GetTargetLanguageFiles
    nameWithType: IProject.GetTargetLanguageFiles
    fullName: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Globalization.Language
    name: Language
    nameWithType: Language
    fullName: Sdl.Core.Globalization.Language
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: GetTargetLanguageFiles()
  nameWithType: IProject.GetTargetLanguageFiles()
  fullName: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles
    name: GetTargetLanguageFiles
    nameWithType: IProject.GetTargetLanguageFiles
    fullName: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles
    name: GetTargetLanguageFiles
    nameWithType: IProject.GetTargetLanguageFiles
    fullName: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFiles*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFiles
  isExternal: true
  name: AddBilingualReferenceFiles
  nameWithType: FileBasedProject.AddBilingualReferenceFiles
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFiles
- uid: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping[])
  commentId: M:Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping[])
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: AddBilingualReferenceFiles(BilingualFileMapping[])
  nameWithType: IProject.AddBilingualReferenceFiles(BilingualFileMapping[])
  fullName: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping[])
  nameWithType.vb: IProject.AddBilingualReferenceFiles(BilingualFileMapping())
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping())
  name.vb: AddBilingualReferenceFiles(BilingualFileMapping())
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping[])
    name: AddBilingualReferenceFiles
    nameWithType: IProject.AddBilingualReferenceFiles
    fullName: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.ProjectAutomation.Core.BilingualFileMapping
    name: BilingualFileMapping
    nameWithType: BilingualFileMapping
    fullName: Sdl.ProjectAutomation.Core.BilingualFileMapping
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping[])
    name: AddBilingualReferenceFiles
    nameWithType: IProject.AddBilingualReferenceFiles
    fullName: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.ProjectAutomation.Core.BilingualFileMapping
    name: BilingualFileMapping
    nameWithType: BilingualFileMapping
    fullName: Sdl.ProjectAutomation.Core.BilingualFileMapping
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.BilingualFileMapping[]
  isExternal: true
  name: BilingualFileMapping[]
  nameWithType: BilingualFileMapping[]
  fullName: Sdl.ProjectAutomation.Core.BilingualFileMapping[]
  nameWithType.vb: BilingualFileMapping()
  fullName.vb: Sdl.ProjectAutomation.Core.BilingualFileMapping()
  name.vb: BilingualFileMapping()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.BilingualFileMapping
    name: BilingualFileMapping
    nameWithType: BilingualFileMapping
    fullName: Sdl.ProjectAutomation.Core.BilingualFileMapping
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.BilingualFileMapping
    name: BilingualFileMapping
    nameWithType: BilingualFileMapping
    fullName: Sdl.ProjectAutomation.Core.BilingualFileMapping
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFile*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFile
  isExternal: true
  name: AddBilingualReferenceFile
  nameWithType: FileBasedProject.AddBilingualReferenceFile
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddBilingualReferenceFile
- uid: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFile(Sdl.ProjectAutomation.Core.BilingualFileMapping)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFile(Sdl.ProjectAutomation.Core.BilingualFileMapping)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: AddBilingualReferenceFile(BilingualFileMapping)
  nameWithType: IProject.AddBilingualReferenceFile(BilingualFileMapping)
  fullName: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFile(Sdl.ProjectAutomation.Core.BilingualFileMapping)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFile(Sdl.ProjectAutomation.Core.BilingualFileMapping)
    name: AddBilingualReferenceFile
    nameWithType: IProject.AddBilingualReferenceFile
    fullName: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.ProjectAutomation.Core.BilingualFileMapping
    name: BilingualFileMapping
    nameWithType: BilingualFileMapping
    fullName: Sdl.ProjectAutomation.Core.BilingualFileMapping
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFile(Sdl.ProjectAutomation.Core.BilingualFileMapping)
    name: AddBilingualReferenceFile
    nameWithType: IProject.AddBilingualReferenceFile
    fullName: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.ProjectAutomation.Core.BilingualFileMapping
    name: BilingualFileMapping
    nameWithType: BilingualFileMapping
    fullName: Sdl.ProjectAutomation.Core.BilingualFileMapping
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.BilingualFileMapping
  commentId: T:Sdl.ProjectAutomation.Core.BilingualFileMapping
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: BilingualFileMapping
  nameWithType: BilingualFileMapping
  fullName: Sdl.ProjectAutomation.Core.BilingualFileMapping
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.RemoveBilingualReferenceFile*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.RemoveBilingualReferenceFile
  isExternal: true
  name: RemoveBilingualReferenceFile
  nameWithType: FileBasedProject.RemoveBilingualReferenceFile
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.RemoveBilingualReferenceFile
- uid: Sdl.ProjectAutomation.Core.IProject.RemoveBilingualReferenceFile(System.Guid)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.RemoveBilingualReferenceFile(System.Guid)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: RemoveBilingualReferenceFile(Guid)
  nameWithType: IProject.RemoveBilingualReferenceFile(Guid)
  fullName: Sdl.ProjectAutomation.Core.IProject.RemoveBilingualReferenceFile(System.Guid)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.RemoveBilingualReferenceFile(System.Guid)
    name: RemoveBilingualReferenceFile
    nameWithType: IProject.RemoveBilingualReferenceFile
    fullName: Sdl.ProjectAutomation.Core.IProject.RemoveBilingualReferenceFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.RemoveBilingualReferenceFile(System.Guid)
    name: RemoveBilingualReferenceFile
    nameWithType: IProject.RemoveBilingualReferenceFile
    fullName: Sdl.ProjectAutomation.Core.IProject.RemoveBilingualReferenceFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFile*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFile
  isExternal: true
  name: GetFile
  nameWithType: FileBasedProject.GetFile
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFile
- uid: Sdl.ProjectAutomation.Core.IProject.GetFile(System.Guid)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetFile(System.Guid)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: GetFile(Guid)
  nameWithType: IProject.GetFile(Guid)
  fullName: Sdl.ProjectAutomation.Core.IProject.GetFile(System.Guid)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetFile(System.Guid)
    name: GetFile
    nameWithType: IProject.GetFile
    fullName: Sdl.ProjectAutomation.Core.IProject.GetFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetFile(System.Guid)
    name: GetFile
    nameWithType: IProject.GetFile
    fullName: Sdl.ProjectAutomation.Core.IProject.GetFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.ProjectFile
  commentId: T:Sdl.ProjectAutomation.Core.ProjectFile
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ProjectFile
  nameWithType: ProjectFile
  fullName: Sdl.ProjectAutomation.Core.ProjectFile
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFiles*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFiles
  isExternal: true
  name: GetFiles
  nameWithType: FileBasedProject.GetFiles
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFiles
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.SetFileRole*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.SetFileRole
  isExternal: true
  name: SetFileRole
  nameWithType: FileBasedProject.SetFileRole
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.SetFileRole
- uid: Sdl.ProjectAutomation.Core.IProject.SetFileRole(System.Guid[],Sdl.ProjectAutomation.Core.FileRole)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.SetFileRole(System.Guid[],Sdl.ProjectAutomation.Core.FileRole)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: SetFileRole(Guid[], FileRole)
  nameWithType: IProject.SetFileRole(Guid[], FileRole)
  fullName: Sdl.ProjectAutomation.Core.IProject.SetFileRole(System.Guid[], Sdl.ProjectAutomation.Core.FileRole)
  nameWithType.vb: IProject.SetFileRole(Guid(), FileRole)
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.SetFileRole(System.Guid(), Sdl.ProjectAutomation.Core.FileRole)
  name.vb: SetFileRole(Guid(), FileRole)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.SetFileRole(System.Guid[],Sdl.ProjectAutomation.Core.FileRole)
    name: SetFileRole
    nameWithType: IProject.SetFileRole
    fullName: Sdl.ProjectAutomation.Core.IProject.SetFileRole
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.ProjectAutomation.Core.FileRole
    name: FileRole
    nameWithType: FileRole
    fullName: Sdl.ProjectAutomation.Core.FileRole
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.SetFileRole(System.Guid[],Sdl.ProjectAutomation.Core.FileRole)
    name: SetFileRole
    nameWithType: IProject.SetFileRole
    fullName: Sdl.ProjectAutomation.Core.IProject.SetFileRole
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.ProjectAutomation.Core.FileRole
    name: FileRole
    nameWithType: FileRole
    fullName: Sdl.ProjectAutomation.Core.FileRole
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.FileRole
  commentId: T:Sdl.ProjectAutomation.Core.FileRole
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: FileRole
  nameWithType: FileRole
  fullName: Sdl.ProjectAutomation.Core.FileRole
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFiles*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFiles
  isExternal: true
  name: AddFiles
  nameWithType: FileBasedProject.AddFiles
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFiles
- uid: Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[])
  commentId: M:Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[])
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: AddFiles(String[])
  nameWithType: IProject.AddFiles(String[])
  fullName: Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[])
  nameWithType.vb: IProject.AddFiles(String())
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String())
  name.vb: AddFiles(String())
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[])
    name: AddFiles
    nameWithType: IProject.AddFiles
    fullName: Sdl.ProjectAutomation.Core.IProject.AddFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[])
    name: AddFiles
    nameWithType: IProject.AddFiles
    fullName: Sdl.ProjectAutomation.Core.IProject.AddFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[],System.String)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[],System.String)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: AddFiles(String[], String)
  nameWithType: IProject.AddFiles(String[], String)
  fullName: Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[], System.String)
  nameWithType.vb: IProject.AddFiles(String(), String)
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String(), System.String)
  name.vb: AddFiles(String(), String)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[],System.String)
    name: AddFiles
    nameWithType: IProject.AddFiles
    fullName: Sdl.ProjectAutomation.Core.IProject.AddFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[],System.String)
    name: AddFiles
    nameWithType: IProject.AddFiles
    fullName: Sdl.ProjectAutomation.Core.IProject.AddFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFolderWithFiles*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFolderWithFiles
  isExternal: true
  name: AddFolderWithFiles
  nameWithType: FileBasedProject.AddFolderWithFiles
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddFolderWithFiles
- uid: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String,System.Boolean)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String,System.Boolean)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: AddFolderWithFiles(String, Boolean)
  nameWithType: IProject.AddFolderWithFiles(String, Boolean)
  fullName: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String, System.Boolean)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String,System.Boolean)
    name: AddFolderWithFiles
    nameWithType: IProject.AddFolderWithFiles
    fullName: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String,System.Boolean)
    name: AddFolderWithFiles
    nameWithType: IProject.AddFolderWithFiles
    fullName: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String,System.String,System.Boolean)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String,System.String,System.Boolean)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: AddFolderWithFiles(String, String, Boolean)
  nameWithType: IProject.AddFolderWithFiles(String, String, Boolean)
  fullName: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String, System.String, System.Boolean)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String,System.String,System.Boolean)
    name: AddFolderWithFiles
    nameWithType: IProject.AddFolderWithFiles
    fullName: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String,System.String,System.Boolean)
    name: AddFolderWithFiles
    nameWithType: IProject.AddFolderWithFiles
    fullName: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddNewFileVersion*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.AddNewFileVersion
  isExternal: true
  name: AddNewFileVersion
  nameWithType: FileBasedProject.AddNewFileVersion
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.AddNewFileVersion
- uid: Sdl.ProjectAutomation.Core.IProject.AddNewFileVersion(System.Guid,System.String)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.AddNewFileVersion(System.Guid,System.String)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: AddNewFileVersion(Guid, String)
  nameWithType: IProject.AddNewFileVersion(Guid, String)
  fullName: Sdl.ProjectAutomation.Core.IProject.AddNewFileVersion(System.Guid, System.String)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.AddNewFileVersion(System.Guid,System.String)
    name: AddNewFileVersion
    nameWithType: IProject.AddNewFileVersion
    fullName: Sdl.ProjectAutomation.Core.IProject.AddNewFileVersion
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.AddNewFileVersion(System.Guid,System.String)
    name: AddNewFileVersion
    nameWithType: IProject.AddNewFileVersion
    fullName: Sdl.ProjectAutomation.Core.IProject.AddNewFileVersion
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateMergedProjectFile*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateMergedProjectFile
  isExternal: true
  name: CreateMergedProjectFile
  nameWithType: FileBasedProject.CreateMergedProjectFile
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateMergedProjectFile
- uid: Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile(System.String,System.String,System.Guid[])
  commentId: M:Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile(System.String,System.String,System.Guid[])
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: CreateMergedProjectFile(String, String, Guid[])
  nameWithType: IProject.CreateMergedProjectFile(String, String, Guid[])
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile(System.String, System.String, System.Guid[])
  nameWithType.vb: IProject.CreateMergedProjectFile(String, String, Guid())
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile(System.String, System.String, System.Guid())
  name.vb: CreateMergedProjectFile(String, String, Guid())
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile(System.String,System.String,System.Guid[])
    name: CreateMergedProjectFile
    nameWithType: IProject.CreateMergedProjectFile
    fullName: Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile(System.String,System.String,System.Guid[])
    name: CreateMergedProjectFile
    nameWithType: IProject.CreateMergedProjectFile
    fullName: Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.MergedProjectFile
  commentId: T:Sdl.ProjectAutomation.Core.MergedProjectFile
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: MergedProjectFile
  nameWithType: MergedProjectFile
  fullName: Sdl.ProjectAutomation.Core.MergedProjectFile
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.OpenProjectFileStream*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.OpenProjectFileStream
  isExternal: true
  name: OpenProjectFileStream
  nameWithType: FileBasedProject.OpenProjectFileStream
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.OpenProjectFileStream
- uid: Sdl.ProjectAutomation.Core.IProject.OpenProjectFileStream(System.Guid)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.OpenProjectFileStream(System.Guid)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: OpenProjectFileStream(Guid)
  nameWithType: IProject.OpenProjectFileStream(Guid)
  fullName: Sdl.ProjectAutomation.Core.IProject.OpenProjectFileStream(System.Guid)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.OpenProjectFileStream(System.Guid)
    name: OpenProjectFileStream
    nameWithType: IProject.OpenProjectFileStream
    fullName: Sdl.ProjectAutomation.Core.IProject.OpenProjectFileStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.OpenProjectFileStream(System.Guid)
    name: OpenProjectFileStream
    nameWithType: IProject.OpenProjectFileStream
    fullName: Sdl.ProjectAutomation.Core.IProject.OpenProjectFileStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.SaveProjectFileAs*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.SaveProjectFileAs
  isExternal: true
  name: SaveProjectFileAs
  nameWithType: FileBasedProject.SaveProjectFileAs
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.SaveProjectFileAs
- uid: Sdl.ProjectAutomation.Core.IProject.SaveProjectFileAs(System.Guid,System.String)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.SaveProjectFileAs(System.Guid,System.String)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: SaveProjectFileAs(Guid, String)
  nameWithType: IProject.SaveProjectFileAs(Guid, String)
  fullName: Sdl.ProjectAutomation.Core.IProject.SaveProjectFileAs(System.Guid, System.String)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.SaveProjectFileAs(System.Guid,System.String)
    name: SaveProjectFileAs
    nameWithType: IProject.SaveProjectFileAs
    fullName: Sdl.ProjectAutomation.Core.IProject.SaveProjectFileAs
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.SaveProjectFileAs(System.Guid,System.String)
    name: SaveProjectFileAs
    nameWithType: IProject.SaveProjectFileAs
    fullName: Sdl.ProjectAutomation.Core.IProject.SaveProjectFileAs
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTask*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTask
  isExternal: true
  name: RunAutomaticTask
  nameWithType: FileBasedProject.RunAutomaticTask
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.RunAutomaticTask
- uid: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[],System.String)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[],System.String)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: RunAutomaticTask(Guid[], String)
  nameWithType: IProject.RunAutomaticTask(Guid[], String)
  fullName: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[], System.String)
  nameWithType.vb: IProject.RunAutomaticTask(Guid(), String)
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid(), System.String)
  name.vb: RunAutomaticTask(Guid(), String)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[],System.String)
    name: RunAutomaticTask
    nameWithType: IProject.RunAutomaticTask
    fullName: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[],System.String)
    name: RunAutomaticTask
    nameWithType: IProject.RunAutomaticTask
    fullName: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.AutomaticTask
  commentId: T:Sdl.ProjectAutomation.Core.AutomaticTask
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: AutomaticTask
  nameWithType: AutomaticTask
  fullName: Sdl.ProjectAutomation.Core.AutomaticTask
- uid: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[],System.String,System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  commentId: M:Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[],System.String,System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: RunAutomaticTask(Guid[], String, EventHandler<TaskStatusEventArgs>, EventHandler<TaskMessageEventArgs>)
  nameWithType: IProject.RunAutomaticTask(Guid[], String, EventHandler<TaskStatusEventArgs>, EventHandler<TaskMessageEventArgs>)
  fullName: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[], System.String, System.EventHandler<Sdl.ProjectAutomation.Core.TaskStatusEventArgs>, System.EventHandler<Sdl.ProjectAutomation.Core.TaskMessageEventArgs>)
  nameWithType.vb: IProject.RunAutomaticTask(Guid(), String, EventHandler(Of TaskStatusEventArgs), EventHandler(Of TaskMessageEventArgs))
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid(), System.String, System.EventHandler(Of Sdl.ProjectAutomation.Core.TaskStatusEventArgs), System.EventHandler(Of Sdl.ProjectAutomation.Core.TaskMessageEventArgs))
  name.vb: RunAutomaticTask(Guid(), String, EventHandler(Of TaskStatusEventArgs), EventHandler(Of TaskMessageEventArgs))
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[],System.String,System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
    name: RunAutomaticTask
    nameWithType: IProject.RunAutomaticTask
    fullName: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.TaskStatusEventArgs
    name: TaskStatusEventArgs
    nameWithType: TaskStatusEventArgs
    fullName: Sdl.ProjectAutomation.Core.TaskStatusEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.TaskMessageEventArgs
    name: TaskMessageEventArgs
    nameWithType: TaskMessageEventArgs
    fullName: Sdl.ProjectAutomation.Core.TaskMessageEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[],System.String,System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
    name: RunAutomaticTask
    nameWithType: IProject.RunAutomaticTask
    fullName: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.TaskStatusEventArgs
    name: TaskStatusEventArgs
    nameWithType: TaskStatusEventArgs
    fullName: Sdl.ProjectAutomation.Core.TaskStatusEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.TaskMessageEventArgs
    name: TaskMessageEventArgs
    nameWithType: TaskMessageEventArgs
    fullName: Sdl.ProjectAutomation.Core.TaskMessageEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.SaveTaskReportAs*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.SaveTaskReportAs
  isExternal: true
  name: SaveTaskReportAs
  nameWithType: FileBasedProject.SaveTaskReportAs
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.SaveTaskReportAs
- uid: Sdl.ProjectAutomation.Core.IProject.SaveTaskReportAs(System.Guid,System.String,Sdl.ProjectAutomation.Core.ReportFormat)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.SaveTaskReportAs(System.Guid,System.String,Sdl.ProjectAutomation.Core.ReportFormat)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: SaveTaskReportAs(Guid, String, ReportFormat)
  nameWithType: IProject.SaveTaskReportAs(Guid, String, ReportFormat)
  fullName: Sdl.ProjectAutomation.Core.IProject.SaveTaskReportAs(System.Guid, System.String, Sdl.ProjectAutomation.Core.ReportFormat)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.SaveTaskReportAs(System.Guid,System.String,Sdl.ProjectAutomation.Core.ReportFormat)
    name: SaveTaskReportAs
    nameWithType: IProject.SaveTaskReportAs
    fullName: Sdl.ProjectAutomation.Core.IProject.SaveTaskReportAs
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.ProjectAutomation.Core.ReportFormat
    name: ReportFormat
    nameWithType: ReportFormat
    fullName: Sdl.ProjectAutomation.Core.ReportFormat
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.SaveTaskReportAs(System.Guid,System.String,Sdl.ProjectAutomation.Core.ReportFormat)
    name: SaveTaskReportAs
    nameWithType: IProject.SaveTaskReportAs
    fullName: Sdl.ProjectAutomation.Core.IProject.SaveTaskReportAs
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.ProjectAutomation.Core.ReportFormat
    name: ReportFormat
    nameWithType: ReportFormat
    fullName: Sdl.ProjectAutomation.Core.ReportFormat
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.ReportFormat
  commentId: T:Sdl.ProjectAutomation.Core.ReportFormat
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ReportFormat
  nameWithType: ReportFormat
  fullName: Sdl.ProjectAutomation.Core.ReportFormat
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateManualTask*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateManualTask
  isExternal: true
  name: CreateManualTask
  nameWithType: FileBasedProject.CreateManualTask
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateManualTask
- uid: Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String,System.String,System.DateTime,Sdl.ProjectAutomation.Core.TaskFileInfo[])
  commentId: M:Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String,System.String,System.DateTime,Sdl.ProjectAutomation.Core.TaskFileInfo[])
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: CreateManualTask(String, String, DateTime, TaskFileInfo[])
  nameWithType: IProject.CreateManualTask(String, String, DateTime, TaskFileInfo[])
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String, System.String, System.DateTime, Sdl.ProjectAutomation.Core.TaskFileInfo[])
  nameWithType.vb: IProject.CreateManualTask(String, String, DateTime, TaskFileInfo())
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String, System.String, System.DateTime, Sdl.ProjectAutomation.Core.TaskFileInfo())
  name.vb: CreateManualTask(String, String, DateTime, TaskFileInfo())
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String,System.String,System.DateTime,Sdl.ProjectAutomation.Core.TaskFileInfo[])
    name: CreateManualTask
    nameWithType: IProject.CreateManualTask
    fullName: Sdl.ProjectAutomation.Core.IProject.CreateManualTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.ProjectAutomation.Core.TaskFileInfo
    name: TaskFileInfo
    nameWithType: TaskFileInfo
    fullName: Sdl.ProjectAutomation.Core.TaskFileInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String,System.String,System.DateTime,Sdl.ProjectAutomation.Core.TaskFileInfo[])
    name: CreateManualTask
    nameWithType: IProject.CreateManualTask
    fullName: Sdl.ProjectAutomation.Core.IProject.CreateManualTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.ProjectAutomation.Core.TaskFileInfo
    name: TaskFileInfo
    nameWithType: TaskFileInfo
    fullName: Sdl.ProjectAutomation.Core.TaskFileInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Sdl.ProjectAutomation.Core.TaskFileInfo[]
  isExternal: true
  name: TaskFileInfo[]
  nameWithType: TaskFileInfo[]
  fullName: Sdl.ProjectAutomation.Core.TaskFileInfo[]
  nameWithType.vb: TaskFileInfo()
  fullName.vb: Sdl.ProjectAutomation.Core.TaskFileInfo()
  name.vb: TaskFileInfo()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.TaskFileInfo
    name: TaskFileInfo
    nameWithType: TaskFileInfo
    fullName: Sdl.ProjectAutomation.Core.TaskFileInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.TaskFileInfo
    name: TaskFileInfo
    nameWithType: TaskFileInfo
    fullName: Sdl.ProjectAutomation.Core.TaskFileInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectAutomation.Core.ManualTask
  commentId: T:Sdl.ProjectAutomation.Core.ManualTask
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ManualTask
  nameWithType: ManualTask
  fullName: Sdl.ProjectAutomation.Core.ManualTask
- uid: Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String,System.String,System.DateTime,System.Guid[])
  commentId: M:Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String,System.String,System.DateTime,System.Guid[])
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: CreateManualTask(String, String, DateTime, Guid[])
  nameWithType: IProject.CreateManualTask(String, String, DateTime, Guid[])
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String, System.String, System.DateTime, System.Guid[])
  nameWithType.vb: IProject.CreateManualTask(String, String, DateTime, Guid())
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String, System.String, System.DateTime, System.Guid())
  name.vb: CreateManualTask(String, String, DateTime, Guid())
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String,System.String,System.DateTime,System.Guid[])
    name: CreateManualTask
    nameWithType: IProject.CreateManualTask
    fullName: Sdl.ProjectAutomation.Core.IProject.CreateManualTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String,System.String,System.DateTime,System.Guid[])
    name: CreateManualTask
    nameWithType: IProject.CreateManualTask
    fullName: Sdl.ProjectAutomation.Core.IProject.CreateManualTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetManualTask*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetManualTask
  isExternal: true
  name: GetManualTask
  nameWithType: FileBasedProject.GetManualTask
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetManualTask
- uid: Sdl.ProjectAutomation.Core.IProject.GetManualTask(System.Guid)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetManualTask(System.Guid)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: GetManualTask(Guid)
  nameWithType: IProject.GetManualTask(Guid)
  fullName: Sdl.ProjectAutomation.Core.IProject.GetManualTask(System.Guid)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetManualTask(System.Guid)
    name: GetManualTask
    nameWithType: IProject.GetManualTask
    fullName: Sdl.ProjectAutomation.Core.IProject.GetManualTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetManualTask(System.Guid)
    name: GetManualTask
    nameWithType: IProject.GetManualTask
    fullName: Sdl.ProjectAutomation.Core.IProject.GetManualTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetAutomaticTask*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetAutomaticTask
  isExternal: true
  name: GetAutomaticTask
  nameWithType: FileBasedProject.GetAutomaticTask
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetAutomaticTask
- uid: Sdl.ProjectAutomation.Core.IProject.GetAutomaticTask(System.Guid)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetAutomaticTask(System.Guid)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: GetAutomaticTask(Guid)
  nameWithType: IProject.GetAutomaticTask(Guid)
  fullName: Sdl.ProjectAutomation.Core.IProject.GetAutomaticTask(System.Guid)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetAutomaticTask(System.Guid)
    name: GetAutomaticTask
    nameWithType: IProject.GetAutomaticTask
    fullName: Sdl.ProjectAutomation.Core.IProject.GetAutomaticTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetAutomaticTask(System.Guid)
    name: GetAutomaticTask
    nameWithType: IProject.GetAutomaticTask
    fullName: Sdl.ProjectAutomation.Core.IProject.GetAutomaticTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateProjectPackage*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateProjectPackage
  isExternal: true
  name: CreateProjectPackage
  nameWithType: FileBasedProject.CreateProjectPackage
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateProjectPackage
- uid: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions)
  nameWithType: IProject.CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions)
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid, System.String, System.String, Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions)
    name: CreateProjectPackage
    nameWithType: IProject.CreateProjectPackage
    fullName: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
    name: ProjectPackageCreationOptions
    nameWithType: ProjectPackageCreationOptions
    fullName: Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions)
    name: CreateProjectPackage
    nameWithType: IProject.CreateProjectPackage
    fullName: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
    name: ProjectPackageCreationOptions
    nameWithType: ProjectPackageCreationOptions
    fullName: Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
  commentId: T:Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ProjectPackageCreationOptions
  nameWithType: ProjectPackageCreationOptions
  fullName: Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
- uid: Sdl.ProjectAutomation.Core.ProjectPackageCreation
  commentId: T:Sdl.ProjectAutomation.Core.ProjectPackageCreation
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ProjectPackageCreation
  nameWithType: ProjectPackageCreation
  fullName: Sdl.ProjectAutomation.Core.ProjectPackageCreation
- uid: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  commentId: M:Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  nameWithType: IProject.CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid, System.String, System.String, Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions, System.EventHandler<Sdl.ProjectAutomation.Core.ProgressEventArgs>, System.EventHandler<Sdl.ProjectAutomation.Core.MessageEventArgs>)
  nameWithType.vb: IProject.CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid, System.String, System.String, Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions, System.EventHandler(Of Sdl.ProjectAutomation.Core.ProgressEventArgs), System.EventHandler(Of Sdl.ProjectAutomation.Core.MessageEventArgs))
  name.vb: CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
    name: CreateProjectPackage
    nameWithType: IProject.CreateProjectPackage
    fullName: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
    name: ProjectPackageCreationOptions
    nameWithType: ProjectPackageCreationOptions
    fullName: Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.ProjectAutomation.Core.ProgressEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: Sdl.ProjectAutomation.Core.MessageEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
    name: CreateProjectPackage
    nameWithType: IProject.CreateProjectPackage
    fullName: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
    name: ProjectPackageCreationOptions
    nameWithType: ProjectPackageCreationOptions
    fullName: Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.ProjectAutomation.Core.ProgressEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: Sdl.ProjectAutomation.Core.MessageEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateReturnPackage*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateReturnPackage
  isExternal: true
  name: CreateReturnPackage
  nameWithType: FileBasedProject.CreateReturnPackage
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CreateReturnPackage
- uid: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[],System.String,System.String)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[],System.String,System.String)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: CreateReturnPackage(Guid[], String, String)
  nameWithType: IProject.CreateReturnPackage(Guid[], String, String)
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[], System.String, System.String)
  nameWithType.vb: IProject.CreateReturnPackage(Guid(), String, String)
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid(), System.String, System.String)
  name.vb: CreateReturnPackage(Guid(), String, String)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[],System.String,System.String)
    name: CreateReturnPackage
    nameWithType: IProject.CreateReturnPackage
    fullName: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[],System.String,System.String)
    name: CreateReturnPackage
    nameWithType: IProject.CreateReturnPackage
    fullName: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.ReturnPackageCreation
  commentId: T:Sdl.ProjectAutomation.Core.ReturnPackageCreation
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ReturnPackageCreation
  nameWithType: ReturnPackageCreation
  fullName: Sdl.ProjectAutomation.Core.ReturnPackageCreation
- uid: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[],System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  commentId: M:Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[],System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: CreateReturnPackage(Guid[], String, String, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  nameWithType: IProject.CreateReturnPackage(Guid[], String, String, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[], System.String, System.String, System.EventHandler<Sdl.ProjectAutomation.Core.ProgressEventArgs>, System.EventHandler<Sdl.ProjectAutomation.Core.MessageEventArgs>)
  nameWithType.vb: IProject.CreateReturnPackage(Guid(), String, String, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid(), System.String, System.String, System.EventHandler(Of Sdl.ProjectAutomation.Core.ProgressEventArgs), System.EventHandler(Of Sdl.ProjectAutomation.Core.MessageEventArgs))
  name.vb: CreateReturnPackage(Guid(), String, String, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[],System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
    name: CreateReturnPackage
    nameWithType: IProject.CreateReturnPackage
    fullName: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.ProjectAutomation.Core.ProgressEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: Sdl.ProjectAutomation.Core.MessageEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[],System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
    name: CreateReturnPackage
    nameWithType: IProject.CreateReturnPackage
    fullName: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.ProjectAutomation.Core.ProgressEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: Sdl.ProjectAutomation.Core.MessageEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.SavePackageAs*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.SavePackageAs
  isExternal: true
  name: SavePackageAs
  nameWithType: FileBasedProject.SavePackageAs
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.SavePackageAs
- uid: Sdl.ProjectAutomation.Core.IProject.SavePackageAs(System.Guid,System.String)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.SavePackageAs(System.Guid,System.String)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: SavePackageAs(Guid, String)
  nameWithType: IProject.SavePackageAs(Guid, String)
  fullName: Sdl.ProjectAutomation.Core.IProject.SavePackageAs(System.Guid, System.String)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.SavePackageAs(System.Guid,System.String)
    name: SavePackageAs
    nameWithType: IProject.SavePackageAs
    fullName: Sdl.ProjectAutomation.Core.IProject.SavePackageAs
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.SavePackageAs(System.Guid,System.String)
    name: SavePackageAs
    nameWithType: IProject.SavePackageAs
    fullName: Sdl.ProjectAutomation.Core.IProject.SavePackageAs
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.ImportReturnPackage*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.ImportReturnPackage
  isExternal: true
  name: ImportReturnPackage
  nameWithType: FileBasedProject.ImportReturnPackage
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.ImportReturnPackage
- uid: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String)
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: ImportReturnPackage(String)
  nameWithType: IProject.ImportReturnPackage(String)
  fullName: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String)
    name: ImportReturnPackage
    nameWithType: IProject.ImportReturnPackage
    fullName: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String)
    name: ImportReturnPackage
    nameWithType: IProject.ImportReturnPackage
    fullName: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.ReturnPackageImport
  commentId: T:Sdl.ProjectAutomation.Core.ReturnPackageImport
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ReturnPackageImport
  nameWithType: ReturnPackageImport
  fullName: Sdl.ProjectAutomation.Core.ReturnPackageImport
- uid: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  commentId: M:Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: ImportReturnPackage(String, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  nameWithType: IProject.ImportReturnPackage(String, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  fullName: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String, System.EventHandler<Sdl.ProjectAutomation.Core.ProgressEventArgs>, System.EventHandler<Sdl.ProjectAutomation.Core.MessageEventArgs>)
  nameWithType.vb: IProject.ImportReturnPackage(String, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String, System.EventHandler(Of Sdl.ProjectAutomation.Core.ProgressEventArgs), System.EventHandler(Of Sdl.ProjectAutomation.Core.MessageEventArgs))
  name.vb: ImportReturnPackage(String, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
    name: ImportReturnPackage
    nameWithType: IProject.ImportReturnPackage
    fullName: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.ProjectAutomation.Core.ProgressEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: Sdl.ProjectAutomation.Core.MessageEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
    name: ImportReturnPackage
    nameWithType: IProject.ImportReturnPackage
    fullName: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.ProjectAutomation.Core.ProgressEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: Sdl.ProjectAutomation.Core.MessageEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.Delete*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.Delete
  isExternal: true
  name: Delete
  nameWithType: FileBasedProject.Delete
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.Delete
- uid: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.Delete
  commentId: M:Sdl.ProjectAutomation.Core.IProjectDeleteOperation.Delete
  parent: Sdl.ProjectAutomation.Core.IProjectDeleteOperation
  isExternal: true
  name: Delete()
  nameWithType: IProjectDeleteOperation.Delete()
  fullName: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.Delete()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.Delete
    name: Delete
    nameWithType: IProjectDeleteOperation.Delete
    fullName: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.Delete
    name: Delete
    nameWithType: IProjectDeleteOperation.Delete
    fullName: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.DeleteFilesAndDependencies*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.DeleteFilesAndDependencies
  isExternal: true
  name: DeleteFilesAndDependencies
  nameWithType: FileBasedProject.DeleteFilesAndDependencies
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.DeleteFilesAndDependencies
- uid: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.DeleteFilesAndDependencies(System.String)
  commentId: M:Sdl.ProjectAutomation.Core.IProjectDeleteOperation.DeleteFilesAndDependencies(System.String)
  parent: Sdl.ProjectAutomation.Core.IProjectDeleteOperation
  isExternal: true
  name: DeleteFilesAndDependencies(String)
  nameWithType: IProjectDeleteOperation.DeleteFilesAndDependencies(String)
  fullName: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.DeleteFilesAndDependencies(System.String)
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.DeleteFilesAndDependencies(System.String)
    name: DeleteFilesAndDependencies
    nameWithType: IProjectDeleteOperation.DeleteFilesAndDependencies
    fullName: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.DeleteFilesAndDependencies
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.DeleteFilesAndDependencies(System.String)
    name: DeleteFilesAndDependencies
    nameWithType: IProjectDeleteOperation.DeleteFilesAndDependencies
    fullName: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.DeleteFilesAndDependencies
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.DeleteFromServer*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.DeleteFromServer
  isExternal: true
  name: DeleteFromServer
  nameWithType: FileBasedProject.DeleteFromServer
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.DeleteFromServer
- uid: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.DeleteFromServer
  commentId: M:Sdl.ProjectAutomation.Core.IProjectDeleteOperation.DeleteFromServer
  parent: Sdl.ProjectAutomation.Core.IProjectDeleteOperation
  isExternal: true
  name: DeleteFromServer()
  nameWithType: IProjectDeleteOperation.DeleteFromServer()
  fullName: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.DeleteFromServer()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.DeleteFromServer
    name: DeleteFromServer
    nameWithType: IProjectDeleteOperation.DeleteFromServer
    fullName: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.DeleteFromServer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.DeleteFromServer
    name: DeleteFromServer
    nameWithType: IProjectDeleteOperation.DeleteFromServer
    fullName: Sdl.ProjectAutomation.Core.IProjectDeleteOperation.DeleteFromServer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.PublishProject*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.PublishProject
  isExternal: true
  name: PublishProject
  nameWithType: FileBasedProject.PublishProject
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.PublishProject
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.EventHandler{Sdl.ProjectAutomation.FileBased.PublishProjectEventArgs}
  commentId: T:System.EventHandler{Sdl.ProjectAutomation.FileBased.PublishProjectEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PublishProjectEventArgs>
  nameWithType: EventHandler<PublishProjectEventArgs>
  fullName: System.EventHandler<Sdl.ProjectAutomation.FileBased.PublishProjectEventArgs>
  nameWithType.vb: EventHandler(Of PublishProjectEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.ProjectAutomation.FileBased.PublishProjectEventArgs)
  name.vb: EventHandler(Of PublishProjectEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.FileBased.PublishProjectEventArgs
    name: PublishProjectEventArgs
    nameWithType: PublishProjectEventArgs
    fullName: Sdl.ProjectAutomation.FileBased.PublishProjectEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.FileBased.PublishProjectEventArgs
    name: PublishProjectEventArgs
    nameWithType: PublishProjectEventArgs
    fullName: Sdl.ProjectAutomation.FileBased.PublishProjectEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.PublishProjectResult
  commentId: T:Sdl.ProjectAutomation.FileBased.PublishProjectResult
  parent: Sdl.ProjectAutomation.FileBased
  isExternal: true
  name: PublishProjectResult
  nameWithType: PublishProjectResult
  fullName: Sdl.ProjectAutomation.FileBased.PublishProjectResult
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.SynchronizeServerProjectData*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.SynchronizeServerProjectData
  isExternal: true
  name: SynchronizeServerProjectData
  nameWithType: FileBasedProject.SynchronizeServerProjectData
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.SynchronizeServerProjectData
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.UndoCheckoutFiles*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.UndoCheckoutFiles
  isExternal: true
  name: UndoCheckoutFiles
  nameWithType: FileBasedProject.UndoCheckoutFiles
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.UndoCheckoutFiles
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckinFiles*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckinFiles
  isExternal: true
  name: CheckinFiles
  nameWithType: FileBasedProject.CheckinFiles
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckinFiles
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckoutFiles*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckoutFiles
  isExternal: true
  name: CheckoutFiles
  nameWithType: FileBasedProject.CheckoutFiles
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.CheckoutFiles
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadLatestServerVersion*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadLatestServerVersion
  isExternal: true
  name: DownloadLatestServerVersion
  nameWithType: FileBasedProject.DownloadLatestServerVersion
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadLatestServerVersion
- uid: System.EventHandler{Sdl.ProjectApi.Server.DataTransferEventArgs}
  commentId: T:System.EventHandler{Sdl.ProjectApi.Server.DataTransferEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<DataTransferEventArgs>
  nameWithType: EventHandler<DataTransferEventArgs>
  fullName: System.EventHandler<Sdl.ProjectApi.Server.DataTransferEventArgs>
  nameWithType.vb: EventHandler(Of DataTransferEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.ProjectApi.Server.DataTransferEventArgs)
  name.vb: EventHandler(Of DataTransferEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectApi.Server.DataTransferEventArgs
    name: DataTransferEventArgs
    nameWithType: DataTransferEventArgs
    fullName: Sdl.ProjectApi.Server.DataTransferEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectApi.Server.DataTransferEventArgs
    name: DataTransferEventArgs
    nameWithType: DataTransferEventArgs
    fullName: Sdl.ProjectApi.Server.DataTransferEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.Complete*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.Complete
  isExternal: true
  name: Complete
  nameWithType: FileBasedProject.Complete
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.Complete
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadSpecificServerVersion*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadSpecificServerVersion
  isExternal: true
  name: DownloadSpecificServerVersion
  nameWithType: FileBasedProject.DownloadSpecificServerVersion
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.DownloadSpecificServerVersion
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectFileVersionHistory*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectFileVersionHistory
  isExternal: true
  name: GetProjectFileVersionHistory
  nameWithType: FileBasedProject.GetProjectFileVersionHistory
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetProjectFileVersionHistory
- uid: Sdl.ProjectAutomation.Core.ProjectFileVersion[]
  isExternal: true
  name: ProjectFileVersion[]
  nameWithType: ProjectFileVersion[]
  fullName: Sdl.ProjectAutomation.Core.ProjectFileVersion[]
  nameWithType.vb: ProjectFileVersion()
  fullName.vb: Sdl.ProjectAutomation.Core.ProjectFileVersion()
  name.vb: ProjectFileVersion()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.ProjectFileVersion
    name: ProjectFileVersion
    nameWithType: ProjectFileVersion
    fullName: Sdl.ProjectAutomation.Core.ProjectFileVersion
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.ProjectFileVersion
    name: ProjectFileVersion
    nameWithType: ProjectFileVersion
    fullName: Sdl.ProjectAutomation.Core.ProjectFileVersion
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFileTypeConfiguration*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFileTypeConfiguration
  isExternal: true
  name: GetFileTypeConfiguration
  nameWithType: FileBasedProject.GetFileTypeConfiguration
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.GetFileTypeConfiguration
- uid: Sdl.ProjectAutomation.Core.IProject.GetFileTypeConfiguration
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetFileTypeConfiguration
  parent: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: GetFileTypeConfiguration()
  nameWithType: IProject.GetFileTypeConfiguration()
  fullName: Sdl.ProjectAutomation.Core.IProject.GetFileTypeConfiguration()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetFileTypeConfiguration
    name: GetFileTypeConfiguration
    nameWithType: IProject.GetFileTypeConfiguration
    fullName: Sdl.ProjectAutomation.Core.IProject.GetFileTypeConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.IProject.GetFileTypeConfiguration
    name: GetFileTypeConfiguration
    nameWithType: IProject.GetFileTypeConfiguration
    fullName: Sdl.ProjectAutomation.Core.IProject.GetFileTypeConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.ProjectFileTypeConfiguration
  commentId: T:Sdl.ProjectAutomation.Core.ProjectFileTypeConfiguration
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ProjectFileTypeConfiguration
  nameWithType: ProjectFileTypeConfiguration
  fullName: Sdl.ProjectAutomation.Core.ProjectFileTypeConfiguration
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.FilePath*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.FilePath
  isExternal: true
  name: FilePath
  nameWithType: FileBasedProject.FilePath
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.FilePath
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject.Credentials*
  commentId: Overload:Sdl.ProjectAutomation.FileBased.FileBasedProject.Credentials
  isExternal: true
  name: Credentials
  nameWithType: FileBasedProject.Credentials
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject.Credentials
- uid: Sdl.ProjectAutomation.FileBased.ProjectCredentials
  commentId: T:Sdl.ProjectAutomation.FileBased.ProjectCredentials
  parent: Sdl.ProjectAutomation.FileBased
  isExternal: true
  name: ProjectCredentials
  nameWithType: ProjectCredentials
  fullName: Sdl.ProjectAutomation.FileBased.ProjectCredentials
