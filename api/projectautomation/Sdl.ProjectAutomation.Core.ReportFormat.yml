### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Core.ReportFormat
  commentId: T:Sdl.ProjectAutomation.Core.ReportFormat
  id: ReportFormat
  parent: Sdl.ProjectAutomation.Core
  children:
  - Sdl.ProjectAutomation.Core.ReportFormat.Excel
  - Sdl.ProjectAutomation.Core.ReportFormat.Html
  - Sdl.ProjectAutomation.Core.ReportFormat.Mht
  - Sdl.ProjectAutomation.Core.ReportFormat.Name
  - Sdl.ProjectAutomation.Core.ReportFormat.Xml
  langs:
  - csharp
  - vb
  name: ReportFormat
  nameWithType: ReportFormat
  fullName: Sdl.ProjectAutomation.Core.ReportFormat
  type: Class
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nRepresents a file format to which an automatic task report (see <xref href=\"Sdl.ProjectAutomation.Core.AutomaticTask.Reports\" data-throw-if-not-resolved=\"false\"></xref>)\ncan be saved (<xref href=\"Sdl.ProjectAutomation.Core.IProject.SaveTaskReportAs(System.Guid%2cSystem.String%2cSdl.ProjectAutomation.Core.ReportFormat)\" data-throw-if-not-resolved=\"false\"></xref>). You cannot create new instances of this class.\nRather, use one of the predefined static instances (<xref href=\"Sdl.ProjectAutomation.Core.ReportFormat.Excel\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Sdl.ProjectAutomation.Core.ReportFormat.Html\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Sdl.ProjectAutomation.Core.ReportFormat.Mht\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Sdl.ProjectAutomation.Core.ReportFormat.Xml\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  syntax:
    content: public class ReportFormat
    content.vb: Public Class ReportFormat
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.Core.ReportFormat.Excel
  commentId: F:Sdl.ProjectAutomation.Core.ReportFormat.Excel
  id: Excel
  parent: Sdl.ProjectAutomation.Core.ReportFormat
  langs:
  - csharp
  - vb
  name: Excel
  nameWithType: ReportFormat.Excel
  fullName: Sdl.ProjectAutomation.Core.ReportFormat.Excel
  type: Field
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nMicrosoft Excel file format.\n"
  syntax:
    content: public static ReportFormat Excel
    return:
      type: Sdl.ProjectAutomation.Core.ReportFormat
    content.vb: Public Shared Excel As ReportFormat
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.ProjectAutomation.Core.ReportFormat.Html
  commentId: F:Sdl.ProjectAutomation.Core.ReportFormat.Html
  id: Html
  parent: Sdl.ProjectAutomation.Core.ReportFormat
  langs:
  - csharp
  - vb
  name: Html
  nameWithType: ReportFormat.Html
  fullName: Sdl.ProjectAutomation.Core.ReportFormat.Html
  type: Field
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nHtml file format.\n"
  syntax:
    content: public static ReportFormat Html
    return:
      type: Sdl.ProjectAutomation.Core.ReportFormat
    content.vb: Public Shared Html As ReportFormat
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.ProjectAutomation.Core.ReportFormat.Mht
  commentId: F:Sdl.ProjectAutomation.Core.ReportFormat.Mht
  id: Mht
  parent: Sdl.ProjectAutomation.Core.ReportFormat
  langs:
  - csharp
  - vb
  name: Mht
  nameWithType: ReportFormat.Mht
  fullName: Sdl.ProjectAutomation.Core.ReportFormat.Mht
  type: Field
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nMhtml file format.\n"
  syntax:
    content: public static ReportFormat Mht
    return:
      type: Sdl.ProjectAutomation.Core.ReportFormat
    content.vb: Public Shared Mht As ReportFormat
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.ProjectAutomation.Core.ReportFormat.Xml
  commentId: F:Sdl.ProjectAutomation.Core.ReportFormat.Xml
  id: Xml
  parent: Sdl.ProjectAutomation.Core.ReportFormat
  langs:
  - csharp
  - vb
  name: Xml
  nameWithType: ReportFormat.Xml
  fullName: Sdl.ProjectAutomation.Core.ReportFormat.Xml
  type: Field
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nXML file format.\n"
  syntax:
    content: public static ReportFormat Xml
    return:
      type: Sdl.ProjectAutomation.Core.ReportFormat
    content.vb: Public Shared Xml As ReportFormat
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.ProjectAutomation.Core.ReportFormat.Name
  commentId: P:Sdl.ProjectAutomation.Core.ReportFormat.Name
  id: Name
  parent: Sdl.ProjectAutomation.Core.ReportFormat
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ReportFormat.Name
  fullName: Sdl.ProjectAutomation.Core.ReportFormat.Name
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets the name of the file format.\n"
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Sdl.ProjectAutomation.Core.ReportFormat.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.ProjectAutomation.Core
  commentId: N:Sdl.ProjectAutomation.Core
  isExternal: true
  name: Sdl.ProjectAutomation.Core
  nameWithType: Sdl.ProjectAutomation.Core
  fullName: Sdl.ProjectAutomation.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Core.ReportFormat
  commentId: T:Sdl.ProjectAutomation.Core.ReportFormat
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ReportFormat
  nameWithType: ReportFormat
  fullName: Sdl.ProjectAutomation.Core.ReportFormat
- uid: Sdl.ProjectAutomation.Core.ReportFormat.Name*
  commentId: Overload:Sdl.ProjectAutomation.Core.ReportFormat.Name
  isExternal: true
  name: Name
  nameWithType: ReportFormat.Name
  fullName: Sdl.ProjectAutomation.Core.ReportFormat.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
