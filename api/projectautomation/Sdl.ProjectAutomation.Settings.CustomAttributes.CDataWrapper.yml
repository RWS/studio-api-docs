### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  commentId: T:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  id: CDataWrapper
  parent: Sdl.ProjectAutomation.Settings.CustomAttributes
  children:
  - Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.#ctor
  - Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.GetSchema
  - Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.GetSchema(System.Xml.Schema.XmlSchemaSet)
  - Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.op_Implicit(Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper)~System.String
  - Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.op_Implicit(System.String)~Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  - Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.ReadXml(System.Xml.XmlReader)
  - Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.ToString
  - Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.Value
  - Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: CDataWrapper
  nameWithType: CDataWrapper
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  type: Class
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings.CustomAttributes
  syntax:
    content: public sealed class CDataWrapper
    content.vb: Public NotInheritable Class CDataWrapper
  inheritance:
  - System.Object
  implements:
  - System.Xml.Serialization.IXmlSerializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.GetSchema(System.Xml.Schema.XmlSchemaSet)
  commentId: M:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.GetSchema(System.Xml.Schema.XmlSchemaSet)
  id: GetSchema(System.Xml.Schema.XmlSchemaSet)
  parent: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  langs:
  - csharp
  - vb
  name: GetSchema(XmlSchemaSet)
  nameWithType: CDataWrapper.GetSchema(XmlSchemaSet)
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.GetSchema(System.Xml.Schema.XmlSchemaSet)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings.CustomAttributes
  syntax:
    content: public static XmlQualifiedName GetSchema(XmlSchemaSet xs)
    parameters:
    - id: xs
      type: System.Xml.Schema.XmlSchemaSet
    return:
      type: System.Xml.XmlQualifiedName
    content.vb: Public Shared Function GetSchema(xs As XmlSchemaSet) As XmlQualifiedName
  overload: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.GetSchema*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.op_Implicit(Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper)~System.String
  commentId: M:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.op_Implicit(Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper)~System.String
  id: op_Implicit(Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper)~System.String
  parent: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  langs:
  - csharp
  - vb
  name: Implicit(CDataWrapper to String)
  nameWithType: CDataWrapper.Implicit(CDataWrapper to String)
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.Implicit(Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper to System.String)
  type: Operator
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings.CustomAttributes
  syntax:
    content: public static implicit operator string (CDataWrapper value)
    parameters:
    - id: value
      type: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
    return:
      type: System.String
    content.vb: Public Shared Widening Operator CType(value As CDataWrapper) As String
  overload: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.op_Implicit*
  nameWithType.vb: CDataWrapper.Widening(CDataWrapper to String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.Widening(Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper to System.String)
  name.vb: Widening(CDataWrapper to String)
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.op_Implicit(System.String)~Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  commentId: M:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.op_Implicit(System.String)~Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  id: op_Implicit(System.String)~Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  parent: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  langs:
  - csharp
  - vb
  name: Implicit(String to CDataWrapper)
  nameWithType: CDataWrapper.Implicit(String to CDataWrapper)
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.Implicit(System.String to Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper)
  type: Operator
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings.CustomAttributes
  syntax:
    content: public static implicit operator CDataWrapper(string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
    content.vb: Public Shared Widening Operator CType(value As String) As CDataWrapper
  overload: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.op_Implicit*
  nameWithType.vb: CDataWrapper.Widening(String to CDataWrapper)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.Widening(System.String to Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper)
  name.vb: Widening(String to CDataWrapper)
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.GetSchema
  commentId: M:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.GetSchema
  id: GetSchema
  parent: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: CDataWrapper.GetSchema()
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.GetSchema()
  type: Method
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings.CustomAttributes
  syntax:
    content: public XmlSchema GetSchema()
    return:
      type: System.Xml.Schema.XmlSchema
    content.vb: Public Function GetSchema As XmlSchema
  overload: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.GetSchema*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.WriteXml(System.Xml.XmlWriter)
  commentId: M:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: CDataWrapper.WriteXml(XmlWriter)
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings.CustomAttributes
  summary: "\n&quot;&quot; => <Node></Node>\n&quot;Foo&quot; => <Node>Foo</Node>\n"
  syntax:
    content: public void WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    content.vb: Public Sub WriteXml(writer As XmlWriter)
  overload: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.WriteXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.ReadXml(System.Xml.XmlReader)
  commentId: M:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: CDataWrapper.ReadXml(XmlReader)
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings.CustomAttributes
  summary: "\n<Node></Node> => &quot;&quot;\n<Node></Node> => &quot;&quot;\n<Node>Foo</Node> => &quot;Foo&quot;\n<Node>Foo</Node> => &quot;Foo&quot;\n"
  syntax:
    content: public void ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    content.vb: Public Sub ReadXml(reader As XmlReader)
  overload: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.ReadXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.ToString
  commentId: M:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.ToString
  id: ToString
  parent: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CDataWrapper.ToString()
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.ToString()
  type: Method
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings.CustomAttributes
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.#ctor
  commentId: M:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.#ctor
  id: '#ctor'
  parent: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  langs:
  - csharp
  - vb
  name: CDataWrapper()
  nameWithType: CDataWrapper.CDataWrapper()
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.CDataWrapper()
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings.CustomAttributes
  syntax:
    content: public CDataWrapper()
    content.vb: Public Sub New
  overload: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.Value
  commentId: P:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.Value
  id: Value
  parent: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: CDataWrapper.Value
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.Value
  type: Property
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings.CustomAttributes
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes
  commentId: N:Sdl.ProjectAutomation.Settings.CustomAttributes
  isExternal: true
  name: Sdl.ProjectAutomation.Settings.CustomAttributes
  nameWithType: Sdl.ProjectAutomation.Settings.CustomAttributes
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: '!:System.Xml.Serialization.IXmlSerializable'
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.GetSchema*
  commentId: Overload:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.GetSchema
  isExternal: true
  name: GetSchema
  nameWithType: CDataWrapper.GetSchema
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.GetSchema
- uid: System.Xml.Schema.XmlSchemaSet
  commentId: '!:System.Xml.Schema.XmlSchemaSet'
  isExternal: true
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.XmlQualifiedName
  commentId: '!:System.Xml.XmlQualifiedName'
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.op_Implicit*
  commentId: Overload:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.op_Implicit
  isExternal: true
  name: Implicit
  nameWithType: CDataWrapper.Implicit
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.Implicit
  nameWithType.vb: CDataWrapper.Widening
  fullName.vb: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.Widening
  name.vb: Widening
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  commentId: T:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
  parent: Sdl.ProjectAutomation.Settings.CustomAttributes
  isExternal: true
  name: CDataWrapper
  nameWithType: CDataWrapper
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchema
  commentId: '!:System.Xml.Schema.XmlSchema'
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.WriteXml*
  commentId: Overload:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.WriteXml
  isExternal: true
  name: WriteXml
  nameWithType: CDataWrapper.WriteXml
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.WriteXml
- uid: System.Xml.XmlWriter
  commentId: '!:System.Xml.XmlWriter'
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.ReadXml*
  commentId: Overload:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.ReadXml
  isExternal: true
  name: ReadXml
  nameWithType: CDataWrapper.ReadXml
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.ReadXml
- uid: System.Xml.XmlReader
  commentId: '!:System.Xml.XmlReader'
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.ToString*
  commentId: Overload:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.ToString
  isExternal: true
  name: ToString
  nameWithType: CDataWrapper.ToString
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.ToString
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.#ctor
  isExternal: true
  name: CDataWrapper
  nameWithType: CDataWrapper.CDataWrapper
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.CDataWrapper
- uid: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.Value*
  commentId: Overload:Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.Value
  isExternal: true
  name: Value
  nameWithType: CDataWrapper.Value
  fullName: Sdl.ProjectAutomation.Settings.CustomAttributes.CDataWrapper.Value
