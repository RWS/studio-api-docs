### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Core.IProject
  commentId: T:Sdl.ProjectAutomation.Core.IProject
  id: IProject
  parent: Sdl.ProjectAutomation.Core
  children:
  - Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFile(Sdl.ProjectAutomation.Core.BilingualFileMapping)
  - Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping[])
  - Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[])
  - Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[],System.String)
  - Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String,System.Boolean)
  - Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String,System.String,System.Boolean)
  - Sdl.ProjectAutomation.Core.IProject.AddNewFileVersion(System.Guid,System.String)
  - Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String,System.String,System.DateTime,Sdl.ProjectAutomation.Core.TaskFileInfo[])
  - Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String,System.String,System.DateTime,System.Guid[])
  - Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile(System.String,System.String,System.Guid[])
  - Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions)
  - Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  - Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[],System.String,System.String)
  - Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[],System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  - Sdl.ProjectAutomation.Core.IProject.GetAutomaticTask(System.Guid)
  - Sdl.ProjectAutomation.Core.IProject.GetFile(System.Guid)
  - Sdl.ProjectAutomation.Core.IProject.GetManualTask(System.Guid)
  - Sdl.ProjectAutomation.Core.IProject.GetProjectInfo
  - Sdl.ProjectAutomation.Core.IProject.GetProjectStatistics
  - Sdl.ProjectAutomation.Core.IProject.GetSettings
  - Sdl.ProjectAutomation.Core.IProject.GetSettings(Sdl.Core.Globalization.Language)
  - Sdl.ProjectAutomation.Core.IProject.GetSourceLanguageFiles
  - Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles
  - Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles(Sdl.Core.Globalization.Language)
  - Sdl.ProjectAutomation.Core.IProject.GetTermbaseConfiguration
  - Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration
  - Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)
  - Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String)
  - Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  - Sdl.ProjectAutomation.Core.IProject.OpenProjectFileStream(System.Guid)
  - Sdl.ProjectAutomation.Core.IProject.RemoveBilingualReferenceFile(System.Guid)
  - Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[],System.String)
  - Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[],System.String,System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  - Sdl.ProjectAutomation.Core.IProject.SavePackageAs(System.Guid,System.String)
  - Sdl.ProjectAutomation.Core.IProject.SaveProjectFileAs(System.Guid,System.String)
  - Sdl.ProjectAutomation.Core.IProject.SaveTaskReportAs(System.Guid,System.String,Sdl.ProjectAutomation.Core.ReportFormat)
  - Sdl.ProjectAutomation.Core.IProject.SetFileRole(System.Guid[],Sdl.ProjectAutomation.Core.FileRole)
  - Sdl.ProjectAutomation.Core.IProject.UpdateProject(Sdl.ProjectAutomation.Core.ProjectInfo)
  - Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Globalization.Language,Sdl.Core.Settings.ISettingsBundle)
  - Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Settings.ISettingsBundle)
  - Sdl.ProjectAutomation.Core.IProject.UpdateTermbaseConfiguration(Sdl.ProjectAutomation.Core.TermbaseConfiguration)
  - Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language,Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  - Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  langs:
  - csharp
  - vb
  name: IProject
  nameWithType: IProject
  fullName: Sdl.ProjectAutomation.Core.IProject
  type: Interface
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public interface IProject
    content.vb: Public Interface IProject
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.ProjectAutomation.Core.IProject.GetProjectInfo
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetProjectInfo
  id: GetProjectInfo
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: GetProjectInfo()
  nameWithType: IProject.GetProjectInfo()
  fullName: Sdl.ProjectAutomation.Core.IProject.GetProjectInfo()
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ProjectInfo GetProjectInfo()
    return:
      type: Sdl.ProjectAutomation.Core.ProjectInfo
    content.vb: Function GetProjectInfo As ProjectInfo
  overload: Sdl.ProjectAutomation.Core.IProject.GetProjectInfo*
- uid: Sdl.ProjectAutomation.Core.IProject.UpdateProject(Sdl.ProjectAutomation.Core.ProjectInfo)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.UpdateProject(Sdl.ProjectAutomation.Core.ProjectInfo)
  id: UpdateProject(Sdl.ProjectAutomation.Core.ProjectInfo)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: UpdateProject(ProjectInfo)
  nameWithType: IProject.UpdateProject(ProjectInfo)
  fullName: Sdl.ProjectAutomation.Core.IProject.UpdateProject(Sdl.ProjectAutomation.Core.ProjectInfo)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ProjectInfo UpdateProject(ProjectInfo projectInfo)
    parameters:
    - id: projectInfo
      type: Sdl.ProjectAutomation.Core.ProjectInfo
    return:
      type: Sdl.ProjectAutomation.Core.ProjectInfo
    content.vb: Function UpdateProject(projectInfo As ProjectInfo) As ProjectInfo
  overload: Sdl.ProjectAutomation.Core.IProject.UpdateProject*
- uid: Sdl.ProjectAutomation.Core.IProject.GetSettings
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetSettings
  id: GetSettings
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: GetSettings()
  nameWithType: IProject.GetSettings()
  fullName: Sdl.ProjectAutomation.Core.IProject.GetSettings()
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ISettingsBundle GetSettings()
    return:
      type: Sdl.Core.Settings.ISettingsBundle
    content.vb: Function GetSettings As ISettingsBundle
  overload: Sdl.ProjectAutomation.Core.IProject.GetSettings*
- uid: Sdl.ProjectAutomation.Core.IProject.GetSettings(Sdl.Core.Globalization.Language)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetSettings(Sdl.Core.Globalization.Language)
  id: GetSettings(Sdl.Core.Globalization.Language)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: GetSettings(Language)
  nameWithType: IProject.GetSettings(Language)
  fullName: Sdl.ProjectAutomation.Core.IProject.GetSettings(Sdl.Core.Globalization.Language)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ISettingsBundle GetSettings(Language targetLanguage)
    parameters:
    - id: targetLanguage
      type: Sdl.Core.Globalization.Language
    return:
      type: Sdl.Core.Settings.ISettingsBundle
    content.vb: Function GetSettings(targetLanguage As Language) As ISettingsBundle
  overload: Sdl.ProjectAutomation.Core.IProject.GetSettings*
- uid: Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Settings.ISettingsBundle)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Settings.ISettingsBundle)
  id: UpdateSettings(Sdl.Core.Settings.ISettingsBundle)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: UpdateSettings(ISettingsBundle)
  nameWithType: IProject.UpdateSettings(ISettingsBundle)
  fullName: Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Settings.ISettingsBundle)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: void UpdateSettings(ISettingsBundle settings)
    parameters:
    - id: settings
      type: Sdl.Core.Settings.ISettingsBundle
    content.vb: Sub UpdateSettings(settings As ISettingsBundle)
  overload: Sdl.ProjectAutomation.Core.IProject.UpdateSettings*
- uid: Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Globalization.Language,Sdl.Core.Settings.ISettingsBundle)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Globalization.Language,Sdl.Core.Settings.ISettingsBundle)
  id: UpdateSettings(Sdl.Core.Globalization.Language,Sdl.Core.Settings.ISettingsBundle)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: UpdateSettings(Language, ISettingsBundle)
  nameWithType: IProject.UpdateSettings(Language, ISettingsBundle)
  fullName: Sdl.ProjectAutomation.Core.IProject.UpdateSettings(Sdl.Core.Globalization.Language, Sdl.Core.Settings.ISettingsBundle)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: void UpdateSettings(Language targetLanguage, ISettingsBundle settings)
    parameters:
    - id: targetLanguage
      type: Sdl.Core.Globalization.Language
    - id: settings
      type: Sdl.Core.Settings.ISettingsBundle
    content.vb: Sub UpdateSettings(targetLanguage As Language, settings As ISettingsBundle)
  overload: Sdl.ProjectAutomation.Core.IProject.UpdateSettings*
- uid: Sdl.ProjectAutomation.Core.IProject.GetProjectStatistics
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetProjectStatistics
  id: GetProjectStatistics
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: GetProjectStatistics()
  nameWithType: IProject.GetProjectStatistics()
  fullName: Sdl.ProjectAutomation.Core.IProject.GetProjectStatistics()
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ProjectStatistics GetProjectStatistics()
    return:
      type: Sdl.ProjectAutomation.Core.ProjectStatistics
    content.vb: Function GetProjectStatistics As ProjectStatistics
  overload: Sdl.ProjectAutomation.Core.IProject.GetProjectStatistics*
- uid: Sdl.ProjectAutomation.Core.IProject.GetSourceLanguageFiles
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetSourceLanguageFiles
  id: GetSourceLanguageFiles
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: GetSourceLanguageFiles()
  nameWithType: IProject.GetSourceLanguageFiles()
  fullName: Sdl.ProjectAutomation.Core.IProject.GetSourceLanguageFiles()
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ProjectFile[] GetSourceLanguageFiles()
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile[]
    content.vb: Function GetSourceLanguageFiles As ProjectFile()
  overload: Sdl.ProjectAutomation.Core.IProject.GetSourceLanguageFiles*
- uid: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles(Sdl.Core.Globalization.Language)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles(Sdl.Core.Globalization.Language)
  id: GetTargetLanguageFiles(Sdl.Core.Globalization.Language)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: GetTargetLanguageFiles(Language)
  nameWithType: IProject.GetTargetLanguageFiles(Language)
  fullName: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles(Sdl.Core.Globalization.Language)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ProjectFile[] GetTargetLanguageFiles(Language targetLanguage)
    parameters:
    - id: targetLanguage
      type: Sdl.Core.Globalization.Language
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile[]
    content.vb: Function GetTargetLanguageFiles(targetLanguage As Language) As ProjectFile()
  overload: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles*
- uid: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles
  id: GetTargetLanguageFiles
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: GetTargetLanguageFiles()
  nameWithType: IProject.GetTargetLanguageFiles()
  fullName: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles()
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ProjectFile[] GetTargetLanguageFiles()
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile[]
    content.vb: Function GetTargetLanguageFiles As ProjectFile()
  overload: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles*
- uid: Sdl.ProjectAutomation.Core.IProject.GetFile(System.Guid)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetFile(System.Guid)
  id: GetFile(System.Guid)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: GetFile(Guid)
  nameWithType: IProject.GetFile(Guid)
  fullName: Sdl.ProjectAutomation.Core.IProject.GetFile(System.Guid)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ProjectFile GetFile(Guid projectFileId)
    parameters:
    - id: projectFileId
      type: System.Guid
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile
    content.vb: Function GetFile(projectFileId As Guid) As ProjectFile
  overload: Sdl.ProjectAutomation.Core.IProject.GetFile*
- uid: Sdl.ProjectAutomation.Core.IProject.SetFileRole(System.Guid[],Sdl.ProjectAutomation.Core.FileRole)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.SetFileRole(System.Guid[],Sdl.ProjectAutomation.Core.FileRole)
  id: SetFileRole(System.Guid[],Sdl.ProjectAutomation.Core.FileRole)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: SetFileRole(Guid[], FileRole)
  nameWithType: IProject.SetFileRole(Guid[], FileRole)
  fullName: Sdl.ProjectAutomation.Core.IProject.SetFileRole(System.Guid[], Sdl.ProjectAutomation.Core.FileRole)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: void SetFileRole(Guid[] projectFileIds, FileRole fileRole)
    parameters:
    - id: projectFileIds
      type: System.Guid[]
    - id: fileRole
      type: Sdl.ProjectAutomation.Core.FileRole
    content.vb: Sub SetFileRole(projectFileIds As Guid(), fileRole As FileRole)
  overload: Sdl.ProjectAutomation.Core.IProject.SetFileRole*
  nameWithType.vb: IProject.SetFileRole(Guid(), FileRole)
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.SetFileRole(System.Guid(), Sdl.ProjectAutomation.Core.FileRole)
  name.vb: SetFileRole(Guid(), FileRole)
- uid: Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[])
  commentId: M:Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[])
  id: AddFiles(System.String[])
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: AddFiles(String[])
  nameWithType: IProject.AddFiles(String[])
  fullName: Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[])
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ProjectFile[] AddFiles(string[] filePaths)
    parameters:
    - id: filePaths
      type: System.String[]
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile[]
    content.vb: Function AddFiles(filePaths As String()) As ProjectFile()
  overload: Sdl.ProjectAutomation.Core.IProject.AddFiles*
  nameWithType.vb: IProject.AddFiles(String())
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String())
  name.vb: AddFiles(String())
- uid: Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[],System.String)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[],System.String)
  id: AddFiles(System.String[],System.String)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: AddFiles(String[], String)
  nameWithType: IProject.AddFiles(String[], String)
  fullName: Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String[], System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ProjectFile[] AddFiles(string[] filePaths, string folderPathInProject)
    parameters:
    - id: filePaths
      type: System.String[]
    - id: folderPathInProject
      type: System.String
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile[]
    content.vb: Function AddFiles(filePaths As String(), folderPathInProject As String) As ProjectFile()
  overload: Sdl.ProjectAutomation.Core.IProject.AddFiles*
  nameWithType.vb: IProject.AddFiles(String(), String)
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.AddFiles(System.String(), System.String)
  name.vb: AddFiles(String(), String)
- uid: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String,System.Boolean)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String,System.Boolean)
  id: AddFolderWithFiles(System.String,System.Boolean)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: AddFolderWithFiles(String, Boolean)
  nameWithType: IProject.AddFolderWithFiles(String, Boolean)
  fullName: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String, System.Boolean)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ProjectFile[] AddFolderWithFiles(string localFolderPath, bool recursive)
    parameters:
    - id: localFolderPath
      type: System.String
    - id: recursive
      type: System.Boolean
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile[]
    content.vb: Function AddFolderWithFiles(localFolderPath As String, recursive As Boolean) As ProjectFile()
  overload: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles*
- uid: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String,System.String,System.Boolean)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String,System.String,System.Boolean)
  id: AddFolderWithFiles(System.String,System.String,System.Boolean)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: AddFolderWithFiles(String, String, Boolean)
  nameWithType: IProject.AddFolderWithFiles(String, String, Boolean)
  fullName: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles(System.String, System.String, System.Boolean)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ProjectFile[] AddFolderWithFiles(string localFolderPath, string folderPathInProject, bool recursive)
    parameters:
    - id: localFolderPath
      type: System.String
    - id: folderPathInProject
      type: System.String
    - id: recursive
      type: System.Boolean
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile[]
    content.vb: Function AddFolderWithFiles(localFolderPath As String, folderPathInProject As String, recursive As Boolean) As ProjectFile()
  overload: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles*
- uid: Sdl.ProjectAutomation.Core.IProject.AddNewFileVersion(System.Guid,System.String)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.AddNewFileVersion(System.Guid,System.String)
  id: AddNewFileVersion(System.Guid,System.String)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: AddNewFileVersion(Guid, String)
  nameWithType: IProject.AddNewFileVersion(Guid, String)
  fullName: Sdl.ProjectAutomation.Core.IProject.AddNewFileVersion(System.Guid, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: void AddNewFileVersion(Guid projectFileId, string filePath)
    parameters:
    - id: projectFileId
      type: System.Guid
    - id: filePath
      type: System.String
    content.vb: Sub AddNewFileVersion(projectFileId As Guid, filePath As String)
  overload: Sdl.ProjectAutomation.Core.IProject.AddNewFileVersion*
- uid: Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile(System.String,System.String,System.Guid[])
  commentId: M:Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile(System.String,System.String,System.Guid[])
  id: CreateMergedProjectFile(System.String,System.String,System.Guid[])
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: CreateMergedProjectFile(String, String, Guid[])
  nameWithType: IProject.CreateMergedProjectFile(String, String, Guid[])
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile(System.String, System.String, System.Guid[])
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: MergedProjectFile CreateMergedProjectFile(string mergedFileName, string folderPathInProject, Guid[] projectFileIds)
    parameters:
    - id: mergedFileName
      type: System.String
    - id: folderPathInProject
      type: System.String
    - id: projectFileIds
      type: System.Guid[]
    return:
      type: Sdl.ProjectAutomation.Core.MergedProjectFile
    content.vb: Function CreateMergedProjectFile(mergedFileName As String, folderPathInProject As String, projectFileIds As Guid()) As MergedProjectFile
  overload: Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile*
  nameWithType.vb: IProject.CreateMergedProjectFile(String, String, Guid())
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile(System.String, System.String, System.Guid())
  name.vb: CreateMergedProjectFile(String, String, Guid())
- uid: Sdl.ProjectAutomation.Core.IProject.OpenProjectFileStream(System.Guid)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.OpenProjectFileStream(System.Guid)
  id: OpenProjectFileStream(System.Guid)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: OpenProjectFileStream(Guid)
  nameWithType: IProject.OpenProjectFileStream(Guid)
  fullName: Sdl.ProjectAutomation.Core.IProject.OpenProjectFileStream(System.Guid)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: Stream OpenProjectFileStream(Guid projectFileId)
    parameters:
    - id: projectFileId
      type: System.Guid
    return:
      type: System.IO.Stream
    content.vb: Function OpenProjectFileStream(projectFileId As Guid) As Stream
  overload: Sdl.ProjectAutomation.Core.IProject.OpenProjectFileStream*
- uid: Sdl.ProjectAutomation.Core.IProject.SaveProjectFileAs(System.Guid,System.String)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.SaveProjectFileAs(System.Guid,System.String)
  id: SaveProjectFileAs(System.Guid,System.String)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: SaveProjectFileAs(Guid, String)
  nameWithType: IProject.SaveProjectFileAs(Guid, String)
  fullName: Sdl.ProjectAutomation.Core.IProject.SaveProjectFileAs(System.Guid, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: void SaveProjectFileAs(Guid projectFileId, string outputFilePath)
    parameters:
    - id: projectFileId
      type: System.Guid
    - id: outputFilePath
      type: System.String
    content.vb: Sub SaveProjectFileAs(projectFileId As Guid, outputFilePath As String)
  overload: Sdl.ProjectAutomation.Core.IProject.SaveProjectFileAs*
- uid: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[],System.String)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[],System.String)
  id: RunAutomaticTask(System.Guid[],System.String)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: RunAutomaticTask(Guid[], String)
  nameWithType: IProject.RunAutomaticTask(Guid[], String)
  fullName: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[], System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: AutomaticTask RunAutomaticTask(Guid[] projectFileIds, string taskTemplateId)
    parameters:
    - id: projectFileIds
      type: System.Guid[]
    - id: taskTemplateId
      type: System.String
    return:
      type: Sdl.ProjectAutomation.Core.AutomaticTask
    content.vb: Function RunAutomaticTask(projectFileIds As Guid(), taskTemplateId As String) As AutomaticTask
  overload: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask*
  nameWithType.vb: IProject.RunAutomaticTask(Guid(), String)
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid(), System.String)
  name.vb: RunAutomaticTask(Guid(), String)
- uid: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[],System.String,System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  commentId: M:Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[],System.String,System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  id: RunAutomaticTask(System.Guid[],System.String,System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs})
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: RunAutomaticTask(Guid[], String, EventHandler<TaskStatusEventArgs>, EventHandler<TaskMessageEventArgs>)
  nameWithType: IProject.RunAutomaticTask(Guid[], String, EventHandler<TaskStatusEventArgs>, EventHandler<TaskMessageEventArgs>)
  fullName: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid[], System.String, System.EventHandler<Sdl.ProjectAutomation.Core.TaskStatusEventArgs>, System.EventHandler<Sdl.ProjectAutomation.Core.TaskMessageEventArgs>)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: AutomaticTask RunAutomaticTask(Guid[] projectFileIds, string taskTemplateId, EventHandler<TaskStatusEventArgs> statusEventHandler, EventHandler<TaskMessageEventArgs> messageEventHandler)
    parameters:
    - id: projectFileIds
      type: System.Guid[]
    - id: taskTemplateId
      type: System.String
    - id: statusEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs}
    - id: messageEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs}
    return:
      type: Sdl.ProjectAutomation.Core.AutomaticTask
    content.vb: Function RunAutomaticTask(projectFileIds As Guid(), taskTemplateId As String, statusEventHandler As EventHandler(Of TaskStatusEventArgs), messageEventHandler As EventHandler(Of TaskMessageEventArgs)) As AutomaticTask
  overload: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask*
  nameWithType.vb: IProject.RunAutomaticTask(Guid(), String, EventHandler(Of TaskStatusEventArgs), EventHandler(Of TaskMessageEventArgs))
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask(System.Guid(), System.String, System.EventHandler(Of Sdl.ProjectAutomation.Core.TaskStatusEventArgs), System.EventHandler(Of Sdl.ProjectAutomation.Core.TaskMessageEventArgs))
  name.vb: RunAutomaticTask(Guid(), String, EventHandler(Of TaskStatusEventArgs), EventHandler(Of TaskMessageEventArgs))
- uid: Sdl.ProjectAutomation.Core.IProject.SaveTaskReportAs(System.Guid,System.String,Sdl.ProjectAutomation.Core.ReportFormat)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.SaveTaskReportAs(System.Guid,System.String,Sdl.ProjectAutomation.Core.ReportFormat)
  id: SaveTaskReportAs(System.Guid,System.String,Sdl.ProjectAutomation.Core.ReportFormat)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: SaveTaskReportAs(Guid, String, ReportFormat)
  nameWithType: IProject.SaveTaskReportAs(Guid, String, ReportFormat)
  fullName: Sdl.ProjectAutomation.Core.IProject.SaveTaskReportAs(System.Guid, System.String, Sdl.ProjectAutomation.Core.ReportFormat)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: void SaveTaskReportAs(Guid reportId, string path, ReportFormat reportFormat)
    parameters:
    - id: reportId
      type: System.Guid
    - id: path
      type: System.String
    - id: reportFormat
      type: Sdl.ProjectAutomation.Core.ReportFormat
    content.vb: Sub SaveTaskReportAs(reportId As Guid, path As String, reportFormat As ReportFormat)
  overload: Sdl.ProjectAutomation.Core.IProject.SaveTaskReportAs*
- uid: Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String,System.String,System.DateTime,Sdl.ProjectAutomation.Core.TaskFileInfo[])
  commentId: M:Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String,System.String,System.DateTime,Sdl.ProjectAutomation.Core.TaskFileInfo[])
  id: CreateManualTask(System.String,System.String,System.DateTime,Sdl.ProjectAutomation.Core.TaskFileInfo[])
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: CreateManualTask(String, String, DateTime, TaskFileInfo[])
  nameWithType: IProject.CreateManualTask(String, String, DateTime, TaskFileInfo[])
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String, System.String, System.DateTime, Sdl.ProjectAutomation.Core.TaskFileInfo[])
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ManualTask CreateManualTask(string manualTaskName, string assignToUser, DateTime dueDate, TaskFileInfo[] inputFiles)
    parameters:
    - id: manualTaskName
      type: System.String
    - id: assignToUser
      type: System.String
    - id: dueDate
      type: System.DateTime
    - id: inputFiles
      type: Sdl.ProjectAutomation.Core.TaskFileInfo[]
    return:
      type: Sdl.ProjectAutomation.Core.ManualTask
    content.vb: Function CreateManualTask(manualTaskName As String, assignToUser As String, dueDate As Date, inputFiles As TaskFileInfo()) As ManualTask
  overload: Sdl.ProjectAutomation.Core.IProject.CreateManualTask*
  nameWithType.vb: IProject.CreateManualTask(String, String, DateTime, TaskFileInfo())
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String, System.String, System.DateTime, Sdl.ProjectAutomation.Core.TaskFileInfo())
  name.vb: CreateManualTask(String, String, DateTime, TaskFileInfo())
- uid: Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String,System.String,System.DateTime,System.Guid[])
  commentId: M:Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String,System.String,System.DateTime,System.Guid[])
  id: CreateManualTask(System.String,System.String,System.DateTime,System.Guid[])
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: CreateManualTask(String, String, DateTime, Guid[])
  nameWithType: IProject.CreateManualTask(String, String, DateTime, Guid[])
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String, System.String, System.DateTime, System.Guid[])
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ManualTask CreateManualTask(string manualTaskName, string assignToUser, DateTime dueDate, Guid[] projectFileIds)
    parameters:
    - id: manualTaskName
      type: System.String
    - id: assignToUser
      type: System.String
    - id: dueDate
      type: System.DateTime
    - id: projectFileIds
      type: System.Guid[]
    return:
      type: Sdl.ProjectAutomation.Core.ManualTask
    content.vb: Function CreateManualTask(manualTaskName As String, assignToUser As String, dueDate As Date, projectFileIds As Guid()) As ManualTask
  overload: Sdl.ProjectAutomation.Core.IProject.CreateManualTask*
  nameWithType.vb: IProject.CreateManualTask(String, String, DateTime, Guid())
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.CreateManualTask(System.String, System.String, System.DateTime, System.Guid())
  name.vb: CreateManualTask(String, String, DateTime, Guid())
- uid: Sdl.ProjectAutomation.Core.IProject.GetManualTask(System.Guid)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetManualTask(System.Guid)
  id: GetManualTask(System.Guid)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: GetManualTask(Guid)
  nameWithType: IProject.GetManualTask(Guid)
  fullName: Sdl.ProjectAutomation.Core.IProject.GetManualTask(System.Guid)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ManualTask GetManualTask(Guid manualTaskId)
    parameters:
    - id: manualTaskId
      type: System.Guid
    return:
      type: Sdl.ProjectAutomation.Core.ManualTask
    content.vb: Function GetManualTask(manualTaskId As Guid) As ManualTask
  overload: Sdl.ProjectAutomation.Core.IProject.GetManualTask*
- uid: Sdl.ProjectAutomation.Core.IProject.GetAutomaticTask(System.Guid)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetAutomaticTask(System.Guid)
  id: GetAutomaticTask(System.Guid)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: GetAutomaticTask(Guid)
  nameWithType: IProject.GetAutomaticTask(Guid)
  fullName: Sdl.ProjectAutomation.Core.IProject.GetAutomaticTask(System.Guid)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: AutomaticTask GetAutomaticTask(Guid automaticTaskId)
    parameters:
    - id: automaticTaskId
      type: System.Guid
    return:
      type: Sdl.ProjectAutomation.Core.AutomaticTask
    content.vb: Function GetAutomaticTask(automaticTaskId As Guid) As AutomaticTask
  overload: Sdl.ProjectAutomation.Core.IProject.GetAutomaticTask*
- uid: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions)
  id: CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions)
  nameWithType: IProject.CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions)
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid, System.String, System.String, Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ProjectPackageCreation CreateProjectPackage(Guid manualTaskId, string packageName, string comment, ProjectPackageCreationOptions options)
    parameters:
    - id: manualTaskId
      type: System.Guid
    - id: packageName
      type: System.String
    - id: comment
      type: System.String
    - id: options
      type: Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
    return:
      type: Sdl.ProjectAutomation.Core.ProjectPackageCreation
    content.vb: Function CreateProjectPackage(manualTaskId As Guid, packageName As String, comment As String, options As ProjectPackageCreationOptions) As ProjectPackageCreation
  overload: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage*
- uid: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  commentId: M:Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  id: CreateProjectPackage(System.Guid,System.String,System.String,Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  nameWithType: IProject.CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid, System.String, System.String, Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions, System.EventHandler<Sdl.ProjectAutomation.Core.ProgressEventArgs>, System.EventHandler<Sdl.ProjectAutomation.Core.MessageEventArgs>)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ProjectPackageCreation CreateProjectPackage(Guid manualTaskId, string packageName, string comment, ProjectPackageCreationOptions options, EventHandler<ProgressEventArgs> statusEventHandler, EventHandler<MessageEventArgs> messageEventHandler)
    parameters:
    - id: manualTaskId
      type: System.Guid
    - id: packageName
      type: System.String
    - id: comment
      type: System.String
    - id: options
      type: Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
    - id: statusEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs}
    - id: messageEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs}
    return:
      type: Sdl.ProjectAutomation.Core.ProjectPackageCreation
    content.vb: Function CreateProjectPackage(manualTaskId As Guid, packageName As String, comment As String, options As ProjectPackageCreationOptions, statusEventHandler As EventHandler(Of ProgressEventArgs), messageEventHandler As EventHandler(Of MessageEventArgs)) As ProjectPackageCreation
  overload: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage*
  nameWithType.vb: IProject.CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage(System.Guid, System.String, System.String, Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions, System.EventHandler(Of Sdl.ProjectAutomation.Core.ProgressEventArgs), System.EventHandler(Of Sdl.ProjectAutomation.Core.MessageEventArgs))
  name.vb: CreateProjectPackage(Guid, String, String, ProjectPackageCreationOptions, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
- uid: Sdl.ProjectAutomation.Core.IProject.SavePackageAs(System.Guid,System.String)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.SavePackageAs(System.Guid,System.String)
  id: SavePackageAs(System.Guid,System.String)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: SavePackageAs(Guid, String)
  nameWithType: IProject.SavePackageAs(Guid, String)
  fullName: Sdl.ProjectAutomation.Core.IProject.SavePackageAs(System.Guid, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: void SavePackageAs(Guid packageId, string path)
    parameters:
    - id: packageId
      type: System.Guid
    - id: path
      type: System.String
    content.vb: Sub SavePackageAs(packageId As Guid, path As String)
  overload: Sdl.ProjectAutomation.Core.IProject.SavePackageAs*
- uid: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String)
  id: ImportReturnPackage(System.String)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: ImportReturnPackage(String)
  nameWithType: IProject.ImportReturnPackage(String)
  fullName: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ReturnPackageImport ImportReturnPackage(string returnPackageFilePath)
    parameters:
    - id: returnPackageFilePath
      type: System.String
    return:
      type: Sdl.ProjectAutomation.Core.ReturnPackageImport
    content.vb: Function ImportReturnPackage(returnPackageFilePath As String) As ReturnPackageImport
  overload: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage*
- uid: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  commentId: M:Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  id: ImportReturnPackage(System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: ImportReturnPackage(String, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  nameWithType: IProject.ImportReturnPackage(String, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  fullName: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String, System.EventHandler<Sdl.ProjectAutomation.Core.ProgressEventArgs>, System.EventHandler<Sdl.ProjectAutomation.Core.MessageEventArgs>)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ReturnPackageImport ImportReturnPackage(string returnPackageFilePath, EventHandler<ProgressEventArgs> statusEventHandler, EventHandler<MessageEventArgs> messageEventHandler)
    parameters:
    - id: returnPackageFilePath
      type: System.String
    - id: statusEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs}
    - id: messageEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs}
    return:
      type: Sdl.ProjectAutomation.Core.ReturnPackageImport
    content.vb: Function ImportReturnPackage(returnPackageFilePath As String, statusEventHandler As EventHandler(Of ProgressEventArgs), messageEventHandler As EventHandler(Of MessageEventArgs)) As ReturnPackageImport
  overload: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage*
  nameWithType.vb: IProject.ImportReturnPackage(String, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String, System.EventHandler(Of Sdl.ProjectAutomation.Core.ProgressEventArgs), System.EventHandler(Of Sdl.ProjectAutomation.Core.MessageEventArgs))
  name.vb: ImportReturnPackage(String, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
- uid: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[],System.String,System.String)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[],System.String,System.String)
  id: CreateReturnPackage(System.Guid[],System.String,System.String)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: CreateReturnPackage(Guid[], String, String)
  nameWithType: IProject.CreateReturnPackage(Guid[], String, String)
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[], System.String, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ReturnPackageCreation CreateReturnPackage(Guid[] projectFileIds, string packageName, string comment)
    parameters:
    - id: projectFileIds
      type: System.Guid[]
    - id: packageName
      type: System.String
    - id: comment
      type: System.String
    return:
      type: Sdl.ProjectAutomation.Core.ReturnPackageCreation
    content.vb: Function CreateReturnPackage(projectFileIds As Guid(), packageName As String, comment As String) As ReturnPackageCreation
  overload: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage*
  nameWithType.vb: IProject.CreateReturnPackage(Guid(), String, String)
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid(), System.String, System.String)
  name.vb: CreateReturnPackage(Guid(), String, String)
- uid: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[],System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  commentId: M:Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[],System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  id: CreateReturnPackage(System.Guid[],System.String,System.String,System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs},System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs})
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: CreateReturnPackage(Guid[], String, String, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  nameWithType: IProject.CreateReturnPackage(Guid[], String, String, EventHandler<ProgressEventArgs>, EventHandler<MessageEventArgs>)
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid[], System.String, System.String, System.EventHandler<Sdl.ProjectAutomation.Core.ProgressEventArgs>, System.EventHandler<Sdl.ProjectAutomation.Core.MessageEventArgs>)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: ReturnPackageCreation CreateReturnPackage(Guid[] projectFileIds, string packageName, string comment, EventHandler<ProgressEventArgs> statusEventHandler, EventHandler<MessageEventArgs> messageEventHandler)
    parameters:
    - id: projectFileIds
      type: System.Guid[]
    - id: packageName
      type: System.String
    - id: comment
      type: System.String
    - id: statusEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs}
    - id: messageEventHandler
      type: System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs}
    return:
      type: Sdl.ProjectAutomation.Core.ReturnPackageCreation
    content.vb: Function CreateReturnPackage(projectFileIds As Guid(), packageName As String, comment As String, statusEventHandler As EventHandler(Of ProgressEventArgs), messageEventHandler As EventHandler(Of MessageEventArgs)) As ReturnPackageCreation
  overload: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage*
  nameWithType.vb: IProject.CreateReturnPackage(Guid(), String, String, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage(System.Guid(), System.String, System.String, System.EventHandler(Of Sdl.ProjectAutomation.Core.ProgressEventArgs), System.EventHandler(Of Sdl.ProjectAutomation.Core.MessageEventArgs))
  name.vb: CreateReturnPackage(Guid(), String, String, EventHandler(Of ProgressEventArgs), EventHandler(Of MessageEventArgs))
- uid: Sdl.ProjectAutomation.Core.IProject.GetTermbaseConfiguration
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetTermbaseConfiguration
  id: GetTermbaseConfiguration
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: GetTermbaseConfiguration()
  nameWithType: IProject.GetTermbaseConfiguration()
  fullName: Sdl.ProjectAutomation.Core.IProject.GetTermbaseConfiguration()
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: TermbaseConfiguration GetTermbaseConfiguration()
    return:
      type: Sdl.ProjectAutomation.Core.TermbaseConfiguration
    content.vb: Function GetTermbaseConfiguration As TermbaseConfiguration
  overload: Sdl.ProjectAutomation.Core.IProject.GetTermbaseConfiguration*
- uid: Sdl.ProjectAutomation.Core.IProject.UpdateTermbaseConfiguration(Sdl.ProjectAutomation.Core.TermbaseConfiguration)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.UpdateTermbaseConfiguration(Sdl.ProjectAutomation.Core.TermbaseConfiguration)
  id: UpdateTermbaseConfiguration(Sdl.ProjectAutomation.Core.TermbaseConfiguration)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: UpdateTermbaseConfiguration(TermbaseConfiguration)
  nameWithType: IProject.UpdateTermbaseConfiguration(TermbaseConfiguration)
  fullName: Sdl.ProjectAutomation.Core.IProject.UpdateTermbaseConfiguration(Sdl.ProjectAutomation.Core.TermbaseConfiguration)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: void UpdateTermbaseConfiguration(TermbaseConfiguration termbaseConfiguration)
    parameters:
    - id: termbaseConfiguration
      type: Sdl.ProjectAutomation.Core.TermbaseConfiguration
    content.vb: Sub UpdateTermbaseConfiguration(termbaseConfiguration As TermbaseConfiguration)
  overload: Sdl.ProjectAutomation.Core.IProject.UpdateTermbaseConfiguration*
- uid: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration
  id: GetTranslationProviderConfiguration
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: GetTranslationProviderConfiguration()
  nameWithType: IProject.GetTranslationProviderConfiguration()
  fullName: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration()
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: TranslationProviderConfiguration GetTranslationProviderConfiguration()
    return:
      type: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
    content.vb: Function GetTranslationProviderConfiguration As TranslationProviderConfiguration
  overload: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration*
- uid: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)
  id: GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: GetTranslationProviderConfiguration(Language)
  nameWithType: IProject.GetTranslationProviderConfiguration(Language)
  fullName: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration(Sdl.Core.Globalization.Language)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: TranslationProviderConfiguration GetTranslationProviderConfiguration(Language targetLanguage)
    parameters:
    - id: targetLanguage
      type: Sdl.Core.Globalization.Language
    return:
      type: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
    content.vb: Function GetTranslationProviderConfiguration(targetLanguage As Language) As TranslationProviderConfiguration
  overload: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration*
- uid: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language,Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language,Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  id: UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language,Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: UpdateTranslationProviderConfiguration(Language, TranslationProviderConfiguration)
  nameWithType: IProject.UpdateTranslationProviderConfiguration(Language, TranslationProviderConfiguration)
  fullName: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.Core.Globalization.Language, Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: void UpdateTranslationProviderConfiguration(Language targetLanguage, TranslationProviderConfiguration translationProviderConfiguration)
    parameters:
    - id: targetLanguage
      type: Sdl.Core.Globalization.Language
    - id: translationProviderConfiguration
      type: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
    content.vb: Sub UpdateTranslationProviderConfiguration(targetLanguage As Language, translationProviderConfiguration As TranslationProviderConfiguration)
  overload: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration*
- uid: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  id: UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: UpdateTranslationProviderConfiguration(TranslationProviderConfiguration)
  nameWithType: IProject.UpdateTranslationProviderConfiguration(TranslationProviderConfiguration)
  fullName: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration(Sdl.ProjectAutomation.Core.TranslationProviderConfiguration)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: void UpdateTranslationProviderConfiguration(TranslationProviderConfiguration translationProviderConfiguration)
    parameters:
    - id: translationProviderConfiguration
      type: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
    content.vb: Sub UpdateTranslationProviderConfiguration(translationProviderConfiguration As TranslationProviderConfiguration)
  overload: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration*
- uid: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping[])
  commentId: M:Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping[])
  id: AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping[])
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: AddBilingualReferenceFiles(BilingualFileMapping[])
  nameWithType: IProject.AddBilingualReferenceFiles(BilingualFileMapping[])
  fullName: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping[])
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: void AddBilingualReferenceFiles(BilingualFileMapping[] mappings)
    parameters:
    - id: mappings
      type: Sdl.ProjectAutomation.Core.BilingualFileMapping[]
    content.vb: Sub AddBilingualReferenceFiles(mappings As BilingualFileMapping())
  overload: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles*
  nameWithType.vb: IProject.AddBilingualReferenceFiles(BilingualFileMapping())
  fullName.vb: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles(Sdl.ProjectAutomation.Core.BilingualFileMapping())
  name.vb: AddBilingualReferenceFiles(BilingualFileMapping())
- uid: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFile(Sdl.ProjectAutomation.Core.BilingualFileMapping)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFile(Sdl.ProjectAutomation.Core.BilingualFileMapping)
  id: AddBilingualReferenceFile(Sdl.ProjectAutomation.Core.BilingualFileMapping)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: AddBilingualReferenceFile(BilingualFileMapping)
  nameWithType: IProject.AddBilingualReferenceFile(BilingualFileMapping)
  fullName: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFile(Sdl.ProjectAutomation.Core.BilingualFileMapping)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: void AddBilingualReferenceFile(BilingualFileMapping mapping)
    parameters:
    - id: mapping
      type: Sdl.ProjectAutomation.Core.BilingualFileMapping
    content.vb: Sub AddBilingualReferenceFile(mapping As BilingualFileMapping)
  overload: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFile*
- uid: Sdl.ProjectAutomation.Core.IProject.RemoveBilingualReferenceFile(System.Guid)
  commentId: M:Sdl.ProjectAutomation.Core.IProject.RemoveBilingualReferenceFile(System.Guid)
  id: RemoveBilingualReferenceFile(System.Guid)
  parent: Sdl.ProjectAutomation.Core.IProject
  langs:
  - csharp
  - vb
  name: RemoveBilingualReferenceFile(Guid)
  nameWithType: IProject.RemoveBilingualReferenceFile(Guid)
  fullName: Sdl.ProjectAutomation.Core.IProject.RemoveBilingualReferenceFile(System.Guid)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: void RemoveBilingualReferenceFile(Guid ProjectTargetFileId)
    parameters:
    - id: ProjectTargetFileId
      type: System.Guid
    content.vb: Sub RemoveBilingualReferenceFile(ProjectTargetFileId As Guid)
  overload: Sdl.ProjectAutomation.Core.IProject.RemoveBilingualReferenceFile*
references:
- uid: Sdl.ProjectAutomation.Core
  commentId: N:Sdl.ProjectAutomation.Core
  isExternal: true
  name: Sdl.ProjectAutomation.Core
  nameWithType: Sdl.ProjectAutomation.Core
  fullName: Sdl.ProjectAutomation.Core
- uid: Sdl.ProjectAutomation.Core.IProject.GetProjectInfo*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.GetProjectInfo
  isExternal: true
  name: GetProjectInfo
  nameWithType: IProject.GetProjectInfo
  fullName: Sdl.ProjectAutomation.Core.IProject.GetProjectInfo
- uid: Sdl.ProjectAutomation.Core.ProjectInfo
  commentId: T:Sdl.ProjectAutomation.Core.ProjectInfo
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ProjectInfo
  nameWithType: ProjectInfo
  fullName: Sdl.ProjectAutomation.Core.ProjectInfo
- uid: Sdl.ProjectAutomation.Core.IProject.UpdateProject*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.UpdateProject
  isExternal: true
  name: UpdateProject
  nameWithType: IProject.UpdateProject
  fullName: Sdl.ProjectAutomation.Core.IProject.UpdateProject
- uid: Sdl.ProjectAutomation.Core.IProject.GetSettings*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.GetSettings
  isExternal: true
  name: GetSettings
  nameWithType: IProject.GetSettings
  fullName: Sdl.ProjectAutomation.Core.IProject.GetSettings
- uid: Sdl.Core.Settings.ISettingsBundle
  isExternal: true
  name: ISettingsBundle
  nameWithType: ISettingsBundle
  fullName: Sdl.Core.Settings.ISettingsBundle
- uid: Sdl.Core.Globalization.Language
  isExternal: true
  name: Language
  nameWithType: Language
  fullName: Sdl.Core.Globalization.Language
- uid: Sdl.ProjectAutomation.Core.IProject.UpdateSettings*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.UpdateSettings
  isExternal: true
  name: UpdateSettings
  nameWithType: IProject.UpdateSettings
  fullName: Sdl.ProjectAutomation.Core.IProject.UpdateSettings
- uid: Sdl.ProjectAutomation.Core.IProject.GetProjectStatistics*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.GetProjectStatistics
  isExternal: true
  name: GetProjectStatistics
  nameWithType: IProject.GetProjectStatistics
  fullName: Sdl.ProjectAutomation.Core.IProject.GetProjectStatistics
- uid: Sdl.ProjectAutomation.Core.ProjectStatistics
  commentId: T:Sdl.ProjectAutomation.Core.ProjectStatistics
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ProjectStatistics
  nameWithType: ProjectStatistics
  fullName: Sdl.ProjectAutomation.Core.ProjectStatistics
- uid: Sdl.ProjectAutomation.Core.IProject.GetSourceLanguageFiles*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.GetSourceLanguageFiles
  isExternal: true
  name: GetSourceLanguageFiles
  nameWithType: IProject.GetSourceLanguageFiles
  fullName: Sdl.ProjectAutomation.Core.IProject.GetSourceLanguageFiles
- uid: Sdl.ProjectAutomation.Core.ProjectFile[]
  isExternal: true
  name: ProjectFile[]
  nameWithType: ProjectFile[]
  fullName: Sdl.ProjectAutomation.Core.ProjectFile[]
  nameWithType.vb: ProjectFile()
  fullName.vb: Sdl.ProjectAutomation.Core.ProjectFile()
  name.vb: ProjectFile()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.ProjectFile
    name: ProjectFile
    nameWithType: ProjectFile
    fullName: Sdl.ProjectAutomation.Core.ProjectFile
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.ProjectFile
    name: ProjectFile
    nameWithType: ProjectFile
    fullName: Sdl.ProjectAutomation.Core.ProjectFile
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles
  isExternal: true
  name: GetTargetLanguageFiles
  nameWithType: IProject.GetTargetLanguageFiles
  fullName: Sdl.ProjectAutomation.Core.IProject.GetTargetLanguageFiles
- uid: Sdl.ProjectAutomation.Core.IProject.GetFile*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.GetFile
  isExternal: true
  name: GetFile
  nameWithType: IProject.GetFile
  fullName: Sdl.ProjectAutomation.Core.IProject.GetFile
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Sdl.ProjectAutomation.Core.ProjectFile
  commentId: T:Sdl.ProjectAutomation.Core.ProjectFile
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ProjectFile
  nameWithType: ProjectFile
  fullName: Sdl.ProjectAutomation.Core.ProjectFile
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Core.IProject.SetFileRole*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.SetFileRole
  isExternal: true
  name: SetFileRole
  nameWithType: IProject.SetFileRole
  fullName: Sdl.ProjectAutomation.Core.IProject.SetFileRole
- uid: System.Guid[]
  isExternal: true
  name: Guid[]
  nameWithType: Guid[]
  fullName: System.Guid[]
  nameWithType.vb: Guid()
  fullName.vb: System.Guid()
  name.vb: Guid()
  spec.csharp:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectAutomation.Core.FileRole
  commentId: T:Sdl.ProjectAutomation.Core.FileRole
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: FileRole
  nameWithType: FileRole
  fullName: Sdl.ProjectAutomation.Core.FileRole
- uid: Sdl.ProjectAutomation.Core.IProject.AddFiles*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.AddFiles
  isExternal: true
  name: AddFiles
  nameWithType: IProject.AddFiles
  fullName: Sdl.ProjectAutomation.Core.IProject.AddFiles
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles
  isExternal: true
  name: AddFolderWithFiles
  nameWithType: IProject.AddFolderWithFiles
  fullName: Sdl.ProjectAutomation.Core.IProject.AddFolderWithFiles
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.ProjectAutomation.Core.IProject.AddNewFileVersion*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.AddNewFileVersion
  isExternal: true
  name: AddNewFileVersion
  nameWithType: IProject.AddNewFileVersion
  fullName: Sdl.ProjectAutomation.Core.IProject.AddNewFileVersion
- uid: Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile
  isExternal: true
  name: CreateMergedProjectFile
  nameWithType: IProject.CreateMergedProjectFile
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateMergedProjectFile
- uid: Sdl.ProjectAutomation.Core.MergedProjectFile
  commentId: T:Sdl.ProjectAutomation.Core.MergedProjectFile
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: MergedProjectFile
  nameWithType: MergedProjectFile
  fullName: Sdl.ProjectAutomation.Core.MergedProjectFile
- uid: Sdl.ProjectAutomation.Core.IProject.OpenProjectFileStream*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.OpenProjectFileStream
  isExternal: true
  name: OpenProjectFileStream
  nameWithType: IProject.OpenProjectFileStream
  fullName: Sdl.ProjectAutomation.Core.IProject.OpenProjectFileStream
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Sdl.ProjectAutomation.Core.IProject.SaveProjectFileAs*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.SaveProjectFileAs
  isExternal: true
  name: SaveProjectFileAs
  nameWithType: IProject.SaveProjectFileAs
  fullName: Sdl.ProjectAutomation.Core.IProject.SaveProjectFileAs
- uid: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask
  isExternal: true
  name: RunAutomaticTask
  nameWithType: IProject.RunAutomaticTask
  fullName: Sdl.ProjectAutomation.Core.IProject.RunAutomaticTask
- uid: Sdl.ProjectAutomation.Core.AutomaticTask
  commentId: T:Sdl.ProjectAutomation.Core.AutomaticTask
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: AutomaticTask
  nameWithType: AutomaticTask
  fullName: Sdl.ProjectAutomation.Core.AutomaticTask
- uid: System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs}
  commentId: T:System.EventHandler{Sdl.ProjectAutomation.Core.TaskStatusEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<TaskStatusEventArgs>
  nameWithType: EventHandler<TaskStatusEventArgs>
  fullName: System.EventHandler<Sdl.ProjectAutomation.Core.TaskStatusEventArgs>
  nameWithType.vb: EventHandler(Of TaskStatusEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.ProjectAutomation.Core.TaskStatusEventArgs)
  name.vb: EventHandler(Of TaskStatusEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.TaskStatusEventArgs
    name: TaskStatusEventArgs
    nameWithType: TaskStatusEventArgs
    fullName: Sdl.ProjectAutomation.Core.TaskStatusEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.TaskStatusEventArgs
    name: TaskStatusEventArgs
    nameWithType: TaskStatusEventArgs
    fullName: Sdl.ProjectAutomation.Core.TaskStatusEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs}
  commentId: T:System.EventHandler{Sdl.ProjectAutomation.Core.TaskMessageEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<TaskMessageEventArgs>
  nameWithType: EventHandler<TaskMessageEventArgs>
  fullName: System.EventHandler<Sdl.ProjectAutomation.Core.TaskMessageEventArgs>
  nameWithType.vb: EventHandler(Of TaskMessageEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.ProjectAutomation.Core.TaskMessageEventArgs)
  name.vb: EventHandler(Of TaskMessageEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.TaskMessageEventArgs
    name: TaskMessageEventArgs
    nameWithType: TaskMessageEventArgs
    fullName: Sdl.ProjectAutomation.Core.TaskMessageEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.TaskMessageEventArgs
    name: TaskMessageEventArgs
    nameWithType: TaskMessageEventArgs
    fullName: Sdl.ProjectAutomation.Core.TaskMessageEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.IProject.SaveTaskReportAs*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.SaveTaskReportAs
  isExternal: true
  name: SaveTaskReportAs
  nameWithType: IProject.SaveTaskReportAs
  fullName: Sdl.ProjectAutomation.Core.IProject.SaveTaskReportAs
- uid: Sdl.ProjectAutomation.Core.ReportFormat
  commentId: T:Sdl.ProjectAutomation.Core.ReportFormat
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ReportFormat
  nameWithType: ReportFormat
  fullName: Sdl.ProjectAutomation.Core.ReportFormat
- uid: Sdl.ProjectAutomation.Core.IProject.CreateManualTask*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.CreateManualTask
  isExternal: true
  name: CreateManualTask
  nameWithType: IProject.CreateManualTask
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateManualTask
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Sdl.ProjectAutomation.Core.TaskFileInfo[]
  isExternal: true
  name: TaskFileInfo[]
  nameWithType: TaskFileInfo[]
  fullName: Sdl.ProjectAutomation.Core.TaskFileInfo[]
  nameWithType.vb: TaskFileInfo()
  fullName.vb: Sdl.ProjectAutomation.Core.TaskFileInfo()
  name.vb: TaskFileInfo()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.TaskFileInfo
    name: TaskFileInfo
    nameWithType: TaskFileInfo
    fullName: Sdl.ProjectAutomation.Core.TaskFileInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.TaskFileInfo
    name: TaskFileInfo
    nameWithType: TaskFileInfo
    fullName: Sdl.ProjectAutomation.Core.TaskFileInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectAutomation.Core.ManualTask
  commentId: T:Sdl.ProjectAutomation.Core.ManualTask
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ManualTask
  nameWithType: ManualTask
  fullName: Sdl.ProjectAutomation.Core.ManualTask
- uid: Sdl.ProjectAutomation.Core.IProject.GetManualTask*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.GetManualTask
  isExternal: true
  name: GetManualTask
  nameWithType: IProject.GetManualTask
  fullName: Sdl.ProjectAutomation.Core.IProject.GetManualTask
- uid: Sdl.ProjectAutomation.Core.IProject.GetAutomaticTask*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.GetAutomaticTask
  isExternal: true
  name: GetAutomaticTask
  nameWithType: IProject.GetAutomaticTask
  fullName: Sdl.ProjectAutomation.Core.IProject.GetAutomaticTask
- uid: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage
  isExternal: true
  name: CreateProjectPackage
  nameWithType: IProject.CreateProjectPackage
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateProjectPackage
- uid: Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
  commentId: T:Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ProjectPackageCreationOptions
  nameWithType: ProjectPackageCreationOptions
  fullName: Sdl.ProjectAutomation.Core.ProjectPackageCreationOptions
- uid: Sdl.ProjectAutomation.Core.ProjectPackageCreation
  commentId: T:Sdl.ProjectAutomation.Core.ProjectPackageCreation
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ProjectPackageCreation
  nameWithType: ProjectPackageCreation
  fullName: Sdl.ProjectAutomation.Core.ProjectPackageCreation
- uid: System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs}
  commentId: T:System.EventHandler{Sdl.ProjectAutomation.Core.ProgressEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ProgressEventArgs>
  nameWithType: EventHandler<ProgressEventArgs>
  fullName: System.EventHandler<Sdl.ProjectAutomation.Core.ProgressEventArgs>
  nameWithType.vb: EventHandler(Of ProgressEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.ProjectAutomation.Core.ProgressEventArgs)
  name.vb: EventHandler(Of ProgressEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.ProjectAutomation.Core.ProgressEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.ProjectAutomation.Core.ProgressEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs}
  commentId: T:System.EventHandler{Sdl.ProjectAutomation.Core.MessageEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<MessageEventArgs>
  nameWithType: EventHandler<MessageEventArgs>
  fullName: System.EventHandler<Sdl.ProjectAutomation.Core.MessageEventArgs>
  nameWithType.vb: EventHandler(Of MessageEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.ProjectAutomation.Core.MessageEventArgs)
  name.vb: EventHandler(Of MessageEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: Sdl.ProjectAutomation.Core.MessageEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: Sdl.ProjectAutomation.Core.MessageEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Core.IProject.SavePackageAs*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.SavePackageAs
  isExternal: true
  name: SavePackageAs
  nameWithType: IProject.SavePackageAs
  fullName: Sdl.ProjectAutomation.Core.IProject.SavePackageAs
- uid: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage
  isExternal: true
  name: ImportReturnPackage
  nameWithType: IProject.ImportReturnPackage
  fullName: Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage
- uid: Sdl.ProjectAutomation.Core.ReturnPackageImport
  commentId: T:Sdl.ProjectAutomation.Core.ReturnPackageImport
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ReturnPackageImport
  nameWithType: ReturnPackageImport
  fullName: Sdl.ProjectAutomation.Core.ReturnPackageImport
- uid: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage
  isExternal: true
  name: CreateReturnPackage
  nameWithType: IProject.CreateReturnPackage
  fullName: Sdl.ProjectAutomation.Core.IProject.CreateReturnPackage
- uid: Sdl.ProjectAutomation.Core.ReturnPackageCreation
  commentId: T:Sdl.ProjectAutomation.Core.ReturnPackageCreation
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ReturnPackageCreation
  nameWithType: ReturnPackageCreation
  fullName: Sdl.ProjectAutomation.Core.ReturnPackageCreation
- uid: Sdl.ProjectAutomation.Core.IProject.GetTermbaseConfiguration*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.GetTermbaseConfiguration
  isExternal: true
  name: GetTermbaseConfiguration
  nameWithType: IProject.GetTermbaseConfiguration
  fullName: Sdl.ProjectAutomation.Core.IProject.GetTermbaseConfiguration
- uid: Sdl.ProjectAutomation.Core.TermbaseConfiguration
  commentId: T:Sdl.ProjectAutomation.Core.TermbaseConfiguration
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: TermbaseConfiguration
  nameWithType: TermbaseConfiguration
  fullName: Sdl.ProjectAutomation.Core.TermbaseConfiguration
- uid: Sdl.ProjectAutomation.Core.IProject.UpdateTermbaseConfiguration*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.UpdateTermbaseConfiguration
  isExternal: true
  name: UpdateTermbaseConfiguration
  nameWithType: IProject.UpdateTermbaseConfiguration
  fullName: Sdl.ProjectAutomation.Core.IProject.UpdateTermbaseConfiguration
- uid: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration
  isExternal: true
  name: GetTranslationProviderConfiguration
  nameWithType: IProject.GetTranslationProviderConfiguration
  fullName: Sdl.ProjectAutomation.Core.IProject.GetTranslationProviderConfiguration
- uid: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
  commentId: T:Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: TranslationProviderConfiguration
  nameWithType: TranslationProviderConfiguration
  fullName: Sdl.ProjectAutomation.Core.TranslationProviderConfiguration
- uid: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration
  isExternal: true
  name: UpdateTranslationProviderConfiguration
  nameWithType: IProject.UpdateTranslationProviderConfiguration
  fullName: Sdl.ProjectAutomation.Core.IProject.UpdateTranslationProviderConfiguration
- uid: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles
  isExternal: true
  name: AddBilingualReferenceFiles
  nameWithType: IProject.AddBilingualReferenceFiles
  fullName: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFiles
- uid: Sdl.ProjectAutomation.Core.BilingualFileMapping[]
  isExternal: true
  name: BilingualFileMapping[]
  nameWithType: BilingualFileMapping[]
  fullName: Sdl.ProjectAutomation.Core.BilingualFileMapping[]
  nameWithType.vb: BilingualFileMapping()
  fullName.vb: Sdl.ProjectAutomation.Core.BilingualFileMapping()
  name.vb: BilingualFileMapping()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.BilingualFileMapping
    name: BilingualFileMapping
    nameWithType: BilingualFileMapping
    fullName: Sdl.ProjectAutomation.Core.BilingualFileMapping
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.BilingualFileMapping
    name: BilingualFileMapping
    nameWithType: BilingualFileMapping
    fullName: Sdl.ProjectAutomation.Core.BilingualFileMapping
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFile*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFile
  isExternal: true
  name: AddBilingualReferenceFile
  nameWithType: IProject.AddBilingualReferenceFile
  fullName: Sdl.ProjectAutomation.Core.IProject.AddBilingualReferenceFile
- uid: Sdl.ProjectAutomation.Core.BilingualFileMapping
  commentId: T:Sdl.ProjectAutomation.Core.BilingualFileMapping
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: BilingualFileMapping
  nameWithType: BilingualFileMapping
  fullName: Sdl.ProjectAutomation.Core.BilingualFileMapping
- uid: Sdl.ProjectAutomation.Core.IProject.RemoveBilingualReferenceFile*
  commentId: Overload:Sdl.ProjectAutomation.Core.IProject.RemoveBilingualReferenceFile
  isExternal: true
  name: RemoveBilingualReferenceFile
  nameWithType: IProject.RemoveBilingualReferenceFile
  fullName: Sdl.ProjectAutomation.Core.IProject.RemoveBilingualReferenceFile
