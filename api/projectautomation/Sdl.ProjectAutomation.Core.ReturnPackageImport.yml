### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Core.ReturnPackageImport
  commentId: T:Sdl.ProjectAutomation.Core.ReturnPackageImport
  id: ReturnPackageImport
  parent: Sdl.ProjectAutomation.Core
  children:
  - Sdl.ProjectAutomation.Core.ReturnPackageImport.#ctor
  - Sdl.ProjectAutomation.Core.ReturnPackageImport.Files
  langs:
  - csharp
  - vb
  name: ReturnPackageImport
  nameWithType: ReturnPackageImport
  fullName: Sdl.ProjectAutomation.Core.ReturnPackageImport
  type: Class
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nRepresents the import of a return package into an existing project.\nTo import a return package, call <xref href=\"Sdl.ProjectAutomation.Core.IProject.ImportReturnPackage(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: 'public class ReturnPackageImport : PackageOperation'
    content.vb: >-
      Public Class ReturnPackageImport
          Inherits PackageOperation
  inheritance:
  - System.Object
  - Sdl.ProjectAutomation.Core.PackageOperation
  inheritedMembers:
  - Sdl.ProjectAutomation.Core.PackageOperation.PackageId
  - Sdl.ProjectAutomation.Core.PackageOperation.PercentComplete
  - Sdl.ProjectAutomation.Core.PackageOperation.Status
  - Sdl.ProjectAutomation.Core.PackageOperation.StatusMessage
  - Sdl.ProjectAutomation.Core.PackageOperation.Messages
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.Core.ReturnPackageImport.#ctor
  commentId: M:Sdl.ProjectAutomation.Core.ReturnPackageImport.#ctor
  id: '#ctor'
  parent: Sdl.ProjectAutomation.Core.ReturnPackageImport
  langs:
  - csharp
  - vb
  name: ReturnPackageImport()
  nameWithType: ReturnPackageImport.ReturnPackageImport()
  fullName: Sdl.ProjectAutomation.Core.ReturnPackageImport.ReturnPackageImport()
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public ReturnPackageImport()
    content.vb: Public Sub New
  overload: Sdl.ProjectAutomation.Core.ReturnPackageImport.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.ReturnPackageImport.Files
  commentId: P:Sdl.ProjectAutomation.Core.ReturnPackageImport.Files
  id: Files
  parent: Sdl.ProjectAutomation.Core.ReturnPackageImport
  langs:
  - csharp
  - vb
  name: Files
  nameWithType: ReturnPackageImport.Files
  fullName: Sdl.ProjectAutomation.Core.ReturnPackageImport.Files
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets the manual task files that were included in this return package.\nThese files do not necessarily all belong to the same manual task, but they should all belong to the same project.\nAlso, these file can be a subset of the files that were originally sent out in a project project package.\n"
  syntax:
    content: public TaskFile[] Files { get; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.Core.TaskFile[]
    content.vb: Public ReadOnly Property Files As TaskFile()
  overload: Sdl.ProjectAutomation.Core.ReturnPackageImport.Files*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.ProjectAutomation.Core
  commentId: N:Sdl.ProjectAutomation.Core
  isExternal: true
  name: Sdl.ProjectAutomation.Core
  nameWithType: Sdl.ProjectAutomation.Core
  fullName: Sdl.ProjectAutomation.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.ProjectAutomation.Core.PackageOperation
  commentId: T:Sdl.ProjectAutomation.Core.PackageOperation
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: PackageOperation
  nameWithType: PackageOperation
  fullName: Sdl.ProjectAutomation.Core.PackageOperation
- uid: Sdl.ProjectAutomation.Core.PackageOperation.PackageId
  commentId: P:Sdl.ProjectAutomation.Core.PackageOperation.PackageId
  parent: Sdl.ProjectAutomation.Core.PackageOperation
  isExternal: true
  name: PackageId
  nameWithType: PackageOperation.PackageId
  fullName: Sdl.ProjectAutomation.Core.PackageOperation.PackageId
- uid: Sdl.ProjectAutomation.Core.PackageOperation.PercentComplete
  commentId: P:Sdl.ProjectAutomation.Core.PackageOperation.PercentComplete
  parent: Sdl.ProjectAutomation.Core.PackageOperation
  isExternal: true
  name: PercentComplete
  nameWithType: PackageOperation.PercentComplete
  fullName: Sdl.ProjectAutomation.Core.PackageOperation.PercentComplete
- uid: Sdl.ProjectAutomation.Core.PackageOperation.Status
  commentId: P:Sdl.ProjectAutomation.Core.PackageOperation.Status
  parent: Sdl.ProjectAutomation.Core.PackageOperation
  isExternal: true
  name: Status
  nameWithType: PackageOperation.Status
  fullName: Sdl.ProjectAutomation.Core.PackageOperation.Status
- uid: Sdl.ProjectAutomation.Core.PackageOperation.StatusMessage
  commentId: P:Sdl.ProjectAutomation.Core.PackageOperation.StatusMessage
  parent: Sdl.ProjectAutomation.Core.PackageOperation
  isExternal: true
  name: StatusMessage
  nameWithType: PackageOperation.StatusMessage
  fullName: Sdl.ProjectAutomation.Core.PackageOperation.StatusMessage
- uid: Sdl.ProjectAutomation.Core.PackageOperation.Messages
  commentId: P:Sdl.ProjectAutomation.Core.PackageOperation.Messages
  parent: Sdl.ProjectAutomation.Core.PackageOperation
  isExternal: true
  name: Messages
  nameWithType: PackageOperation.Messages
  fullName: Sdl.ProjectAutomation.Core.PackageOperation.Messages
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Core.ReturnPackageImport.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.Core.ReturnPackageImport.#ctor
  isExternal: true
  name: ReturnPackageImport
  nameWithType: ReturnPackageImport.ReturnPackageImport
  fullName: Sdl.ProjectAutomation.Core.ReturnPackageImport.ReturnPackageImport
- uid: Sdl.ProjectAutomation.Core.ReturnPackageImport.Files*
  commentId: Overload:Sdl.ProjectAutomation.Core.ReturnPackageImport.Files
  isExternal: true
  name: Files
  nameWithType: ReturnPackageImport.Files
  fullName: Sdl.ProjectAutomation.Core.ReturnPackageImport.Files
- uid: Sdl.ProjectAutomation.Core.TaskFile[]
  isExternal: true
  name: TaskFile[]
  nameWithType: TaskFile[]
  fullName: Sdl.ProjectAutomation.Core.TaskFile[]
  nameWithType.vb: TaskFile()
  fullName.vb: Sdl.ProjectAutomation.Core.TaskFile()
  name.vb: TaskFile()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.TaskFile
    name: TaskFile
    nameWithType: TaskFile
    fullName: Sdl.ProjectAutomation.Core.TaskFile
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.TaskFile
    name: TaskFile
    nameWithType: TaskFile
    fullName: Sdl.ProjectAutomation.Core.TaskFile
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
