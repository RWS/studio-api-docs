### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Core.CountData
  commentId: T:Sdl.ProjectAutomation.Core.CountData
  id: CountData
  parent: Sdl.ProjectAutomation.Core
  children:
  - Sdl.ProjectAutomation.Core.CountData.#ctor
  - Sdl.ProjectAutomation.Core.CountData.Characters
  - Sdl.ProjectAutomation.Core.CountData.Create(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - Sdl.ProjectAutomation.Core.CountData.Increment(Sdl.ProjectAutomation.Core.CountData)
  - Sdl.ProjectAutomation.Core.CountData.Increment(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - Sdl.ProjectAutomation.Core.CountData.Placeables
  - Sdl.ProjectAutomation.Core.CountData.Segments
  - Sdl.ProjectAutomation.Core.CountData.Tags
  - Sdl.ProjectAutomation.Core.CountData.Words
  langs:
  - csharp
  - vb
  name: CountData
  nameWithType: CountData
  fullName: Sdl.ProjectAutomation.Core.CountData
  type: Class
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public class CountData
    content.vb: Public Class CountData
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.ProjectAutomation.Core.FuzzyCountData
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.Core.CountData.Create(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Sdl.ProjectAutomation.Core.CountData.Create(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Create(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Sdl.ProjectAutomation.Core.CountData
  langs:
  - csharp
  - vb
  name: Create(Int32, Int32, Int32, Int32, Int32)
  nameWithType: CountData.Create(Int32, Int32, Int32, Int32, Int32)
  fullName: Sdl.ProjectAutomation.Core.CountData.Create(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public static CountData Create(int words, int segments, int characters, int placeables, int tags)
    parameters:
    - id: words
      type: System.Int32
    - id: segments
      type: System.Int32
    - id: characters
      type: System.Int32
    - id: placeables
      type: System.Int32
    - id: tags
      type: System.Int32
    return:
      type: Sdl.ProjectAutomation.Core.CountData
    content.vb: Public Shared Function Create(words As Integer, segments As Integer, characters As Integer, placeables As Integer, tags As Integer) As CountData
  overload: Sdl.ProjectAutomation.Core.CountData.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.ProjectAutomation.Core.CountData.Increment(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Sdl.ProjectAutomation.Core.CountData.Increment(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Increment(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Sdl.ProjectAutomation.Core.CountData
  langs:
  - csharp
  - vb
  name: Increment(Int32, Int32, Int32, Int32, Int32)
  nameWithType: CountData.Increment(Int32, Int32, Int32, Int32, Int32)
  fullName: Sdl.ProjectAutomation.Core.CountData.Increment(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public void Increment(int words, int segments, int characters, int placeables, int tags)
    parameters:
    - id: words
      type: System.Int32
    - id: segments
      type: System.Int32
    - id: characters
      type: System.Int32
    - id: placeables
      type: System.Int32
    - id: tags
      type: System.Int32
    content.vb: Public Sub Increment(words As Integer, segments As Integer, characters As Integer, placeables As Integer, tags As Integer)
  overload: Sdl.ProjectAutomation.Core.CountData.Increment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.CountData.Increment(Sdl.ProjectAutomation.Core.CountData)
  commentId: M:Sdl.ProjectAutomation.Core.CountData.Increment(Sdl.ProjectAutomation.Core.CountData)
  id: Increment(Sdl.ProjectAutomation.Core.CountData)
  parent: Sdl.ProjectAutomation.Core.CountData
  langs:
  - csharp
  - vb
  name: Increment(CountData)
  nameWithType: CountData.Increment(CountData)
  fullName: Sdl.ProjectAutomation.Core.CountData.Increment(Sdl.ProjectAutomation.Core.CountData)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public void Increment(CountData toIncrement)
    parameters:
    - id: toIncrement
      type: Sdl.ProjectAutomation.Core.CountData
    content.vb: Public Sub Increment(toIncrement As CountData)
  overload: Sdl.ProjectAutomation.Core.CountData.Increment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.CountData.#ctor
  commentId: M:Sdl.ProjectAutomation.Core.CountData.#ctor
  id: '#ctor'
  parent: Sdl.ProjectAutomation.Core.CountData
  langs:
  - csharp
  - vb
  name: CountData()
  nameWithType: CountData.CountData()
  fullName: Sdl.ProjectAutomation.Core.CountData.CountData()
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public CountData()
    content.vb: Public Sub New
  overload: Sdl.ProjectAutomation.Core.CountData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.CountData.Words
  commentId: P:Sdl.ProjectAutomation.Core.CountData.Words
  id: Words
  parent: Sdl.ProjectAutomation.Core.CountData
  langs:
  - csharp
  - vb
  name: Words
  nameWithType: CountData.Words
  fullName: Sdl.ProjectAutomation.Core.CountData.Words
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public int Words { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Words As Integer
  overload: Sdl.ProjectAutomation.Core.CountData.Words*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.CountData.Segments
  commentId: P:Sdl.ProjectAutomation.Core.CountData.Segments
  id: Segments
  parent: Sdl.ProjectAutomation.Core.CountData
  langs:
  - csharp
  - vb
  name: Segments
  nameWithType: CountData.Segments
  fullName: Sdl.ProjectAutomation.Core.CountData.Segments
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public int Segments { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Segments As Integer
  overload: Sdl.ProjectAutomation.Core.CountData.Segments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.CountData.Characters
  commentId: P:Sdl.ProjectAutomation.Core.CountData.Characters
  id: Characters
  parent: Sdl.ProjectAutomation.Core.CountData
  langs:
  - csharp
  - vb
  name: Characters
  nameWithType: CountData.Characters
  fullName: Sdl.ProjectAutomation.Core.CountData.Characters
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public int Characters { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Characters As Integer
  overload: Sdl.ProjectAutomation.Core.CountData.Characters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.CountData.Placeables
  commentId: P:Sdl.ProjectAutomation.Core.CountData.Placeables
  id: Placeables
  parent: Sdl.ProjectAutomation.Core.CountData
  langs:
  - csharp
  - vb
  name: Placeables
  nameWithType: CountData.Placeables
  fullName: Sdl.ProjectAutomation.Core.CountData.Placeables
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public int Placeables { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Placeables As Integer
  overload: Sdl.ProjectAutomation.Core.CountData.Placeables*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.CountData.Tags
  commentId: P:Sdl.ProjectAutomation.Core.CountData.Tags
  id: Tags
  parent: Sdl.ProjectAutomation.Core.CountData
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: CountData.Tags
  fullName: Sdl.ProjectAutomation.Core.CountData.Tags
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public int Tags { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Tags As Integer
  overload: Sdl.ProjectAutomation.Core.CountData.Tags*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.ProjectAutomation.Core
  commentId: N:Sdl.ProjectAutomation.Core
  isExternal: true
  name: Sdl.ProjectAutomation.Core
  nameWithType: Sdl.ProjectAutomation.Core
  fullName: Sdl.ProjectAutomation.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Core.CountData.Create*
  commentId: Overload:Sdl.ProjectAutomation.Core.CountData.Create
  isExternal: true
  name: Create
  nameWithType: CountData.Create
  fullName: Sdl.ProjectAutomation.Core.CountData.Create
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.ProjectAutomation.Core.CountData
  commentId: T:Sdl.ProjectAutomation.Core.CountData
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: CountData
  nameWithType: CountData
  fullName: Sdl.ProjectAutomation.Core.CountData
- uid: Sdl.ProjectAutomation.Core.CountData.Increment*
  commentId: Overload:Sdl.ProjectAutomation.Core.CountData.Increment
  isExternal: true
  name: Increment
  nameWithType: CountData.Increment
  fullName: Sdl.ProjectAutomation.Core.CountData.Increment
- uid: Sdl.ProjectAutomation.Core.CountData.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.Core.CountData.#ctor
  isExternal: true
  name: CountData
  nameWithType: CountData.CountData
  fullName: Sdl.ProjectAutomation.Core.CountData.CountData
- uid: Sdl.ProjectAutomation.Core.CountData.Words*
  commentId: Overload:Sdl.ProjectAutomation.Core.CountData.Words
  isExternal: true
  name: Words
  nameWithType: CountData.Words
  fullName: Sdl.ProjectAutomation.Core.CountData.Words
- uid: Sdl.ProjectAutomation.Core.CountData.Segments*
  commentId: Overload:Sdl.ProjectAutomation.Core.CountData.Segments
  isExternal: true
  name: Segments
  nameWithType: CountData.Segments
  fullName: Sdl.ProjectAutomation.Core.CountData.Segments
- uid: Sdl.ProjectAutomation.Core.CountData.Characters*
  commentId: Overload:Sdl.ProjectAutomation.Core.CountData.Characters
  isExternal: true
  name: Characters
  nameWithType: CountData.Characters
  fullName: Sdl.ProjectAutomation.Core.CountData.Characters
- uid: Sdl.ProjectAutomation.Core.CountData.Placeables*
  commentId: Overload:Sdl.ProjectAutomation.Core.CountData.Placeables
  isExternal: true
  name: Placeables
  nameWithType: CountData.Placeables
  fullName: Sdl.ProjectAutomation.Core.CountData.Placeables
- uid: Sdl.ProjectAutomation.Core.CountData.Tags*
  commentId: Overload:Sdl.ProjectAutomation.Core.CountData.Tags
  isExternal: true
  name: Tags
  nameWithType: CountData.Tags
  fullName: Sdl.ProjectAutomation.Core.CountData.Tags
