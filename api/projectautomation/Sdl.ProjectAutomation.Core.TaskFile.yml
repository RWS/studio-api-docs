### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Core.TaskFile
  commentId: T:Sdl.ProjectAutomation.Core.TaskFile
  id: TaskFile
  parent: Sdl.ProjectAutomation.Core
  children:
  - Sdl.ProjectAutomation.Core.TaskFile.#ctor
  - Sdl.ProjectAutomation.Core.TaskFile.Completed
  - Sdl.ProjectAutomation.Core.TaskFile.ProjectFileId
  - Sdl.ProjectAutomation.Core.TaskFile.ReadOnly
  - Sdl.ProjectAutomation.Core.TaskFile.TaskId
  langs:
  - csharp
  - vb
  name: TaskFile
  nameWithType: TaskFile
  fullName: Sdl.ProjectAutomation.Core.TaskFile
  type: Class
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nRepresents a reference to a <xref href=\"Sdl.ProjectAutomation.Core.ProjectFile\" data-throw-if-not-resolved=\"false\"></xref> that is part of a <xref href=\"Sdl.ProjectAutomation.Core.ManualTask\" data-throw-if-not-resolved=\"false\"></xref> or an <xref href=\"Sdl.ProjectAutomation.Core.AutomaticTask\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public class TaskFile
    content.vb: Public Class TaskFile
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.Core.TaskFile.#ctor
  commentId: M:Sdl.ProjectAutomation.Core.TaskFile.#ctor
  id: '#ctor'
  parent: Sdl.ProjectAutomation.Core.TaskFile
  langs:
  - csharp
  - vb
  name: TaskFile()
  nameWithType: TaskFile.TaskFile()
  fullName: Sdl.ProjectAutomation.Core.TaskFile.TaskFile()
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public TaskFile()
    content.vb: Public Sub New
  overload: Sdl.ProjectAutomation.Core.TaskFile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.TaskFile.TaskId
  commentId: P:Sdl.ProjectAutomation.Core.TaskFile.TaskId
  id: TaskId
  parent: Sdl.ProjectAutomation.Core.TaskFile
  langs:
  - csharp
  - vb
  name: TaskId
  nameWithType: TaskFile.TaskId
  fullName: Sdl.ProjectAutomation.Core.TaskFile.TaskId
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets the unique ID of the manual or automatic task to which this file belongs.\n"
  remarks: >-
    To get more information about the task itself, use <xref href="Sdl.ProjectAutomation.Core.IProject.GetAutomaticTask(System.Guid)" data-throw-if-not-resolved="false"></xref>

    or <xref href="Sdl.ProjectAutomation.Core.IProject.GetManualTask(System.Guid)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public Guid TaskId { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public ReadOnly Property TaskId As Guid
  overload: Sdl.ProjectAutomation.Core.TaskFile.TaskId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.TaskFile.ProjectFileId
  commentId: P:Sdl.ProjectAutomation.Core.TaskFile.ProjectFileId
  id: ProjectFileId
  parent: Sdl.ProjectAutomation.Core.TaskFile
  langs:
  - csharp
  - vb
  name: ProjectFileId
  nameWithType: TaskFile.ProjectFileId
  fullName: Sdl.ProjectAutomation.Core.TaskFile.ProjectFileId
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets the unique ID of the project file.\n"
  remarks: To get more information about the file, use <xref href="Sdl.ProjectAutomation.Core.IProject.GetFile(System.Guid)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public Guid ProjectFileId { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public ReadOnly Property ProjectFileId As Guid
  overload: Sdl.ProjectAutomation.Core.TaskFile.ProjectFileId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.TaskFile.Completed
  commentId: P:Sdl.ProjectAutomation.Core.TaskFile.Completed
  id: Completed
  parent: Sdl.ProjectAutomation.Core.TaskFile
  langs:
  - csharp
  - vb
  name: Completed
  nameWithType: TaskFile.Completed
  fullName: Sdl.ProjectAutomation.Core.TaskFile.Completed
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets whether the task has been completed (successfully or not) for this file.\n"
  syntax:
    content: public bool Completed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Completed As Boolean
  overload: Sdl.ProjectAutomation.Core.TaskFile.Completed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.TaskFile.ReadOnly
  commentId: P:Sdl.ProjectAutomation.Core.TaskFile.ReadOnly
  id: ReadOnly
  parent: Sdl.ProjectAutomation.Core.TaskFile
  langs:
  - csharp
  - vb
  name: ReadOnly
  nameWithType: TaskFile.ReadOnly
  fullName: Sdl.ProjectAutomation.Core.TaskFile.ReadOnly
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  summary: "\nGets whether this project file can be modified by this task or whether it has only been included for reference.\n"
  syntax:
    content: public bool ReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ReadOnly As Boolean
  overload: Sdl.ProjectAutomation.Core.TaskFile.ReadOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.ProjectAutomation.Core
  commentId: N:Sdl.ProjectAutomation.Core
  isExternal: true
  name: Sdl.ProjectAutomation.Core
  nameWithType: Sdl.ProjectAutomation.Core
  fullName: Sdl.ProjectAutomation.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Core.TaskFile.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.Core.TaskFile.#ctor
  isExternal: true
  name: TaskFile
  nameWithType: TaskFile.TaskFile
  fullName: Sdl.ProjectAutomation.Core.TaskFile.TaskFile
- uid: Sdl.ProjectAutomation.Core.TaskFile.TaskId*
  commentId: Overload:Sdl.ProjectAutomation.Core.TaskFile.TaskId
  isExternal: true
  name: TaskId
  nameWithType: TaskFile.TaskId
  fullName: Sdl.ProjectAutomation.Core.TaskFile.TaskId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Sdl.ProjectAutomation.Core.TaskFile.ProjectFileId*
  commentId: Overload:Sdl.ProjectAutomation.Core.TaskFile.ProjectFileId
  isExternal: true
  name: ProjectFileId
  nameWithType: TaskFile.ProjectFileId
  fullName: Sdl.ProjectAutomation.Core.TaskFile.ProjectFileId
- uid: Sdl.ProjectAutomation.Core.TaskFile.Completed*
  commentId: Overload:Sdl.ProjectAutomation.Core.TaskFile.Completed
  isExternal: true
  name: Completed
  nameWithType: TaskFile.Completed
  fullName: Sdl.ProjectAutomation.Core.TaskFile.Completed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.ProjectAutomation.Core.TaskFile.ReadOnly*
  commentId: Overload:Sdl.ProjectAutomation.Core.TaskFile.ReadOnly
  isExternal: true
  name: ReadOnly
  nameWithType: TaskFile.ReadOnly
  fullName: Sdl.ProjectAutomation.Core.TaskFile.ReadOnly
