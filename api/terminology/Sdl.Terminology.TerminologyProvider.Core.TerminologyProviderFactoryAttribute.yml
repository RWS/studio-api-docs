### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderFactoryAttribute
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderFactoryAttribute
  id: TerminologyProviderFactoryAttribute
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderFactoryAttribute.#ctor
  langs:
  - csharp
  - vb
  name: TerminologyProviderFactoryAttribute
  nameWithType: TerminologyProviderFactoryAttribute
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderFactoryAttribute
  type: Class
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nExtension attribute for registering a terminology provider factory that supports a specific types of terminology providers.\n"
  remarks: "\n<p>Use this extension attribute to mark up implementations of <xref href=\"Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The registered terminology provider factories are used to instantiate terminology providers when calling\n<xref href=\"Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory.CreateTerminologyProvider(System.Uri%2cSdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)]

      public sealed class TerminologyProviderFactoryAttribute : ExtensionAttribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Class, AllowMultiple:=False)>

      Public NotInheritable Class TerminologyProviderFactoryAttribute
          Inherits ExtensionAttribute
  inheritance:
  - System.Object
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 4
    namedArguments:
    - name: AllowMultiple
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderFactoryAttribute.#ctor
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderFactoryAttribute.#ctor
  id: '#ctor'
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderFactoryAttribute
  langs:
  - csharp
  - vb
  name: TerminologyProviderFactoryAttribute()
  nameWithType: TerminologyProviderFactoryAttribute.TerminologyProviderFactoryAttribute()
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderFactoryAttribute.TerminologyProviderFactoryAttribute()
  type: Constructor
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nDefault constructor.\n"
  syntax:
    content: public TerminologyProviderFactoryAttribute()
    content.vb: Public Sub New
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderFactoryAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderFactoryAttribute.#ctor*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderFactoryAttribute.#ctor
  isExternal: true
  name: TerminologyProviderFactoryAttribute
  nameWithType: TerminologyProviderFactoryAttribute.TerminologyProviderFactoryAttribute
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderFactoryAttribute.TerminologyProviderFactoryAttribute
