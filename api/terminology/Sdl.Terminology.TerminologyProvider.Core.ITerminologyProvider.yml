### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  id: ITerminologyProvider
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.ActiveFilter
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Definition
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Description
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetEntry(System.Int32)
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetEntry(System.Int32,System.Collections.Generic.IEnumerable{Sdl.Terminology.TerminologyProvider.Core.ILanguage})
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetFilters
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetLanguages
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Id
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Initialize
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Initialize(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsInitialized
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsProviderUpToDate
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsReadOnly
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Name
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Search(System.String,Sdl.Terminology.TerminologyProvider.Core.ILanguage,Sdl.Terminology.TerminologyProvider.Core.ILanguage,System.Int32,Sdl.Terminology.TerminologyProvider.Core.SearchMode,System.Boolean)
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.SearchEnabled
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.SetDefault(System.Boolean)
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Type
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Uninitialize
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Uri
  langs:
  - csharp
  - vb
  name: ITerminologyProvider
  nameWithType: ITerminologyProvider
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  type: Interface
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Provides access to a terminology provider, which in turn provides access to termbases.
  remarks: Implement <xref href="Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider" data-throw-if-not-resolved="false"></xref> interface when creating a terminology provider.
  example: []
  syntax:
    content: 'public interface ITerminologyProvider : IDisposable'
    content.vb: Public Interface ITerminologyProvider Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.SetDefault(System.Boolean)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.SetDefault(System.Boolean)
  id: SetDefault(System.Boolean)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: SetDefault(bool)
  nameWithType: ITerminologyProvider.SetDefault(bool)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.SetDefault(bool)
  type: Method
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Set the terminology provider as default
  example: []
  syntax:
    content: void SetDefault(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: Determines if it is set as default or not
    content.vb: Sub SetDefault(value As Boolean)
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.SetDefault*
  nameWithType.vb: ITerminologyProvider.SetDefault(Boolean)
  fullName.vb: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.SetDefault(Boolean)
  name.vb: SetDefault(Boolean)
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetLanguages
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetLanguages
  id: GetLanguages
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: GetLanguages()
  nameWithType: ITerminologyProvider.GetLanguages()
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetLanguages()
  type: Method
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Returns a list of the language languages available for this terminology provider
  example: []
  syntax:
    content: IList<ILanguage> GetLanguages()
    return:
      type: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.ILanguage}
      description: The list of language definitions for a terms
    content.vb: Function GetLanguages() As IList(Of ILanguage)
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetLanguages*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetEntry(System.Int32)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetEntry(System.Int32)
  id: GetEntry(System.Int32)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: GetEntry(int)
  nameWithType: ITerminologyProvider.GetEntry(int)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetEntry(int)
  type: Method
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Get an entry definition from the terminology provider
  example: []
  syntax:
    content: Entry GetEntry(int id)
    parameters:
    - id: id
      type: System.Int32
      description: The entry id to get.
    return:
      type: Sdl.Terminology.TerminologyProvider.Core.Entry
      description: The entry object. Returns null if an entry with the specified id does not exists in the terminology provider.
    content.vb: Function GetEntry(id As Integer) As Entry
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetEntry*
  nameWithType.vb: ITerminologyProvider.GetEntry(Integer)
  fullName.vb: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetEntry(Integer)
  name.vb: GetEntry(Integer)
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetEntry(System.Int32,System.Collections.Generic.IEnumerable{Sdl.Terminology.TerminologyProvider.Core.ILanguage})
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetEntry(System.Int32,System.Collections.Generic.IEnumerable{Sdl.Terminology.TerminologyProvider.Core.ILanguage})
  id: GetEntry(System.Int32,System.Collections.Generic.IEnumerable{Sdl.Terminology.TerminologyProvider.Core.ILanguage})
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: GetEntry(int, IEnumerable<ILanguage>)
  nameWithType: ITerminologyProvider.GetEntry(int, IEnumerable<ILanguage>)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetEntry(int, System.Collections.Generic.IEnumerable<Sdl.Terminology.TerminologyProvider.Core.ILanguage>)
  type: Method
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Get an entry from the terminology provider
  example: []
  syntax:
    content: Entry GetEntry(int id, IEnumerable<ILanguage> languages)
    parameters:
    - id: id
      type: System.Int32
      description: The entry id to get.
    - id: languages
      type: System.Collections.Generic.IEnumerable{Sdl.Terminology.TerminologyProvider.Core.ILanguage}
      description: The languages to fill for the requested entry.
    return:
      type: Sdl.Terminology.TerminologyProvider.Core.Entry
      description: The entry object. Returns null if an entry with the specified id does not exists in the terminology provider.
    content.vb: Function GetEntry(id As Integer, languages As IEnumerable(Of ILanguage)) As Entry
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetEntry*
  nameWithType.vb: ITerminologyProvider.GetEntry(Integer, IEnumerable(Of ILanguage))
  fullName.vb: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetEntry(Integer, System.Collections.Generic.IEnumerable(Of Sdl.Terminology.TerminologyProvider.Core.ILanguage))
  name.vb: GetEntry(Integer, IEnumerable(Of ILanguage))
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Search(System.String,Sdl.Terminology.TerminologyProvider.Core.ILanguage,Sdl.Terminology.TerminologyProvider.Core.ILanguage,System.Int32,Sdl.Terminology.TerminologyProvider.Core.SearchMode,System.Boolean)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Search(System.String,Sdl.Terminology.TerminologyProvider.Core.ILanguage,Sdl.Terminology.TerminologyProvider.Core.ILanguage,System.Int32,Sdl.Terminology.TerminologyProvider.Core.SearchMode,System.Boolean)
  id: Search(System.String,Sdl.Terminology.TerminologyProvider.Core.ILanguage,Sdl.Terminology.TerminologyProvider.Core.ILanguage,System.Int32,Sdl.Terminology.TerminologyProvider.Core.SearchMode,System.Boolean)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: Search(string, ILanguage, ILanguage, int, SearchMode, bool)
  nameWithType: ITerminologyProvider.Search(string, ILanguage, ILanguage, int, SearchMode, bool)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Search(string, Sdl.Terminology.TerminologyProvider.Core.ILanguage, Sdl.Terminology.TerminologyProvider.Core.ILanguage, int, Sdl.Terminology.TerminologyProvider.Core.SearchMode, bool)
  type: Method
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Performs a search over the current terminology provider
  example: []
  syntax:
    content: IList<SearchResult> Search(string text, ILanguage source, ILanguage destination, int maxResultsCount, SearchMode mode, bool targetRequired)
    parameters:
    - id: text
      type: System.String
      description: The text to search for
    - id: source
      type: Sdl.Terminology.TerminologyProvider.Core.ILanguage
      description: Source language
    - id: destination
      type: Sdl.Terminology.TerminologyProvider.Core.ILanguage
      description: Destination language
    - id: maxResultsCount
      type: System.Int32
      description: Maximum number of result to return
    - id: mode
      type: Sdl.Terminology.TerminologyProvider.Core.SearchMode
      description: 'search mode: normal, fuzzy, full text'
    - id: targetRequired
      type: System.Boolean
      description: True to return only term with target language term definition
    return:
      type: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.SearchResult}
      description: The list of found terms
    content.vb: Function Search(text As String, source As ILanguage, destination As ILanguage, maxResultsCount As Integer, mode As SearchMode, targetRequired As Boolean) As IList(Of SearchResult)
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Search*
  nameWithType.vb: ITerminologyProvider.Search(String, ILanguage, ILanguage, Integer, SearchMode, Boolean)
  fullName.vb: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Search(String, Sdl.Terminology.TerminologyProvider.Core.ILanguage, Sdl.Terminology.TerminologyProvider.Core.ILanguage, Integer, Sdl.Terminology.TerminologyProvider.Core.SearchMode, Boolean)
  name.vb: Search(String, ILanguage, ILanguage, Integer, SearchMode, Boolean)
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Initialize
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Initialize
  id: Initialize
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: ITerminologyProvider.Initialize()
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Initialize()
  type: Method
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Initialize the provider
  example: []
  syntax:
    content: bool Initialize()
    return:
      type: System.Boolean
      description: True for success
    content.vb: Function Initialize() As Boolean
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Initialize*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Initialize(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Initialize(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  id: Initialize(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: Initialize(TerminologyProviderCredential)
  nameWithType: ITerminologyProvider.Initialize(TerminologyProviderCredential)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Initialize(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  type: Method
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Initialize the provider using the specified credentials
  example: []
  syntax:
    content: bool Initialize(TerminologyProviderCredential credential)
    parameters:
    - id: credential
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
    return:
      type: System.Boolean
      description: True for success
    content.vb: Function Initialize(credential As TerminologyProviderCredential) As Boolean
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Initialize*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsProviderUpToDate
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsProviderUpToDate
  id: IsProviderUpToDate
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: IsProviderUpToDate()
  nameWithType: ITerminologyProvider.IsProviderUpToDate()
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsProviderUpToDate()
  type: Method
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Indicates whether the provider information is up-to-date
  example: []
  syntax:
    content: bool IsProviderUpToDate()
    return:
      type: System.Boolean
      description: ''
    content.vb: Function IsProviderUpToDate() As Boolean
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsProviderUpToDate*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetFilters
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetFilters
  id: GetFilters
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: GetFilters()
  nameWithType: ITerminologyProvider.GetFilters()
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetFilters()
  type: Method
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Returns a list of filter definitions available for this terminology provider
  example: []
  syntax:
    content: IList<FilterDefinition> GetFilters()
    return:
      type: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.FilterDefinition}
      description: ''
    content.vb: Function GetFilters() As IList(Of FilterDefinition)
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetFilters*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Uninitialize
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Uninitialize
  id: Uninitialize
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: Uninitialize()
  nameWithType: ITerminologyProvider.Uninitialize()
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Uninitialize()
  type: Method
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Uninitialize the provider
  example: []
  syntax:
    content: bool Uninitialize()
    return:
      type: System.Boolean
    content.vb: Function Uninitialize() As Boolean
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Uninitialize*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Name
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Name
  id: Name
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ITerminologyProvider.Name
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Name
  type: Property
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Gets the display name of the terminology provider
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Name*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Description
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Description
  id: Description
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ITerminologyProvider.Description
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Description
  type: Property
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Gets the terminology provider description
  example: []
  syntax:
    content: string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Description As String
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Description*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Id
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Id
  id: Id
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ITerminologyProvider.Id
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Id
  type: Property
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Gets the unique ID of the terminology provider
  example: []
  syntax:
    content: string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Id As String
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Id*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Uri
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Uri
  id: Uri
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: ITerminologyProvider.Uri
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Uri
  type: Property
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Gets the URI of this terminology provider.
  example: []
  syntax:
    content: Uri Uri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: ReadOnly Property Uri As Uri
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Uri*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Type
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Type
  id: Type
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ITerminologyProvider.Type
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Type
  type: Property
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Gets the type of the terminology provider.
  example: []
  syntax:
    content: TerminologyProviderType Type { get; }
    parameters: []
    return:
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderType
    content.vb: ReadOnly Property Type As TerminologyProviderType
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Type*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsReadOnly
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsReadOnly
  id: IsReadOnly
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ITerminologyProvider.IsReadOnly
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsReadOnly
  type: Property
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Read only flag for the terminology provider.
  example: []
  syntax:
    content: bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsReadOnly As Boolean
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsReadOnly*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.SearchEnabled
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.SearchEnabled
  id: SearchEnabled
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: SearchEnabled
  nameWithType: ITerminologyProvider.SearchEnabled
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.SearchEnabled
  type: Property
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Gets the terminology provider search enabled flag.
  example: []
  syntax:
    content: bool SearchEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SearchEnabled As Boolean
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.SearchEnabled*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Definition
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Definition
  id: Definition
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: Definition
  nameWithType: ITerminologyProvider.Definition
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Definition
  type: Property
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Get the terminology provider's definition
  example: []
  syntax:
    content: Definition Definition { get; }
    parameters: []
    return:
      type: Sdl.Terminology.TerminologyProvider.Core.Definition
    content.vb: ReadOnly Property Definition As Definition
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Definition*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.ActiveFilter
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.ActiveFilter
  id: ActiveFilter
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: ActiveFilter
  nameWithType: ITerminologyProvider.ActiveFilter
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.ActiveFilter
  type: Property
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Gets or sets the active filter definition
  example: []
  syntax:
    content: FilterDefinition ActiveFilter { get; set; }
    parameters: []
    return:
      type: Sdl.Terminology.TerminologyProvider.Core.FilterDefinition
    content.vb: Property ActiveFilter As FilterDefinition
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.ActiveFilter*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsInitialized
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsInitialized
  id: IsInitialized
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  langs:
  - csharp
  - vb
  name: IsInitialized
  nameWithType: ITerminologyProvider.IsInitialized
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsInitialized
  type: Property
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Flag to track whether the provider has been initialized.
  example: []
  syntax:
    content: bool IsInitialized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsInitialized As Boolean
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsInitialized*
references:
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html
  name: ITerminologyProvider
  nameWithType: ITerminologyProvider
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  href: Sdl.html
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Terminology
    name: Terminology
    isExternal: true
    href: Sdl.Terminology.html
  - name: .
  - uid: Sdl.Terminology.TerminologyProvider
    name: TerminologyProvider
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.html
  - name: .
  - uid: Sdl.Terminology.TerminologyProvider.Core
    name: Core
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Terminology
    name: Terminology
    isExternal: true
    href: Sdl.Terminology.html
  - name: .
  - uid: Sdl.Terminology.TerminologyProvider
    name: TerminologyProvider
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.html
  - name: .
  - uid: Sdl.Terminology.TerminologyProvider.Core
    name: Core
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.html
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.SetDefault*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.SetDefault
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_SetDefault_System_Boolean_
  name: SetDefault
  nameWithType: ITerminologyProvider.SetDefault
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.SetDefault
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetLanguages*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetLanguages
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_GetLanguages
  name: GetLanguages
  nameWithType: ITerminologyProvider.GetLanguages
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetLanguages
- uid: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.ILanguage}
  commentId: T:System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.ILanguage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<ILanguage>
  nameWithType: IList<ILanguage>
  fullName: System.Collections.Generic.IList<Sdl.Terminology.TerminologyProvider.Core.ILanguage>
  nameWithType.vb: IList(Of ILanguage)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.Terminology.TerminologyProvider.Core.ILanguage)
  name.vb: IList(Of ILanguage)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.ILanguage
    name: ILanguage
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.ILanguage.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Terminology.TerminologyProvider.Core.ILanguage
    name: ILanguage
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.ILanguage.html
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetEntry*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetEntry
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_GetEntry_System_Int32_
  name: GetEntry
  nameWithType: ITerminologyProvider.GetEntry
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetEntry
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Sdl.Terminology.TerminologyProvider.Core.Entry
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.Entry
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.Entry.html
  name: Entry
  nameWithType: Entry
  fullName: Sdl.Terminology.TerminologyProvider.Core.Entry
- uid: System.Collections.Generic.IEnumerable{Sdl.Terminology.TerminologyProvider.Core.ILanguage}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.Terminology.TerminologyProvider.Core.ILanguage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ILanguage>
  nameWithType: IEnumerable<ILanguage>
  fullName: System.Collections.Generic.IEnumerable<Sdl.Terminology.TerminologyProvider.Core.ILanguage>
  nameWithType.vb: IEnumerable(Of ILanguage)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.Terminology.TerminologyProvider.Core.ILanguage)
  name.vb: IEnumerable(Of ILanguage)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.ILanguage
    name: ILanguage
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.ILanguage.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Terminology.TerminologyProvider.Core.ILanguage
    name: ILanguage
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.ILanguage.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Search*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Search
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_Search_System_String_Sdl_Terminology_TerminologyProvider_Core_ILanguage_Sdl_Terminology_TerminologyProvider_Core_ILanguage_System_Int32_Sdl_Terminology_TerminologyProvider_Core_SearchMode_System_Boolean_
  name: Search
  nameWithType: ITerminologyProvider.Search
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Search
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Sdl.Terminology.TerminologyProvider.Core.ILanguage
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.ILanguage
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ILanguage.html
  name: ILanguage
  nameWithType: ILanguage
  fullName: Sdl.Terminology.TerminologyProvider.Core.ILanguage
- uid: Sdl.Terminology.TerminologyProvider.Core.SearchMode
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.SearchMode
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.SearchMode.html
  name: SearchMode
  nameWithType: SearchMode
  fullName: Sdl.Terminology.TerminologyProvider.Core.SearchMode
- uid: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.SearchResult}
  commentId: T:System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.SearchResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<SearchResult>
  nameWithType: IList<SearchResult>
  fullName: System.Collections.Generic.IList<Sdl.Terminology.TerminologyProvider.Core.SearchResult>
  nameWithType.vb: IList(Of SearchResult)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.Terminology.TerminologyProvider.Core.SearchResult)
  name.vb: IList(Of SearchResult)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.SearchResult
    name: SearchResult
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.SearchResult.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Terminology.TerminologyProvider.Core.SearchResult
    name: SearchResult
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.SearchResult.html
  - name: )
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Initialize*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Initialize
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_Initialize
  name: Initialize
  nameWithType: ITerminologyProvider.Initialize
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Initialize
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.html
  name: TerminologyProviderCredential
  nameWithType: TerminologyProviderCredential
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsProviderUpToDate*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsProviderUpToDate
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_IsProviderUpToDate
  name: IsProviderUpToDate
  nameWithType: ITerminologyProvider.IsProviderUpToDate
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsProviderUpToDate
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetFilters*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetFilters
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_GetFilters
  name: GetFilters
  nameWithType: ITerminologyProvider.GetFilters
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.GetFilters
- uid: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.FilterDefinition}
  commentId: T:System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.FilterDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<FilterDefinition>
  nameWithType: IList<FilterDefinition>
  fullName: System.Collections.Generic.IList<Sdl.Terminology.TerminologyProvider.Core.FilterDefinition>
  nameWithType.vb: IList(Of FilterDefinition)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.Terminology.TerminologyProvider.Core.FilterDefinition)
  name.vb: IList(Of FilterDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.FilterDefinition
    name: FilterDefinition
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.FilterDefinition.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Terminology.TerminologyProvider.Core.FilterDefinition
    name: FilterDefinition
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.FilterDefinition.html
  - name: )
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Uninitialize*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Uninitialize
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_Uninitialize
  name: Uninitialize
  nameWithType: ITerminologyProvider.Uninitialize
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Uninitialize
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Name*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Name
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_Name
  name: Name
  nameWithType: ITerminologyProvider.Name
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Name
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Description*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Description
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_Description
  name: Description
  nameWithType: ITerminologyProvider.Description
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Description
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Id*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Id
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_Id
  name: Id
  nameWithType: ITerminologyProvider.Id
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Id
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Uri*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Uri
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_Uri
  name: Uri
  nameWithType: ITerminologyProvider.Uri
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Uri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Type*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Type
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_Type
  name: Type
  nameWithType: ITerminologyProvider.Type
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Type
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderType
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderType
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderType.html
  name: TerminologyProviderType
  nameWithType: TerminologyProviderType
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderType
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsReadOnly*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsReadOnly
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_IsReadOnly
  name: IsReadOnly
  nameWithType: ITerminologyProvider.IsReadOnly
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsReadOnly
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.SearchEnabled*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.SearchEnabled
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_SearchEnabled
  name: SearchEnabled
  nameWithType: ITerminologyProvider.SearchEnabled
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.SearchEnabled
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Definition*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Definition
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_Definition
  name: Definition
  nameWithType: ITerminologyProvider.Definition
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.Definition
- uid: Sdl.Terminology.TerminologyProvider.Core.Definition
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.Definition
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.Definition.html
  name: Definition
  nameWithType: Definition
  fullName: Sdl.Terminology.TerminologyProvider.Core.Definition
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.ActiveFilter*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.ActiveFilter
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_ActiveFilter
  name: ActiveFilter
  nameWithType: ITerminologyProvider.ActiveFilter
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.ActiveFilter
- uid: Sdl.Terminology.TerminologyProvider.Core.FilterDefinition
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.FilterDefinition
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.FilterDefinition.html
  name: FilterDefinition
  nameWithType: FilterDefinition
  fullName: Sdl.Terminology.TerminologyProvider.Core.FilterDefinition
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsInitialized*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsInitialized
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyProvider_IsInitialized
  name: IsInitialized
  nameWithType: ITerminologyProvider.IsInitialized
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider.IsInitialized
