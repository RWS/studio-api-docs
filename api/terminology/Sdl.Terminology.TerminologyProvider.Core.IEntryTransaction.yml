### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction
  id: IEntryTransaction
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Date
  - Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Name
  - Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Type
  langs:
  - csharp
  - vb
  name: IEntryTransaction
  nameWithType: IEntryTransaction
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction
  type: Interface
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public interface IEntryTransaction
    content.vb: Public Interface IEntryTransaction
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Type
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Type
  id: Type
  parent: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: IEntryTransaction.Type
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Type
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: TransactionType Type { get; }
    parameters: []
    return:
      type: Sdl.Terminology.TerminologyProvider.Core.TransactionType
    content.vb: ReadOnly Property Type As TransactionType
  overload: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Type*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Name
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Name
  id: Name
  parent: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IEntryTransaction.Name
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Name
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Date
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Date
  id: Date
  parent: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: IEntryTransaction.Date
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Date
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: DateTime Date { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: ReadOnly Property Date As Date
  overload: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Date*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Type*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Type
  isExternal: true
  name: Type
  nameWithType: IEntryTransaction.Type
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Type
- uid: Sdl.Terminology.TerminologyProvider.Core.TransactionType
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.TransactionType
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: TransactionType
  nameWithType: TransactionType
  fullName: Sdl.Terminology.TerminologyProvider.Core.TransactionType
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Name*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Name
  isExternal: true
  name: Name
  nameWithType: IEntryTransaction.Name
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Date*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Date
  isExternal: true
  name: Date
  nameWithType: IEntryTransaction.Date
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryTransaction.Date
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
