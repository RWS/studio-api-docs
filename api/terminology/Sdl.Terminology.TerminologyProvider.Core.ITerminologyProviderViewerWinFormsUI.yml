### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI
  id: ITerminologyProviderViewerWinFormsUI
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.AddAndEditTerm(Sdl.Terminology.TerminologyProvider.Core.IEntry,System.String,System.String)
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.AddTerm(System.String,System.String)
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Control
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.EditTerm(Sdl.Terminology.TerminologyProvider.Core.IEntry)
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Initialize(Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider,System.Globalization.CultureInfo,System.Globalization.CultureInfo)
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Initialized
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.JumpToTerm(Sdl.Terminology.TerminologyProvider.Core.IEntry)
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Release
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SelectedTerm
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SelectedTermChanged
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SupportsTerminologyProviderUri(System.Uri)
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.TermChanged
  langs:
  - csharp
  - vb
  name: ITerminologyProviderViewerWinFormsUI
  nameWithType: ITerminologyProviderViewerWinFormsUI
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI
  type: Interface
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nThis interface should be implemented by terminology provider implementers that are able to provide more information about a term when required in the Trados Studio Editor View\nImplementation of this interface should be marked up with the <xref href=\"Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderViewerWinFormsUIAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute for registration it with the plug-in manager.\n"
  syntax:
    content: public interface ITerminologyProviderViewerWinFormsUI
    content.vb: Public Interface ITerminologyProviderViewerWinFormsUI
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SupportsTerminologyProviderUri(System.Uri)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SupportsTerminologyProviderUri(System.Uri)
  id: SupportsTerminologyProviderUri(System.Uri)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI
  langs:
  - csharp
  - vb
  name: SupportsTerminologyProviderUri(Uri)
  nameWithType: ITerminologyProviderViewerWinFormsUI.SupportsTerminologyProviderUri(Uri)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SupportsTerminologyProviderUri(System.Uri)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nReturns true if this component supports the specified terminology provider URI.\n"
  syntax:
    content: bool SupportsTerminologyProviderUri(Uri terminologyProviderUri)
    parameters:
    - id: terminologyProviderUri
      type: System.Uri
      description: The uri.
    return:
      type: System.Boolean
      description: True if this component supports the specified terminology provider URI.
    content.vb: Function SupportsTerminologyProviderUri(terminologyProviderUri As Uri) As Boolean
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SupportsTerminologyProviderUri*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.JumpToTerm(Sdl.Terminology.TerminologyProvider.Core.IEntry)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.JumpToTerm(Sdl.Terminology.TerminologyProvider.Core.IEntry)
  id: JumpToTerm(Sdl.Terminology.TerminologyProvider.Core.IEntry)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI
  langs:
  - csharp
  - vb
  name: JumpToTerm(IEntry)
  nameWithType: ITerminologyProviderViewerWinFormsUI.JumpToTerm(IEntry)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.JumpToTerm(Sdl.Terminology.TerminologyProvider.Core.IEntry)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nThe user requested to see more information about an entry. Usually triggered by the &quot;View term details&quot; action in the Term Recognition window from the Editor View.\n"
  syntax:
    content: void JumpToTerm(IEntry entry)
    parameters:
    - id: entry
      type: Sdl.Terminology.TerminologyProvider.Core.IEntry
      description: The entry which should be displayed in the Termbase Viewer window
    content.vb: Sub JumpToTerm(entry As IEntry)
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.JumpToTerm*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.AddTerm(System.String,System.String)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.AddTerm(System.String,System.String)
  id: AddTerm(System.String,System.String)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI
  langs:
  - csharp
  - vb
  name: AddTerm(String, String)
  nameWithType: ITerminologyProviderViewerWinFormsUI.AddTerm(String, String)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.AddTerm(System.String, System.String)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nThe user requested to add a new entry into the terminology provider.\n"
  syntax:
    content: void AddTerm(string source, string target)
    parameters:
    - id: source
      type: System.String
      description: The text for the source term.
    - id: target
      type: System.String
      description: The text for the target term.
    content.vb: Sub AddTerm(source As String, target As String)
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.AddTerm*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.EditTerm(Sdl.Terminology.TerminologyProvider.Core.IEntry)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.EditTerm(Sdl.Terminology.TerminologyProvider.Core.IEntry)
  id: EditTerm(Sdl.Terminology.TerminologyProvider.Core.IEntry)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI
  langs:
  - csharp
  - vb
  name: EditTerm(IEntry)
  nameWithType: ITerminologyProviderViewerWinFormsUI.EditTerm(IEntry)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.EditTerm(Sdl.Terminology.TerminologyProvider.Core.IEntry)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nThe user triggered an editing on the specified term.\n"
  syntax:
    content: void EditTerm(IEntry term)
    parameters:
    - id: term
      type: Sdl.Terminology.TerminologyProvider.Core.IEntry
      description: The term to edit.
    content.vb: Sub EditTerm(term As IEntry)
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.EditTerm*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.AddAndEditTerm(Sdl.Terminology.TerminologyProvider.Core.IEntry,System.String,System.String)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.AddAndEditTerm(Sdl.Terminology.TerminologyProvider.Core.IEntry,System.String,System.String)
  id: AddAndEditTerm(Sdl.Terminology.TerminologyProvider.Core.IEntry,System.String,System.String)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI
  langs:
  - csharp
  - vb
  name: AddAndEditTerm(IEntry, String, String)
  nameWithType: ITerminologyProviderViewerWinFormsUI.AddAndEditTerm(IEntry, String, String)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.AddAndEditTerm(Sdl.Terminology.TerminologyProvider.Core.IEntry, System.String, System.String)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nThe user triggered an add on an already existing term.\n"
  syntax:
    content: void AddAndEditTerm(IEntry term, string source, string target)
    parameters:
    - id: term
      type: Sdl.Terminology.TerminologyProvider.Core.IEntry
      description: The term with the same source that already exists.
    - id: source
      type: System.String
      description: The new text for the source.
    - id: target
      type: System.String
      description: The text for the target.
    content.vb: Sub AddAndEditTerm(term As IEntry, source As String, target As String)
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.AddAndEditTerm*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Initialize(Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider,System.Globalization.CultureInfo,System.Globalization.CultureInfo)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Initialize(Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider,System.Globalization.CultureInfo,System.Globalization.CultureInfo)
  id: Initialize(Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider,System.Globalization.CultureInfo,System.Globalization.CultureInfo)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI
  langs:
  - csharp
  - vb
  name: Initialize(ITerminologyProvider, CultureInfo, CultureInfo)
  nameWithType: ITerminologyProviderViewerWinFormsUI.Initialize(ITerminologyProvider, CultureInfo, CultureInfo)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Initialize(Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider, System.Globalization.CultureInfo, System.Globalization.CultureInfo)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nCalled when the terminology provider viewer is initialized.\n"
  syntax:
    content: void Initialize(ITerminologyProvider terminologyProvider, CultureInfo source, CultureInfo target)
    parameters:
    - id: terminologyProvider
      type: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
      description: The terminology provider to be used in the current viewer instance.
    - id: source
      type: System.Globalization.CultureInfo
      description: The source language for the current document language direction.
    - id: target
      type: System.Globalization.CultureInfo
      description: The target language for the current document language direction.
    content.vb: Sub Initialize(terminologyProvider As ITerminologyProvider, source As CultureInfo, target As CultureInfo)
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Initialize*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Release
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Release
  id: Release
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI
  langs:
  - csharp
  - vb
  name: Release()
  nameWithType: ITerminologyProviderViewerWinFormsUI.Release()
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Release()
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nCalled when the terminology provider viewer is not needed anymore.\n"
  syntax:
    content: void Release()
    content.vb: Sub Release
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Release*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Control
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Control
  id: Control
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI
  langs:
  - csharp
  - vb
  name: Control
  nameWithType: ITerminologyProviderViewerWinFormsUI.Control
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Control
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nThe control to be displayed in the Termbase Viewer window in the Editor View\n"
  syntax:
    content: Control Control { get; }
    parameters: []
    return:
      type: System.Windows.Forms.Control
    content.vb: ReadOnly Property Control As Control
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Control*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Initialized
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Initialized
  id: Initialized
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI
  langs:
  - csharp
  - vb
  name: Initialized
  nameWithType: ITerminologyProviderViewerWinFormsUI.Initialized
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Initialized
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nDetermines whether the viewer was initialized.\n"
  syntax:
    content: bool Initialized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Initialized As Boolean
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Initialized*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SelectedTerm
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SelectedTerm
  id: SelectedTerm
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI
  langs:
  - csharp
  - vb
  name: SelectedTerm
  nameWithType: ITerminologyProviderViewerWinFormsUI.SelectedTerm
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SelectedTerm
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nGets or sets the term that is currently active in the Termbase Viewer window\n"
  syntax:
    content: IEntry SelectedTerm { get; set; }
    parameters: []
    return:
      type: Sdl.Terminology.TerminologyProvider.Core.IEntry
    content.vb: Property SelectedTerm As IEntry
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SelectedTerm*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.TermChanged
  commentId: E:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.TermChanged
  id: TermChanged
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI
  langs:
  - csharp
  - vb
  name: TermChanged
  nameWithType: ITerminologyProviderViewerWinFormsUI.TermChanged
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.TermChanged
  type: Event
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nTriggered when something has in the terminology provider. Usually used when adding, editing or removing a term.\nThis event will trigger a new term recognition for the active segment.\n"
  syntax:
    content: event EventHandler TermChanged
    return:
      type: System.EventHandler
    content.vb: Event TermChanged As EventHandler
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SelectedTermChanged
  commentId: E:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SelectedTermChanged
  id: SelectedTermChanged
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI
  langs:
  - csharp
  - vb
  name: SelectedTermChanged
  nameWithType: ITerminologyProviderViewerWinFormsUI.SelectedTermChanged
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SelectedTermChanged
  type: Event
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nTriggered when the active term has changed, when triggered it will save the specified term on the active document.\n"
  syntax:
    content: event EventHandler<EntryEventArgs> SelectedTermChanged
    return:
      type: System.EventHandler{Sdl.Terminology.TerminologyProvider.Core.EntryEventArgs}
    content.vb: Event SelectedTermChanged As EventHandler(Of EntryEventArgs)
references:
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SupportsTerminologyProviderUri*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SupportsTerminologyProviderUri
  isExternal: true
  name: SupportsTerminologyProviderUri
  nameWithType: ITerminologyProviderViewerWinFormsUI.SupportsTerminologyProviderUri
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SupportsTerminologyProviderUri
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.JumpToTerm*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.JumpToTerm
  isExternal: true
  name: JumpToTerm
  nameWithType: ITerminologyProviderViewerWinFormsUI.JumpToTerm
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.JumpToTerm
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntry
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.IEntry
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: IEntry
  nameWithType: IEntry
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntry
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.AddTerm*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.AddTerm
  isExternal: true
  name: AddTerm
  nameWithType: ITerminologyProviderViewerWinFormsUI.AddTerm
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.AddTerm
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.EditTerm*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.EditTerm
  isExternal: true
  name: EditTerm
  nameWithType: ITerminologyProviderViewerWinFormsUI.EditTerm
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.EditTerm
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.AddAndEditTerm*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.AddAndEditTerm
  isExternal: true
  name: AddAndEditTerm
  nameWithType: ITerminologyProviderViewerWinFormsUI.AddAndEditTerm
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.AddAndEditTerm
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Initialize*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Initialize
  isExternal: true
  name: Initialize
  nameWithType: ITerminologyProviderViewerWinFormsUI.Initialize
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Initialize
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: ITerminologyProvider
  nameWithType: ITerminologyProvider
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Release*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Release
  isExternal: true
  name: Release
  nameWithType: ITerminologyProviderViewerWinFormsUI.Release
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Release
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Control*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Control
  isExternal: true
  name: Control
  nameWithType: ITerminologyProviderViewerWinFormsUI.Control
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Control
- uid: System.Windows.Forms.Control
  commentId: '!:System.Windows.Forms.Control'
  isExternal: true
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Initialized*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Initialized
  isExternal: true
  name: Initialized
  nameWithType: ITerminologyProviderViewerWinFormsUI.Initialized
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.Initialized
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SelectedTerm*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SelectedTerm
  isExternal: true
  name: SelectedTerm
  nameWithType: ITerminologyProviderViewerWinFormsUI.SelectedTerm
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderViewerWinFormsUI.SelectedTerm
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.EventHandler{Sdl.Terminology.TerminologyProvider.Core.EntryEventArgs}
  commentId: T:System.EventHandler{Sdl.Terminology.TerminologyProvider.Core.EntryEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<EntryEventArgs>
  nameWithType: EventHandler<EntryEventArgs>
  fullName: System.EventHandler<Sdl.Terminology.TerminologyProvider.Core.EntryEventArgs>
  nameWithType.vb: EventHandler(Of EntryEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.Terminology.TerminologyProvider.Core.EntryEventArgs)
  name.vb: EventHandler(Of EntryEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.EntryEventArgs
    name: EntryEventArgs
    nameWithType: EntryEventArgs
    fullName: Sdl.Terminology.TerminologyProvider.Core.EntryEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Terminology.TerminologyProvider.Core.EntryEventArgs
    name: EntryEventArgs
    nameWithType: EntryEventArgs
    fullName: Sdl.Terminology.TerminologyProvider.Core.EntryEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
