### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.Entry
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.Entry
  id: Entry
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.Entry.#ctor
  - Sdl.Terminology.TerminologyProvider.Core.Entry.Fields
  - Sdl.Terminology.TerminologyProvider.Core.Entry.Id
  - Sdl.Terminology.TerminologyProvider.Core.Entry.Languages
  - Sdl.Terminology.TerminologyProvider.Core.Entry.Transactions
  langs:
  - csharp
  - vb
  name: Entry
  nameWithType: Entry
  fullName: Sdl.Terminology.TerminologyProvider.Core.Entry
  type: Class
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nThe terminology provider entry\n"
  syntax:
    content: public class Entry
    content.vb: Public Class Entry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Terminology.TerminologyProvider.Core.Entry.#ctor
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.Entry.#ctor
  id: '#ctor'
  parent: Sdl.Terminology.TerminologyProvider.Core.Entry
  langs:
  - csharp
  - vb
  name: Entry()
  nameWithType: Entry.Entry()
  fullName: Sdl.Terminology.TerminologyProvider.Core.Entry.Entry()
  type: Constructor
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nDefault constructor\n"
  syntax:
    content: public Entry()
    content.vb: Public Sub New
  overload: Sdl.Terminology.TerminologyProvider.Core.Entry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.Entry.Id
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.Entry.Id
  id: Id
  parent: Sdl.Terminology.TerminologyProvider.Core.Entry
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Entry.Id
  fullName: Sdl.Terminology.TerminologyProvider.Core.Entry.Id
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nThe entry id that identify it in termbase\n"
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: Sdl.Terminology.TerminologyProvider.Core.Entry.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.Entry.Fields
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.Entry.Fields
  id: Fields
  parent: Sdl.Terminology.TerminologyProvider.Core.Entry
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: Entry.Fields
  fullName: Sdl.Terminology.TerminologyProvider.Core.Entry.Fields
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nEntry level fields\n"
  syntax:
    content: public IList<EntryField> Fields { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.EntryField}
    content.vb: Public Property Fields As IList(Of EntryField)
  overload: Sdl.Terminology.TerminologyProvider.Core.Entry.Fields*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.Entry.Transactions
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.Entry.Transactions
  id: Transactions
  parent: Sdl.Terminology.TerminologyProvider.Core.Entry
  langs:
  - csharp
  - vb
  name: Transactions
  nameWithType: Entry.Transactions
  fullName: Sdl.Terminology.TerminologyProvider.Core.Entry.Transactions
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nThe transactions (creation/modification) for this entry\n"
  syntax:
    content: public IList<EntryTransaction> Transactions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.EntryTransaction}
    content.vb: Public Property Transactions As IList(Of EntryTransaction)
  overload: Sdl.Terminology.TerminologyProvider.Core.Entry.Transactions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.Entry.Languages
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.Entry.Languages
  id: Languages
  parent: Sdl.Terminology.TerminologyProvider.Core.Entry
  langs:
  - csharp
  - vb
  name: Languages
  nameWithType: Entry.Languages
  fullName: Sdl.Terminology.TerminologyProvider.Core.Entry.Languages
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nThe Languages for which entries exist\n"
  syntax:
    content: public IList<EntryLanguage> Languages { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.EntryLanguage}
    content.vb: Public Property Languages As IList(Of EntryLanguage)
  overload: Sdl.Terminology.TerminologyProvider.Core.Entry.Languages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Terminology.TerminologyProvider.Core.Entry.#ctor*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.Entry.#ctor
  isExternal: true
  name: Entry
  nameWithType: Entry.Entry
  fullName: Sdl.Terminology.TerminologyProvider.Core.Entry.Entry
- uid: Sdl.Terminology.TerminologyProvider.Core.Entry.Id*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.Entry.Id
  isExternal: true
  name: Id
  nameWithType: Entry.Id
  fullName: Sdl.Terminology.TerminologyProvider.Core.Entry.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.Terminology.TerminologyProvider.Core.Entry.Fields*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.Entry.Fields
  isExternal: true
  name: Fields
  nameWithType: Entry.Fields
  fullName: Sdl.Terminology.TerminologyProvider.Core.Entry.Fields
- uid: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.EntryField}
  commentId: T:System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.EntryField}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<EntryField>
  nameWithType: IList<EntryField>
  fullName: System.Collections.Generic.IList<Sdl.Terminology.TerminologyProvider.Core.EntryField>
  nameWithType.vb: IList(Of EntryField)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.Terminology.TerminologyProvider.Core.EntryField)
  name.vb: IList(Of EntryField)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.EntryField
    name: EntryField
    nameWithType: EntryField
    fullName: Sdl.Terminology.TerminologyProvider.Core.EntryField
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Terminology.TerminologyProvider.Core.EntryField
    name: EntryField
    nameWithType: EntryField
    fullName: Sdl.Terminology.TerminologyProvider.Core.EntryField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.Terminology.TerminologyProvider.Core.Entry.Transactions*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.Entry.Transactions
  isExternal: true
  name: Transactions
  nameWithType: Entry.Transactions
  fullName: Sdl.Terminology.TerminologyProvider.Core.Entry.Transactions
- uid: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.EntryTransaction}
  commentId: T:System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.EntryTransaction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<EntryTransaction>
  nameWithType: IList<EntryTransaction>
  fullName: System.Collections.Generic.IList<Sdl.Terminology.TerminologyProvider.Core.EntryTransaction>
  nameWithType.vb: IList(Of EntryTransaction)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.Terminology.TerminologyProvider.Core.EntryTransaction)
  name.vb: IList(Of EntryTransaction)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.EntryTransaction
    name: EntryTransaction
    nameWithType: EntryTransaction
    fullName: Sdl.Terminology.TerminologyProvider.Core.EntryTransaction
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Terminology.TerminologyProvider.Core.EntryTransaction
    name: EntryTransaction
    nameWithType: EntryTransaction
    fullName: Sdl.Terminology.TerminologyProvider.Core.EntryTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Terminology.TerminologyProvider.Core.Entry.Languages*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.Entry.Languages
  isExternal: true
  name: Languages
  nameWithType: Entry.Languages
  fullName: Sdl.Terminology.TerminologyProvider.Core.Entry.Languages
- uid: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.EntryLanguage}
  commentId: T:System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.EntryLanguage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<EntryLanguage>
  nameWithType: IList<EntryLanguage>
  fullName: System.Collections.Generic.IList<Sdl.Terminology.TerminologyProvider.Core.EntryLanguage>
  nameWithType.vb: IList(Of EntryLanguage)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.Terminology.TerminologyProvider.Core.EntryLanguage)
  name.vb: IList(Of EntryLanguage)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.EntryLanguage
    name: EntryLanguage
    nameWithType: EntryLanguage
    fullName: Sdl.Terminology.TerminologyProvider.Core.EntryLanguage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Terminology.TerminologyProvider.Core.EntryLanguage
    name: EntryLanguage
    nameWithType: EntryLanguage
    fullName: Sdl.Terminology.TerminologyProvider.Core.EntryLanguage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
