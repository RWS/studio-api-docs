### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport
  id: ITerminologyExport
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport.Export(Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType,System.String)
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport.Export(Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  langs:
  - csharp
  - vb
  name: ITerminologyExport
  nameWithType: ITerminologyExport
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport
  type: Interface
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: This interface should be implemented by terminology provider implementers in order to provide export functionality
  example: []
  syntax:
    content: public interface ITerminologyExport
    content.vb: Public Interface ITerminologyExport
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport.Export(Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType,System.String)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport.Export(Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType,System.String)
  id: Export(Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType,System.String)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport
  langs:
  - csharp
  - vb
  name: Export(TerminologyExportType, string)
  nameWithType: ITerminologyExport.Export(TerminologyExportType, string)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport.Export(Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType, string)
  type: Method
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Performs a termbase export to a specific format
  example: []
  syntax:
    content: void Export(TerminologyExportType exportFormatType, string path)
    parameters:
    - id: exportFormatType
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType
      description: The export format type
    - id: path
      type: System.String
      description: The path where the exported termbase will be saved
    content.vb: Sub Export(exportFormatType As TerminologyExportType, path As String)
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport.Export*
  nameWithType.vb: ITerminologyExport.Export(TerminologyExportType, String)
  fullName.vb: Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport.Export(Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType, String)
  name.vb: Export(TerminologyExportType, String)
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport.Export(Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport.Export(Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: Export(Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport
  langs:
  - csharp
  - vb
  name: Export(TerminologyExportType, string, Dictionary<string, string>)
  nameWithType: ITerminologyExport.Export(TerminologyExportType, string, Dictionary<string, string>)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport.Export(Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType, string, System.Collections.Generic.Dictionary<string, string>)
  type: Method
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Performs a termbase export to a specific format
  remarks: >-
    Use the export properties to pass additional parameters to the export process.

    E.g. add the "xdxFile" property for a MultiTerm export definition file
  example: []
  syntax:
    content: void Export(TerminologyExportType exportFormatType, string path, Dictionary<string, string> exportProperties)
    parameters:
    - id: exportFormatType
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType
      description: The export format type
    - id: path
      type: System.String
      description: The path where the exported termbase will be saved
    - id: exportProperties
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: The import properties
    content.vb: Sub Export(exportFormatType As TerminologyExportType, path As String, exportProperties As Dictionary(Of String, String))
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport.Export*
  nameWithType.vb: ITerminologyExport.Export(TerminologyExportType, String, Dictionary(Of String, String))
  fullName.vb: Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport.Export(Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType, String, System.Collections.Generic.Dictionary(Of String, String))
  name.vb: Export(TerminologyExportType, String, Dictionary(Of String, String))
references:
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  href: Sdl.html
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Terminology
    name: Terminology
    isExternal: true
    href: Sdl.Terminology.html
  - name: .
  - uid: Sdl.Terminology.TerminologyProvider
    name: TerminologyProvider
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.html
  - name: .
  - uid: Sdl.Terminology.TerminologyProvider.Core
    name: Core
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Terminology
    name: Terminology
    isExternal: true
    href: Sdl.Terminology.html
  - name: .
  - uid: Sdl.Terminology.TerminologyProvider
    name: TerminologyProvider
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.html
  - name: .
  - uid: Sdl.Terminology.TerminologyProvider.Core
    name: Core
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.html
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport.Export*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport.Export
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyExport_Export_Sdl_Terminology_TerminologyProvider_Core_TerminologyExportType_System_String_
  name: Export
  nameWithType: ITerminologyExport.Export
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyExport.Export
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType.html
  name: TerminologyExportType
  nameWithType: TerminologyExportType
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyExportType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, string>
  nameWithType: Dictionary<string, string>
  fullName: System.Collections.Generic.Dictionary<string, string>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
