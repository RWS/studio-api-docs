### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage
  id: IEntryLanguage
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.Fields
  - Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.ParentEntry
  - Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.Terms
  langs:
  - csharp
  - vb
  name: IEntryLanguage
  nameWithType: IEntryLanguage
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage
  type: Interface
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: 'public interface IEntryLanguage : ILanguage'
    content.vb: >-
      Public Interface IEntryLanguage
          Inherits ILanguage
  inheritedMembers:
  - Sdl.Terminology.TerminologyProvider.Core.ILanguage.Name
  - Sdl.Terminology.TerminologyProvider.Core.ILanguage.Locale
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.ParentEntry
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.ParentEntry
  id: ParentEntry
  parent: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage
  langs:
  - csharp
  - vb
  name: ParentEntry
  nameWithType: IEntryLanguage.ParentEntry
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.ParentEntry
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: IEntry ParentEntry { get; }
    parameters: []
    return:
      type: Sdl.Terminology.TerminologyProvider.Core.IEntry
    content.vb: ReadOnly Property ParentEntry As IEntry
  overload: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.ParentEntry*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.Fields
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.Fields
  id: Fields
  parent: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: IEntryLanguage.Fields
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.Fields
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: IList<IEntryField> Fields { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.IEntryField}
    content.vb: ReadOnly Property Fields As IList(Of IEntryField)
  overload: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.Fields*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.Terms
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.Terms
  id: Terms
  parent: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage
  langs:
  - csharp
  - vb
  name: Terms
  nameWithType: IEntryLanguage.Terms
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.Terms
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: IList<IEntryTerm> Terms { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.IEntryTerm}
    content.vb: ReadOnly Property Terms As IList(Of IEntryTerm)
  overload: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.Terms*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
- uid: Sdl.Terminology.TerminologyProvider.Core.ILanguage.Name
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ILanguage.Name
  parent: Sdl.Terminology.TerminologyProvider.Core.ILanguage
  isExternal: true
  name: Name
  nameWithType: ILanguage.Name
  fullName: Sdl.Terminology.TerminologyProvider.Core.ILanguage.Name
- uid: Sdl.Terminology.TerminologyProvider.Core.ILanguage.Locale
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.ILanguage.Locale
  parent: Sdl.Terminology.TerminologyProvider.Core.ILanguage
  isExternal: true
  name: Locale
  nameWithType: ILanguage.Locale
  fullName: Sdl.Terminology.TerminologyProvider.Core.ILanguage.Locale
- uid: Sdl.Terminology.TerminologyProvider.Core.ILanguage
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.ILanguage
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: ILanguage
  nameWithType: ILanguage
  fullName: Sdl.Terminology.TerminologyProvider.Core.ILanguage
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.ParentEntry*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.ParentEntry
  isExternal: true
  name: ParentEntry
  nameWithType: IEntryLanguage.ParentEntry
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.ParentEntry
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntry
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.IEntry
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: IEntry
  nameWithType: IEntry
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntry
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.Fields*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.Fields
  isExternal: true
  name: Fields
  nameWithType: IEntryLanguage.Fields
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.Fields
- uid: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.IEntryField}
  commentId: T:System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.IEntryField}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IEntryField>
  nameWithType: IList<IEntryField>
  fullName: System.Collections.Generic.IList<Sdl.Terminology.TerminologyProvider.Core.IEntryField>
  nameWithType.vb: IList(Of IEntryField)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.Terminology.TerminologyProvider.Core.IEntryField)
  name.vb: IList(Of IEntryField)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.IEntryField
    name: IEntryField
    nameWithType: IEntryField
    fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryField
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Terminology.TerminologyProvider.Core.IEntryField
    name: IEntryField
    nameWithType: IEntryField
    fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.Terms*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.Terms
  isExternal: true
  name: Terms
  nameWithType: IEntryLanguage.Terms
  fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryLanguage.Terms
- uid: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.IEntryTerm}
  commentId: T:System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.IEntryTerm}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IEntryTerm>
  nameWithType: IList<IEntryTerm>
  fullName: System.Collections.Generic.IList<Sdl.Terminology.TerminologyProvider.Core.IEntryTerm>
  nameWithType.vb: IList(Of IEntryTerm)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.Terminology.TerminologyProvider.Core.IEntryTerm)
  name.vb: IList(Of IEntryTerm)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm
    name: IEntryTerm
    nameWithType: IEntryTerm
    fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm
    name: IEntryTerm
    nameWithType: IEntryTerm
    fullName: Sdl.Terminology.TerminologyProvider.Core.IEntryTerm
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
