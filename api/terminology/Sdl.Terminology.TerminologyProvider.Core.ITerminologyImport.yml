### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport
  id: ITerminologyImport
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport.Import(Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.String})
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport.Import(Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType,System.String,System.String)
  langs:
  - csharp
  - vb
  name: ITerminologyImport
  nameWithType: ITerminologyImport
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport
  type: Interface
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: This interface should be implemented by terminology providers in order to provide import functionality
  example: []
  syntax:
    content: public interface ITerminologyImport
    content.vb: Public Interface ITerminologyImport
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport.Import(Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType,System.String,System.String)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport.Import(Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType,System.String,System.String)
  id: Import(Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType,System.String,System.String)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport
  langs:
  - csharp
  - vb
  name: Import(TerminologyImportType, string, string)
  nameWithType: ITerminologyImport.Import(TerminologyImportType, string, string)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport.Import(Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType, string, string)
  type: Method
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Performs a termbase import
  example: []
  syntax:
    content: void Import(TerminologyImportType importType, string importFile, string termbaseDefinition = null)
    parameters:
    - id: importType
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType
      description: The import type
    - id: importFile
      type: System.String
      description: The path of the import file
    - id: termbaseDefinition
      type: System.String
      description: The path of the termbase definition file
    content.vb: Sub Import(importType As TerminologyImportType, importFile As String, termbaseDefinition As String = Nothing)
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport.Import*
  nameWithType.vb: ITerminologyImport.Import(TerminologyImportType, String, String)
  fullName.vb: Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport.Import(Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType, String, String)
  name.vb: Import(TerminologyImportType, String, String)
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport.Import(Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport.Import(Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.String})
  id: Import(Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport
  langs:
  - csharp
  - vb
  name: Import(TerminologyImportType, List<string>, Dictionary<string, string>)
  nameWithType: ITerminologyImport.Import(TerminologyImportType, List<string>, Dictionary<string, string>)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport.Import(Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType, System.Collections.Generic.List<string>, System.Collections.Generic.Dictionary<string, string>)
  type: Method
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Performs a termbase import
  remarks: >-
    Use the import properties to pass additional parameters to the import process.

    E.g. add the "xdtFile" property for a MultiTerm termbase definition file
  example: []
  syntax:
    content: void Import(TerminologyImportType importType, List<string> importFiles, Dictionary<string, string> importProperties = null)
    parameters:
    - id: importType
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType
      description: The import type
    - id: importFiles
      type: System.Collections.Generic.List{System.String}
      description: The path of the import files
    - id: importProperties
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: The import properties
    content.vb: Sub Import(importType As TerminologyImportType, importFiles As List(Of String), importProperties As Dictionary(Of String, String) = Nothing)
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport.Import*
  nameWithType.vb: ITerminologyImport.Import(TerminologyImportType, List(Of String), Dictionary(Of String, String))
  fullName.vb: Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport.Import(Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType, System.Collections.Generic.List(Of String), System.Collections.Generic.Dictionary(Of String, String))
  name.vb: Import(TerminologyImportType, List(Of String), Dictionary(Of String, String))
references:
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  href: Sdl.html
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Terminology
    name: Terminology
    isExternal: true
    href: Sdl.Terminology.html
  - name: .
  - uid: Sdl.Terminology.TerminologyProvider
    name: TerminologyProvider
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.html
  - name: .
  - uid: Sdl.Terminology.TerminologyProvider.Core
    name: Core
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Terminology
    name: Terminology
    isExternal: true
    href: Sdl.Terminology.html
  - name: .
  - uid: Sdl.Terminology.TerminologyProvider
    name: TerminologyProvider
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.html
  - name: .
  - uid: Sdl.Terminology.TerminologyProvider.Core
    name: Core
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.html
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport.Import*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport.Import
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport.html#Sdl_Terminology_TerminologyProvider_Core_ITerminologyImport_Import_Sdl_Terminology_TerminologyProvider_Core_TerminologyImportType_System_String_System_String_
  name: Import
  nameWithType: ITerminologyImport.Import
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyImport.Import
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType.html
  name: TerminologyImportType
  nameWithType: TerminologyImportType
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyImportType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, string>
  nameWithType: Dictionary<string, string>
  fullName: System.Collections.Generic.Dictionary<string, string>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
