### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  id: TerminologyUserCredentials
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.#ctor(System.String,Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoData,Sdl.Terminology.TerminologyProvider.Core.TerminologyUserManagerTokenType)
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.#ctor(System.String,System.String,Sdl.Terminology.TerminologyProvider.Core.TerminologyUserManagerTokenType)
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Create(System.String)
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials)
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials,Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials)
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals(System.Object)
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.GetHashCode
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Password
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoCredentials
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.UserName
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.UserType
  langs:
  - csharp
  - vb
  name: TerminologyUserCredentials
  nameWithType: TerminologyUserCredentials
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  type: Class
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: 'public sealed class TerminologyUserCredentials : IEquatable<TerminologyUserCredentials>'
    content.vb: >-
      Public NotInheritable Class TerminologyUserCredentials
          Implements IEquatable(Of TerminologyUserCredentials)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.#ctor(System.String,System.String,Sdl.Terminology.TerminologyProvider.Core.TerminologyUserManagerTokenType)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.#ctor(System.String,System.String,Sdl.Terminology.TerminologyProvider.Core.TerminologyUserManagerTokenType)
  id: '#ctor(System.String,System.String,Sdl.Terminology.TerminologyProvider.Core.TerminologyUserManagerTokenType)'
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  langs:
  - csharp
  - vb
  name: TerminologyUserCredentials(String, String, TerminologyUserManagerTokenType)
  nameWithType: TerminologyUserCredentials.TerminologyUserCredentials(String, String, TerminologyUserManagerTokenType)
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.TerminologyUserCredentials(System.String, System.String, Sdl.Terminology.TerminologyProvider.Core.TerminologyUserManagerTokenType)
  type: Constructor
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public TerminologyUserCredentials(string userName, string password, TerminologyUserManagerTokenType userType)
    parameters:
    - id: userName
      type: System.String
    - id: password
      type: System.String
    - id: userType
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserManagerTokenType
    content.vb: Public Sub New(userName As String, password As String, userType As TerminologyUserManagerTokenType)
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.#ctor(System.String,Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoData,Sdl.Terminology.TerminologyProvider.Core.TerminologyUserManagerTokenType)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.#ctor(System.String,Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoData,Sdl.Terminology.TerminologyProvider.Core.TerminologyUserManagerTokenType)
  id: '#ctor(System.String,Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoData,Sdl.Terminology.TerminologyProvider.Core.TerminologyUserManagerTokenType)'
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  langs:
  - csharp
  - vb
  name: TerminologyUserCredentials(String, TerminologyUserCredentials.SsoData, TerminologyUserManagerTokenType)
  nameWithType: TerminologyUserCredentials.TerminologyUserCredentials(String, TerminologyUserCredentials.SsoData, TerminologyUserManagerTokenType)
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.TerminologyUserCredentials(System.String, Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoData, Sdl.Terminology.TerminologyProvider.Core.TerminologyUserManagerTokenType)
  type: Constructor
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public TerminologyUserCredentials(string userName, TerminologyUserCredentials.SsoData ssoCredentials, TerminologyUserManagerTokenType userType)
    parameters:
    - id: userName
      type: System.String
    - id: ssoCredentials
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoData
    - id: userType
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserManagerTokenType
    content.vb: Public Sub New(userName As String, ssoCredentials As TerminologyUserCredentials.SsoData, userType As TerminologyUserManagerTokenType)
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Create(System.String)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Create(System.String)
  id: Create(System.String)
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  langs:
  - csharp
  - vb
  name: Create(String)
  nameWithType: TerminologyUserCredentials.Create(String)
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Create(System.String)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public static TerminologyUserCredentials Create(string credentialString)
    parameters:
    - id: credentialString
      type: System.String
    return:
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
    content.vb: Public Shared Function Create(credentialString As String) As TerminologyUserCredentials
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials,Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials,Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials)
  id: Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials,Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials)
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  langs:
  - csharp
  - vb
  name: Equals(TerminologyUserCredentials, TerminologyUserCredentials)
  nameWithType: TerminologyUserCredentials.Equals(TerminologyUserCredentials, TerminologyUserCredentials)
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials, Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public static bool Equals(TerminologyUserCredentials left, TerminologyUserCredentials right)
    parameters:
    - id: left
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
    - id: right
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
    return:
      type: System.Boolean
    content.vb: Public Shared Function Equals(left As TerminologyUserCredentials, right As TerminologyUserCredentials) As Boolean
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals(System.Object)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: TerminologyUserCredentials.Equals(Object)
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals(System.Object)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.GetHashCode
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.GetHashCode
  id: GetHashCode
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TerminologyUserCredentials.GetHashCode()
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.GetHashCode()
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials)
  id: Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials)
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  langs:
  - csharp
  - vb
  name: Equals(TerminologyUserCredentials)
  nameWithType: TerminologyUserCredentials.Equals(TerminologyUserCredentials)
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public bool Equals(TerminologyUserCredentials other)
    parameters:
    - id: other
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As TerminologyUserCredentials) As Boolean
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals*
  implements:
  - System.IEquatable{Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials}.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.UserName
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.UserName
  id: UserName
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: TerminologyUserCredentials.UserName
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.UserName
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserName As String
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.UserName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Password
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Password
  id: Password
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: TerminologyUserCredentials.Password
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Password
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Password As String
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Password*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoCredentials
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoCredentials
  id: SsoCredentials
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  langs:
  - csharp
  - vb
  name: SsoCredentials
  nameWithType: TerminologyUserCredentials.SsoCredentials
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoCredentials
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public TerminologyUserCredentials.SsoData SsoCredentials { get; set; }
    parameters: []
    return:
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoData
    content.vb: Public Property SsoCredentials As TerminologyUserCredentials.SsoData
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoCredentials*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.UserType
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.UserType
  id: UserType
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  langs:
  - csharp
  - vb
  name: UserType
  nameWithType: TerminologyUserCredentials.UserType
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.UserType
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public TerminologyUserManagerTokenType UserType { get; set; }
    parameters: []
    return:
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserManagerTokenType
    content.vb: Public Property UserType As TerminologyUserManagerTokenType
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.UserType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials}
  commentId: T:System.IEquatable{Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<TerminologyUserCredentials>
  nameWithType: IEquatable<TerminologyUserCredentials>
  fullName: System.IEquatable<Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials>
  nameWithType.vb: IEquatable(Of TerminologyUserCredentials)
  fullName.vb: System.IEquatable(Of Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials)
  name.vb: IEquatable(Of TerminologyUserCredentials)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
    name: TerminologyUserCredentials
    nameWithType: TerminologyUserCredentials
    fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
    name: TerminologyUserCredentials
    nameWithType: TerminologyUserCredentials
    fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.#ctor*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.#ctor
  isExternal: true
  name: TerminologyUserCredentials
  nameWithType: TerminologyUserCredentials.TerminologyUserCredentials
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.TerminologyUserCredentials
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserManagerTokenType
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserManagerTokenType
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: TerminologyUserManagerTokenType
  nameWithType: TerminologyUserManagerTokenType
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserManagerTokenType
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoData
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoData
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: TerminologyUserCredentials.SsoData
  nameWithType: TerminologyUserCredentials.SsoData
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoData
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Create*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Create
  isExternal: true
  name: Create
  nameWithType: TerminologyUserCredentials.Create
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Create
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: TerminologyUserCredentials
  nameWithType: TerminologyUserCredentials
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals
  isExternal: true
  name: Equals
  nameWithType: TerminologyUserCredentials.Equals
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.GetHashCode*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: TerminologyUserCredentials.GetHashCode
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IEquatable{Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials}.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials)
  commentId: M:System.IEquatable{Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials}.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials)
  parent: System.IEquatable{Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(TerminologyUserCredentials)
  nameWithType: IEquatable<TerminologyUserCredentials>.Equals(TerminologyUserCredentials)
  fullName: System.IEquatable<Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials>.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials)
  nameWithType.vb: IEquatable(Of TerminologyUserCredentials).Equals(TerminologyUserCredentials)
  fullName.vb: System.IEquatable(Of Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials).Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<TerminologyUserCredentials>.Equals
    fullName: System.IEquatable<Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
    name: TerminologyUserCredentials
    nameWithType: TerminologyUserCredentials
    fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of TerminologyUserCredentials).Equals
    fullName: System.IEquatable(Of Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
    name: TerminologyUserCredentials
    nameWithType: TerminologyUserCredentials
    fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.UserName*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.UserName
  isExternal: true
  name: UserName
  nameWithType: TerminologyUserCredentials.UserName
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.UserName
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Password*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Password
  isExternal: true
  name: Password
  nameWithType: TerminologyUserCredentials.Password
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.Password
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoCredentials*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoCredentials
  isExternal: true
  name: SsoCredentials
  nameWithType: TerminologyUserCredentials.SsoCredentials
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.SsoCredentials
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.UserType*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.UserType
  isExternal: true
  name: UserType
  nameWithType: TerminologyUserCredentials.UserType
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.UserType
