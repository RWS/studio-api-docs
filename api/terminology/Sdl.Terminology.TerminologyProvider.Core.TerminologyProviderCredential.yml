### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
  id: TerminologyProviderCredential
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.#ctor(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials,System.Boolean)
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.#ctor(System.String,System.Boolean)
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.#ctor(System.String,System.String,System.Boolean)
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.Credential
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.CredentialString
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  - Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.GetHashCode(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  langs:
  - csharp
  - vb
  name: TerminologyProviderCredential
  nameWithType: TerminologyProviderCredential
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
  type: Class
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Represents a credential for a terminology provider that can be stored in a <xref href="Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public sealed class TerminologyProviderCredential : IEquatable<TerminologyProviderCredential>'
    content.vb: Public NotInheritable Class TerminologyProviderCredential Implements IEquatable(Of TerminologyProviderCredential)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.#ctor(System.String,System.String,System.Boolean)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.#ctor(System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean)'
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
  langs:
  - csharp
  - vb
  name: TerminologyProviderCredential(string, string, bool)
  nameWithType: TerminologyProviderCredential.TerminologyProviderCredential(string, string, bool)
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.TerminologyProviderCredential(string, string, bool)
  type: Constructor
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Constructor that takes the given credential and whether to persist.
  example: []
  syntax:
    content: public TerminologyProviderCredential(string userName, string password, bool persist = false)
    parameters:
    - id: userName
      type: System.String
      description: username
    - id: password
      type: System.String
      description: password
    - id: persist
      type: System.Boolean
      description: persist
    content.vb: Public Sub New(userName As String, password As String, persist As Boolean = False)
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.#ctor*
  nameWithType.vb: TerminologyProviderCredential.New(String, String, Boolean)
  fullName.vb: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.New(String, String, Boolean)
  name.vb: New(String, String, Boolean)
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.#ctor(System.String,System.Boolean)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
  langs:
  - csharp
  - vb
  name: TerminologyProviderCredential(string, bool)
  nameWithType: TerminologyProviderCredential.TerminologyProviderCredential(string, bool)
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.TerminologyProviderCredential(string, bool)
  type: Constructor
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: >-
    Constructor that takes the given credential and whether to persist.

    Can be used when authentication is done using an api key
  example: []
  syntax:
    content: public TerminologyProviderCredential(string credential, bool persist = false)
    parameters:
    - id: credential
      type: System.String
      description: userCredentials
    - id: persist
      type: System.Boolean
      description: persist
    content.vb: Public Sub New(credential As String, persist As Boolean = False)
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.#ctor*
  nameWithType.vb: TerminologyProviderCredential.New(String, Boolean)
  fullName.vb: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.New(String, Boolean)
  name.vb: New(String, Boolean)
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.#ctor(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials,System.Boolean)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.#ctor(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials,System.Boolean)
  id: '#ctor(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials,System.Boolean)'
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
  langs:
  - csharp
  - vb
  name: TerminologyProviderCredential(TerminologyUserCredentials, bool)
  nameWithType: TerminologyProviderCredential.TerminologyProviderCredential(TerminologyUserCredentials, bool)
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.TerminologyProviderCredential(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials, bool)
  type: Constructor
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Constructor that takes the given credential and whether to persist.
  example: []
  syntax:
    content: public TerminologyProviderCredential(TerminologyUserCredentials credential, bool persist = false)
    parameters:
    - id: credential
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
      description: userCredentials
    - id: persist
      type: System.Boolean
      description: persist
    content.vb: Public Sub New(credential As TerminologyUserCredentials, persist As Boolean = False)
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.#ctor*
  nameWithType.vb: TerminologyProviderCredential.New(TerminologyUserCredentials, Boolean)
  fullName.vb: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.New(Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials, Boolean)
  name.vb: New(TerminologyUserCredentials, Boolean)
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.GetHashCode(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.GetHashCode(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  id: GetHashCode(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
  langs:
  - csharp
  - vb
  name: GetHashCode(TerminologyProviderCredential)
  nameWithType: TerminologyProviderCredential.GetHashCode(TerminologyProviderCredential)
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.GetHashCode(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  type: Method
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Generates an hash code for the specified terminology provider credential object
  example: []
  syntax:
    content: public int GetHashCode(TerminologyProviderCredential obj)
    parameters:
    - id: obj
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
      description: The terminology provider userCredentials object.
    return:
      type: System.Int32
      description: The generated hash code.
    content.vb: Public Function GetHashCode(obj As TerminologyProviderCredential) As Integer
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.GetHashCode*
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  id: Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
  langs:
  - csharp
  - vb
  name: Equals(TerminologyProviderCredential)
  nameWithType: TerminologyProviderCredential.Equals(TerminologyProviderCredential)
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  type: Method
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Determines whether two terminology provider credentials objects are equal
  example: []
  syntax:
    content: public bool Equals(TerminologyProviderCredential other)
    parameters:
    - id: other
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
      description: The terminology provider credentials object to compare the current object with.
    return:
      type: System.Boolean
      description: True if the two objects are equal.
    content.vb: Public Function Equals(other As TerminologyProviderCredential) As Boolean
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.Equals*
  implements:
  - System.IEquatable{Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential}.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.CredentialString
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.CredentialString
  id: CredentialString
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
  langs:
  - csharp
  - vb
  name: CredentialString
  nameWithType: TerminologyProviderCredential.CredentialString
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.CredentialString
  type: Property
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Credential property represents the credential.
  example: []
  syntax:
    content: public string CredentialString { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CredentialString As String
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.CredentialString*
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.Credential
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.Credential
  id: Credential
  parent: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
  langs:
  - csharp
  - vb
  name: Credential
  nameWithType: TerminologyProviderCredential.Credential
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.Credential
  type: Property
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: Credential property represents the credential.
  example: []
  syntax:
    content: public TerminologyUserCredentials Credential { get; set; }
    parameters: []
    return:
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
    content.vb: Public Property Credential As TerminologyUserCredentials
  overload: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.Credential*
references:
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.html
  name: ITerminologyProviderCredentialStore
  nameWithType: ITerminologyProviderCredentialStore
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  href: Sdl.html
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Terminology
    name: Terminology
    isExternal: true
    href: Sdl.Terminology.html
  - name: .
  - uid: Sdl.Terminology.TerminologyProvider
    name: TerminologyProvider
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.html
  - name: .
  - uid: Sdl.Terminology.TerminologyProvider.Core
    name: Core
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Terminology
    name: Terminology
    isExternal: true
    href: Sdl.Terminology.html
  - name: .
  - uid: Sdl.Terminology.TerminologyProvider
    name: TerminologyProvider
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.html
  - name: .
  - uid: Sdl.Terminology.TerminologyProvider.Core
    name: Core
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential}
  commentId: T:System.IEquatable{Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<TerminologyProviderCredential>
  nameWithType: IEquatable<TerminologyProviderCredential>
  fullName: System.IEquatable<Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential>
  nameWithType.vb: IEquatable(Of TerminologyProviderCredential)
  fullName.vb: System.IEquatable(Of Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  name.vb: IEquatable(Of TerminologyProviderCredential)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
    name: TerminologyProviderCredential
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
    name: TerminologyProviderCredential
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.html
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.#ctor*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.#ctor
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.html#Sdl_Terminology_TerminologyProvider_Core_TerminologyProviderCredential__ctor_System_String_System_String_System_Boolean_
  name: TerminologyProviderCredential
  nameWithType: TerminologyProviderCredential.TerminologyProviderCredential
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.TerminologyProviderCredential
  nameWithType.vb: TerminologyProviderCredential.New
  fullName.vb: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials.html
  name: TerminologyUserCredentials
  nameWithType: TerminologyUserCredentials
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyUserCredentials
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.GetHashCode*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.GetHashCode
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.html#Sdl_Terminology_TerminologyProvider_Core_TerminologyProviderCredential_GetHashCode_Sdl_Terminology_TerminologyProvider_Core_TerminologyProviderCredential_
  name: GetHashCode
  nameWithType: TerminologyProviderCredential.GetHashCode
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.GetHashCode
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.html
  name: TerminologyProviderCredential
  nameWithType: TerminologyProviderCredential
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.Equals*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.Equals
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.html#Sdl_Terminology_TerminologyProvider_Core_TerminologyProviderCredential_Equals_Sdl_Terminology_TerminologyProvider_Core_TerminologyProviderCredential_
  name: Equals
  nameWithType: TerminologyProviderCredential.Equals
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.Equals
- uid: System.IEquatable{Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential}.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  commentId: M:System.IEquatable{Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential}.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  parent: System.IEquatable{Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(TerminologyProviderCredential)
  nameWithType: IEquatable<TerminologyProviderCredential>.Equals(TerminologyProviderCredential)
  fullName: System.IEquatable<Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential>.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  nameWithType.vb: IEquatable(Of TerminologyProviderCredential).Equals(TerminologyProviderCredential)
  fullName.vb: System.IEquatable(Of Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential).Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  spec.csharp:
  - uid: System.IEquatable{Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential}.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
    name: TerminologyProviderCredential
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential}.Equals(Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
    name: TerminologyProviderCredential
    isExternal: true
    href: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.CredentialString*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.CredentialString
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.html#Sdl_Terminology_TerminologyProvider_Core_TerminologyProviderCredential_CredentialString
  name: CredentialString
  nameWithType: TerminologyProviderCredential.CredentialString
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.CredentialString
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.Credential*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.Credential
  isExternal: true
  href: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.html#Sdl_Terminology_TerminologyProvider_Core_TerminologyProviderCredential_Credential
  name: Credential
  nameWithType: TerminologyProviderCredential.Credential
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential.Credential
