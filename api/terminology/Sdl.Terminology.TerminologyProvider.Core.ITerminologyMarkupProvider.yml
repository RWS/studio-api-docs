### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyMarkupProvider
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.ITerminologyMarkupProvider
  id: ITerminologyMarkupProvider
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyMarkupProvider.SearchAndMarkup(System.String,Sdl.Terminology.TerminologyProvider.Core.ILanguage,Sdl.Terminology.TerminologyProvider.Core.ILanguage,System.Int32,Sdl.Terminology.TerminologyProvider.Core.SearchMode,System.Boolean)
  langs:
  - csharp
  - vb
  name: ITerminologyMarkupProvider
  nameWithType: ITerminologyMarkupProvider
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyMarkupProvider
  type: Interface
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nTerminology providers that provide markup information with the search results when performing term recognition need to implement this interface.\n"
  syntax:
    content: public interface ITerminologyMarkupProvider
    content.vb: Public Interface ITerminologyMarkupProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyMarkupProvider.SearchAndMarkup(System.String,Sdl.Terminology.TerminologyProvider.Core.ILanguage,Sdl.Terminology.TerminologyProvider.Core.ILanguage,System.Int32,Sdl.Terminology.TerminologyProvider.Core.SearchMode,System.Boolean)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyMarkupProvider.SearchAndMarkup(System.String,Sdl.Terminology.TerminologyProvider.Core.ILanguage,Sdl.Terminology.TerminologyProvider.Core.ILanguage,System.Int32,Sdl.Terminology.TerminologyProvider.Core.SearchMode,System.Boolean)
  id: SearchAndMarkup(System.String,Sdl.Terminology.TerminologyProvider.Core.ILanguage,Sdl.Terminology.TerminologyProvider.Core.ILanguage,System.Int32,Sdl.Terminology.TerminologyProvider.Core.SearchMode,System.Boolean)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyMarkupProvider
  langs:
  - csharp
  - vb
  name: SearchAndMarkup(String, ILanguage, ILanguage, Int32, SearchMode, Boolean)
  nameWithType: ITerminologyMarkupProvider.SearchAndMarkup(String, ILanguage, ILanguage, Int32, SearchMode, Boolean)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyMarkupProvider.SearchAndMarkup(System.String, Sdl.Terminology.TerminologyProvider.Core.ILanguage, Sdl.Terminology.TerminologyProvider.Core.ILanguage, System.Int32, Sdl.Terminology.TerminologyProvider.Core.SearchMode, System.Boolean)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nPerforms a term recognition over the current terminology provider\n"
  syntax:
    content: IList<SearchMarkupResult> SearchAndMarkup(string text, ILanguage source, ILanguage destination, int maxResultsCount, SearchMode mode, bool targetRequired)
    parameters:
    - id: text
      type: System.String
      description: The text to search for
    - id: source
      type: Sdl.Terminology.TerminologyProvider.Core.ILanguage
      description: Source language
    - id: destination
      type: Sdl.Terminology.TerminologyProvider.Core.ILanguage
      description: Destination language
    - id: maxResultsCount
      type: System.Int32
      description: Maximum number of result to return
    - id: mode
      type: Sdl.Terminology.TerminologyProvider.Core.SearchMode
      description: 'search mode: normal, fuzzy, full text'
    - id: targetRequired
      type: System.Boolean
      description: True to return only term with target language term definition
    return:
      type: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.SearchMarkupResult}
      description: The list of found terms together with markup information
    content.vb: Function SearchAndMarkup(text As String, source As ILanguage, destination As ILanguage, maxResultsCount As Integer, mode As SearchMode, targetRequired As Boolean) As IList(Of SearchMarkupResult)
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyMarkupProvider.SearchAndMarkup*
references:
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyMarkupProvider.SearchAndMarkup*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyMarkupProvider.SearchAndMarkup
  isExternal: true
  name: SearchAndMarkup
  nameWithType: ITerminologyMarkupProvider.SearchAndMarkup
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyMarkupProvider.SearchAndMarkup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Terminology.TerminologyProvider.Core.ILanguage
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.ILanguage
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: ILanguage
  nameWithType: ILanguage
  fullName: Sdl.Terminology.TerminologyProvider.Core.ILanguage
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.Terminology.TerminologyProvider.Core.SearchMode
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.SearchMode
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: SearchMode
  nameWithType: SearchMode
  fullName: Sdl.Terminology.TerminologyProvider.Core.SearchMode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.SearchMarkupResult}
  commentId: T:System.Collections.Generic.IList{Sdl.Terminology.TerminologyProvider.Core.SearchMarkupResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<SearchMarkupResult>
  nameWithType: IList<SearchMarkupResult>
  fullName: System.Collections.Generic.IList<Sdl.Terminology.TerminologyProvider.Core.SearchMarkupResult>
  nameWithType.vb: IList(Of SearchMarkupResult)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.Terminology.TerminologyProvider.Core.SearchMarkupResult)
  name.vb: IList(Of SearchMarkupResult)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.SearchMarkupResult
    name: SearchMarkupResult
    nameWithType: SearchMarkupResult
    fullName: Sdl.Terminology.TerminologyProvider.Core.SearchMarkupResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Terminology.TerminologyProvider.Core.SearchMarkupResult
    name: SearchMarkupResult
    nameWithType: SearchMarkupResult
    fullName: Sdl.Terminology.TerminologyProvider.Core.SearchMarkupResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
