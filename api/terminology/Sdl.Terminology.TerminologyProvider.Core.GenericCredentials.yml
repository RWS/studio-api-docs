### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials
  id: GenericCredentials
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.#ctor(System.String)
  - Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.#ctor(System.String,System.String)
  - Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Equals(System.Object)
  - Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.GetHashCode
  - Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Item(System.String)
  - Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Password
  - Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.PropertyKeys
  - Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.ToCredentialString
  - Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.ToString
  - Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.UserName
  langs:
  - csharp
  - vb
  name: GenericCredentials
  nameWithType: GenericCredentials
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials
  type: Class
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public class GenericCredentials
    content.vb: Public Class GenericCredentials
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.#ctor(System.String)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials
  langs:
  - csharp
  - vb
  name: GenericCredentials(String)
  nameWithType: GenericCredentials.GenericCredentials(String)
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.GenericCredentials(System.String)
  type: Constructor
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public GenericCredentials(string credentialString)
    parameters:
    - id: credentialString
      type: System.String
    content.vb: Public Sub New(credentialString As String)
  overload: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.#ctor(System.String,System.String)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials
  langs:
  - csharp
  - vb
  name: GenericCredentials(String, String)
  nameWithType: GenericCredentials.GenericCredentials(String, String)
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.GenericCredentials(System.String, System.String)
  type: Constructor
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public GenericCredentials(string userName, string password)
    parameters:
    - id: userName
      type: System.String
    - id: password
      type: System.String
    content.vb: Public Sub New(userName As String, password As String)
  overload: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.ToCredentialString
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.ToCredentialString
  id: ToCredentialString
  parent: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials
  langs:
  - csharp
  - vb
  name: ToCredentialString()
  nameWithType: GenericCredentials.ToCredentialString()
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.ToCredentialString()
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public string ToCredentialString()
    return:
      type: System.String
    content.vb: Public Function ToCredentialString As String
  overload: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.ToCredentialString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.ToString
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.ToString
  id: ToString
  parent: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: GenericCredentials.ToString()
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.ToString()
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Equals(System.Object)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: GenericCredentials.Equals(Object)
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Equals(System.Object)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.GetHashCode
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.GetHashCode
  id: GetHashCode
  parent: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: GenericCredentials.GetHashCode()
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.GetHashCode()
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.UserName
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.UserName
  id: UserName
  parent: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: GenericCredentials.UserName
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.UserName
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserName As String
  overload: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.UserName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Password
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Password
  id: Password
  parent: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: GenericCredentials.Password
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Password
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Password As String
  overload: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Password*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Item(System.String)
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Item(System.String)
  id: Item(System.String)
  parent: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: GenericCredentials.Item[String]
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Item[System.String]
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public string this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
    return:
      type: System.String
    content.vb: Public Property Item(propertyName As String) As String
  overload: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Item*
  nameWithType.vb: GenericCredentials.Item(String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Item(System.String)
  name.vb: Item(String)
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.PropertyKeys
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.PropertyKeys
  id: PropertyKeys
  parent: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials
  langs:
  - csharp
  - vb
  name: PropertyKeys
  nameWithType: GenericCredentials.PropertyKeys
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.PropertyKeys
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public string[] PropertyKeys { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property PropertyKeys As String()
  overload: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.PropertyKeys*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.#ctor*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.#ctor
  isExternal: true
  name: GenericCredentials
  nameWithType: GenericCredentials.GenericCredentials
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.GenericCredentials
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.ToCredentialString*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.ToCredentialString
  isExternal: true
  name: ToCredentialString
  nameWithType: GenericCredentials.ToCredentialString
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.ToCredentialString
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.ToString*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.ToString
  isExternal: true
  name: ToString
  nameWithType: GenericCredentials.ToString
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.ToString
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Equals*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Equals
  isExternal: true
  name: Equals
  nameWithType: GenericCredentials.Equals
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.GetHashCode*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: GenericCredentials.GetHashCode
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.UserName*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.UserName
  isExternal: true
  name: UserName
  nameWithType: GenericCredentials.UserName
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.UserName
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Password*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Password
  isExternal: true
  name: Password
  nameWithType: GenericCredentials.Password
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Password
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Item*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Item
  isExternal: true
  name: Item
  nameWithType: GenericCredentials.Item
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.Item
- uid: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.PropertyKeys*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.PropertyKeys
  isExternal: true
  name: PropertyKeys
  nameWithType: GenericCredentials.PropertyKeys
  fullName: Sdl.Terminology.TerminologyProvider.Core.GenericCredentials.PropertyKeys
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
