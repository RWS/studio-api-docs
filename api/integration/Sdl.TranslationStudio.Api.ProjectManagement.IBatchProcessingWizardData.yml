### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData
  commentId: T:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData
  id: IBatchProcessingWizardData
  parent: Sdl.TranslationStudio.Api.ProjectManagement
  children:
  - Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.AllowInitialSplitTask
  - Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.CanSelectFile(Sdl.ProjectApi.ITranslatableFile)
  - Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.CustomTaskTemplate
  - Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.InitialTaskFileTypes
  - Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.LogonCancelled
  - Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.LogonFailed
  - Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.Mode
  - Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.Project
  - Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SelectedTranslatableFiles
  - Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.ServerConnectionError
  - Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SuccessFullyConnectedAndLoggedOn
  - Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.TaskTemplate
  - Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.TranslatableFiles
  langs:
  - csharp
  - vb
  name: IBatchProcessingWizardData
  nameWithType: IBatchProcessingWizardData
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData
  type: Interface
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  syntax:
    content: 'public interface IBatchProcessingWizardData : IWizardData'
    content.vb: >-
      Public Interface IBatchProcessingWizardData

          Inherits IWizardData
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.CanSelectFile(Sdl.ProjectApi.ITranslatableFile)
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.CanSelectFile(Sdl.ProjectApi.ITranslatableFile)
  id: CanSelectFile(Sdl.ProjectApi.ITranslatableFile)
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData
  langs:
  - csharp
  - vb
  name: CanSelectFile(ITranslatableFile)
  nameWithType: IBatchProcessingWizardData.CanSelectFile(ITranslatableFile)
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.CanSelectFile(Sdl.ProjectApi.ITranslatableFile)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  summary: "\nChecks whether the specified file can be included in a batch task. Always returns true for local projects.\nreturns false for files in a server project if:\n- The file is missing and <xref href=\"Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SuccessFullyConnectedAndLoggedOn\" data-throw-if-not-resolved=\"false\"></xref> is <pre><code>false</code></pre>.\n- The file is checked out by another user and <xref href=\"Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SuccessFullyConnectedAndLoggedOn\" data-throw-if-not-resolved=\"false\"></xref> is <pre><code>true</code></pre>.\n"
  syntax:
    content: bool CanSelectFile(ITranslatableFile file)
    parameters:
    - id: file
      type: Sdl.ProjectApi.ITranslatableFile
    return:
      type: System.Boolean
    content.vb: Function CanSelectFile(file As ITranslatableFile) As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.CanSelectFile*
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.Project
  commentId: P:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.Project
  id: Project
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData
  langs:
  - csharp
  - vb
  name: Project
  nameWithType: IBatchProcessingWizardData.Project
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.Project
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  summary: "\nReturns the project for which batch processing is being performed.\n"
  syntax:
    content: IProject Project { get; }
    parameters: []
    return:
      type: Sdl.ProjectApi.IProject
    content.vb: ReadOnly Property Project As IProject
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.Project*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.Mode
  commentId: P:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.Mode
  id: Mode
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: IBatchProcessingWizardData.Mode
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.Mode
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  summary: "\nGets the mode in which the wizard is operating.\n"
  syntax:
    content: BatchProcessingMode Mode { get; }
    parameters: []
    return:
      type: Sdl.TranslationStudio.Api.ProjectManagement.BatchProcessingMode
    content.vb: ReadOnly Property Mode As BatchProcessingMode
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.Mode*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.InitialTaskFileTypes
  commentId: P:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.InitialTaskFileTypes
  id: InitialTaskFileTypes
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData
  langs:
  - csharp
  - vb
  name: InitialTaskFileTypes
  nameWithType: IBatchProcessingWizardData.InitialTaskFileTypes
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.InitialTaskFileTypes
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  summary: "\nGets the initial task file types. \n"
  syntax:
    content: TaskFileType[] InitialTaskFileTypes { get; }
    parameters: []
    return:
      type: Sdl.ProjectApi.TaskFileType[]
    content.vb: ReadOnly Property InitialTaskFileTypes As TaskFileType()
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.InitialTaskFileTypes*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.TranslatableFiles
  commentId: P:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.TranslatableFiles
  id: TranslatableFiles
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData
  langs:
  - csharp
  - vb
  name: TranslatableFiles
  nameWithType: IBatchProcessingWizardData.TranslatableFiles
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.TranslatableFiles
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  summary: "\nGets the list of input files to the task.\n"
  remarks: >-
    In case the mode is <xref href="Sdl.TranslationStudio.Api.ProjectManagement.BatchProcessingMode.Project" data-throw-if-not-resolved="false"></xref>, this will return all

    current translatable files (source or target) that are supported by the selected task template.
  syntax:
    content: ITranslatableFile[] TranslatableFiles { get; }
    parameters: []
    return:
      type: Sdl.ProjectApi.ITranslatableFile[]
    content.vb: ReadOnly Property TranslatableFiles As ITranslatableFile()
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.TranslatableFiles*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.TaskTemplate
  commentId: P:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.TaskTemplate
  id: TaskTemplate
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData
  langs:
  - csharp
  - vb
  name: TaskTemplate
  nameWithType: IBatchProcessingWizardData.TaskTemplate
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.TaskTemplate
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  summary: "\nGets or sets the task template to be used.\n"
  syntax:
    content: ITaskTemplate TaskTemplate { get; set; }
    parameters: []
    return:
      type: Sdl.ProjectApi.ITaskTemplate
    content.vb: Property TaskTemplate As ITaskTemplate
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.TaskTemplate*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.CustomTaskTemplate
  commentId: P:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.CustomTaskTemplate
  id: CustomTaskTemplate
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData
  langs:
  - csharp
  - vb
  name: CustomTaskTemplate
  nameWithType: IBatchProcessingWizardData.CustomTaskTemplate
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.CustomTaskTemplate
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  summary: "\nGets or sets whether to initiallly select the &quot;Custom&quot; task template, so the user can build a task sequence from scratch.\nThe custom template can be retrieved using the <xref href=\"Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.TaskTemplate\" data-throw-if-not-resolved=\"false\"></xref> property once the user has moved past the first page of the wizard.\n"
  syntax:
    content: bool CustomTaskTemplate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property CustomTaskTemplate As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.CustomTaskTemplate*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.AllowInitialSplitTask
  commentId: P:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.AllowInitialSplitTask
  id: AllowInitialSplitTask
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData
  langs:
  - csharp
  - vb
  name: AllowInitialSplitTask
  nameWithType: IBatchProcessingWizardData.AllowInitialSplitTask
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.AllowInitialSplitTask
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  summary: "\nReturns whether to allow tasks starting with Split, on top of the tasks that are normally allowed\nbased on the existing file types.\nThis is to cater for cases where new target languages have been added to a project.\n"
  syntax:
    content: bool AllowInitialSplitTask { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property AllowInitialSplitTask As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.AllowInitialSplitTask*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SelectedTranslatableFiles
  commentId: P:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SelectedTranslatableFiles
  id: SelectedTranslatableFiles
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData
  langs:
  - csharp
  - vb
  name: SelectedTranslatableFiles
  nameWithType: IBatchProcessingWizardData.SelectedTranslatableFiles
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SelectedTranslatableFiles
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  summary: "\nGets or set the translatable files on which the batch task will be run.\n"
  syntax:
    content: ITranslatableFile[] SelectedTranslatableFiles { get; set; }
    parameters: []
    return:
      type: Sdl.ProjectApi.ITranslatableFile[]
    content.vb: Property SelectedTranslatableFiles As ITranslatableFile()
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SelectedTranslatableFiles*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.LogonFailed
  commentId: P:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.LogonFailed
  id: LogonFailed
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData
  langs:
  - csharp
  - vb
  name: LogonFailed
  nameWithType: IBatchProcessingWizardData.LogonFailed
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.LogonFailed
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  summary: "\nGets whether the user sucessfully logged on before the wizard was launched. Only relevant for server projects.\n"
  syntax:
    content: bool LogonFailed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property LogonFailed As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.LogonFailed*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.LogonCancelled
  commentId: P:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.LogonCancelled
  id: LogonCancelled
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData
  langs:
  - csharp
  - vb
  name: LogonCancelled
  nameWithType: IBatchProcessingWizardData.LogonCancelled
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.LogonCancelled
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  summary: "\nGets whether the user cancelled logon before the wizard was launched. Only relevant for server projects.\n"
  syntax:
    content: bool LogonCancelled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property LogonCancelled As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.LogonCancelled*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.ServerConnectionError
  commentId: P:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.ServerConnectionError
  id: ServerConnectionError
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData
  langs:
  - csharp
  - vb
  name: ServerConnectionError
  nameWithType: IBatchProcessingWizardData.ServerConnectionError
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.ServerConnectionError
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  summary: "\nGets whether there was an error connecting to the server when trying to synchrnoize the project before showing the wizard. Only relevant for server projects.\n"
  syntax:
    content: bool ServerConnectionError { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property ServerConnectionError As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.ServerConnectionError*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SuccessFullyConnectedAndLoggedOn
  commentId: P:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SuccessFullyConnectedAndLoggedOn
  id: SuccessFullyConnectedAndLoggedOn
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData
  langs:
  - csharp
  - vb
  name: SuccessFullyConnectedAndLoggedOn
  nameWithType: IBatchProcessingWizardData.SuccessFullyConnectedAndLoggedOn
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SuccessFullyConnectedAndLoggedOn
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  summary: "\nGets whether the server connection and user logon were successful (equivalent to (!LogonFailed &amp;&amp; !LogonCancelled &amp;&amp; !ServerConnectionError).\n"
  syntax:
    content: bool SuccessFullyConnectedAndLoggedOn { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SuccessFullyConnectedAndLoggedOn As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SuccessFullyConnectedAndLoggedOn*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.TranslationStudio.Api.ProjectManagement
  commentId: N:Sdl.TranslationStudio.Api.ProjectManagement
  isExternal: true
  name: Sdl.TranslationStudio.Api.ProjectManagement
  nameWithType: Sdl.TranslationStudio.Api.ProjectManagement
  fullName: Sdl.TranslationStudio.Api.ProjectManagement
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.CanSelectFile*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.CanSelectFile
  isExternal: true
  name: CanSelectFile
  nameWithType: IBatchProcessingWizardData.CanSelectFile
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.CanSelectFile
- uid: Sdl.ProjectApi.ITranslatableFile
  isExternal: true
  name: ITranslatableFile
  nameWithType: ITranslatableFile
  fullName: Sdl.ProjectApi.ITranslatableFile
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.Project*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.Project
  isExternal: true
  name: Project
  nameWithType: IBatchProcessingWizardData.Project
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.Project
- uid: Sdl.ProjectApi.IProject
  isExternal: true
  name: IProject
  nameWithType: IProject
  fullName: Sdl.ProjectApi.IProject
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.Mode*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.Mode
  isExternal: true
  name: Mode
  nameWithType: IBatchProcessingWizardData.Mode
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.Mode
- uid: Sdl.TranslationStudio.Api.ProjectManagement.BatchProcessingMode
  commentId: T:Sdl.TranslationStudio.Api.ProjectManagement.BatchProcessingMode
  parent: Sdl.TranslationStudio.Api.ProjectManagement
  isExternal: true
  name: BatchProcessingMode
  nameWithType: BatchProcessingMode
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.BatchProcessingMode
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.InitialTaskFileTypes*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.InitialTaskFileTypes
  isExternal: true
  name: InitialTaskFileTypes
  nameWithType: IBatchProcessingWizardData.InitialTaskFileTypes
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.InitialTaskFileTypes
- uid: Sdl.ProjectApi.TaskFileType[]
  isExternal: true
  name: TaskFileType[]
  nameWithType: TaskFileType[]
  fullName: Sdl.ProjectApi.TaskFileType[]
  nameWithType.vb: TaskFileType()
  fullName.vb: Sdl.ProjectApi.TaskFileType()
  name.vb: TaskFileType()
  spec.csharp:
  - uid: Sdl.ProjectApi.TaskFileType
    name: TaskFileType
    nameWithType: TaskFileType
    fullName: Sdl.ProjectApi.TaskFileType
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectApi.TaskFileType
    name: TaskFileType
    nameWithType: TaskFileType
    fullName: Sdl.ProjectApi.TaskFileType
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.TranslatableFiles*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.TranslatableFiles
  isExternal: true
  name: TranslatableFiles
  nameWithType: IBatchProcessingWizardData.TranslatableFiles
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.TranslatableFiles
- uid: Sdl.ProjectApi.ITranslatableFile[]
  isExternal: true
  name: ITranslatableFile[]
  nameWithType: ITranslatableFile[]
  fullName: Sdl.ProjectApi.ITranslatableFile[]
  nameWithType.vb: ITranslatableFile()
  fullName.vb: Sdl.ProjectApi.ITranslatableFile()
  name.vb: ITranslatableFile()
  spec.csharp:
  - uid: Sdl.ProjectApi.ITranslatableFile
    name: ITranslatableFile
    nameWithType: ITranslatableFile
    fullName: Sdl.ProjectApi.ITranslatableFile
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectApi.ITranslatableFile
    name: ITranslatableFile
    nameWithType: ITranslatableFile
    fullName: Sdl.ProjectApi.ITranslatableFile
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.TaskTemplate*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.TaskTemplate
  isExternal: true
  name: TaskTemplate
  nameWithType: IBatchProcessingWizardData.TaskTemplate
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.TaskTemplate
- uid: Sdl.ProjectApi.ITaskTemplate
  commentId: '!:Sdl.ProjectApi.ITaskTemplate'
  isExternal: true
  name: ITaskTemplate
  nameWithType: ITaskTemplate
  fullName: Sdl.ProjectApi.ITaskTemplate
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.CustomTaskTemplate*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.CustomTaskTemplate
  isExternal: true
  name: CustomTaskTemplate
  nameWithType: IBatchProcessingWizardData.CustomTaskTemplate
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.CustomTaskTemplate
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.AllowInitialSplitTask*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.AllowInitialSplitTask
  isExternal: true
  name: AllowInitialSplitTask
  nameWithType: IBatchProcessingWizardData.AllowInitialSplitTask
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.AllowInitialSplitTask
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SelectedTranslatableFiles*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SelectedTranslatableFiles
  isExternal: true
  name: SelectedTranslatableFiles
  nameWithType: IBatchProcessingWizardData.SelectedTranslatableFiles
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SelectedTranslatableFiles
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.LogonFailed*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.LogonFailed
  isExternal: true
  name: LogonFailed
  nameWithType: IBatchProcessingWizardData.LogonFailed
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.LogonFailed
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.LogonCancelled*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.LogonCancelled
  isExternal: true
  name: LogonCancelled
  nameWithType: IBatchProcessingWizardData.LogonCancelled
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.LogonCancelled
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.ServerConnectionError*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.ServerConnectionError
  isExternal: true
  name: ServerConnectionError
  nameWithType: IBatchProcessingWizardData.ServerConnectionError
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.ServerConnectionError
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SuccessFullyConnectedAndLoggedOn*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SuccessFullyConnectedAndLoggedOn
  isExternal: true
  name: SuccessFullyConnectedAndLoggedOn
  nameWithType: IBatchProcessingWizardData.SuccessFullyConnectedAndLoggedOn
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IBatchProcessingWizardData.SuccessFullyConnectedAndLoggedOn
