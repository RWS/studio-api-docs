### YamlMime:ManagedReference
items:
- uid: Sdl.TellMe.ProviderApi.ISearchDataProvider
  commentId: T:Sdl.TellMe.ProviderApi.ISearchDataProvider
  id: ISearchDataProvider
  parent: Sdl.TellMe.ProviderApi
  children:
  - Sdl.TellMe.ProviderApi.ISearchDataProvider.GetProviderForQuery(System.String)
  - Sdl.TellMe.ProviderApi.ISearchDataProvider.Name
  - Sdl.TellMe.ProviderApi.ISearchDataProvider.ProviderIcon
  - Sdl.TellMe.ProviderApi.ISearchDataProvider.SearchForSuggestion(System.String)
  langs:
  - csharp
  - vb
  name: ISearchDataProvider
  nameWithType: ISearchDataProvider
  fullName: Sdl.TellMe.ProviderApi.ISearchDataProvider
  type: Interface
  source:
    path: Sdl.TellMe.ProviderApi
    isExternal: true
  assemblies:
  - Sdl.TellMe.ProviderApi
  namespace: Sdl.TellMe.ProviderApi
  summary: "\nRepresents a search mechanism that can be activated if the user types the provider name preceded by @. \nThe Tell Me will use it&apos;s default provider in case no @ sign is detected at the beginning of the word. \nIn case an @ is detected it will search the providers for the corresponding provider name if none is found\nit will use the default one. If one is detected then it will be used to do a query on it using the words after \nthe provider name. \ne.g @CustomProvider stringToSearch1 stringToSearch2\n"
  syntax:
    content: public interface ISearchDataProvider
    content.vb: Public Interface ISearchDataProvider
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.TellMe.ProviderApi.ISearchDataProvider.GetProviderForQuery(System.String)
  commentId: M:Sdl.TellMe.ProviderApi.ISearchDataProvider.GetProviderForQuery(System.String)
  id: GetProviderForQuery(System.String)
  parent: Sdl.TellMe.ProviderApi.ISearchDataProvider
  langs:
  - csharp
  - vb
  name: GetProviderForQuery(String)
  nameWithType: ISearchDataProvider.GetProviderForQuery(String)
  fullName: Sdl.TellMe.ProviderApi.ISearchDataProvider.GetProviderForQuery(System.String)
  type: Method
  source:
    path: Sdl.TellMe.ProviderApi
    isExternal: true
  assemblies:
  - Sdl.TellMe.ProviderApi
  namespace: Sdl.TellMe.ProviderApi
  summary: "\nCalled to identify if the provider can be used for the query\n"
  syntax:
    content: IEnumerable<ISearchDataProvider> GetProviderForQuery(string query)
    parameters:
    - id: query
      type: System.String
      description: text entry from the Tell Me UI
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.TellMe.ProviderApi.ISearchDataProvider}
    content.vb: Function GetProviderForQuery(query As String) As IEnumerable(Of ISearchDataProvider)
  overload: Sdl.TellMe.ProviderApi.ISearchDataProvider.GetProviderForQuery*
- uid: Sdl.TellMe.ProviderApi.ISearchDataProvider.SearchForSuggestion(System.String)
  commentId: M:Sdl.TellMe.ProviderApi.ISearchDataProvider.SearchForSuggestion(System.String)
  id: SearchForSuggestion(System.String)
  parent: Sdl.TellMe.ProviderApi.ISearchDataProvider
  langs:
  - csharp
  - vb
  name: SearchForSuggestion(String)
  nameWithType: ISearchDataProvider.SearchForSuggestion(String)
  fullName: Sdl.TellMe.ProviderApi.ISearchDataProvider.SearchForSuggestion(System.String)
  type: Method
  source:
    path: Sdl.TellMe.ProviderApi
    isExternal: true
  assemblies:
  - Sdl.TellMe.ProviderApi
  namespace: Sdl.TellMe.ProviderApi
  summary: "\nExecutes the query\n"
  syntax:
    content: IEnumerable<ITellMeAction> SearchForSuggestion(string query)
    parameters:
    - id: query
      type: System.String
      description: text entry from the Tell Me UI (except the @ProviderName string)
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.TellMe.ProviderApi.ITellMeAction}
    content.vb: Function SearchForSuggestion(query As String) As IEnumerable(Of ITellMeAction)
  overload: Sdl.TellMe.ProviderApi.ISearchDataProvider.SearchForSuggestion*
- uid: Sdl.TellMe.ProviderApi.ISearchDataProvider.Name
  commentId: P:Sdl.TellMe.ProviderApi.ISearchDataProvider.Name
  id: Name
  parent: Sdl.TellMe.ProviderApi.ISearchDataProvider
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ISearchDataProvider.Name
  fullName: Sdl.TellMe.ProviderApi.ISearchDataProvider.Name
  type: Property
  source:
    path: Sdl.TellMe.ProviderApi
    isExternal: true
  assemblies:
  - Sdl.TellMe.ProviderApi
  namespace: Sdl.TellMe.ProviderApi
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Sdl.TellMe.ProviderApi.ISearchDataProvider.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.TellMe.ProviderApi.ISearchDataProvider.ProviderIcon
  commentId: P:Sdl.TellMe.ProviderApi.ISearchDataProvider.ProviderIcon
  id: ProviderIcon
  parent: Sdl.TellMe.ProviderApi.ISearchDataProvider
  langs:
  - csharp
  - vb
  name: ProviderIcon
  nameWithType: ISearchDataProvider.ProviderIcon
  fullName: Sdl.TellMe.ProviderApi.ISearchDataProvider.ProviderIcon
  type: Property
  source:
    path: Sdl.TellMe.ProviderApi
    isExternal: true
  assemblies:
  - Sdl.TellMe.ProviderApi
  namespace: Sdl.TellMe.ProviderApi
  syntax:
    content: Icon ProviderIcon { get; }
    parameters: []
    return:
      type: System.Drawing.Icon
    content.vb: ReadOnly Property ProviderIcon As Icon
  overload: Sdl.TellMe.ProviderApi.ISearchDataProvider.ProviderIcon*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.TellMe.ProviderApi
  commentId: N:Sdl.TellMe.ProviderApi
  isExternal: true
  name: Sdl.TellMe.ProviderApi
  nameWithType: Sdl.TellMe.ProviderApi
  fullName: Sdl.TellMe.ProviderApi
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TellMe.ProviderApi.ISearchDataProvider.GetProviderForQuery*
  commentId: Overload:Sdl.TellMe.ProviderApi.ISearchDataProvider.GetProviderForQuery
  isExternal: true
  name: GetProviderForQuery
  nameWithType: ISearchDataProvider.GetProviderForQuery
  fullName: Sdl.TellMe.ProviderApi.ISearchDataProvider.GetProviderForQuery
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{Sdl.TellMe.ProviderApi.ISearchDataProvider}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.TellMe.ProviderApi.ISearchDataProvider}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISearchDataProvider>
  nameWithType: IEnumerable<ISearchDataProvider>
  fullName: System.Collections.Generic.IEnumerable<Sdl.TellMe.ProviderApi.ISearchDataProvider>
  nameWithType.vb: IEnumerable(Of ISearchDataProvider)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.TellMe.ProviderApi.ISearchDataProvider)
  name.vb: IEnumerable(Of ISearchDataProvider)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.TellMe.ProviderApi.ISearchDataProvider
    name: ISearchDataProvider
    nameWithType: ISearchDataProvider
    fullName: Sdl.TellMe.ProviderApi.ISearchDataProvider
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.TellMe.ProviderApi.ISearchDataProvider
    name: ISearchDataProvider
    nameWithType: ISearchDataProvider
    fullName: Sdl.TellMe.ProviderApi.ISearchDataProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.TellMe.ProviderApi.ISearchDataProvider.SearchForSuggestion*
  commentId: Overload:Sdl.TellMe.ProviderApi.ISearchDataProvider.SearchForSuggestion
  isExternal: true
  name: SearchForSuggestion
  nameWithType: ISearchDataProvider.SearchForSuggestion
  fullName: Sdl.TellMe.ProviderApi.ISearchDataProvider.SearchForSuggestion
- uid: System.Collections.Generic.IEnumerable{Sdl.TellMe.ProviderApi.ITellMeAction}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.TellMe.ProviderApi.ITellMeAction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ITellMeAction>
  nameWithType: IEnumerable<ITellMeAction>
  fullName: System.Collections.Generic.IEnumerable<Sdl.TellMe.ProviderApi.ITellMeAction>
  nameWithType.vb: IEnumerable(Of ITellMeAction)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.TellMe.ProviderApi.ITellMeAction)
  name.vb: IEnumerable(Of ITellMeAction)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.TellMe.ProviderApi.ITellMeAction
    name: ITellMeAction
    nameWithType: ITellMeAction
    fullName: Sdl.TellMe.ProviderApi.ITellMeAction
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.TellMe.ProviderApi.ITellMeAction
    name: ITellMeAction
    nameWithType: ITellMeAction
    fullName: Sdl.TellMe.ProviderApi.ITellMeAction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.TellMe.ProviderApi.ISearchDataProvider.Name*
  commentId: Overload:Sdl.TellMe.ProviderApi.ISearchDataProvider.Name
  isExternal: true
  name: Name
  nameWithType: ISearchDataProvider.Name
  fullName: Sdl.TellMe.ProviderApi.ISearchDataProvider.Name
- uid: Sdl.TellMe.ProviderApi.ISearchDataProvider.ProviderIcon*
  commentId: Overload:Sdl.TellMe.ProviderApi.ISearchDataProvider.ProviderIcon
  isExternal: true
  name: ProviderIcon
  nameWithType: ISearchDataProvider.ProviderIcon
  fullName: Sdl.TellMe.ProviderApi.ISearchDataProvider.ProviderIcon
- uid: System.Drawing.Icon
  isExternal: true
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
