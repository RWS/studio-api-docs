### YamlMime:ManagedReference
items:
- uid: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute
  commentId: T:Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute
  id: RibbonGroupAttribute
  parent: Sdl.Desktop.IntegrationApi.Extensions
  children:
  - Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor(System.String)
  - Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor(System.String,System.String)
  - Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor(System.String,System.String,System.Type)
  - Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor(System.String,System.Type)
  langs:
  - csharp
  - vb
  name: RibbonGroupAttribute
  nameWithType: RibbonGroupAttribute
  fullName: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute
  type: Class
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions
  summary: "\nDecorate a ribbon group of a Studio application provinding metadata informations\n"
  remarks: "\n<p>\nThe framework also provides support for getting property values from the PluginResources.resx resource file, which is deployed together with the plug-in manifest.\n            To specify that the value of a certain string property needs to be retrieved from the resource file, annotate the property definition with the <xref href=\"Sdl.Core.PluginFramework.PluginResourceAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute.\n            Users should now specify the name of the resource key, instead of the actual value, as the property value. When no resource string with the specified key can be found,\n            the framework keeps the specified string as the property value. To define non-string properties whose value is stored in the PluginResources.resx resource file, create a string property, which value\n            should be set to a resource key. When consuming the extension, use <xref href=\"Sdl.Core.PluginFramework.IPlugin.GetPluginResource%60%601(System.String)\" data-throw-if-not-resolved=\"false\"></xref> tio retriece the resource from\n            the plug-in resource file.\n\n</p>\n"
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Class)]

      public class RibbonGroupAttribute : AbstractCommandBarItemAttribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Class)>

      Public Class RibbonGroupAttribute

          Inherits AbstractCommandBarItemAttribute
  inheritance:
  - System.Object
  - Sdl.Desktop.IntegrationApi.Extensions.AbstractCommandBarItemAttribute
  inheritedMembers:
  - Sdl.Desktop.IntegrationApi.Extensions.AbstractCommandBarItemAttribute.ContextByType
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 4
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor(System.String,System.String,System.Type)
  commentId: M:Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor(System.String,System.String,System.Type)
  id: '#ctor(System.String,System.String,System.Type)'
  parent: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute
  langs:
  - csharp
  - vb
  name: RibbonGroupAttribute(String, String, Type)
  nameWithType: RibbonGroupAttribute.RibbonGroupAttribute(String, String, Type)
  fullName: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.RibbonGroupAttribute(System.String, System.String, System.Type)
  type: Constructor
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions
  summary: "\nInitialize the instance of the ribbon group attribute\n"
  syntax:
    content: public RibbonGroupAttribute(string id, string name, Type contextByType)
    parameters:
    - id: id
      type: System.String
      description: The unique identifier of the ribbon group
    - id: name
      type: System.String
      description: 'The name that will be displayed by the ribbon group. '
    - id: contextByType
      type: System.Type
      description: The context in which the ribbon is working
    content.vb: Public Sub New(id As String, name As String, contextByType As Type)
  overload: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor(System.String,System.String)
  commentId: M:Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute
  langs:
  - csharp
  - vb
  name: RibbonGroupAttribute(String, String)
  nameWithType: RibbonGroupAttribute.RibbonGroupAttribute(String, String)
  fullName: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.RibbonGroupAttribute(System.String, System.String)
  type: Constructor
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions
  summary: "\nInitialize the instance of the ribbon group attribute\n"
  syntax:
    content: public RibbonGroupAttribute(string id, string name)
    parameters:
    - id: id
      type: System.String
      description: The unique identifier of the ribbon group
    - id: name
      type: System.String
      description: 'The name that will be displayed by the ribbon group. '
    content.vb: Public Sub New(id As String, name As String)
  overload: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor(System.String,System.Type)
  commentId: M:Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute
  langs:
  - csharp
  - vb
  name: RibbonGroupAttribute(String, Type)
  nameWithType: RibbonGroupAttribute.RibbonGroupAttribute(String, Type)
  fullName: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.RibbonGroupAttribute(System.String, System.Type)
  type: Constructor
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions
  summary: "\nInitialize the instance of the ribbon group attribute \n"
  remarks: "\n<p>\nThis constructor should be used only if pluginresources are used to resolve the name and description of the extension.\n</p>\n<p>\nThe resource keys for name and description are built from id and postfixed with _Name and _Description.\n</p>\n"
  syntax:
    content: public RibbonGroupAttribute(string id, Type contextByType)
    parameters:
    - id: id
      type: System.String
      description: The unique identifier of the ribbon group
    - id: contextByType
      type: System.Type
      description: The context in which the ribbon group is available and enabled.
    content.vb: Public Sub New(id As String, contextByType As Type)
  overload: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor(System.String)
  commentId: M:Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute
  langs:
  - csharp
  - vb
  name: RibbonGroupAttribute(String)
  nameWithType: RibbonGroupAttribute.RibbonGroupAttribute(String)
  fullName: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.RibbonGroupAttribute(System.String)
  type: Constructor
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions
  summary: "\nInitialize the instance of the ribbon group attribute \n"
  remarks: "\n<p>\nThis constructor should be used only if pluginresources are used to resolve the name and description of the extension.\n</p>\n<p>\nThe resource keys for name and description are built from id and postfixed with _Name and _Description.\n</p>\n"
  syntax:
    content: public RibbonGroupAttribute(string id)
    parameters:
    - id: id
      type: System.String
      description: The unique identifier of the ribbon group
    content.vb: Public Sub New(id As String)
  overload: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.Desktop.IntegrationApi.Extensions
  commentId: N:Sdl.Desktop.IntegrationApi.Extensions
  isExternal: true
  name: Sdl.Desktop.IntegrationApi.Extensions
  nameWithType: Sdl.Desktop.IntegrationApi.Extensions
  fullName: Sdl.Desktop.IntegrationApi.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.Desktop.IntegrationApi.Extensions.AbstractCommandBarItemAttribute
  commentId: T:Sdl.Desktop.IntegrationApi.Extensions.AbstractCommandBarItemAttribute
  parent: Sdl.Desktop.IntegrationApi.Extensions
  isExternal: true
  name: AbstractCommandBarItemAttribute
  nameWithType: AbstractCommandBarItemAttribute
  fullName: Sdl.Desktop.IntegrationApi.Extensions.AbstractCommandBarItemAttribute
- uid: Sdl.Desktop.IntegrationApi.Extensions.AbstractCommandBarItemAttribute.ContextByType
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.AbstractCommandBarItemAttribute.ContextByType
  parent: Sdl.Desktop.IntegrationApi.Extensions.AbstractCommandBarItemAttribute
  isExternal: true
  name: ContextByType
  nameWithType: AbstractCommandBarItemAttribute.ContextByType
  fullName: Sdl.Desktop.IntegrationApi.Extensions.AbstractCommandBarItemAttribute.ContextByType
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.#ctor
  isExternal: true
  name: RibbonGroupAttribute
  nameWithType: RibbonGroupAttribute.RibbonGroupAttribute
  fullName: Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupAttribute.RibbonGroupAttribute
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
