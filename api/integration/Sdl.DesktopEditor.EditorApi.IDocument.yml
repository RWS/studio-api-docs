### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.IDocument
  commentId: T:Sdl.DesktopEditor.EditorApi.IDocument
  id: IDocument
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange
  - Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted
  - Sdl.DesktopEditor.EditorApi.IDocument.ContentChanged
  - Sdl.DesktopEditor.EditorApi.IDocument.Copy
  - Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText(System.Boolean)
  - Sdl.DesktopEditor.EditorApi.IDocument.Delete
  - Sdl.DesktopEditor.EditorApi.IDocument.EditOperationCompleting
  - Sdl.DesktopEditor.EditorApi.IDocument.EditOperationStarting
  - Sdl.DesktopEditor.EditorApi.IDocument.IsDirty
  - Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  - Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
  - Sdl.DesktopEditor.EditorApi.IDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  - Sdl.DesktopEditor.EditorApi.IDocument.RootContainer
  - Sdl.DesktopEditor.EditorApi.IDocument.UndoBuffer
  langs:
  - csharp
  - vb
  name: IDocument
  nameWithType: IDocument
  fullName: Sdl.DesktopEditor.EditorApi.IDocument
  type: Interface
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: The document is the container for all data displayed in the editor.
  remarks: >-
    <p>

    The document content is typically manipulated through the 

    <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.Selection" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: 'public interface IDocument : IDisposable'
    content.vb: Public Interface IDocument Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
- uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  commentId: M:Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  id: MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  langs:
  - csharp
  - vb
  name: MoveActiveRange(ContentRange)
  nameWithType: IDocument.MoveActiveRange(ContentRange)
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Method allowing the client to set the <xref href="Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange" data-throw-if-not-resolved="false"></xref> to the range provided.
  example: []
  syntax:
    content: void MoveActiveRange(ContentRange range)
    parameters:
    - id: range
      type: Sdl.DesktopEditor.EditorApi.ContentRange
      description: The range to move the active range to. This must be from the same document.
    content.vb: Sub MoveActiveRange(range As ContentRange)
  overload: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange*
- uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
  commentId: M:Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
  id: MoveActiveRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  langs:
  - csharp
  - vb
  name: MoveActiveRange(IContentSelection)
  nameWithType: IDocument.MoveActiveRange(IContentSelection)
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Method allowing the client to set the <xref href="Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange" data-throw-if-not-resolved="false"></xref> to the location

    corresponding to the selection.
  example: []
  syntax:
    content: void MoveActiveRange(IContentSelection selection)
    parameters:
    - id: selection
      type: Sdl.DesktopEditor.EditorApi.IContentSelection
      description: >-
        The selection corresponding to the range to move to.
                    This must be from an edit control using the same document.
    content.vb: Sub MoveActiveRange(selection As IContentSelection)
  overload: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange*
- uid: Sdl.DesktopEditor.EditorApi.IDocument.Delete
  commentId: M:Sdl.DesktopEditor.EditorApi.IDocument.Delete
  id: Delete
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  langs:
  - csharp
  - vb
  name: Delete()
  nameWithType: IDocument.Delete()
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.Delete()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Delete the current content of the active range.
  remarks: >-
    <p>

    After delete the <xref href="Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange" data-throw-if-not-resolved="false"></xref> spans the location of the deleted content.

    </p>

    <p>Note that the range is not necessarily empty after this operation. 

    For example, it may contain ghost tags.</p>
  example: []
  syntax:
    content: void Delete()
    content.vb: Sub Delete()
  overload: Sdl.DesktopEditor.EditorApi.IDocument.Delete*
- uid: Sdl.DesktopEditor.EditorApi.IDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  commentId: M:Sdl.DesktopEditor.EditorApi.IDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  id: Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  langs:
  - csharp
  - vb
  name: Replace(IDocumentFragment)
  nameWithType: IDocument.Replace(IDocumentFragment)
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Replace the content of the active range with the content of the document fragment.
  remarks: >-
    <p>

    After execution the <xref href="Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange" data-throw-if-not-resolved="false"></xref> spans the inserted content.

    </p>
  example: []
  syntax:
    content: void Replace(IDocumentFragment newContent)
    parameters:
    - id: newContent
      type: Sdl.DesktopEditor.EditorApi.IDocumentFragment
      description: The document fragment containing the content to replace.
    content.vb: Sub Replace(newContent As IDocumentFragment)
  overload: Sdl.DesktopEditor.EditorApi.IDocument.Replace*
- uid: Sdl.DesktopEditor.EditorApi.IDocument.Copy
  commentId: M:Sdl.DesktopEditor.EditorApi.IDocument.Copy
  id: Copy
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  langs:
  - csharp
  - vb
  name: Copy()
  nameWithType: IDocument.Copy()
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.Copy()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Gets a detached copy of the active range content.
  example: []
  syntax:
    content: IDocumentFragment Copy()
    return:
      type: Sdl.DesktopEditor.EditorApi.IDocumentFragment
      description: A copy of the content contained in the active range.
    content.vb: Function Copy() As IDocumentFragment
  overload: Sdl.DesktopEditor.EditorApi.IDocument.Copy*
- uid: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText(System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText(System.Boolean)
  id: CopyAsText(System.Boolean)
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  langs:
  - csharp
  - vb
  name: CopyAsText(bool)
  nameWithType: IDocument.CopyAsText(bool)
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText(bool)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Get the plain text content of the active range, as suited for Windows clipboard operations.


    If writeSegmentsAsLineBreaks is true we will write a line break for every segment.
  example: []
  syntax:
    content: string CopyAsText(bool writeSegmentsAsLineBreaks)
    parameters:
    - id: writeSegmentsAsLineBreaks
      type: System.Boolean
    return:
      type: System.String
      description: ''
    content.vb: Function CopyAsText(writeSegmentsAsLineBreaks As Boolean) As String
  overload: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText*
  nameWithType.vb: IDocument.CopyAsText(Boolean)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText(Boolean)
  name.vb: CopyAsText(Boolean)
- uid: Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange
  commentId: P:Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange
  id: ActiveRange
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  langs:
  - csharp
  - vb
  name: ActiveRange
  nameWithType: IDocument.ActiveRange
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    The range in the document on which operations such as <xref href="Sdl.DesktopEditor.EditorApi.IDocument.Delete" data-throw-if-not-resolved="false"></xref>, 

    <xref href="Sdl.DesktopEditor.EditorApi.IDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)" data-throw-if-not-resolved="false"></xref> etc. are executed.
  remarks: >-
    <p>

    The range is intended as a read-only object. Changing its properties

    will NOT move the active range in the document. Use <xref href="Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)" data-throw-if-not-resolved="false"></xref> to

    explicitly change the active range in the document.

    </p>

    <p>

    API clients set the active range before executing methods on the document. The range

    is also updated by methods that modify document content.

    </p>
  example: []
  syntax:
    content: ContentRange ActiveRange { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.ContentRange
    content.vb: ReadOnly Property ActiveRange As ContentRange
  overload: Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange*
- uid: Sdl.DesktopEditor.EditorApi.IDocument.RootContainer
  commentId: P:Sdl.DesktopEditor.EditorApi.IDocument.RootContainer
  id: RootContainer
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  langs:
  - csharp
  - vb
  name: RootContainer
  nameWithType: IDocument.RootContainer
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.RootContainer
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: The root container of all content in the document.
  example: []
  syntax:
    content: IAbstractContainerNode RootContainer { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
    content.vb: ReadOnly Property RootContainer As IAbstractContainerNode
  overload: Sdl.DesktopEditor.EditorApi.IDocument.RootContainer*
- uid: Sdl.DesktopEditor.EditorApi.IDocument.IsDirty
  commentId: P:Sdl.DesktopEditor.EditorApi.IDocument.IsDirty
  id: IsDirty
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  langs:
  - csharp
  - vb
  name: IsDirty
  nameWithType: IDocument.IsDirty
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.IsDirty
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    If <code>true</code> this indicates that the document content has been changed since the

    last time this flag was reset.
  remarks: >-
    <p>

    The edit control automatically sets this flag to <code>true</code> every time some content 

    changes in the editor (through API or user action).

    </p>

    <p>

    Set this flag to <code>false</code> when the document is saved. That allows you to keep track

    of whether any changes have been made to it in order to determine if

    the document may need to be saved again at a later point.

    </p>

    <p>

    Since the editor does not provide Open/Save operations it is the API client's responsibility

    to reset this flag after such operations.

    </p>
  example: []
  syntax:
    content: bool IsDirty { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsDirty As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IDocument.IsDirty*
- uid: Sdl.DesktopEditor.EditorApi.IDocument.UndoBuffer
  commentId: P:Sdl.DesktopEditor.EditorApi.IDocument.UndoBuffer
  id: UndoBuffer
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  langs:
  - csharp
  - vb
  name: UndoBuffer
  nameWithType: IDocument.UndoBuffer
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.UndoBuffer
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: The Undo/Redo buffer used for editing operations on the document content.
  remarks: >-
    Note: There is no need to go through the undo buffer to invoke
                the 'Undo' and 'Redo' commands for the editor. If the edit control is available it is
                preferable to call <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.Undo" data-throw-if-not-resolved="false"></xref> and <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.Redo" data-throw-if-not-resolved="false"></xref>
                directly as this will allow the control to update user selection and caret positioning.
  example: []
  syntax:
    content: IUndoBuffer UndoBuffer { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IUndoBuffer
    content.vb: ReadOnly Property UndoBuffer As IUndoBuffer
  overload: Sdl.DesktopEditor.EditorApi.IDocument.UndoBuffer*
- uid: Sdl.DesktopEditor.EditorApi.IDocument.ContentChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IDocument.ContentChanged
  id: ContentChanged
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  langs:
  - csharp
  - vb
  name: ContentChanged
  nameWithType: IDocument.ContentChanged
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.ContentChanged
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Fired when content in the document is changed in any way.
  remarks: >-
    <p>

    This event is typcially fired immediately when the content is changed, which

    can be before the controls displaying the content have been updated.

    </p>
  example: []
  syntax:
    content: event EventHandler<DocumentContentChangedEventArgs> ContentChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.DocumentContentChangedEventArgs}
    content.vb: Event ContentChanged As EventHandler(Of DocumentContentChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted
  commentId: E:Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted
  id: AfterEditOperationAborted
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  langs:
  - csharp
  - vb
  name: AfterEditOperationAborted
  nameWithType: IDocument.AfterEditOperationAborted
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    If an edit operation in the control is aborted (i.e. an exception is thrown)

    this event will be fired after the corresponding composite operation has been 

    rolled back.
  example: []
  syntax:
    content: event EventHandler<EditOperationAbortedEventArgs> AfterEditOperationAborted
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.EditOperationAbortedEventArgs}
    content.vb: Event AfterEditOperationAborted As EventHandler(Of EditOperationAbortedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IDocument.EditOperationCompleting
  commentId: E:Sdl.DesktopEditor.EditorApi.IDocument.EditOperationCompleting
  id: EditOperationCompleting
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  langs:
  - csharp
  - vb
  name: EditOperationCompleting
  nameWithType: IDocument.EditOperationCompleting
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.EditOperationCompleting
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    This event is fired when a (composite) edit operation is completing. You can

    handle this event to determine what changes are allowed in the edit control,

    by examining the edit operations (e.g. using a visitor) and throwing a 

    <xref href="Sdl.DesktopEditor.EditorApi.InvalidEditOperationException" data-throw-if-not-resolved="false"></xref> if the changes are not to your liking.
  remarks: >-
    <p>

    The message of the <xref href="Sdl.DesktopEditor.EditorApi.InvalidEditOperationException" data-throw-if-not-resolved="false"></xref> is passed to the 

    <xref href="Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted" data-throw-if-not-resolved="false"></xref> event

    and may be shown to the user to explain why the edit was not permitted.

    </p>

    <p>

    Avoid throwing exceptions of other types in this event handler. 

    If an exception of another type is thrown the operation will still be aborted, but

    the message passed to <xref href="Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted" data-throw-if-not-resolved="false"></xref> 

    will be what <code>System.Exception.ToString()</code> returns, which cannot be considered user friendly.

    </p>

    <p>

    Important: Do not call <xref href="Sdl.DesktopEditor.EditorApi.IUndoBuffer.AbortCompositeOperation(System.String)" data-throw-if-not-resolved="false"></xref> from this event handler. 

    That could yield unpredictable results since the operation is completing as a result of a 

    call to <xref href="Sdl.DesktopEditor.EditorApi.IUndoBuffer.EndCompositeOperation" data-throw-if-not-resolved="false"></xref> (or a similar internal mechanism inside

    the edit control implementation) and the number of calls to <xref href="Sdl.DesktopEditor.EditorApi.IUndoBuffer.BeginCompositeOperation(System.String)" data-throw-if-not-resolved="false"></xref>

    must always match the number of calls to <xref href="Sdl.DesktopEditor.EditorApi.IUndoBuffer.EndCompositeOperation" data-throw-if-not-resolved="false"></xref> plus

    the number of calls to <xref href="Sdl.DesktopEditor.EditorApi.IUndoBuffer.AbortCompositeOperation(System.String)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: event EventHandler<EditOperationCompletingEventArgs> EditOperationCompleting
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.EditOperationCompletingEventArgs}
    content.vb: Event EditOperationCompleting As EventHandler(Of EditOperationCompletingEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IDocument.EditOperationStarting
  commentId: E:Sdl.DesktopEditor.EditorApi.IDocument.EditOperationStarting
  id: EditOperationStarting
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  langs:
  - csharp
  - vb
  name: EditOperationStarting
  nameWithType: IDocument.EditOperationStarting
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.EditOperationStarting
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    This event is fired when a (composite) edit operation is started, there are no changes done at

    this moment to the internal document structure. You can handle this event to determine what changes

    are allowed in the edit control or do last minute modifications before new content is interted/deleted modified,

    by examining the edit operations (e.g. using a visitor) and throwing a 

    <xref href="Sdl.DesktopEditor.EditorApi.InvalidEditOperationException" data-throw-if-not-resolved="false"></xref> if the changes are not to your liking.
  remarks: >-
    <p>

    The message of the <xref href="Sdl.DesktopEditor.EditorApi.InvalidEditOperationException" data-throw-if-not-resolved="false"></xref> is passed to the 

    <xref href="Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted" data-throw-if-not-resolved="false"></xref> event

    and may be shown to the user to explain why the edit was not permitted.

    </p>

    <p>

    Avoid throwing exceptions of other types in this event handler. 

    If an exception of another type is thrown the operation will still be aborted, but

    the message passed to <xref href="Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted" data-throw-if-not-resolved="false"></xref> 

    will be what <code>System.Exception.ToString()</code> returns, which cannot be considered user friendly.

    </p>

    <p>

    Important: Do not call <xref href="Sdl.DesktopEditor.EditorApi.IUndoBuffer.AbortCompositeOperation(System.String)" data-throw-if-not-resolved="false"></xref> from this event handler. 

    That could yield unpredictable results since the operation is completing as a result of a 

    call to <xref href="Sdl.DesktopEditor.EditorApi.IUndoBuffer.EndCompositeOperation" data-throw-if-not-resolved="false"></xref> (or a similar internal mechanism inside

    the edit control implementation) and the number of calls to <xref href="Sdl.DesktopEditor.EditorApi.IUndoBuffer.BeginCompositeOperation(System.String)" data-throw-if-not-resolved="false"></xref>

    must always match the number of calls to <xref href="Sdl.DesktopEditor.EditorApi.IUndoBuffer.EndCompositeOperation" data-throw-if-not-resolved="false"></xref> plus

    the number of calls to <xref href="Sdl.DesktopEditor.EditorApi.IUndoBuffer.AbortCompositeOperation(System.String)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: event EventHandler<EditOperationCompletingEventArgs> EditOperationStarting
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.EditOperationCompletingEventArgs}
    content.vb: Event EditOperationStarting As EventHandler(Of EditOperationCompletingEventArgs)
references:
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Selection
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.Selection
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Selection
  name: Selection
  nameWithType: IEditControl.Selection
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Selection
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.html
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.DesktopEditor
    name: DesktopEditor
    isExternal: true
    href: Sdl.DesktopEditor.html
  - name: .
  - uid: Sdl.DesktopEditor.EditorApi
    name: EditorApi
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.DesktopEditor
    name: DesktopEditor
    isExternal: true
    href: Sdl.DesktopEditor.html
  - name: .
  - uid: Sdl.DesktopEditor.EditorApi
    name: EditorApi
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.html
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  name: ForWindowFromFrameworkElement(object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Windows.Window
    name: Window
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.window
  - name: '>'
  - name: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Windows.Window
    name: Window
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.window
  - name: )
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl
  commentId: T:Sdl.DesktopEditor.EditorApi.IEditControl
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html
  name: IEditControl
  nameWithType: IEditControl
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  name: ForWindowFromFrameworkElement(object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Windows.Window
    name: Window
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.window
  - name: '>'
  - name: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Windows.Window
    name: Window
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.window
  - name: )
  - name: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  href: Sdl.html
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Desktop
    name: Desktop
    isExternal: true
    href: Sdl.Desktop.html
  - name: .
  - uid: Sdl.Desktop.Platform
    name: Platform
    isExternal: true
    href: Sdl.Desktop.Platform.html
  - name: .
  - uid: Sdl.Desktop.Platform.Controls
    name: Controls
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.html
  - name: .
  - uid: Sdl.Desktop.Platform.Controls.Controls
    name: Controls
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Desktop
    name: Desktop
    isExternal: true
    href: Sdl.Desktop.html
  - name: .
  - uid: Sdl.Desktop.Platform
    name: Platform
    isExternal: true
    href: Sdl.Desktop.Platform.html
  - name: .
  - uid: Sdl.Desktop.Platform.Controls
    name: Controls
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.html
  - name: .
  - uid: Sdl.Desktop.Platform.Controls.Controls
    name: Controls
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.html
- uid: Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange
  commentId: P:Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_ActiveRange
  name: ActiveRange
  nameWithType: IDocument.ActiveRange
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange
- uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_MoveActiveRange_Sdl_DesktopEditor_EditorApi_ContentRange_
  name: MoveActiveRange
  nameWithType: IDocument.MoveActiveRange
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange
- uid: Sdl.DesktopEditor.EditorApi.ContentRange
  commentId: T:Sdl.DesktopEditor.EditorApi.ContentRange
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.ContentRange.html
  name: ContentRange
  nameWithType: ContentRange
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange
- uid: Sdl.DesktopEditor.EditorApi.IDocument
  commentId: T:Sdl.DesktopEditor.EditorApi.IDocument
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocument.html
  name: IDocument
  nameWithType: IDocument
  fullName: Sdl.DesktopEditor.EditorApi.IDocument
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection
  commentId: T:Sdl.DesktopEditor.EditorApi.IContentSelection
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html
  name: IContentSelection
  nameWithType: IContentSelection
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection
- uid: Sdl.DesktopEditor.EditorApi.IDocument.Delete*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IDocument.Delete
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_Delete
  name: Delete
  nameWithType: IDocument.Delete
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.Delete
- uid: Sdl.DesktopEditor.EditorApi.IDocument.Replace*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IDocument.Replace
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_Replace_Sdl_DesktopEditor_EditorApi_IDocumentFragment_
  name: Replace
  nameWithType: IDocument.Replace
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.Replace
- uid: Sdl.DesktopEditor.EditorApi.IDocumentFragment
  commentId: T:Sdl.DesktopEditor.EditorApi.IDocumentFragment
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocumentFragment.html
  name: IDocumentFragment
  nameWithType: IDocumentFragment
  fullName: Sdl.DesktopEditor.EditorApi.IDocumentFragment
- uid: Sdl.DesktopEditor.EditorApi.IDocument.Copy*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IDocument.Copy
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_Copy
  name: Copy
  nameWithType: IDocument.Copy
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.Copy
- uid: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_CopyAsText_System_Boolean_
  name: CopyAsText
  nameWithType: IDocument.CopyAsText
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Sdl.DesktopEditor.EditorApi.IDocument.Delete
  commentId: M:Sdl.DesktopEditor.EditorApi.IDocument.Delete
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_Delete
  name: Delete()
  nameWithType: IDocument.Delete()
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.Delete()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.Delete
    name: Delete
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_Delete
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.Delete
    name: Delete
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_Delete
  - name: (
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  commentId: M:Sdl.DesktopEditor.EditorApi.IDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_Replace_Sdl_DesktopEditor_EditorApi_IDocumentFragment_
  name: Replace(IDocumentFragment)
  nameWithType: IDocument.Replace(IDocumentFragment)
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
    name: Replace
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_Replace_Sdl_DesktopEditor_EditorApi_IDocumentFragment_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.IDocumentFragment
    name: IDocumentFragment
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IDocumentFragment.html
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
    name: Replace
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_Replace_Sdl_DesktopEditor_EditorApi_IDocumentFragment_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.IDocumentFragment
    name: IDocumentFragment
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IDocumentFragment.html
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  commentId: M:Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_MoveActiveRange_Sdl_DesktopEditor_EditorApi_ContentRange_
  name: MoveActiveRange(ContentRange)
  nameWithType: IDocument.MoveActiveRange(ContentRange)
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
    name: MoveActiveRange
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_MoveActiveRange_Sdl_DesktopEditor_EditorApi_ContentRange_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.ContentRange
    name: ContentRange
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ContentRange.html
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
    name: MoveActiveRange
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_MoveActiveRange_Sdl_DesktopEditor_EditorApi_ContentRange_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.ContentRange
    name: ContentRange
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ContentRange.html
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_ActiveRange
  name: ActiveRange
  nameWithType: IDocument.ActiveRange
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange
- uid: Sdl.DesktopEditor.EditorApi.IDocument.RootContainer*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IDocument.RootContainer
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_RootContainer
  name: RootContainer
  nameWithType: IDocument.RootContainer
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.RootContainer
- uid: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
  commentId: T:Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.html
  name: IAbstractContainerNode
  nameWithType: IAbstractContainerNode
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
- uid: Sdl.DesktopEditor.EditorApi.IDocument.IsDirty*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IDocument.IsDirty
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_IsDirty
  name: IsDirty
  nameWithType: IDocument.IsDirty
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.IsDirty
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Undo
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.Undo
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Undo
  name: Undo()
  nameWithType: IEditControl.Undo()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Undo()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.Undo
    name: Undo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Undo
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.Undo
    name: Undo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Undo
  - name: (
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Redo
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.Redo
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Redo
  name: Redo()
  nameWithType: IEditControl.Redo()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Redo()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.Redo
    name: Redo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Redo
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.Redo
    name: Redo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Redo
  - name: (
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IDocument.UndoBuffer*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IDocument.UndoBuffer
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_UndoBuffer
  name: UndoBuffer
  nameWithType: IDocument.UndoBuffer
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.UndoBuffer
- uid: Sdl.DesktopEditor.EditorApi.IUndoBuffer
  commentId: T:Sdl.DesktopEditor.EditorApi.IUndoBuffer
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IUndoBuffer.html
  name: IUndoBuffer
  nameWithType: IUndoBuffer
  fullName: Sdl.DesktopEditor.EditorApi.IUndoBuffer
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.DocumentContentChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.DocumentContentChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<DocumentContentChangedEventArgs>
  nameWithType: EventHandler<DocumentContentChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.DocumentContentChangedEventArgs>
  nameWithType.vb: EventHandler(Of DocumentContentChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.DocumentContentChangedEventArgs)
  name.vb: EventHandler(Of DocumentContentChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.DocumentContentChangedEventArgs
    name: DocumentContentChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.DocumentContentChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.DocumentContentChangedEventArgs
    name: DocumentContentChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.DocumentContentChangedEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.EditOperationAbortedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.EditOperationAbortedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<EditOperationAbortedEventArgs>
  nameWithType: EventHandler<EditOperationAbortedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.EditOperationAbortedEventArgs>
  nameWithType.vb: EventHandler(Of EditOperationAbortedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.EditOperationAbortedEventArgs)
  name.vb: EventHandler(Of EditOperationAbortedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.EditOperationAbortedEventArgs
    name: EditOperationAbortedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.EditOperationAbortedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.EditOperationAbortedEventArgs
    name: EditOperationAbortedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.EditOperationAbortedEventArgs.html
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.InvalidEditOperationException
  commentId: T:Sdl.DesktopEditor.EditorApi.InvalidEditOperationException
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.InvalidEditOperationException.html
  name: InvalidEditOperationException
  nameWithType: InvalidEditOperationException
  fullName: Sdl.DesktopEditor.EditorApi.InvalidEditOperationException
- uid: Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted
  commentId: E:Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocument.html#Sdl_DesktopEditor_EditorApi_IDocument_AfterEditOperationAborted
  name: AfterEditOperationAborted
  nameWithType: IDocument.AfterEditOperationAborted
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted
- uid: Sdl.DesktopEditor.EditorApi.IUndoBuffer.AbortCompositeOperation(System.String)
  commentId: M:Sdl.DesktopEditor.EditorApi.IUndoBuffer.AbortCompositeOperation(System.String)
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IUndoBuffer.html#Sdl_DesktopEditor_EditorApi_IUndoBuffer_AbortCompositeOperation_System_String_
  name: AbortCompositeOperation(string)
  nameWithType: IUndoBuffer.AbortCompositeOperation(string)
  fullName: Sdl.DesktopEditor.EditorApi.IUndoBuffer.AbortCompositeOperation(string)
  nameWithType.vb: IUndoBuffer.AbortCompositeOperation(String)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IUndoBuffer.AbortCompositeOperation(String)
  name.vb: AbortCompositeOperation(String)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IUndoBuffer.AbortCompositeOperation(System.String)
    name: AbortCompositeOperation
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IUndoBuffer.html#Sdl_DesktopEditor_EditorApi_IUndoBuffer_AbortCompositeOperation_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IUndoBuffer.AbortCompositeOperation(System.String)
    name: AbortCompositeOperation
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IUndoBuffer.html#Sdl_DesktopEditor_EditorApi_IUndoBuffer_AbortCompositeOperation_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IUndoBuffer.EndCompositeOperation
  commentId: M:Sdl.DesktopEditor.EditorApi.IUndoBuffer.EndCompositeOperation
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IUndoBuffer.html#Sdl_DesktopEditor_EditorApi_IUndoBuffer_EndCompositeOperation
  name: EndCompositeOperation()
  nameWithType: IUndoBuffer.EndCompositeOperation()
  fullName: Sdl.DesktopEditor.EditorApi.IUndoBuffer.EndCompositeOperation()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IUndoBuffer.EndCompositeOperation
    name: EndCompositeOperation
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IUndoBuffer.html#Sdl_DesktopEditor_EditorApi_IUndoBuffer_EndCompositeOperation
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IUndoBuffer.EndCompositeOperation
    name: EndCompositeOperation
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IUndoBuffer.html#Sdl_DesktopEditor_EditorApi_IUndoBuffer_EndCompositeOperation
  - name: (
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IUndoBuffer.BeginCompositeOperation(System.String)
  commentId: M:Sdl.DesktopEditor.EditorApi.IUndoBuffer.BeginCompositeOperation(System.String)
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IUndoBuffer.html#Sdl_DesktopEditor_EditorApi_IUndoBuffer_BeginCompositeOperation_System_String_
  name: BeginCompositeOperation(string)
  nameWithType: IUndoBuffer.BeginCompositeOperation(string)
  fullName: Sdl.DesktopEditor.EditorApi.IUndoBuffer.BeginCompositeOperation(string)
  nameWithType.vb: IUndoBuffer.BeginCompositeOperation(String)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IUndoBuffer.BeginCompositeOperation(String)
  name.vb: BeginCompositeOperation(String)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IUndoBuffer.BeginCompositeOperation(System.String)
    name: BeginCompositeOperation
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IUndoBuffer.html#Sdl_DesktopEditor_EditorApi_IUndoBuffer_BeginCompositeOperation_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IUndoBuffer.BeginCompositeOperation(System.String)
    name: BeginCompositeOperation
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IUndoBuffer.html#Sdl_DesktopEditor_EditorApi_IUndoBuffer_BeginCompositeOperation_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.EditOperationCompletingEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.EditOperationCompletingEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<EditOperationCompletingEventArgs>
  nameWithType: EventHandler<EditOperationCompletingEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.EditOperationCompletingEventArgs>
  nameWithType.vb: EventHandler(Of EditOperationCompletingEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.EditOperationCompletingEventArgs)
  name.vb: EventHandler(Of EditOperationCompletingEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.EditOperationCompletingEventArgs
    name: EditOperationCompletingEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.EditOperationCompletingEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.EditOperationCompletingEventArgs
    name: EditOperationCompletingEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.EditOperationCompletingEventArgs.html
  - name: )
