### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations
  id: SegmentOperations
  parent: Sdl.TranslationStudioAutomation.IntegrationApi
  children:
  - Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations.GetEditDistanceAsync(Sdl.FileTypeSupport.Framework.BilingualApi.ISegment,Sdl.FileTypeSupport.Framework.BilingualApi.ISegment,Sdl.Core.Globalization.CultureCode,Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams)
  - Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations.GetWordCountAsync(Sdl.FileTypeSupport.Framework.BilingualApi.ISegment,Sdl.Core.Globalization.CultureCode)
  langs:
  - csharp
  - vb
  name: SegmentOperations
  nameWithType: SegmentOperations
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations
  type: Class
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  syntax:
    content: public static class SegmentOperations
    content.vb: Public Module SegmentOperations
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations.GetEditDistanceAsync(Sdl.FileTypeSupport.Framework.BilingualApi.ISegment,Sdl.FileTypeSupport.Framework.BilingualApi.ISegment,Sdl.Core.Globalization.CultureCode,Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations.GetEditDistanceAsync(Sdl.FileTypeSupport.Framework.BilingualApi.ISegment,Sdl.FileTypeSupport.Framework.BilingualApi.ISegment,Sdl.Core.Globalization.CultureCode,Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams)
  id: GetEditDistanceAsync(Sdl.FileTypeSupport.Framework.BilingualApi.ISegment,Sdl.FileTypeSupport.Framework.BilingualApi.ISegment,Sdl.Core.Globalization.CultureCode,Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations
  langs:
  - csharp
  - vb
  name: GetEditDistanceAsync(ISegment, ISegment, CultureCode, EditDistanceComputeParams)
  nameWithType: SegmentOperations.GetEditDistanceAsync(ISegment, ISegment, CultureCode, EditDistanceComputeParams)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations.GetEditDistanceAsync(Sdl.FileTypeSupport.Framework.BilingualApi.ISegment, Sdl.FileTypeSupport.Framework.BilingualApi.ISegment, Sdl.Core.Globalization.CultureCode, Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  syntax:
    content: public static Task<EditDistance> GetEditDistanceAsync(ISegment original, ISegment updated, CultureCode cultureCode, EditDistanceComputeParams computeParams)
    parameters:
    - id: original
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegment
    - id: updated
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegment
    - id: cultureCode
      type: Sdl.Core.Globalization.CultureCode
    - id: computeParams
      type: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.EditDistance.EditDistance}
    content.vb: Public Shared Function GetEditDistanceAsync(original As ISegment, updated As ISegment, cultureCode As CultureCode, computeParams As EditDistanceComputeParams) As Task(Of EditDistance)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations.GetEditDistanceAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations.GetWordCountAsync(Sdl.FileTypeSupport.Framework.BilingualApi.ISegment,Sdl.Core.Globalization.CultureCode)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations.GetWordCountAsync(Sdl.FileTypeSupport.Framework.BilingualApi.ISegment,Sdl.Core.Globalization.CultureCode)
  id: GetWordCountAsync(Sdl.FileTypeSupport.Framework.BilingualApi.ISegment,Sdl.Core.Globalization.CultureCode)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations
  langs:
  - csharp
  - vb
  name: GetWordCountAsync(ISegment, CultureCode)
  nameWithType: SegmentOperations.GetWordCountAsync(ISegment, CultureCode)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations.GetWordCountAsync(Sdl.FileTypeSupport.Framework.BilingualApi.ISegment, Sdl.Core.Globalization.CultureCode)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  syntax:
    content: public static Task<WordCounts> GetWordCountAsync(ISegment segment, CultureCode cultureCode)
    parameters:
    - id: segment
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegment
    - id: cultureCode
      type: Sdl.Core.Globalization.CultureCode
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.WordCounts}
    content.vb: Public Shared Function GetWordCountAsync(segment As ISegment, cultureCode As CultureCode) As Task(Of WordCounts)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations.GetWordCountAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi
  commentId: N:Sdl.TranslationStudioAutomation.IntegrationApi
  isExternal: true
  name: Sdl.TranslationStudioAutomation.IntegrationApi
  nameWithType: Sdl.TranslationStudioAutomation.IntegrationApi
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations.GetEditDistanceAsync*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations.GetEditDistanceAsync
  isExternal: true
  name: GetEditDistanceAsync
  nameWithType: SegmentOperations.GetEditDistanceAsync
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations.GetEditDistanceAsync
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISegment
  isExternal: true
  name: ISegment
  nameWithType: ISegment
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISegment
- uid: Sdl.Core.Globalization.CultureCode
  isExternal: true
  name: CultureCode
  nameWithType: CultureCode
  fullName: Sdl.Core.Globalization.CultureCode
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams
  parent: Sdl.TranslationStudioAutomation.IntegrationApi
  isExternal: true
  name: EditDistanceComputeParams
  nameWithType: EditDistanceComputeParams
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams
- uid: System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.EditDistance.EditDistance}
  commentId: T:System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.EditDistance.EditDistance}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<EditDistance>
  nameWithType: Task<EditDistance>
  fullName: System.Threading.Tasks.Task<Sdl.LanguagePlatform.Core.EditDistance.EditDistance>
  nameWithType.vb: Task(Of EditDistance)
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.LanguagePlatform.Core.EditDistance.EditDistance)
  name.vb: Task(Of EditDistance)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
    name: EditDistance
    nameWithType: EditDistance
    fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
    name: EditDistance
    nameWithType: EditDistance
    fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations.GetWordCountAsync*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations.GetWordCountAsync
  isExternal: true
  name: GetWordCountAsync
  nameWithType: SegmentOperations.GetWordCountAsync
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.SegmentOperations.GetWordCountAsync
- uid: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.WordCounts}
  commentId: T:System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.WordCounts}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<WordCounts>
  nameWithType: Task<WordCounts>
  fullName: System.Threading.Tasks.Task<Sdl.LanguagePlatform.TranslationMemory.WordCounts>
  nameWithType.vb: Task(Of WordCounts)
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.LanguagePlatform.TranslationMemory.WordCounts)
  name.vb: Task(Of WordCounts)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts
    name: WordCounts
    nameWithType: WordCounts
    fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts
    name: WordCounts
    nameWithType: WordCounts
    fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
