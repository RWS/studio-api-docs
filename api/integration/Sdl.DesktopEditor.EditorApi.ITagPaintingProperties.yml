### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  commentId: T:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  id: ITagPaintingProperties
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor1
  - Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor2
  - Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.GhostBackgroundColor
  - Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.OutlineColor
  - Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  - Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  - Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextColor
  - Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextFormatting
  langs:
  - csharp
  - vb
  name: ITagPaintingProperties
  nameWithType: ITagPaintingProperties
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  type: Interface
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThis interface provides the properties used when painting tags in the document.\n"
  syntax:
    content: public interface ITagPaintingProperties
    content.vb: Public Interface ITagPaintingProperties
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  commentId: M:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  id: PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  parent: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  langs:
  - csharp
  - vb
  name: PopulateFromSettingsGroup(ISettingsGroup, String)
  nameWithType: ITagPaintingProperties.PopulateFromSettingsGroup(ISettingsGroup, String)
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup, System.String)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nPopulates this object with the settings contained in the provided settings group.\n"
  syntax:
    content: void PopulateFromSettingsGroup(ISettingsGroup settingsGroup, string settingId)
    parameters:
    - id: settingsGroup
      type: Sdl.Core.Settings.ISettingsGroup
      description: The settings to populate from.
    - id: settingId
      type: System.String
      description: The setting ID to use to save the settings.
    content.vb: Sub PopulateFromSettingsGroup(settingsGroup As ISettingsGroup, settingId As String)
  overload: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.PopulateFromSettingsGroup*
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  commentId: M:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  id: SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  parent: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  langs:
  - csharp
  - vb
  name: SaveToSettingsGroup(ISettingsGroup, String)
  nameWithType: ITagPaintingProperties.SaveToSettingsGroup(ISettingsGroup, String)
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup, System.String)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nSaves the current state of this object to the provided settings group.\n"
  syntax:
    content: void SaveToSettingsGroup(ISettingsGroup settingsGroup, string settingId)
    parameters:
    - id: settingsGroup
      type: Sdl.Core.Settings.ISettingsGroup
      description: The settings group to save to.
    - id: settingId
      type: System.String
      description: The setting ID to use to load the settings.
    content.vb: Sub SaveToSettingsGroup(settingsGroup As ISettingsGroup, settingId As String)
  overload: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.SaveToSettingsGroup*
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor1
  commentId: P:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor1
  id: BackgroundColor1
  parent: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  langs:
  - csharp
  - vb
  name: BackgroundColor1
  nameWithType: ITagPaintingProperties.BackgroundColor1
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor1
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe background color to start painting the tag with.  The tag will start with this color\nand gradually change into <xref href=\"Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor2\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: Color BackgroundColor1 { get; set; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: Property BackgroundColor1 As Color
  overload: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor1*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor2
  commentId: P:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor2
  id: BackgroundColor2
  parent: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  langs:
  - csharp
  - vb
  name: BackgroundColor2
  nameWithType: ITagPaintingProperties.BackgroundColor2
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor2
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe background color the finish painting the tag with.  The tag will start with\n<xref href=\"Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor1\" data-throw-if-not-resolved=\"false\"></xref> and finish with this color.\n"
  syntax:
    content: Color BackgroundColor2 { get; set; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: Property BackgroundColor2 As Color
  overload: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor2*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.GhostBackgroundColor
  commentId: P:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.GhostBackgroundColor
  id: GhostBackgroundColor
  parent: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  langs:
  - csharp
  - vb
  name: GhostBackgroundColor
  nameWithType: ITagPaintingProperties.GhostBackgroundColor
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.GhostBackgroundColor
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe color that will be used to paint the tag when it is a ghost tag.\n"
  syntax:
    content: Color GhostBackgroundColor { get; set; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: Property GhostBackgroundColor As Color
  overload: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.GhostBackgroundColor*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.OutlineColor
  commentId: P:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.OutlineColor
  id: OutlineColor
  parent: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  langs:
  - csharp
  - vb
  name: OutlineColor
  nameWithType: ITagPaintingProperties.OutlineColor
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.OutlineColor
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe color that will be used to paint the tag border.\n"
  syntax:
    content: Color OutlineColor { get; set; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: Property OutlineColor As Color
  overload: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.OutlineColor*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextColor
  commentId: P:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextColor
  id: TextColor
  parent: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  langs:
  - csharp
  - vb
  name: TextColor
  nameWithType: ITagPaintingProperties.TextColor
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextColor
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe color that will be used to paint the text that appears within the tag.\n"
  syntax:
    content: Color TextColor { get; set; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: Property TextColor As Color
  overload: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextColor*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextFormatting
  commentId: P:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextFormatting
  id: TextFormatting
  parent: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  langs:
  - csharp
  - vb
  name: TextFormatting
  nameWithType: ITagPaintingProperties.TextFormatting
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextFormatting
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe font that will be used for the text within the tag.\n"
  syntax:
    content: FontStyle TextFormatting { get; set; }
    parameters: []
    return:
      type: System.Drawing.FontStyle
    content.vb: Property TextFormatting As FontStyle
  overload: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextFormatting*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.PopulateFromSettingsGroup*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.PopulateFromSettingsGroup
  isExternal: true
  name: PopulateFromSettingsGroup
  nameWithType: ITagPaintingProperties.PopulateFromSettingsGroup
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.PopulateFromSettingsGroup
- uid: Sdl.Core.Settings.ISettingsGroup
  isExternal: true
  name: ISettingsGroup
  nameWithType: ISettingsGroup
  fullName: Sdl.Core.Settings.ISettingsGroup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.SaveToSettingsGroup*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.SaveToSettingsGroup
  isExternal: true
  name: SaveToSettingsGroup
  nameWithType: ITagPaintingProperties.SaveToSettingsGroup
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.SaveToSettingsGroup
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor1*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor1
  isExternal: true
  name: BackgroundColor1
  nameWithType: ITagPaintingProperties.BackgroundColor1
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor1
- uid: System.Drawing.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor2*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor2
  isExternal: true
  name: BackgroundColor2
  nameWithType: ITagPaintingProperties.BackgroundColor2
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor2
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.GhostBackgroundColor*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.GhostBackgroundColor
  isExternal: true
  name: GhostBackgroundColor
  nameWithType: ITagPaintingProperties.GhostBackgroundColor
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.GhostBackgroundColor
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.OutlineColor*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.OutlineColor
  isExternal: true
  name: OutlineColor
  nameWithType: ITagPaintingProperties.OutlineColor
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.OutlineColor
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextColor*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextColor
  isExternal: true
  name: TextColor
  nameWithType: ITagPaintingProperties.TextColor
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextColor
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextFormatting*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextFormatting
  isExternal: true
  name: TextFormatting
  nameWithType: ITagPaintingProperties.TextFormatting
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextFormatting
- uid: System.Drawing.FontStyle
  isExternal: true
  name: FontStyle
  nameWithType: FontStyle
  fullName: System.Drawing.FontStyle
