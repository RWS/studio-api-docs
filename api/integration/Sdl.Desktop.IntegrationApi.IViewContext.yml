### YamlMime:ManagedReference
items:
- uid: Sdl.Desktop.IntegrationApi.IViewContext
  commentId: T:Sdl.Desktop.IntegrationApi.IViewContext
  id: IViewContext
  parent: Sdl.Desktop.IntegrationApi
  children:
  - Sdl.Desktop.IntegrationApi.IViewContext.Available
  - Sdl.Desktop.IntegrationApi.IViewContext.AvailableChanged
  - Sdl.Desktop.IntegrationApi.IViewContext.Description
  - Sdl.Desktop.IntegrationApi.IViewContext.Enabled
  - Sdl.Desktop.IntegrationApi.IViewContext.EnabledChanged
  - Sdl.Desktop.IntegrationApi.IViewContext.Icon
  - Sdl.Desktop.IntegrationApi.IViewContext.Id
  - Sdl.Desktop.IntegrationApi.IViewContext.Name
  - Sdl.Desktop.IntegrationApi.IViewContext.Shortcut
  langs:
  - csharp
  - vb
  name: IViewContext
  nameWithType: IViewContext
  fullName: Sdl.Desktop.IntegrationApi.IViewContext
  type: Interface
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nThe contract defining context view informations.\n"
  syntax:
    content: public interface IViewContext
    content.vb: Public Interface IViewContext
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Desktop.IntegrationApi.IViewContext.Id
  commentId: P:Sdl.Desktop.IntegrationApi.IViewContext.Id
  id: Id
  parent: Sdl.Desktop.IntegrationApi.IViewContext
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IViewContext.Id
  fullName: Sdl.Desktop.IntegrationApi.IViewContext.Id
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nReturns the unique id of the view.\n"
  syntax:
    content: string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Id As String
  overload: Sdl.Desktop.IntegrationApi.IViewContext.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.IViewContext.Name
  commentId: P:Sdl.Desktop.IntegrationApi.IViewContext.Name
  id: Name
  parent: Sdl.Desktop.IntegrationApi.IViewContext
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IViewContext.Name
  fullName: Sdl.Desktop.IntegrationApi.IViewContext.Name
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nReturns the friendly name of this view.\n"
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Sdl.Desktop.IntegrationApi.IViewContext.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.IViewContext.Description
  commentId: P:Sdl.Desktop.IntegrationApi.IViewContext.Description
  id: Description
  parent: Sdl.Desktop.IntegrationApi.IViewContext
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: IViewContext.Description
  fullName: Sdl.Desktop.IntegrationApi.IViewContext.Description
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nReturns the description of this view.\n"
  syntax:
    content: string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Description As String
  overload: Sdl.Desktop.IntegrationApi.IViewContext.Description*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.IViewContext.Icon
  commentId: P:Sdl.Desktop.IntegrationApi.IViewContext.Icon
  id: Icon
  parent: Sdl.Desktop.IntegrationApi.IViewContext
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: IViewContext.Icon
  fullName: Sdl.Desktop.IntegrationApi.IViewContext.Icon
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nReturns  an icon representing this view. Can be null.\n"
  syntax:
    content: Icon Icon { get; }
    parameters: []
    return:
      type: System.Drawing.Icon
    content.vb: ReadOnly Property Icon As Icon
  overload: Sdl.Desktop.IntegrationApi.IViewContext.Icon*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.IViewContext.Shortcut
  commentId: P:Sdl.Desktop.IntegrationApi.IViewContext.Shortcut
  id: Shortcut
  parent: Sdl.Desktop.IntegrationApi.IViewContext
  langs:
  - csharp
  - vb
  name: Shortcut
  nameWithType: IViewContext.Shortcut
  fullName: Sdl.Desktop.IntegrationApi.IViewContext.Shortcut
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nReturns a shortcut which can be used to activate this view.\n"
  syntax:
    content: Keys Shortcut { get; }
    parameters: []
    return:
      type: System.Windows.Forms.Keys
    content.vb: ReadOnly Property Shortcut As Keys
  overload: Sdl.Desktop.IntegrationApi.IViewContext.Shortcut*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.IViewContext.Enabled
  commentId: P:Sdl.Desktop.IntegrationApi.IViewContext.Enabled
  id: Enabled
  parent: Sdl.Desktop.IntegrationApi.IViewContext
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: IViewContext.Enabled
  fullName: Sdl.Desktop.IntegrationApi.IViewContext.Enabled
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nReturns whether this view is currently enabled.\n"
  syntax:
    content: bool Enabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Enabled As Boolean
  overload: Sdl.Desktop.IntegrationApi.IViewContext.Enabled*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.IViewContext.Available
  commentId: P:Sdl.Desktop.IntegrationApi.IViewContext.Available
  id: Available
  parent: Sdl.Desktop.IntegrationApi.IViewContext
  langs:
  - csharp
  - vb
  name: Available
  nameWithType: IViewContext.Available
  fullName: Sdl.Desktop.IntegrationApi.IViewContext.Available
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nReturns whether this view is currently available.\n"
  syntax:
    content: bool Available { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Available As Boolean
  overload: Sdl.Desktop.IntegrationApi.IViewContext.Available*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.IViewContext.EnabledChanged
  commentId: E:Sdl.Desktop.IntegrationApi.IViewContext.EnabledChanged
  id: EnabledChanged
  parent: Sdl.Desktop.IntegrationApi.IViewContext
  langs:
  - csharp
  - vb
  name: EnabledChanged
  nameWithType: IViewContext.EnabledChanged
  fullName: Sdl.Desktop.IntegrationApi.IViewContext.EnabledChanged
  type: Event
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nRaised when the value of the <xref href=\"Sdl.Desktop.IntegrationApi.IViewContext.Enabled\" data-throw-if-not-resolved=\"false\"></xref> property changes.\n"
  syntax:
    content: event EventHandler EnabledChanged
    return:
      type: System.EventHandler
    content.vb: Event EnabledChanged As EventHandler
- uid: Sdl.Desktop.IntegrationApi.IViewContext.AvailableChanged
  commentId: E:Sdl.Desktop.IntegrationApi.IViewContext.AvailableChanged
  id: AvailableChanged
  parent: Sdl.Desktop.IntegrationApi.IViewContext
  langs:
  - csharp
  - vb
  name: AvailableChanged
  nameWithType: IViewContext.AvailableChanged
  fullName: Sdl.Desktop.IntegrationApi.IViewContext.AvailableChanged
  type: Event
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nRaised when the value of the <xref href=\"Sdl.Desktop.IntegrationApi.IViewContext.Available\" data-throw-if-not-resolved=\"false\"></xref> property changes.\n"
  syntax:
    content: event EventHandler AvailableChanged
    return:
      type: System.EventHandler
    content.vb: Event AvailableChanged As EventHandler
references:
- uid: Sdl.Desktop.IntegrationApi
  commentId: N:Sdl.Desktop.IntegrationApi
  isExternal: true
  name: Sdl.Desktop.IntegrationApi
  nameWithType: Sdl.Desktop.IntegrationApi
  fullName: Sdl.Desktop.IntegrationApi
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.Desktop.IntegrationApi.IViewContext.Id*
  commentId: Overload:Sdl.Desktop.IntegrationApi.IViewContext.Id
  isExternal: true
  name: Id
  nameWithType: IViewContext.Id
  fullName: Sdl.Desktop.IntegrationApi.IViewContext.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.IntegrationApi.IViewContext.Name*
  commentId: Overload:Sdl.Desktop.IntegrationApi.IViewContext.Name
  isExternal: true
  name: Name
  nameWithType: IViewContext.Name
  fullName: Sdl.Desktop.IntegrationApi.IViewContext.Name
- uid: Sdl.Desktop.IntegrationApi.IViewContext.Description*
  commentId: Overload:Sdl.Desktop.IntegrationApi.IViewContext.Description
  isExternal: true
  name: Description
  nameWithType: IViewContext.Description
  fullName: Sdl.Desktop.IntegrationApi.IViewContext.Description
- uid: Sdl.Desktop.IntegrationApi.IViewContext.Icon*
  commentId: Overload:Sdl.Desktop.IntegrationApi.IViewContext.Icon
  isExternal: true
  name: Icon
  nameWithType: IViewContext.Icon
  fullName: Sdl.Desktop.IntegrationApi.IViewContext.Icon
- uid: System.Drawing.Icon
  isExternal: true
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
- uid: Sdl.Desktop.IntegrationApi.IViewContext.Shortcut*
  commentId: Overload:Sdl.Desktop.IntegrationApi.IViewContext.Shortcut
  isExternal: true
  name: Shortcut
  nameWithType: IViewContext.Shortcut
  fullName: Sdl.Desktop.IntegrationApi.IViewContext.Shortcut
- uid: System.Windows.Forms.Keys
  isExternal: true
  name: Keys
  nameWithType: Keys
  fullName: System.Windows.Forms.Keys
- uid: Sdl.Desktop.IntegrationApi.IViewContext.Enabled*
  commentId: Overload:Sdl.Desktop.IntegrationApi.IViewContext.Enabled
  isExternal: true
  name: Enabled
  nameWithType: IViewContext.Enabled
  fullName: Sdl.Desktop.IntegrationApi.IViewContext.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.Desktop.IntegrationApi.IViewContext.Available*
  commentId: Overload:Sdl.Desktop.IntegrationApi.IViewContext.Available
  isExternal: true
  name: Available
  nameWithType: IViewContext.Available
  fullName: Sdl.Desktop.IntegrationApi.IViewContext.Available
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
