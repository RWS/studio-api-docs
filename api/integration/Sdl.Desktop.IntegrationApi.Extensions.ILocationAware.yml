### YamlMime:ManagedReference
items:
- uid: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware
  commentId: T:Sdl.Desktop.IntegrationApi.Extensions.ILocationAware
  id: ILocationAware
  parent: Sdl.Desktop.IntegrationApi.Extensions
  children:
  - Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.IsSeparator
  - Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.LocationByType
  - Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.ZIndex
  langs:
  - csharp
  - vb
  name: ILocationAware
  nameWithType: ILocationAware
  fullName: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware
  type: Interface
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions
  summary: "\nImplements the positioning the UI elements inside the layout.\n"
  syntax:
    content: public interface ILocationAware
    content.vb: Public Interface ILocationAware
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.LocationByType
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.LocationByType
  id: LocationByType
  parent: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware
  langs:
  - csharp
  - vb
  name: LocationByType
  nameWithType: ILocationAware.LocationByType
  fullName: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.LocationByType
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions
  summary: "\nThe type of the location where the UI element is positioned.\n"
  syntax:
    content: Type LocationByType { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: Property LocationByType As Type
  overload: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.LocationByType*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.ZIndex
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.ZIndex
  id: ZIndex
  parent: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware
  langs:
  - csharp
  - vb
  name: ZIndex
  nameWithType: ILocationAware.ZIndex
  fullName: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.ZIndex
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions
  summary: "\nDefines a 0 based index order for the UI elements where the highest value is the most important.\n"
  remarks: "\n<p>\nThe z-Index ordering is performed only for the intergrated elements and have a lower priority than SDL ordering. It acts as importance from left to right or top to bottom.\n</p>\n<p> The highest ZIndex value is in the left or top and the lowest value is in the right or bottom. </p>        \n"
  syntax:
    content: uint ZIndex { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Property ZIndex As UInteger
  overload: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.ZIndex*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.IsSeparator
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.IsSeparator
  id: IsSeparator
  parent: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware
  langs:
  - csharp
  - vb
  name: IsSeparator
  nameWithType: ILocationAware.IsSeparator
  fullName: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.IsSeparator
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions
  summary: "\nIs separator determines if a separator should be added before the action\n"
  syntax:
    content: bool IsSeparator { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsSeparator As Boolean
  overload: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.IsSeparator*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.Desktop.IntegrationApi.Extensions
  commentId: N:Sdl.Desktop.IntegrationApi.Extensions
  isExternal: true
  name: Sdl.Desktop.IntegrationApi.Extensions
  nameWithType: Sdl.Desktop.IntegrationApi.Extensions
  fullName: Sdl.Desktop.IntegrationApi.Extensions
- uid: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.LocationByType*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.LocationByType
  isExternal: true
  name: LocationByType
  nameWithType: ILocationAware.LocationByType
  fullName: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.LocationByType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.ZIndex*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.ZIndex
  isExternal: true
  name: ZIndex
  nameWithType: ILocationAware.ZIndex
  fullName: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.ZIndex
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.IsSeparator*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.IsSeparator
  isExternal: true
  name: IsSeparator
  nameWithType: ILocationAware.IsSeparator
  fullName: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.IsSeparator
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
