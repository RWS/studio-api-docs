### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker
  commentId: T:Sdl.TranslationStudioAutomation.Licensing.LicenseChecker
  id: LicenseChecker
  parent: Sdl.TranslationStudioAutomation.Licensing
  children:
  - Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.CurrentEdition
  - Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.IsFeatureLicensed(Sdl.TranslationStudioAutomation.Licensing.StudioFeature)
  - Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.IsLicensed
  langs:
  - csharp
  - vb
  name: LicenseChecker
  nameWithType: LicenseChecker
  fullName: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker
  type: Class
  assemblies:
  - Sdl.TranslationStudioAutomation.Licensing
  namespace: Sdl.TranslationStudioAutomation.Licensing
  summary: Provides a simple API for external applications to query for the existence of a Trados Studio license.
  example: []
  syntax:
    content: public static class LicenseChecker
    content.vb: Public Module LicenseChecker
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.IsFeatureLicensed(Sdl.TranslationStudioAutomation.Licensing.StudioFeature)
  commentId: M:Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.IsFeatureLicensed(Sdl.TranslationStudioAutomation.Licensing.StudioFeature)
  id: IsFeatureLicensed(Sdl.TranslationStudioAutomation.Licensing.StudioFeature)
  parent: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker
  langs:
  - csharp
  - vb
  name: IsFeatureLicensed(StudioFeature)
  nameWithType: LicenseChecker.IsFeatureLicensed(StudioFeature)
  fullName: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.IsFeatureLicensed(Sdl.TranslationStudioAutomation.Licensing.StudioFeature)
  type: Method
  assemblies:
  - Sdl.TranslationStudioAutomation.Licensing
  namespace: Sdl.TranslationStudioAutomation.Licensing
  summary: Returns True if Studio is licensed and the license supports a particular feature
  example: []
  syntax:
    content: public static bool IsFeatureLicensed(StudioFeature studioFeature)
    parameters:
    - id: studioFeature
      type: Sdl.TranslationStudioAutomation.Licensing.StudioFeature
      description: The feature being tested for a valid license
    return:
      type: System.Boolean
      description: True if this feature is licensed
    content.vb: Public Shared Function IsFeatureLicensed(studioFeature As StudioFeature) As Boolean
  overload: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.IsFeatureLicensed*
- uid: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.IsLicensed
  commentId: P:Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.IsLicensed
  id: IsLicensed
  parent: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker
  langs:
  - csharp
  - vb
  name: IsLicensed
  nameWithType: LicenseChecker.IsLicensed
  fullName: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.IsLicensed
  type: Property
  assemblies:
  - Sdl.TranslationStudioAutomation.Licensing
  namespace: Sdl.TranslationStudioAutomation.Licensing
  summary: >-
    Returns true if the machine has a valid Trados Studio license.

    This can be any edition of Studio, including an unexpired trial.
  example: []
  syntax:
    content: public static bool IsLicensed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsLicensed As Boolean
  overload: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.IsLicensed*
- uid: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.CurrentEdition
  commentId: P:Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.CurrentEdition
  id: CurrentEdition
  parent: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker
  langs:
  - csharp
  - vb
  name: CurrentEdition
  nameWithType: LicenseChecker.CurrentEdition
  fullName: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.CurrentEdition
  type: Property
  assemblies:
  - Sdl.TranslationStudioAutomation.Licensing
  namespace: Sdl.TranslationStudioAutomation.Licensing
  summary: >-
    Returns the currently licensed Studio edition.

    The product may have a time limited or trial license, but they are always based on a standard Studio edition.

    So for example the standard 30 day trial that ships with Studio is a Professional edition license, 

    and so <xref href="Sdl.TranslationStudioAutomation.Licensing.StudioEdition.Professional" data-throw-if-not-resolved="false"></xref> would be returned here.
  example: []
  syntax:
    content: public static StudioEdition CurrentEdition { get; }
    parameters: []
    return:
      type: Sdl.TranslationStudioAutomation.Licensing.StudioEdition
    content.vb: Public Shared ReadOnly Property CurrentEdition As StudioEdition
  overload: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.CurrentEdition*
references:
- uid: Sdl.TranslationStudioAutomation.Licensing
  commentId: N:Sdl.TranslationStudioAutomation.Licensing
  isExternal: true
  href: Sdl.html
  name: Sdl.TranslationStudioAutomation.Licensing
  nameWithType: Sdl.TranslationStudioAutomation.Licensing
  fullName: Sdl.TranslationStudioAutomation.Licensing
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.TranslationStudioAutomation
    name: TranslationStudioAutomation
    isExternal: true
    href: Sdl.TranslationStudioAutomation.html
  - name: .
  - uid: Sdl.TranslationStudioAutomation.Licensing
    name: Licensing
    isExternal: true
    href: Sdl.TranslationStudioAutomation.Licensing.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.TranslationStudioAutomation
    name: TranslationStudioAutomation
    isExternal: true
    href: Sdl.TranslationStudioAutomation.html
  - name: .
  - uid: Sdl.TranslationStudioAutomation.Licensing
    name: Licensing
    isExternal: true
    href: Sdl.TranslationStudioAutomation.Licensing.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.IsFeatureLicensed*
  commentId: Overload:Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.IsFeatureLicensed
  isExternal: true
  href: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.html#Sdl_TranslationStudioAutomation_Licensing_LicenseChecker_IsFeatureLicensed_Sdl_TranslationStudioAutomation_Licensing_StudioFeature_
  name: IsFeatureLicensed
  nameWithType: LicenseChecker.IsFeatureLicensed
  fullName: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.IsFeatureLicensed
- uid: Sdl.TranslationStudioAutomation.Licensing.StudioFeature
  commentId: T:Sdl.TranslationStudioAutomation.Licensing.StudioFeature
  parent: Sdl.TranslationStudioAutomation.Licensing
  isExternal: true
  href: Sdl.TranslationStudioAutomation.Licensing.StudioFeature.html
  name: StudioFeature
  nameWithType: StudioFeature
  fullName: Sdl.TranslationStudioAutomation.Licensing.StudioFeature
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.IsLicensed*
  commentId: Overload:Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.IsLicensed
  isExternal: true
  href: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.html#Sdl_TranslationStudioAutomation_Licensing_LicenseChecker_IsLicensed
  name: IsLicensed
  nameWithType: LicenseChecker.IsLicensed
  fullName: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.IsLicensed
- uid: Sdl.TranslationStudioAutomation.Licensing.StudioEdition.Professional
  commentId: F:Sdl.TranslationStudioAutomation.Licensing.StudioEdition.Professional
  isExternal: true
  href: Sdl.TranslationStudioAutomation.Licensing.StudioEdition.html#Sdl_TranslationStudioAutomation_Licensing_StudioEdition_Professional
  name: Professional
  nameWithType: StudioEdition.Professional
  fullName: Sdl.TranslationStudioAutomation.Licensing.StudioEdition.Professional
- uid: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.CurrentEdition*
  commentId: Overload:Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.CurrentEdition
  isExternal: true
  href: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.html#Sdl_TranslationStudioAutomation_Licensing_LicenseChecker_CurrentEdition
  name: CurrentEdition
  nameWithType: LicenseChecker.CurrentEdition
  fullName: Sdl.TranslationStudioAutomation.Licensing.LicenseChecker.CurrentEdition
- uid: Sdl.TranslationStudioAutomation.Licensing.StudioEdition
  commentId: T:Sdl.TranslationStudioAutomation.Licensing.StudioEdition
  parent: Sdl.TranslationStudioAutomation.Licensing
  isExternal: true
  href: Sdl.TranslationStudioAutomation.Licensing.StudioEdition.html
  name: StudioEdition
  nameWithType: StudioEdition
  fullName: Sdl.TranslationStudioAutomation.Licensing.StudioEdition
