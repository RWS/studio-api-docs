### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.IOtherMarkerContainerNode
  commentId: T:Sdl.DesktopEditor.EditorApi.IOtherMarkerContainerNode
  id: IOtherMarkerContainerNode
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.IOtherMarkerContainerNode.Marker
  langs:
  - csharp
  - vb
  name: IOtherMarkerContainerNode
  nameWithType: IOtherMarkerContainerNode
  fullName: Sdl.DesktopEditor.EditorApi.IOtherMarkerContainerNode
  type: Interface
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nFramework specific container node representing a custom marker.\n"
  remarks: "\n<p>\nThis all nodes that are to be treated as marked are inside this container,\nthough it may be possible that the underlying filter framework node has\nbeen cloned, and as a result there may be other containers with the same \nproperties object, which should in that case also be treated as marked.\n</p>\n"
  syntax:
    content: 'public interface IOtherMarkerContainerNode : IAbstractContainerNode, INode, IAbstractNode, ITreeNode<IAbstractNode, IAbstractContainerNode>, IEnumerable<IAbstractNode>, IEnumerable, IMarkupDataNode'
    content.vb: >-
      Public Interface IOtherMarkerContainerNode
          Inherits IAbstractContainerNode, INode, IAbstractNode, ITreeNode(Of IAbstractNode, IAbstractContainerNode), IEnumerable(Of IAbstractNode), IEnumerable, IMarkupDataNode
  inheritedMembers:
  - Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.Find(System.Predicate{Sdl.DesktopEditor.EditorApi.INode},System.Boolean)
  - Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindContentNode(System.Predicate{Sdl.DesktopEditor.EditorApi.IAbstractContentNode},System.Boolean)
  - Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindAllNodes(System.Predicate{Sdl.DesktopEditor.EditorApi.IAbstractNode},System.Boolean)
  - Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.StartNode
  - Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.EndNode
  - Sdl.DesktopEditor.EditorApi.INode.AcceptNodeVisitor(Sdl.DesktopEditor.EditorApi.INodeVisitor)
  - Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}.Parent
  - Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}.NextSibling
  - Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}.PreviousSibling
  - Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}.Root
  - System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IAbstractNode}.GetEnumerator
  - Sdl.DesktopEditor.EditorApi.IMarkupDataNode.Item
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  - Sdl.DesktopEditor.EditorApi.IAbstractNode.Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.DesktopEditor.EditorApi.IOtherMarkerContainerNode.Marker
  commentId: P:Sdl.DesktopEditor.EditorApi.IOtherMarkerContainerNode.Marker
  id: Marker
  parent: Sdl.DesktopEditor.EditorApi.IOtherMarkerContainerNode
  langs:
  - csharp
  - vb
  name: Marker
  nameWithType: IOtherMarkerContainerNode.Marker
  fullName: Sdl.DesktopEditor.EditorApi.IOtherMarkerContainerNode.Marker
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nRead-only access to the filter framework object.\n"
  syntax:
    content: IOtherMarker Marker { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IOtherMarker
    content.vb: ReadOnly Property Marker As IOtherMarker
  overload: Sdl.DesktopEditor.EditorApi.IOtherMarkerContainerNode.Marker*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.Find(System.Predicate{Sdl.DesktopEditor.EditorApi.INode},System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.Find(System.Predicate{Sdl.DesktopEditor.EditorApi.INode},System.Boolean)
  parent: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
  isExternal: true
  name: Find(Predicate<INode>, Boolean)
  nameWithType: IAbstractContainerNode.Find(Predicate<INode>, Boolean)
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.Find(System.Predicate<Sdl.DesktopEditor.EditorApi.INode>, System.Boolean)
  nameWithType.vb: IAbstractContainerNode.Find(Predicate(Of INode), Boolean)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.Find(System.Predicate(Of Sdl.DesktopEditor.EditorApi.INode), System.Boolean)
  name.vb: Find(Predicate(Of INode), Boolean)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.Find(System.Predicate{Sdl.DesktopEditor.EditorApi.INode},System.Boolean)
    name: Find
    nameWithType: IAbstractContainerNode.Find
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.INode
    name: INode
    nameWithType: INode
    fullName: Sdl.DesktopEditor.EditorApi.INode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.Find(System.Predicate{Sdl.DesktopEditor.EditorApi.INode},System.Boolean)
    name: Find
    nameWithType: IAbstractContainerNode.Find
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.INode
    name: INode
    nameWithType: INode
    fullName: Sdl.DesktopEditor.EditorApi.INode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindContentNode(System.Predicate{Sdl.DesktopEditor.EditorApi.IAbstractContentNode},System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindContentNode(System.Predicate{Sdl.DesktopEditor.EditorApi.IAbstractContentNode},System.Boolean)
  parent: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
  isExternal: true
  name: FindContentNode(Predicate<IAbstractContentNode>, Boolean)
  nameWithType: IAbstractContainerNode.FindContentNode(Predicate<IAbstractContentNode>, Boolean)
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindContentNode(System.Predicate<Sdl.DesktopEditor.EditorApi.IAbstractContentNode>, System.Boolean)
  nameWithType.vb: IAbstractContainerNode.FindContentNode(Predicate(Of IAbstractContentNode), Boolean)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindContentNode(System.Predicate(Of Sdl.DesktopEditor.EditorApi.IAbstractContentNode), System.Boolean)
  name.vb: FindContentNode(Predicate(Of IAbstractContentNode), Boolean)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindContentNode(System.Predicate{Sdl.DesktopEditor.EditorApi.IAbstractContentNode},System.Boolean)
    name: FindContentNode
    nameWithType: IAbstractContainerNode.FindContentNode
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindContentNode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
    name: IAbstractContentNode
    nameWithType: IAbstractContentNode
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindContentNode(System.Predicate{Sdl.DesktopEditor.EditorApi.IAbstractContentNode},System.Boolean)
    name: FindContentNode
    nameWithType: IAbstractContainerNode.FindContentNode
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindContentNode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
    name: IAbstractContentNode
    nameWithType: IAbstractContentNode
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindAllNodes(System.Predicate{Sdl.DesktopEditor.EditorApi.IAbstractNode},System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindAllNodes(System.Predicate{Sdl.DesktopEditor.EditorApi.IAbstractNode},System.Boolean)
  parent: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
  isExternal: true
  name: FindAllNodes(Predicate<IAbstractNode>, Boolean)
  nameWithType: IAbstractContainerNode.FindAllNodes(Predicate<IAbstractNode>, Boolean)
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindAllNodes(System.Predicate<Sdl.DesktopEditor.EditorApi.IAbstractNode>, System.Boolean)
  nameWithType.vb: IAbstractContainerNode.FindAllNodes(Predicate(Of IAbstractNode), Boolean)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindAllNodes(System.Predicate(Of Sdl.DesktopEditor.EditorApi.IAbstractNode), System.Boolean)
  name.vb: FindAllNodes(Predicate(Of IAbstractNode), Boolean)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindAllNodes(System.Predicate{Sdl.DesktopEditor.EditorApi.IAbstractNode},System.Boolean)
    name: FindAllNodes
    nameWithType: IAbstractContainerNode.FindAllNodes
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindAllNodes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractNode
    name: IAbstractNode
    nameWithType: IAbstractNode
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractNode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindAllNodes(System.Predicate{Sdl.DesktopEditor.EditorApi.IAbstractNode},System.Boolean)
    name: FindAllNodes
    nameWithType: IAbstractContainerNode.FindAllNodes
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.FindAllNodes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractNode
    name: IAbstractNode
    nameWithType: IAbstractNode
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.StartNode
  commentId: P:Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.StartNode
  parent: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
  isExternal: true
  name: StartNode
  nameWithType: IAbstractContainerNode.StartNode
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.StartNode
- uid: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.EndNode
  commentId: P:Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.EndNode
  parent: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
  isExternal: true
  name: EndNode
  nameWithType: IAbstractContainerNode.EndNode
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.EndNode
- uid: Sdl.DesktopEditor.EditorApi.INode.AcceptNodeVisitor(Sdl.DesktopEditor.EditorApi.INodeVisitor)
  commentId: M:Sdl.DesktopEditor.EditorApi.INode.AcceptNodeVisitor(Sdl.DesktopEditor.EditorApi.INodeVisitor)
  parent: Sdl.DesktopEditor.EditorApi.INode
  isExternal: true
  name: AcceptNodeVisitor(INodeVisitor)
  nameWithType: INode.AcceptNodeVisitor(INodeVisitor)
  fullName: Sdl.DesktopEditor.EditorApi.INode.AcceptNodeVisitor(Sdl.DesktopEditor.EditorApi.INodeVisitor)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.INode.AcceptNodeVisitor(Sdl.DesktopEditor.EditorApi.INodeVisitor)
    name: AcceptNodeVisitor
    nameWithType: INode.AcceptNodeVisitor
    fullName: Sdl.DesktopEditor.EditorApi.INode.AcceptNodeVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.INodeVisitor
    name: INodeVisitor
    nameWithType: INodeVisitor
    fullName: Sdl.DesktopEditor.EditorApi.INodeVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.INode.AcceptNodeVisitor(Sdl.DesktopEditor.EditorApi.INodeVisitor)
    name: AcceptNodeVisitor
    nameWithType: INode.AcceptNodeVisitor
    fullName: Sdl.DesktopEditor.EditorApi.INode.AcceptNodeVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.INodeVisitor
    name: INodeVisitor
    nameWithType: INodeVisitor
    fullName: Sdl.DesktopEditor.EditorApi.INodeVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}.Parent
  commentId: P:Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}.Parent
  parent: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}
  definition: Sdl.DesktopEditor.EditorApi.ITreeNode`2.Parent
  name: Parent
  nameWithType: ITreeNode<IAbstractNode, IAbstractContainerNode>.Parent
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<Sdl.DesktopEditor.EditorApi.IAbstractNode, Sdl.DesktopEditor.EditorApi.IAbstractContainerNode>.Parent
  nameWithType.vb: ITreeNode(Of IAbstractNode, IAbstractContainerNode).Parent
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of Sdl.DesktopEditor.EditorApi.IAbstractNode, Sdl.DesktopEditor.EditorApi.IAbstractContainerNode).Parent
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}.NextSibling
  commentId: P:Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}.NextSibling
  parent: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}
  definition: Sdl.DesktopEditor.EditorApi.ITreeNode`2.NextSibling
  name: NextSibling
  nameWithType: ITreeNode<IAbstractNode, IAbstractContainerNode>.NextSibling
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<Sdl.DesktopEditor.EditorApi.IAbstractNode, Sdl.DesktopEditor.EditorApi.IAbstractContainerNode>.NextSibling
  nameWithType.vb: ITreeNode(Of IAbstractNode, IAbstractContainerNode).NextSibling
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of Sdl.DesktopEditor.EditorApi.IAbstractNode, Sdl.DesktopEditor.EditorApi.IAbstractContainerNode).NextSibling
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}.PreviousSibling
  commentId: P:Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}.PreviousSibling
  parent: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}
  definition: Sdl.DesktopEditor.EditorApi.ITreeNode`2.PreviousSibling
  name: PreviousSibling
  nameWithType: ITreeNode<IAbstractNode, IAbstractContainerNode>.PreviousSibling
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<Sdl.DesktopEditor.EditorApi.IAbstractNode, Sdl.DesktopEditor.EditorApi.IAbstractContainerNode>.PreviousSibling
  nameWithType.vb: ITreeNode(Of IAbstractNode, IAbstractContainerNode).PreviousSibling
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of Sdl.DesktopEditor.EditorApi.IAbstractNode, Sdl.DesktopEditor.EditorApi.IAbstractContainerNode).PreviousSibling
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}.Root
  commentId: P:Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}.Root
  parent: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}
  definition: Sdl.DesktopEditor.EditorApi.ITreeNode`2.Root
  name: Root
  nameWithType: ITreeNode<IAbstractNode, IAbstractContainerNode>.Root
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<Sdl.DesktopEditor.EditorApi.IAbstractNode, Sdl.DesktopEditor.EditorApi.IAbstractContainerNode>.Root
  nameWithType.vb: ITreeNode(Of IAbstractNode, IAbstractContainerNode).Root
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of Sdl.DesktopEditor.EditorApi.IAbstractNode, Sdl.DesktopEditor.EditorApi.IAbstractContainerNode).Root
- uid: System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IAbstractNode}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IAbstractNode}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IAbstractNode}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IAbstractNode>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Sdl.DesktopEditor.EditorApi.IAbstractNode>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IAbstractNode).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.DesktopEditor.EditorApi.IAbstractNode).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<IAbstractNode>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Sdl.DesktopEditor.EditorApi.IAbstractNode>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of IAbstractNode).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Sdl.DesktopEditor.EditorApi.IAbstractNode).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IMarkupDataNode.Item
  commentId: P:Sdl.DesktopEditor.EditorApi.IMarkupDataNode.Item
  parent: Sdl.DesktopEditor.EditorApi.IMarkupDataNode
  isExternal: true
  name: Item
  nameWithType: IMarkupDataNode.Item
  fullName: Sdl.DesktopEditor.EditorApi.IMarkupDataNode.Item
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IAbstractNode.Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault``1
  commentId: M:Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault``1(Sdl.DesktopEditor.EditorApi.IAbstractNode)
  parent: Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions
  definition: Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault``1(Sdl.DesktopEditor.EditorApi.IAbstractNode)
  name: ParentFirstOrDefault<T>()
  nameWithType: EditorApiExtensions.ParentFirstOrDefault<T>()
  fullName: Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault<T>()
  nameWithType.vb: EditorApiExtensions.ParentFirstOrDefault(Of T)()
  fullName.vb: Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault(Of T)()
  name.vb: ParentFirstOrDefault(Of T)()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault``1
    name: ParentFirstOrDefault<T>
    nameWithType: EditorApiExtensions.ParentFirstOrDefault<T>
    fullName: Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault``1
    name: ParentFirstOrDefault(Of T)
    nameWithType: EditorApiExtensions.ParentFirstOrDefault(Of T)
    fullName: Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
  commentId: T:Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IAbstractContainerNode
  nameWithType: IAbstractContainerNode
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
- uid: Sdl.DesktopEditor.EditorApi.INode
  commentId: T:Sdl.DesktopEditor.EditorApi.INode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: INode
  nameWithType: INode
  fullName: Sdl.DesktopEditor.EditorApi.INode
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2.Parent
  commentId: P:Sdl.DesktopEditor.EditorApi.ITreeNode`2.Parent
  isExternal: true
  name: Parent
  nameWithType: ITreeNode<NodeType, ContainerType>.Parent
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<NodeType, ContainerType>.Parent
  nameWithType.vb: ITreeNode(Of NodeType, ContainerType).Parent
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of NodeType, ContainerType).Parent
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}
  commentId: T:Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContainerNode}
  parent: Sdl.DesktopEditor.EditorApi
  definition: Sdl.DesktopEditor.EditorApi.ITreeNode`2
  name: ITreeNode<IAbstractNode, IAbstractContainerNode>
  nameWithType: ITreeNode<IAbstractNode, IAbstractContainerNode>
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<Sdl.DesktopEditor.EditorApi.IAbstractNode, Sdl.DesktopEditor.EditorApi.IAbstractContainerNode>
  nameWithType.vb: ITreeNode(Of IAbstractNode, IAbstractContainerNode)
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of Sdl.DesktopEditor.EditorApi.IAbstractNode, Sdl.DesktopEditor.EditorApi.IAbstractContainerNode)
  name.vb: ITreeNode(Of IAbstractNode, IAbstractContainerNode)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2
    name: ITreeNode
    nameWithType: ITreeNode
    fullName: Sdl.DesktopEditor.EditorApi.ITreeNode
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractNode
    name: IAbstractNode
    nameWithType: IAbstractNode
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractNode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
    name: IAbstractContainerNode
    nameWithType: IAbstractContainerNode
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2
    name: ITreeNode
    nameWithType: ITreeNode
    fullName: Sdl.DesktopEditor.EditorApi.ITreeNode
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractNode
    name: IAbstractNode
    nameWithType: IAbstractNode
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractNode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
    name: IAbstractContainerNode
    nameWithType: IAbstractContainerNode
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2.NextSibling
  commentId: P:Sdl.DesktopEditor.EditorApi.ITreeNode`2.NextSibling
  isExternal: true
  name: NextSibling
  nameWithType: ITreeNode<NodeType, ContainerType>.NextSibling
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<NodeType, ContainerType>.NextSibling
  nameWithType.vb: ITreeNode(Of NodeType, ContainerType).NextSibling
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of NodeType, ContainerType).NextSibling
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2.PreviousSibling
  commentId: P:Sdl.DesktopEditor.EditorApi.ITreeNode`2.PreviousSibling
  isExternal: true
  name: PreviousSibling
  nameWithType: ITreeNode<NodeType, ContainerType>.PreviousSibling
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<NodeType, ContainerType>.PreviousSibling
  nameWithType.vb: ITreeNode(Of NodeType, ContainerType).PreviousSibling
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of NodeType, ContainerType).PreviousSibling
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2.Root
  commentId: P:Sdl.DesktopEditor.EditorApi.ITreeNode`2.Root
  isExternal: true
  name: Root
  nameWithType: ITreeNode<NodeType, ContainerType>.Root
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<NodeType, ContainerType>.Root
  nameWithType.vb: ITreeNode(Of NodeType, ContainerType).Root
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of NodeType, ContainerType).Root
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IAbstractNode}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IAbstractNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IAbstractNode>
  nameWithType: IEnumerable<IAbstractNode>
  fullName: System.Collections.Generic.IEnumerable<Sdl.DesktopEditor.EditorApi.IAbstractNode>
  nameWithType.vb: IEnumerable(Of IAbstractNode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.DesktopEditor.EditorApi.IAbstractNode)
  name.vb: IEnumerable(Of IAbstractNode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractNode
    name: IAbstractNode
    nameWithType: IAbstractNode
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractNode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractNode
    name: IAbstractNode
    nameWithType: IAbstractNode
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IMarkupDataNode
  commentId: T:Sdl.DesktopEditor.EditorApi.IMarkupDataNode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IMarkupDataNode
  nameWithType: IMarkupDataNode
  fullName: Sdl.DesktopEditor.EditorApi.IMarkupDataNode
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault``1(Sdl.DesktopEditor.EditorApi.IAbstractNode)
  commentId: M:Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault``1(Sdl.DesktopEditor.EditorApi.IAbstractNode)
  isExternal: true
  name: ParentFirstOrDefault<T>(IAbstractNode)
  nameWithType: EditorApiExtensions.ParentFirstOrDefault<T>(IAbstractNode)
  fullName: Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault<T>(Sdl.DesktopEditor.EditorApi.IAbstractNode)
  nameWithType.vb: EditorApiExtensions.ParentFirstOrDefault(Of T)(IAbstractNode)
  fullName.vb: Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault(Of T)(Sdl.DesktopEditor.EditorApi.IAbstractNode)
  name.vb: ParentFirstOrDefault(Of T)(IAbstractNode)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault``1(Sdl.DesktopEditor.EditorApi.IAbstractNode)
    name: ParentFirstOrDefault<T>
    nameWithType: EditorApiExtensions.ParentFirstOrDefault<T>
    fullName: Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractNode
    name: IAbstractNode
    nameWithType: IAbstractNode
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault``1(Sdl.DesktopEditor.EditorApi.IAbstractNode)
    name: ParentFirstOrDefault(Of T)
    nameWithType: EditorApiExtensions.ParentFirstOrDefault(Of T)
    fullName: Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions.ParentFirstOrDefault(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractNode
    name: IAbstractNode
    nameWithType: IAbstractNode
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions
  commentId: T:Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions
  parent: Sdl.DesktopEditor.EditorApi.Extensions
  isExternal: true
  name: EditorApiExtensions
  nameWithType: EditorApiExtensions
  fullName: Sdl.DesktopEditor.EditorApi.Extensions.EditorApiExtensions
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2
  commentId: T:Sdl.DesktopEditor.EditorApi.ITreeNode`2
  isExternal: true
  name: ITreeNode<NodeType, ContainerType>
  nameWithType: ITreeNode<NodeType, ContainerType>
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<NodeType, ContainerType>
  nameWithType.vb: ITreeNode(Of NodeType, ContainerType)
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of NodeType, ContainerType)
  name.vb: ITreeNode(Of NodeType, ContainerType)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2
    name: ITreeNode
    nameWithType: ITreeNode
    fullName: Sdl.DesktopEditor.EditorApi.ITreeNode
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: NodeType
    nameWithType: NodeType
    fullName: NodeType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ContainerType
    nameWithType: ContainerType
    fullName: ContainerType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2
    name: ITreeNode
    nameWithType: ITreeNode
    fullName: Sdl.DesktopEditor.EditorApi.ITreeNode
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: NodeType
    nameWithType: NodeType
    fullName: NodeType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ContainerType
    nameWithType: ContainerType
    fullName: ContainerType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.Extensions
  commentId: N:Sdl.DesktopEditor.EditorApi.Extensions
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi.Extensions
  nameWithType: Sdl.DesktopEditor.EditorApi.Extensions
  fullName: Sdl.DesktopEditor.EditorApi.Extensions
- uid: Sdl.DesktopEditor.EditorApi.IOtherMarkerContainerNode.Marker*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IOtherMarkerContainerNode.Marker
  isExternal: true
  name: Marker
  nameWithType: IOtherMarkerContainerNode.Marker
  fullName: Sdl.DesktopEditor.EditorApi.IOtherMarkerContainerNode.Marker
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IOtherMarker
  isExternal: true
  name: IOtherMarker
  nameWithType: IOtherMarker
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IOtherMarker
