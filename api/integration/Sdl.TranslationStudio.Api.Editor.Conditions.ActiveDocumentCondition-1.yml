### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1
  commentId: T:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1
  id: ActiveDocumentCondition`1
  parent: Sdl.TranslationStudio.Api.Editor.Conditions
  children:
  - Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.#ctor
  - Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.ActiveDocument
  - Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.ActiveDocumentChanged
  - Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.EditorService
  - Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.GetValue
  - Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.OnActiveDocumentChanged(`0,`0)
  - Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.OnServiceContextChanged
  langs:
  - csharp
  - vb
  name: ActiveDocumentCondition<TDocument>
  nameWithType: ActiveDocumentCondition<TDocument>
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition<TDocument>
  type: Class
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Conditions
  summary: "\nCondition which is true when the editor contains an active document.\n"
  syntax:
    content: 'public class ActiveDocumentCondition<TDocument> : AbstractServiceContextAwareCondition where TDocument : class, IDocument'
    typeParameters:
    - id: TDocument
    content.vb: >-
      Public Class ActiveDocumentCondition(Of TDocument As {Class, IDocument})

          Inherits AbstractServiceContextAwareCondition
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentViewCondition`2
  - Sdl.TranslationStudio.Api.Editor.Conditions.ActiveTranslatableInPlaceDocumentCondition
  - Sdl.TranslationStudio.Api.Editor.Conditions.ActiveTranslatableStandardDocumentCondition
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  nameWithType.vb: ActiveDocumentCondition(Of TDocument)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition(Of TDocument)
  name.vb: ActiveDocumentCondition(Of TDocument)
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.OnServiceContextChanged
  commentId: M:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.OnServiceContextChanged
  id: OnServiceContextChanged
  parent: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1
  langs:
  - csharp
  - vb
  name: OnServiceContextChanged()
  nameWithType: ActiveDocumentCondition<TDocument>.OnServiceContextChanged()
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition<TDocument>.OnServiceContextChanged()
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Conditions
  summary: "\nCalled when a value is assigned to the <xref href=\"Sdl.Desktop.Platform.Extensions.AbstractServiceContextAwareCondition.ServiceContext\" data-throw-if-not-resolved=\"false\"></xref> property. Override this method\nto initialize the value of the condition and to for instance attach event handlers to events exposed by services in the\ncontext, in order to dynamically update the value of the condition.\n"
  syntax:
    content: protected override void OnServiceContextChanged()
    content.vb: Protected Overrides Sub OnServiceContextChanged
  overload: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.OnServiceContextChanged*
  nameWithType.vb: ActiveDocumentCondition(Of TDocument).OnServiceContextChanged()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition(Of TDocument).OnServiceContextChanged()
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.OnActiveDocumentChanged(`0,`0)
  commentId: M:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.OnActiveDocumentChanged(`0,`0)
  id: OnActiveDocumentChanged(`0,`0)
  parent: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1
  langs:
  - csharp
  - vb
  name: OnActiveDocumentChanged(TDocument, TDocument)
  nameWithType: ActiveDocumentCondition<TDocument>.OnActiveDocumentChanged(TDocument, TDocument)
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition<TDocument>.OnActiveDocumentChanged(TDocument, TDocument)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Conditions
  summary: "\nCalled when the active document changes.\n"
  syntax:
    content: protected virtual void OnActiveDocumentChanged(TDocument oldActiveDocument, TDocument newActiveDocument)
    parameters:
    - id: oldActiveDocument
      type: '{TDocument}'
      description: The previously active document; cn be null.
    - id: newActiveDocument
      type: '{TDocument}'
      description: The currenly active document; can be null.
    content.vb: Protected Overridable Sub OnActiveDocumentChanged(oldActiveDocument As TDocument, newActiveDocument As TDocument)
  overload: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.OnActiveDocumentChanged*
  nameWithType.vb: ActiveDocumentCondition(Of TDocument).OnActiveDocumentChanged(TDocument, TDocument)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition(Of TDocument).OnActiveDocumentChanged(TDocument, TDocument)
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.GetValue
  commentId: M:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.GetValue
  id: GetValue
  parent: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1
  langs:
  - csharp
  - vb
  name: GetValue()
  nameWithType: ActiveDocumentCondition<TDocument>.GetValue()
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition<TDocument>.GetValue()
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Conditions
  summary: "\nComputes the current value of the condition.\n"
  syntax:
    content: protected override bool GetValue()
    return:
      type: System.Boolean
      description: True if the condition is met.
    content.vb: Protected Overrides Function GetValue As Boolean
  overload: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.GetValue*
  nameWithType.vb: ActiveDocumentCondition(Of TDocument).GetValue()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition(Of TDocument).GetValue()
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.#ctor
  commentId: M:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.#ctor
  id: '#ctor'
  parent: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1
  langs:
  - csharp
  - vb
  name: ActiveDocumentCondition()
  nameWithType: ActiveDocumentCondition<TDocument>.ActiveDocumentCondition()
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition<TDocument>.ActiveDocumentCondition()
  type: Constructor
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Conditions
  syntax:
    content: public ActiveDocumentCondition()
    content.vb: Public Sub New
  overload: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.#ctor*
  nameWithType.vb: ActiveDocumentCondition(Of TDocument).ActiveDocumentCondition()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition(Of TDocument).ActiveDocumentCondition()
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.EditorService
  commentId: P:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.EditorService
  id: EditorService
  parent: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1
  langs:
  - csharp
  - vb
  name: EditorService
  nameWithType: ActiveDocumentCondition<TDocument>.EditorService
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition<TDocument>.EditorService
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Conditions
  syntax:
    content: public IEditorService EditorService { get; }
    parameters: []
    return:
      type: Sdl.TranslationStudio.Api.Editor.IEditorService
    content.vb: Public ReadOnly Property EditorService As IEditorService
  overload: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.EditorService*
  nameWithType.vb: ActiveDocumentCondition(Of TDocument).EditorService
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition(Of TDocument).EditorService
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.ActiveDocument
  commentId: P:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.ActiveDocument
  id: ActiveDocument
  parent: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1
  langs:
  - csharp
  - vb
  name: ActiveDocument
  nameWithType: ActiveDocumentCondition<TDocument>.ActiveDocument
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition<TDocument>.ActiveDocument
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Conditions
  summary: "\nGets the active document; can be null.\n"
  syntax:
    content: public TDocument ActiveDocument { get; }
    parameters: []
    return:
      type: '{TDocument}'
    content.vb: Public ReadOnly Property ActiveDocument As TDocument
  overload: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.ActiveDocument*
  nameWithType.vb: ActiveDocumentCondition(Of TDocument).ActiveDocument
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition(Of TDocument).ActiveDocument
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.ActiveDocumentChanged
  commentId: E:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.ActiveDocumentChanged
  id: ActiveDocumentChanged
  parent: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1
  langs:
  - csharp
  - vb
  name: ActiveDocumentChanged
  nameWithType: ActiveDocumentCondition<TDocument>.ActiveDocumentChanged
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition<TDocument>.ActiveDocumentChanged
  type: Event
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Conditions
  syntax:
    content: public event EventHandler<ActiveDocumentChangedEventArgs<TDocument>> ActiveDocumentChanged
    return:
      type: System.EventHandler{Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs{{TDocument}}}
    content.vb: Public Event ActiveDocumentChanged As EventHandler(Of ActiveDocumentChangedEventArgs(Of TDocument))
  nameWithType.vb: ActiveDocumentCondition(Of TDocument).ActiveDocumentChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition(Of TDocument).ActiveDocumentChanged
references:
- uid: Sdl.TranslationStudio.Api.Editor.Conditions
  commentId: N:Sdl.TranslationStudio.Api.Editor.Conditions
  isExternal: true
  name: Sdl.TranslationStudio.Api.Editor.Conditions
  nameWithType: Sdl.TranslationStudio.Api.Editor.Conditions
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.OnServiceContextChanged*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.OnServiceContextChanged
  isExternal: true
  name: OnServiceContextChanged
  nameWithType: ActiveDocumentCondition<TDocument>.OnServiceContextChanged
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition<TDocument>.OnServiceContextChanged
  nameWithType.vb: ActiveDocumentCondition(Of TDocument).OnServiceContextChanged
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition(Of TDocument).OnServiceContextChanged
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.OnActiveDocumentChanged*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.OnActiveDocumentChanged
  isExternal: true
  name: OnActiveDocumentChanged
  nameWithType: ActiveDocumentCondition<TDocument>.OnActiveDocumentChanged
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition<TDocument>.OnActiveDocumentChanged
  nameWithType.vb: ActiveDocumentCondition(Of TDocument).OnActiveDocumentChanged
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition(Of TDocument).OnActiveDocumentChanged
- uid: '{TDocument}'
  commentId: '!:TDocument'
  definition: TDocument
  name: TDocument
  nameWithType: TDocument
  fullName: TDocument
- uid: TDocument
  name: TDocument
  nameWithType: TDocument
  fullName: TDocument
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.GetValue*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.GetValue
  isExternal: true
  name: GetValue
  nameWithType: ActiveDocumentCondition<TDocument>.GetValue
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition<TDocument>.GetValue
  nameWithType.vb: ActiveDocumentCondition(Of TDocument).GetValue
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition(Of TDocument).GetValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.#ctor*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.#ctor
  isExternal: true
  name: ActiveDocumentCondition
  nameWithType: ActiveDocumentCondition<TDocument>.ActiveDocumentCondition
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition<TDocument>.ActiveDocumentCondition
  nameWithType.vb: ActiveDocumentCondition(Of TDocument).ActiveDocumentCondition
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition(Of TDocument).ActiveDocumentCondition
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.EditorService*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.EditorService
  isExternal: true
  name: EditorService
  nameWithType: ActiveDocumentCondition<TDocument>.EditorService
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition<TDocument>.EditorService
  nameWithType.vb: ActiveDocumentCondition(Of TDocument).EditorService
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition(Of TDocument).EditorService
- uid: Sdl.TranslationStudio.Api.Editor.IEditorService
  commentId: T:Sdl.TranslationStudio.Api.Editor.IEditorService
  parent: Sdl.TranslationStudio.Api.Editor
  isExternal: true
  name: IEditorService
  nameWithType: IEditorService
  fullName: Sdl.TranslationStudio.Api.Editor.IEditorService
- uid: Sdl.TranslationStudio.Api.Editor
  commentId: N:Sdl.TranslationStudio.Api.Editor
  isExternal: true
  name: Sdl.TranslationStudio.Api.Editor
  nameWithType: Sdl.TranslationStudio.Api.Editor
  fullName: Sdl.TranslationStudio.Api.Editor
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.ActiveDocument*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition`1.ActiveDocument
  isExternal: true
  name: ActiveDocument
  nameWithType: ActiveDocumentCondition<TDocument>.ActiveDocument
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition<TDocument>.ActiveDocument
  nameWithType.vb: ActiveDocumentCondition(Of TDocument).ActiveDocument
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentCondition(Of TDocument).ActiveDocument
- uid: System.EventHandler{Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs{{TDocument}}}
  commentId: T:System.EventHandler{Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs{`0}}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ActiveDocumentChangedEventArgs<TDocument>>
  nameWithType: EventHandler<ActiveDocumentChangedEventArgs<TDocument>>
  fullName: System.EventHandler<Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs<TDocument>>
  nameWithType.vb: EventHandler(Of ActiveDocumentChangedEventArgs(Of TDocument))
  fullName.vb: System.EventHandler(Of Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs(Of TDocument))
  name.vb: EventHandler(Of ActiveDocumentChangedEventArgs(Of TDocument))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1
    name: ActiveDocumentChangedEventArgs
    nameWithType: ActiveDocumentChangedEventArgs
    fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDocument
    nameWithType: TDocument
    fullName: TDocument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1
    name: ActiveDocumentChangedEventArgs
    nameWithType: ActiveDocumentChangedEventArgs
    fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDocument
    nameWithType: TDocument
    fullName: TDocument
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
