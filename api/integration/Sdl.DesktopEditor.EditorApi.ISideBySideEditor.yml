### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  commentId: T:Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  id: ISideBySideEditor
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ActiveEditControl
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ActiveRowChanged
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AfterEditControlsCreated
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AfterInitialUpdate
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoDisposeDocument
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoScrollSource
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.DisplaySettings
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Document
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.DocumentEditingUser
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.EnableImplicitRowActivation
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.FocusedControl
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.FocusedControlChanged
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideFileTags
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideHideableTags
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideTextTooltips
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.IsInitialUpdateCompleted
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.LayoutSynchronizer
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ProjectEditorConfig
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Redo
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.RedoMultiple(System.Int64)
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Redraw
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.RowVisibilityDelegate
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ScrollSourceToTargetSelection
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SelectionChanged
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SetDocument(Sdl.DesktopEditor.EditorApi.IBilingualDocument,System.Boolean)
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ShowSourceSegmentIdColumn
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ShowWhitespaceCharacters
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Source
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SplitContainer
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SuppressFormatting
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.TagDisplayMode
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Target
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ToggleFocus
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Undo
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.UndoMultiple(System.Int64)
  - Sdl.DesktopEditor.EditorApi.ISideBySideEditor.UpdateActiveRow(Sdl.DesktopEditor.EditorApi.IEditControl)
  langs:
  - csharp
  - vb
  name: ISideBySideEditor
  nameWithType: ISideBySideEditor
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  type: Interface
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe side-by-side editor control that coordinates things between the\nsource and target language edit controls that appear side by side inside this control.\n"
  syntax:
    content: 'public interface ISideBySideEditor : IControl, IDisposable'
    content.vb: >-
      Public Interface ISideBySideEditor

          Inherits IControl, IDisposable
  inheritedMembers:
  - Sdl.DesktopEditor.EditorApi.IControl.Control
  - System.IDisposable.Dispose
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SetDocument(Sdl.DesktopEditor.EditorApi.IBilingualDocument,System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SetDocument(Sdl.DesktopEditor.EditorApi.IBilingualDocument,System.Boolean)
  id: SetDocument(Sdl.DesktopEditor.EditorApi.IBilingualDocument,System.Boolean)
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: SetDocument(IBilingualDocument, Boolean)
  nameWithType: ISideBySideEditor.SetDocument(IBilingualDocument, Boolean)
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SetDocument(Sdl.DesktopEditor.EditorApi.IBilingualDocument, System.Boolean)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nAssigns the specified document to the editor. The document can thereafter be\naccessed from the <xref href=\"Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Document\" data-throw-if-not-resolved=\"false\"></xref> property, and the content of the document\nis shown in the source and target edit controls. \n"
  remarks: "\n<p>\nThe auto-dispose flag indicates whether the control should take ownership of the document,\nand automatically dispose of it when it is no longer needed. This behavior \ncan be changed at a later stage by setting the <xref href=\"Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoDisposeDocument\" data-throw-if-not-resolved=\"false\"></xref> property.\nIf auto-dispose is not set it is the responsibility of the application to ensure\nthat the document gets properly disposed of when no longer needed. This is important,\nas the document can not be garbage collected until it has been explicitly disposed.\n</p>\n<p>\nIMPORTANT: This operation will cause the source and target edit\ncontrol instances to be destroyed and re-created. Any external event handlers connected to the \noriginal source and target controls should be disconnected before this call and\n(if desired) re-connected to the new controls after this operation.\n</p>\n<p>\nPassing <code>null</code> for the document will render the source and target controls empty.\n</p>\n"
  syntax:
    content: void SetDocument(IBilingualDocument document, bool autoDispose)
    parameters:
    - id: document
      type: Sdl.DesktopEditor.EditorApi.IBilingualDocument
      description: >-
        The document who&apos;s content should be displayed in the edit controls,

        or <code>null</code> if none.
    - id: autoDispose
      type: System.Boolean
      description: >-
        Determines whether the control should call Dispose() on the

        document when it is no longer needed (i.e. when another document is set, or when

        the editor is disposed).
    content.vb: Sub SetDocument(document As IBilingualDocument, autoDispose As Boolean)
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SetDocument*
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Redraw
  commentId: M:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Redraw
  id: Redraw
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: Redraw()
  nameWithType: ISideBySideEditor.Redraw()
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Redraw()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nForce a re-layout, re-draw and refresh of the content of both the source and\nthe target control.\n"
  remarks: "\n<p>\nCall this method to update the editor if the document content has changed \nas the result of external API operations, e.g. after loading a document from a file.\n</p>\n"
  syntax:
    content: void Redraw()
    content.vb: Sub Redraw
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Redraw*
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ScrollSourceToTargetSelection
  commentId: M:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ScrollSourceToTargetSelection
  id: ScrollSourceToTargetSelection
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: ScrollSourceToTargetSelection()
  nameWithType: ISideBySideEditor.ScrollSourceToTargetSelection()
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ScrollSourceToTargetSelection()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nScrolls the source edit control so that the active end of the current selection\nin the target is aligned with the corresponding source content.\n"
  syntax:
    content: void ScrollSourceToTargetSelection()
    content.vb: Sub ScrollSourceToTargetSelection
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ScrollSourceToTargetSelection*
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ToggleFocus
  commentId: M:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ToggleFocus
  id: ToggleFocus
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: ToggleFocus()
  nameWithType: ISideBySideEditor.ToggleFocus()
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ToggleFocus()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nToggles the focus between the source and target and moves the selection to the start of the\nequivalent row in the focused control.\n"
  syntax:
    content: void ToggleFocus()
    content.vb: Sub ToggleFocus
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ToggleFocus*
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Undo
  commentId: M:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Undo
  id: Undo
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: Undo()
  nameWithType: ISideBySideEditor.Undo()
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Undo()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nPerforms an undo operation on the correct edit control and updates the caret position\nin both the source and target controls.\n"
  syntax:
    content: bool Undo()
    return:
      type: System.Boolean
      description: <code>true</code> if the operation succeeds.
    content.vb: Function Undo As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Undo*
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.UndoMultiple(System.Int64)
  commentId: M:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.UndoMultiple(System.Int64)
  id: UndoMultiple(System.Int64)
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: UndoMultiple(Int64)
  nameWithType: ISideBySideEditor.UndoMultiple(Int64)
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.UndoMultiple(System.Int64)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nPerforms multiple undo operations on the correct edit controls and updates the caret\nposition in both the source and target controls.\n"
  syntax:
    content: bool UndoMultiple(long count)
    parameters:
    - id: count
      type: System.Int64
    return:
      type: System.Boolean
      description: <code>true</code> if the operation succeeds.
    content.vb: Function UndoMultiple(count As Long) As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.UndoMultiple*
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Redo
  commentId: M:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Redo
  id: Redo
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: Redo()
  nameWithType: ISideBySideEditor.Redo()
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Redo()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nPerforms a redo operation on the correct edit control and updates the caret position\nin both the source and target controls.\n"
  syntax:
    content: bool Redo()
    return:
      type: System.Boolean
      description: <code>true</code> if the operation succeeds.
    content.vb: Function Redo As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Redo*
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.RedoMultiple(System.Int64)
  commentId: M:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.RedoMultiple(System.Int64)
  id: RedoMultiple(System.Int64)
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: RedoMultiple(Int64)
  nameWithType: ISideBySideEditor.RedoMultiple(Int64)
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.RedoMultiple(System.Int64)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nPerforms multiple redo operations on the correct edit controls and updates the caret\nposition in both the source and target controls.\n"
  syntax:
    content: bool RedoMultiple(long count)
    parameters:
    - id: count
      type: System.Int64
    return:
      type: System.Boolean
      description: <code>true</code> if the operation succeeds.
    content.vb: Function RedoMultiple(count As Long) As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.RedoMultiple*
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.UpdateActiveRow(Sdl.DesktopEditor.EditorApi.IEditControl)
  commentId: M:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.UpdateActiveRow(Sdl.DesktopEditor.EditorApi.IEditControl)
  id: UpdateActiveRow(Sdl.DesktopEditor.EditorApi.IEditControl)
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: UpdateActiveRow(IEditControl)
  nameWithType: ISideBySideEditor.UpdateActiveRow(IEditControl)
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.UpdateActiveRow(Sdl.DesktopEditor.EditorApi.IEditControl)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nUpdates the active row in the editor to match the position of the current selection\n"
  syntax:
    content: void UpdateActiveRow(IEditControl editControl)
    parameters:
    - id: editControl
      type: Sdl.DesktopEditor.EditorApi.IEditControl
    content.vb: Sub UpdateActiveRow(editControl As IEditControl)
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.UpdateActiveRow*
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.IsInitialUpdateCompleted
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.IsInitialUpdateCompleted
  id: IsInitialUpdateCompleted
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: IsInitialUpdateCompleted
  nameWithType: ISideBySideEditor.IsInitialUpdateCompleted
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.IsInitialUpdateCompleted
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\n<code>true</code> when the control has been fully initialized. This is set just\nbefore the <xref href=\"Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AfterInitialUpdate\" data-throw-if-not-resolved=\"false\"></xref> event is raised.\n"
  remarks: "\n<p>\nWhen a different document is assigned to the control this property may\nbe <code>false</code> until the control has been updated to reflect the new content.\n</p>\n"
  syntax:
    content: bool IsInitialUpdateCompleted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsInitialUpdateCompleted As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.IsInitialUpdateCompleted*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Source
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Source
  id: Source
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: ISideBySideEditor.Source
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Source
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe edit control showing the source language content in the side-by-side editor.\n"
  syntax:
    content: IFrameworkEditControl Source { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IFrameworkEditControl
    content.vb: ReadOnly Property Source As IFrameworkEditControl
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Source*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Target
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Target
  id: Target
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: ISideBySideEditor.Target
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Target
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe edit control showing the target language content in the side-by-side editor.\n"
  syntax:
    content: IFrameworkEditControl Target { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IFrameworkEditControl
    content.vb: ReadOnly Property Target As IFrameworkEditControl
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Target*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SplitContainer
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SplitContainer
  id: SplitContainer
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: SplitContainer
  nameWithType: ISideBySideEditor.SplitContainer
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SplitContainer
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe splitter control that hosts the source and target controls.\n"
  syntax:
    content: SplitContainer SplitContainer { get; }
    parameters: []
    return:
      type: System.Windows.Forms.SplitContainer
    content.vb: ReadOnly Property SplitContainer As SplitContainer
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SplitContainer*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.FocusedControl
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.FocusedControl
  id: FocusedControl
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: FocusedControl
  nameWithType: ISideBySideEditor.FocusedControl
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.FocusedControl
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe edit control that currently has input focus, if it is\nthe source or target edit control, or <code>null</code> if neither.\n"
  syntax:
    content: IFrameworkEditControl FocusedControl { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IFrameworkEditControl
    content.vb: ReadOnly Property FocusedControl As IFrameworkEditControl
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.FocusedControl*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ActiveEditControl
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ActiveEditControl
  id: ActiveEditControl
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: ActiveEditControl
  nameWithType: ISideBySideEditor.ActiveEditControl
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ActiveEditControl
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe edit control that currently is editable, if it is\nthe source or target edit control, or <code>null</code> if neither.\n"
  syntax:
    content: IFrameworkEditControl ActiveEditControl { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IFrameworkEditControl
    content.vb: ReadOnly Property ActiveEditControl As IFrameworkEditControl
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ActiveEditControl*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Document
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Document
  id: Document
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: Document
  nameWithType: ISideBySideEditor.Document
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Document
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe bilingual document that contains the content shown in the source and target editors.\n"
  remarks: "\n<p>\nAssign a document to the editor by calling <xref href=\"Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SetDocument(Sdl.DesktopEditor.EditorApi.IBilingualDocument%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nIf the <xref href=\"Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoDisposeDocument\" data-throw-if-not-resolved=\"false\"></xref> property is <code>true</code> this document\nwill be disposed by the editor when it is no longer needed. To get notifications\nwhen the document is disposed, connect to the <xref href=\"Sdl.DesktopEditor.EditorApi.IBilingualDocument.Disposing\" data-throw-if-not-resolved=\"false\"></xref> event.\n</p>\n"
  syntax:
    content: IBilingualDocument Document { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IBilingualDocument
    content.vb: ReadOnly Property Document As IBilingualDocument
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Document*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoDisposeDocument
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoDisposeDocument
  id: AutoDisposeDocument
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: AutoDisposeDocument
  nameWithType: ISideBySideEditor.AutoDisposeDocument
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoDisposeDocument
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nDetermines if the currently assigned document should be automatically disposed of\nwhen another document is assigned and/or when the editor is disposed.\n"
  remarks: "\n<p>\nThe initial value of this property reflects the auto-dispose parameter passed\nto <xref href=\"Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SetDocument(Sdl.DesktopEditor.EditorApi.IBilingualDocument%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>. \n</p>\n"
  syntax:
    content: bool AutoDisposeDocument { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property AutoDisposeDocument As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoDisposeDocument*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoScrollSource
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoScrollSource
  id: AutoScrollSource
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: AutoScrollSource
  nameWithType: ISideBySideEditor.AutoScrollSource
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoScrollSource
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nWhen true the source edit control is automatically scrolled\nso that it is aligned with the current selection in the target\nedit control when the selection in the target control is moved.\n"
  remarks: "\n<p>\nWhen this property is <code>false</code> the source edit control can still be\nexplicitly scrolled to align it with the current selection in the\ntarget edit control by calling <xref href=\"Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ScrollSourceToTargetSelection\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  syntax:
    content: bool AutoScrollSource { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property AutoScrollSource As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoScrollSource*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.EnableImplicitRowActivation
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.EnableImplicitRowActivation
  id: EnableImplicitRowActivation
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: EnableImplicitRowActivation
  nameWithType: ISideBySideEditor.EnableImplicitRowActivation
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.EnableImplicitRowActivation
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nWhen <code>true</code>, row activation will occur when the user row selection changes.\nWhen <code>false</code>, row activation will only occur when the user manually activates it.\n"
  syntax:
    content: bool EnableImplicitRowActivation { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property EnableImplicitRowActivation As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.EnableImplicitRowActivation*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.TagDisplayMode
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.TagDisplayMode
  id: TagDisplayMode
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: TagDisplayMode
  nameWithType: ISideBySideEditor.TagDisplayMode
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.TagDisplayMode
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe display mode for tags in both source and target edit controls.\n"
  remarks: "\n<p>If source and target uses different tag display modes this property\nreturns <code>TagDisplayMode.Unspecified</code>.\n</p>\n<p>\nChanging this property will cause the source and target content to be re-formatted.\n</p>\n"
  syntax:
    content: TagDisplayMode TagDisplayMode { get; set; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.TagDisplayMode
    content.vb: Property TagDisplayMode As TagDisplayMode
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.TagDisplayMode*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ShowWhitespaceCharacters
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ShowWhitespaceCharacters
  id: ShowWhitespaceCharacters
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: ShowWhitespaceCharacters
  nameWithType: ISideBySideEditor.ShowWhitespaceCharacters
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ShowWhitespaceCharacters
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nWhen <code>true</code> whitespace characters such as space, tab, non-breaking spaces etc. are\nshown with symbols in both the source and target editor (default is <code>false</code>).\n"
  remarks: "\n<p>When source and target use different settings this property is <code>false</code>.</p>\n"
  syntax:
    content: bool ShowWhitespaceCharacters { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property ShowWhitespaceCharacters As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ShowWhitespaceCharacters*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideFileTags
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideFileTags
  id: HideFileTags
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: HideFileTags
  nameWithType: ISideBySideEditor.HideFileTags
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideFileTags
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nWhen <code>true</code>, segments containing file tags are hidden.\n"
  syntax:
    content: bool HideFileTags { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property HideFileTags As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideFileTags*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideTextTooltips
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideTextTooltips
  id: HideTextTooltips
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: HideTextTooltips
  nameWithType: ISideBySideEditor.HideTextTooltips
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideTextTooltips
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nAllows hiding and restoration of tooltips on text nodes. This affects, for example, text inside a commented\nor revision marked range.\n"
  syntax:
    content: bool HideTextTooltips { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: WriteOnly Property HideTextTooltips As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideTextTooltips*
  modifiers.csharp:
  - set
  modifiers.vb:
  - WriteOnly
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SuppressFormatting
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SuppressFormatting
  id: SuppressFormatting
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: SuppressFormatting
  nameWithType: ISideBySideEditor.SuppressFormatting
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SuppressFormatting
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nWhen <code>true</code> all semi-WYSIWYG formatting information will be ignored\nand all text in the source and target controls will be formatted using the default font and \nforeground color of the respective <xref href=\"Sdl.DesktopEditor.EditorApi.IControl.Control\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nThis setting is off by default.\n</p>\n<p>\nNOTE: It is important to set the <xref href=\"Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideHideableTags\" data-throw-if-not-resolved=\"false\"></xref> to <code>true</code>\nif this setting is enabled, otherwise there will be no visual indication\nto the presence of hidden tags, as the surrounding text will all have the\nsame formatting.\n</p>\n<p>\nChanging this setting will affect the corresponding setting on both the source\nand target controls. If the source and target have different settings the value of this \nproperty will be <code>false</code>.\n</p>\n<p>\nNote that font fallback will still be in effect, which may cause a different\nfont to be used for characters that cannot be displayed using the default font.\n</p>\n"
  syntax:
    content: bool SuppressFormatting { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property SuppressFormatting As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SuppressFormatting*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideHideableTags
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideHideableTags
  id: HideHideableTags
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: HideHideableTags
  nameWithType: ISideBySideEditor.HideHideableTags
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideHideableTags
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nWhen <code>true</code> any tags with <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IAbstractInlineTagProperties.CanHide\" data-throw-if-not-resolved=\"false\"></xref> \nset to <code>true</code> will not be shown in the editor.\n"
  remarks: "\n<p>\nHidden tags can still be manipulated through normal editing operations \nin the surrounding text, so they may get accidentally deleted!\n</p>\n<p>\nWhen source and target use different settings this property is false.\n</p>\n"
  syntax:
    content: bool HideHideableTags { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property HideHideableTags As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideHideableTags*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.LayoutSynchronizer
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.LayoutSynchronizer
  id: LayoutSynchronizer
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: LayoutSynchronizer
  nameWithType: ISideBySideEditor.LayoutSynchronizer
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.LayoutSynchronizer
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nTo synchronize cell height between source and target controls every \nISideBySideEditor implementation must provide a LayoutSynchronizer.\n"
  syntax:
    content: ILayoutSynchronizer LayoutSynchronizer { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.ILayoutSynchronizer
    content.vb: ReadOnly Property LayoutSynchronizer As ILayoutSynchronizer
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.LayoutSynchronizer*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.DisplaySettings
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.DisplaySettings
  id: DisplaySettings
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: DisplaySettings
  nameWithType: ISideBySideEditor.DisplaySettings
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.DisplaySettings
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe display settings that will be used in both the source and target edit controls.\n"
  syntax:
    content: EditControlDisplaySettings DisplaySettings { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.Implementation.EditControlDisplaySettings
    content.vb: ReadOnly Property DisplaySettings As EditControlDisplaySettings
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.DisplaySettings*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.RowVisibilityDelegate
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.RowVisibilityDelegate
  id: RowVisibilityDelegate
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: RowVisibilityDelegate
  nameWithType: ISideBySideEditor.RowVisibilityDelegate
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.RowVisibilityDelegate
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe delegate that will be used when calculating which rows are visible and which are hidden\nin the edit control.\n"
  syntax:
    content: Predicate<IRowInfo> RowVisibilityDelegate { get; set; }
    parameters: []
    return:
      type: System.Predicate{Sdl.DesktopEditor.EditorApi.IRowInfo}
    content.vb: Property RowVisibilityDelegate As Predicate(Of IRowInfo)
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.RowVisibilityDelegate*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ShowSourceSegmentIdColumn
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ShowSourceSegmentIdColumn
  id: ShowSourceSegmentIdColumn
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: ShowSourceSegmentIdColumn
  nameWithType: ISideBySideEditor.ShowSourceSegmentIdColumn
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ShowSourceSegmentIdColumn
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nDetermines whether the left segment column id will be displayed\n"
  syntax:
    content: bool ShowSourceSegmentIdColumn { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property ShowSourceSegmentIdColumn As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ShowSourceSegmentIdColumn*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ProjectEditorConfig
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ProjectEditorConfig
  id: ProjectEditorConfig
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: ProjectEditorConfig
  nameWithType: ISideBySideEditor.ProjectEditorConfig
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ProjectEditorConfig
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nEditor configuration based on Project restrictions (secure mode/ normal mode)\n"
  syntax:
    content: ProjectEditorSettings ProjectEditorConfig { get; set; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.Implementation.ProjectEditorSettings
    content.vb: Property ProjectEditorConfig As ProjectEditorSettings
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ProjectEditorConfig*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.DocumentEditingUser
  commentId: P:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.DocumentEditingUser
  id: DocumentEditingUser
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: DocumentEditingUser
  nameWithType: ISideBySideEditor.DocumentEditingUser
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.DocumentEditingUser
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nSets the user to be used for revisions\n"
  syntax:
    content: string DocumentEditingUser { set; }
    parameters: []
    return:
      type: System.String
    content.vb: WriteOnly Property DocumentEditingUser As String
  overload: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.DocumentEditingUser*
  modifiers.csharp:
  - set
  modifiers.vb:
  - WriteOnly
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AfterInitialUpdate
  commentId: E:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AfterInitialUpdate
  id: AfterInitialUpdate
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: AfterInitialUpdate
  nameWithType: ISideBySideEditor.AfterInitialUpdate
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AfterInitialUpdate
  type: Event
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nRaised when the visible area of both the source and the target control has been fully laid out and painted\nfor the first time. This event will be raised also if a different document \nis assigned to the control (after the initial update resulting from that).\n"
  syntax:
    content: event EventHandler<AfterInitialUpdateEventArgs> AfterInitialUpdate
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs}
    content.vb: Event AfterInitialUpdate As EventHandler(Of AfterInitialUpdateEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AfterEditControlsCreated
  commentId: E:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AfterEditControlsCreated
  id: AfterEditControlsCreated
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: AfterEditControlsCreated
  nameWithType: ISideBySideEditor.AfterEditControlsCreated
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AfterEditControlsCreated
  type: Event
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nRaised after the source and target edit controls have been created.  This allows external components to add, for example,\ncustom columns to the side-by-side editor at a controlled point.\n"
  syntax:
    content: event EventHandler<AfterEditControlsCreatedEventArgs> AfterEditControlsCreated
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.AfterEditControlsCreatedEventArgs}
    content.vb: Event AfterEditControlsCreated As EventHandler(Of AfterEditControlsCreatedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SelectionChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SelectionChanged
  id: SelectionChanged
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: SelectionChanged
  nameWithType: ISideBySideEditor.SelectionChanged
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SelectionChanged
  type: Event
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nFired when the selection changes in the source or target edit control.\n"
  syntax:
    content: event EventHandler<SelectionChangedEventArgs> SelectionChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs}
    content.vb: Event SelectionChanged As EventHandler(Of SelectionChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.FocusedControlChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.FocusedControlChanged
  id: FocusedControlChanged
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: FocusedControlChanged
  nameWithType: ISideBySideEditor.FocusedControlChanged
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.FocusedControlChanged
  type: Event
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nFired when the source or target edit control gets or loses focus.\n"
  remarks: "\nYou can also handle focus changes by directly binding to the <code>GotFocus</code> or <code>LostFocus</code>\nevents on the <xref href=\"Sdl.DesktopEditor.EditorApi.IControl.Control\" data-throw-if-not-resolved=\"false\"></xref>\nevents of the <xref href=\"Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Source\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Target\" data-throw-if-not-resolved=\"false\"></xref> controls.\n"
  syntax:
    content: event EventHandler<FocusedControlChangedEventArgs> FocusedControlChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.FocusedControlChangedEventArgs}
    content.vb: Event FocusedControlChanged As EventHandler(Of FocusedControlChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ActiveRowChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ActiveRowChanged
  id: ActiveRowChanged
  parent: Sdl.DesktopEditor.EditorApi.ISideBySideEditor
  langs:
  - csharp
  - vb
  name: ActiveRowChanged
  nameWithType: ISideBySideEditor.ActiveRowChanged
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ActiveRowChanged
  type: Event
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nFired whenever the active row changes.\n"
  syntax:
    content: event EventHandler<ActiveRowChangedEventArgs> ActiveRowChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs}
    content.vb: Event ActiveRowChanged As EventHandler(Of ActiveRowChangedEventArgs)
references:
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: Sdl.DesktopEditor.EditorApi.IControl.Control
  commentId: P:Sdl.DesktopEditor.EditorApi.IControl.Control
  parent: Sdl.DesktopEditor.EditorApi.IControl
  isExternal: true
  name: Control
  nameWithType: IControl.Control
  fullName: Sdl.DesktopEditor.EditorApi.IControl.Control
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IControl
  commentId: T:Sdl.DesktopEditor.EditorApi.IControl
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IControl
  nameWithType: IControl
  fullName: Sdl.DesktopEditor.EditorApi.IControl
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SetDocument*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SetDocument
  isExternal: true
  name: SetDocument
  nameWithType: ISideBySideEditor.SetDocument
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SetDocument
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  commentId: T:Sdl.DesktopEditor.EditorApi.IBilingualDocument
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IBilingualDocument
  nameWithType: IBilingualDocument
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Redraw*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Redraw
  isExternal: true
  name: Redraw
  nameWithType: ISideBySideEditor.Redraw
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Redraw
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ScrollSourceToTargetSelection*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ScrollSourceToTargetSelection
  isExternal: true
  name: ScrollSourceToTargetSelection
  nameWithType: ISideBySideEditor.ScrollSourceToTargetSelection
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ScrollSourceToTargetSelection
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ToggleFocus*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ToggleFocus
  isExternal: true
  name: ToggleFocus
  nameWithType: ISideBySideEditor.ToggleFocus
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ToggleFocus
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Undo*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Undo
  isExternal: true
  name: Undo
  nameWithType: ISideBySideEditor.Undo
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Undo
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.UndoMultiple*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.UndoMultiple
  isExternal: true
  name: UndoMultiple
  nameWithType: ISideBySideEditor.UndoMultiple
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.UndoMultiple
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Redo*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Redo
  isExternal: true
  name: Redo
  nameWithType: ISideBySideEditor.Redo
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Redo
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.RedoMultiple*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.RedoMultiple
  isExternal: true
  name: RedoMultiple
  nameWithType: ISideBySideEditor.RedoMultiple
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.RedoMultiple
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.UpdateActiveRow*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.UpdateActiveRow
  isExternal: true
  name: UpdateActiveRow
  nameWithType: ISideBySideEditor.UpdateActiveRow
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.UpdateActiveRow
- uid: Sdl.DesktopEditor.EditorApi.IEditControl
  commentId: T:Sdl.DesktopEditor.EditorApi.IEditControl
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IEditControl
  nameWithType: IEditControl
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.IsInitialUpdateCompleted*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.IsInitialUpdateCompleted
  isExternal: true
  name: IsInitialUpdateCompleted
  nameWithType: ISideBySideEditor.IsInitialUpdateCompleted
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.IsInitialUpdateCompleted
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Source*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Source
  isExternal: true
  name: Source
  nameWithType: ISideBySideEditor.Source
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Source
- uid: Sdl.DesktopEditor.EditorApi.IFrameworkEditControl
  commentId: T:Sdl.DesktopEditor.EditorApi.IFrameworkEditControl
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IFrameworkEditControl
  nameWithType: IFrameworkEditControl
  fullName: Sdl.DesktopEditor.EditorApi.IFrameworkEditControl
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Target*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Target
  isExternal: true
  name: Target
  nameWithType: ISideBySideEditor.Target
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Target
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SplitContainer*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SplitContainer
  isExternal: true
  name: SplitContainer
  nameWithType: ISideBySideEditor.SplitContainer
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SplitContainer
- uid: System.Windows.Forms.SplitContainer
  commentId: '!:System.Windows.Forms.SplitContainer'
  isExternal: true
  name: SplitContainer
  nameWithType: SplitContainer
  fullName: System.Windows.Forms.SplitContainer
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.FocusedControl*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.FocusedControl
  isExternal: true
  name: FocusedControl
  nameWithType: ISideBySideEditor.FocusedControl
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.FocusedControl
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ActiveEditControl*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ActiveEditControl
  isExternal: true
  name: ActiveEditControl
  nameWithType: ISideBySideEditor.ActiveEditControl
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ActiveEditControl
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Document*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Document
  isExternal: true
  name: Document
  nameWithType: ISideBySideEditor.Document
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.Document
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoDisposeDocument*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoDisposeDocument
  isExternal: true
  name: AutoDisposeDocument
  nameWithType: ISideBySideEditor.AutoDisposeDocument
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoDisposeDocument
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoScrollSource*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoScrollSource
  isExternal: true
  name: AutoScrollSource
  nameWithType: ISideBySideEditor.AutoScrollSource
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.AutoScrollSource
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.EnableImplicitRowActivation*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.EnableImplicitRowActivation
  isExternal: true
  name: EnableImplicitRowActivation
  nameWithType: ISideBySideEditor.EnableImplicitRowActivation
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.EnableImplicitRowActivation
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.TagDisplayMode*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.TagDisplayMode
  isExternal: true
  name: TagDisplayMode
  nameWithType: ISideBySideEditor.TagDisplayMode
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.TagDisplayMode
- uid: Sdl.DesktopEditor.EditorApi.TagDisplayMode
  commentId: T:Sdl.DesktopEditor.EditorApi.TagDisplayMode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: TagDisplayMode
  nameWithType: TagDisplayMode
  fullName: Sdl.DesktopEditor.EditorApi.TagDisplayMode
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ShowWhitespaceCharacters*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ShowWhitespaceCharacters
  isExternal: true
  name: ShowWhitespaceCharacters
  nameWithType: ISideBySideEditor.ShowWhitespaceCharacters
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ShowWhitespaceCharacters
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideFileTags*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideFileTags
  isExternal: true
  name: HideFileTags
  nameWithType: ISideBySideEditor.HideFileTags
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideFileTags
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideTextTooltips*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideTextTooltips
  isExternal: true
  name: HideTextTooltips
  nameWithType: ISideBySideEditor.HideTextTooltips
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideTextTooltips
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SuppressFormatting*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SuppressFormatting
  isExternal: true
  name: SuppressFormatting
  nameWithType: ISideBySideEditor.SuppressFormatting
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.SuppressFormatting
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideHideableTags*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideHideableTags
  isExternal: true
  name: HideHideableTags
  nameWithType: ISideBySideEditor.HideHideableTags
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.HideHideableTags
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.LayoutSynchronizer*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.LayoutSynchronizer
  isExternal: true
  name: LayoutSynchronizer
  nameWithType: ISideBySideEditor.LayoutSynchronizer
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.LayoutSynchronizer
- uid: Sdl.DesktopEditor.EditorApi.ILayoutSynchronizer
  commentId: T:Sdl.DesktopEditor.EditorApi.ILayoutSynchronizer
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: ILayoutSynchronizer
  nameWithType: ILayoutSynchronizer
  fullName: Sdl.DesktopEditor.EditorApi.ILayoutSynchronizer
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.DisplaySettings*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.DisplaySettings
  isExternal: true
  name: DisplaySettings
  nameWithType: ISideBySideEditor.DisplaySettings
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.DisplaySettings
- uid: Sdl.DesktopEditor.EditorApi.Implementation.EditControlDisplaySettings
  commentId: T:Sdl.DesktopEditor.EditorApi.Implementation.EditControlDisplaySettings
  parent: Sdl.DesktopEditor.EditorApi.Implementation
  isExternal: true
  name: EditControlDisplaySettings
  nameWithType: EditControlDisplaySettings
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.EditControlDisplaySettings
- uid: Sdl.DesktopEditor.EditorApi.Implementation
  commentId: N:Sdl.DesktopEditor.EditorApi.Implementation
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi.Implementation
  nameWithType: Sdl.DesktopEditor.EditorApi.Implementation
  fullName: Sdl.DesktopEditor.EditorApi.Implementation
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.RowVisibilityDelegate*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.RowVisibilityDelegate
  isExternal: true
  name: RowVisibilityDelegate
  nameWithType: ISideBySideEditor.RowVisibilityDelegate
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.RowVisibilityDelegate
- uid: System.Predicate{Sdl.DesktopEditor.EditorApi.IRowInfo}
  commentId: T:System.Predicate{Sdl.DesktopEditor.EditorApi.IRowInfo}
  parent: System
  definition: System.Predicate`1
  name: Predicate<IRowInfo>
  nameWithType: Predicate<IRowInfo>
  fullName: System.Predicate<Sdl.DesktopEditor.EditorApi.IRowInfo>
  nameWithType.vb: Predicate(Of IRowInfo)
  fullName.vb: System.Predicate(Of Sdl.DesktopEditor.EditorApi.IRowInfo)
  name.vb: Predicate(Of IRowInfo)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    nameWithType: IRowInfo
    fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    nameWithType: IRowInfo
    fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ShowSourceSegmentIdColumn*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ShowSourceSegmentIdColumn
  isExternal: true
  name: ShowSourceSegmentIdColumn
  nameWithType: ISideBySideEditor.ShowSourceSegmentIdColumn
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ShowSourceSegmentIdColumn
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ProjectEditorConfig*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ProjectEditorConfig
  isExternal: true
  name: ProjectEditorConfig
  nameWithType: ISideBySideEditor.ProjectEditorConfig
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.ProjectEditorConfig
- uid: Sdl.DesktopEditor.EditorApi.Implementation.ProjectEditorSettings
  commentId: T:Sdl.DesktopEditor.EditorApi.Implementation.ProjectEditorSettings
  parent: Sdl.DesktopEditor.EditorApi.Implementation
  isExternal: true
  name: ProjectEditorSettings
  nameWithType: ProjectEditorSettings
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.ProjectEditorSettings
- uid: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.DocumentEditingUser*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISideBySideEditor.DocumentEditingUser
  isExternal: true
  name: DocumentEditingUser
  nameWithType: ISideBySideEditor.DocumentEditingUser
  fullName: Sdl.DesktopEditor.EditorApi.ISideBySideEditor.DocumentEditingUser
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<AfterInitialUpdateEventArgs>
  nameWithType: EventHandler<AfterInitialUpdateEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs>
  nameWithType.vb: EventHandler(Of AfterInitialUpdateEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs)
  name.vb: EventHandler(Of AfterInitialUpdateEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs
    name: AfterInitialUpdateEventArgs
    nameWithType: AfterInitialUpdateEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs
    name: AfterInitialUpdateEventArgs
    nameWithType: AfterInitialUpdateEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.AfterEditControlsCreatedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.AfterEditControlsCreatedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<AfterEditControlsCreatedEventArgs>
  nameWithType: EventHandler<AfterEditControlsCreatedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.AfterEditControlsCreatedEventArgs>
  nameWithType.vb: EventHandler(Of AfterEditControlsCreatedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.AfterEditControlsCreatedEventArgs)
  name.vb: EventHandler(Of AfterEditControlsCreatedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.AfterEditControlsCreatedEventArgs
    name: AfterEditControlsCreatedEventArgs
    nameWithType: AfterEditControlsCreatedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.AfterEditControlsCreatedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.AfterEditControlsCreatedEventArgs
    name: AfterEditControlsCreatedEventArgs
    nameWithType: AfterEditControlsCreatedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.AfterEditControlsCreatedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<SelectionChangedEventArgs>
  nameWithType: EventHandler<SelectionChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs>
  nameWithType.vb: EventHandler(Of SelectionChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs)
  name.vb: EventHandler(Of SelectionChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs
    name: SelectionChangedEventArgs
    nameWithType: SelectionChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs
    name: SelectionChangedEventArgs
    nameWithType: SelectionChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.FocusedControlChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.FocusedControlChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<FocusedControlChangedEventArgs>
  nameWithType: EventHandler<FocusedControlChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.FocusedControlChangedEventArgs>
  nameWithType.vb: EventHandler(Of FocusedControlChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.FocusedControlChangedEventArgs)
  name.vb: EventHandler(Of FocusedControlChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.FocusedControlChangedEventArgs
    name: FocusedControlChangedEventArgs
    nameWithType: FocusedControlChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.FocusedControlChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.FocusedControlChangedEventArgs
    name: FocusedControlChangedEventArgs
    nameWithType: FocusedControlChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.FocusedControlChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ActiveRowChangedEventArgs>
  nameWithType: EventHandler<ActiveRowChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs>
  nameWithType.vb: EventHandler(Of ActiveRowChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs)
  name.vb: EventHandler(Of ActiveRowChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs
    name: ActiveRowChangedEventArgs
    nameWithType: ActiveRowChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs
    name: ActiveRowChangedEventArgs
    nameWithType: ActiveRowChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
