### YamlMime:ManagedReference
items:
- uid: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute
  commentId: T:Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute
  id: AbstractLayoutAttribute
  parent: Sdl.Desktop.IntegrationApi.Extensions
  children:
  - Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.#ctor
  - Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.#ctor(System.Type)
  - Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.DisplayType
  - Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.IsSeparator
  - Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.LocationByType
  - Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.Name
  - Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.ZIndex
  langs:
  - csharp
  - vb
  name: AbstractLayoutAttribute
  nameWithType: AbstractLayoutAttribute
  fullName: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute
  type: Class
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions
  summary: "\nAbstract base class for auxiliary extension attributes that specify the location of plug-in items on a command bar.\n"
  syntax:
    content: 'public abstract class AbstractLayoutAttribute : AuxiliaryExtensionAttribute, ILocationAware'
    content.vb: >-
      Public MustInherit Class AbstractLayoutAttribute
          Inherits AuxiliaryExtensionAttribute
          Implements ILocationAware
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.Desktop.IntegrationApi.Extensions.ActionLayoutAttribute
  - Sdl.Desktop.IntegrationApi.Extensions.RibbonGroupLayoutAttribute
  - Sdl.Desktop.IntegrationApi.Extensions.ViewPartLayoutAttribute
  implements:
  - Sdl.Desktop.IntegrationApi.Extensions.ILocationAware
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.#ctor
  commentId: M:Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.#ctor
  id: '#ctor'
  parent: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute
  langs:
  - csharp
  - vb
  name: AbstractLayoutAttribute()
  nameWithType: AbstractLayoutAttribute.AbstractLayoutAttribute()
  fullName: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.AbstractLayoutAttribute()
  type: Constructor
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions
  summary: "\nDefault constructor for XML serialization.\n"
  syntax:
    content: protected AbstractLayoutAttribute()
    content.vb: Protected Sub New
  overload: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.#ctor(System.Type)
  commentId: M:Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute
  langs:
  - csharp
  - vb
  name: AbstractLayoutAttribute(Type)
  nameWithType: AbstractLayoutAttribute.AbstractLayoutAttribute(Type)
  fullName: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.AbstractLayoutAttribute(System.Type)
  type: Constructor
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions
  summary: "\nConstructor using the target command bar path.\n"
  syntax:
    content: protected AbstractLayoutAttribute(Type locationType)
    parameters:
    - id: locationType
      type: System.Type
      description: The location by type at which to insert the plug-in item.
    content.vb: Protected Sub New(locationType As Type)
  overload: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.LocationByType
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.LocationByType
  id: LocationByType
  parent: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute
  langs:
  - csharp
  - vb
  name: LocationByType
  nameWithType: AbstractLayoutAttribute.LocationByType
  fullName: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.LocationByType
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions
  summary: "\nThe type of the location where the UI element is positioned.\n"
  syntax:
    content: public Type LocationByType { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Property LocationByType As Type
  overload: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.LocationByType*
  implements:
  - Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.LocationByType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.ZIndex
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.ZIndex
  id: ZIndex
  parent: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute
  langs:
  - csharp
  - vb
  name: ZIndex
  nameWithType: AbstractLayoutAttribute.ZIndex
  fullName: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.ZIndex
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions
  summary: "\nDefines a 0 based index order for the UI elements where the highest value is the most important.\n"
  remarks: "\n<p>\nThe z-Index ordering is performed only for the intergrated elements and have a lower priority than SDL ordering. It acts as importance from left to right or top to bottom.\n</p>\n<p> The highest ZIndex value is in the left or top and the lowest value is in the right or bottom. </p>        \n"
  syntax:
    content: public uint ZIndex { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property ZIndex As UInteger
  overload: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.ZIndex*
  implements:
  - Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.ZIndex
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.IsSeparator
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.IsSeparator
  id: IsSeparator
  parent: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute
  langs:
  - csharp
  - vb
  name: IsSeparator
  nameWithType: AbstractLayoutAttribute.IsSeparator
  fullName: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.IsSeparator
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions
  summary: "\n\n"
  syntax:
    content: public bool IsSeparator { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSeparator As Boolean
  overload: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.IsSeparator*
  implements:
  - Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.IsSeparator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.Name
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.Name
  id: Name
  parent: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AbstractLayoutAttribute.Name
  fullName: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.Name
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions
  summary: "\nAn instance specific name, overriding the default <xref href=\"Sdl.Core.PluginFramework.ExtensionAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref>, which should be \nused for this instance. This only has an effect for instances of actions. Can be null.\n"
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.DisplayType
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.DisplayType
  id: DisplayType
  parent: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute
  langs:
  - csharp
  - vb
  name: DisplayType
  nameWithType: AbstractLayoutAttribute.DisplayType
  fullName: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.DisplayType
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions
  summary: "\nThe visual representation type.\n"
  syntax:
    content: public DisplayType DisplayType { get; set; }
    parameters: []
    return:
      type: Sdl.Desktop.IntegrationApi.Extensions.DisplayType
    content.vb: Public Property DisplayType As DisplayType
  overload: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.DisplayType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.Desktop.IntegrationApi.Extensions
  commentId: N:Sdl.Desktop.IntegrationApi.Extensions
  isExternal: true
  name: Sdl.Desktop.IntegrationApi.Extensions
  nameWithType: Sdl.Desktop.IntegrationApi.Extensions
  fullName: Sdl.Desktop.IntegrationApi.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware
  commentId: T:Sdl.Desktop.IntegrationApi.Extensions.ILocationAware
  parent: Sdl.Desktop.IntegrationApi.Extensions
  isExternal: true
  name: ILocationAware
  nameWithType: ILocationAware
  fullName: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.#ctor*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.#ctor
  isExternal: true
  name: AbstractLayoutAttribute
  nameWithType: AbstractLayoutAttribute.AbstractLayoutAttribute
  fullName: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.AbstractLayoutAttribute
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.LocationByType*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.LocationByType
  isExternal: true
  name: LocationByType
  nameWithType: AbstractLayoutAttribute.LocationByType
  fullName: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.LocationByType
- uid: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.LocationByType
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.LocationByType
  parent: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware
  isExternal: true
  name: LocationByType
  nameWithType: ILocationAware.LocationByType
  fullName: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.LocationByType
- uid: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.ZIndex*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.ZIndex
  isExternal: true
  name: ZIndex
  nameWithType: AbstractLayoutAttribute.ZIndex
  fullName: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.ZIndex
- uid: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.ZIndex
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.ZIndex
  parent: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware
  isExternal: true
  name: ZIndex
  nameWithType: ILocationAware.ZIndex
  fullName: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.ZIndex
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.IsSeparator*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.IsSeparator
  isExternal: true
  name: IsSeparator
  nameWithType: AbstractLayoutAttribute.IsSeparator
  fullName: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.IsSeparator
- uid: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.IsSeparator
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.IsSeparator
  parent: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware
  isExternal: true
  name: IsSeparator
  nameWithType: ILocationAware.IsSeparator
  fullName: Sdl.Desktop.IntegrationApi.Extensions.ILocationAware.IsSeparator
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.Name*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.Name
  isExternal: true
  name: Name
  nameWithType: AbstractLayoutAttribute.Name
  fullName: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.DisplayType*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.DisplayType
  isExternal: true
  name: DisplayType
  nameWithType: AbstractLayoutAttribute.DisplayType
  fullName: Sdl.Desktop.IntegrationApi.Extensions.AbstractLayoutAttribute.DisplayType
- uid: Sdl.Desktop.IntegrationApi.Extensions.DisplayType
  commentId: T:Sdl.Desktop.IntegrationApi.Extensions.DisplayType
  parent: Sdl.Desktop.IntegrationApi.Extensions
  isExternal: true
  name: DisplayType
  nameWithType: DisplayType
  fullName: Sdl.Desktop.IntegrationApi.Extensions.DisplayType
