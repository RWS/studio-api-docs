### YamlMime:ManagedReference
items:
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction
  commentId: T:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction
  id: IAction
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal
  children:
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.ActionGroup
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Available
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Checked
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.DisplayType
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Enabled
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Execute
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Icon
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Id
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Initialize
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.PropertyChanged
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Style
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Text
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.ToolTipText
  langs:
  - csharp
  - vb
  name: IAction
  nameWithType: IAction
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction
  type: Interface
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nRepresents a user action, which can be added to a command bar.\n"
  syntax:
    content: public interface IAction
    content.vb: Public Interface IAction
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Execute
  commentId: M:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Execute
  id: Execute
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: IAction.Execute()
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Execute()
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nCalled when the user activates this action.\n"
  syntax:
    content: bool Execute()
    return:
      type: System.Boolean
    content.vb: Function Execute As Boolean
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Execute*
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Initialize
  commentId: M:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Initialize
  id: Initialize
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: IAction.Initialize()
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Initialize()
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nCalled when the action is initialized.\n"
  syntax:
    content: void Initialize()
    content.vb: Sub Initialize
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Initialize*
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Id
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Id
  id: Id
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IAction.Id
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Id
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nReturns the unique id for this action.\n"
  remarks: This id is unique across the Studio.
  syntax:
    content: string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Id As String
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Text
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Text
  id: Text
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: IAction.Text
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Text
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nReturns the text for this action.\n"
  remarks: Can contain an ampersand to indicate the mnemonic character.
  syntax:
    content: string Text { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Text As String
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Text*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.ToolTipText
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.ToolTipText
  id: ToolTipText
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction
  langs:
  - csharp
  - vb
  name: ToolTipText
  nameWithType: IAction.ToolTipText
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.ToolTipText
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nReturns the tooltip test for this action.\n"
  syntax:
    content: string ToolTipText { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ToolTipText As String
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.ToolTipText*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Icon
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Icon
  id: Icon
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: IAction.Icon
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Icon
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nReturns the icon for this action. Can be null.\n"
  syntax:
    content: Icon Icon { get; }
    parameters: []
    return:
      type: System.Drawing.Icon
    content.vb: ReadOnly Property Icon As Icon
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Icon*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Enabled
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Enabled
  id: Enabled
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: IAction.Enabled
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Enabled
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nReturns whether this action is currently enabled.\n"
  remarks: If an action is not enabled, it is shown is greyed out on the command bar.
  syntax:
    content: bool Enabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Enabled As Boolean
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Enabled*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Available
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Available
  id: Available
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction
  langs:
  - csharp
  - vb
  name: Available
  nameWithType: IAction.Available
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Available
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nReturns whether this action is currently available.\n"
  remarks: If an action is not enabled, it is not shown on the command bar.
  syntax:
    content: bool Available { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Available As Boolean
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Available*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Style
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Style
  id: Style
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction
  langs:
  - csharp
  - vb
  name: Style
  nameWithType: IAction.Style
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Style
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nReturns the action style.\n"
  syntax:
    content: ActionStyle Style { get; }
    parameters: []
    return:
      type: Sdl.Desktop.IntegrationApi.Extensions.Internal.ActionStyle
    content.vb: ReadOnly Property Style As ActionStyle
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Style*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.DisplayType
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.DisplayType
  id: DisplayType
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction
  langs:
  - csharp
  - vb
  name: DisplayType
  nameWithType: IAction.DisplayType
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.DisplayType
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nRibbon action size\n"
  syntax:
    content: DisplayType DisplayType { get; }
    parameters: []
    return:
      type: Sdl.Desktop.IntegrationApi.Extensions.DisplayType
    content.vb: ReadOnly Property DisplayType As DisplayType
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.DisplayType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Checked
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Checked
  id: Checked
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction
  langs:
  - csharp
  - vb
  name: Checked
  nameWithType: IAction.Checked
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Checked
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nGets or sets whether this action is checked. This property is only valid when the action style (<xref href=\"Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Style\" data-throw-if-not-resolved=\"false\"></xref>\nproperty is set to <xref href=\"Sdl.Desktop.IntegrationApi.Extensions.Internal.ActionStyle.ToggleButton\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: bool Checked { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property Checked As Boolean
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Checked*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.ActionGroup
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.ActionGroup
  id: ActionGroup
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction
  langs:
  - csharp
  - vb
  name: ActionGroup
  nameWithType: IAction.ActionGroup
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.ActionGroup
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nReturns the action group this action is part of. This property is only valid when the action style (<xref href=\"Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Style\" data-throw-if-not-resolved=\"false\"></xref>\nproperty is set to <xref href=\"Sdl.Desktop.IntegrationApi.Extensions.Internal.ActionStyle.ToggleButton\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>This property is ignored unless the <xref href=\"Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Style\" data-throw-if-not-resolved=\"false\"></xref> property is set to <xref href=\"Sdl.Desktop.IntegrationApi.Extensions.Internal.ActionStyle.ToggleButton\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The action group should be a string that is unique across the studio. All ToggleButton style actions\nthat share the same action group act as a group and are rendered as a rdaio button.</p>\n<p>When null, the action is shown on the command bar as a checkbox, otherwise it is shown as a radio button.</p>\n"
  syntax:
    content: string ActionGroup { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ActionGroup As String
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.ActionGroup*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.PropertyChanged
  commentId: E:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.PropertyChanged
  id: PropertyChanged
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: IAction.PropertyChanged
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.PropertyChanged
  type: Event
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nRaised when the value of one of the action&apos;s properties changed.\n"
  remarks: For possible property values, see the constants defined in <xref href="Sdl.Desktop.IntegrationApi.Extensions.Internal.ActionProperties" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: event EventHandler<ActionPropertyChangedEventArgs> PropertyChanged
    return:
      type: System.EventHandler{Sdl.Desktop.IntegrationApi.Extensions.Internal.ActionPropertyChangedEventArgs}
    content.vb: Event PropertyChanged As EventHandler(Of ActionPropertyChangedEventArgs)
references:
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal
  commentId: N:Sdl.Desktop.IntegrationApi.Extensions.Internal
  isExternal: true
  name: Sdl.Desktop.IntegrationApi.Extensions.Internal
  nameWithType: Sdl.Desktop.IntegrationApi.Extensions.Internal
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Execute*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Execute
  isExternal: true
  name: Execute
  nameWithType: IAction.Execute
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Execute
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Initialize*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Initialize
  isExternal: true
  name: Initialize
  nameWithType: IAction.Initialize
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Initialize
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Id*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Id
  isExternal: true
  name: Id
  nameWithType: IAction.Id
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Text*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Text
  isExternal: true
  name: Text
  nameWithType: IAction.Text
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Text
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.ToolTipText*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.ToolTipText
  isExternal: true
  name: ToolTipText
  nameWithType: IAction.ToolTipText
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.ToolTipText
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Icon*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Icon
  isExternal: true
  name: Icon
  nameWithType: IAction.Icon
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Icon
- uid: System.Drawing.Icon
  isExternal: true
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Enabled*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Enabled
  isExternal: true
  name: Enabled
  nameWithType: IAction.Enabled
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Enabled
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Available*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Available
  isExternal: true
  name: Available
  nameWithType: IAction.Available
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Available
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Style*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Style
  isExternal: true
  name: Style
  nameWithType: IAction.Style
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Style
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.ActionStyle
  commentId: T:Sdl.Desktop.IntegrationApi.Extensions.Internal.ActionStyle
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal
  isExternal: true
  name: ActionStyle
  nameWithType: ActionStyle
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.ActionStyle
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.DisplayType*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.DisplayType
  isExternal: true
  name: DisplayType
  nameWithType: IAction.DisplayType
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.DisplayType
- uid: Sdl.Desktop.IntegrationApi.Extensions.DisplayType
  commentId: T:Sdl.Desktop.IntegrationApi.Extensions.DisplayType
  parent: Sdl.Desktop.IntegrationApi.Extensions
  isExternal: true
  name: DisplayType
  nameWithType: DisplayType
  fullName: Sdl.Desktop.IntegrationApi.Extensions.DisplayType
- uid: Sdl.Desktop.IntegrationApi.Extensions
  commentId: N:Sdl.Desktop.IntegrationApi.Extensions
  isExternal: true
  name: Sdl.Desktop.IntegrationApi.Extensions
  nameWithType: Sdl.Desktop.IntegrationApi.Extensions
  fullName: Sdl.Desktop.IntegrationApi.Extensions
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Checked*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Checked
  isExternal: true
  name: Checked
  nameWithType: IAction.Checked
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.Checked
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.ActionGroup*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.ActionGroup
  isExternal: true
  name: ActionGroup
  nameWithType: IAction.ActionGroup
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.IAction.ActionGroup
- uid: System.EventHandler{Sdl.Desktop.IntegrationApi.Extensions.Internal.ActionPropertyChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.Desktop.IntegrationApi.Extensions.Internal.ActionPropertyChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ActionPropertyChangedEventArgs>
  nameWithType: EventHandler<ActionPropertyChangedEventArgs>
  fullName: System.EventHandler<Sdl.Desktop.IntegrationApi.Extensions.Internal.ActionPropertyChangedEventArgs>
  nameWithType.vb: EventHandler(Of ActionPropertyChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.Desktop.IntegrationApi.Extensions.Internal.ActionPropertyChangedEventArgs)
  name.vb: EventHandler(Of ActionPropertyChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.ActionPropertyChangedEventArgs
    name: ActionPropertyChangedEventArgs
    nameWithType: ActionPropertyChangedEventArgs
    fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.ActionPropertyChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.ActionPropertyChangedEventArgs
    name: ActionPropertyChangedEventArgs
    nameWithType: ActionPropertyChangedEventArgs
    fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.ActionPropertyChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
