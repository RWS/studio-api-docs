### YamlMime:ManagedReference
items:
- uid: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent
  commentId: T:Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent
  id: AddStudioNotificationOrCreateGroupEvent
  parent: Sdl.Desktop.IntegrationApi.Notifications.Events
  children:
  - Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.#ctor(System.String,Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification,System.String)
  - Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.GroupNotificationKey
  - Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.NewGroupTitle
  - Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.Notification
  langs:
  - csharp
  - vb
  name: AddStudioNotificationOrCreateGroupEvent
  nameWithType: AddStudioNotificationOrCreateGroupEvent
  fullName: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent
  type: Class
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Notifications.Events
  summary: "\nUse this event if you want to add a notification to a certain group. \nIn case the group does not exist, this will also create a group to hold the notification\n"
  syntax:
    content: public class AddStudioNotificationOrCreateGroupEvent
    content.vb: Public Class AddStudioNotificationOrCreateGroupEvent
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.#ctor(System.String,Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification,System.String)
  commentId: M:Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.#ctor(System.String,Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification,System.String)
  id: '#ctor(System.String,Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification,System.String)'
  parent: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent
  langs:
  - csharp
  - vb
  name: AddStudioNotificationOrCreateGroupEvent(String, IStudioNotification, String)
  nameWithType: AddStudioNotificationOrCreateGroupEvent.AddStudioNotificationOrCreateGroupEvent(String, IStudioNotification, String)
  fullName: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.AddStudioNotificationOrCreateGroupEvent(System.String, Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification, System.String)
  type: Constructor
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Notifications.Events
  summary: "\nAdds the given notification to a group with the given key and specifies a group title\n"
  syntax:
    content: public AddStudioNotificationOrCreateGroupEvent(string groupNotificationKey, IStudioNotification notification, string newGroupTitle)
    parameters:
    - id: groupNotificationKey
      type: System.String
      description: The unique group key
    - id: notification
      type: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
      description: The dotification to be added
    - id: newGroupTitle
      type: System.String
      description: The group title
    content.vb: Public Sub New(groupNotificationKey As String, notification As IStudioNotification, newGroupTitle As String)
  overload: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.NewGroupTitle
  commentId: P:Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.NewGroupTitle
  id: NewGroupTitle
  parent: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent
  langs:
  - csharp
  - vb
  name: NewGroupTitle
  nameWithType: AddStudioNotificationOrCreateGroupEvent.NewGroupTitle
  fullName: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.NewGroupTitle
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Notifications.Events
  summary: "\nThe title for the group in case it needs to be created\n"
  syntax:
    content: public string NewGroupTitle { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NewGroupTitle As String
  overload: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.NewGroupTitle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.Notification
  commentId: P:Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.Notification
  id: Notification
  parent: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent
  langs:
  - csharp
  - vb
  name: Notification
  nameWithType: AddStudioNotificationOrCreateGroupEvent.Notification
  fullName: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.Notification
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Notifications.Events
  summary: "\nThe notification to be added\n"
  syntax:
    content: public IStudioNotification Notification { get; set; }
    parameters: []
    return:
      type: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
    content.vb: Public Property Notification As IStudioNotification
  overload: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.Notification*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.GroupNotificationKey
  commentId: P:Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.GroupNotificationKey
  id: GroupNotificationKey
  parent: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent
  langs:
  - csharp
  - vb
  name: GroupNotificationKey
  nameWithType: AddStudioNotificationOrCreateGroupEvent.GroupNotificationKey
  fullName: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.GroupNotificationKey
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Notifications.Events
  summary: "\nThe unique identifier for the group to which the notification needs to be added\n"
  syntax:
    content: public string GroupNotificationKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GroupNotificationKey As String
  overload: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.GroupNotificationKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.Desktop.IntegrationApi.Notifications.Events
  commentId: N:Sdl.Desktop.IntegrationApi.Notifications.Events
  isExternal: true
  name: Sdl.Desktop.IntegrationApi.Notifications.Events
  nameWithType: Sdl.Desktop.IntegrationApi.Notifications.Events
  fullName: Sdl.Desktop.IntegrationApi.Notifications.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.#ctor*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.#ctor
  isExternal: true
  name: AddStudioNotificationOrCreateGroupEvent
  nameWithType: AddStudioNotificationOrCreateGroupEvent.AddStudioNotificationOrCreateGroupEvent
  fullName: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.AddStudioNotificationOrCreateGroupEvent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
  commentId: T:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
  parent: Sdl.Desktop.IntegrationApi.Interfaces
  isExternal: true
  name: IStudioNotification
  nameWithType: IStudioNotification
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
- uid: Sdl.Desktop.IntegrationApi.Interfaces
  commentId: N:Sdl.Desktop.IntegrationApi.Interfaces
  isExternal: true
  name: Sdl.Desktop.IntegrationApi.Interfaces
  nameWithType: Sdl.Desktop.IntegrationApi.Interfaces
  fullName: Sdl.Desktop.IntegrationApi.Interfaces
- uid: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.NewGroupTitle*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.NewGroupTitle
  isExternal: true
  name: NewGroupTitle
  nameWithType: AddStudioNotificationOrCreateGroupEvent.NewGroupTitle
  fullName: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.NewGroupTitle
- uid: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.Notification*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.Notification
  isExternal: true
  name: Notification
  nameWithType: AddStudioNotificationOrCreateGroupEvent.Notification
  fullName: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.Notification
- uid: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.GroupNotificationKey*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.GroupNotificationKey
  isExternal: true
  name: GroupNotificationKey
  nameWithType: AddStudioNotificationOrCreateGroupEvent.GroupNotificationKey
  fullName: Sdl.Desktop.IntegrationApi.Notifications.Events.AddStudioNotificationOrCreateGroupEvent.GroupNotificationKey
