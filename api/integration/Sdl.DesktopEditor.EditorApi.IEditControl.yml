### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.IEditControl
  commentId: T:Sdl.DesktopEditor.EditorApi.IEditControl
  id: IEditControl
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.IEditControl.AcceptsReturn
  - Sdl.DesktopEditor.EditorApi.IEditControl.AcceptsTab
  - Sdl.DesktopEditor.EditorApi.IEditControl.ActiveRow
  - Sdl.DesktopEditor.EditorApi.IEditControl.ActiveRowChanged
  - Sdl.DesktopEditor.EditorApi.IEditControl.AddActiveRowToSelected
  - Sdl.DesktopEditor.EditorApi.IEditControl.AddColumn(Sdl.DesktopEditor.EditorApi.ICustomColumn,Sdl.DesktopEditor.EditorApi.CustomColumnLocation)
  - Sdl.DesktopEditor.EditorApi.IEditControl.AddTextMark(Sdl.DesktopEditor.EditorApi.ContentRange,Sdl.DesktopEditor.EditorApi.TextMarkLayer,Sdl.DesktopEditor.EditorApi.ITextMarkPainter)
  - Sdl.DesktopEditor.EditorApi.IEditControl.AfterInitialUpdate
  - Sdl.DesktopEditor.EditorApi.IEditControl.AllSelectedRowsCleared
  - Sdl.DesktopEditor.EditorApi.IEditControl.AutoScrollToRowPosition(Sdl.DesktopEditor.EditorApi.IRowInfo,Sdl.DesktopEditor.EditorApi.IRowInfo)
  - Sdl.DesktopEditor.EditorApi.IEditControl.AutoUpdate
  - Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperation
  - Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperationChanged
  - Sdl.DesktopEditor.EditorApi.IEditControl.CanCopySelectionToClipboard
  - Sdl.DesktopEditor.EditorApi.IEditControl.CanCutSelectionToClipboard
  - Sdl.DesktopEditor.EditorApi.IEditControl.CanPasteClipboardToDocument
  - Sdl.DesktopEditor.EditorApi.IEditControl.ChangeFocusedRowSelection
  - Sdl.DesktopEditor.EditorApi.IEditControl.ChangeNextRowSelection
  - Sdl.DesktopEditor.EditorApi.IEditControl.ChangePreviousRowSelection
  - Sdl.DesktopEditor.EditorApi.IEditControl.ClearAllRowSelections
  - Sdl.DesktopEditor.EditorApi.IEditControl.ClearRowSelection(Sdl.DesktopEditor.EditorApi.IRowInfo)
  - Sdl.DesktopEditor.EditorApi.IEditControl.ClearTextMarks
  - Sdl.DesktopEditor.EditorApi.IEditControl.ColumnsLeft
  - Sdl.DesktopEditor.EditorApi.IEditControl.ColumnsRight
  - Sdl.DesktopEditor.EditorApi.IEditControl.ContentHeight
  - Sdl.DesktopEditor.EditorApi.IEditControl.ContentHeightChanged
  - Sdl.DesktopEditor.EditorApi.IEditControl.CopySelection
  - Sdl.DesktopEditor.EditorApi.IEditControl.CopySelectionToClipboard
  - Sdl.DesktopEditor.EditorApi.IEditControl.CreateTextIterator(Sdl.DesktopEditor.EditorApi.Position)
  - Sdl.DesktopEditor.EditorApi.IEditControl.CutSelectionToClipboard
  - Sdl.DesktopEditor.EditorApi.IEditControl.DeleteSelection
  - Sdl.DesktopEditor.EditorApi.IEditControl.Document
  - Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperation
  - Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperationChanged
  - Sdl.DesktopEditor.EditorApi.IEditControl.FindRow(Sdl.DesktopEditor.EditorApi.Position)
  - Sdl.DesktopEditor.EditorApi.IEditControl.FocusNextRow
  - Sdl.DesktopEditor.EditorApi.IEditControl.FocusPreviousRow
  - Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestLocation(Sdl.DesktopEditor.EditorApi.Position)
  - Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestPosition(System.Drawing.Point)
  - Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestVisiblePosition(Sdl.DesktopEditor.EditorApi.Position)
  - Sdl.DesktopEditor.EditorApi.IEditControl.GetVisibleRowsInRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  - Sdl.DesktopEditor.EditorApi.IEditControl.HasSelectedRows
  - Sdl.DesktopEditor.EditorApi.IEditControl.HideFileTags
  - Sdl.DesktopEditor.EditorApi.IEditControl.HighlightActiveRow
  - Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedBackColor
  - Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRowChanged
  - Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRows
  - Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRowsChanged
  - Sdl.DesktopEditor.EditorApi.IEditControl.IMECompositionChanged
  - Sdl.DesktopEditor.EditorApi.IEditControl.IMEEndComposition
  - Sdl.DesktopEditor.EditorApi.IEditControl.IMEStartComposition
  - Sdl.DesktopEditor.EditorApi.IEditControl.IsInitialUpdateCompleted
  - Sdl.DesktopEditor.EditorApi.IEditControl.IsOverwriteModeEnabled
  - Sdl.DesktopEditor.EditorApi.IEditControl.IsReadOnly
  - Sdl.DesktopEditor.EditorApi.IEditControl.IsRowVisible(System.Int32)
  - Sdl.DesktopEditor.EditorApi.IEditControl.IsWordStart(Sdl.DesktopEditor.EditorApi.Position)
  - Sdl.DesktopEditor.EditorApi.IEditControl.MouseEnteringNode
  - Sdl.DesktopEditor.EditorApi.IEditControl.MouseEnteringTextMarks
  - Sdl.DesktopEditor.EditorApi.IEditControl.MouseLeavingNode
  - Sdl.DesktopEditor.EditorApi.IEditControl.MouseLeavingTextMarks
  - Sdl.DesktopEditor.EditorApi.IEditControl.NotifyTextMarkChanged(Sdl.DesktopEditor.EditorApi.ITextMark)
  - Sdl.DesktopEditor.EditorApi.IEditControl.OverwriteModeChanged
  - Sdl.DesktopEditor.EditorApi.IEditControl.PasteClipboardToDocument
  - Sdl.DesktopEditor.EditorApi.IEditControl.PersistentScrollInfoChanged
  - Sdl.DesktopEditor.EditorApi.IEditControl.Redo
  - Sdl.DesktopEditor.EditorApi.IEditControl.RedoMultiple(System.Int64)
  - Sdl.DesktopEditor.EditorApi.IEditControl.Redraw
  - Sdl.DesktopEditor.EditorApi.IEditControl.Refresh
  - Sdl.DesktopEditor.EditorApi.IEditControl.RemoveColumn(Sdl.DesktopEditor.EditorApi.ICustomColumn)
  - Sdl.DesktopEditor.EditorApi.IEditControl.RemoveTextMark(Sdl.DesktopEditor.EditorApi.ITextMark)
  - Sdl.DesktopEditor.EditorApi.IEditControl.ReplaceSelection(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  - Sdl.DesktopEditor.EditorApi.IEditControl.RowBackColorChanged
  - Sdl.DesktopEditor.EditorApi.IEditControl.RowStructureChanged
  - Sdl.DesktopEditor.EditorApi.IEditControl.Rows
  - Sdl.DesktopEditor.EditorApi.IEditControl.ScrollIntoView(Sdl.DesktopEditor.EditorApi.IRowInfo)
  - Sdl.DesktopEditor.EditorApi.IEditControl.ScrollIntoView(Sdl.DesktopEditor.EditorApi.Position)
  - Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToCenter(Sdl.DesktopEditor.EditorApi.IRowInfo)
  - Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToRow(System.Int64,System.Int64)
  - Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  - Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Boolean,System.Boolean)
  - Sdl.DesktopEditor.EditorApi.IEditControl.SelectRowRange(Sdl.DesktopEditor.EditorApi.IRowInfo,Sdl.DesktopEditor.EditorApi.IRowInfo)
  - Sdl.DesktopEditor.EditorApi.IEditControl.SelectedBackColor
  - Sdl.DesktopEditor.EditorApi.IEditControl.SelectedRowChanged
  - Sdl.DesktopEditor.EditorApi.IEditControl.SelectedRows
  - Sdl.DesktopEditor.EditorApi.IEditControl.Selection
  - Sdl.DesktopEditor.EditorApi.IEditControl.SelectionChanged
  - Sdl.DesktopEditor.EditorApi.IEditControl.SelectionWasDeleted
  - Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsHighlighted(System.Collections.Generic.IList{System.Int32},System.Boolean)
  - Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsVisibility(System.Predicate{Sdl.DesktopEditor.EditorApi.IRowInfo})
  - Sdl.DesktopEditor.EditorApi.IEditControl.ShowWhitespaceCharacters
  - Sdl.DesktopEditor.EditorApi.IEditControl.SmartPasteAdjustingSpaces
  - Sdl.DesktopEditor.EditorApi.IEditControl.SourceEditingModeEnded
  - Sdl.DesktopEditor.EditorApi.IEditControl.TagPainter
  - Sdl.DesktopEditor.EditorApi.IEditControl.TextMarks
  - Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowNumber
  - Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowScrollOffset
  - Sdl.DesktopEditor.EditorApi.IEditControl.Undo
  - Sdl.DesktopEditor.EditorApi.IEditControl.UndoMultiple(System.Int64)
  - Sdl.DesktopEditor.EditorApi.IEditControl.VScroll
  - Sdl.DesktopEditor.EditorApi.IEditControl.VerticalScrollOffset
  - Sdl.DesktopEditor.EditorApi.IEditControl.VisibleRows
  langs:
  - csharp
  - vb
  name: IEditControl
  nameWithType: IEditControl
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl
  type: Interface
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    The edit control root interface. Provides access to the selection, the Undo buffer and 

    a number of properties that control the display and behaviour of the editor.
  example: []
  syntax:
    content: 'public interface IEditControl : IControl, IDisposable'
    content.vb: Public Interface IEditControl Inherits IControl, IDisposable
  inheritedMembers:
  - Sdl.DesktopEditor.EditorApi.IControl.Control
  - System.IDisposable.Dispose
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AddColumn(Sdl.DesktopEditor.EditorApi.ICustomColumn,Sdl.DesktopEditor.EditorApi.CustomColumnLocation)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.AddColumn(Sdl.DesktopEditor.EditorApi.ICustomColumn,Sdl.DesktopEditor.EditorApi.CustomColumnLocation)
  id: AddColumn(Sdl.DesktopEditor.EditorApi.ICustomColumn,Sdl.DesktopEditor.EditorApi.CustomColumnLocation)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: AddColumn(ICustomColumn, CustomColumnLocation)
  nameWithType: IEditControl.AddColumn(ICustomColumn, CustomColumnLocation)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AddColumn(Sdl.DesktopEditor.EditorApi.ICustomColumn, Sdl.DesktopEditor.EditorApi.CustomColumnLocation)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Add a custom column to the left or right side of the edit control.
  remarks: >-
    <p>

    The column will be queried for its optimal width, and if that

    can be accommodated it will be used. If not an arbitrary width

    may be assigned to the column depending on the available space

    in the edit control.

    </p>

    <p>

    If there are already custom columns on the same side in the edit

    control this column will be added as the outer-most column.

    </p>

    <p>

    It is recommended to add all custom columns to the edit control before

    assigning the document, since adding a custom column requires the entire

    control to be re-formatted.

    </p>
  example: []
  syntax:
    content: void AddColumn(ICustomColumn column, CustomColumnLocation location)
    parameters:
    - id: column
      type: Sdl.DesktopEditor.EditorApi.ICustomColumn
      description: The column implementation
    - id: location
      type: Sdl.DesktopEditor.EditorApi.CustomColumnLocation
      description: Side on which to add the column.
    content.vb: Sub AddColumn(column As ICustomColumn, location As CustomColumnLocation)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.AddColumn*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.RemoveColumn(Sdl.DesktopEditor.EditorApi.ICustomColumn)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.RemoveColumn(Sdl.DesktopEditor.EditorApi.ICustomColumn)
  id: RemoveColumn(Sdl.DesktopEditor.EditorApi.ICustomColumn)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: RemoveColumn(ICustomColumn)
  nameWithType: IEditControl.RemoveColumn(ICustomColumn)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.RemoveColumn(Sdl.DesktopEditor.EditorApi.ICustomColumn)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Remove a custom column from the edit control.
  example: []
  syntax:
    content: void RemoveColumn(ICustomColumn column)
    parameters:
    - id: column
      type: Sdl.DesktopEditor.EditorApi.ICustomColumn
      description: The column to be removed.
    content.vb: Sub RemoveColumn(column As ICustomColumn)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.RemoveColumn*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Redraw
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.Redraw
  id: Redraw
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: Redraw()
  nameWithType: IEditControl.Redraw()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Redraw()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Force a re-layout, re-draw and refresh of the content of the control. This is quite an

    expensive command - a less expensive alternative is to use <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.Refresh" data-throw-if-not-resolved="false"></xref> if the

    layout has not been changed.
  remarks: >-
    <p>

    Call this method to update the control if the document content has changed 

    as the result of external API operations, e.g. after loading a document from a file.

    </p>
  example: []
  syntax:
    content: void Redraw()
    content.vb: Sub Redraw()
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.Redraw*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Refresh
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.Refresh
  id: Refresh
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: IEditControl.Refresh()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Refresh()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Refreshes the content of the control without re-drawing the layout etc.
  remarks: >-
    <p>

    This is a less expensive command than <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.Redraw" data-throw-if-not-resolved="false"></xref> and should be used if the

    content of a cell has changed but the layout has not.

    </p>
  example: []
  syntax:
    content: void Refresh()
    content.vb: Sub Refresh()
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.Refresh*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.DeleteSelection
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.DeleteSelection
  id: DeleteSelection
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: DeleteSelection()
  nameWithType: IEditControl.DeleteSelection()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.DeleteSelection()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Delete the currently selected content in the edit control.
  remarks: >-
    <p>

    Throws an <xref href="Sdl.DesktopEditor.EditorApi.EditException" data-throw-if-not-resolved="false"></xref> if the selected content cannot be deleted.

    </p>
  example: []
  syntax:
    content: void DeleteSelection()
    content.vb: Sub DeleteSelection()
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.DeleteSelection*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.CopySelection
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.CopySelection
  id: CopySelection
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: CopySelection()
  nameWithType: IEditControl.CopySelection()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.CopySelection()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Copy the currently selected content into a standalone, changeable document fragment.
  remarks: >-
    <p>If the selection is empty then this method returns a new empty document fragment.</p>

    <p>

    If the currently selected content cannot be cloned into a standalone document fragment

    this function throws an <xref href="Sdl.DesktopEditor.EditorApi.EditException" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    The normal way to modify the content of the editor through the API is to 

    move the selection, call this method to get a document fragment that can be changed 

    and then pass the changed document fragment to <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.ReplaceSelection(Sdl.DesktopEditor.EditorApi.IDocumentFragment)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: IDocumentFragment CopySelection()
    return:
      type: Sdl.DesktopEditor.EditorApi.IDocumentFragment
      description: A cloned changeable copy of the selected content in the editor.
    content.vb: Function CopySelection() As IDocumentFragment
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.CopySelection*
  seealso:
  - linkId: Sdl.DesktopEditor.EditorApi.IEditControl.ReplaceSelection(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
    commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.ReplaceSelection(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ReplaceSelection(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.ReplaceSelection(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  id: ReplaceSelection(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ReplaceSelection(IDocumentFragment)
  nameWithType: IEditControl.ReplaceSelection(IDocumentFragment)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ReplaceSelection(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Replace any currently selected content with the content of a document fragment.
  remarks: >-
    If the current selection cannot be replaced with the document content
                an <xref href="Sdl.DesktopEditor.EditorApi.EditException" data-throw-if-not-resolved="false"></xref> is thown.
  example: []
  syntax:
    content: void ReplaceSelection(IDocumentFragment newContent)
    parameters:
    - id: newContent
      type: Sdl.DesktopEditor.EditorApi.IDocumentFragment
      description: >-
        The new document content to be inserted. If this is <code>null</code>
                    or empty this method will just delete any currently selected content.
    content.vb: Sub ReplaceSelection(newContent As IDocumentFragment)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.ReplaceSelection*
  seealso:
  - linkId: Sdl.DesktopEditor.EditorApi.IEditControl.CopySelection
    commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.CopySelection
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Undo
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.Undo
  id: Undo
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: Undo()
  nameWithType: IEditControl.Undo()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Undo()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Undo the last operation that changed document content and move the selection to that location.
  example: []
  syntax:
    content: bool Undo()
    return:
      type: System.Boolean
      description: <code>true</code> if anything was changed.
    content.vb: Function Undo() As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.Undo*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.UndoMultiple(System.Int64)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.UndoMultiple(System.Int64)
  id: UndoMultiple(System.Int64)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: UndoMultiple(long)
  nameWithType: IEditControl.UndoMultiple(long)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.UndoMultiple(long)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Undo a number of operations in one go. The selection will be moved to the location of the last of the undo operations.
  example: []
  syntax:
    content: bool UndoMultiple(long count)
    parameters:
    - id: count
      type: System.Int64
      description: If this value is higher than the number of available undo operations, all of them are performed.
    return:
      type: System.Boolean
      description: <code>true</code> if anything was changed.
    content.vb: Function UndoMultiple(count As Long) As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.UndoMultiple*
  nameWithType.vb: IEditControl.UndoMultiple(Long)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IEditControl.UndoMultiple(Long)
  name.vb: UndoMultiple(Long)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Redo
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.Redo
  id: Redo
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: Redo()
  nameWithType: IEditControl.Redo()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Redo()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Redo the last undo operation and move the selection to the corresponding location.
  example: []
  syntax:
    content: bool Redo()
    return:
      type: System.Boolean
      description: <code>true</code> if anything was changed.
    content.vb: Function Redo() As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.Redo*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.RedoMultiple(System.Int64)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.RedoMultiple(System.Int64)
  id: RedoMultiple(System.Int64)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: RedoMultiple(long)
  nameWithType: IEditControl.RedoMultiple(long)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.RedoMultiple(long)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Redo a number of operations in one go. The selection will be moved to the location of the last of the redo operations.
  example: []
  syntax:
    content: bool RedoMultiple(long count)
    parameters:
    - id: count
      type: System.Int64
      description: If this value is higher than the number of available redo operations, all of them are performed.
    return:
      type: System.Boolean
      description: <code>true</code> if anything was changed.
    content.vb: Function RedoMultiple(count As Long) As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.RedoMultiple*
  nameWithType.vb: IEditControl.RedoMultiple(Long)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IEditControl.RedoMultiple(Long)
  name.vb: RedoMultiple(Long)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestLocation(Sdl.DesktopEditor.EditorApi.Position)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestLocation(Sdl.DesktopEditor.EditorApi.Position)
  id: GetNearestLocation(Sdl.DesktopEditor.EditorApi.Position)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: GetNearestLocation(Position)
  nameWithType: IEditControl.GetNearestLocation(Position)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestLocation(Sdl.DesktopEditor.EditorApi.Position)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Returns the location of the specified position in the edit control window, in client coordinates.
  remarks: >-
    <p>

    You can use this to determine where on the screen a position appears, e.g. in order

    to show a pop-up window in the correct location.

    </p>

    <p>

    The rectangle is in client coordinates, i.e. relative to the hosting control.

    The rectangle will always have a Width of 0 and its Height will be the height of the line.

    </p>

    <p>

    Note that a position can sometimes be mapped to multiple locations in the control.

    This can happen, for example, if a text string is word wrapped and the location refers to 

    a character just where the line is wrapped. Both the location at the end of the line

    and at the start of the second line could then map to the same Position. 

    In such cases the location returned will be the first location from the top of 

    the document that the position can be mapped to.

    </p>

    <p>

    It can also happen that the exact position is currently not shown in the edit control

    (e.g. if content is folded). In that case the "nearest" location is determined to be

    the location of the first available preceding Position (i.e. closest to the top of the document).

    </p>
  example: []
  syntax:
    content: Rectangle GetNearestLocation(Position position)
    parameters:
    - id: position
      type: Sdl.DesktopEditor.EditorApi.Position
      description: The position to locate.
    return:
      type: System.Drawing.Rectangle
      description: >-
        A rectangle where the top left corner is the location in the control
                    closest to the specified position, in client coordinates. The Width of the rectangle 
                    is 0 and the Height corresponds to the height of the line.
    content.vb: Function GetNearestLocation(position As Position) As Rectangle
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestLocation*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestPosition(System.Drawing.Point)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestPosition(System.Drawing.Point)
  id: GetNearestPosition(System.Drawing.Point)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: GetNearestPosition(Point)
  nameWithType: IEditControl.GetNearestPosition(Point)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestPosition(System.Drawing.Point)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Returns the position corresponding to a client coordinate location in the control.
  remarks: >-
    <p>

    You can use this to do "hit-testing" to determine which content appears at

    a specific location, e.g. to determine which commands to show on a context menu.

    </p>

    <p>

    This will return the Position corresponding to where the selection would be if the 

    user clicked the mouse at the specified location inside the edit control.

    </p>
  example: []
  syntax:
    content: Position GetNearestPosition(Point location)
    parameters:
    - id: location
      type: System.Drawing.Point
      description: >-
        A point relative to the top left corner of the control (i.e.
                    in client coordinates.)
    return:
      type: Sdl.DesktopEditor.EditorApi.Position
      description: The "nearest" selection position to the specified point.
    content.vb: Function GetNearestPosition(location As Point) As Position
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestPosition*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestVisiblePosition(Sdl.DesktopEditor.EditorApi.Position)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestVisiblePosition(Sdl.DesktopEditor.EditorApi.Position)
  id: GetNearestVisiblePosition(Sdl.DesktopEditor.EditorApi.Position)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: GetNearestVisiblePosition(Position)
  nameWithType: IEditControl.GetNearestVisiblePosition(Position)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestVisiblePosition(Sdl.DesktopEditor.EditorApi.Position)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Returns a position that is adjusted to the nearest corresponding visible position if the 

    passed-in position refers to content that currently cannot be displayed in the control,

    e.g. if it appears in folded rows or in a row that would otherwise be hidden.
  remarks: >-
    <p>

    Note that a position can sometimes be mapped to multiple locations in the control.

    This can happen, for example, if a text string is word wrapped and the location refers to 

    a character just where the line is wrapped. Both the location at the end of the line

    and at the start of the second line could then map to the same Position. 

    In such cases the location returned will be the first location from the top of 

    the document that the position can be mapped to.

    </p>

    <p>

    When the exact position is currently not shown in the edit control

    (e.g. if content is folded) the "nearest" location is determined to be

    the location of the first available preceding Position (i.e. closest to the top of the document).

    </p>
  example: []
  syntax:
    content: Position GetNearestVisiblePosition(Position position)
    parameters:
    - id: position
      type: Sdl.DesktopEditor.EditorApi.Position
      description: A position that may be hidden.
    return:
      type: Sdl.DesktopEditor.EditorApi.Position
      description: A position that can safely be used in <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> and similar operations.
    content.vb: Function GetNearestVisiblePosition(position As Position) As Position
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestVisiblePosition*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.IsWordStart(Sdl.DesktopEditor.EditorApi.Position)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.IsWordStart(Sdl.DesktopEditor.EditorApi.Position)
  id: IsWordStart(Sdl.DesktopEditor.EditorApi.Position)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: IsWordStart(Position)
  nameWithType: IEditControl.IsWordStart(Position)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.IsWordStart(Sdl.DesktopEditor.EditorApi.Position)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Test to discover whether the position is at the start of a word.
  example: []
  syntax:
    content: bool IsWordStart(Position position)
    parameters:
    - id: position
      type: Sdl.DesktopEditor.EditorApi.Position
      description: The position to test.
    return:
      type: System.Boolean
      description: <code>true</code> if the position can be treated as the start of a word.
    content.vb: Function IsWordStart(position As Position) As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.IsWordStart*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.CreateTextIterator(Sdl.DesktopEditor.EditorApi.Position)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.CreateTextIterator(Sdl.DesktopEditor.EditorApi.Position)
  id: CreateTextIterator(Sdl.DesktopEditor.EditorApi.Position)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: CreateTextIterator(Position)
  nameWithType: IEditControl.CreateTextIterator(Position)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.CreateTextIterator(Sdl.DesktopEditor.EditorApi.Position)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Create an iterator that can be used to locate content without having

    to use the <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.Selection" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    <p>

    When searching for content it is often not practical to use move the Selection

    in order to iterate over document content. The text iterator provides a better option,

    as it does not affect the current selection in the user interface, and is therefore

    also much faster.

    </p>
  example: []
  syntax:
    content: ITextIterator CreateTextIterator(Position startPosition)
    parameters:
    - id: startPosition
      type: Sdl.DesktopEditor.EditorApi.Position
      description: The position to start the iteration.
    return:
      type: Sdl.DesktopEditor.EditorApi.ITextIterator
      description: A text iterator that can be used to locate document content.
    content.vb: Function CreateTextIterator(startPosition As Position) As ITextIterator
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.CreateTextIterator*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollIntoView(Sdl.DesktopEditor.EditorApi.Position)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.ScrollIntoView(Sdl.DesktopEditor.EditorApi.Position)
  id: ScrollIntoView(Sdl.DesktopEditor.EditorApi.Position)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ScrollIntoView(Position)
  nameWithType: IEditControl.ScrollIntoView(Position)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollIntoView(Sdl.DesktopEditor.EditorApi.Position)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    If possible ensures that the view is scrolled as needed in order for 

    the specified position to be visible.
  remarks: >-
    <p>

    If the the position is already visible no action is taken.

    </p>
  example: []
  syntax:
    content: void ScrollIntoView(Position position)
    parameters:
    - id: position
      type: Sdl.DesktopEditor.EditorApi.Position
      description: The position to scroll into view.
    content.vb: Sub ScrollIntoView(position As Position)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollIntoView*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollIntoView(Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.ScrollIntoView(Sdl.DesktopEditor.EditorApi.IRowInfo)
  id: ScrollIntoView(Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ScrollIntoView(IRowInfo)
  nameWithType: IEditControl.ScrollIntoView(IRowInfo)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollIntoView(Sdl.DesktopEditor.EditorApi.IRowInfo)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    If possible, ensures that the view is scrolled as needed in order that

    the specified row is visible.
  remarks: >-
    <p>

    If the row is already visible no action is taken.

    </p>
  example: []
  syntax:
    content: void ScrollIntoView(IRowInfo row)
    parameters:
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
      description: The row to scroll into view.
    content.vb: Sub ScrollIntoView(row As IRowInfo)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollIntoView*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToCenter(Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToCenter(Sdl.DesktopEditor.EditorApi.IRowInfo)
  id: ScrollToCenter(Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ScrollToCenter(IRowInfo)
  nameWithType: IEditControl.ScrollToCenter(IRowInfo)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToCenter(Sdl.DesktopEditor.EditorApi.IRowInfo)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: If possible, scrolls the specified row in to the center of the screen.
  example: []
  syntax:
    content: void ScrollToCenter(IRowInfo row)
    parameters:
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
      description: The row to scroll into the center of the screen.
    content.vb: Sub ScrollToCenter(row As IRowInfo)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToCenter*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AutoScrollToRowPosition(Sdl.DesktopEditor.EditorApi.IRowInfo,Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.AutoScrollToRowPosition(Sdl.DesktopEditor.EditorApi.IRowInfo,Sdl.DesktopEditor.EditorApi.IRowInfo)
  id: AutoScrollToRowPosition(Sdl.DesktopEditor.EditorApi.IRowInfo,Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: AutoScrollToRowPosition(IRowInfo, IRowInfo)
  nameWithType: IEditControl.AutoScrollToRowPosition(IRowInfo, IRowInfo)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AutoScrollToRowPosition(Sdl.DesktopEditor.EditorApi.IRowInfo, Sdl.DesktopEditor.EditorApi.IRowInfo)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Scrolls the rowToScroll to the position on screen that rowAtPosition currently is located at.

    Note: This will only scroll if rowAtPosition is past a certain threshold at the top or bottom of the document.
  example: []
  syntax:
    content: void AutoScrollToRowPosition(IRowInfo rowAtPosition, IRowInfo rowToScroll)
    parameters:
    - id: rowAtPosition
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
      description: The row at the position we want to scroll to.
    - id: rowToScroll
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
      description: The row that we want to scroll.
    content.vb: Sub AutoScrollToRowPosition(rowAtPosition As IRowInfo, rowToScroll As IRowInfo)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.AutoScrollToRowPosition*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToRow(System.Int64,System.Int64)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToRow(System.Int64,System.Int64)
  id: ScrollToRow(System.Int64,System.Int64)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ScrollToRow(long, long)
  nameWithType: IEditControl.ScrollToRow(long, long)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToRow(long, long)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Scroll the control so that the specified vertical offset of the 

    specified row number appears at the very top of the control window.
  example: []
  syntax:
    content: void ScrollToRow(long topRowNumber, long offset)
    parameters:
    - id: topRowNumber
      type: System.Int64
      description: The row to scroll to the top of the control window.
    - id: offset
      type: System.Int64
      description: The offset within the row to scroll to the top of the control window.
    content.vb: Sub ScrollToRow(topRowNumber As Long, offset As Long)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToRow*
  nameWithType.vb: IEditControl.ScrollToRow(Long, Long)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToRow(Long, Long)
  name.vb: ScrollToRow(Long, Long)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.FindRow(Sdl.DesktopEditor.EditorApi.Position)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.FindRow(Sdl.DesktopEditor.EditorApi.Position)
  id: FindRow(Sdl.DesktopEditor.EditorApi.Position)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: FindRow(Position)
  nameWithType: IEditControl.FindRow(Position)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.FindRow(Sdl.DesktopEditor.EditorApi.Position)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Finds the matching row for the provided position.
  example: []
  syntax:
    content: IRowInfo FindRow(Position position)
    parameters:
    - id: position
      type: Sdl.DesktopEditor.EditorApi.Position
      description: The position to locate the row at.
    return:
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
      description: The row found at that position, <code>null</code> if no row is located at that position.
    content.vb: Function FindRow(position As Position) As IRowInfo
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.FindRow*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.IsRowVisible(System.Int32)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.IsRowVisible(System.Int32)
  id: IsRowVisible(System.Int32)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: IsRowVisible(int)
  nameWithType: IEditControl.IsRowVisible(int)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.IsRowVisible(int)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Checks whether the row matching the provided row number will be visible in the editor, that is, whether the

    user will actually see this row on screen. This takes into account whether the row has been manually hidden using

    folding, whether it has any content and whether that content is valid to display.
  example: []
  syntax:
    content: bool IsRowVisible(int rowNumber)
    parameters:
    - id: rowNumber
      type: System.Int32
      description: The row number of the row to check.
    return:
      type: System.Boolean
      description: >-
        <pre>
          <code class="lang-csharp">true</code>
        </pre> if the row will be displayed on screen.
    content.vb: Function IsRowVisible(rowNumber As Integer) As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.IsRowVisible*
  nameWithType.vb: IEditControl.IsRowVisible(Integer)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IEditControl.IsRowVisible(Integer)
  name.vb: IsRowVisible(Integer)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.GetVisibleRowsInRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.GetVisibleRowsInRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  id: GetVisibleRowsInRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: GetVisibleRowsInRange(ContentRange)
  nameWithType: IEditControl.GetVisibleRowsInRange(ContentRange)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.GetVisibleRowsInRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Returns all the visible rows that the range spans starting from the first row.
  example: []
  syntax:
    content: IEnumerable<IRowInfo> GetVisibleRowsInRange(ContentRange range)
    parameters:
    - id: range
      type: Sdl.DesktopEditor.EditorApi.ContentRange
      description: The range to restrict the search to.
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IRowInfo}
      description: The rows located within the range provided.
    content.vb: Function GetVisibleRowsInRange(range As ContentRange) As IEnumerable(Of IRowInfo)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.GetVisibleRowsInRange*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsVisibility(System.Predicate{Sdl.DesktopEditor.EditorApi.IRowInfo})
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsVisibility(System.Predicate{Sdl.DesktopEditor.EditorApi.IRowInfo})
  id: SetRowsVisibility(System.Predicate{Sdl.DesktopEditor.EditorApi.IRowInfo})
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: SetRowsVisibility(Predicate<IRowInfo>)
  nameWithType: IEditControl.SetRowsVisibility(Predicate<IRowInfo>)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsVisibility(System.Predicate<Sdl.DesktopEditor.EditorApi.IRowInfo>)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Sets the visibility of all the rows in the edit control according to the delegate.
  example: []
  syntax:
    content: void SetRowsVisibility(Predicate<IRowInfo> rowDelegate)
    parameters:
    - id: rowDelegate
      type: System.Predicate{Sdl.DesktopEditor.EditorApi.IRowInfo}
      description: >-
        The delegate that evaluates the row and determines whether 
                    or not it should be visible or hidden.
    content.vb: Sub SetRowsVisibility(rowDelegate As Predicate(Of IRowInfo))
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsVisibility*
  nameWithType.vb: IEditControl.SetRowsVisibility(Predicate(Of IRowInfo))
  fullName.vb: Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsVisibility(System.Predicate(Of Sdl.DesktopEditor.EditorApi.IRowInfo))
  name.vb: SetRowsVisibility(Predicate(Of IRowInfo))
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsHighlighted(System.Collections.Generic.IList{System.Int32},System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsHighlighted(System.Collections.Generic.IList{System.Int32},System.Boolean)
  id: SetRowsHighlighted(System.Collections.Generic.IList{System.Int32},System.Boolean)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: SetRowsHighlighted(IList<int>, bool)
  nameWithType: IEditControl.SetRowsHighlighted(IList<int>, bool)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsHighlighted(System.Collections.Generic.IList<int>, bool)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Sets the highlighted status of the rows in the list according to the highlight parameter.
  example: []
  syntax:
    content: void SetRowsHighlighted(IList<int> rowNumbers, bool highlight)
    parameters:
    - id: rowNumbers
      type: System.Collections.Generic.IList{System.Int32}
      description: The rows to highlight.
    - id: highlight
      type: System.Boolean
      description: >-
        <code>true</code> if the rows should be highlighted,
                    false if the normal background color should be restored.
    content.vb: Sub SetRowsHighlighted(rowNumbers As IList(Of Integer), highlight As Boolean)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsHighlighted*
  nameWithType.vb: IEditControl.SetRowsHighlighted(IList(Of Integer), Boolean)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsHighlighted(System.Collections.Generic.IList(Of Integer), Boolean)
  name.vb: SetRowsHighlighted(IList(Of Integer), Boolean)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  id: SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: SelectRow(IRowInfo)
  nameWithType: IEditControl.SelectRow(IRowInfo)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Selects the row in the edit control. This will typically be highlighted in some way and used

    for multiple row or segment operations.
  example: []
  syntax:
    content: void SelectRow(IRowInfo row)
    parameters:
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
      description: The row to select.
    content.vb: Sub SelectRow(row As IRowInfo)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Boolean,System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Boolean,System.Boolean)
  id: SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Boolean,System.Boolean)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: SelectRow(IRowInfo, bool, bool)
  nameWithType: IEditControl.SelectRow(IRowInfo, bool, bool)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo, bool, bool)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Selects the row in the edit control. This will typically be highlighted in some way and used

    for multiple row or segment operations.
  example: []
  syntax:
    content: void SelectRow(IRowInfo row, bool isRangeOperation, bool isLastInRange)
    parameters:
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
      description: The row to select.
    - id: isRangeOperation
      type: System.Boolean
      description: <code>True</code> when user performs a multiple selection.
    - id: isLastInRange
      type: System.Boolean
      description: <code>True</code> when user performs a multiple selection and <code>row</code> is the last selected one.
    content.vb: Sub SelectRow(row As IRowInfo, isRangeOperation As Boolean, isLastInRange As Boolean)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow*
  nameWithType.vb: IEditControl.SelectRow(IRowInfo, Boolean, Boolean)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo, Boolean, Boolean)
  name.vb: SelectRow(IRowInfo, Boolean, Boolean)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRowRange(Sdl.DesktopEditor.EditorApi.IRowInfo,Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.SelectRowRange(Sdl.DesktopEditor.EditorApi.IRowInfo,Sdl.DesktopEditor.EditorApi.IRowInfo)
  id: SelectRowRange(Sdl.DesktopEditor.EditorApi.IRowInfo,Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: SelectRowRange(IRowInfo, IRowInfo)
  nameWithType: IEditControl.SelectRowRange(IRowInfo, IRowInfo)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRowRange(Sdl.DesktopEditor.EditorApi.IRowInfo, Sdl.DesktopEditor.EditorApi.IRowInfo)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Selects all the rows in the range defined by the fromRow and uptoRow inclusive. The fromRow

    does not have to be before the uptoRow, this will be taken in to account. Rows in this range

    will be marked as selected regardless of their previous selection state.
  example: []
  syntax:
    content: void SelectRowRange(IRowInfo fromRow, IRowInfo uptoRow)
    parameters:
    - id: fromRow
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
      description: The start of the range to select
    - id: uptoRow
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
      description: The end of the range to select
    content.vb: Sub SelectRowRange(fromRow As IRowInfo, uptoRow As IRowInfo)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRowRange*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ChangeNextRowSelection
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.ChangeNextRowSelection
  id: ChangeNextRowSelection
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ChangeNextRowSelection()
  nameWithType: IEditControl.ChangeNextRowSelection()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ChangeNextRowSelection()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Selects or unselects the next row in the edit control according to whether the focused row is selected or not. 

    This method also updates the focused row accordingly.
  example: []
  syntax:
    content: void ChangeNextRowSelection()
    content.vb: Sub ChangeNextRowSelection()
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.ChangeNextRowSelection*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ChangePreviousRowSelection
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.ChangePreviousRowSelection
  id: ChangePreviousRowSelection
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ChangePreviousRowSelection()
  nameWithType: IEditControl.ChangePreviousRowSelection()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ChangePreviousRowSelection()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Selects or unselects the previous row in the edit control according to whether the focused row is selected or not. 

    This method also updates the focused row accordingly.
  example: []
  syntax:
    content: void ChangePreviousRowSelection()
    content.vb: Sub ChangePreviousRowSelection()
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.ChangePreviousRowSelection*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ClearRowSelection(Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.ClearRowSelection(Sdl.DesktopEditor.EditorApi.IRowInfo)
  id: ClearRowSelection(Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ClearRowSelection(IRowInfo)
  nameWithType: IEditControl.ClearRowSelection(IRowInfo)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ClearRowSelection(Sdl.DesktopEditor.EditorApi.IRowInfo)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Removes the selection for a specific row in the edit control.
  example: []
  syntax:
    content: void ClearRowSelection(IRowInfo row)
    parameters:
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
      description: The row to remove from the list of selected rows.
    content.vb: Sub ClearRowSelection(row As IRowInfo)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.ClearRowSelection*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ClearAllRowSelections
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.ClearAllRowSelections
  id: ClearAllRowSelections
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ClearAllRowSelections()
  nameWithType: IEditControl.ClearAllRowSelections()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ClearAllRowSelections()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Removes the selection for all the rows in the edit control.
  example: []
  syntax:
    content: void ClearAllRowSelections()
    content.vb: Sub ClearAllRowSelections()
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.ClearAllRowSelections*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.HasSelectedRows
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.HasSelectedRows
  id: HasSelectedRows
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: HasSelectedRows()
  nameWithType: IEditControl.HasSelectedRows()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.HasSelectedRows()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Test to discover whether rows have been selected in the edit control.
  example: []
  syntax:
    content: bool HasSelectedRows()
    return:
      type: System.Boolean
      description: <code>true</code> if rows have been selected.
    content.vb: Function HasSelectedRows() As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.HasSelectedRows*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperation
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperation
  id: BeginSelectedRowOperation
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: BeginSelectedRowOperation()
  nameWithType: IEditControl.BeginSelectedRowOperation()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperation()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Disables active row and row selection changes while an edit operation is completing.  This method should

    be called before performing operations that need to operate over selected rows.  After the operation has

    been completed, <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperation" data-throw-if-not-resolved="false"></xref> must be called to return the edit control to normal

    operation.
  example: []
  syntax:
    content: void BeginSelectedRowOperation()
    content.vb: Sub BeginSelectedRowOperation()
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperation*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperation
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperation
  id: EndSelectedRowOperation
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: EndSelectedRowOperation()
  nameWithType: IEditControl.EndSelectedRowOperation()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperation()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Restores normal row activation and selection changing after an edit operation has completed.  This method

    should always be called after <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperation" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: void EndSelectedRowOperation()
    content.vb: Sub EndSelectedRowOperation()
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperation*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ChangeFocusedRowSelection
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.ChangeFocusedRowSelection
  id: ChangeFocusedRowSelection
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ChangeFocusedRowSelection()
  nameWithType: IEditControl.ChangeFocusedRowSelection()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ChangeFocusedRowSelection()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Inverts the selection of the currently focused row. If the currently focused row is selected then it will

    call <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo)" data-throw-if-not-resolved="false"></xref>, otherwise it will call <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.ClearRowSelection(Sdl.DesktopEditor.EditorApi.IRowInfo)" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    <p>

    If there is currently no row in focus then start position is the row containing the cursor.

    </p>
  example: []
  syntax:
    content: void ChangeFocusedRowSelection()
    content.vb: Sub ChangeFocusedRowSelection()
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.ChangeFocusedRowSelection*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.FocusNextRow
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.FocusNextRow
  id: FocusNextRow
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: FocusNextRow()
  nameWithType: IEditControl.FocusNextRow()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.FocusNextRow()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Moves the row focus on to the next row.
  remarks: >-
    <p>

    If there is currently no row in focus then start position is the row containing the cursor.

    </p>
  example: []
  syntax:
    content: void FocusNextRow()
    content.vb: Sub FocusNextRow()
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.FocusNextRow*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.FocusPreviousRow
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.FocusPreviousRow
  id: FocusPreviousRow
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: FocusPreviousRow()
  nameWithType: IEditControl.FocusPreviousRow()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.FocusPreviousRow()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Moves the row focus on to the previous row.
  remarks: >-
    <p>

    If there is currently no row in focus then start position is the row containing the cursor.

    </p>
  example: []
  syntax:
    content: void FocusPreviousRow()
    content.vb: Sub FocusPreviousRow()
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.FocusPreviousRow*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.CanCopySelectionToClipboard
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.CanCopySelectionToClipboard
  id: CanCopySelectionToClipboard
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: CanCopySelectionToClipboard()
  nameWithType: IEditControl.CanCopySelectionToClipboard()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.CanCopySelectionToClipboard()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Determines whether the selection can be copied to the clipboard.
  example: []
  syntax:
    content: bool CanCopySelectionToClipboard()
    return:
      type: System.Boolean
      description: whether selection can be copied to clipboard
    content.vb: Function CanCopySelectionToClipboard() As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.CanCopySelectionToClipboard*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.CanCutSelectionToClipboard
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.CanCutSelectionToClipboard
  id: CanCutSelectionToClipboard
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: CanCutSelectionToClipboard()
  nameWithType: IEditControl.CanCutSelectionToClipboard()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.CanCutSelectionToClipboard()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Determines whether the selection can be cut and copied to the clipboard.
  example: []
  syntax:
    content: bool CanCutSelectionToClipboard()
    return:
      type: System.Boolean
      description: whether selection can be cut and copied to clipboard
    content.vb: Function CanCutSelectionToClipboard() As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.CanCutSelectionToClipboard*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.CanPasteClipboardToDocument
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.CanPasteClipboardToDocument
  id: CanPasteClipboardToDocument
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: CanPasteClipboardToDocument()
  nameWithType: IEditControl.CanPasteClipboardToDocument()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.CanPasteClipboardToDocument()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Determines whether the clipboard contents can be pasted to the document.
  example: []
  syntax:
    content: bool CanPasteClipboardToDocument()
    return:
      type: System.Boolean
      description: whether clipboard contents can be pasted to document
    content.vb: Function CanPasteClipboardToDocument() As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.CanPasteClipboardToDocument*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.CopySelectionToClipboard
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.CopySelectionToClipboard
  id: CopySelectionToClipboard
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: CopySelectionToClipboard()
  nameWithType: IEditControl.CopySelectionToClipboard()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.CopySelectionToClipboard()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Copies the selection content to the clipboard.
  remarks: >-
    <p>

    May throw <code>Sdl.DesktopEditor.EditorApi.EditExeption</code> if the selection cannot be copied (e.g. if it contains

    non-framework nodes or non-cloneable nodes such as Paragraph Units or Files).

    </p>
  example: []
  syntax:
    content: void CopySelectionToClipboard()
    content.vb: Sub CopySelectionToClipboard()
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.CopySelectionToClipboard*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.CutSelectionToClipboard
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.CutSelectionToClipboard
  id: CutSelectionToClipboard
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: CutSelectionToClipboard()
  nameWithType: IEditControl.CutSelectionToClipboard()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.CutSelectionToClipboard()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Cuts and copies the selection to the clipboard.
  example: []
  syntax:
    content: void CutSelectionToClipboard()
    content.vb: Sub CutSelectionToClipboard()
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.CutSelectionToClipboard*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.PasteClipboardToDocument
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.PasteClipboardToDocument
  id: PasteClipboardToDocument
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: PasteClipboardToDocument()
  nameWithType: IEditControl.PasteClipboardToDocument()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.PasteClipboardToDocument()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Pastes the clipboard contents to the document.
  example: []
  syntax:
    content: void PasteClipboardToDocument()
    content.vb: Sub PasteClipboardToDocument()
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.PasteClipboardToDocument*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AddTextMark(Sdl.DesktopEditor.EditorApi.ContentRange,Sdl.DesktopEditor.EditorApi.TextMarkLayer,Sdl.DesktopEditor.EditorApi.ITextMarkPainter)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.AddTextMark(Sdl.DesktopEditor.EditorApi.ContentRange,Sdl.DesktopEditor.EditorApi.TextMarkLayer,Sdl.DesktopEditor.EditorApi.ITextMarkPainter)
  id: AddTextMark(Sdl.DesktopEditor.EditorApi.ContentRange,Sdl.DesktopEditor.EditorApi.TextMarkLayer,Sdl.DesktopEditor.EditorApi.ITextMarkPainter)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: AddTextMark(ContentRange, TextMarkLayer, ITextMarkPainter)
  nameWithType: IEditControl.AddTextMark(ContentRange, TextMarkLayer, ITextMarkPainter)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AddTextMark(Sdl.DesktopEditor.EditorApi.ContentRange, Sdl.DesktopEditor.EditorApi.TextMarkLayer, Sdl.DesktopEditor.EditorApi.ITextMarkPainter)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Add a new mark for a content range in the edit control. 

    The control is updated to show the mark.
  remarks: >-
    <p>

    The mark will be attached to the positions in the range, i.e. to

    a specific node, and if applicable the offset for a specified number of characters

    into that node. If the content in the control is being modified the mark may no longer

    be in the correct location, or even refer to a valid location at all.

    </p>

    <p>

    For this reason it is generally advisable to attach marks to content nodes that are 

    embedded inside the text, e.g. location markers. That way the mark will continue to

    refer to the correct location even if content before or inside the marked area is modified.

    </p>

    <p>

    The control is automatically updated to show the mark. If you are adding a lot

    of marks you may want to set the <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.AutoUpdate" data-throw-if-not-resolved="false"></xref> property to <code>false</code>

    while the marks are being added in order to avoid updating the control for each mark.

    </p>
  example: []
  syntax:
    content: ITextMark AddTextMark(ContentRange range, TextMarkLayer layer, ITextMarkPainter painter)
    parameters:
    - id: range
      type: Sdl.DesktopEditor.EditorApi.ContentRange
      description: The content range the mark spans.
    - id: layer
      type: Sdl.DesktopEditor.EditorApi.TextMarkLayer
      description: Indicates if it is a foreground or background mark.
    - id: painter
      type: Sdl.DesktopEditor.EditorApi.ITextMarkPainter
      description: Component that will be used to paint the mark.
    return:
      type: Sdl.DesktopEditor.EditorApi.ITextMark
      description: >-
        A reference to the added text mark.
                    <p>
                    If you need to change properties for a mark you should explicitly call <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.NotifyTextMarkChanged(Sdl.DesktopEditor.EditorApi.ITextMark)" data-throw-if-not-resolved="false"></xref>
                    to ensure that the updated mark properties are reflected in the control.
                    </p>
    content.vb: Function AddTextMark(range As ContentRange, layer As TextMarkLayer, painter As ITextMarkPainter) As ITextMark
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.AddTextMark*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.NotifyTextMarkChanged(Sdl.DesktopEditor.EditorApi.ITextMark)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.NotifyTextMarkChanged(Sdl.DesktopEditor.EditorApi.ITextMark)
  id: NotifyTextMarkChanged(Sdl.DesktopEditor.EditorApi.ITextMark)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: NotifyTextMarkChanged(ITextMark)
  nameWithType: IEditControl.NotifyTextMarkChanged(ITextMark)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.NotifyTextMarkChanged(Sdl.DesktopEditor.EditorApi.ITextMark)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Call this method to notify the control that properties of a mark has changed. This will

    cause the control to be refreshed in order to show the updated properties.
  example: []
  syntax:
    content: void NotifyTextMarkChanged(ITextMark mark)
    parameters:
    - id: mark
      type: Sdl.DesktopEditor.EditorApi.ITextMark
      description: The properties representing the mark that has changed.
    content.vb: Sub NotifyTextMarkChanged(mark As ITextMark)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.NotifyTextMarkChanged*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.RemoveTextMark(Sdl.DesktopEditor.EditorApi.ITextMark)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.RemoveTextMark(Sdl.DesktopEditor.EditorApi.ITextMark)
  id: RemoveTextMark(Sdl.DesktopEditor.EditorApi.ITextMark)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: RemoveTextMark(ITextMark)
  nameWithType: IEditControl.RemoveTextMark(ITextMark)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.RemoveTextMark(Sdl.DesktopEditor.EditorApi.ITextMark)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Remove the specified text mark from the control.
  example: []
  syntax:
    content: void RemoveTextMark(ITextMark mark)
    parameters:
    - id: mark
      type: Sdl.DesktopEditor.EditorApi.ITextMark
      description: >-
        The mark to be removed. If the mark is not part of this control
                    this call has no effect.
    content.vb: Sub RemoveTextMark(mark As ITextMark)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.RemoveTextMark*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ClearTextMarks
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.ClearTextMarks
  id: ClearTextMarks
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ClearTextMarks()
  nameWithType: IEditControl.ClearTextMarks()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ClearTextMarks()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Remove all text marks from the edit control.
  example: []
  syntax:
    content: void ClearTextMarks()
    content.vb: Sub ClearTextMarks()
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.ClearTextMarks*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AddActiveRowToSelected
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.AddActiveRowToSelected
  id: AddActiveRowToSelected
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: AddActiveRowToSelected
  nameWithType: IEditControl.AddActiveRowToSelected
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AddActiveRowToSelected
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Gets or sets value indicating if active row will be

    automatically added to selected rows set.
  example: []
  syntax:
    content: bool AddActiveRowToSelected { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property AddActiveRowToSelected As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.AddActiveRowToSelected*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.IsInitialUpdateCompleted
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.IsInitialUpdateCompleted
  id: IsInitialUpdateCompleted
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: IsInitialUpdateCompleted
  nameWithType: IEditControl.IsInitialUpdateCompleted
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.IsInitialUpdateCompleted
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    <code>true</code> when the control has been fully initialized. This is set just

    before the <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.AfterInitialUpdate" data-throw-if-not-resolved="false"></xref> event is raised.
  remarks: >-
    <p>

    When a different document is assigned to the control this property may

    be <code>false</code> until the control has been updated to reflect the new content.

    </p>
  example: []
  syntax:
    content: bool IsInitialUpdateCompleted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsInitialUpdateCompleted As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.IsInitialUpdateCompleted*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AutoUpdate
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.AutoUpdate
  id: AutoUpdate
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: AutoUpdate
  nameWithType: IEditControl.AutoUpdate
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AutoUpdate
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    When <code>true</code> (default) the control automatically updates its content when changes are

    made to the document.
  remarks: >-
    <p>

    This is an advanced setting.

    </p>

    <p>

    You can temporarily set this to <code>false</code> to disable screen updating e.g. while executing 

    complex operations that involve multiple edit commands that are not wrapped into a single undo operation. 

    This will significantly improve the execution speed of the commands, but you must set this 

    property to <code>true</code> afterwards, or the content in the editor may not correspond to what

    is in the document (which could cause invalid operations if the user edits the content).

    </p>

    <p>Another user for this setting is to avoid updating controls that are not in view.</p>

    <p>Setting this from <code>false</code> to <code>true</code> will cause the control to update itself

    to reflect all changes to the document since this setting was set to <code>false</code>.</p>

    <p>You can also explicitly force the control to update itself by calling <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.Redraw" data-throw-if-not-resolved="false"></xref>.</p>
  example: []
  syntax:
    content: bool AutoUpdate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property AutoUpdate As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.AutoUpdate*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.IsReadOnly
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.IsReadOnly
  id: IsReadOnly
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: IEditControl.IsReadOnly
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.IsReadOnly
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: When true the content of the editor cannot be changed by user editing operations.
  example: []
  syntax:
    content: bool IsReadOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsReadOnly As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.IsReadOnly*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AcceptsReturn
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.AcceptsReturn
  id: AcceptsReturn
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: AcceptsReturn
  nameWithType: IEditControl.AcceptsReturn
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AcceptsReturn
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    When <code>true</code> the control will insert a line break at the current selection when the Return

    or Enter key is pressed. When <code>false</code> the edit control will not process those keys.
  remarks: >-
    <p>The default value is <code>false</code>.</p>

    <p>

    When the control appears in a dialog you can use this property to determine if the Return key

    should execute the default dialog action or insert a linebreak in the edit control.

    </p>

    Note that disabling this will not totally prevent users from inserting line breaks in the edit

    control, as the could e.g. copy and paste one.
  example: []
  syntax:
    content: bool AcceptsReturn { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property AcceptsReturn As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.AcceptsReturn*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AcceptsTab
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.AcceptsTab
  id: AcceptsTab
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: AcceptsTab
  nameWithType: IEditControl.AcceptsTab
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AcceptsTab
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    When <code>true</code> the control will insert a tab character at the current selection when the Tab

    key is pressed. When <code>false</code> the edit control will not process Tab.
  remarks: >-
    <p>The default value is <code>true</code>.</p>

    <p>

    When the control appears in a dialog you may want to set this to <code>false</code> to allow users

    to use the tab key to navigate between controls in the dialog.

    </p>

    <p>

    Note that disabling this will not totally prevent users from inserting tab spaces in the edit

    control, as the could e.g. copy and paste one.

    </p>
  example: []
  syntax:
    content: bool AcceptsTab { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property AcceptsTab As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.AcceptsTab*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ShowWhitespaceCharacters
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.ShowWhitespaceCharacters
  id: ShowWhitespaceCharacters
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ShowWhitespaceCharacters
  nameWithType: IEditControl.ShowWhitespaceCharacters
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ShowWhitespaceCharacters
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    When <code>true</code> whitespace characters such as space, tab, non-breaking space 

    and different types of line breaks are visualized with special symbols in the editor.
  remarks: >-
    <p>

    This setting is off by default.

    </p>
  example: []
  syntax:
    content: bool ShowWhitespaceCharacters { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property ShowWhitespaceCharacters As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.ShowWhitespaceCharacters*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.HideFileTags
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.HideFileTags
  id: HideFileTags
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: HideFileTags
  nameWithType: IEditControl.HideFileTags
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.HideFileTags
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: When <code>true</code>, segments containing file tags are hidden.
  remarks: >-
    <p>

    This setting is off by default.

    </p>
  example: []
  syntax:
    content: bool HideFileTags { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property HideFileTags As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.HideFileTags*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SmartPasteAdjustingSpaces
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.SmartPasteAdjustingSpaces
  id: SmartPasteAdjustingSpaces
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: SmartPasteAdjustingSpaces
  nameWithType: IEditControl.SmartPasteAdjustingSpaces
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SmartPasteAdjustingSpaces
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: When <code>true</code> leading and trailing white spaces are inserted or removed at paste (like in MS Office).
  example: []
  syntax:
    content: bool SmartPasteAdjustingSpaces { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property SmartPasteAdjustingSpaces As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.SmartPasteAdjustingSpaces*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.IsOverwriteModeEnabled
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.IsOverwriteModeEnabled
  id: IsOverwriteModeEnabled
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: IsOverwriteModeEnabled
  nameWithType: IEditControl.IsOverwriteModeEnabled
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.IsOverwriteModeEnabled
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Returns <code>true</code> whenever overwriting is enabled in the editor. When the user changes the overwrite

    mode, the <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.OverwriteModeChanged" data-throw-if-not-resolved="false"></xref> event is fired. This is set to <code>false</code> by default.
  example: []
  syntax:
    content: bool IsOverwriteModeEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsOverwriteModeEnabled As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.IsOverwriteModeEnabled*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedBackColor
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedBackColor
  id: HighlightedBackColor
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: HighlightedBackColor
  nameWithType: IEditControl.HighlightedBackColor
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedBackColor
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: The background color used as a base color for highlighted rows.
  remarks: >-
    <p>

    The actual color for a highlighted row also depends on whether the row is shaded. 

    </p>
  example: []
  syntax:
    content: Color HighlightedBackColor { get; set; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: Property HighlightedBackColor As Color
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedBackColor*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightActiveRow
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.HighlightActiveRow
  id: HighlightActiveRow
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: HighlightActiveRow
  nameWithType: IEditControl.HighlightActiveRow
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightActiveRow
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Determines whether the currently active row should be highlighted with the <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedBackColor" data-throw-if-not-resolved="false"></xref>.

    Default is <code>true</code>.
  example: []
  syntax:
    content: bool HighlightActiveRow { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property HighlightActiveRow As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightActiveRow*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SelectedBackColor
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.SelectedBackColor
  id: SelectedBackColor
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: SelectedBackColor
  nameWithType: IEditControl.SelectedBackColor
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SelectedBackColor
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: The background color used as a base color for selected rows.
  remarks: >-
    <p>

    The actual color for a selected row also depends on whether the row is shaded.

    </p>
  example: []
  syntax:
    content: Color SelectedBackColor { get; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: ReadOnly Property SelectedBackColor As Color
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.SelectedBackColor*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Selection
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.Selection
  id: Selection
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: Selection
  nameWithType: IEditControl.Selection
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Selection
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Controls the currently selected content, or if nothing is selected,

    the current location of the text cursor in the edit control.
  example: []
  syntax:
    content: IContentSelection Selection { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IContentSelection
    content.vb: ReadOnly Property Selection As IContentSelection
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.Selection*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Document
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.Document
  id: Document
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: Document
  nameWithType: IEditControl.Document
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Document
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Contains all the data shown and manipulated in the editor.
  remarks: >-
    <p>

    Assigning to this property will reset the edit control to display

    the content of the new document. 

    </p>

    <p>If the document is <code>null</code> the edit control is empty, and

    editing operations are not possible.

    </p>
  example: []
  syntax:
    content: IDocument Document { get; set; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IDocument
    content.vb: Property Document As IDocument
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.Document*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.TagPainter
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.TagPainter
  id: TagPainter
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: TagPainter
  nameWithType: IEditControl.TagPainter
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.TagPainter
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    The component used by the edit control to render placeholder tags,

    start/end tags and document and file boundary indicators.
  remarks: >-
    <p>

    Setting this property causes the edit control to be re-formatted.

    </p>

    <p>

    If this property is <code>null</code> the control's built-in tag rendering 

    will be used. This will produce tags that look similar to tags in TagEditor.

    </p>
  example: []
  syntax:
    content: ITagPainter TagPainter { get; set; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.ITagPainter
    content.vb: Property TagPainter As ITagPainter
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.TagPainter*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ContentHeight
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.ContentHeight
  id: ContentHeight
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ContentHeight
  nameWithType: IEditControl.ContentHeight
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ContentHeight
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: The height (vertical size) in pixels of the content currently shown in the edit control.
  remarks: >-
    <p>

    This can be used to determine scrollbar size/scale or to re-size the control to fit

    its content.

    </p>
  example: []
  syntax:
    content: long ContentHeight { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: ReadOnly Property ContentHeight As Long
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.ContentHeight*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.VerticalScrollOffset
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.VerticalScrollOffset
  id: VerticalScrollOffset
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: VerticalScrollOffset
  nameWithType: IEditControl.VerticalScrollOffset
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.VerticalScrollOffset
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    The amount in pixels that the content currently showing in the edit control has

    been scrolled vertically.
  remarks: >-
    <p>

    A value of 0 means that the top of the edit control shows the top of the document content.

    </p>

    <p>

    Setting this value scrolls the view vertically to the specified offset. The value set should

    not be greater than <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.ContentHeight" data-throw-if-not-resolved="false"></xref>, or no content will be visible in the control.

    </p>

    <p>

    This value can be used together with <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.ContentHeight" data-throw-if-not-resolved="false"></xref> to determine the position 

    of a scrollbar.

    </p>

    <p>

    Note that the scroll offset position can change during background layout, if rows

    above the currently visible area are being re-formatted.

    </p>

    <p>

    The <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowNumber" data-throw-if-not-resolved="false"></xref> and <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowScrollOffset" data-throw-if-not-resolved="false"></xref> properties

    returns scroll position information that does not change when the layout changes.

    </p>
  example: []
  syntax:
    content: long VerticalScrollOffset { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Property VerticalScrollOffset As Long
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.VerticalScrollOffset*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowNumber
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowNumber
  id: TopmostVisibleRowNumber
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: TopmostVisibleRowNumber
  nameWithType: IEditControl.TopmostVisibleRowNumber
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowNumber
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Row number for the current topmost visible row in the control window.
  remarks: >-
    <p>

    This, together with the <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowScrollOffset" data-throw-if-not-resolved="false"></xref> can be 

    treated as a persistent scroll offset that is preserved when the window

    is resized or the layout is re-calculated due to some other reason.

    </p>

    <p>

    You can explicitly scroll to a specific row number and offset by calling

    <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToRow(System.Int64%2cSystem.Int64)" data-throw-if-not-resolved="false"></xref> passing in values from these properties.

    </p>

    <p>

    The event <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.PersistentScrollInfoChanged" data-throw-if-not-resolved="false"></xref> is fired when

    this value changes.

    </p>
  example: []
  syntax:
    content: long TopmostVisibleRowNumber { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: ReadOnly Property TopmostVisibleRowNumber As Long
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowNumber*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowScrollOffset
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowScrollOffset
  id: TopmostVisibleRowScrollOffset
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: TopmostVisibleRowScrollOffset
  nameWithType: IEditControl.TopmostVisibleRowScrollOffset
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowScrollOffset
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Part of the topmost visible row in the control window that appears above

    the visible area of the control.
  remarks: >-
    <p>

    This, together with the <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowNumber" data-throw-if-not-resolved="false"></xref> can be 

    treated as a persistent scroll offset that is preserved when the window

    is resized or the layout is re-calculated due to some other reason.

    </p>

    <p>

    You can explicitly scroll to a specific row number and offset by calling

    <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToRow(System.Int64%2cSystem.Int64)" data-throw-if-not-resolved="false"></xref> passing in values from these properties.

    </p>

    <p>

    The event <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.PersistentScrollInfoChanged" data-throw-if-not-resolved="false"></xref> is fired when

    this value changes.

    </p>
  example: []
  syntax:
    content: long TopmostVisibleRowScrollOffset { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: ReadOnly Property TopmostVisibleRowScrollOffset As Long
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowScrollOffset*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.TextMarks
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.TextMarks
  id: TextMarks
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: TextMarks
  nameWithType: IEditControl.TextMarks
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.TextMarks
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: All text marks in the control.
  remarks: >-
    <p>This is a read-only property.</p>

    <p>Use <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.AddTextMark(Sdl.DesktopEditor.EditorApi.ContentRange%2cSdl.DesktopEditor.EditorApi.TextMarkLayer%2cSdl.DesktopEditor.EditorApi.ITextMarkPainter)" data-throw-if-not-resolved="false"></xref>, <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.RemoveTextMark(Sdl.DesktopEditor.EditorApi.ITextMark)" data-throw-if-not-resolved="false"></xref>,

    <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.ClearTextMarks" data-throw-if-not-resolved="false"></xref>, or <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.NotifyTextMarkChanged(Sdl.DesktopEditor.EditorApi.ITextMark)" data-throw-if-not-resolved="false"></xref> to change the text marks

    used in the control.</p>
  example: []
  syntax:
    content: IEnumerable<ITextMark> TextMarks { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.ITextMark}
    content.vb: ReadOnly Property TextMarks As IEnumerable(Of ITextMark)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.TextMarks*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ColumnsLeft
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.ColumnsLeft
  id: ColumnsLeft
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ColumnsLeft
  nameWithType: IEditControl.ColumnsLeft
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ColumnsLeft
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Custom columns located to the left of the main control content.
  example: []
  syntax:
    content: ICustomColumn[] ColumnsLeft { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.ICustomColumn[]
    content.vb: ReadOnly Property ColumnsLeft As ICustomColumn()
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.ColumnsLeft*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ColumnsRight
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.ColumnsRight
  id: ColumnsRight
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ColumnsRight
  nameWithType: IEditControl.ColumnsRight
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ColumnsRight
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Custom columns located to the right of the main control content.
  example: []
  syntax:
    content: ICustomColumn[] ColumnsRight { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.ICustomColumn[]
    content.vb: ReadOnly Property ColumnsRight As ICustomColumn()
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.ColumnsRight*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Rows
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.Rows
  id: Rows
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: Rows
  nameWithType: IEditControl.Rows
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Rows
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: All rows that can be displayed in the edit control.
  remarks: >-
    <p>

    Only rows that return <code>true</code> for <xref href="Sdl.DesktopEditor.EditorApi.IRowInfo.IsVisible" data-throw-if-not-resolved="false"></xref> will be displayed 

    in the edit control. You can use the <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.VisibleRows" data-throw-if-not-resolved="false"></xref> iterator to directly access them.

    </p>
  example: []
  syntax:
    content: IList<IRowInfo> Rows { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IRowInfo}
    content.vb: ReadOnly Property Rows As IList(Of IRowInfo)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.Rows*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.VisibleRows
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.VisibleRows
  id: VisibleRows
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: VisibleRows
  nameWithType: IEditControl.VisibleRows
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.VisibleRows
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    All rows that are visible to the user (displayed on screen). This is tested using

    <xref href="Sdl.DesktopEditor.EditorApi.IRowInfo.IsVisible" data-throw-if-not-resolved="false"></xref>. Note: This property will only return the rows that

    are actually currently visible to the user.
  example: []
  syntax:
    content: IEnumerable<IRowInfo> VisibleRows { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IRowInfo}
    content.vb: ReadOnly Property VisibleRows As IEnumerable(Of IRowInfo)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.VisibleRows*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRows
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRows
  id: HighlightedRows
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: HighlightedRows
  nameWithType: IEditControl.HighlightedRows
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRows
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: All rows that have the <xref href="Sdl.DesktopEditor.EditorApi.IRowInfo.Highlighted" data-throw-if-not-resolved="false"></xref> property set to true.
  example: []
  syntax:
    content: IEnumerable<IRowInfo> HighlightedRows { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IRowInfo}
    content.vb: ReadOnly Property HighlightedRows As IEnumerable(Of IRowInfo)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRows*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ActiveRow
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.ActiveRow
  id: ActiveRow
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ActiveRow
  nameWithType: IEditControl.ActiveRow
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ActiveRow
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: The currently active row in the edit control, or <code>null</code> if none.
  remarks: >-
    <p>

    The active row is typically highlighted in some fashion, e.g using

    background color and/or border.

    </p>

    <p>

    The active row can also be changed by setting the <xref href="Sdl.DesktopEditor.EditorApi.IRowInfo.Active" data-throw-if-not-resolved="false"></xref>

    property explicitly on one of the rows in the edit control.

    </p>
  example: []
  syntax:
    content: IRowInfo ActiveRow { get; set; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
    content.vb: Property ActiveRow As IRowInfo
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.ActiveRow*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SelectedRows
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.SelectedRows
  id: SelectedRows
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: SelectedRows
  nameWithType: IEditControl.SelectedRows
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SelectedRows
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: The rows that are currently selected in the edit control.
  remarks: >-
    <p>

    The selected rows are typically highlighted in some fashion, usually

    with a different color to the <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.ActiveRow" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    Operations which are required to work over multiple rows or segments should

    use this enumerator to find all the rows that have been selected.  Note that

    the selected rows may not be sequentially ordered.

    </p>
  example: []
  syntax:
    content: IEnumerable<IRowInfo> SelectedRows { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IRowInfo}
    content.vb: ReadOnly Property SelectedRows As IEnumerable(Of IRowInfo)
  overload: Sdl.DesktopEditor.EditorApi.IEditControl.SelectedRows*
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AfterInitialUpdate
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.AfterInitialUpdate
  id: AfterInitialUpdate
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: AfterInitialUpdate
  nameWithType: IEditControl.AfterInitialUpdate
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AfterInitialUpdate
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Raised when the visible area of the control has been fully laid out and painted

    for the first time. This event will also be raised if a different document 

    is assigned to the control (after the initial update resulting from that).
  example: []
  syntax:
    content: event EventHandler<AfterInitialUpdateEventArgs> AfterInitialUpdate
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs}
    content.vb: Event AfterInitialUpdate As EventHandler(Of AfterInitialUpdateEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SelectionChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.SelectionChanged
  id: SelectionChanged
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: SelectionChanged
  nameWithType: IEditControl.SelectionChanged
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SelectionChanged
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Fired when selection changes, either because of user actions or through the API.
  example: []
  syntax:
    content: event EventHandler<SelectionChangedEventArgs> SelectionChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs}
    content.vb: Event SelectionChanged As EventHandler(Of SelectionChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SelectionWasDeleted
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.SelectionWasDeleted
  id: SelectionWasDeleted
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: SelectionWasDeleted
  nameWithType: IEditControl.SelectionWasDeleted
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SelectionWasDeleted
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: This event is raised for TQA mode when a selection is deleted in order to pop up the properties dialog
  example: []
  syntax:
    content: event EventHandler<EventArgs> SelectionWasDeleted
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Event SelectionWasDeleted As EventHandler(Of EventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ContentHeightChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.ContentHeightChanged
  id: ContentHeightChanged
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ContentHeightChanged
  nameWithType: IEditControl.ContentHeightChanged
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ContentHeightChanged
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Fired when the height of the content displayed in the edit control changes.
  example: []
  syntax:
    content: event EventHandler<ContentHeightChangedEventArgs> ContentHeightChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.ContentHeightChangedEventArgs}
    content.vb: Event ContentHeightChanged As EventHandler(Of ContentHeightChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.MouseEnteringNode
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.MouseEnteringNode
  id: MouseEnteringNode
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: MouseEnteringNode
  nameWithType: IEditControl.MouseEnteringNode
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.MouseEnteringNode
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Fired when the mouse is moved to an area that is covered by the visual representation

    of a content node in the document.
  remarks: >-
    <p>

    A corresponding event <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.MouseLeavingNode" data-throw-if-not-resolved="false"></xref> will be fired when the mouse pointer is

    moved outside of the area.

    </p>

    <p>

    These events can be used when showing tooltips or implementing "hot" highlighting of nodes

    in the edit control.

    </p>
  example: []
  syntax:
    content: event EventHandler<MouseEnteringNodeEventArgs> MouseEnteringNode
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.MouseEnteringNodeEventArgs}
    content.vb: Event MouseEnteringNode As EventHandler(Of MouseEnteringNodeEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.MouseLeavingNode
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.MouseLeavingNode
  id: MouseLeavingNode
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: MouseLeavingNode
  nameWithType: IEditControl.MouseLeavingNode
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.MouseLeavingNode
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Fired when the mouse is moved out of the area that is covered by the visual representation

    of a content node in the document.
  remarks: >-
    <p>

    A corresponding event <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.MouseEnteringNode" data-throw-if-not-resolved="false"></xref> was fired when the mouse pointer was

    moved inside of the area.

    </p>

    <p>

    These events can be used when showing tooltips or implementing "hot" highlighting of nodes

    in the edit control.

    </p>
  example: []
  syntax:
    content: event EventHandler<MouseLeavingNodeEventArgs> MouseLeavingNode
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.MouseLeavingNodeEventArgs}
    content.vb: Event MouseLeavingNode As EventHandler(Of MouseLeavingNodeEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.MouseEnteringTextMarks
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.MouseEnteringTextMarks
  id: MouseEnteringTextMarks
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: MouseEnteringTextMarks
  nameWithType: IEditControl.MouseEnteringTextMarks
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.MouseEnteringTextMarks
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Fired when the mouse is moved into the area that is covered by the visual representation

    of a text mark or multiple text marks in the document.
  example: []
  syntax:
    content: event EventHandler<MouseOverTextMarksChangedEventArgs> MouseEnteringTextMarks
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.MouseOverTextMarksChangedEventArgs}
    content.vb: Event MouseEnteringTextMarks As EventHandler(Of MouseOverTextMarksChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.MouseLeavingTextMarks
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.MouseLeavingTextMarks
  id: MouseLeavingTextMarks
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: MouseLeavingTextMarks
  nameWithType: IEditControl.MouseLeavingTextMarks
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.MouseLeavingTextMarks
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Fired when the mouse is moved out of the area that is covered by the visual representation

    of a text mark or multiple text marks in the document.
  example: []
  syntax:
    content: event EventHandler<MouseOverTextMarksChangedEventArgs> MouseLeavingTextMarks
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.MouseOverTextMarksChangedEventArgs}
    content.vb: Event MouseLeavingTextMarks As EventHandler(Of MouseOverTextMarksChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.VScroll
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.VScroll
  id: VScroll
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: VScroll
  nameWithType: IEditControl.VScroll
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.VScroll
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Our scroll event that needs to be handled when synchronized scrolling is enabled
  example: []
  syntax:
    content: event EventHandler<VScrollEventArgs> VScroll
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.VScrollEventArgs}
    content.vb: Event VScroll As EventHandler(Of VScrollEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.PersistentScrollInfoChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.PersistentScrollInfoChanged
  id: PersistentScrollInfoChanged
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: PersistentScrollInfoChanged
  nameWithType: IEditControl.PersistentScrollInfoChanged
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.PersistentScrollInfoChanged
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Raised after the <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowNumber" data-throw-if-not-resolved="false"></xref> and/or the

    <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowScrollOffset" data-throw-if-not-resolved="false"></xref> values have changed.
  example: []
  syntax:
    content: event EventHandler<PersistentScrollInfoChangedEventArgs> PersistentScrollInfoChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.PersistentScrollInfoChangedEventArgs}
    content.vb: Event PersistentScrollInfoChanged As EventHandler(Of PersistentScrollInfoChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ActiveRowChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.ActiveRowChanged
  id: ActiveRowChanged
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: ActiveRowChanged
  nameWithType: IEditControl.ActiveRowChanged
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ActiveRowChanged
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Raised when the active row has changed in the edit control.
  example: []
  syntax:
    content: event EventHandler<ActiveRowChangedEventArgs> ActiveRowChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs}
    content.vb: Event ActiveRowChanged As EventHandler(Of ActiveRowChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRowsChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRowsChanged
  id: HighlightedRowsChanged
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: HighlightedRowsChanged
  nameWithType: IEditControl.HighlightedRowsChanged
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRowsChanged
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Raised when the set of highlighted rows in the edit control has changed as a result

    of <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsHighlighted(System.Collections.Generic.IList%7bSystem.Int32%7d%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> being called. To catch individual row changes,

    use <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRowChanged" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: event EventHandler<RowsChangedEventArgs> HighlightedRowsChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.RowsChangedEventArgs}
    content.vb: Event HighlightedRowsChanged As EventHandler(Of RowsChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRowChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRowChanged
  id: HighlightedRowChanged
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: HighlightedRowChanged
  nameWithType: IEditControl.HighlightedRowChanged
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRowChanged
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Raised whenever a single row has been highlighted or the original background

    color has been restored.
  example: []
  syntax:
    content: event EventHandler<RowChangedEventArgs> HighlightedRowChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.RowChangedEventArgs}
    content.vb: Event HighlightedRowChanged As EventHandler(Of RowChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SelectedRowChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.SelectedRowChanged
  id: SelectedRowChanged
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: SelectedRowChanged
  nameWithType: IEditControl.SelectedRowChanged
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SelectedRowChanged
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Raised whenever a row has been added to or removed from the <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.SelectedRows" data-throw-if-not-resolved="false"></xref> enumerator using

    <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo)" data-throw-if-not-resolved="false"></xref> or <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.ClearRowSelection(Sdl.DesktopEditor.EditorApi.IRowInfo)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: event EventHandler<RowChangedEventArgs> SelectedRowChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.RowChangedEventArgs}
    content.vb: Event SelectedRowChanged As EventHandler(Of RowChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AllSelectedRowsCleared
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.AllSelectedRowsCleared
  id: AllSelectedRowsCleared
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: AllSelectedRowsCleared
  nameWithType: IEditControl.AllSelectedRowsCleared
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AllSelectedRowsCleared
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Raised whenever all the selected rows have been removed from the <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.SelectedRows" data-throw-if-not-resolved="false"></xref>

    enumerator using <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.ClearAllRowSelections" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: event EventHandler<RowsChangedEventArgs> AllSelectedRowsCleared
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.RowsChangedEventArgs}
    content.vb: Event AllSelectedRowsCleared As EventHandler(Of RowsChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.RowBackColorChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.RowBackColorChanged
  id: RowBackColorChanged
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: RowBackColorChanged
  nameWithType: IEditControl.RowBackColorChanged
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.RowBackColorChanged
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Raised whenever the FundamentalBackColor or HighlightBackColor of a single row has been changed.

    This is not raised when a row's Highlighted property is changed.
  example: []
  syntax:
    content: event EventHandler<RowChangedEventArgs> RowBackColorChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.RowChangedEventArgs}
    content.vb: Event RowBackColorChanged As EventHandler(Of RowChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.RowStructureChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.RowStructureChanged
  id: RowStructureChanged
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: RowStructureChanged
  nameWithType: IEditControl.RowStructureChanged
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.RowStructureChanged
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Raised when the row structure has changed. This can happen when

    segments are merged or split, or when a new document is assigned.

    All previous rows will no longer be valid at this time.
  example: []
  syntax:
    content: event EventHandler<RowsChangedEventArgs> RowStructureChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.RowsChangedEventArgs}
    content.vb: Event RowStructureChanged As EventHandler(Of RowsChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperationChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperationChanged
  id: BeginSelectedRowOperationChanged
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: BeginSelectedRowOperationChanged
  nameWithType: IEditControl.BeginSelectedRowOperationChanged
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperationChanged
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Raised when the editor is beginning to perform a selected row operation.
  example: []
  syntax:
    content: event EventHandler<EditControlEventArgs> BeginSelectedRowOperationChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.EditControlEventArgs}
    content.vb: Event BeginSelectedRowOperationChanged As EventHandler(Of EditControlEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperationChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperationChanged
  id: EndSelectedRowOperationChanged
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: EndSelectedRowOperationChanged
  nameWithType: IEditControl.EndSelectedRowOperationChanged
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperationChanged
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Raised when the editor is finished performing a selected row operation.
  example: []
  syntax:
    content: event EventHandler<EditControlEventArgs> EndSelectedRowOperationChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.EditControlEventArgs}
    content.vb: Event EndSelectedRowOperationChanged As EventHandler(Of EditControlEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.OverwriteModeChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.OverwriteModeChanged
  id: OverwriteModeChanged
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: OverwriteModeChanged
  nameWithType: IEditControl.OverwriteModeChanged
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.OverwriteModeChanged
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    This event is fired whenever the editor changes between "overwrite" and "insert" mode

    and should be used to notify the user of the current state as defined by <xref href="Sdl.DesktopEditor.EditorApi.IEditControl.IsOverwriteModeEnabled" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: event EventHandler<OverwriteModeChangedEventArgs> OverwriteModeChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.OverwriteModeChangedEventArgs}
    content.vb: Event OverwriteModeChanged As EventHandler(Of OverwriteModeChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.IMEStartComposition
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.IMEStartComposition
  id: IMEStartComposition
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: IMEStartComposition
  nameWithType: IEditControl.IMEStartComposition
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.IMEStartComposition
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Raised when the IME composition is started
  example: []
  syntax:
    content: event EventHandler<EventArgs> IMEStartComposition
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Event IMEStartComposition As EventHandler(Of EventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.IMECompositionChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.IMECompositionChanged
  id: IMECompositionChanged
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: IMECompositionChanged
  nameWithType: IEditControl.IMECompositionChanged
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.IMECompositionChanged
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Raised when the IME composition is changed
  example: []
  syntax:
    content: event EventHandler<EventArgs> IMECompositionChanged
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Event IMECompositionChanged As EventHandler(Of EventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.IMEEndComposition
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.IMEEndComposition
  id: IMEEndComposition
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: IMEEndComposition
  nameWithType: IEditControl.IMEEndComposition
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.IMEEndComposition
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Raised when the IME composition is complete or cancelled
  example: []
  syntax:
    content: event EventHandler<EventArgs> IMEEndComposition
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Event IMEEndComposition As EventHandler(Of EventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SourceEditingModeEnded
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.SourceEditingModeEnded
  id: SourceEditingModeEnded
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  langs:
  - csharp
  - vb
  name: SourceEditingModeEnded
  nameWithType: IEditControl.SourceEditingModeEnded
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SourceEditingModeEnded
  type: Event
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: This event is fired when the source editing mode is ended
  example: []
  syntax:
    content: event EventHandler<SourceEditingModeEndedEventArgs> SourceEditingModeEnded
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.SourceEditingModeEndedEventArgs}
    content.vb: Event SourceEditingModeEnded As EventHandler(Of SourceEditingModeEndedEventArgs)
references:
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.html
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.DesktopEditor
    name: DesktopEditor
    isExternal: true
    href: Sdl.DesktopEditor.html
  - name: .
  - uid: Sdl.DesktopEditor.EditorApi
    name: EditorApi
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.DesktopEditor
    name: DesktopEditor
    isExternal: true
    href: Sdl.DesktopEditor.html
  - name: .
  - uid: Sdl.DesktopEditor.EditorApi
    name: EditorApi
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.html
- uid: Sdl.DesktopEditor.EditorApi.IControl.Control
  commentId: P:Sdl.DesktopEditor.EditorApi.IControl.Control
  parent: Sdl.DesktopEditor.EditorApi.IControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IControl.html#Sdl_DesktopEditor_EditorApi_IControl_Control
  name: Control
  nameWithType: IControl.Control
  fullName: Sdl.DesktopEditor.EditorApi.IControl.Control
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  name: ForWindowFromFrameworkElement(object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Windows.Window
    name: Window
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.window
  - name: '>'
  - name: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Windows.Window
    name: Window
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.window
  - name: )
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IControl
  commentId: T:Sdl.DesktopEditor.EditorApi.IControl
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IControl.html
  name: IControl
  nameWithType: IControl
  fullName: Sdl.DesktopEditor.EditorApi.IControl
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  name: ForWindowFromFrameworkElement(object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Windows.Window
    name: Window
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.window
  - name: '>'
  - name: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Windows.Window
    name: Window
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.window
  - name: )
  - name: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  href: Sdl.html
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Desktop
    name: Desktop
    isExternal: true
    href: Sdl.Desktop.html
  - name: .
  - uid: Sdl.Desktop.Platform
    name: Platform
    isExternal: true
    href: Sdl.Desktop.Platform.html
  - name: .
  - uid: Sdl.Desktop.Platform.Controls
    name: Controls
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.html
  - name: .
  - uid: Sdl.Desktop.Platform.Controls.Controls
    name: Controls
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Desktop
    name: Desktop
    isExternal: true
    href: Sdl.Desktop.html
  - name: .
  - uid: Sdl.Desktop.Platform
    name: Platform
    isExternal: true
    href: Sdl.Desktop.Platform.html
  - name: .
  - uid: Sdl.Desktop.Platform.Controls
    name: Controls
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.html
  - name: .
  - uid: Sdl.Desktop.Platform.Controls.Controls
    name: Controls
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.html
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AddColumn*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.AddColumn
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_AddColumn_Sdl_DesktopEditor_EditorApi_ICustomColumn_Sdl_DesktopEditor_EditorApi_CustomColumnLocation_
  name: AddColumn
  nameWithType: IEditControl.AddColumn
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AddColumn
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn
  commentId: T:Sdl.DesktopEditor.EditorApi.ICustomColumn
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.ICustomColumn.html
  name: ICustomColumn
  nameWithType: ICustomColumn
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn
- uid: Sdl.DesktopEditor.EditorApi.CustomColumnLocation
  commentId: T:Sdl.DesktopEditor.EditorApi.CustomColumnLocation
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.CustomColumnLocation.html
  name: CustomColumnLocation
  nameWithType: CustomColumnLocation
  fullName: Sdl.DesktopEditor.EditorApi.CustomColumnLocation
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.RemoveColumn*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.RemoveColumn
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_RemoveColumn_Sdl_DesktopEditor_EditorApi_ICustomColumn_
  name: RemoveColumn
  nameWithType: IEditControl.RemoveColumn
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.RemoveColumn
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Refresh
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.Refresh
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Refresh
  name: Refresh()
  nameWithType: IEditControl.Refresh()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Refresh()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.Refresh
    name: Refresh
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Refresh
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.Refresh
    name: Refresh
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Refresh
  - name: (
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Redraw*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.Redraw
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Redraw
  name: Redraw
  nameWithType: IEditControl.Redraw
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Redraw
- uid: Sdl.DesktopEditor.EditorApi.IEditControl
  commentId: T:Sdl.DesktopEditor.EditorApi.IEditControl
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html
  name: IEditControl
  nameWithType: IEditControl
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Redraw
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.Redraw
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Redraw
  name: Redraw()
  nameWithType: IEditControl.Redraw()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Redraw()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.Redraw
    name: Redraw
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Redraw
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.Redraw
    name: Redraw
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Redraw
  - name: (
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Refresh*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.Refresh
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Refresh
  name: Refresh
  nameWithType: IEditControl.Refresh
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Refresh
- uid: Sdl.DesktopEditor.EditorApi.EditException
  commentId: T:Sdl.DesktopEditor.EditorApi.EditException
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.EditException.html
  name: EditException
  nameWithType: EditException
  fullName: Sdl.DesktopEditor.EditorApi.EditException
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.DeleteSelection*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.DeleteSelection
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_DeleteSelection
  name: DeleteSelection
  nameWithType: IEditControl.DeleteSelection
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.DeleteSelection
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ReplaceSelection(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.ReplaceSelection(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ReplaceSelection_Sdl_DesktopEditor_EditorApi_IDocumentFragment_
  name: ReplaceSelection(IDocumentFragment)
  nameWithType: IEditControl.ReplaceSelection(IDocumentFragment)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ReplaceSelection(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.ReplaceSelection(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
    name: ReplaceSelection
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ReplaceSelection_Sdl_DesktopEditor_EditorApi_IDocumentFragment_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.IDocumentFragment
    name: IDocumentFragment
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IDocumentFragment.html
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.ReplaceSelection(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
    name: ReplaceSelection
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ReplaceSelection_Sdl_DesktopEditor_EditorApi_IDocumentFragment_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.IDocumentFragment
    name: IDocumentFragment
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IDocumentFragment.html
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.CopySelection*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.CopySelection
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_CopySelection
  name: CopySelection
  nameWithType: IEditControl.CopySelection
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.CopySelection
- uid: Sdl.DesktopEditor.EditorApi.IDocumentFragment
  commentId: T:Sdl.DesktopEditor.EditorApi.IDocumentFragment
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocumentFragment.html
  name: IDocumentFragment
  nameWithType: IDocumentFragment
  fullName: Sdl.DesktopEditor.EditorApi.IDocumentFragment
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.CopySelection
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.CopySelection
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_CopySelection
  name: CopySelection()
  nameWithType: IEditControl.CopySelection()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.CopySelection()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.CopySelection
    name: CopySelection
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_CopySelection
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.CopySelection
    name: CopySelection
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_CopySelection
  - name: (
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ReplaceSelection*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.ReplaceSelection
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ReplaceSelection_Sdl_DesktopEditor_EditorApi_IDocumentFragment_
  name: ReplaceSelection
  nameWithType: IEditControl.ReplaceSelection
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ReplaceSelection
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Undo*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.Undo
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Undo
  name: Undo
  nameWithType: IEditControl.Undo
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Undo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.UndoMultiple*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.UndoMultiple
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_UndoMultiple_System_Int64_
  name: UndoMultiple
  nameWithType: IEditControl.UndoMultiple
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.UndoMultiple
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Redo*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.Redo
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Redo
  name: Redo
  nameWithType: IEditControl.Redo
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Redo
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.RedoMultiple*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.RedoMultiple
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_RedoMultiple_System_Int64_
  name: RedoMultiple
  nameWithType: IEditControl.RedoMultiple
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.RedoMultiple
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestLocation*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestLocation
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_GetNearestLocation_Sdl_DesktopEditor_EditorApi_Position_
  name: GetNearestLocation
  nameWithType: IEditControl.GetNearestLocation
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestLocation
- uid: Sdl.DesktopEditor.EditorApi.Position
  commentId: T:Sdl.DesktopEditor.EditorApi.Position
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.Position.html
  name: Position
  nameWithType: Position
  fullName: Sdl.DesktopEditor.EditorApi.Position
- uid: System.Drawing.Rectangle
  commentId: T:System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.rectangle
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestPosition*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestPosition
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_GetNearestPosition_System_Drawing_Point_
  name: GetNearestPosition
  nameWithType: IEditControl.GetNearestPosition
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestPosition
- uid: System.Drawing.Point
  commentId: T:System.Drawing.Point
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.point
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position,System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position,System.Boolean)
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_MoveTo_Sdl_DesktopEditor_EditorApi_Position_System_Boolean_
  name: MoveTo(Position, bool)
  nameWithType: IContentSelection.MoveTo(Position, bool)
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position, bool)
  nameWithType.vb: IContentSelection.MoveTo(Position, Boolean)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position, Boolean)
  name.vb: MoveTo(Position, Boolean)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position,System.Boolean)
    name: MoveTo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_MoveTo_Sdl_DesktopEditor_EditorApi_Position_System_Boolean_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.Position
    name: Position
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.Position.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position,System.Boolean)
    name: MoveTo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_MoveTo_Sdl_DesktopEditor_EditorApi_Position_System_Boolean_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.Position
    name: Position
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.Position.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestVisiblePosition*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestVisiblePosition
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_GetNearestVisiblePosition_Sdl_DesktopEditor_EditorApi_Position_
  name: GetNearestVisiblePosition
  nameWithType: IEditControl.GetNearestVisiblePosition
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.GetNearestVisiblePosition
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.IsWordStart*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.IsWordStart
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_IsWordStart_Sdl_DesktopEditor_EditorApi_Position_
  name: IsWordStart
  nameWithType: IEditControl.IsWordStart
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.IsWordStart
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Selection
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.Selection
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Selection
  name: Selection
  nameWithType: IEditControl.Selection
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Selection
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.CreateTextIterator*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.CreateTextIterator
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_CreateTextIterator_Sdl_DesktopEditor_EditorApi_Position_
  name: CreateTextIterator
  nameWithType: IEditControl.CreateTextIterator
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.CreateTextIterator
- uid: Sdl.DesktopEditor.EditorApi.ITextIterator
  commentId: T:Sdl.DesktopEditor.EditorApi.ITextIterator
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.ITextIterator.html
  name: ITextIterator
  nameWithType: ITextIterator
  fullName: Sdl.DesktopEditor.EditorApi.ITextIterator
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollIntoView*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.ScrollIntoView
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ScrollIntoView_Sdl_DesktopEditor_EditorApi_Position_
  name: ScrollIntoView
  nameWithType: IEditControl.ScrollIntoView
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollIntoView
- uid: Sdl.DesktopEditor.EditorApi.IRowInfo
  commentId: T:Sdl.DesktopEditor.EditorApi.IRowInfo
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IRowInfo.html
  name: IRowInfo
  nameWithType: IRowInfo
  fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToCenter*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToCenter
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ScrollToCenter_Sdl_DesktopEditor_EditorApi_IRowInfo_
  name: ScrollToCenter
  nameWithType: IEditControl.ScrollToCenter
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToCenter
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AutoScrollToRowPosition*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.AutoScrollToRowPosition
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_AutoScrollToRowPosition_Sdl_DesktopEditor_EditorApi_IRowInfo_Sdl_DesktopEditor_EditorApi_IRowInfo_
  name: AutoScrollToRowPosition
  nameWithType: IEditControl.AutoScrollToRowPosition
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AutoScrollToRowPosition
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToRow*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToRow
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ScrollToRow_System_Int64_System_Int64_
  name: ScrollToRow
  nameWithType: IEditControl.ScrollToRow
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToRow
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.FindRow*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.FindRow
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_FindRow_Sdl_DesktopEditor_EditorApi_Position_
  name: FindRow
  nameWithType: IEditControl.FindRow
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.FindRow
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.IsRowVisible*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.IsRowVisible
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_IsRowVisible_System_Int32_
  name: IsRowVisible
  nameWithType: IEditControl.IsRowVisible
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.IsRowVisible
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.GetVisibleRowsInRange*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.GetVisibleRowsInRange
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_GetVisibleRowsInRange_Sdl_DesktopEditor_EditorApi_ContentRange_
  name: GetVisibleRowsInRange
  nameWithType: IEditControl.GetVisibleRowsInRange
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.GetVisibleRowsInRange
- uid: Sdl.DesktopEditor.EditorApi.ContentRange
  commentId: T:Sdl.DesktopEditor.EditorApi.ContentRange
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.ContentRange.html
  name: ContentRange
  nameWithType: ContentRange
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange
- uid: System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IRowInfo}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IRowInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IRowInfo>
  nameWithType: IEnumerable<IRowInfo>
  fullName: System.Collections.Generic.IEnumerable<Sdl.DesktopEditor.EditorApi.IRowInfo>
  nameWithType.vb: IEnumerable(Of IRowInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.DesktopEditor.EditorApi.IRowInfo)
  name.vb: IEnumerable(Of IRowInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IRowInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IRowInfo.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsVisibility*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsVisibility
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_SetRowsVisibility_System_Predicate_Sdl_DesktopEditor_EditorApi_IRowInfo__
  name: SetRowsVisibility
  nameWithType: IEditControl.SetRowsVisibility
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsVisibility
- uid: System.Predicate{Sdl.DesktopEditor.EditorApi.IRowInfo}
  commentId: T:System.Predicate{Sdl.DesktopEditor.EditorApi.IRowInfo}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<IRowInfo>
  nameWithType: Predicate<IRowInfo>
  fullName: System.Predicate<Sdl.DesktopEditor.EditorApi.IRowInfo>
  nameWithType.vb: Predicate(Of IRowInfo)
  fullName.vb: System.Predicate(Of Sdl.DesktopEditor.EditorApi.IRowInfo)
  name.vb: Predicate(Of IRowInfo)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IRowInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IRowInfo.html
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsHighlighted*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsHighlighted
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_SetRowsHighlighted_System_Collections_Generic_IList_System_Int32__System_Boolean_
  name: SetRowsHighlighted
  nameWithType: IEditControl.SetRowsHighlighted
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsHighlighted
- uid: System.Collections.Generic.IList{System.Int32}
  commentId: T:System.Collections.Generic.IList{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<int>
  nameWithType: IList<int>
  fullName: System.Collections.Generic.IList<int>
  nameWithType.vb: IList(Of Integer)
  fullName.vb: System.Collections.Generic.IList(Of Integer)
  name.vb: IList(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_SelectRow_Sdl_DesktopEditor_EditorApi_IRowInfo_
  name: SelectRow
  nameWithType: IEditControl.SelectRow
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRowRange*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.SelectRowRange
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_SelectRowRange_Sdl_DesktopEditor_EditorApi_IRowInfo_Sdl_DesktopEditor_EditorApi_IRowInfo_
  name: SelectRowRange
  nameWithType: IEditControl.SelectRowRange
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRowRange
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ChangeNextRowSelection*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.ChangeNextRowSelection
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ChangeNextRowSelection
  name: ChangeNextRowSelection
  nameWithType: IEditControl.ChangeNextRowSelection
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ChangeNextRowSelection
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ChangePreviousRowSelection*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.ChangePreviousRowSelection
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ChangePreviousRowSelection
  name: ChangePreviousRowSelection
  nameWithType: IEditControl.ChangePreviousRowSelection
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ChangePreviousRowSelection
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ClearRowSelection*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.ClearRowSelection
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ClearRowSelection_Sdl_DesktopEditor_EditorApi_IRowInfo_
  name: ClearRowSelection
  nameWithType: IEditControl.ClearRowSelection
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ClearRowSelection
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ClearAllRowSelections*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.ClearAllRowSelections
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ClearAllRowSelections
  name: ClearAllRowSelections
  nameWithType: IEditControl.ClearAllRowSelections
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ClearAllRowSelections
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.HasSelectedRows*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.HasSelectedRows
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_HasSelectedRows
  name: HasSelectedRows
  nameWithType: IEditControl.HasSelectedRows
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.HasSelectedRows
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperation
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperation
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_EndSelectedRowOperation
  name: EndSelectedRowOperation()
  nameWithType: IEditControl.EndSelectedRowOperation()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperation()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperation
    name: EndSelectedRowOperation
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_EndSelectedRowOperation
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperation
    name: EndSelectedRowOperation
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_EndSelectedRowOperation
  - name: (
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperation*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperation
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_BeginSelectedRowOperation
  name: BeginSelectedRowOperation
  nameWithType: IEditControl.BeginSelectedRowOperation
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperation
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperation
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperation
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_BeginSelectedRowOperation
  name: BeginSelectedRowOperation()
  nameWithType: IEditControl.BeginSelectedRowOperation()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperation()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperation
    name: BeginSelectedRowOperation
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_BeginSelectedRowOperation
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.BeginSelectedRowOperation
    name: BeginSelectedRowOperation
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_BeginSelectedRowOperation
  - name: (
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperation*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperation
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_EndSelectedRowOperation
  name: EndSelectedRowOperation
  nameWithType: IEditControl.EndSelectedRowOperation
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.EndSelectedRowOperation
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_SelectRow_Sdl_DesktopEditor_EditorApi_IRowInfo_
  name: SelectRow(IRowInfo)
  nameWithType: IEditControl.SelectRow(IRowInfo)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
    name: SelectRow
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_SelectRow_Sdl_DesktopEditor_EditorApi_IRowInfo_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IRowInfo.html
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.SelectRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
    name: SelectRow
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_SelectRow_Sdl_DesktopEditor_EditorApi_IRowInfo_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IRowInfo.html
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ClearRowSelection(Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.ClearRowSelection(Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ClearRowSelection_Sdl_DesktopEditor_EditorApi_IRowInfo_
  name: ClearRowSelection(IRowInfo)
  nameWithType: IEditControl.ClearRowSelection(IRowInfo)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ClearRowSelection(Sdl.DesktopEditor.EditorApi.IRowInfo)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.ClearRowSelection(Sdl.DesktopEditor.EditorApi.IRowInfo)
    name: ClearRowSelection
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ClearRowSelection_Sdl_DesktopEditor_EditorApi_IRowInfo_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IRowInfo.html
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.ClearRowSelection(Sdl.DesktopEditor.EditorApi.IRowInfo)
    name: ClearRowSelection
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ClearRowSelection_Sdl_DesktopEditor_EditorApi_IRowInfo_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IRowInfo.html
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ChangeFocusedRowSelection*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.ChangeFocusedRowSelection
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ChangeFocusedRowSelection
  name: ChangeFocusedRowSelection
  nameWithType: IEditControl.ChangeFocusedRowSelection
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ChangeFocusedRowSelection
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.FocusNextRow*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.FocusNextRow
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_FocusNextRow
  name: FocusNextRow
  nameWithType: IEditControl.FocusNextRow
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.FocusNextRow
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.FocusPreviousRow*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.FocusPreviousRow
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_FocusPreviousRow
  name: FocusPreviousRow
  nameWithType: IEditControl.FocusPreviousRow
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.FocusPreviousRow
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.CanCopySelectionToClipboard*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.CanCopySelectionToClipboard
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_CanCopySelectionToClipboard
  name: CanCopySelectionToClipboard
  nameWithType: IEditControl.CanCopySelectionToClipboard
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.CanCopySelectionToClipboard
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.CanCutSelectionToClipboard*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.CanCutSelectionToClipboard
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_CanCutSelectionToClipboard
  name: CanCutSelectionToClipboard
  nameWithType: IEditControl.CanCutSelectionToClipboard
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.CanCutSelectionToClipboard
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.CanPasteClipboardToDocument*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.CanPasteClipboardToDocument
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_CanPasteClipboardToDocument
  name: CanPasteClipboardToDocument
  nameWithType: IEditControl.CanPasteClipboardToDocument
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.CanPasteClipboardToDocument
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.CopySelectionToClipboard*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.CopySelectionToClipboard
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_CopySelectionToClipboard
  name: CopySelectionToClipboard
  nameWithType: IEditControl.CopySelectionToClipboard
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.CopySelectionToClipboard
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.CutSelectionToClipboard*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.CutSelectionToClipboard
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_CutSelectionToClipboard
  name: CutSelectionToClipboard
  nameWithType: IEditControl.CutSelectionToClipboard
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.CutSelectionToClipboard
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.PasteClipboardToDocument*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.PasteClipboardToDocument
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_PasteClipboardToDocument
  name: PasteClipboardToDocument
  nameWithType: IEditControl.PasteClipboardToDocument
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.PasteClipboardToDocument
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.NotifyTextMarkChanged(Sdl.DesktopEditor.EditorApi.ITextMark)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.NotifyTextMarkChanged(Sdl.DesktopEditor.EditorApi.ITextMark)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_NotifyTextMarkChanged_Sdl_DesktopEditor_EditorApi_ITextMark_
  name: NotifyTextMarkChanged(ITextMark)
  nameWithType: IEditControl.NotifyTextMarkChanged(ITextMark)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.NotifyTextMarkChanged(Sdl.DesktopEditor.EditorApi.ITextMark)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.NotifyTextMarkChanged(Sdl.DesktopEditor.EditorApi.ITextMark)
    name: NotifyTextMarkChanged
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_NotifyTextMarkChanged_Sdl_DesktopEditor_EditorApi_ITextMark_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.ITextMark
    name: ITextMark
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ITextMark.html
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.NotifyTextMarkChanged(Sdl.DesktopEditor.EditorApi.ITextMark)
    name: NotifyTextMarkChanged
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_NotifyTextMarkChanged_Sdl_DesktopEditor_EditorApi_ITextMark_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.ITextMark
    name: ITextMark
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ITextMark.html
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AutoUpdate
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.AutoUpdate
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_AutoUpdate
  name: AutoUpdate
  nameWithType: IEditControl.AutoUpdate
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AutoUpdate
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AddTextMark*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.AddTextMark
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_AddTextMark_Sdl_DesktopEditor_EditorApi_ContentRange_Sdl_DesktopEditor_EditorApi_TextMarkLayer_Sdl_DesktopEditor_EditorApi_ITextMarkPainter_
  name: AddTextMark
  nameWithType: IEditControl.AddTextMark
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AddTextMark
- uid: Sdl.DesktopEditor.EditorApi.TextMarkLayer
  commentId: T:Sdl.DesktopEditor.EditorApi.TextMarkLayer
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.TextMarkLayer.html
  name: TextMarkLayer
  nameWithType: TextMarkLayer
  fullName: Sdl.DesktopEditor.EditorApi.TextMarkLayer
- uid: Sdl.DesktopEditor.EditorApi.ITextMarkPainter
  commentId: T:Sdl.DesktopEditor.EditorApi.ITextMarkPainter
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.ITextMarkPainter.html
  name: ITextMarkPainter
  nameWithType: ITextMarkPainter
  fullName: Sdl.DesktopEditor.EditorApi.ITextMarkPainter
- uid: Sdl.DesktopEditor.EditorApi.ITextMark
  commentId: T:Sdl.DesktopEditor.EditorApi.ITextMark
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.ITextMark.html
  name: ITextMark
  nameWithType: ITextMark
  fullName: Sdl.DesktopEditor.EditorApi.ITextMark
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.NotifyTextMarkChanged*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.NotifyTextMarkChanged
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_NotifyTextMarkChanged_Sdl_DesktopEditor_EditorApi_ITextMark_
  name: NotifyTextMarkChanged
  nameWithType: IEditControl.NotifyTextMarkChanged
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.NotifyTextMarkChanged
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.RemoveTextMark*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.RemoveTextMark
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_RemoveTextMark_Sdl_DesktopEditor_EditorApi_ITextMark_
  name: RemoveTextMark
  nameWithType: IEditControl.RemoveTextMark
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.RemoveTextMark
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ClearTextMarks*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.ClearTextMarks
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ClearTextMarks
  name: ClearTextMarks
  nameWithType: IEditControl.ClearTextMarks
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ClearTextMarks
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AddActiveRowToSelected*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.AddActiveRowToSelected
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_AddActiveRowToSelected
  name: AddActiveRowToSelected
  nameWithType: IEditControl.AddActiveRowToSelected
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AddActiveRowToSelected
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AfterInitialUpdate
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.AfterInitialUpdate
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_AfterInitialUpdate
  name: AfterInitialUpdate
  nameWithType: IEditControl.AfterInitialUpdate
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AfterInitialUpdate
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.IsInitialUpdateCompleted*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.IsInitialUpdateCompleted
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_IsInitialUpdateCompleted
  name: IsInitialUpdateCompleted
  nameWithType: IEditControl.IsInitialUpdateCompleted
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.IsInitialUpdateCompleted
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AutoUpdate*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.AutoUpdate
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_AutoUpdate
  name: AutoUpdate
  nameWithType: IEditControl.AutoUpdate
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AutoUpdate
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.IsReadOnly*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.IsReadOnly
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_IsReadOnly
  name: IsReadOnly
  nameWithType: IEditControl.IsReadOnly
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.IsReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AcceptsReturn*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.AcceptsReturn
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_AcceptsReturn
  name: AcceptsReturn
  nameWithType: IEditControl.AcceptsReturn
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AcceptsReturn
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AcceptsTab*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.AcceptsTab
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_AcceptsTab
  name: AcceptsTab
  nameWithType: IEditControl.AcceptsTab
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AcceptsTab
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ShowWhitespaceCharacters*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.ShowWhitespaceCharacters
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ShowWhitespaceCharacters
  name: ShowWhitespaceCharacters
  nameWithType: IEditControl.ShowWhitespaceCharacters
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ShowWhitespaceCharacters
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.HideFileTags*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.HideFileTags
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_HideFileTags
  name: HideFileTags
  nameWithType: IEditControl.HideFileTags
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.HideFileTags
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SmartPasteAdjustingSpaces*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.SmartPasteAdjustingSpaces
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_SmartPasteAdjustingSpaces
  name: SmartPasteAdjustingSpaces
  nameWithType: IEditControl.SmartPasteAdjustingSpaces
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SmartPasteAdjustingSpaces
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.OverwriteModeChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.OverwriteModeChanged
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_OverwriteModeChanged
  name: OverwriteModeChanged
  nameWithType: IEditControl.OverwriteModeChanged
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.OverwriteModeChanged
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.IsOverwriteModeEnabled*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.IsOverwriteModeEnabled
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_IsOverwriteModeEnabled
  name: IsOverwriteModeEnabled
  nameWithType: IEditControl.IsOverwriteModeEnabled
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.IsOverwriteModeEnabled
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedBackColor*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedBackColor
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_HighlightedBackColor
  name: HighlightedBackColor
  nameWithType: IEditControl.HighlightedBackColor
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedBackColor
- uid: System.Drawing.Color
  commentId: T:System.Drawing.Color
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.color
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedBackColor
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedBackColor
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_HighlightedBackColor
  name: HighlightedBackColor
  nameWithType: IEditControl.HighlightedBackColor
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedBackColor
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightActiveRow*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.HighlightActiveRow
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_HighlightActiveRow
  name: HighlightActiveRow
  nameWithType: IEditControl.HighlightActiveRow
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightActiveRow
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SelectedBackColor*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.SelectedBackColor
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_SelectedBackColor
  name: SelectedBackColor
  nameWithType: IEditControl.SelectedBackColor
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SelectedBackColor
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Selection*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.Selection
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Selection
  name: Selection
  nameWithType: IEditControl.Selection
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Selection
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection
  commentId: T:Sdl.DesktopEditor.EditorApi.IContentSelection
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html
  name: IContentSelection
  nameWithType: IContentSelection
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Document*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.Document
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Document
  name: Document
  nameWithType: IEditControl.Document
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Document
- uid: Sdl.DesktopEditor.EditorApi.IDocument
  commentId: T:Sdl.DesktopEditor.EditorApi.IDocument
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IDocument.html
  name: IDocument
  nameWithType: IDocument
  fullName: Sdl.DesktopEditor.EditorApi.IDocument
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.TagPainter*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.TagPainter
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_TagPainter
  name: TagPainter
  nameWithType: IEditControl.TagPainter
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.TagPainter
- uid: Sdl.DesktopEditor.EditorApi.ITagPainter
  commentId: T:Sdl.DesktopEditor.EditorApi.ITagPainter
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.ITagPainter.html
  name: ITagPainter
  nameWithType: ITagPainter
  fullName: Sdl.DesktopEditor.EditorApi.ITagPainter
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ContentHeight*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.ContentHeight
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ContentHeight
  name: ContentHeight
  nameWithType: IEditControl.ContentHeight
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ContentHeight
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ContentHeight
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.ContentHeight
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ContentHeight
  name: ContentHeight
  nameWithType: IEditControl.ContentHeight
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ContentHeight
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowNumber
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowNumber
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_TopmostVisibleRowNumber
  name: TopmostVisibleRowNumber
  nameWithType: IEditControl.TopmostVisibleRowNumber
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowNumber
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowScrollOffset
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowScrollOffset
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_TopmostVisibleRowScrollOffset
  name: TopmostVisibleRowScrollOffset
  nameWithType: IEditControl.TopmostVisibleRowScrollOffset
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowScrollOffset
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.VerticalScrollOffset*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.VerticalScrollOffset
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_VerticalScrollOffset
  name: VerticalScrollOffset
  nameWithType: IEditControl.VerticalScrollOffset
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.VerticalScrollOffset
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToRow(System.Int64,System.Int64)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToRow(System.Int64,System.Int64)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ScrollToRow_System_Int64_System_Int64_
  name: ScrollToRow(long, long)
  nameWithType: IEditControl.ScrollToRow(long, long)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToRow(long, long)
  nameWithType.vb: IEditControl.ScrollToRow(Long, Long)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToRow(Long, Long)
  name.vb: ScrollToRow(Long, Long)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToRow(System.Int64,System.Int64)
    name: ScrollToRow
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ScrollToRow_System_Int64_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.ScrollToRow(System.Int64,System.Int64)
    name: ScrollToRow
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ScrollToRow_System_Int64_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.PersistentScrollInfoChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.PersistentScrollInfoChanged
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_PersistentScrollInfoChanged
  name: PersistentScrollInfoChanged
  nameWithType: IEditControl.PersistentScrollInfoChanged
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.PersistentScrollInfoChanged
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowNumber*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowNumber
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_TopmostVisibleRowNumber
  name: TopmostVisibleRowNumber
  nameWithType: IEditControl.TopmostVisibleRowNumber
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowNumber
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowScrollOffset*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowScrollOffset
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_TopmostVisibleRowScrollOffset
  name: TopmostVisibleRowScrollOffset
  nameWithType: IEditControl.TopmostVisibleRowScrollOffset
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.TopmostVisibleRowScrollOffset
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.AddTextMark(Sdl.DesktopEditor.EditorApi.ContentRange,Sdl.DesktopEditor.EditorApi.TextMarkLayer,Sdl.DesktopEditor.EditorApi.ITextMarkPainter)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.AddTextMark(Sdl.DesktopEditor.EditorApi.ContentRange,Sdl.DesktopEditor.EditorApi.TextMarkLayer,Sdl.DesktopEditor.EditorApi.ITextMarkPainter)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_AddTextMark_Sdl_DesktopEditor_EditorApi_ContentRange_Sdl_DesktopEditor_EditorApi_TextMarkLayer_Sdl_DesktopEditor_EditorApi_ITextMarkPainter_
  name: AddTextMark(ContentRange, TextMarkLayer, ITextMarkPainter)
  nameWithType: IEditControl.AddTextMark(ContentRange, TextMarkLayer, ITextMarkPainter)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.AddTextMark(Sdl.DesktopEditor.EditorApi.ContentRange, Sdl.DesktopEditor.EditorApi.TextMarkLayer, Sdl.DesktopEditor.EditorApi.ITextMarkPainter)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.AddTextMark(Sdl.DesktopEditor.EditorApi.ContentRange,Sdl.DesktopEditor.EditorApi.TextMarkLayer,Sdl.DesktopEditor.EditorApi.ITextMarkPainter)
    name: AddTextMark
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_AddTextMark_Sdl_DesktopEditor_EditorApi_ContentRange_Sdl_DesktopEditor_EditorApi_TextMarkLayer_Sdl_DesktopEditor_EditorApi_ITextMarkPainter_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.ContentRange
    name: ContentRange
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ContentRange.html
  - name: ','
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.TextMarkLayer
    name: TextMarkLayer
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.TextMarkLayer.html
  - name: ','
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.ITextMarkPainter
    name: ITextMarkPainter
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ITextMarkPainter.html
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.AddTextMark(Sdl.DesktopEditor.EditorApi.ContentRange,Sdl.DesktopEditor.EditorApi.TextMarkLayer,Sdl.DesktopEditor.EditorApi.ITextMarkPainter)
    name: AddTextMark
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_AddTextMark_Sdl_DesktopEditor_EditorApi_ContentRange_Sdl_DesktopEditor_EditorApi_TextMarkLayer_Sdl_DesktopEditor_EditorApi_ITextMarkPainter_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.ContentRange
    name: ContentRange
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ContentRange.html
  - name: ','
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.TextMarkLayer
    name: TextMarkLayer
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.TextMarkLayer.html
  - name: ','
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.ITextMarkPainter
    name: ITextMarkPainter
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ITextMarkPainter.html
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.RemoveTextMark(Sdl.DesktopEditor.EditorApi.ITextMark)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.RemoveTextMark(Sdl.DesktopEditor.EditorApi.ITextMark)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_RemoveTextMark_Sdl_DesktopEditor_EditorApi_ITextMark_
  name: RemoveTextMark(ITextMark)
  nameWithType: IEditControl.RemoveTextMark(ITextMark)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.RemoveTextMark(Sdl.DesktopEditor.EditorApi.ITextMark)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.RemoveTextMark(Sdl.DesktopEditor.EditorApi.ITextMark)
    name: RemoveTextMark
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_RemoveTextMark_Sdl_DesktopEditor_EditorApi_ITextMark_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.ITextMark
    name: ITextMark
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ITextMark.html
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.RemoveTextMark(Sdl.DesktopEditor.EditorApi.ITextMark)
    name: RemoveTextMark
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_RemoveTextMark_Sdl_DesktopEditor_EditorApi_ITextMark_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.ITextMark
    name: ITextMark
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ITextMark.html
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ClearTextMarks
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.ClearTextMarks
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ClearTextMarks
  name: ClearTextMarks()
  nameWithType: IEditControl.ClearTextMarks()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ClearTextMarks()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.ClearTextMarks
    name: ClearTextMarks
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ClearTextMarks
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.ClearTextMarks
    name: ClearTextMarks
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ClearTextMarks
  - name: (
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.TextMarks*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.TextMarks
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_TextMarks
  name: TextMarks
  nameWithType: IEditControl.TextMarks
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.TextMarks
- uid: System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.ITextMark}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.ITextMark}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ITextMark>
  nameWithType: IEnumerable<ITextMark>
  fullName: System.Collections.Generic.IEnumerable<Sdl.DesktopEditor.EditorApi.ITextMark>
  nameWithType.vb: IEnumerable(Of ITextMark)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.DesktopEditor.EditorApi.ITextMark)
  name.vb: IEnumerable(Of ITextMark)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.ITextMark
    name: ITextMark
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ITextMark.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.ITextMark
    name: ITextMark
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ITextMark.html
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ColumnsLeft*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.ColumnsLeft
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ColumnsLeft
  name: ColumnsLeft
  nameWithType: IEditControl.ColumnsLeft
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ColumnsLeft
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn[]
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.ICustomColumn.html
  name: ICustomColumn[]
  nameWithType: ICustomColumn[]
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn[]
  nameWithType.vb: ICustomColumn()
  fullName.vb: Sdl.DesktopEditor.EditorApi.ICustomColumn()
  name.vb: ICustomColumn()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn
    name: ICustomColumn
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ICustomColumn.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn
    name: ICustomColumn
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ICustomColumn.html
  - name: (
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ColumnsRight*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.ColumnsRight
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ColumnsRight
  name: ColumnsRight
  nameWithType: IEditControl.ColumnsRight
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ColumnsRight
- uid: Sdl.DesktopEditor.EditorApi.IRowInfo.IsVisible
  commentId: M:Sdl.DesktopEditor.EditorApi.IRowInfo.IsVisible
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IRowInfo.html#Sdl_DesktopEditor_EditorApi_IRowInfo_IsVisible
  name: IsVisible()
  nameWithType: IRowInfo.IsVisible()
  fullName: Sdl.DesktopEditor.EditorApi.IRowInfo.IsVisible()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo.IsVisible
    name: IsVisible
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IRowInfo.html#Sdl_DesktopEditor_EditorApi_IRowInfo_IsVisible
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo.IsVisible
    name: IsVisible
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IRowInfo.html#Sdl_DesktopEditor_EditorApi_IRowInfo_IsVisible
  - name: (
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.VisibleRows
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.VisibleRows
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_VisibleRows
  name: VisibleRows
  nameWithType: IEditControl.VisibleRows
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.VisibleRows
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.Rows*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.Rows
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_Rows
  name: Rows
  nameWithType: IEditControl.Rows
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.Rows
- uid: System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IRowInfo}
  commentId: T:System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IRowInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<IRowInfo>
  nameWithType: IList<IRowInfo>
  fullName: System.Collections.Generic.IList<Sdl.DesktopEditor.EditorApi.IRowInfo>
  nameWithType.vb: IList(Of IRowInfo)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.DesktopEditor.EditorApi.IRowInfo)
  name.vb: IList(Of IRowInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IRowInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IRowInfo.html
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.VisibleRows*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.VisibleRows
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_VisibleRows
  name: VisibleRows
  nameWithType: IEditControl.VisibleRows
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.VisibleRows
- uid: Sdl.DesktopEditor.EditorApi.IRowInfo.Highlighted
  commentId: P:Sdl.DesktopEditor.EditorApi.IRowInfo.Highlighted
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IRowInfo.html#Sdl_DesktopEditor_EditorApi_IRowInfo_Highlighted
  name: Highlighted
  nameWithType: IRowInfo.Highlighted
  fullName: Sdl.DesktopEditor.EditorApi.IRowInfo.Highlighted
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRows*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRows
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_HighlightedRows
  name: HighlightedRows
  nameWithType: IEditControl.HighlightedRows
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRows
- uid: Sdl.DesktopEditor.EditorApi.IRowInfo.Active
  commentId: P:Sdl.DesktopEditor.EditorApi.IRowInfo.Active
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IRowInfo.html#Sdl_DesktopEditor_EditorApi_IRowInfo_Active
  name: Active
  nameWithType: IRowInfo.Active
  fullName: Sdl.DesktopEditor.EditorApi.IRowInfo.Active
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ActiveRow*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.ActiveRow
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ActiveRow
  name: ActiveRow
  nameWithType: IEditControl.ActiveRow
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ActiveRow
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ActiveRow
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.ActiveRow
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ActiveRow
  name: ActiveRow
  nameWithType: IEditControl.ActiveRow
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ActiveRow
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SelectedRows*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IEditControl.SelectedRows
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_SelectedRows
  name: SelectedRows
  nameWithType: IEditControl.SelectedRows
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SelectedRows
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<AfterInitialUpdateEventArgs>
  nameWithType: EventHandler<AfterInitialUpdateEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs>
  nameWithType.vb: EventHandler(Of AfterInitialUpdateEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs)
  name.vb: EventHandler(Of AfterInitialUpdateEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs
    name: AfterInitialUpdateEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs
    name: AfterInitialUpdateEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.AfterInitialUpdateEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<SelectionChangedEventArgs>
  nameWithType: EventHandler<SelectionChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs>
  nameWithType.vb: EventHandler(Of SelectionChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs)
  name.vb: EventHandler(Of SelectionChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs
    name: SelectionChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs
    name: SelectionChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.SelectionChangedEventArgs.html
  - name: )
- uid: System.EventHandler{System.EventArgs}
  commentId: T:System.EventHandler{System.EventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
  nameWithType.vb: EventHandler(Of EventArgs)
  fullName.vb: System.EventHandler(Of System.EventArgs)
  name.vb: EventHandler(Of EventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.ContentHeightChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.ContentHeightChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ContentHeightChangedEventArgs>
  nameWithType: EventHandler<ContentHeightChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.ContentHeightChangedEventArgs>
  nameWithType.vb: EventHandler(Of ContentHeightChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.ContentHeightChangedEventArgs)
  name.vb: EventHandler(Of ContentHeightChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.ContentHeightChangedEventArgs
    name: ContentHeightChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ContentHeightChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.ContentHeightChangedEventArgs
    name: ContentHeightChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ContentHeightChangedEventArgs.html
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.MouseLeavingNode
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.MouseLeavingNode
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_MouseLeavingNode
  name: MouseLeavingNode
  nameWithType: IEditControl.MouseLeavingNode
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.MouseLeavingNode
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.MouseEnteringNodeEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.MouseEnteringNodeEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<MouseEnteringNodeEventArgs>
  nameWithType: EventHandler<MouseEnteringNodeEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.MouseEnteringNodeEventArgs>
  nameWithType.vb: EventHandler(Of MouseEnteringNodeEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.MouseEnteringNodeEventArgs)
  name.vb: EventHandler(Of MouseEnteringNodeEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.MouseEnteringNodeEventArgs
    name: MouseEnteringNodeEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.MouseEnteringNodeEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.MouseEnteringNodeEventArgs
    name: MouseEnteringNodeEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.MouseEnteringNodeEventArgs.html
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.MouseEnteringNode
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.MouseEnteringNode
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_MouseEnteringNode
  name: MouseEnteringNode
  nameWithType: IEditControl.MouseEnteringNode
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.MouseEnteringNode
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.MouseLeavingNodeEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.MouseLeavingNodeEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<MouseLeavingNodeEventArgs>
  nameWithType: EventHandler<MouseLeavingNodeEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.MouseLeavingNodeEventArgs>
  nameWithType.vb: EventHandler(Of MouseLeavingNodeEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.MouseLeavingNodeEventArgs)
  name.vb: EventHandler(Of MouseLeavingNodeEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.MouseLeavingNodeEventArgs
    name: MouseLeavingNodeEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.MouseLeavingNodeEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.MouseLeavingNodeEventArgs
    name: MouseLeavingNodeEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.MouseLeavingNodeEventArgs.html
  - name: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.MouseOverTextMarksChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.MouseOverTextMarksChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<MouseOverTextMarksChangedEventArgs>
  nameWithType: EventHandler<MouseOverTextMarksChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.MouseOverTextMarksChangedEventArgs>
  nameWithType.vb: EventHandler(Of MouseOverTextMarksChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.MouseOverTextMarksChangedEventArgs)
  name.vb: EventHandler(Of MouseOverTextMarksChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.MouseOverTextMarksChangedEventArgs
    name: MouseOverTextMarksChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.MouseOverTextMarksChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.MouseOverTextMarksChangedEventArgs
    name: MouseOverTextMarksChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.MouseOverTextMarksChangedEventArgs.html
  - name: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.VScrollEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.VScrollEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<VScrollEventArgs>
  nameWithType: EventHandler<VScrollEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.VScrollEventArgs>
  nameWithType.vb: EventHandler(Of VScrollEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.VScrollEventArgs)
  name.vb: EventHandler(Of VScrollEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.VScrollEventArgs
    name: VScrollEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.VScrollEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.VScrollEventArgs
    name: VScrollEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.VScrollEventArgs.html
  - name: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.PersistentScrollInfoChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.PersistentScrollInfoChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<PersistentScrollInfoChangedEventArgs>
  nameWithType: EventHandler<PersistentScrollInfoChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.PersistentScrollInfoChangedEventArgs>
  nameWithType.vb: EventHandler(Of PersistentScrollInfoChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.PersistentScrollInfoChangedEventArgs)
  name.vb: EventHandler(Of PersistentScrollInfoChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.PersistentScrollInfoChangedEventArgs
    name: PersistentScrollInfoChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.PersistentScrollInfoChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.PersistentScrollInfoChangedEventArgs
    name: PersistentScrollInfoChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.PersistentScrollInfoChangedEventArgs.html
  - name: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ActiveRowChangedEventArgs>
  nameWithType: EventHandler<ActiveRowChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs>
  nameWithType.vb: EventHandler(Of ActiveRowChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs)
  name.vb: EventHandler(Of ActiveRowChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs
    name: ActiveRowChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs
    name: ActiveRowChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.ActiveRowChangedEventArgs.html
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsHighlighted(System.Collections.Generic.IList{System.Int32},System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsHighlighted(System.Collections.Generic.IList{System.Int32},System.Boolean)
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_SetRowsHighlighted_System_Collections_Generic_IList_System_Int32__System_Boolean_
  name: SetRowsHighlighted(IList<int>, bool)
  nameWithType: IEditControl.SetRowsHighlighted(IList<int>, bool)
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsHighlighted(System.Collections.Generic.IList<int>, bool)
  nameWithType.vb: IEditControl.SetRowsHighlighted(IList(Of Integer), Boolean)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsHighlighted(System.Collections.Generic.IList(Of Integer), Boolean)
  name.vb: SetRowsHighlighted(IList(Of Integer), Boolean)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsHighlighted(System.Collections.Generic.IList{System.Int32},System.Boolean)
    name: SetRowsHighlighted
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_SetRowsHighlighted_System_Collections_Generic_IList_System_Int32__System_Boolean_
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.SetRowsHighlighted(System.Collections.Generic.IList{System.Int32},System.Boolean)
    name: SetRowsHighlighted
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_SetRowsHighlighted_System_Collections_Generic_IList_System_Int32__System_Boolean_
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRowChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRowChanged
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_HighlightedRowChanged
  name: HighlightedRowChanged
  nameWithType: IEditControl.HighlightedRowChanged
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.HighlightedRowChanged
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.RowsChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.RowsChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<RowsChangedEventArgs>
  nameWithType: EventHandler<RowsChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.RowsChangedEventArgs>
  nameWithType.vb: EventHandler(Of RowsChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.RowsChangedEventArgs)
  name.vb: EventHandler(Of RowsChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.RowsChangedEventArgs
    name: RowsChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.RowsChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.RowsChangedEventArgs
    name: RowsChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.RowsChangedEventArgs.html
  - name: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.RowChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.RowChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<RowChangedEventArgs>
  nameWithType: EventHandler<RowChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.RowChangedEventArgs>
  nameWithType.vb: EventHandler(Of RowChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.RowChangedEventArgs)
  name.vb: EventHandler(Of RowChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.RowChangedEventArgs
    name: RowChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.RowChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.RowChangedEventArgs
    name: RowChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.RowChangedEventArgs.html
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.SelectedRows
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.SelectedRows
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_SelectedRows
  name: SelectedRows
  nameWithType: IEditControl.SelectedRows
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.SelectedRows
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.ClearAllRowSelections
  commentId: M:Sdl.DesktopEditor.EditorApi.IEditControl.ClearAllRowSelections
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ClearAllRowSelections
  name: ClearAllRowSelections()
  nameWithType: IEditControl.ClearAllRowSelections()
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.ClearAllRowSelections()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.ClearAllRowSelections
    name: ClearAllRowSelections
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ClearAllRowSelections
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IEditControl.ClearAllRowSelections
    name: ClearAllRowSelections
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_ClearAllRowSelections
  - name: (
  - name: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.EditControlEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.EditControlEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<EditControlEventArgs>
  nameWithType: EventHandler<EditControlEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.EditControlEventArgs>
  nameWithType.vb: EventHandler(Of EditControlEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.EditControlEventArgs)
  name.vb: EventHandler(Of EditControlEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.EditControlEventArgs
    name: EditControlEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.EditControlEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.EditControlEventArgs
    name: EditControlEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.EditControlEventArgs.html
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IEditControl.IsOverwriteModeEnabled
  commentId: P:Sdl.DesktopEditor.EditorApi.IEditControl.IsOverwriteModeEnabled
  parent: Sdl.DesktopEditor.EditorApi.IEditControl
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html#Sdl_DesktopEditor_EditorApi_IEditControl_IsOverwriteModeEnabled
  name: IsOverwriteModeEnabled
  nameWithType: IEditControl.IsOverwriteModeEnabled
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl.IsOverwriteModeEnabled
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.OverwriteModeChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.OverwriteModeChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<OverwriteModeChangedEventArgs>
  nameWithType: EventHandler<OverwriteModeChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.OverwriteModeChangedEventArgs>
  nameWithType.vb: EventHandler(Of OverwriteModeChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.OverwriteModeChangedEventArgs)
  name.vb: EventHandler(Of OverwriteModeChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.OverwriteModeChangedEventArgs
    name: OverwriteModeChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.OverwriteModeChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.OverwriteModeChangedEventArgs
    name: OverwriteModeChangedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.OverwriteModeChangedEventArgs.html
  - name: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.SourceEditingModeEndedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.SourceEditingModeEndedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<SourceEditingModeEndedEventArgs>
  nameWithType: EventHandler<SourceEditingModeEndedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.SourceEditingModeEndedEventArgs>
  nameWithType.vb: EventHandler(Of SourceEditingModeEndedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.SourceEditingModeEndedEventArgs)
  name.vb: EventHandler(Of SourceEditingModeEndedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.DesktopEditor.EditorApi.SourceEditingModeEndedEventArgs
    name: SourceEditingModeEndedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.SourceEditingModeEndedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.DesktopEditor.EditorApi.SourceEditingModeEndedEventArgs
    name: SourceEditingModeEndedEventArgs
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.SourceEditingModeEndedEventArgs.html
  - name: )
