### YamlMime:ManagedReference
items:
- uid: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension
  commentId: T:Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension
  id: FocusExtension
  parent: Sdl.Desktop.Platform.Controls.Behaviours
  children:
  - Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.GetIsFocused(System.Windows.DependencyObject)
  - Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.IsFocusedProperty
  - Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.SetIsFocused(System.Windows.DependencyObject,System.Nullable{System.Boolean})
  langs:
  - csharp
  - vb
  name: FocusExtension
  nameWithType: FocusExtension
  fullName: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension
  type: Class
  source:
    path: Sdl.Desktop.Platform.Controls
    isExternal: true
  assemblies:
  - Sdl.Desktop.Platform.Controls
  namespace: Sdl.Desktop.Platform.Controls.Behaviours
  summary: "\nBehavior to change focus using a binded property\npartially used this answer https://stackoverflow.com/a/7972361\nremoved the if (e.OldValue == null) that forced the IsFocused to false/true on lost/got focus\nin out use case the IsFocus is updated in the view model hence here\n"
  syntax:
    content: public static class FocusExtension
    content.vb: Public Module FocusExtension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.IsFocusedProperty
  commentId: F:Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.IsFocusedProperty
  id: IsFocusedProperty
  parent: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension
  langs:
  - csharp
  - vb
  name: IsFocusedProperty
  nameWithType: FocusExtension.IsFocusedProperty
  fullName: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.IsFocusedProperty
  type: Field
  source:
    path: Sdl.Desktop.Platform.Controls
    isExternal: true
  assemblies:
  - Sdl.Desktop.Platform.Controls
  namespace: Sdl.Desktop.Platform.Controls.Behaviours
  syntax:
    content: public static readonly DependencyProperty IsFocusedProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly IsFocusedProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.GetIsFocused(System.Windows.DependencyObject)
  commentId: M:Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.GetIsFocused(System.Windows.DependencyObject)
  id: GetIsFocused(System.Windows.DependencyObject)
  parent: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension
  langs:
  - csharp
  - vb
  name: GetIsFocused(DependencyObject)
  nameWithType: FocusExtension.GetIsFocused(DependencyObject)
  fullName: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.GetIsFocused(System.Windows.DependencyObject)
  type: Method
  source:
    path: Sdl.Desktop.Platform.Controls
    isExternal: true
  assemblies:
  - Sdl.Desktop.Platform.Controls
  namespace: Sdl.Desktop.Platform.Controls.Behaviours
  syntax:
    content: public static bool? GetIsFocused(DependencyObject element)
    parameters:
    - id: element
      type: System.Windows.DependencyObject
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Shared Function GetIsFocused(element As DependencyObject) As Boolean?
  overload: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.GetIsFocused*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.SetIsFocused(System.Windows.DependencyObject,System.Nullable{System.Boolean})
  commentId: M:Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.SetIsFocused(System.Windows.DependencyObject,System.Nullable{System.Boolean})
  id: SetIsFocused(System.Windows.DependencyObject,System.Nullable{System.Boolean})
  parent: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension
  langs:
  - csharp
  - vb
  name: SetIsFocused(DependencyObject, Nullable<Boolean>)
  nameWithType: FocusExtension.SetIsFocused(DependencyObject, Nullable<Boolean>)
  fullName: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.SetIsFocused(System.Windows.DependencyObject, System.Nullable<System.Boolean>)
  type: Method
  source:
    path: Sdl.Desktop.Platform.Controls
    isExternal: true
  assemblies:
  - Sdl.Desktop.Platform.Controls
  namespace: Sdl.Desktop.Platform.Controls.Behaviours
  syntax:
    content: public static void SetIsFocused(DependencyObject element, bool? value)
    parameters:
    - id: element
      type: System.Windows.DependencyObject
    - id: value
      type: System.Nullable{System.Boolean}
    content.vb: Public Shared Sub SetIsFocused(element As DependencyObject, value As Boolean?)
  overload: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.SetIsFocused*
  nameWithType.vb: FocusExtension.SetIsFocused(DependencyObject, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.SetIsFocused(System.Windows.DependencyObject, System.Nullable(Of System.Boolean))
  name.vb: SetIsFocused(DependencyObject, Nullable(Of Boolean))
references:
- uid: Sdl.Desktop.Platform.Controls.Behaviours
  commentId: N:Sdl.Desktop.Platform.Controls.Behaviours
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Behaviours
  nameWithType: Sdl.Desktop.Platform.Controls.Behaviours
  fullName: Sdl.Desktop.Platform.Controls.Behaviours
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.DependencyProperty
  isExternal: true
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.GetIsFocused*
  commentId: Overload:Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.GetIsFocused
  isExternal: true
  name: GetIsFocused
  nameWithType: FocusExtension.GetIsFocused
  fullName: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.GetIsFocused
- uid: System.Windows.DependencyObject
  isExternal: true
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.SetIsFocused*
  commentId: Overload:Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.SetIsFocused
  isExternal: true
  name: SetIsFocused
  nameWithType: FocusExtension.SetIsFocused
  fullName: Sdl.Desktop.Platform.Controls.Behaviours.FocusExtension.SetIsFocused
