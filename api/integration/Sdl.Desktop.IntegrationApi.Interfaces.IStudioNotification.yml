### YamlMime:ManagedReference
items:
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
  commentId: T:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
  id: IStudioNotification
  parent: Sdl.Desktop.IntegrationApi.Interfaces
  children:
  - Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Action
  - Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.AllowsUserToDismiss
  - Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.AlwaysVisibleDetails
  - Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.ClearNotificationAction
  - Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Id
  - Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsActionVisible
  - Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsExpanderVisible
  - Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsLinkVisible
  - Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.LinkAction
  - Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.OtherDetails
  - Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Title
  langs:
  - csharp
  - vb
  name: IStudioNotification
  nameWithType: IStudioNotification
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
  type: Interface
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Interfaces
  summary: "\nThe contract defining the Notification \n"
  syntax:
    content: public interface IStudioNotification
    content.vb: Public Interface IStudioNotification
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Id
  commentId: P:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Id
  id: Id
  parent: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IStudioNotification.Id
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Id
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Interfaces
  summary: "\nGets or sets the identifier.\n"
  syntax:
    content: Guid Id { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Property Id As Guid
  overload: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Id*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Title
  commentId: P:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Title
  id: Title
  parent: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: IStudioNotification.Title
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Title
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Interfaces
  summary: "\nThe Title of the Notification\n"
  syntax:
    content: string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Title As String
  overload: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Title*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.LinkAction
  commentId: P:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.LinkAction
  id: LinkAction
  parent: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
  langs:
  - csharp
  - vb
  name: LinkAction
  nameWithType: IStudioNotification.LinkAction
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.LinkAction
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Interfaces
  summary: "\nThe action to be executed for open HyperLink text\n"
  syntax:
    content: IStudioNotificationCommand LinkAction { get; set; }
    parameters: []
    return:
      type: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotificationCommand
    content.vb: Property LinkAction As IStudioNotificationCommand
  overload: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.LinkAction*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsExpanderVisible
  commentId: P:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsExpanderVisible
  id: IsExpanderVisible
  parent: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
  langs:
  - csharp
  - vb
  name: IsExpanderVisible
  nameWithType: IStudioNotification.IsExpanderVisible
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsExpanderVisible
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Interfaces
  summary: "\nSet this to True of the Expander should be visible\n"
  syntax:
    content: bool IsExpanderVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsExpanderVisible As Boolean
  overload: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsExpanderVisible*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsLinkVisible
  commentId: P:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsLinkVisible
  id: IsLinkVisible
  parent: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
  langs:
  - csharp
  - vb
  name: IsLinkVisible
  nameWithType: IStudioNotification.IsLinkVisible
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsLinkVisible
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Interfaces
  summary: "\nSet this to True of the Link should be visible\n"
  syntax:
    content: bool IsLinkVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsLinkVisible As Boolean
  overload: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsLinkVisible*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.AlwaysVisibleDetails
  commentId: P:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.AlwaysVisibleDetails
  id: AlwaysVisibleDetails
  parent: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
  langs:
  - csharp
  - vb
  name: AlwaysVisibleDetails
  nameWithType: IStudioNotification.AlwaysVisibleDetails
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.AlwaysVisibleDetails
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Interfaces
  summary: "\nA list of details that are always visible on the Notification\n"
  syntax:
    content: List<string> AlwaysVisibleDetails { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Property AlwaysVisibleDetails As List(Of String)
  overload: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.AlwaysVisibleDetails*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.OtherDetails
  commentId: P:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.OtherDetails
  id: OtherDetails
  parent: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
  langs:
  - csharp
  - vb
  name: OtherDetails
  nameWithType: IStudioNotification.OtherDetails
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.OtherDetails
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Interfaces
  summary: "\nAdditional notification details visible only if the user wants to have them displayed\n"
  syntax:
    content: List<string> OtherDetails { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Property OtherDetails As List(Of String)
  overload: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.OtherDetails*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Action
  commentId: P:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Action
  id: Action
  parent: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: IStudioNotification.Action
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Action
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Interfaces
  summary: "\nThe action to be executed for this notification\n"
  syntax:
    content: IStudioNotificationCommand Action { get; set; }
    parameters: []
    return:
      type: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotificationCommand
    content.vb: Property Action As IStudioNotificationCommand
  overload: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Action*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsActionVisible
  commentId: P:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsActionVisible
  id: IsActionVisible
  parent: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
  langs:
  - csharp
  - vb
  name: IsActionVisible
  nameWithType: IStudioNotification.IsActionVisible
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsActionVisible
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Interfaces
  summary: "\nSet this to true if the Action Should be visible\n"
  syntax:
    content: bool IsActionVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsActionVisible As Boolean
  overload: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsActionVisible*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.AllowsUserToDismiss
  commentId: P:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.AllowsUserToDismiss
  id: AllowsUserToDismiss
  parent: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
  langs:
  - csharp
  - vb
  name: AllowsUserToDismiss
  nameWithType: IStudioNotification.AllowsUserToDismiss
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.AllowsUserToDismiss
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Interfaces
  summary: "\nSet this to true if you only if the user would be able to remove a notification\n"
  syntax:
    content: bool AllowsUserToDismiss { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property AllowsUserToDismiss As Boolean
  overload: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.AllowsUserToDismiss*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.ClearNotificationAction
  commentId: P:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.ClearNotificationAction
  id: ClearNotificationAction
  parent: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification
  langs:
  - csharp
  - vb
  name: ClearNotificationAction
  nameWithType: IStudioNotification.ClearNotificationAction
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.ClearNotificationAction
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Interfaces
  summary: "\nThe notification will be removed if AllowsUserToDismiss is set to true\n"
  syntax:
    content: IStudioNotificationCommand ClearNotificationAction { get; set; }
    parameters: []
    return:
      type: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotificationCommand
    content.vb: Property ClearNotificationAction As IStudioNotificationCommand
  overload: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.ClearNotificationAction*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.Desktop.IntegrationApi.Interfaces
  commentId: N:Sdl.Desktop.IntegrationApi.Interfaces
  isExternal: true
  name: Sdl.Desktop.IntegrationApi.Interfaces
  nameWithType: Sdl.Desktop.IntegrationApi.Interfaces
  fullName: Sdl.Desktop.IntegrationApi.Interfaces
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Id*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Id
  isExternal: true
  name: Id
  nameWithType: IStudioNotification.Id
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Id
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Title*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Title
  isExternal: true
  name: Title
  nameWithType: IStudioNotification.Title
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.LinkAction*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.LinkAction
  isExternal: true
  name: LinkAction
  nameWithType: IStudioNotification.LinkAction
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.LinkAction
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotificationCommand
  commentId: T:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotificationCommand
  parent: Sdl.Desktop.IntegrationApi.Interfaces
  isExternal: true
  name: IStudioNotificationCommand
  nameWithType: IStudioNotificationCommand
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotificationCommand
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsExpanderVisible*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsExpanderVisible
  isExternal: true
  name: IsExpanderVisible
  nameWithType: IStudioNotification.IsExpanderVisible
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsExpanderVisible
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsLinkVisible*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsLinkVisible
  isExternal: true
  name: IsLinkVisible
  nameWithType: IStudioNotification.IsLinkVisible
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsLinkVisible
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.AlwaysVisibleDetails*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.AlwaysVisibleDetails
  isExternal: true
  name: AlwaysVisibleDetails
  nameWithType: IStudioNotification.AlwaysVisibleDetails
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.AlwaysVisibleDetails
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.OtherDetails*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.OtherDetails
  isExternal: true
  name: OtherDetails
  nameWithType: IStudioNotification.OtherDetails
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.OtherDetails
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Action*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Action
  isExternal: true
  name: Action
  nameWithType: IStudioNotification.Action
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.Action
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsActionVisible*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsActionVisible
  isExternal: true
  name: IsActionVisible
  nameWithType: IStudioNotification.IsActionVisible
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.IsActionVisible
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.AllowsUserToDismiss*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.AllowsUserToDismiss
  isExternal: true
  name: AllowsUserToDismiss
  nameWithType: IStudioNotification.AllowsUserToDismiss
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.AllowsUserToDismiss
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.ClearNotificationAction*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.ClearNotificationAction
  isExternal: true
  name: ClearNotificationAction
  nameWithType: IStudioNotification.ClearNotificationAction
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IStudioNotification.ClearNotificationAction
