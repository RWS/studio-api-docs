### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule
  id: StudioAutomationIntegrationAPIModule
  parent: Sdl.TranslationStudioAutomation.IntegrationApi
  children:
  - Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.#ctor
  - Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.Initialize(Sdl.Platform.Interfaces.DI.IContainer)
  - Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.MinimumAPIFunctionality(Sdl.Platform.Interfaces.DI.IContainer)
  - Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.StartServices(Sdl.Platform.Interfaces.DI.IContainer)
  langs:
  - csharp
  - vb
  name: StudioAutomationIntegrationAPIModule
  nameWithType: StudioAutomationIntegrationAPIModule
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule
  type: Class
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  syntax:
    content: public class StudioAutomationIntegrationAPIModule
    content.vb: Public Class StudioAutomationIntegrationAPIModule
  inheritance:
  - System.Object
  implements:
  - Sdl.Platform.Interfaces.DI.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.Initialize(Sdl.Platform.Interfaces.DI.IContainer)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.Initialize(Sdl.Platform.Interfaces.DI.IContainer)
  id: Initialize(Sdl.Platform.Interfaces.DI.IContainer)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule
  langs:
  - csharp
  - vb
  name: Initialize(IContainer)
  nameWithType: StudioAutomationIntegrationAPIModule.Initialize(IContainer)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.Initialize(Sdl.Platform.Interfaces.DI.IContainer)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  syntax:
    content: public void Initialize(IContainer container)
    parameters:
    - id: container
      type: Sdl.Platform.Interfaces.DI.IContainer
    content.vb: Public Sub Initialize(container As IContainer)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.Initialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.MinimumAPIFunctionality(Sdl.Platform.Interfaces.DI.IContainer)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.MinimumAPIFunctionality(Sdl.Platform.Interfaces.DI.IContainer)
  id: MinimumAPIFunctionality(Sdl.Platform.Interfaces.DI.IContainer)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule
  langs:
  - csharp
  - vb
  name: MinimumAPIFunctionality(IContainer)
  nameWithType: StudioAutomationIntegrationAPIModule.MinimumAPIFunctionality(IContainer)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.MinimumAPIFunctionality(Sdl.Platform.Interfaces.DI.IContainer)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  syntax:
    content: public void MinimumAPIFunctionality(IContainer container)
    parameters:
    - id: container
      type: Sdl.Platform.Interfaces.DI.IContainer
    content.vb: Public Sub MinimumAPIFunctionality(container As IContainer)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.MinimumAPIFunctionality*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.StartServices(Sdl.Platform.Interfaces.DI.IContainer)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.StartServices(Sdl.Platform.Interfaces.DI.IContainer)
  id: StartServices(Sdl.Platform.Interfaces.DI.IContainer)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule
  langs:
  - csharp
  - vb
  name: StartServices(IContainer)
  nameWithType: StudioAutomationIntegrationAPIModule.StartServices(IContainer)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.StartServices(Sdl.Platform.Interfaces.DI.IContainer)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  syntax:
    content: public void StartServices(IContainer container)
    parameters:
    - id: container
      type: Sdl.Platform.Interfaces.DI.IContainer
    content.vb: Public Sub StartServices(container As IContainer)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.StartServices*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.#ctor
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.#ctor
  id: '#ctor'
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule
  langs:
  - csharp
  - vb
  name: StudioAutomationIntegrationAPIModule()
  nameWithType: StudioAutomationIntegrationAPIModule.StudioAutomationIntegrationAPIModule()
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.StudioAutomationIntegrationAPIModule()
  type: Constructor
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  syntax:
    content: public StudioAutomationIntegrationAPIModule()
    content.vb: Public Sub New
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi
  commentId: N:Sdl.TranslationStudioAutomation.IntegrationApi
  isExternal: true
  name: Sdl.TranslationStudioAutomation.IntegrationApi
  nameWithType: Sdl.TranslationStudioAutomation.IntegrationApi
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.Platform.Interfaces.DI.IModule
  commentId: '!:Sdl.Platform.Interfaces.DI.IModule'
  isExternal: true
  name: IModule
  nameWithType: IModule
  fullName: Sdl.Platform.Interfaces.DI.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.Initialize*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.Initialize
  isExternal: true
  name: Initialize
  nameWithType: StudioAutomationIntegrationAPIModule.Initialize
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.Initialize
- uid: Sdl.Platform.Interfaces.DI.IContainer
  isExternal: true
  name: IContainer
  nameWithType: IContainer
  fullName: Sdl.Platform.Interfaces.DI.IContainer
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.MinimumAPIFunctionality*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.MinimumAPIFunctionality
  isExternal: true
  name: MinimumAPIFunctionality
  nameWithType: StudioAutomationIntegrationAPIModule.MinimumAPIFunctionality
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.MinimumAPIFunctionality
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.StartServices*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.StartServices
  isExternal: true
  name: StartServices
  nameWithType: StudioAutomationIntegrationAPIModule.StartServices
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.StartServices
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.#ctor*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.#ctor
  isExternal: true
  name: StudioAutomationIntegrationAPIModule
  nameWithType: StudioAutomationIntegrationAPIModule.StudioAutomationIntegrationAPIModule
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.StudioAutomationIntegrationAPIModule.StudioAutomationIntegrationAPIModule
