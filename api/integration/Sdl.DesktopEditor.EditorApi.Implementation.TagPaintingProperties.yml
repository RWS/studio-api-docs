### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties
  commentId: T:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties
  id: TagPaintingProperties
  parent: Sdl.DesktopEditor.EditorApi.Implementation
  children:
  - Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)
  - Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)
  - Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.FontStyle)
  - Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor1
  - Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor2
  - Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.GhostBackgroundColor
  - Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.OutlineColor
  - Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  - Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  - Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TextColor
  - Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TextFormatting
  langs:
  - csharp
  - vb
  name: TagPaintingProperties
  nameWithType: TagPaintingProperties
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties
  type: Class
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nIn addition to implementing the ITagPaintingProperties interface this \nclass also provides some simple operations to brighten and darken on colors.\n"
  syntax:
    content: 'public class TagPaintingProperties : ITagPaintingProperties'
    content.vb: >-
      Public Class TagPaintingProperties

          Implements ITagPaintingProperties
  inheritance:
  - System.Object
  implements:
  - Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)
  id: '#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)'
  parent: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties
  langs:
  - csharp
  - vb
  name: TagPaintingProperties(Color, Color, Color)
  nameWithType: TagPaintingProperties.TagPaintingProperties(Color, Color, Color)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TagPaintingProperties(System.Drawing.Color, System.Drawing.Color, System.Drawing.Color)
  type: Constructor
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nTagPaintingProperties are a collection of color and style constants that are used \nfor painting tag foregrounds, backgrounds, text, and edges.\n\nBy default tag backgrounds are gradients. Ghost tag background colors are calculated from normal tag \nbackground colors.\n"
  syntax:
    content: public TagPaintingProperties(Color outlineColor, Color backgroundColor, Color textColor)
    parameters:
    - id: outlineColor
      type: System.Drawing.Color
    - id: backgroundColor
      type: System.Drawing.Color
      description: 'This value is the lighter gradient parameter: the darker one is calculated.'
    - id: textColor
      type: System.Drawing.Color
    content.vb: Public Sub New(outlineColor As Color, backgroundColor As Color, textColor As Color)
  overload: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)
  id: '#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)'
  parent: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties
  langs:
  - csharp
  - vb
  name: TagPaintingProperties(Color, Color, Color, Color)
  nameWithType: TagPaintingProperties.TagPaintingProperties(Color, Color, Color, Color)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TagPaintingProperties(System.Drawing.Color, System.Drawing.Color, System.Drawing.Color, System.Drawing.Color)
  type: Constructor
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nTagPaintingProperties are a collection of color and style constants that are used \nfor painting tag foregrounds, backgrounds, text, and edges.\n\nBy default tag backgrounds are shaded. Ghost tag background colors are calculated from normal tag \nbackground colors.\n"
  syntax:
    content: public TagPaintingProperties(Color outlineColor, Color backgroundColor1, Color backgroundColor2, Color textColor)
    parameters:
    - id: outlineColor
      type: System.Drawing.Color
    - id: backgroundColor1
      type: System.Drawing.Color
      description: The background color in the upper left.
    - id: backgroundColor2
      type: System.Drawing.Color
      description: The background color in the lower right.
    - id: textColor
      type: System.Drawing.Color
    content.vb: Public Sub New(outlineColor As Color, backgroundColor1 As Color, backgroundColor2 As Color, textColor As Color)
  overload: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.FontStyle)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.FontStyle)
  id: '#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.FontStyle)'
  parent: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties
  langs:
  - csharp
  - vb
  name: TagPaintingProperties(Color, Color, Color, Color, FontStyle)
  nameWithType: TagPaintingProperties.TagPaintingProperties(Color, Color, Color, Color, FontStyle)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TagPaintingProperties(System.Drawing.Color, System.Drawing.Color, System.Drawing.Color, System.Drawing.Color, System.Drawing.FontStyle)
  type: Constructor
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nTagPaintingProperties are a collection of color and style constants that are used \nfor painting tag foregrounds, backgrounds, text, and edges.\n\nBy default tag backgrounds are shaded. Ghost tag background colors are calculated from normal tag \nbackground colors.\n"
  syntax:
    content: public TagPaintingProperties(Color outlineColor, Color backgroundColor1, Color backgroundColor2, Color textColor, FontStyle textFormatting)
    parameters:
    - id: outlineColor
      type: System.Drawing.Color
    - id: backgroundColor1
      type: System.Drawing.Color
      description: The background color in the upper left.
    - id: backgroundColor2
      type: System.Drawing.Color
      description: The background color in the lower right.
    - id: textColor
      type: System.Drawing.Color
    - id: textFormatting
      type: System.Drawing.FontStyle
    content.vb: Public Sub New(outlineColor As Color, backgroundColor1 As Color, backgroundColor2 As Color, textColor As Color, textFormatting As FontStyle)
  overload: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  id: SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  parent: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties
  langs:
  - csharp
  - vb
  name: SaveToSettingsGroup(ISettingsGroup, String)
  nameWithType: TagPaintingProperties.SaveToSettingsGroup(ISettingsGroup, String)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup, System.String)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nSaves the current state of this object to the provided settings group.\n"
  syntax:
    content: public void SaveToSettingsGroup(ISettingsGroup settingsGroup, string settingId)
    parameters:
    - id: settingsGroup
      type: Sdl.Core.Settings.ISettingsGroup
      description: The settings group to save to.
    - id: settingId
      type: System.String
      description: The setting ID to use to save the settings.
    content.vb: Public Sub SaveToSettingsGroup(settingsGroup As ISettingsGroup, settingId As String)
  overload: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.SaveToSettingsGroup*
  implements:
  - Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  id: PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  parent: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties
  langs:
  - csharp
  - vb
  name: PopulateFromSettingsGroup(ISettingsGroup, String)
  nameWithType: TagPaintingProperties.PopulateFromSettingsGroup(ISettingsGroup, String)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup, System.String)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nPopulates this object with the settings contained in the provided settings group.\n"
  syntax:
    content: public void PopulateFromSettingsGroup(ISettingsGroup settingsGroup, string settingId)
    parameters:
    - id: settingsGroup
      type: Sdl.Core.Settings.ISettingsGroup
      description: The settings to populate from.
    - id: settingId
      type: System.String
      description: The setting ID to use to load the settings.
    content.vb: Public Sub PopulateFromSettingsGroup(settingsGroup As ISettingsGroup, settingId As String)
  overload: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.PopulateFromSettingsGroup*
  implements:
  - Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.OutlineColor
  commentId: P:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.OutlineColor
  id: OutlineColor
  parent: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties
  langs:
  - csharp
  - vb
  name: OutlineColor
  nameWithType: TagPaintingProperties.OutlineColor
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.OutlineColor
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nThe color that will be used to paint the tag border.\n"
  syntax:
    content: public Color OutlineColor { get; set; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: Public Property OutlineColor As Color
  overload: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.OutlineColor*
  implements:
  - Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.OutlineColor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor1
  commentId: P:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor1
  id: BackgroundColor1
  parent: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties
  langs:
  - csharp
  - vb
  name: BackgroundColor1
  nameWithType: TagPaintingProperties.BackgroundColor1
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor1
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nThe background color to start painting the tag with.  The tag will start with this color\nand gradually change into <xref href=\"Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor2\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public Color BackgroundColor1 { get; set; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: Public Property BackgroundColor1 As Color
  overload: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor1*
  implements:
  - Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor2
  commentId: P:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor2
  id: BackgroundColor2
  parent: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties
  langs:
  - csharp
  - vb
  name: BackgroundColor2
  nameWithType: TagPaintingProperties.BackgroundColor2
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor2
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nThe background color the finish painting the tag with.  The tag will start with\n<xref href=\"Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor1\" data-throw-if-not-resolved=\"false\"></xref> and finish with this color.\n"
  syntax:
    content: public Color BackgroundColor2 { get; set; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: Public Property BackgroundColor2 As Color
  overload: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor2*
  implements:
  - Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.GhostBackgroundColor
  commentId: P:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.GhostBackgroundColor
  id: GhostBackgroundColor
  parent: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties
  langs:
  - csharp
  - vb
  name: GhostBackgroundColor
  nameWithType: TagPaintingProperties.GhostBackgroundColor
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.GhostBackgroundColor
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nThe color that will be used to paint the tag when it is a ghost tag.\n"
  syntax:
    content: public Color GhostBackgroundColor { get; set; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: Public Property GhostBackgroundColor As Color
  overload: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.GhostBackgroundColor*
  implements:
  - Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.GhostBackgroundColor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TextColor
  commentId: P:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TextColor
  id: TextColor
  parent: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties
  langs:
  - csharp
  - vb
  name: TextColor
  nameWithType: TagPaintingProperties.TextColor
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TextColor
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nThe color that will be used to paint the text that appears within the tag.\n"
  syntax:
    content: public Color TextColor { get; set; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: Public Property TextColor As Color
  overload: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TextColor*
  implements:
  - Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextColor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TextFormatting
  commentId: P:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TextFormatting
  id: TextFormatting
  parent: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties
  langs:
  - csharp
  - vb
  name: TextFormatting
  nameWithType: TagPaintingProperties.TextFormatting
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TextFormatting
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nThe font that will be used for the text within the tag.\n"
  syntax:
    content: public FontStyle TextFormatting { get; set; }
    parameters: []
    return:
      type: System.Drawing.FontStyle
    content.vb: Public Property TextFormatting As FontStyle
  overload: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TextFormatting*
  implements:
  - Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextFormatting
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.DesktopEditor.EditorApi.Implementation
  commentId: N:Sdl.DesktopEditor.EditorApi.Implementation
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi.Implementation
  nameWithType: Sdl.DesktopEditor.EditorApi.Implementation
  fullName: Sdl.DesktopEditor.EditorApi.Implementation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  commentId: T:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: ITagPaintingProperties
  nameWithType: ITagPaintingProperties
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.#ctor*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.#ctor
  isExternal: true
  name: TagPaintingProperties
  nameWithType: TagPaintingProperties.TagPaintingProperties
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TagPaintingProperties
- uid: System.Drawing.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.FontStyle
  isExternal: true
  name: FontStyle
  nameWithType: FontStyle
  fullName: System.Drawing.FontStyle
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.SaveToSettingsGroup*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.SaveToSettingsGroup
  isExternal: true
  name: SaveToSettingsGroup
  nameWithType: TagPaintingProperties.SaveToSettingsGroup
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.SaveToSettingsGroup
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  commentId: M:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  parent: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  isExternal: true
  name: SaveToSettingsGroup(ISettingsGroup, String)
  nameWithType: ITagPaintingProperties.SaveToSettingsGroup(ISettingsGroup, String)
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup, System.String)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
    name: SaveToSettingsGroup
    nameWithType: ITagPaintingProperties.SaveToSettingsGroup
    fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.SaveToSettingsGroup
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Settings.ISettingsGroup
    name: ISettingsGroup
    nameWithType: ISettingsGroup
    fullName: Sdl.Core.Settings.ISettingsGroup
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.SaveToSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
    name: SaveToSettingsGroup
    nameWithType: ITagPaintingProperties.SaveToSettingsGroup
    fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.SaveToSettingsGroup
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Settings.ISettingsGroup
    name: ISettingsGroup
    nameWithType: ISettingsGroup
    fullName: Sdl.Core.Settings.ISettingsGroup
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.Settings.ISettingsGroup
  isExternal: true
  name: ISettingsGroup
  nameWithType: ISettingsGroup
  fullName: Sdl.Core.Settings.ISettingsGroup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.PopulateFromSettingsGroup*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.PopulateFromSettingsGroup
  isExternal: true
  name: PopulateFromSettingsGroup
  nameWithType: TagPaintingProperties.PopulateFromSettingsGroup
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.PopulateFromSettingsGroup
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  commentId: M:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
  parent: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  isExternal: true
  name: PopulateFromSettingsGroup(ISettingsGroup, String)
  nameWithType: ITagPaintingProperties.PopulateFromSettingsGroup(ISettingsGroup, String)
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup, System.String)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
    name: PopulateFromSettingsGroup
    nameWithType: ITagPaintingProperties.PopulateFromSettingsGroup
    fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.PopulateFromSettingsGroup
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Settings.ISettingsGroup
    name: ISettingsGroup
    nameWithType: ISettingsGroup
    fullName: Sdl.Core.Settings.ISettingsGroup
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.PopulateFromSettingsGroup(Sdl.Core.Settings.ISettingsGroup,System.String)
    name: PopulateFromSettingsGroup
    nameWithType: ITagPaintingProperties.PopulateFromSettingsGroup
    fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.PopulateFromSettingsGroup
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.Settings.ISettingsGroup
    name: ISettingsGroup
    nameWithType: ISettingsGroup
    fullName: Sdl.Core.Settings.ISettingsGroup
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.OutlineColor*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.OutlineColor
  isExternal: true
  name: OutlineColor
  nameWithType: TagPaintingProperties.OutlineColor
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.OutlineColor
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.OutlineColor
  commentId: P:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.OutlineColor
  parent: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  isExternal: true
  name: OutlineColor
  nameWithType: ITagPaintingProperties.OutlineColor
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.OutlineColor
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor1*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor1
  isExternal: true
  name: BackgroundColor1
  nameWithType: TagPaintingProperties.BackgroundColor1
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor1
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor1
  commentId: P:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor1
  parent: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  isExternal: true
  name: BackgroundColor1
  nameWithType: ITagPaintingProperties.BackgroundColor1
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor1
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor2*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor2
  isExternal: true
  name: BackgroundColor2
  nameWithType: TagPaintingProperties.BackgroundColor2
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.BackgroundColor2
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor2
  commentId: P:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor2
  parent: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  isExternal: true
  name: BackgroundColor2
  nameWithType: ITagPaintingProperties.BackgroundColor2
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.BackgroundColor2
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.GhostBackgroundColor*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.GhostBackgroundColor
  isExternal: true
  name: GhostBackgroundColor
  nameWithType: TagPaintingProperties.GhostBackgroundColor
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.GhostBackgroundColor
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.GhostBackgroundColor
  commentId: P:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.GhostBackgroundColor
  parent: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  isExternal: true
  name: GhostBackgroundColor
  nameWithType: ITagPaintingProperties.GhostBackgroundColor
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.GhostBackgroundColor
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TextColor*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TextColor
  isExternal: true
  name: TextColor
  nameWithType: TagPaintingProperties.TextColor
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TextColor
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextColor
  commentId: P:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextColor
  parent: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  isExternal: true
  name: TextColor
  nameWithType: ITagPaintingProperties.TextColor
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextColor
- uid: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TextFormatting*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TextFormatting
  isExternal: true
  name: TextFormatting
  nameWithType: TagPaintingProperties.TextFormatting
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.TagPaintingProperties.TextFormatting
- uid: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextFormatting
  commentId: P:Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextFormatting
  parent: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties
  isExternal: true
  name: TextFormatting
  nameWithType: ITagPaintingProperties.TextFormatting
  fullName: Sdl.DesktopEditor.EditorApi.ITagPaintingProperties.TextFormatting
