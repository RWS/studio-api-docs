### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams
  id: EditDistanceComputeParams
  parent: Sdl.TranslationStudioAutomation.IntegrationApi
  children:
  - Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.#ctor
  - Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.ApplySmallChangeAdjustment
  - Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.CharactersNormalizeSafely
  - Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.ComputeDiagonalOnly
  - Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.DiagonalOnly
  langs:
  - csharp
  - vb
  name: EditDistanceComputeParams
  nameWithType: EditDistanceComputeParams
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams
  type: Class
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  syntax:
    content: public class EditDistanceComputeParams
    content.vb: Public Class EditDistanceComputeParams
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.#ctor
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.#ctor
  id: '#ctor'
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams
  langs:
  - csharp
  - vb
  name: EditDistanceComputeParams()
  nameWithType: EditDistanceComputeParams.EditDistanceComputeParams()
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.EditDistanceComputeParams()
  type: Constructor
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  syntax:
    content: public EditDistanceComputeParams()
    content.vb: Public Sub New
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.ComputeDiagonalOnly
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.ComputeDiagonalOnly
  id: ComputeDiagonalOnly
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams
  langs:
  - csharp
  - vb
  name: ComputeDiagonalOnly
  nameWithType: EditDistanceComputeParams.ComputeDiagonalOnly
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.ComputeDiagonalOnly
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nIf number of tokens is equivalent, only the diagonal&apos;s similarities are computed.\n"
  syntax:
    content: public bool ComputeDiagonalOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ComputeDiagonalOnly As Boolean
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.ComputeDiagonalOnly*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.CharactersNormalizeSafely
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.CharactersNormalizeSafely
  id: CharactersNormalizeSafely
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams
  langs:
  - csharp
  - vb
  name: CharactersNormalizeSafely
  nameWithType: EditDistanceComputeParams.CharactersNormalizeSafely
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.CharactersNormalizeSafely
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nSet to false if the language is not considered &apos;char-based&apos; like Chinese and Japanese are \n(i.e. uses space as separator), but does consist of complex characters producing strings of more than 1 significant char \nwhen Unicode-normalised (NormalizationForm.FormD)\n"
  syntax:
    content: public bool CharactersNormalizeSafely { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CharactersNormalizeSafely As Boolean
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.CharactersNormalizeSafely*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.ApplySmallChangeAdjustment
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.ApplySmallChangeAdjustment
  id: ApplySmallChangeAdjustment
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams
  langs:
  - csharp
  - vb
  name: ApplySmallChangeAdjustment
  nameWithType: EditDistanceComputeParams.ApplySmallChangeAdjustment
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.ApplySmallChangeAdjustment
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nApplies small change adjustments.\n"
  syntax:
    content: public bool ApplySmallChangeAdjustment { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ApplySmallChangeAdjustment As Boolean
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.ApplySmallChangeAdjustment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.DiagonalOnly
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.DiagonalOnly
  id: DiagonalOnly
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams
  langs:
  - csharp
  - vb
  name: DiagonalOnly
  nameWithType: EditDistanceComputeParams.DiagonalOnly
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.DiagonalOnly
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nUnlike <xref href=\"Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.ComputeDiagonalOnly\" data-throw-if-not-resolved=\"false\"></xref>, should only be set true if number of tokens is equivalent, and if \nthe only edit operations of interest are &apos;identity&apos; and &apos;change&apos;. This provides a fast way to score segments with matching\nidentity strings and feature-token placement.\n"
  syntax:
    content: public bool DiagonalOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DiagonalOnly As Boolean
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.DiagonalOnly*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi
  commentId: N:Sdl.TranslationStudioAutomation.IntegrationApi
  isExternal: true
  name: Sdl.TranslationStudioAutomation.IntegrationApi
  nameWithType: Sdl.TranslationStudioAutomation.IntegrationApi
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.#ctor*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.#ctor
  isExternal: true
  name: EditDistanceComputeParams
  nameWithType: EditDistanceComputeParams.EditDistanceComputeParams
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.EditDistanceComputeParams
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.ComputeDiagonalOnly*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.ComputeDiagonalOnly
  isExternal: true
  name: ComputeDiagonalOnly
  nameWithType: EditDistanceComputeParams.ComputeDiagonalOnly
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.ComputeDiagonalOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.CharactersNormalizeSafely*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.CharactersNormalizeSafely
  isExternal: true
  name: CharactersNormalizeSafely
  nameWithType: EditDistanceComputeParams.CharactersNormalizeSafely
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.CharactersNormalizeSafely
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.ApplySmallChangeAdjustment*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.ApplySmallChangeAdjustment
  isExternal: true
  name: ApplySmallChangeAdjustment
  nameWithType: EditDistanceComputeParams.ApplySmallChangeAdjustment
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.ApplySmallChangeAdjustment
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.DiagonalOnly*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.DiagonalOnly
  isExternal: true
  name: DiagonalOnly
  nameWithType: EditDistanceComputeParams.DiagonalOnly
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.EditDistanceComputeParams.DiagonalOnly
