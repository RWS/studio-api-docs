### YamlMime:ManagedReference
items:
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController
  commentId: T:Sdl.Desktop.IntegrationApi.AbstractViewPartController
  id: AbstractViewPartController
  parent: Sdl.Desktop.IntegrationApi
  children:
  - Sdl.Desktop.IntegrationApi.AbstractViewPartController.#ctor
  - Sdl.Desktop.IntegrationApi.AbstractViewPartController.Activate
  - Sdl.Desktop.IntegrationApi.AbstractViewPartController.ActivationChanged
  - Sdl.Desktop.IntegrationApi.AbstractViewPartController.Dispose
  - Sdl.Desktop.IntegrationApi.AbstractViewPartController.Dispose(System.Boolean)
  - Sdl.Desktop.IntegrationApi.AbstractViewPartController.GetContentControl
  - Sdl.Desktop.IntegrationApi.AbstractViewPartController.Hide
  - Sdl.Desktop.IntegrationApi.AbstractViewPartController.Initialize
  - Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsActive
  - Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsInView
  - Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsVisible
  - Sdl.Desktop.IntegrationApi.AbstractViewPartController.Refresh
  - Sdl.Desktop.IntegrationApi.AbstractViewPartController.Show
  - Sdl.Desktop.IntegrationApi.AbstractViewPartController.VisibilityChanged
  langs:
  - csharp
  - vb
  name: AbstractViewPartController
  nameWithType: AbstractViewPartController
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController
  type: Class
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nBase class used in the implementation and integration of a view part in desktop applications. \n"
  syntax:
    content: 'public abstract class AbstractViewPartController : AbstractController, IDisposable'
    content.vb: >-
      Public MustInherit Class AbstractViewPartController
          Inherits AbstractController
          Implements IDisposable
  inheritance:
  - System.Object
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractController
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.ActivationChanged
  commentId: F:Sdl.Desktop.IntegrationApi.AbstractViewPartController.ActivationChanged
  id: ActivationChanged
  parent: Sdl.Desktop.IntegrationApi.AbstractViewPartController
  langs:
  - csharp
  - vb
  name: ActivationChanged
  nameWithType: AbstractViewPartController.ActivationChanged
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.ActivationChanged
  type: Field
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nTriggered when the view part activation state has changed\n"
  syntax:
    content: public EventHandler<ActivationChangedEventArgs> ActivationChanged
    return:
      type: System.EventHandler{Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs}
    content.vb: Public ActivationChanged As EventHandler(Of ActivationChangedEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.VisibilityChanged
  commentId: F:Sdl.Desktop.IntegrationApi.AbstractViewPartController.VisibilityChanged
  id: VisibilityChanged
  parent: Sdl.Desktop.IntegrationApi.AbstractViewPartController
  langs:
  - csharp
  - vb
  name: VisibilityChanged
  nameWithType: AbstractViewPartController.VisibilityChanged
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.VisibilityChanged
  type: Field
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nTriggered when the viewpart visibility has been changed.\n"
  syntax:
    content: public EventHandler<VisibilityChangedEventArgs> VisibilityChanged
    return:
      type: System.EventHandler{Sdl.Desktop.IntegrationApi.VisibilityChangedEventArgs}
    content.vb: Public VisibilityChanged As EventHandler(Of VisibilityChangedEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Initialize
  commentId: M:Sdl.Desktop.IntegrationApi.AbstractViewPartController.Initialize
  id: Initialize
  parent: Sdl.Desktop.IntegrationApi.AbstractViewPartController
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: AbstractViewPartController.Initialize()
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Initialize()
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nCalled only once when the controller is initialized\n"
  syntax:
    content: protected abstract void Initialize()
    content.vb: Protected MustOverride Sub Initialize
  overload: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Initialize*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.GetContentControl
  commentId: M:Sdl.Desktop.IntegrationApi.AbstractViewPartController.GetContentControl
  id: GetContentControl
  parent: Sdl.Desktop.IntegrationApi.AbstractViewPartController
  langs:
  - csharp
  - vb
  name: GetContentControl()
  nameWithType: AbstractViewPartController.GetContentControl()
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.GetContentControl()
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nGet the content control for this view part.\n"
  syntax:
    content: protected abstract IUIControl GetContentControl()
    return:
      type: Sdl.Desktop.IntegrationApi.Interfaces.IUIControl
      description: A windows user control.
    content.vb: Protected MustOverride Function GetContentControl As IUIControl
  overload: Sdl.Desktop.IntegrationApi.AbstractViewPartController.GetContentControl*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Refresh
  commentId: M:Sdl.Desktop.IntegrationApi.AbstractViewPartController.Refresh
  id: Refresh
  parent: Sdl.Desktop.IntegrationApi.AbstractViewPartController
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: AbstractViewPartController.Refresh()
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Refresh()
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nCalled when the view part needs to be refreshed.\n"
  remarks: This method is called when the view is being activated.
  syntax:
    content: protected virtual void Refresh()
    content.vb: Protected Overridable Sub Refresh
  overload: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Refresh*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Dispose
  commentId: M:Sdl.Desktop.IntegrationApi.AbstractViewPartController.Dispose
  id: Dispose
  parent: Sdl.Desktop.IntegrationApi.AbstractViewPartController
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: AbstractViewPartController.Dispose()
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Dispose()
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nOverride to implement the dispose of the resources associated with the view.\n"
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose
  overload: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Dispose(System.Boolean)
  commentId: M:Sdl.Desktop.IntegrationApi.AbstractViewPartController.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Sdl.Desktop.IntegrationApi.AbstractViewPartController
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: AbstractViewPartController.Dispose(Boolean)
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Dispose(System.Boolean)
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  syntax:
    content: public virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Public Overridable Sub Dispose(disposing As Boolean)
  overload: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Dispose*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Activate
  commentId: M:Sdl.Desktop.IntegrationApi.AbstractViewPartController.Activate
  id: Activate
  parent: Sdl.Desktop.IntegrationApi.AbstractViewPartController
  langs:
  - csharp
  - vb
  name: Activate()
  nameWithType: AbstractViewPartController.Activate()
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Activate()
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nShows and activates the view part. To just show aview part without changing the focus to it, use <xref href=\"Sdl.Desktop.IntegrationApi.AbstractViewPartController.Show\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: This method has no effect if the corresponding view is not active.
  syntax:
    content: public void Activate()
    content.vb: Public Sub Activate
  overload: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Activate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Show
  commentId: M:Sdl.Desktop.IntegrationApi.AbstractViewPartController.Show
  id: Show
  parent: Sdl.Desktop.IntegrationApi.AbstractViewPartController
  langs:
  - csharp
  - vb
  name: Show()
  nameWithType: AbstractViewPartController.Show()
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Show()
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nShows the view part without switching the input focus to it.\n"
  syntax:
    content: public void Show()
    content.vb: Public Sub Show
  overload: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Show*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Hide
  commentId: M:Sdl.Desktop.IntegrationApi.AbstractViewPartController.Hide
  id: Hide
  parent: Sdl.Desktop.IntegrationApi.AbstractViewPartController
  langs:
  - csharp
  - vb
  name: Hide()
  nameWithType: AbstractViewPartController.Hide()
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Hide()
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nHide the view part.\n"
  syntax:
    content: public void Hide()
    content.vb: Public Sub Hide
  overload: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Hide*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.#ctor
  commentId: M:Sdl.Desktop.IntegrationApi.AbstractViewPartController.#ctor
  id: '#ctor'
  parent: Sdl.Desktop.IntegrationApi.AbstractViewPartController
  langs:
  - csharp
  - vb
  name: AbstractViewPartController()
  nameWithType: AbstractViewPartController.AbstractViewPartController()
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.AbstractViewPartController()
  type: Constructor
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  syntax:
    content: protected AbstractViewPartController()
    content.vb: Protected Sub New
  overload: Sdl.Desktop.IntegrationApi.AbstractViewPartController.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsInView
  commentId: P:Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsInView
  id: IsInView
  parent: Sdl.Desktop.IntegrationApi.AbstractViewPartController
  langs:
  - csharp
  - vb
  name: IsInView
  nameWithType: AbstractViewPartController.IsInView
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsInView
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nReturns true if the contents of the viewpart are currently in the viewable area.\n"
  syntax:
    content: public bool IsInView { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInView As Boolean
  overload: Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsInView*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsActive
  commentId: P:Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsActive
  id: IsActive
  parent: Sdl.Desktop.IntegrationApi.AbstractViewPartController
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: AbstractViewPartController.IsActive
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsActive
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nReturns true if the associated view part is currently the active view part in the view.\n"
  remarks: If the check is done while processing the <xref href="Sdl.Desktop.IntegrationApi.AbstractViewPartController.ActivationChanged" data-throw-if-not-resolved="false"></xref>event this property is reflecting the previous state.
  syntax:
    content: public bool IsActive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsActive As Boolean
  overload: Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsActive*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsVisible
  commentId: P:Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsVisible
  id: IsVisible
  parent: Sdl.Desktop.IntegrationApi.AbstractViewPartController
  langs:
  - csharp
  - vb
  name: IsVisible
  nameWithType: AbstractViewPartController.IsVisible
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsVisible
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nReturns true if the associated view part is currently visible in the view.\n"
  remarks: If the check is done while processing the <xref href="Sdl.Desktop.IntegrationApi.AbstractViewPartController.VisibilityChanged" data-throw-if-not-resolved="false"></xref> event this property is reflecting the previous state.
  syntax:
    content: public bool IsVisible { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsVisible As Boolean
  overload: Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsVisible*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.Desktop.IntegrationApi
  commentId: N:Sdl.Desktop.IntegrationApi
  isExternal: true
  name: Sdl.Desktop.IntegrationApi
  nameWithType: Sdl.Desktop.IntegrationApi
  fullName: Sdl.Desktop.IntegrationApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractController
  commentId: T:Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractController
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal
  isExternal: true
  name: AbstractController
  nameWithType: AbstractController
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractController
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal
  commentId: N:Sdl.Desktop.IntegrationApi.Extensions.Internal
  isExternal: true
  name: Sdl.Desktop.IntegrationApi.Extensions.Internal
  nameWithType: Sdl.Desktop.IntegrationApi.Extensions.Internal
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: System.EventHandler{Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ActivationChangedEventArgs>
  nameWithType: EventHandler<ActivationChangedEventArgs>
  fullName: System.EventHandler<Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs>
  nameWithType.vb: EventHandler(Of ActivationChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs)
  name.vb: EventHandler(Of ActivationChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs
    name: ActivationChangedEventArgs
    nameWithType: ActivationChangedEventArgs
    fullName: Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs
    name: ActivationChangedEventArgs
    nameWithType: ActivationChangedEventArgs
    fullName: Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.Desktop.IntegrationApi.VisibilityChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.Desktop.IntegrationApi.VisibilityChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<VisibilityChangedEventArgs>
  nameWithType: EventHandler<VisibilityChangedEventArgs>
  fullName: System.EventHandler<Sdl.Desktop.IntegrationApi.VisibilityChangedEventArgs>
  nameWithType.vb: EventHandler(Of VisibilityChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.Desktop.IntegrationApi.VisibilityChangedEventArgs)
  name.vb: EventHandler(Of VisibilityChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Desktop.IntegrationApi.VisibilityChangedEventArgs
    name: VisibilityChangedEventArgs
    nameWithType: VisibilityChangedEventArgs
    fullName: Sdl.Desktop.IntegrationApi.VisibilityChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Desktop.IntegrationApi.VisibilityChangedEventArgs
    name: VisibilityChangedEventArgs
    nameWithType: VisibilityChangedEventArgs
    fullName: Sdl.Desktop.IntegrationApi.VisibilityChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Initialize*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewPartController.Initialize
  isExternal: true
  name: Initialize
  nameWithType: AbstractViewPartController.Initialize
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Initialize
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.GetContentControl*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewPartController.GetContentControl
  isExternal: true
  name: GetContentControl
  nameWithType: AbstractViewPartController.GetContentControl
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.GetContentControl
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IUIControl
  commentId: T:Sdl.Desktop.IntegrationApi.Interfaces.IUIControl
  parent: Sdl.Desktop.IntegrationApi.Interfaces
  isExternal: true
  name: IUIControl
  nameWithType: IUIControl
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IUIControl
- uid: Sdl.Desktop.IntegrationApi.Interfaces
  commentId: N:Sdl.Desktop.IntegrationApi.Interfaces
  isExternal: true
  name: Sdl.Desktop.IntegrationApi.Interfaces
  nameWithType: Sdl.Desktop.IntegrationApi.Interfaces
  fullName: Sdl.Desktop.IntegrationApi.Interfaces
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Refresh*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewPartController.Refresh
  isExternal: true
  name: Refresh
  nameWithType: AbstractViewPartController.Refresh
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Refresh
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Dispose*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewPartController.Dispose
  isExternal: true
  name: Dispose
  nameWithType: AbstractViewPartController.Dispose
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Activate*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewPartController.Activate
  isExternal: true
  name: Activate
  nameWithType: AbstractViewPartController.Activate
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Activate
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Show*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewPartController.Show
  isExternal: true
  name: Show
  nameWithType: AbstractViewPartController.Show
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Show
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Hide*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewPartController.Hide
  isExternal: true
  name: Hide
  nameWithType: AbstractViewPartController.Hide
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.Hide
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.#ctor*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewPartController.#ctor
  isExternal: true
  name: AbstractViewPartController
  nameWithType: AbstractViewPartController.AbstractViewPartController
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.AbstractViewPartController
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsInView*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsInView
  isExternal: true
  name: IsInView
  nameWithType: AbstractViewPartController.IsInView
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsInView
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsActive*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsActive
  isExternal: true
  name: IsActive
  nameWithType: AbstractViewPartController.IsActive
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsActive
- uid: Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsVisible*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsVisible
  isExternal: true
  name: IsVisible
  nameWithType: AbstractViewPartController.IsVisible
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewPartController.IsVisible
