### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute
  commentId: T:Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute
  id: FoldingFilterAttribute
  parent: Sdl.TranslationStudio.Api.Implementation.Editor
  children:
  - Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.#ctor
  - Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.#ctor(System.String,System.String,System.String)
  - Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertAfter
  - Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertBefore
  - Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.IsHeader
  - Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.VisibleSegmentsOnly
  langs:
  - csharp
  - vb
  name: FoldingFilterAttribute
  nameWithType: FoldingFilterAttribute
  fullName: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute
  type: Class
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Implementation.Editor
  syntax:
    content: 'public class FoldingFilterAttribute : ExtensionAttribute'
    content.vb: >-
      Public Class FoldingFilterAttribute

          Inherits ExtensionAttribute
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.#ctor
  commentId: M:Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.#ctor
  id: '#ctor'
  parent: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute
  langs:
  - csharp
  - vb
  name: FoldingFilterAttribute()
  nameWithType: FoldingFilterAttribute.FoldingFilterAttribute()
  fullName: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.FoldingFilterAttribute()
  type: Constructor
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Implementation.Editor
  syntax:
    content: public FoldingFilterAttribute()
    content.vb: Public Sub New
  overload: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.#ctor(System.String,System.String,System.String)
  commentId: M:Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute
  langs:
  - csharp
  - vb
  name: FoldingFilterAttribute(String, String, String)
  nameWithType: FoldingFilterAttribute.FoldingFilterAttribute(String, String, String)
  fullName: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.FoldingFilterAttribute(System.String, System.String, System.String)
  type: Constructor
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Implementation.Editor
  syntax:
    content: public FoldingFilterAttribute(string id, string name, string description)
    parameters:
    - id: id
      type: System.String
    - id: name
      type: System.String
    - id: description
      type: System.String
    content.vb: Public Sub New(id As String, name As String, description As String)
  overload: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.VisibleSegmentsOnly
  commentId: P:Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.VisibleSegmentsOnly
  id: VisibleSegmentsOnly
  parent: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute
  langs:
  - csharp
  - vb
  name: VisibleSegmentsOnly
  nameWithType: FoldingFilterAttribute.VisibleSegmentsOnly
  fullName: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.VisibleSegmentsOnly
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Implementation.Editor
  summary: "\nGets or sets the flag to tell the editor to only filter segments that are already visible\n"
  syntax:
    content: public bool VisibleSegmentsOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property VisibleSegmentsOnly As Boolean
  overload: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.VisibleSegmentsOnly*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.IsHeader
  commentId: P:Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.IsHeader
  id: IsHeader
  parent: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute
  langs:
  - csharp
  - vb
  name: IsHeader
  nameWithType: FoldingFilterAttribute.IsHeader
  fullName: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.IsHeader
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Implementation.Editor
  summary: "\nSet if a folding filter header.\n"
  syntax:
    content: public bool IsHeader { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsHeader As Boolean
  overload: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.IsHeader*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertBefore
  commentId: P:Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertBefore
  id: InsertBefore
  parent: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute
  langs:
  - csharp
  - vb
  name: InsertBefore
  nameWithType: FoldingFilterAttribute.InsertBefore
  fullName: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertBefore
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Implementation.Editor
  summary: "\nThis property specifies the id of another filter or header that this item will be inserted before.\nOtherwise, if set to a an empty string (&quot;&quot;) and <xref href=\"Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertAfter\" data-throw-if-not-resolved=\"false\"></xref> is null then this property specifies that this item will be inserted at the end of the list.\n"
  syntax:
    content: public string InsertBefore { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InsertBefore As String
  overload: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertBefore*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertAfter
  commentId: P:Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertAfter
  id: InsertAfter
  parent: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute
  langs:
  - csharp
  - vb
  name: InsertAfter
  nameWithType: FoldingFilterAttribute.InsertAfter
  fullName: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertAfter
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Implementation.Editor
  summary: "\nThis property specifies the id of another filter or header that this item will be inserted after.\nHowever, if <xref href=\"Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertBefore\" data-throw-if-not-resolved=\"false\"></xref> is also set to an empty string (&quot;&quot;) and <xref href=\"Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertAfter\" data-throw-if-not-resolved=\"false\"></xref> is set to an id of a header then this item will be inserted at the end of the list of items in that header.\nOtherwise, if set to a an empty string (&quot;&quot;) and <xref href=\"Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertAfter\" data-throw-if-not-resolved=\"false\"></xref> is null then this property specifies that this item will be inserted at the start of the list.\n"
  syntax:
    content: public string InsertAfter { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InsertAfter As String
  overload: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertAfter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.TranslationStudio.Api.Implementation.Editor
  commentId: N:Sdl.TranslationStudio.Api.Implementation.Editor
  isExternal: true
  name: Sdl.TranslationStudio.Api.Implementation.Editor
  nameWithType: Sdl.TranslationStudio.Api.Implementation.Editor
  fullName: Sdl.TranslationStudio.Api.Implementation.Editor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.#ctor*
  commentId: Overload:Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.#ctor
  isExternal: true
  name: FoldingFilterAttribute
  nameWithType: FoldingFilterAttribute.FoldingFilterAttribute
  fullName: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.FoldingFilterAttribute
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.VisibleSegmentsOnly*
  commentId: Overload:Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.VisibleSegmentsOnly
  isExternal: true
  name: VisibleSegmentsOnly
  nameWithType: FoldingFilterAttribute.VisibleSegmentsOnly
  fullName: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.VisibleSegmentsOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.IsHeader*
  commentId: Overload:Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.IsHeader
  isExternal: true
  name: IsHeader
  nameWithType: FoldingFilterAttribute.IsHeader
  fullName: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.IsHeader
- uid: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertBefore*
  commentId: Overload:Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertBefore
  isExternal: true
  name: InsertBefore
  nameWithType: FoldingFilterAttribute.InsertBefore
  fullName: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertBefore
- uid: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertAfter*
  commentId: Overload:Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertAfter
  isExternal: true
  name: InsertAfter
  nameWithType: FoldingFilterAttribute.InsertAfter
  fullName: Sdl.TranslationStudio.Api.Implementation.Editor.FoldingFilterAttribute.InsertAfter
