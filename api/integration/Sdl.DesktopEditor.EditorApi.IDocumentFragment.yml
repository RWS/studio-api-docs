### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.IDocumentFragment
  commentId: T:Sdl.DesktopEditor.EditorApi.IDocumentFragment
  id: IDocumentFragment
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.IDocumentFragment.DocProperties
  - Sdl.DesktopEditor.EditorApi.IDocumentFragment.FileProperties
  - Sdl.DesktopEditor.EditorApi.IDocumentFragment.NodeFactory
  langs:
  - csharp
  - vb
  name: IDocumentFragment
  nameWithType: IDocumentFragment
  fullName: Sdl.DesktopEditor.EditorApi.IDocumentFragment
  type: Interface
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nA &quot;disconnected&quot; piece of document content that can be manipulated as a standalone unit\nwithout affecting the actual document content.\n"
  remarks: "\n<p>\nAny operations that modify document content in the edit controls should do so through\noperations such as\n<xref href=\"Sdl.DesktopEditor.EditorApi.IEditControl.CopySelection\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Sdl.DesktopEditor.EditorApi.IEditControl.ReplaceSelection(Sdl.DesktopEditor.EditorApi.IDocumentFragment)\" data-throw-if-not-resolved=\"false\"></xref>,\nwhich use <code>IDocumentFragment</code> instances to represent the content being manipulated. \nThis ensures that these operations generate entries in the <xref href=\"Sdl.DesktopEditor.EditorApi.IUndoBuffer\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nThe document fragment provides a factory that can be used to create filter framework\nspecific nodes that can be inserted into the document fragment.\n</p>\n<p>\nThe document fragment implements <code>IDisposable</code> to facilitate quicker clean-up of large\nchunks of content. To conserve memory we recommend disposing of a document fragment as soon as it has\nfilled its purpose, in particular if it contains a lot of content or has been used\nto create many nodes.\n</p>\n"
  syntax:
    content: 'public interface IDocumentFragment : IChangeableContainerNode, IChangeableNode, ITreeNode<IChangeableNode, IChangeableContainerNode>, IList<IChangeableNode>, ICollection<IChangeableNode>, IEnumerable<IChangeableNode>, IEnumerable, IDisposable'
    content.vb: >-
      Public Interface IDocumentFragment
          Inherits IChangeableContainerNode, IChangeableNode, ITreeNode(Of IChangeableNode, IChangeableContainerNode), IList(Of IChangeableNode), ICollection(Of IChangeableNode), IEnumerable(Of IChangeableNode), IEnumerable, IDisposable
  inheritedMembers:
  - Sdl.DesktopEditor.EditorApi.IChangeableContainerNode.Find(System.Predicate{Sdl.DesktopEditor.EditorApi.IChangeableNode},System.Boolean)
  - Sdl.DesktopEditor.EditorApi.IChangeableNode.MoveTo(Sdl.DesktopEditor.EditorApi.IChangeableContainerNode,Sdl.DesktopEditor.EditorApi.IChangeableNode)
  - Sdl.DesktopEditor.EditorApi.IChangeableNode.RemoveFromParent
  - Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}.Parent
  - Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}.NextSibling
  - Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}.PreviousSibling
  - Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}.Root
  - System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}.IndexOf(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  - System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Insert(System.Int32,Sdl.DesktopEditor.EditorApi.IChangeableNode)
  - System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}.RemoveAt(System.Int32)
  - System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Item(System.Int32)
  - System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Add(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  - System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Clear
  - System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Contains(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  - System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.CopyTo(Sdl.DesktopEditor.EditorApi.IChangeableNode[],System.Int32)
  - System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Remove(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  - System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Count
  - System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.IsReadOnly
  - System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IChangeableNode}.GetEnumerator
  - System.IDisposable.Dispose
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.DesktopEditor.EditorApi.IDocumentFragment.NodeFactory
  commentId: P:Sdl.DesktopEditor.EditorApi.IDocumentFragment.NodeFactory
  id: NodeFactory
  parent: Sdl.DesktopEditor.EditorApi.IDocumentFragment
  langs:
  - csharp
  - vb
  name: NodeFactory
  nameWithType: IDocumentFragment.NodeFactory
  fullName: Sdl.DesktopEditor.EditorApi.IDocumentFragment.NodeFactory
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nFactory that can be used to create new nodes for inserting into the document fragment.\n"
  syntax:
    content: INodeFactory NodeFactory { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.INodeFactory
    content.vb: ReadOnly Property NodeFactory As INodeFactory
  overload: Sdl.DesktopEditor.EditorApi.IDocumentFragment.NodeFactory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IDocumentFragment.DocProperties
  commentId: P:Sdl.DesktopEditor.EditorApi.IDocumentFragment.DocProperties
  id: DocProperties
  parent: Sdl.DesktopEditor.EditorApi.IDocumentFragment
  langs:
  - csharp
  - vb
  name: DocProperties
  nameWithType: IDocumentFragment.DocProperties
  fullName: Sdl.DesktopEditor.EditorApi.IDocumentFragment.DocProperties
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nIf a fragment represents a part of a document this property stores the \ndocument&apos;s properties. This may be used for validating operations like &apos;Paste&apos; where\nit is important to know whether the document fragment received belongs to the same document.\n"
  syntax:
    content: IDocumentProperties DocProperties { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
    content.vb: Property DocProperties As IDocumentProperties
  overload: Sdl.DesktopEditor.EditorApi.IDocumentFragment.DocProperties*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.IDocumentFragment.FileProperties
  commentId: P:Sdl.DesktopEditor.EditorApi.IDocumentFragment.FileProperties
  id: FileProperties
  parent: Sdl.DesktopEditor.EditorApi.IDocumentFragment
  langs:
  - csharp
  - vb
  name: FileProperties
  nameWithType: IDocumentFragment.FileProperties
  fullName: Sdl.DesktopEditor.EditorApi.IDocumentFragment.FileProperties
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nIf a fragment represents a part of an XLIFF document this property stores the \nfile properties of the fragment. This may be used for validating operations like &apos;Paste&apos; where\nit is important to know whether the document fragment received belongs to the same document.\n\nThis assumes that a document fragment does not span content from multiple native files.\n"
  syntax:
    content: IFileProperties FileProperties { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
    content.vb: Property FileProperties As IFileProperties
  overload: Sdl.DesktopEditor.EditorApi.IDocumentFragment.FileProperties*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode.Find(System.Predicate{Sdl.DesktopEditor.EditorApi.IChangeableNode},System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.IChangeableContainerNode.Find(System.Predicate{Sdl.DesktopEditor.EditorApi.IChangeableNode},System.Boolean)
  parent: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode
  isExternal: true
  name: Find(Predicate<IChangeableNode>, Boolean)
  nameWithType: IChangeableContainerNode.Find(Predicate<IChangeableNode>, Boolean)
  fullName: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode.Find(System.Predicate<Sdl.DesktopEditor.EditorApi.IChangeableNode>, System.Boolean)
  nameWithType.vb: IChangeableContainerNode.Find(Predicate(Of IChangeableNode), Boolean)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode.Find(System.Predicate(Of Sdl.DesktopEditor.EditorApi.IChangeableNode), System.Boolean)
  name.vb: Find(Predicate(Of IChangeableNode), Boolean)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode.Find(System.Predicate{Sdl.DesktopEditor.EditorApi.IChangeableNode},System.Boolean)
    name: Find
    nameWithType: IChangeableContainerNode.Find
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode.Find(System.Predicate{Sdl.DesktopEditor.EditorApi.IChangeableNode},System.Boolean)
    name: Find
    nameWithType: IChangeableContainerNode.Find
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IChangeableNode.MoveTo(Sdl.DesktopEditor.EditorApi.IChangeableContainerNode,Sdl.DesktopEditor.EditorApi.IChangeableNode)
  commentId: M:Sdl.DesktopEditor.EditorApi.IChangeableNode.MoveTo(Sdl.DesktopEditor.EditorApi.IChangeableContainerNode,Sdl.DesktopEditor.EditorApi.IChangeableNode)
  parent: Sdl.DesktopEditor.EditorApi.IChangeableNode
  isExternal: true
  name: MoveTo(IChangeableContainerNode, IChangeableNode)
  nameWithType: IChangeableNode.MoveTo(IChangeableContainerNode, IChangeableNode)
  fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode.MoveTo(Sdl.DesktopEditor.EditorApi.IChangeableContainerNode, Sdl.DesktopEditor.EditorApi.IChangeableNode)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode.MoveTo(Sdl.DesktopEditor.EditorApi.IChangeableContainerNode,Sdl.DesktopEditor.EditorApi.IChangeableNode)
    name: MoveTo
    nameWithType: IChangeableNode.MoveTo
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode.MoveTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode
    name: IChangeableContainerNode
    nameWithType: IChangeableContainerNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode.MoveTo(Sdl.DesktopEditor.EditorApi.IChangeableContainerNode,Sdl.DesktopEditor.EditorApi.IChangeableNode)
    name: MoveTo
    nameWithType: IChangeableNode.MoveTo
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode.MoveTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode
    name: IChangeableContainerNode
    nameWithType: IChangeableContainerNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IChangeableNode.RemoveFromParent
  commentId: M:Sdl.DesktopEditor.EditorApi.IChangeableNode.RemoveFromParent
  parent: Sdl.DesktopEditor.EditorApi.IChangeableNode
  isExternal: true
  name: RemoveFromParent()
  nameWithType: IChangeableNode.RemoveFromParent()
  fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode.RemoveFromParent()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode.RemoveFromParent
    name: RemoveFromParent
    nameWithType: IChangeableNode.RemoveFromParent
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode.RemoveFromParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode.RemoveFromParent
    name: RemoveFromParent
    nameWithType: IChangeableNode.RemoveFromParent
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode.RemoveFromParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}.Parent
  commentId: P:Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}.Parent
  parent: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}
  definition: Sdl.DesktopEditor.EditorApi.ITreeNode`2.Parent
  name: Parent
  nameWithType: ITreeNode<IChangeableNode, IChangeableContainerNode>.Parent
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<Sdl.DesktopEditor.EditorApi.IChangeableNode, Sdl.DesktopEditor.EditorApi.IChangeableContainerNode>.Parent
  nameWithType.vb: ITreeNode(Of IChangeableNode, IChangeableContainerNode).Parent
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of Sdl.DesktopEditor.EditorApi.IChangeableNode, Sdl.DesktopEditor.EditorApi.IChangeableContainerNode).Parent
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}.NextSibling
  commentId: P:Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}.NextSibling
  parent: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}
  definition: Sdl.DesktopEditor.EditorApi.ITreeNode`2.NextSibling
  name: NextSibling
  nameWithType: ITreeNode<IChangeableNode, IChangeableContainerNode>.NextSibling
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<Sdl.DesktopEditor.EditorApi.IChangeableNode, Sdl.DesktopEditor.EditorApi.IChangeableContainerNode>.NextSibling
  nameWithType.vb: ITreeNode(Of IChangeableNode, IChangeableContainerNode).NextSibling
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of Sdl.DesktopEditor.EditorApi.IChangeableNode, Sdl.DesktopEditor.EditorApi.IChangeableContainerNode).NextSibling
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}.PreviousSibling
  commentId: P:Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}.PreviousSibling
  parent: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}
  definition: Sdl.DesktopEditor.EditorApi.ITreeNode`2.PreviousSibling
  name: PreviousSibling
  nameWithType: ITreeNode<IChangeableNode, IChangeableContainerNode>.PreviousSibling
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<Sdl.DesktopEditor.EditorApi.IChangeableNode, Sdl.DesktopEditor.EditorApi.IChangeableContainerNode>.PreviousSibling
  nameWithType.vb: ITreeNode(Of IChangeableNode, IChangeableContainerNode).PreviousSibling
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of Sdl.DesktopEditor.EditorApi.IChangeableNode, Sdl.DesktopEditor.EditorApi.IChangeableContainerNode).PreviousSibling
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}.Root
  commentId: P:Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}.Root
  parent: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}
  definition: Sdl.DesktopEditor.EditorApi.ITreeNode`2.Root
  name: Root
  nameWithType: ITreeNode<IChangeableNode, IChangeableContainerNode>.Root
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<Sdl.DesktopEditor.EditorApi.IChangeableNode, Sdl.DesktopEditor.EditorApi.IChangeableContainerNode>.Root
  nameWithType.vb: ITreeNode(Of IChangeableNode, IChangeableContainerNode).Root
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of Sdl.DesktopEditor.EditorApi.IChangeableNode, Sdl.DesktopEditor.EditorApi.IChangeableContainerNode).Root
- uid: System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}.IndexOf(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  commentId: M:System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}.IndexOf(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  parent: System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  name: IndexOf(IChangeableNode)
  nameWithType: IList<IChangeableNode>.IndexOf(IChangeableNode)
  fullName: System.Collections.Generic.IList<Sdl.DesktopEditor.EditorApi.IChangeableNode>.IndexOf(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  nameWithType.vb: IList(Of IChangeableNode).IndexOf(IChangeableNode)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).IndexOf(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<IChangeableNode>.IndexOf
    fullName: System.Collections.Generic.IList<Sdl.DesktopEditor.EditorApi.IChangeableNode>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of IChangeableNode).IndexOf
    fullName: System.Collections.Generic.IList(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Insert(System.Int32,Sdl.DesktopEditor.EditorApi.IChangeableNode)
  commentId: M:System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Insert(System.Int32,Sdl.DesktopEditor.EditorApi.IChangeableNode)
  parent: System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  name: Insert(Int32, IChangeableNode)
  nameWithType: IList<IChangeableNode>.Insert(Int32, IChangeableNode)
  fullName: System.Collections.Generic.IList<Sdl.DesktopEditor.EditorApi.IChangeableNode>.Insert(System.Int32, Sdl.DesktopEditor.EditorApi.IChangeableNode)
  nameWithType.vb: IList(Of IChangeableNode).Insert(Int32, IChangeableNode)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).Insert(System.Int32, Sdl.DesktopEditor.EditorApi.IChangeableNode)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<IChangeableNode>.Insert
    fullName: System.Collections.Generic.IList<Sdl.DesktopEditor.EditorApi.IChangeableNode>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of IChangeableNode).Insert
    fullName: System.Collections.Generic.IList(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: IList<IChangeableNode>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<Sdl.DesktopEditor.EditorApi.IChangeableNode>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of IChangeableNode).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<IChangeableNode>.RemoveAt
    fullName: System.Collections.Generic.IList<Sdl.DesktopEditor.EditorApi.IChangeableNode>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of IChangeableNode).RemoveAt
    fullName: System.Collections.Generic.IList(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Item(System.Int32)
  parent: System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IList<IChangeableNode>.Item[Int32]
  fullName: System.Collections.Generic.IList<Sdl.DesktopEditor.EditorApi.IChangeableNode>.Item[System.Int32]
  nameWithType.vb: IList(Of IChangeableNode).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<IChangeableNode>.Item
    fullName: System.Collections.Generic.IList<Sdl.DesktopEditor.EditorApi.IChangeableNode>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of IChangeableNode).Item
    fullName: System.Collections.Generic.IList(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Add(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  commentId: M:System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Add(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  parent: System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(IChangeableNode)
  nameWithType: ICollection<IChangeableNode>.Add(IChangeableNode)
  fullName: System.Collections.Generic.ICollection<Sdl.DesktopEditor.EditorApi.IChangeableNode>.Add(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  nameWithType.vb: ICollection(Of IChangeableNode).Add(IChangeableNode)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).Add(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<IChangeableNode>.Add
    fullName: System.Collections.Generic.ICollection<Sdl.DesktopEditor.EditorApi.IChangeableNode>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of IChangeableNode).Add
    fullName: System.Collections.Generic.ICollection(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Clear
  commentId: M:System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Clear
  parent: System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<IChangeableNode>.Clear()
  fullName: System.Collections.Generic.ICollection<Sdl.DesktopEditor.EditorApi.IChangeableNode>.Clear()
  nameWithType.vb: ICollection(Of IChangeableNode).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<IChangeableNode>.Clear
    fullName: System.Collections.Generic.ICollection<Sdl.DesktopEditor.EditorApi.IChangeableNode>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of IChangeableNode).Clear
    fullName: System.Collections.Generic.ICollection(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Contains(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  commentId: M:System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Contains(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  parent: System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(IChangeableNode)
  nameWithType: ICollection<IChangeableNode>.Contains(IChangeableNode)
  fullName: System.Collections.Generic.ICollection<Sdl.DesktopEditor.EditorApi.IChangeableNode>.Contains(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  nameWithType.vb: ICollection(Of IChangeableNode).Contains(IChangeableNode)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).Contains(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<IChangeableNode>.Contains
    fullName: System.Collections.Generic.ICollection<Sdl.DesktopEditor.EditorApi.IChangeableNode>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of IChangeableNode).Contains
    fullName: System.Collections.Generic.ICollection(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.CopyTo(Sdl.DesktopEditor.EditorApi.IChangeableNode[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.CopyTo(Sdl.DesktopEditor.EditorApi.IChangeableNode[],System.Int32)
  parent: System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(IChangeableNode[], Int32)
  nameWithType: ICollection<IChangeableNode>.CopyTo(IChangeableNode[], Int32)
  fullName: System.Collections.Generic.ICollection<Sdl.DesktopEditor.EditorApi.IChangeableNode>.CopyTo(Sdl.DesktopEditor.EditorApi.IChangeableNode[], System.Int32)
  nameWithType.vb: ICollection(Of IChangeableNode).CopyTo(IChangeableNode(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).CopyTo(Sdl.DesktopEditor.EditorApi.IChangeableNode(), System.Int32)
  name.vb: CopyTo(IChangeableNode(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<IChangeableNode>.CopyTo
    fullName: System.Collections.Generic.ICollection<Sdl.DesktopEditor.EditorApi.IChangeableNode>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of IChangeableNode).CopyTo
    fullName: System.Collections.Generic.ICollection(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Remove(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  commentId: M:System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Remove(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  parent: System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(IChangeableNode)
  nameWithType: ICollection<IChangeableNode>.Remove(IChangeableNode)
  fullName: System.Collections.Generic.ICollection<Sdl.DesktopEditor.EditorApi.IChangeableNode>.Remove(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  nameWithType.vb: ICollection(Of IChangeableNode).Remove(IChangeableNode)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).Remove(Sdl.DesktopEditor.EditorApi.IChangeableNode)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<IChangeableNode>.Remove
    fullName: System.Collections.Generic.ICollection<Sdl.DesktopEditor.EditorApi.IChangeableNode>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of IChangeableNode).Remove
    fullName: System.Collections.Generic.ICollection(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Count
  commentId: P:System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.Count
  parent: System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<IChangeableNode>.Count
  fullName: System.Collections.Generic.ICollection<Sdl.DesktopEditor.EditorApi.IChangeableNode>.Count
  nameWithType.vb: ICollection(Of IChangeableNode).Count
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).Count
- uid: System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}.IsReadOnly
  parent: System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<IChangeableNode>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<Sdl.DesktopEditor.EditorApi.IChangeableNode>.IsReadOnly
  nameWithType.vb: ICollection(Of IChangeableNode).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).IsReadOnly
- uid: System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IChangeableNode}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IChangeableNode}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IChangeableNode>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Sdl.DesktopEditor.EditorApi.IChangeableNode>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IChangeableNode).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<IChangeableNode>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Sdl.DesktopEditor.EditorApi.IChangeableNode>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of IChangeableNode).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Sdl.DesktopEditor.EditorApi.IChangeableNode).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode
  commentId: T:Sdl.DesktopEditor.EditorApi.IChangeableContainerNode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IChangeableContainerNode
  nameWithType: IChangeableContainerNode
  fullName: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode
- uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
  commentId: T:Sdl.DesktopEditor.EditorApi.IChangeableNode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IChangeableNode
  nameWithType: IChangeableNode
  fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2.Parent
  commentId: P:Sdl.DesktopEditor.EditorApi.ITreeNode`2.Parent
  isExternal: true
  name: Parent
  nameWithType: ITreeNode<NodeType, ContainerType>.Parent
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<NodeType, ContainerType>.Parent
  nameWithType.vb: ITreeNode(Of NodeType, ContainerType).Parent
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of NodeType, ContainerType).Parent
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}
  commentId: T:Sdl.DesktopEditor.EditorApi.ITreeNode{Sdl.DesktopEditor.EditorApi.IChangeableNode,Sdl.DesktopEditor.EditorApi.IChangeableContainerNode}
  parent: Sdl.DesktopEditor.EditorApi
  definition: Sdl.DesktopEditor.EditorApi.ITreeNode`2
  name: ITreeNode<IChangeableNode, IChangeableContainerNode>
  nameWithType: ITreeNode<IChangeableNode, IChangeableContainerNode>
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<Sdl.DesktopEditor.EditorApi.IChangeableNode, Sdl.DesktopEditor.EditorApi.IChangeableContainerNode>
  nameWithType.vb: ITreeNode(Of IChangeableNode, IChangeableContainerNode)
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of Sdl.DesktopEditor.EditorApi.IChangeableNode, Sdl.DesktopEditor.EditorApi.IChangeableContainerNode)
  name.vb: ITreeNode(Of IChangeableNode, IChangeableContainerNode)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2
    name: ITreeNode
    nameWithType: ITreeNode
    fullName: Sdl.DesktopEditor.EditorApi.ITreeNode
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode
    name: IChangeableContainerNode
    nameWithType: IChangeableContainerNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2
    name: ITreeNode
    nameWithType: ITreeNode
    fullName: Sdl.DesktopEditor.EditorApi.ITreeNode
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode
    name: IChangeableContainerNode
    nameWithType: IChangeableContainerNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableContainerNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2.NextSibling
  commentId: P:Sdl.DesktopEditor.EditorApi.ITreeNode`2.NextSibling
  isExternal: true
  name: NextSibling
  nameWithType: ITreeNode<NodeType, ContainerType>.NextSibling
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<NodeType, ContainerType>.NextSibling
  nameWithType.vb: ITreeNode(Of NodeType, ContainerType).NextSibling
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of NodeType, ContainerType).NextSibling
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2.PreviousSibling
  commentId: P:Sdl.DesktopEditor.EditorApi.ITreeNode`2.PreviousSibling
  isExternal: true
  name: PreviousSibling
  nameWithType: ITreeNode<NodeType, ContainerType>.PreviousSibling
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<NodeType, ContainerType>.PreviousSibling
  nameWithType.vb: ITreeNode(Of NodeType, ContainerType).PreviousSibling
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of NodeType, ContainerType).PreviousSibling
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2.Root
  commentId: P:Sdl.DesktopEditor.EditorApi.ITreeNode`2.Root
  isExternal: true
  name: Root
  nameWithType: ITreeNode<NodeType, ContainerType>.Root
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<NodeType, ContainerType>.Root
  nameWithType.vb: ITreeNode(Of NodeType, ContainerType).Root
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of NodeType, ContainerType).Root
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<T>.IndexOf
    fullName: System.Collections.Generic.IList<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of T).IndexOf
    fullName: System.Collections.Generic.IList(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  commentId: T:System.Collections.Generic.IList{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IChangeableNode>
  nameWithType: IList<IChangeableNode>
  fullName: System.Collections.Generic.IList<Sdl.DesktopEditor.EditorApi.IChangeableNode>
  nameWithType.vb: IList(Of IChangeableNode)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.DesktopEditor.EditorApi.IChangeableNode)
  name.vb: IList(Of IChangeableNode)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: IList<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: IList(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<T>.Insert
    fullName: System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of T).Insert
    fullName: System.Collections.Generic.IList(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IList<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<T>.RemoveAt
    fullName: System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of T).RemoveAt
    fullName: System.Collections.Generic.IList(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IList<T>.Item[Int32]
  fullName: System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: IList(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<T>.Item
    fullName: System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of T).Item
    fullName: System.Collections.Generic.IList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  commentId: T:System.Collections.Generic.ICollection{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IChangeableNode>
  nameWithType: ICollection<IChangeableNode>
  fullName: System.Collections.Generic.ICollection<Sdl.DesktopEditor.EditorApi.IChangeableNode>
  nameWithType.vb: ICollection(Of IChangeableNode)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.DesktopEditor.EditorApi.IChangeableNode)
  name.vb: ICollection(Of IChangeableNode)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.DesktopEditor.EditorApi.IChangeableNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IChangeableNode>
  nameWithType: IEnumerable<IChangeableNode>
  fullName: System.Collections.Generic.IEnumerable<Sdl.DesktopEditor.EditorApi.IChangeableNode>
  nameWithType.vb: IEnumerable(Of IChangeableNode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.DesktopEditor.EditorApi.IChangeableNode)
  name.vb: IEnumerable(Of IChangeableNode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.IChangeableNode
    name: IChangeableNode
    nameWithType: IChangeableNode
    fullName: Sdl.DesktopEditor.EditorApi.IChangeableNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2
  commentId: T:Sdl.DesktopEditor.EditorApi.ITreeNode`2
  isExternal: true
  name: ITreeNode<NodeType, ContainerType>
  nameWithType: ITreeNode<NodeType, ContainerType>
  fullName: Sdl.DesktopEditor.EditorApi.ITreeNode<NodeType, ContainerType>
  nameWithType.vb: ITreeNode(Of NodeType, ContainerType)
  fullName.vb: Sdl.DesktopEditor.EditorApi.ITreeNode(Of NodeType, ContainerType)
  name.vb: ITreeNode(Of NodeType, ContainerType)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2
    name: ITreeNode
    nameWithType: ITreeNode
    fullName: Sdl.DesktopEditor.EditorApi.ITreeNode
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: NodeType
    nameWithType: NodeType
    fullName: NodeType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ContainerType
    nameWithType: ContainerType
    fullName: ContainerType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ITreeNode`2
    name: ITreeNode
    nameWithType: ITreeNode
    fullName: Sdl.DesktopEditor.EditorApi.ITreeNode
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: NodeType
    nameWithType: NodeType
    fullName: NodeType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ContainerType
    nameWithType: ContainerType
    fullName: ContainerType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.IDocumentFragment.NodeFactory*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IDocumentFragment.NodeFactory
  isExternal: true
  name: NodeFactory
  nameWithType: IDocumentFragment.NodeFactory
  fullName: Sdl.DesktopEditor.EditorApi.IDocumentFragment.NodeFactory
- uid: Sdl.DesktopEditor.EditorApi.INodeFactory
  commentId: T:Sdl.DesktopEditor.EditorApi.INodeFactory
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: INodeFactory
  nameWithType: INodeFactory
  fullName: Sdl.DesktopEditor.EditorApi.INodeFactory
- uid: Sdl.DesktopEditor.EditorApi.IDocumentFragment.DocProperties*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IDocumentFragment.DocProperties
  isExternal: true
  name: DocProperties
  nameWithType: IDocumentFragment.DocProperties
  fullName: Sdl.DesktopEditor.EditorApi.IDocumentFragment.DocProperties
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
  isExternal: true
  name: IDocumentProperties
  nameWithType: IDocumentProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
- uid: Sdl.DesktopEditor.EditorApi.IDocumentFragment.FileProperties*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IDocumentFragment.FileProperties
  isExternal: true
  name: FileProperties
  nameWithType: IDocumentFragment.FileProperties
  fullName: Sdl.DesktopEditor.EditorApi.IDocumentFragment.FileProperties
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
  isExternal: true
  name: IFileProperties
  nameWithType: IFileProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
