### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController
  id: ITermRecognitionResultsController
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults
  children:
  - Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.GetTermRecognitionResults
  - Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.HasTermRecognitionResults
  - Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.ShowTermRecognitionResultsWindow
  - Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.TermRecognitionCompleted
  langs:
  - csharp
  - vb
  name: ITermRecognitionResultsController
  nameWithType: ITermRecognitionResultsController
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController
  type: Interface
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults
  syntax:
    content: public interface ITermRecognitionResultsController
    content.vb: Public Interface ITermRecognitionResultsController
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.ShowTermRecognitionResultsWindow
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.ShowTermRecognitionResultsWindow
  id: ShowTermRecognitionResultsWindow
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController
  langs:
  - csharp
  - vb
  name: ShowTermRecognitionResultsWindow()
  nameWithType: ITermRecognitionResultsController.ShowTermRecognitionResultsWindow()
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.ShowTermRecognitionResultsWindow()
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults
  summary: "\nOpen term recognition results window\n"
  syntax:
    content: void ShowTermRecognitionResultsWindow()
    content.vb: Sub ShowTermRecognitionResultsWindow
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.ShowTermRecognitionResultsWindow*
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.HasTermRecognitionResults
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.HasTermRecognitionResults
  id: HasTermRecognitionResults
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController
  langs:
  - csharp
  - vb
  name: HasTermRecognitionResults()
  nameWithType: ITermRecognitionResultsController.HasTermRecognitionResults()
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.HasTermRecognitionResults()
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults
  summary: "\nGet a boolean value that indicate if there are any results available\n"
  syntax:
    content: bool HasTermRecognitionResults()
    return:
      type: System.Boolean
    content.vb: Function HasTermRecognitionResults As Boolean
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.HasTermRecognitionResults*
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.GetTermRecognitionResults
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.GetTermRecognitionResults
  id: GetTermRecognitionResults
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController
  langs:
  - csharp
  - vb
  name: GetTermRecognitionResults()
  nameWithType: ITermRecognitionResultsController.GetTermRecognitionResults()
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.GetTermRecognitionResults()
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults
  summary: "\nGets the term recognition results list\n"
  syntax:
    content: List<TermRecognitionResult> GetTermRecognitionResults()
    return:
      type: System.Collections.Generic.List{Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.TermRecognitionResult}
    content.vb: Function GetTermRecognitionResults As List(Of TermRecognitionResult)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.GetTermRecognitionResults*
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.TermRecognitionCompleted
  commentId: E:Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.TermRecognitionCompleted
  id: TermRecognitionCompleted
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController
  langs:
  - csharp
  - vb
  name: TermRecognitionCompleted
  nameWithType: ITermRecognitionResultsController.TermRecognitionCompleted
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.TermRecognitionCompleted
  type: Event
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults
  summary: "\nEvent triggered when term recognition is completed\n"
  syntax:
    content: event EventHandler TermRecognitionCompleted
    return:
      type: System.EventHandler
    content.vb: Event TermRecognitionCompleted As EventHandler
references:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults
  commentId: N:Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults
  isExternal: true
  name: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults
  nameWithType: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.ShowTermRecognitionResultsWindow*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.ShowTermRecognitionResultsWindow
  isExternal: true
  name: ShowTermRecognitionResultsWindow
  nameWithType: ITermRecognitionResultsController.ShowTermRecognitionResultsWindow
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.ShowTermRecognitionResultsWindow
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.HasTermRecognitionResults*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.HasTermRecognitionResults
  isExternal: true
  name: HasTermRecognitionResults
  nameWithType: ITermRecognitionResultsController.HasTermRecognitionResults
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.HasTermRecognitionResults
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.GetTermRecognitionResults*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.GetTermRecognitionResults
  isExternal: true
  name: GetTermRecognitionResults
  nameWithType: ITermRecognitionResultsController.GetTermRecognitionResults
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.ITermRecognitionResultsController.GetTermRecognitionResults
- uid: System.Collections.Generic.List{Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.TermRecognitionResult}
  commentId: T:System.Collections.Generic.List{Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.TermRecognitionResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TermRecognitionResult>
  nameWithType: List<TermRecognitionResult>
  fullName: System.Collections.Generic.List<Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.TermRecognitionResult>
  nameWithType.vb: List(Of TermRecognitionResult)
  fullName.vb: System.Collections.Generic.List(Of Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.TermRecognitionResult)
  name.vb: List(Of TermRecognitionResult)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.TermRecognitionResult
    name: TermRecognitionResult
    nameWithType: TermRecognitionResult
    fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.TermRecognitionResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.TermRecognitionResult
    name: TermRecognitionResult
    nameWithType: TermRecognitionResult
    fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Editor.TermRecognitionResults.TermRecognitionResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
