### YamlMime:ManagedReference
items:
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IPluginLoggerFactory
  commentId: T:Sdl.Desktop.IntegrationApi.Interfaces.IPluginLoggerFactory
  id: IPluginLoggerFactory
  parent: Sdl.Desktop.IntegrationApi.Interfaces
  children:
  - Sdl.Desktop.IntegrationApi.Interfaces.IPluginLoggerFactory.GetLogger(System.String)
  langs:
  - csharp
  - vb
  name: IPluginLoggerFactory
  nameWithType: IPluginLoggerFactory
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IPluginLoggerFactory
  type: Interface
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Interfaces
  summary: "\nContract for logging\nThis can be used to write entires into the Studio logs using <xref href=\"Sdl.Desktop.IntegrationApi.Interfaces.IPluginLog\" data-throw-if-not-resolved=\"false\"></xref> \n"
  syntax:
    content: public interface IPluginLoggerFactory
    content.vb: Public Interface IPluginLoggerFactory
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IPluginLoggerFactory.GetLogger(System.String)
  commentId: M:Sdl.Desktop.IntegrationApi.Interfaces.IPluginLoggerFactory.GetLogger(System.String)
  id: GetLogger(System.String)
  parent: Sdl.Desktop.IntegrationApi.Interfaces.IPluginLoggerFactory
  langs:
  - csharp
  - vb
  name: GetLogger(String)
  nameWithType: IPluginLoggerFactory.GetLogger(String)
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IPluginLoggerFactory.GetLogger(System.String)
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Interfaces
  syntax:
    content: IPluginLog GetLogger(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Sdl.Desktop.IntegrationApi.Interfaces.IPluginLog
    content.vb: Function GetLogger(name As String) As IPluginLog
  overload: Sdl.Desktop.IntegrationApi.Interfaces.IPluginLoggerFactory.GetLogger*
references:
- uid: Sdl.Desktop.IntegrationApi.Interfaces
  commentId: N:Sdl.Desktop.IntegrationApi.Interfaces
  isExternal: true
  name: Sdl.Desktop.IntegrationApi.Interfaces
  nameWithType: Sdl.Desktop.IntegrationApi.Interfaces
  fullName: Sdl.Desktop.IntegrationApi.Interfaces
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IPluginLoggerFactory.GetLogger*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Interfaces.IPluginLoggerFactory.GetLogger
  isExternal: true
  name: GetLogger
  nameWithType: IPluginLoggerFactory.GetLogger
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IPluginLoggerFactory.GetLogger
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Desktop.IntegrationApi.Interfaces.IPluginLog
  commentId: T:Sdl.Desktop.IntegrationApi.Interfaces.IPluginLog
  parent: Sdl.Desktop.IntegrationApi.Interfaces
  isExternal: true
  name: IPluginLog
  nameWithType: IPluginLog
  fullName: Sdl.Desktop.IntegrationApi.Interfaces.IPluginLog
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
