### YamlMime:ManagedReference
items:
- uid: Sdl.Versioning.StudioVersionService
  commentId: T:Sdl.Versioning.StudioVersionService
  id: StudioVersionService
  parent: Sdl.Versioning
  children:
  - Sdl.Versioning.StudioVersionService.#ctor
  - Sdl.Versioning.StudioVersionService.GetInstalledStudioVersions
  - Sdl.Versioning.StudioVersionService.GetStudioVersion
  - Sdl.Versioning.StudioVersionService.StudioVersionSuported(System.Version,System.Version,System.Version)
  langs:
  - csharp
  - vb
  name: StudioVersionService
  nameWithType: StudioVersionService
  fullName: Sdl.Versioning.StudioVersionService
  type: Class
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nService used to obtain installation information for the current running Trados Studio instance\n"
  syntax:
    content: 'public class StudioVersionService : IStudioVersionService'
    content.vb: >-
      Public Class StudioVersionService

          Implements IStudioVersionService
  inheritance:
  - System.Object
  implements:
  - Sdl.Versioning.IStudioVersionService
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Versioning.StudioVersionService.#ctor
  commentId: M:Sdl.Versioning.StudioVersionService.#ctor
  id: '#ctor'
  parent: Sdl.Versioning.StudioVersionService
  langs:
  - csharp
  - vb
  name: StudioVersionService()
  nameWithType: StudioVersionService.StudioVersionService()
  fullName: Sdl.Versioning.StudioVersionService.StudioVersionService()
  type: Constructor
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public StudioVersionService()
    content.vb: Public Sub New
  overload: Sdl.Versioning.StudioVersionService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Versioning.StudioVersionService.GetInstalledStudioVersions
  commentId: M:Sdl.Versioning.StudioVersionService.GetInstalledStudioVersions
  id: GetInstalledStudioVersions
  parent: Sdl.Versioning.StudioVersionService
  langs:
  - csharp
  - vb
  name: GetInstalledStudioVersions()
  nameWithType: StudioVersionService.GetInstalledStudioVersions()
  fullName: Sdl.Versioning.StudioVersionService.GetInstalledStudioVersions()
  type: Method
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nReturns a list of all installed Trados Studio versions\n"
  syntax:
    content: public List<StudioVersion> GetInstalledStudioVersions()
    return:
      type: System.Collections.Generic.List{Sdl.Versioning.StudioVersion}
    content.vb: Public Function GetInstalledStudioVersions As List(Of StudioVersion)
  overload: Sdl.Versioning.StudioVersionService.GetInstalledStudioVersions*
  implements:
  - Sdl.Versioning.IStudioVersionService.GetInstalledStudioVersions
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Versioning.StudioVersionService.StudioVersionSuported(System.Version,System.Version,System.Version)
  commentId: M:Sdl.Versioning.StudioVersionService.StudioVersionSuported(System.Version,System.Version,System.Version)
  id: StudioVersionSuported(System.Version,System.Version,System.Version)
  parent: Sdl.Versioning.StudioVersionService
  langs:
  - csharp
  - vb
  name: StudioVersionSuported(Version, Version, Version)
  nameWithType: StudioVersionService.StudioVersionSuported(Version, Version, Version)
  fullName: Sdl.Versioning.StudioVersionService.StudioVersionSuported(System.Version, System.Version, System.Version)
  type: Method
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nDetermines if given version is supported or not\n"
  syntax:
    content: public bool StudioVersionSuported(Version minVersion, Version maxVersion, Version studioVersion)
    parameters:
    - id: minVersion
      type: System.Version
    - id: maxVersion
      type: System.Version
    - id: studioVersion
      type: System.Version
    return:
      type: System.Boolean
      description: True when the Studio version is within the given bounds
    content.vb: Public Function StudioVersionSuported(minVersion As Version, maxVersion As Version, studioVersion As Version) As Boolean
  overload: Sdl.Versioning.StudioVersionService.StudioVersionSuported*
  implements:
  - Sdl.Versioning.IStudioVersionService.StudioVersionSuported(System.Version,System.Version,System.Version)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Versioning.StudioVersionService.GetStudioVersion
  commentId: M:Sdl.Versioning.StudioVersionService.GetStudioVersion
  id: GetStudioVersion
  parent: Sdl.Versioning.StudioVersionService
  langs:
  - csharp
  - vb
  name: GetStudioVersion()
  nameWithType: StudioVersionService.GetStudioVersion()
  fullName: Sdl.Versioning.StudioVersionService.GetStudioVersion()
  type: Method
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nReturns information for the current Trados Studio installation\n"
  syntax:
    content: public StudioVersion GetStudioVersion()
    return:
      type: Sdl.Versioning.StudioVersion
    content.vb: Public Function GetStudioVersion As StudioVersion
  overload: Sdl.Versioning.StudioVersionService.GetStudioVersion*
  implements:
  - Sdl.Versioning.IStudioVersionService.GetStudioVersion
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.Versioning
  commentId: N:Sdl.Versioning
  isExternal: true
  name: Sdl.Versioning
  nameWithType: Sdl.Versioning
  fullName: Sdl.Versioning
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.Versioning.IStudioVersionService
  commentId: T:Sdl.Versioning.IStudioVersionService
  parent: Sdl.Versioning
  isExternal: true
  name: IStudioVersionService
  nameWithType: IStudioVersionService
  fullName: Sdl.Versioning.IStudioVersionService
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.Versioning.StudioVersionService.#ctor*
  commentId: Overload:Sdl.Versioning.StudioVersionService.#ctor
  isExternal: true
  name: StudioVersionService
  nameWithType: StudioVersionService.StudioVersionService
  fullName: Sdl.Versioning.StudioVersionService.StudioVersionService
- uid: Sdl.Versioning.StudioVersionService.GetInstalledStudioVersions*
  commentId: Overload:Sdl.Versioning.StudioVersionService.GetInstalledStudioVersions
  isExternal: true
  name: GetInstalledStudioVersions
  nameWithType: StudioVersionService.GetInstalledStudioVersions
  fullName: Sdl.Versioning.StudioVersionService.GetInstalledStudioVersions
- uid: Sdl.Versioning.IStudioVersionService.GetInstalledStudioVersions
  commentId: M:Sdl.Versioning.IStudioVersionService.GetInstalledStudioVersions
  parent: Sdl.Versioning.IStudioVersionService
  isExternal: true
  name: GetInstalledStudioVersions()
  nameWithType: IStudioVersionService.GetInstalledStudioVersions()
  fullName: Sdl.Versioning.IStudioVersionService.GetInstalledStudioVersions()
  spec.csharp:
  - uid: Sdl.Versioning.IStudioVersionService.GetInstalledStudioVersions
    name: GetInstalledStudioVersions
    nameWithType: IStudioVersionService.GetInstalledStudioVersions
    fullName: Sdl.Versioning.IStudioVersionService.GetInstalledStudioVersions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Versioning.IStudioVersionService.GetInstalledStudioVersions
    name: GetInstalledStudioVersions
    nameWithType: IStudioVersionService.GetInstalledStudioVersions
    fullName: Sdl.Versioning.IStudioVersionService.GetInstalledStudioVersions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Sdl.Versioning.StudioVersion}
  commentId: T:System.Collections.Generic.List{Sdl.Versioning.StudioVersion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<StudioVersion>
  nameWithType: List<StudioVersion>
  fullName: System.Collections.Generic.List<Sdl.Versioning.StudioVersion>
  nameWithType.vb: List(Of StudioVersion)
  fullName.vb: System.Collections.Generic.List(Of Sdl.Versioning.StudioVersion)
  name.vb: List(Of StudioVersion)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Versioning.StudioVersion
    name: StudioVersion
    nameWithType: StudioVersion
    fullName: Sdl.Versioning.StudioVersion
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Versioning.StudioVersion
    name: StudioVersion
    nameWithType: StudioVersion
    fullName: Sdl.Versioning.StudioVersion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.Versioning.StudioVersionService.StudioVersionSuported*
  commentId: Overload:Sdl.Versioning.StudioVersionService.StudioVersionSuported
  isExternal: true
  name: StudioVersionSuported
  nameWithType: StudioVersionService.StudioVersionSuported
  fullName: Sdl.Versioning.StudioVersionService.StudioVersionSuported
- uid: Sdl.Versioning.IStudioVersionService.StudioVersionSuported(System.Version,System.Version,System.Version)
  commentId: M:Sdl.Versioning.IStudioVersionService.StudioVersionSuported(System.Version,System.Version,System.Version)
  parent: Sdl.Versioning.IStudioVersionService
  isExternal: true
  name: StudioVersionSuported(Version, Version, Version)
  nameWithType: IStudioVersionService.StudioVersionSuported(Version, Version, Version)
  fullName: Sdl.Versioning.IStudioVersionService.StudioVersionSuported(System.Version, System.Version, System.Version)
  spec.csharp:
  - uid: Sdl.Versioning.IStudioVersionService.StudioVersionSuported(System.Version,System.Version,System.Version)
    name: StudioVersionSuported
    nameWithType: IStudioVersionService.StudioVersionSuported
    fullName: Sdl.Versioning.IStudioVersionService.StudioVersionSuported
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Version
    name: Version
    nameWithType: Version
    fullName: System.Version
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Version
    name: Version
    nameWithType: Version
    fullName: System.Version
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Version
    name: Version
    nameWithType: Version
    fullName: System.Version
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Versioning.IStudioVersionService.StudioVersionSuported(System.Version,System.Version,System.Version)
    name: StudioVersionSuported
    nameWithType: IStudioVersionService.StudioVersionSuported
    fullName: Sdl.Versioning.IStudioVersionService.StudioVersionSuported
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Version
    name: Version
    nameWithType: Version
    fullName: System.Version
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Version
    name: Version
    nameWithType: Version
    fullName: System.Version
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Version
    name: Version
    nameWithType: Version
    fullName: System.Version
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Version
  commentId: T:System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.Versioning.StudioVersionService.GetStudioVersion*
  commentId: Overload:Sdl.Versioning.StudioVersionService.GetStudioVersion
  isExternal: true
  name: GetStudioVersion
  nameWithType: StudioVersionService.GetStudioVersion
  fullName: Sdl.Versioning.StudioVersionService.GetStudioVersion
- uid: Sdl.Versioning.IStudioVersionService.GetStudioVersion
  commentId: M:Sdl.Versioning.IStudioVersionService.GetStudioVersion
  parent: Sdl.Versioning.IStudioVersionService
  isExternal: true
  name: GetStudioVersion()
  nameWithType: IStudioVersionService.GetStudioVersion()
  fullName: Sdl.Versioning.IStudioVersionService.GetStudioVersion()
  spec.csharp:
  - uid: Sdl.Versioning.IStudioVersionService.GetStudioVersion
    name: GetStudioVersion
    nameWithType: IStudioVersionService.GetStudioVersion
    fullName: Sdl.Versioning.IStudioVersionService.GetStudioVersion
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Versioning.IStudioVersionService.GetStudioVersion
    name: GetStudioVersion
    nameWithType: IStudioVersionService.GetStudioVersion
    fullName: Sdl.Versioning.IStudioVersionService.GetStudioVersion
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Versioning.StudioVersion
  commentId: T:Sdl.Versioning.StudioVersion
  parent: Sdl.Versioning
  isExternal: true
  name: StudioVersion
  nameWithType: StudioVersion
  fullName: Sdl.Versioning.StudioVersion
