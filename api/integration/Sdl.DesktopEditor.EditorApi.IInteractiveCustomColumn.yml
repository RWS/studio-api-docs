### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn
  commentId: T:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn
  id: IInteractiveCustomColumn
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.ContentChanged
  - Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.EventFlags
  - Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseDoubleClick(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  - Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseDown(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  - Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseEntering(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle)
  - Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseLeaving(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle)
  - Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseMove(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  - Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseRightDown(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  - Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseRightUp(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  - Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseUp(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  langs:
  - csharp
  - vb
  name: IInteractiveCustomColumn
  nameWithType: IInteractiveCustomColumn
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn
  type: Interface
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nInterface implemented by custom columns in the edit control \nthat support user interaction.\n"
  syntax:
    content: 'public interface IInteractiveCustomColumn : ICustomColumn'
    content.vb: >-
      Public Interface IInteractiveCustomColumn

          Inherits ICustomColumn
  inheritedMembers:
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.GetOptimalWidth(System.Drawing.Graphics)
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.CalculateCellContentHeight(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo)
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.BeginDraw
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.DrawCell(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.SetRowSizeAccessor(Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor)
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.PrepareRegisterRows
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.RegisterRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.EditControl
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.Width
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.IsComplex
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseDown(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  commentId: M:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseDown(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  id: OnCellMouseDown(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  parent: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn
  langs:
  - csharp
  - vb
  name: OnCellMouseDown(IRowInfo, Rectangle, MouseEventArgs)
  nameWithType: IInteractiveCustomColumn.OnCellMouseDown(IRowInfo, Rectangle, MouseEventArgs)
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseDown(Sdl.DesktopEditor.EditorApi.IRowInfo, System.Drawing.Rectangle, System.Windows.Forms.MouseEventArgs)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nCalled when the user presses the left mouse button inside the column.\n"
  syntax:
    content: void OnCellMouseDown(IRowInfo row, Rectangle cellBounds, MouseEventArgs e)
    parameters:
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
    - id: cellBounds
      type: System.Drawing.Rectangle
    - id: e
      type: System.Windows.Forms.MouseEventArgs
    content.vb: Sub OnCellMouseDown(row As IRowInfo, cellBounds As Rectangle, e As MouseEventArgs)
  overload: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseDown*
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseDoubleClick(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  commentId: M:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseDoubleClick(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  id: OnCellMouseDoubleClick(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  parent: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn
  langs:
  - csharp
  - vb
  name: OnCellMouseDoubleClick(IRowInfo, Rectangle, MouseEventArgs)
  nameWithType: IInteractiveCustomColumn.OnCellMouseDoubleClick(IRowInfo, Rectangle, MouseEventArgs)
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseDoubleClick(Sdl.DesktopEditor.EditorApi.IRowInfo, System.Drawing.Rectangle, System.Windows.Forms.MouseEventArgs)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nCalled when the user double-clicks inside the column.\n"
  syntax:
    content: void OnCellMouseDoubleClick(IRowInfo row, Rectangle cellBounds, MouseEventArgs e)
    parameters:
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
    - id: cellBounds
      type: System.Drawing.Rectangle
    - id: e
      type: System.Windows.Forms.MouseEventArgs
    content.vb: Sub OnCellMouseDoubleClick(row As IRowInfo, cellBounds As Rectangle, e As MouseEventArgs)
  overload: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseDoubleClick*
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseUp(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  commentId: M:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseUp(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  id: OnCellMouseUp(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  parent: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn
  langs:
  - csharp
  - vb
  name: OnCellMouseUp(IRowInfo, Rectangle, MouseEventArgs)
  nameWithType: IInteractiveCustomColumn.OnCellMouseUp(IRowInfo, Rectangle, MouseEventArgs)
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseUp(Sdl.DesktopEditor.EditorApi.IRowInfo, System.Drawing.Rectangle, System.Windows.Forms.MouseEventArgs)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nCalled when the user releases the left mouse button inside the column.\n"
  syntax:
    content: void OnCellMouseUp(IRowInfo row, Rectangle cellBounds, MouseEventArgs e)
    parameters:
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
    - id: cellBounds
      type: System.Drawing.Rectangle
    - id: e
      type: System.Windows.Forms.MouseEventArgs
    content.vb: Sub OnCellMouseUp(row As IRowInfo, cellBounds As Rectangle, e As MouseEventArgs)
  overload: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseUp*
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseMove(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  commentId: M:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseMove(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  id: OnCellMouseMove(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  parent: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn
  langs:
  - csharp
  - vb
  name: OnCellMouseMove(IRowInfo, Rectangle, MouseEventArgs)
  nameWithType: IInteractiveCustomColumn.OnCellMouseMove(IRowInfo, Rectangle, MouseEventArgs)
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseMove(Sdl.DesktopEditor.EditorApi.IRowInfo, System.Drawing.Rectangle, System.Windows.Forms.MouseEventArgs)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nCalled when the mouse cursor is moved inside the column.\n"
  syntax:
    content: void OnCellMouseMove(IRowInfo row, Rectangle cellBounds, MouseEventArgs e)
    parameters:
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
    - id: cellBounds
      type: System.Drawing.Rectangle
    - id: e
      type: System.Windows.Forms.MouseEventArgs
    content.vb: Sub OnCellMouseMove(row As IRowInfo, cellBounds As Rectangle, e As MouseEventArgs)
  overload: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseMove*
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseRightDown(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  commentId: M:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseRightDown(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  id: OnCellMouseRightDown(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  parent: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn
  langs:
  - csharp
  - vb
  name: OnCellMouseRightDown(IRowInfo, Rectangle, MouseEventArgs)
  nameWithType: IInteractiveCustomColumn.OnCellMouseRightDown(IRowInfo, Rectangle, MouseEventArgs)
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseRightDown(Sdl.DesktopEditor.EditorApi.IRowInfo, System.Drawing.Rectangle, System.Windows.Forms.MouseEventArgs)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nCalled when the right mouse button is pressed inside the column.\n"
  syntax:
    content: void OnCellMouseRightDown(IRowInfo row, Rectangle cellBounds, MouseEventArgs e)
    parameters:
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
    - id: cellBounds
      type: System.Drawing.Rectangle
    - id: e
      type: System.Windows.Forms.MouseEventArgs
    content.vb: Sub OnCellMouseRightDown(row As IRowInfo, cellBounds As Rectangle, e As MouseEventArgs)
  overload: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseRightDown*
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseRightUp(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  commentId: M:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseRightUp(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  id: OnCellMouseRightUp(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Windows.Forms.MouseEventArgs)
  parent: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn
  langs:
  - csharp
  - vb
  name: OnCellMouseRightUp(IRowInfo, Rectangle, MouseEventArgs)
  nameWithType: IInteractiveCustomColumn.OnCellMouseRightUp(IRowInfo, Rectangle, MouseEventArgs)
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseRightUp(Sdl.DesktopEditor.EditorApi.IRowInfo, System.Drawing.Rectangle, System.Windows.Forms.MouseEventArgs)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nCalled when the right mouse button is released inside the column.\n"
  syntax:
    content: void OnCellMouseRightUp(IRowInfo row, Rectangle cellBounds, MouseEventArgs e)
    parameters:
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
    - id: cellBounds
      type: System.Drawing.Rectangle
    - id: e
      type: System.Windows.Forms.MouseEventArgs
    content.vb: Sub OnCellMouseRightUp(row As IRowInfo, cellBounds As Rectangle, e As MouseEventArgs)
  overload: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseRightUp*
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseEntering(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle)
  commentId: M:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseEntering(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle)
  id: OnCellMouseEntering(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle)
  parent: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn
  langs:
  - csharp
  - vb
  name: OnCellMouseEntering(IRowInfo, Rectangle, IRowInfo, Rectangle)
  nameWithType: IInteractiveCustomColumn.OnCellMouseEntering(IRowInfo, Rectangle, IRowInfo, Rectangle)
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseEntering(Sdl.DesktopEditor.EditorApi.IRowInfo, System.Drawing.Rectangle, Sdl.DesktopEditor.EditorApi.IRowInfo, System.Drawing.Rectangle)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nCalled when the mouse cursor is moved into a cell in the column.\n"
  syntax:
    content: void OnCellMouseEntering(IRowInfo row, Rectangle cellBounds, IRowInfo leavingRow, Rectangle leavingCellBounds)
    parameters:
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
      description: the row of the cell the mouse is entering
    - id: cellBounds
      type: System.Drawing.Rectangle
      description: window coordinates of the cell
    - id: leavingRow
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
      description: the row of the cell the mouse was before entering this, or <code>null</code> if none.
    - id: leavingCellBounds
      type: System.Drawing.Rectangle
      description: the window coordinates of the cell the mouse was in before entering this, if any
    content.vb: Sub OnCellMouseEntering(row As IRowInfo, cellBounds As Rectangle, leavingRow As IRowInfo, leavingCellBounds As Rectangle)
  overload: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseEntering*
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseLeaving(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle)
  commentId: M:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseLeaving(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle)
  id: OnCellMouseLeaving(Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle)
  parent: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn
  langs:
  - csharp
  - vb
  name: OnCellMouseLeaving(IRowInfo, Rectangle, IRowInfo, Rectangle)
  nameWithType: IInteractiveCustomColumn.OnCellMouseLeaving(IRowInfo, Rectangle, IRowInfo, Rectangle)
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseLeaving(Sdl.DesktopEditor.EditorApi.IRowInfo, System.Drawing.Rectangle, Sdl.DesktopEditor.EditorApi.IRowInfo, System.Drawing.Rectangle)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nCalled when the mouse cursor is moved out of a cell in the column.\n"
  syntax:
    content: void OnCellMouseLeaving(IRowInfo row, Rectangle cellBounds, IRowInfo enteringRow, Rectangle enteringCellBounds)
    parameters:
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
      description: the row of the cell the mouse is leaving
    - id: cellBounds
      type: System.Drawing.Rectangle
      description: window coordinates of the cell
    - id: enteringRow
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
      description: the row of the cell the mouse will be entering, or <code>null</code> if none.
    - id: enteringCellBounds
      type: System.Drawing.Rectangle
      description: the window coordinates of the cell the mouse will be entering, if any
    content.vb: Sub OnCellMouseLeaving(row As IRowInfo, cellBounds As Rectangle, enteringRow As IRowInfo, enteringCellBounds As Rectangle)
  overload: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseLeaving*
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.EventFlags
  commentId: P:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.EventFlags
  id: EventFlags
  parent: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn
  langs:
  - csharp
  - vb
  name: EventFlags
  nameWithType: IInteractiveCustomColumn.EventFlags
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.EventFlags
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe editor queries this property to determine which user interaction events\nthis column is interested in. Only these types of events will generate calls\non the OnCell... methods in this interface.\n"
  syntax:
    content: InteractiveEventFlags EventFlags { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.InteractiveEventFlags
    content.vb: ReadOnly Property EventFlags As InteractiveEventFlags
  overload: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.EventFlags*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.ContentChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.ContentChanged
  id: ContentChanged
  parent: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn
  langs:
  - csharp
  - vb
  name: ContentChanged
  nameWithType: IInteractiveCustomColumn.ContentChanged
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.ContentChanged
  type: Event
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nFired by the custom column to indicate to the editor that content of one or more cells in the \ncolumn has changed (and will need to be re-drawn).\n"
  remarks: "\n<p>\nThis is only needed for content changes that do not originate directly from\nedit operations in the edit control. An example of when to use this event\ncould be interactive highlighting of a cell when the user moves the mouse over it.\n</p>\n"
  syntax:
    content: event EventHandler<CustomColumnContentChangedEventArgs> ContentChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.CustomColumnContentChangedEventArgs}
    content.vb: Event ContentChanged As EventHandler(Of CustomColumnContentChangedEventArgs)
references:
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.GetOptimalWidth(System.Drawing.Graphics)
  commentId: M:Sdl.DesktopEditor.EditorApi.ICustomColumn.GetOptimalWidth(System.Drawing.Graphics)
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: GetOptimalWidth(Graphics)
  nameWithType: ICustomColumn.GetOptimalWidth(Graphics)
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.GetOptimalWidth(System.Drawing.Graphics)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.GetOptimalWidth(System.Drawing.Graphics)
    name: GetOptimalWidth
    nameWithType: ICustomColumn.GetOptimalWidth
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.GetOptimalWidth
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Drawing.Graphics
    name: Graphics
    nameWithType: Graphics
    fullName: System.Drawing.Graphics
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.GetOptimalWidth(System.Drawing.Graphics)
    name: GetOptimalWidth
    nameWithType: ICustomColumn.GetOptimalWidth
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.GetOptimalWidth
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Drawing.Graphics
    name: Graphics
    nameWithType: Graphics
    fullName: System.Drawing.Graphics
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.CalculateCellContentHeight(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.DesktopEditor.EditorApi.ICustomColumn.CalculateCellContentHeight(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: CalculateCellContentHeight(Graphics, IRowInfo)
  nameWithType: ICustomColumn.CalculateCellContentHeight(Graphics, IRowInfo)
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.CalculateCellContentHeight(System.Drawing.Graphics, Sdl.DesktopEditor.EditorApi.IRowInfo)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.CalculateCellContentHeight(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo)
    name: CalculateCellContentHeight
    nameWithType: ICustomColumn.CalculateCellContentHeight
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.CalculateCellContentHeight
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Drawing.Graphics
    name: Graphics
    nameWithType: Graphics
    fullName: System.Drawing.Graphics
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    nameWithType: IRowInfo
    fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.CalculateCellContentHeight(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo)
    name: CalculateCellContentHeight
    nameWithType: ICustomColumn.CalculateCellContentHeight
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.CalculateCellContentHeight
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Drawing.Graphics
    name: Graphics
    nameWithType: Graphics
    fullName: System.Drawing.Graphics
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    nameWithType: IRowInfo
    fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.BeginDraw
  commentId: M:Sdl.DesktopEditor.EditorApi.ICustomColumn.BeginDraw
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: BeginDraw()
  nameWithType: ICustomColumn.BeginDraw()
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.BeginDraw()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.BeginDraw
    name: BeginDraw
    nameWithType: ICustomColumn.BeginDraw
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.BeginDraw
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.BeginDraw
    name: BeginDraw
    nameWithType: ICustomColumn.BeginDraw
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.BeginDraw
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.DrawCell(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
  commentId: M:Sdl.DesktopEditor.EditorApi.ICustomColumn.DrawCell(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: DrawCell(Graphics, IRowInfo, Rectangle, Pen, Pen, Pen, Pen)
  nameWithType: ICustomColumn.DrawCell(Graphics, IRowInfo, Rectangle, Pen, Pen, Pen, Pen)
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.DrawCell(System.Drawing.Graphics, Sdl.DesktopEditor.EditorApi.IRowInfo, System.Drawing.Rectangle, System.Drawing.Pen, System.Drawing.Pen, System.Drawing.Pen, System.Drawing.Pen)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.DrawCell(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
    name: DrawCell
    nameWithType: ICustomColumn.DrawCell
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.DrawCell
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Drawing.Graphics
    name: Graphics
    nameWithType: Graphics
    fullName: System.Drawing.Graphics
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    nameWithType: IRowInfo
    fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Rectangle
    name: Rectangle
    nameWithType: Rectangle
    fullName: System.Drawing.Rectangle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Pen
    name: Pen
    nameWithType: Pen
    fullName: System.Drawing.Pen
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Pen
    name: Pen
    nameWithType: Pen
    fullName: System.Drawing.Pen
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Pen
    name: Pen
    nameWithType: Pen
    fullName: System.Drawing.Pen
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Pen
    name: Pen
    nameWithType: Pen
    fullName: System.Drawing.Pen
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.DrawCell(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
    name: DrawCell
    nameWithType: ICustomColumn.DrawCell
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.DrawCell
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Drawing.Graphics
    name: Graphics
    nameWithType: Graphics
    fullName: System.Drawing.Graphics
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    nameWithType: IRowInfo
    fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Rectangle
    name: Rectangle
    nameWithType: Rectangle
    fullName: System.Drawing.Rectangle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Pen
    name: Pen
    nameWithType: Pen
    fullName: System.Drawing.Pen
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Pen
    name: Pen
    nameWithType: Pen
    fullName: System.Drawing.Pen
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Pen
    name: Pen
    nameWithType: Pen
    fullName: System.Drawing.Pen
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Pen
    name: Pen
    nameWithType: Pen
    fullName: System.Drawing.Pen
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.SetRowSizeAccessor(Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor)
  commentId: M:Sdl.DesktopEditor.EditorApi.ICustomColumn.SetRowSizeAccessor(Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor)
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: SetRowSizeAccessor(RowSizeAccessor)
  nameWithType: ICustomColumn.SetRowSizeAccessor(RowSizeAccessor)
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.SetRowSizeAccessor(Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.SetRowSizeAccessor(Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor)
    name: SetRowSizeAccessor
    nameWithType: ICustomColumn.SetRowSizeAccessor
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.SetRowSizeAccessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor
    name: RowSizeAccessor
    nameWithType: RowSizeAccessor
    fullName: Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.SetRowSizeAccessor(Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor)
    name: SetRowSizeAccessor
    nameWithType: ICustomColumn.SetRowSizeAccessor
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.SetRowSizeAccessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor
    name: RowSizeAccessor
    nameWithType: RowSizeAccessor
    fullName: Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.PrepareRegisterRows
  commentId: M:Sdl.DesktopEditor.EditorApi.ICustomColumn.PrepareRegisterRows
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: PrepareRegisterRows()
  nameWithType: ICustomColumn.PrepareRegisterRows()
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.PrepareRegisterRows()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.PrepareRegisterRows
    name: PrepareRegisterRows
    nameWithType: ICustomColumn.PrepareRegisterRows
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.PrepareRegisterRows
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.PrepareRegisterRows
    name: PrepareRegisterRows
    nameWithType: ICustomColumn.PrepareRegisterRows
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.PrepareRegisterRows
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.RegisterRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.DesktopEditor.EditorApi.ICustomColumn.RegisterRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: RegisterRow(IRowInfo)
  nameWithType: ICustomColumn.RegisterRow(IRowInfo)
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.RegisterRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.RegisterRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
    name: RegisterRow
    nameWithType: ICustomColumn.RegisterRow
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.RegisterRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    nameWithType: IRowInfo
    fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.RegisterRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
    name: RegisterRow
    nameWithType: ICustomColumn.RegisterRow
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.RegisterRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    nameWithType: IRowInfo
    fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.EditControl
  commentId: P:Sdl.DesktopEditor.EditorApi.ICustomColumn.EditControl
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: EditControl
  nameWithType: ICustomColumn.EditControl
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.EditControl
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.Width
  commentId: P:Sdl.DesktopEditor.EditorApi.ICustomColumn.Width
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: Width
  nameWithType: ICustomColumn.Width
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.Width
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.IsComplex
  commentId: P:Sdl.DesktopEditor.EditorApi.ICustomColumn.IsComplex
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: IsComplex
  nameWithType: ICustomColumn.IsComplex
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.IsComplex
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn
  commentId: T:Sdl.DesktopEditor.EditorApi.ICustomColumn
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: ICustomColumn
  nameWithType: ICustomColumn
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseDown*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseDown
  isExternal: true
  name: OnCellMouseDown
  nameWithType: IInteractiveCustomColumn.OnCellMouseDown
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseDown
- uid: Sdl.DesktopEditor.EditorApi.IRowInfo
  commentId: T:Sdl.DesktopEditor.EditorApi.IRowInfo
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IRowInfo
  nameWithType: IRowInfo
  fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
- uid: System.Drawing.Rectangle
  isExternal: true
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.MouseEventArgs
  isExternal: true
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Forms.MouseEventArgs
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseDoubleClick*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseDoubleClick
  isExternal: true
  name: OnCellMouseDoubleClick
  nameWithType: IInteractiveCustomColumn.OnCellMouseDoubleClick
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseDoubleClick
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseUp*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseUp
  isExternal: true
  name: OnCellMouseUp
  nameWithType: IInteractiveCustomColumn.OnCellMouseUp
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseUp
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseMove*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseMove
  isExternal: true
  name: OnCellMouseMove
  nameWithType: IInteractiveCustomColumn.OnCellMouseMove
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseMove
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseRightDown*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseRightDown
  isExternal: true
  name: OnCellMouseRightDown
  nameWithType: IInteractiveCustomColumn.OnCellMouseRightDown
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseRightDown
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseRightUp*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseRightUp
  isExternal: true
  name: OnCellMouseRightUp
  nameWithType: IInteractiveCustomColumn.OnCellMouseRightUp
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseRightUp
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseEntering*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseEntering
  isExternal: true
  name: OnCellMouseEntering
  nameWithType: IInteractiveCustomColumn.OnCellMouseEntering
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseEntering
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseLeaving*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseLeaving
  isExternal: true
  name: OnCellMouseLeaving
  nameWithType: IInteractiveCustomColumn.OnCellMouseLeaving
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.OnCellMouseLeaving
- uid: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.EventFlags*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.EventFlags
  isExternal: true
  name: EventFlags
  nameWithType: IInteractiveCustomColumn.EventFlags
  fullName: Sdl.DesktopEditor.EditorApi.IInteractiveCustomColumn.EventFlags
- uid: Sdl.DesktopEditor.EditorApi.InteractiveEventFlags
  commentId: T:Sdl.DesktopEditor.EditorApi.InteractiveEventFlags
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: InteractiveEventFlags
  nameWithType: InteractiveEventFlags
  fullName: Sdl.DesktopEditor.EditorApi.InteractiveEventFlags
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.CustomColumnContentChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.CustomColumnContentChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<CustomColumnContentChangedEventArgs>
  nameWithType: EventHandler<CustomColumnContentChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.CustomColumnContentChangedEventArgs>
  nameWithType.vb: EventHandler(Of CustomColumnContentChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.CustomColumnContentChangedEventArgs)
  name.vb: EventHandler(Of CustomColumnContentChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.CustomColumnContentChangedEventArgs
    name: CustomColumnContentChangedEventArgs
    nameWithType: CustomColumnContentChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.CustomColumnContentChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.CustomColumnContentChangedEventArgs
    name: CustomColumnContentChangedEventArgs
    nameWithType: CustomColumnContentChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.CustomColumnContentChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
