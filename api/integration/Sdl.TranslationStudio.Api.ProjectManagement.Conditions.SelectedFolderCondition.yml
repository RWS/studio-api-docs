### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition
  commentId: T:Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition
  id: SelectedFolderCondition
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Conditions
  children:
  - Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.#ctor
  - Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.AllowRootFolder
  - Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.FilesViewService
  - Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.Folder
  - Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.GetValue
  - Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.IsFolderSupported(Sdl.TranslationStudio.Api.ProjectManagement.IProjectFolder)
  - Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.OnServiceContextChanged
  langs:
  - csharp
  - vb
  name: SelectedFolderCondition
  nameWithType: SelectedFolderCondition
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition
  type: Class
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Conditions
  summary: "\nTrue if a folder inside a project is selected. Does not include the root project folder itself.\n"
  syntax:
    content: 'public class SelectedFolderCondition : AbstractServiceContextAwareCondition'
    content.vb: >-
      Public Class SelectedFolderCondition

          Inherits AbstractServiceContextAwareCondition
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedProjectFolderCondition
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.OnServiceContextChanged
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.OnServiceContextChanged
  id: OnServiceContextChanged
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition
  langs:
  - csharp
  - vb
  name: OnServiceContextChanged()
  nameWithType: SelectedFolderCondition.OnServiceContextChanged()
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.OnServiceContextChanged()
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Conditions
  syntax:
    content: protected override void OnServiceContextChanged()
    content.vb: Protected Overrides Sub OnServiceContextChanged
  overload: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.OnServiceContextChanged*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.GetValue
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.GetValue
  id: GetValue
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition
  langs:
  - csharp
  - vb
  name: GetValue()
  nameWithType: SelectedFolderCondition.GetValue()
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.GetValue()
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Conditions
  syntax:
    content: protected override bool GetValue()
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function GetValue As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.GetValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.IsFolderSupported(Sdl.TranslationStudio.Api.ProjectManagement.IProjectFolder)
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.IsFolderSupported(Sdl.TranslationStudio.Api.ProjectManagement.IProjectFolder)
  id: IsFolderSupported(Sdl.TranslationStudio.Api.ProjectManagement.IProjectFolder)
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition
  langs:
  - csharp
  - vb
  name: IsFolderSupported(IProjectFolder)
  nameWithType: SelectedFolderCondition.IsFolderSupported(IProjectFolder)
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.IsFolderSupported(Sdl.TranslationStudio.Api.ProjectManagement.IProjectFolder)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Conditions
  syntax:
    content: protected virtual bool IsFolderSupported(IProjectFolder folder)
    parameters:
    - id: folder
      type: Sdl.TranslationStudio.Api.ProjectManagement.IProjectFolder
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function IsFolderSupported(folder As IProjectFolder) As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.IsFolderSupported*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.#ctor
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.#ctor
  id: '#ctor'
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition
  langs:
  - csharp
  - vb
  name: SelectedFolderCondition()
  nameWithType: SelectedFolderCondition.SelectedFolderCondition()
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.SelectedFolderCondition()
  type: Constructor
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Conditions
  syntax:
    content: public SelectedFolderCondition()
    content.vb: Public Sub New
  overload: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.Folder
  commentId: P:Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.Folder
  id: Folder
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition
  langs:
  - csharp
  - vb
  name: Folder
  nameWithType: SelectedFolderCondition.Folder
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.Folder
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Conditions
  syntax:
    content: public IProjectFolder Folder { get; }
    parameters: []
    return:
      type: Sdl.TranslationStudio.Api.ProjectManagement.IProjectFolder
    content.vb: Public ReadOnly Property Folder As IProjectFolder
  overload: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.Folder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.FilesViewService
  commentId: P:Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.FilesViewService
  id: FilesViewService
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition
  langs:
  - csharp
  - vb
  name: FilesViewService
  nameWithType: SelectedFolderCondition.FilesViewService
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.FilesViewService
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Conditions
  syntax:
    content: public IFilesViewService FilesViewService { get; }
    parameters: []
    return:
      type: Sdl.TranslationStudio.Api.ProjectManagement.IFilesViewService
    content.vb: Public ReadOnly Property FilesViewService As IFilesViewService
  overload: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.FilesViewService*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.AllowRootFolder
  commentId: P:Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.AllowRootFolder
  id: AllowRootFolder
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition
  langs:
  - csharp
  - vb
  name: AllowRootFolder
  nameWithType: SelectedFolderCondition.AllowRootFolder
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.AllowRootFolder
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Conditions
  syntax:
    content: protected bool AllowRootFolder { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Property AllowRootFolder As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.AllowRootFolder*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
references:
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Conditions
  commentId: N:Sdl.TranslationStudio.Api.ProjectManagement.Conditions
  isExternal: true
  name: Sdl.TranslationStudio.Api.ProjectManagement.Conditions
  nameWithType: Sdl.TranslationStudio.Api.ProjectManagement.Conditions
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Conditions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.OnServiceContextChanged*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.OnServiceContextChanged
  isExternal: true
  name: OnServiceContextChanged
  nameWithType: SelectedFolderCondition.OnServiceContextChanged
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.OnServiceContextChanged
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.GetValue*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.GetValue
  isExternal: true
  name: GetValue
  nameWithType: SelectedFolderCondition.GetValue
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.GetValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.IsFolderSupported*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.IsFolderSupported
  isExternal: true
  name: IsFolderSupported
  nameWithType: SelectedFolderCondition.IsFolderSupported
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.IsFolderSupported
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IProjectFolder
  commentId: T:Sdl.TranslationStudio.Api.ProjectManagement.IProjectFolder
  parent: Sdl.TranslationStudio.Api.ProjectManagement
  isExternal: true
  name: IProjectFolder
  nameWithType: IProjectFolder
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IProjectFolder
- uid: Sdl.TranslationStudio.Api.ProjectManagement
  commentId: N:Sdl.TranslationStudio.Api.ProjectManagement
  isExternal: true
  name: Sdl.TranslationStudio.Api.ProjectManagement
  nameWithType: Sdl.TranslationStudio.Api.ProjectManagement
  fullName: Sdl.TranslationStudio.Api.ProjectManagement
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.#ctor*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.#ctor
  isExternal: true
  name: SelectedFolderCondition
  nameWithType: SelectedFolderCondition.SelectedFolderCondition
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.SelectedFolderCondition
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.Folder*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.Folder
  isExternal: true
  name: Folder
  nameWithType: SelectedFolderCondition.Folder
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.Folder
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.FilesViewService*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.FilesViewService
  isExternal: true
  name: FilesViewService
  nameWithType: SelectedFolderCondition.FilesViewService
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.FilesViewService
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IFilesViewService
  commentId: T:Sdl.TranslationStudio.Api.ProjectManagement.IFilesViewService
  parent: Sdl.TranslationStudio.Api.ProjectManagement
  isExternal: true
  name: IFilesViewService
  nameWithType: IFilesViewService
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IFilesViewService
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.AllowRootFolder*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.AllowRootFolder
  isExternal: true
  name: AllowRootFolder
  nameWithType: SelectedFolderCondition.AllowRootFolder
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Conditions.SelectedFolderCondition.AllowRootFolder
