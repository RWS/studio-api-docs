### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter
  id: DisplayFilterAdapter
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
  children:
  - Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.#ctor(Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter,Sdl.TranslationStudio.Api.Editor.ITranslatableDocument)
  - Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.Initialise
  - Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.IsFileBoundaryRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  - Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.SetFoldingFilterProvider(Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider)
  - Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.SetRowVisibility(Sdl.DesktopEditor.EditorApi.IRowInfo)
  langs:
  - csharp
  - vb
  name: DisplayFilterAdapter
  nameWithType: DisplayFilterAdapter
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter
  type: Class
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
  summary: "\nAn adapter class for display filter implementations.\n\nThis implementation calls EvaluateRow frim IDisplayFilter to\ndetermine visibility for rows.\n"
  syntax:
    content: public class DisplayFilterAdapter
    content.vb: Public Class DisplayFilterAdapter
  inheritance:
  - System.Object
  implements:
  - Sdl.TranslationStudio.Api.Editor.IFoldingFilter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.#ctor(Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter,Sdl.TranslationStudio.Api.Editor.ITranslatableDocument)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.#ctor(Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter,Sdl.TranslationStudio.Api.Editor.ITranslatableDocument)
  id: '#ctor(Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter,Sdl.TranslationStudio.Api.Editor.ITranslatableDocument)'
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter
  langs:
  - csharp
  - vb
  name: DisplayFilterAdapter(IDisplayFilter, ITranslatableDocument)
  nameWithType: DisplayFilterAdapter.DisplayFilterAdapter(IDisplayFilter, ITranslatableDocument)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.DisplayFilterAdapter(Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter, Sdl.TranslationStudio.Api.Editor.ITranslatableDocument)
  type: Constructor
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
  summary: "\nThis implementation calls EvaluateRow frim IDisplayFilter to\ndetermine visibility for rows.\n"
  syntax:
    content: public DisplayFilterAdapter(IDisplayFilter displayFilter, ITranslatableDocument document)
    parameters:
    - id: displayFilter
      type: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter
    - id: document
      type: Sdl.TranslationStudio.Api.Editor.ITranslatableDocument
    content.vb: Public Sub New(displayFilter As IDisplayFilter, document As ITranslatableDocument)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.SetRowVisibility(Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.SetRowVisibility(Sdl.DesktopEditor.EditorApi.IRowInfo)
  id: SetRowVisibility(Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter
  langs:
  - csharp
  - vb
  name: SetRowVisibility(IRowInfo)
  nameWithType: DisplayFilterAdapter.SetRowVisibility(IRowInfo)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.SetRowVisibility(Sdl.DesktopEditor.EditorApi.IRowInfo)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
  summary: "\nCompare the supplied row with the criteria and determine if the row should be visible      \n"
  syntax:
    content: public bool SetRowVisibility(IRowInfo row)
    parameters:
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
      description: The row to compare
    return:
      type: System.Boolean
      description: true if the segment should be visible
    content.vb: Public Function SetRowVisibility(row As IRowInfo) As Boolean
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.SetRowVisibility*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.IsFileBoundaryRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.IsFileBoundaryRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  id: IsFileBoundaryRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter
  langs:
  - csharp
  - vb
  name: IsFileBoundaryRow(IRowInfo)
  nameWithType: DisplayFilterAdapter.IsFileBoundaryRow(IRowInfo)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.IsFileBoundaryRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
  summary: "\nHelper to determine if a row acts as a file boundary.\n"
  syntax:
    content: protected static bool IsFileBoundaryRow(IRowInfo rowInfo)
    parameters:
    - id: rowInfo
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
    return:
      type: System.Boolean
    content.vb: Protected Shared Function IsFileBoundaryRow(rowInfo As IRowInfo) As Boolean
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.IsFileBoundaryRow*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.Initialise
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.Initialise
  id: Initialise
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter
  langs:
  - csharp
  - vb
  name: Initialise()
  nameWithType: DisplayFilterAdapter.Initialise()
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.Initialise()
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
  summary: "\nInitialise\n"
  syntax:
    content: public void Initialise()
    content.vb: Public Sub Initialise
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.Initialise*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.SetFoldingFilterProvider(Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.SetFoldingFilterProvider(Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider)
  id: SetFoldingFilterProvider(Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter
  langs:
  - csharp
  - vb
  name: SetFoldingFilterProvider(IFoldingFilterProvider)
  nameWithType: DisplayFilterAdapter.SetFoldingFilterProvider(IFoldingFilterProvider)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.SetFoldingFilterProvider(Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
  summary: "\nFor internal use only. Allows the FoldingFilterProvider to be set on the FoldingFilter\nafter it has been created, so the filter can access the active document etc.\n"
  syntax:
    content: public void SetFoldingFilterProvider(IFoldingFilterProvider provider)
    parameters:
    - id: provider
      type: Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider
    content.vb: Public Sub SetFoldingFilterProvider(provider As IFoldingFilterProvider)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.SetFoldingFilterProvider*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
  commentId: N:Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
  isExternal: true
  name: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
  nameWithType: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.TranslationStudio.Api.Editor.IFoldingFilter
  commentId: '!:Sdl.TranslationStudio.Api.Editor.IFoldingFilter'
  isExternal: true
  name: IFoldingFilter
  nameWithType: IFoldingFilter
  fullName: Sdl.TranslationStudio.Api.Editor.IFoldingFilter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.#ctor*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.#ctor
  isExternal: true
  name: DisplayFilterAdapter
  nameWithType: DisplayFilterAdapter.DisplayFilterAdapter
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.DisplayFilterAdapter
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
  isExternal: true
  name: IDisplayFilter
  nameWithType: IDisplayFilter
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter
- uid: Sdl.TranslationStudio.Api.Editor.ITranslatableDocument
  commentId: '!:Sdl.TranslationStudio.Api.Editor.ITranslatableDocument'
  isExternal: true
  name: ITranslatableDocument
  nameWithType: ITranslatableDocument
  fullName: Sdl.TranslationStudio.Api.Editor.ITranslatableDocument
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.SetRowVisibility*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.SetRowVisibility
  isExternal: true
  name: SetRowVisibility
  nameWithType: DisplayFilterAdapter.SetRowVisibility
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.SetRowVisibility
- uid: Sdl.DesktopEditor.EditorApi.IRowInfo
  commentId: T:Sdl.DesktopEditor.EditorApi.IRowInfo
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IRowInfo
  nameWithType: IRowInfo
  fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.IsFileBoundaryRow*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.IsFileBoundaryRow
  isExternal: true
  name: IsFileBoundaryRow
  nameWithType: DisplayFilterAdapter.IsFileBoundaryRow
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.IsFileBoundaryRow
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.Initialise*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.Initialise
  isExternal: true
  name: Initialise
  nameWithType: DisplayFilterAdapter.Initialise
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.Initialise
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.SetFoldingFilterProvider*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.SetFoldingFilterProvider
  isExternal: true
  name: SetFoldingFilterProvider
  nameWithType: DisplayFilterAdapter.SetFoldingFilterProvider
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.DisplayFilterAdapter.SetFoldingFilterProvider
- uid: Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider
  commentId: '!:Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider'
  isExternal: true
  name: IFoldingFilterProvider
  nameWithType: IFoldingFilterProvider
  fullName: Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider
