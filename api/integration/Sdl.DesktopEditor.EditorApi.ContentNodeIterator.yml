### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator
  commentId: T:Sdl.DesktopEditor.EditorApi.ContentNodeIterator
  id: ContentNodeIterator
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor(Sdl.DesktopEditor.EditorApi.IAbstractContainerNode)
  - Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor(Sdl.DesktopEditor.EditorApi.IAbstractContainerNode,Sdl.DesktopEditor.EditorApi.IAbstractNode)
  - Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor(Sdl.DesktopEditor.EditorApi.IAbstractNode)
  - Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor(Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  - Sdl.DesktopEditor.EditorApi.ContentNodeIterator._Container
  - Sdl.DesktopEditor.EditorApi.ContentNodeIterator._CurrentNode
  - Sdl.DesktopEditor.EditorApi.ContentNodeIterator._EndNode
  - Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Container
  - Sdl.DesktopEditor.EditorApi.ContentNodeIterator.CurrentAbstractNode
  - Sdl.DesktopEditor.EditorApi.ContentNodeIterator.CurrentNode
  - Sdl.DesktopEditor.EditorApi.ContentNodeIterator.EndNode
  - Sdl.DesktopEditor.EditorApi.ContentNodeIterator.GetNextContentNode(Sdl.DesktopEditor.EditorApi.IAbstractNode)
  - Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Next
  - Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Previous
  langs:
  - csharp
  - vb
  name: ContentNodeIterator
  nameWithType: ContentNodeIterator
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator
  type: Class
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nHelper class to iterate over content nodes in the editor API.\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public class ContentNodeIterator
    content.vb: >-
      <CLSCompliant(False)>

      Public Class ContentNodeIterator
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.DesktopEditor.EditorApi.NodeIterator
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator._Container
  commentId: F:Sdl.DesktopEditor.EditorApi.ContentNodeIterator._Container
  id: _Container
  parent: Sdl.DesktopEditor.EditorApi.ContentNodeIterator
  langs:
  - csharp
  - vb
  name: _Container
  nameWithType: ContentNodeIterator._Container
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator._Container
  type: Field
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nContainer the search is limited to\n"
  syntax:
    content: protected IAbstractContainerNode _Container
    return:
      type: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
    content.vb: Protected _Container As IAbstractContainerNode
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator._CurrentNode
  commentId: F:Sdl.DesktopEditor.EditorApi.ContentNodeIterator._CurrentNode
  id: _CurrentNode
  parent: Sdl.DesktopEditor.EditorApi.ContentNodeIterator
  langs:
  - csharp
  - vb
  name: _CurrentNode
  nameWithType: ContentNodeIterator._CurrentNode
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator._CurrentNode
  type: Field
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe node currently selected\n"
  syntax:
    content: protected IAbstractNode _CurrentNode
    return:
      type: Sdl.DesktopEditor.EditorApi.IAbstractNode
    content.vb: Protected _CurrentNode As IAbstractNode
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator._EndNode
  commentId: F:Sdl.DesktopEditor.EditorApi.ContentNodeIterator._EndNode
  id: _EndNode
  parent: Sdl.DesktopEditor.EditorApi.ContentNodeIterator
  langs:
  - csharp
  - vb
  name: _EndNode
  nameWithType: ContentNodeIterator._EndNode
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator._EndNode
  type: Field
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe node that will end iteration\n"
  syntax:
    content: protected IAbstractContentNode _EndNode
    return:
      type: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
    content.vb: Protected _EndNode As IAbstractContentNode
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor(Sdl.DesktopEditor.EditorApi.IAbstractContainerNode)
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor(Sdl.DesktopEditor.EditorApi.IAbstractContainerNode)
  id: '#ctor(Sdl.DesktopEditor.EditorApi.IAbstractContainerNode)'
  parent: Sdl.DesktopEditor.EditorApi.ContentNodeIterator
  langs:
  - csharp
  - vb
  name: ContentNodeIterator(IAbstractContainerNode)
  nameWithType: ContentNodeIterator.ContentNodeIterator(IAbstractContainerNode)
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.ContentNodeIterator(Sdl.DesktopEditor.EditorApi.IAbstractContainerNode)
  type: Constructor
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nLimit iteration to the specified container, start at the first node in the container.\n"
  syntax:
    content: public ContentNodeIterator(IAbstractContainerNode container)
    parameters:
    - id: container
      type: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
      description: The bounding container
    content.vb: Public Sub New(container As IAbstractContainerNode)
  overload: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor(Sdl.DesktopEditor.EditorApi.IAbstractContainerNode,Sdl.DesktopEditor.EditorApi.IAbstractNode)
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor(Sdl.DesktopEditor.EditorApi.IAbstractContainerNode,Sdl.DesktopEditor.EditorApi.IAbstractNode)
  id: '#ctor(Sdl.DesktopEditor.EditorApi.IAbstractContainerNode,Sdl.DesktopEditor.EditorApi.IAbstractNode)'
  parent: Sdl.DesktopEditor.EditorApi.ContentNodeIterator
  langs:
  - csharp
  - vb
  name: ContentNodeIterator(IAbstractContainerNode, IAbstractNode)
  nameWithType: ContentNodeIterator.ContentNodeIterator(IAbstractContainerNode, IAbstractNode)
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.ContentNodeIterator(Sdl.DesktopEditor.EditorApi.IAbstractContainerNode, Sdl.DesktopEditor.EditorApi.IAbstractNode)
  type: Constructor
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nLimit iteration to the specified container, start at a specified node (which \nshould be in the container, but can be a sub-node).\n"
  syntax:
    content: public ContentNodeIterator(IAbstractContainerNode container, IAbstractNode from)
    parameters:
    - id: container
      type: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
      description: The bounding container
    - id: from
      type: Sdl.DesktopEditor.EditorApi.IAbstractNode
      description: "The first node to start from. This is typically a node somewhere \ninside the container."
    content.vb: Public Sub New(container As IAbstractContainerNode, from As IAbstractNode)
  overload: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor(Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor(Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  id: '#ctor(Sdl.DesktopEditor.EditorApi.IAbstractNode,Sdl.DesktopEditor.EditorApi.IAbstractContentNode)'
  parent: Sdl.DesktopEditor.EditorApi.ContentNodeIterator
  langs:
  - csharp
  - vb
  name: ContentNodeIterator(IAbstractNode, IAbstractContentNode)
  nameWithType: ContentNodeIterator.ContentNodeIterator(IAbstractNode, IAbstractContentNode)
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.ContentNodeIterator(Sdl.DesktopEditor.EditorApi.IAbstractNode, Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  type: Constructor
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nLimit iteration to a specific end node. The iteration will stop at the upto node,\nwhich will not be returned as a content node.\n"
  syntax:
    content: public ContentNodeIterator(IAbstractNode from, IAbstractContentNode upto)
    parameters:
    - id: from
      type: Sdl.DesktopEditor.EditorApi.IAbstractNode
      description: The first node to start from. May or may not be a container.
    - id: upto
      type: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
      description: >-
        The node at which to stop. Will not be part of the content iterated over,

        and must be after the from node to be effective.
    content.vb: Public Sub New(from As IAbstractNode, upto As IAbstractContentNode)
  overload: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor(Sdl.DesktopEditor.EditorApi.IAbstractNode)
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor(Sdl.DesktopEditor.EditorApi.IAbstractNode)
  id: '#ctor(Sdl.DesktopEditor.EditorApi.IAbstractNode)'
  parent: Sdl.DesktopEditor.EditorApi.ContentNodeIterator
  langs:
  - csharp
  - vb
  name: ContentNodeIterator(IAbstractNode)
  nameWithType: ContentNodeIterator.ContentNodeIterator(IAbstractNode)
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.ContentNodeIterator(Sdl.DesktopEditor.EditorApi.IAbstractNode)
  type: Constructor
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nStart at the specified node. Iterate until the end of all available content, including parent nodes.\n"
  syntax:
    content: public ContentNodeIterator(IAbstractNode from)
    parameters:
    - id: from
      type: Sdl.DesktopEditor.EditorApi.IAbstractNode
      description: the position to start from, may or may not be a content node
    content.vb: Public Sub New(from As IAbstractNode)
  overload: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Next
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Next
  id: Next
  parent: Sdl.DesktopEditor.EditorApi.ContentNodeIterator
  langs:
  - csharp
  - vb
  name: Next()
  nameWithType: ContentNodeIterator.Next()
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Next()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nAdvance to the next content node.\n"
  syntax:
    content: public bool Next()
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if another content node was found, <code>false</code> if not,
                    or the end of the bounding container was reached.
    content.vb: Public Function Next As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Next*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Previous
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Previous
  id: Previous
  parent: Sdl.DesktopEditor.EditorApi.ContentNodeIterator
  langs:
  - csharp
  - vb
  name: Previous()
  nameWithType: ContentNodeIterator.Previous()
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Previous()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nBacks the iterator to the previous node.\n"
  remarks: "\n<p>\nNote that when backing the iterator does not check for stop conditions.\n</p>\n"
  syntax:
    content: public bool Previous()
    return:
      type: System.Boolean
      description: "<code>true</code> if the operation is successful, i.e. if there is a \n            preceding content node"
    content.vb: Public Function Previous As Boolean
  overload: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Previous*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.GetNextContentNode(Sdl.DesktopEditor.EditorApi.IAbstractNode)
  commentId: M:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.GetNextContentNode(Sdl.DesktopEditor.EditorApi.IAbstractNode)
  id: GetNextContentNode(Sdl.DesktopEditor.EditorApi.IAbstractNode)
  parent: Sdl.DesktopEditor.EditorApi.ContentNodeIterator
  langs:
  - csharp
  - vb
  name: GetNextContentNode(IAbstractNode)
  nameWithType: ContentNodeIterator.GetNextContentNode(IAbstractNode)
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.GetNextContentNode(Sdl.DesktopEditor.EditorApi.IAbstractNode)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nConvenience method that allows easy access to the next content node.\n<p>\nThis is exactly the same as creating a <xref href=\"Sdl.DesktopEditor.EditorApi.ContentNodeIterator\" data-throw-if-not-resolved=\"false\"></xref>,\ncalling <code>Next</code> on it and taking the <code>CurrentNode</code>.\n</p>\n"
  syntax:
    content: public static IAbstractContentNode GetNextContentNode(IAbstractNode from)
    parameters:
    - id: from
      type: Sdl.DesktopEditor.EditorApi.IAbstractNode
      description: The content node to start iterating from.
    return:
      type: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
      description: The next content node in the document, null if no node was found.
    content.vb: Public Shared Function GetNextContentNode(from As IAbstractNode) As IAbstractContentNode
  overload: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.GetNextContentNode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Container
  commentId: P:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Container
  id: Container
  parent: Sdl.DesktopEditor.EditorApi.ContentNodeIterator
  langs:
  - csharp
  - vb
  name: Container
  nameWithType: ContentNodeIterator.Container
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Container
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe container that iteration is limited to, or <code>null</code> if none.\n"
  syntax:
    content: public IAbstractContainerNode Container { get; set; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
    content.vb: Public Property Container As IAbstractContainerNode
  overload: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Container*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.CurrentNode
  commentId: P:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.CurrentNode
  id: CurrentNode
  parent: Sdl.DesktopEditor.EditorApi.ContentNodeIterator
  langs:
  - csharp
  - vb
  name: CurrentNode
  nameWithType: ContentNodeIterator.CurrentNode
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.CurrentNode
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe current content node, or <code>null</code> if none.\n"
  syntax:
    content: public IAbstractContentNode CurrentNode { get; set; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
    content.vb: Public Property CurrentNode As IAbstractContentNode
  overload: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.CurrentNode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.CurrentAbstractNode
  commentId: P:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.CurrentAbstractNode
  id: CurrentAbstractNode
  parent: Sdl.DesktopEditor.EditorApi.ContentNodeIterator
  langs:
  - csharp
  - vb
  name: CurrentAbstractNode
  nameWithType: ContentNodeIterator.CurrentAbstractNode
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.CurrentAbstractNode
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe current node. This base implementation simply returns <xref href=\"Sdl.DesktopEditor.EditorApi.ContentNodeIterator.CurrentNode\" data-throw-if-not-resolved=\"false\"></xref> but derived implementations\nmay need to return a more generic type.\n"
  syntax:
    content: protected virtual IAbstractNode CurrentAbstractNode { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IAbstractNode
    content.vb: Protected Overridable ReadOnly Property CurrentAbstractNode As IAbstractNode
  overload: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.CurrentAbstractNode*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.EndNode
  commentId: P:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.EndNode
  id: EndNode
  parent: Sdl.DesktopEditor.EditorApi.ContentNodeIterator
  langs:
  - csharp
  - vb
  name: EndNode
  nameWithType: ContentNodeIterator.EndNode
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.EndNode
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe iteration stops when this node is reached. It is not\nreturned as a current node.\n"
  syntax:
    content: public IAbstractContentNode EndNode { get; set; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
    content.vb: Public Property EndNode As IAbstractContentNode
  overload: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.EndNode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
  commentId: T:Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IAbstractContainerNode
  nameWithType: IAbstractContainerNode
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractContainerNode
- uid: Sdl.DesktopEditor.EditorApi.IAbstractNode
  commentId: T:Sdl.DesktopEditor.EditorApi.IAbstractNode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IAbstractNode
  nameWithType: IAbstractNode
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractNode
- uid: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
  commentId: T:Sdl.DesktopEditor.EditorApi.IAbstractContentNode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IAbstractContentNode
  nameWithType: IAbstractContentNode
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.#ctor
  isExternal: true
  name: ContentNodeIterator
  nameWithType: ContentNodeIterator.ContentNodeIterator
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.ContentNodeIterator
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Next*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Next
  isExternal: true
  name: Next
  nameWithType: ContentNodeIterator.Next
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Next
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Previous*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Previous
  isExternal: true
  name: Previous
  nameWithType: ContentNodeIterator.Previous
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Previous
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.GetNextContentNode*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.GetNextContentNode
  isExternal: true
  name: GetNextContentNode
  nameWithType: ContentNodeIterator.GetNextContentNode
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.GetNextContentNode
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Container*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Container
  isExternal: true
  name: Container
  nameWithType: ContentNodeIterator.Container
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.Container
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.CurrentNode*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.CurrentNode
  isExternal: true
  name: CurrentNode
  nameWithType: ContentNodeIterator.CurrentNode
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.CurrentNode
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.CurrentAbstractNode*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.CurrentAbstractNode
  isExternal: true
  name: CurrentAbstractNode
  nameWithType: ContentNodeIterator.CurrentAbstractNode
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.CurrentAbstractNode
- uid: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.EndNode*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ContentNodeIterator.EndNode
  isExternal: true
  name: EndNode
  nameWithType: ContentNodeIterator.EndNode
  fullName: Sdl.DesktopEditor.EditorApi.ContentNodeIterator.EndNode
