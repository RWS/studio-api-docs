### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator
  commentId: T:Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator
  id: AbstractTextIterator
  parent: Sdl.DesktopEditor.EditorApi.Implementation
  children:
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.#ctor(Sdl.DesktopEditor.EditorApi.IEditControl,Sdl.DesktopEditor.EditorApi.Position)
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.#ctor(Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator)
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.Clone
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.CurrentCharacter
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.CurrentPosition
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.EditControl
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.IsWordStart
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.Move(Sdl.DesktopEditor.EditorApi.Move)
  langs:
  - csharp
  - vb
  name: AbstractTextIterator
  nameWithType: AbstractTextIterator
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator
  type: Class
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nBase class for text iterator implementation.\n"
  syntax:
    content: 'public abstract class AbstractTextIterator : ITextIterator, ICloneable'
    content.vb: >-
      Public MustInherit Class AbstractTextIterator
          Implements ITextIterator, ICloneable
  inheritance:
  - System.Object
  implements:
  - Sdl.DesktopEditor.EditorApi.ITextIterator
  - System.ICloneable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.#ctor(Sdl.DesktopEditor.EditorApi.IEditControl,Sdl.DesktopEditor.EditorApi.Position)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.#ctor(Sdl.DesktopEditor.EditorApi.IEditControl,Sdl.DesktopEditor.EditorApi.Position)
  id: '#ctor(Sdl.DesktopEditor.EditorApi.IEditControl,Sdl.DesktopEditor.EditorApi.Position)'
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator
  langs:
  - csharp
  - vb
  name: AbstractTextIterator(IEditControl, Position)
  nameWithType: AbstractTextIterator.AbstractTextIterator(IEditControl, Position)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.AbstractTextIterator(Sdl.DesktopEditor.EditorApi.IEditControl, Sdl.DesktopEditor.EditorApi.Position)
  type: Constructor
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nDefault construction - from an edit control and a start position.\n"
  syntax:
    content: protected AbstractTextIterator(IEditControl editControl, Position startPosition)
    parameters:
    - id: editControl
      type: Sdl.DesktopEditor.EditorApi.IEditControl
    - id: startPosition
      type: Sdl.DesktopEditor.EditorApi.Position
    content.vb: Protected Sub New(editControl As IEditControl, startPosition As Position)
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.#ctor(Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.#ctor(Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator)
  id: '#ctor(Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator)'
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator
  langs:
  - csharp
  - vb
  name: AbstractTextIterator(AbstractTextIterator)
  nameWithType: AbstractTextIterator.AbstractTextIterator(AbstractTextIterator)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.AbstractTextIterator(Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator)
  type: Constructor
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nConstructor used by cloning. Clones the position.\n"
  syntax:
    content: protected AbstractTextIterator(AbstractTextIterator other)
    parameters:
    - id: other
      type: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator
    content.vb: Protected Sub New(other As AbstractTextIterator)
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.Move(Sdl.DesktopEditor.EditorApi.Move)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.Move(Sdl.DesktopEditor.EditorApi.Move)
  id: Move(Sdl.DesktopEditor.EditorApi.Move)
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator
  langs:
  - csharp
  - vb
  name: Move(Move)
  nameWithType: AbstractTextIterator.Move(Move)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.Move(Sdl.DesktopEditor.EditorApi.Move)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nmove the itearator\n"
  syntax:
    content: public abstract bool Move(Move typeOfMove)
    parameters:
    - id: typeOfMove
      type: Sdl.DesktopEditor.EditorApi.Move
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function Move(typeOfMove As Move) As Boolean
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.Move*
  implements:
  - Sdl.DesktopEditor.EditorApi.ITextIterator.Move(Sdl.DesktopEditor.EditorApi.Move)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.Clone
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.Clone
  id: Clone
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: AbstractTextIterator.Clone()
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.Clone()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nClone the iterator - the clone should reference the same\nposition but be possible to move without affecting this iterator.\n"
  syntax:
    content: public abstract object Clone()
    return:
      type: System.Object
    content.vb: Public MustOverride Function Clone As Object
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.CurrentPosition
  commentId: P:Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.CurrentPosition
  id: CurrentPosition
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator
  langs:
  - csharp
  - vb
  name: CurrentPosition
  nameWithType: AbstractTextIterator.CurrentPosition
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.CurrentPosition
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nset/get the current position\n"
  syntax:
    content: public virtual Position CurrentPosition { get; set; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.Position
    content.vb: Public Overridable Property CurrentPosition As Position
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.CurrentPosition*
  implements:
  - Sdl.DesktopEditor.EditorApi.ITextIterator.CurrentPosition
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.EditControl
  commentId: P:Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.EditControl
  id: EditControl
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator
  langs:
  - csharp
  - vb
  name: EditControl
  nameWithType: AbstractTextIterator.EditControl
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.EditControl
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nget the edit control\n"
  syntax:
    content: public virtual IEditControl EditControl { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IEditControl
    content.vb: Public Overridable ReadOnly Property EditControl As IEditControl
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.EditControl*
  implements:
  - Sdl.DesktopEditor.EditorApi.ITextIterator.EditControl
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.IsWordStart
  commentId: P:Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.IsWordStart
  id: IsWordStart
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator
  langs:
  - csharp
  - vb
  name: IsWordStart
  nameWithType: AbstractTextIterator.IsWordStart
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.IsWordStart
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\ncalls the edit control to determine if the position is a word start.\n"
  syntax:
    content: public virtual bool IsWordStart { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsWordStart As Boolean
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.IsWordStart*
  implements:
  - Sdl.DesktopEditor.EditorApi.ITextIterator.IsWordStart
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.CurrentCharacter
  commentId: P:Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.CurrentCharacter
  id: CurrentCharacter
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator
  langs:
  - csharp
  - vb
  name: CurrentCharacter
  nameWithType: AbstractTextIterator.CurrentCharacter
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.CurrentCharacter
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nget current character, if any\n"
  syntax:
    content: public abstract char? CurrentCharacter { get; }
    parameters: []
    return:
      type: System.Nullable{System.Char}
    content.vb: Public MustOverride ReadOnly Property CurrentCharacter As Char?
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.CurrentCharacter*
  implements:
  - Sdl.DesktopEditor.EditorApi.ITextIterator.CurrentCharacter
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
references:
- uid: Sdl.DesktopEditor.EditorApi.Implementation
  commentId: N:Sdl.DesktopEditor.EditorApi.Implementation
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi.Implementation
  nameWithType: Sdl.DesktopEditor.EditorApi.Implementation
  fullName: Sdl.DesktopEditor.EditorApi.Implementation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.DesktopEditor.EditorApi.ITextIterator
  commentId: T:Sdl.DesktopEditor.EditorApi.ITextIterator
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: ITextIterator
  nameWithType: ITextIterator
  fullName: Sdl.DesktopEditor.EditorApi.ITextIterator
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.#ctor*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.#ctor
  isExternal: true
  name: AbstractTextIterator
  nameWithType: AbstractTextIterator.AbstractTextIterator
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.AbstractTextIterator
- uid: Sdl.DesktopEditor.EditorApi.IEditControl
  commentId: T:Sdl.DesktopEditor.EditorApi.IEditControl
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IEditControl
  nameWithType: IEditControl
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl
- uid: Sdl.DesktopEditor.EditorApi.Position
  commentId: T:Sdl.DesktopEditor.EditorApi.Position
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Position
  nameWithType: Position
  fullName: Sdl.DesktopEditor.EditorApi.Position
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator
  commentId: T:Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator
  parent: Sdl.DesktopEditor.EditorApi.Implementation
  isExternal: true
  name: AbstractTextIterator
  nameWithType: AbstractTextIterator
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.Move*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.Move
  isExternal: true
  name: Move
  nameWithType: AbstractTextIterator.Move
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.Move
- uid: Sdl.DesktopEditor.EditorApi.ITextIterator.Move(Sdl.DesktopEditor.EditorApi.Move)
  commentId: M:Sdl.DesktopEditor.EditorApi.ITextIterator.Move(Sdl.DesktopEditor.EditorApi.Move)
  parent: Sdl.DesktopEditor.EditorApi.ITextIterator
  isExternal: true
  name: Move(Move)
  nameWithType: ITextIterator.Move(Move)
  fullName: Sdl.DesktopEditor.EditorApi.ITextIterator.Move(Sdl.DesktopEditor.EditorApi.Move)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ITextIterator.Move(Sdl.DesktopEditor.EditorApi.Move)
    name: Move
    nameWithType: ITextIterator.Move
    fullName: Sdl.DesktopEditor.EditorApi.ITextIterator.Move
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.Move
    name: Move
    nameWithType: Move
    fullName: Sdl.DesktopEditor.EditorApi.Move
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ITextIterator.Move(Sdl.DesktopEditor.EditorApi.Move)
    name: Move
    nameWithType: ITextIterator.Move
    fullName: Sdl.DesktopEditor.EditorApi.ITextIterator.Move
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.Move
    name: Move
    nameWithType: Move
    fullName: Sdl.DesktopEditor.EditorApi.Move
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.Move
  commentId: T:Sdl.DesktopEditor.EditorApi.Move
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Move
  nameWithType: Move
  fullName: Sdl.DesktopEditor.EditorApi.Move
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.Clone*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.Clone
  isExternal: true
  name: Clone
  nameWithType: AbstractTextIterator.Clone
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.CurrentPosition*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.CurrentPosition
  isExternal: true
  name: CurrentPosition
  nameWithType: AbstractTextIterator.CurrentPosition
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.CurrentPosition
- uid: Sdl.DesktopEditor.EditorApi.ITextIterator.CurrentPosition
  commentId: P:Sdl.DesktopEditor.EditorApi.ITextIterator.CurrentPosition
  parent: Sdl.DesktopEditor.EditorApi.ITextIterator
  isExternal: true
  name: CurrentPosition
  nameWithType: ITextIterator.CurrentPosition
  fullName: Sdl.DesktopEditor.EditorApi.ITextIterator.CurrentPosition
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.EditControl*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.EditControl
  isExternal: true
  name: EditControl
  nameWithType: AbstractTextIterator.EditControl
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.EditControl
- uid: Sdl.DesktopEditor.EditorApi.ITextIterator.EditControl
  commentId: P:Sdl.DesktopEditor.EditorApi.ITextIterator.EditControl
  parent: Sdl.DesktopEditor.EditorApi.ITextIterator
  isExternal: true
  name: EditControl
  nameWithType: ITextIterator.EditControl
  fullName: Sdl.DesktopEditor.EditorApi.ITextIterator.EditControl
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.IsWordStart*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.IsWordStart
  isExternal: true
  name: IsWordStart
  nameWithType: AbstractTextIterator.IsWordStart
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.IsWordStart
- uid: Sdl.DesktopEditor.EditorApi.ITextIterator.IsWordStart
  commentId: P:Sdl.DesktopEditor.EditorApi.ITextIterator.IsWordStart
  parent: Sdl.DesktopEditor.EditorApi.ITextIterator
  isExternal: true
  name: IsWordStart
  nameWithType: ITextIterator.IsWordStart
  fullName: Sdl.DesktopEditor.EditorApi.ITextIterator.IsWordStart
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.CurrentCharacter*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.CurrentCharacter
  isExternal: true
  name: CurrentCharacter
  nameWithType: AbstractTextIterator.CurrentCharacter
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractTextIterator.CurrentCharacter
- uid: Sdl.DesktopEditor.EditorApi.ITextIterator.CurrentCharacter
  commentId: P:Sdl.DesktopEditor.EditorApi.ITextIterator.CurrentCharacter
  parent: Sdl.DesktopEditor.EditorApi.ITextIterator
  isExternal: true
  name: CurrentCharacter
  nameWithType: ITextIterator.CurrentCharacter
  fullName: Sdl.DesktopEditor.EditorApi.ITextIterator.CurrentCharacter
- uid: System.Nullable{System.Char}
  commentId: T:System.Nullable{System.Char}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Char>
  nameWithType: Nullable<Char>
  fullName: System.Nullable<System.Char>
  nameWithType.vb: Nullable(Of Char)
  fullName.vb: System.Nullable(Of System.Char)
  name.vb: Nullable(Of Char)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
