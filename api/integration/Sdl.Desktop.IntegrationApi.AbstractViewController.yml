### YamlMime:ManagedReference
items:
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController
  commentId: T:Sdl.Desktop.IntegrationApi.AbstractViewController
  id: AbstractViewController
  parent: Sdl.Desktop.IntegrationApi
  children:
  - Sdl.Desktop.IntegrationApi.AbstractViewController.#ctor
  - Sdl.Desktop.IntegrationApi.AbstractViewController.Activate
  - Sdl.Desktop.IntegrationApi.AbstractViewController.ActivationChanged
  - Sdl.Desktop.IntegrationApi.AbstractViewController.Context
  - Sdl.Desktop.IntegrationApi.AbstractViewController.Dispose
  - Sdl.Desktop.IntegrationApi.AbstractViewController.GetContentControl
  - Sdl.Desktop.IntegrationApi.AbstractViewController.GetExplorerBarControl
  - Sdl.Desktop.IntegrationApi.AbstractViewController.Initialize(Sdl.Desktop.IntegrationApi.IViewContext)
  - Sdl.Desktop.IntegrationApi.AbstractViewController.Refresh
  langs:
  - csharp
  - vb
  name: AbstractViewController
  nameWithType: AbstractViewController
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController
  type: Class
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nBase class used in the implementation and integration of a view in desktop applications. \nBased on an MVC pattern the implementation is the controller of a view.    \n"
  syntax:
    content: 'public abstract class AbstractViewController : AbstractController, IViewController'
    content.vb: >-
      Public MustInherit Class AbstractViewController
          Inherits AbstractController
          Implements IViewController
  inheritance:
  - System.Object
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractController
  derivedClasses:
  - Sdl.Desktop.IntegrationApi.Internal.AbstractBindedController
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController.Initialize(Sdl.Desktop.IntegrationApi.IViewContext)
  commentId: M:Sdl.Desktop.IntegrationApi.AbstractViewController.Initialize(Sdl.Desktop.IntegrationApi.IViewContext)
  id: Initialize(Sdl.Desktop.IntegrationApi.IViewContext)
  parent: Sdl.Desktop.IntegrationApi.AbstractViewController
  langs:
  - csharp
  - vb
  name: Initialize(IViewContext)
  nameWithType: AbstractViewController.Initialize(IViewContext)
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController.Initialize(Sdl.Desktop.IntegrationApi.IViewContext)
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nCalled only once when the controller is initialized\n"
  syntax:
    content: protected abstract void Initialize(IViewContext context)
    parameters:
    - id: context
      type: Sdl.Desktop.IntegrationApi.IViewContext
      description: The context in which the view is initialized.
    content.vb: Protected MustOverride Sub Initialize(context As IViewContext)
  overload: Sdl.Desktop.IntegrationApi.AbstractViewController.Initialize*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController.GetContentControl
  commentId: M:Sdl.Desktop.IntegrationApi.AbstractViewController.GetContentControl
  id: GetContentControl
  parent: Sdl.Desktop.IntegrationApi.AbstractViewController
  langs:
  - csharp
  - vb
  name: GetContentControl()
  nameWithType: AbstractViewController.GetContentControl()
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController.GetContentControl()
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nGet the content control for this view. This control will occupy the content area of the studio window while this view is active.\n"
  remarks: "\nMust be overrided if the view does not allow view parts.\n"
  syntax:
    content: protected virtual Control GetContentControl()
    return:
      type: System.Windows.Forms.Control
      description: A windows user control.
    content.vb: Protected Overridable Function GetContentControl As Control
  overload: Sdl.Desktop.IntegrationApi.AbstractViewController.GetContentControl*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController.GetExplorerBarControl
  commentId: M:Sdl.Desktop.IntegrationApi.AbstractViewController.GetExplorerBarControl
  id: GetExplorerBarControl
  parent: Sdl.Desktop.IntegrationApi.AbstractViewController
  langs:
  - csharp
  - vb
  name: GetExplorerBarControl()
  nameWithType: AbstractViewController.GetExplorerBarControl()
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController.GetExplorerBarControl()
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nGet the explorer bar control of the view. This control will be placed in the content area of the explorer bar\nwhen this view is active.\n"
  syntax:
    content: protected virtual Control GetExplorerBarControl()
    return:
      type: System.Windows.Forms.Control
      description: A Windows Forms control.
    content.vb: Protected Overridable Function GetExplorerBarControl As Control
  overload: Sdl.Desktop.IntegrationApi.AbstractViewController.GetExplorerBarControl*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController.Refresh
  commentId: M:Sdl.Desktop.IntegrationApi.AbstractViewController.Refresh
  id: Refresh
  parent: Sdl.Desktop.IntegrationApi.AbstractViewController
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: AbstractViewController.Refresh()
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController.Refresh()
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nCalled when the view needs to be refreshed.\n"
  remarks: By default, this method is also called when the view is being activated.
  syntax:
    content: protected virtual void Refresh()
    content.vb: Protected Overridable Sub Refresh
  overload: Sdl.Desktop.IntegrationApi.AbstractViewController.Refresh*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController.Dispose
  commentId: M:Sdl.Desktop.IntegrationApi.AbstractViewController.Dispose
  id: Dispose
  parent: Sdl.Desktop.IntegrationApi.AbstractViewController
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: AbstractViewController.Dispose()
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController.Dispose()
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nOverride to implement the dispose of the resources associated with the view.\n"
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose
  overload: Sdl.Desktop.IntegrationApi.AbstractViewController.Dispose*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController.Activate
  commentId: M:Sdl.Desktop.IntegrationApi.AbstractViewController.Activate
  id: Activate
  parent: Sdl.Desktop.IntegrationApi.AbstractViewController
  langs:
  - csharp
  - vb
  name: Activate()
  nameWithType: AbstractViewController.Activate()
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController.Activate()
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nActivate the view in the Studio application.\n"
  syntax:
    content: public virtual void Activate()
    content.vb: Public Overridable Sub Activate
  overload: Sdl.Desktop.IntegrationApi.AbstractViewController.Activate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController.#ctor
  commentId: M:Sdl.Desktop.IntegrationApi.AbstractViewController.#ctor
  id: '#ctor'
  parent: Sdl.Desktop.IntegrationApi.AbstractViewController
  langs:
  - csharp
  - vb
  name: AbstractViewController()
  nameWithType: AbstractViewController.AbstractViewController()
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController.AbstractViewController()
  type: Constructor
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  syntax:
    content: protected AbstractViewController()
    content.vb: Protected Sub New
  overload: Sdl.Desktop.IntegrationApi.AbstractViewController.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController.Context
  commentId: P:Sdl.Desktop.IntegrationApi.AbstractViewController.Context
  id: Context
  parent: Sdl.Desktop.IntegrationApi.AbstractViewController
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: AbstractViewController.Context
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController.Context
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nThe context in witch the view is executing\n"
  syntax:
    content: public virtual IViewContext Context { get; protected set; }
    parameters: []
    return:
      type: Sdl.Desktop.IntegrationApi.IViewContext
    content.vb: Public Overridable Property Context As IViewContext
  overload: Sdl.Desktop.IntegrationApi.AbstractViewController.Context*
  modifiers.csharp:
  - public
  - virtual
  - get
  - protected set
  modifiers.vb:
  - Public
  - Overridable
  - Get
  - Protected Set
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController.ActivationChanged
  commentId: E:Sdl.Desktop.IntegrationApi.AbstractViewController.ActivationChanged
  id: ActivationChanged
  parent: Sdl.Desktop.IntegrationApi.AbstractViewController
  langs:
  - csharp
  - vb
  name: ActivationChanged
  nameWithType: AbstractViewController.ActivationChanged
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController.ActivationChanged
  type: Event
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nTriggered when the activation of a view is changed\n"
  syntax:
    content: public event EventHandler<ActivationChangedEventArgs> ActivationChanged
    return:
      type: System.EventHandler{Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs}
    content.vb: Public Event ActivationChanged As EventHandler(Of ActivationChangedEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.Desktop.IntegrationApi
  commentId: N:Sdl.Desktop.IntegrationApi
  isExternal: true
  name: Sdl.Desktop.IntegrationApi
  nameWithType: Sdl.Desktop.IntegrationApi
  fullName: Sdl.Desktop.IntegrationApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractController
  commentId: T:Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractController
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal
  isExternal: true
  name: AbstractController
  nameWithType: AbstractController
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractController
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal
  commentId: N:Sdl.Desktop.IntegrationApi.Extensions.Internal
  isExternal: true
  name: Sdl.Desktop.IntegrationApi.Extensions.Internal
  nameWithType: Sdl.Desktop.IntegrationApi.Extensions.Internal
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController.Initialize*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewController.Initialize
  isExternal: true
  name: Initialize
  nameWithType: AbstractViewController.Initialize
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController.Initialize
- uid: Sdl.Desktop.IntegrationApi.IViewContext
  commentId: T:Sdl.Desktop.IntegrationApi.IViewContext
  parent: Sdl.Desktop.IntegrationApi
  isExternal: true
  name: IViewContext
  nameWithType: IViewContext
  fullName: Sdl.Desktop.IntegrationApi.IViewContext
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController.GetContentControl*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewController.GetContentControl
  isExternal: true
  name: GetContentControl
  nameWithType: AbstractViewController.GetContentControl
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController.GetContentControl
- uid: System.Windows.Forms.Control
  isExternal: true
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController.GetExplorerBarControl*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewController.GetExplorerBarControl
  isExternal: true
  name: GetExplorerBarControl
  nameWithType: AbstractViewController.GetExplorerBarControl
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController.GetExplorerBarControl
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController.Refresh*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewController.Refresh
  isExternal: true
  name: Refresh
  nameWithType: AbstractViewController.Refresh
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController.Refresh
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController.Dispose*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewController.Dispose
  isExternal: true
  name: Dispose
  nameWithType: AbstractViewController.Dispose
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController.Dispose
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController.Activate*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewController.Activate
  isExternal: true
  name: Activate
  nameWithType: AbstractViewController.Activate
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController.Activate
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController.#ctor*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewController.#ctor
  isExternal: true
  name: AbstractViewController
  nameWithType: AbstractViewController.AbstractViewController
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController.AbstractViewController
- uid: Sdl.Desktop.IntegrationApi.AbstractViewController.Context*
  commentId: Overload:Sdl.Desktop.IntegrationApi.AbstractViewController.Context
  isExternal: true
  name: Context
  nameWithType: AbstractViewController.Context
  fullName: Sdl.Desktop.IntegrationApi.AbstractViewController.Context
- uid: System.EventHandler{Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ActivationChangedEventArgs>
  nameWithType: EventHandler<ActivationChangedEventArgs>
  fullName: System.EventHandler<Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs>
  nameWithType.vb: EventHandler(Of ActivationChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs)
  name.vb: EventHandler(Of ActivationChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs
    name: ActivationChangedEventArgs
    nameWithType: ActivationChangedEventArgs
    fullName: Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs
    name: ActivationChangedEventArgs
    nameWithType: ActivationChangedEventArgs
    fullName: Sdl.Desktop.IntegrationApi.ActivationChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
