### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout
  commentId: T:Sdl.DesktopEditor.EditorApi.ISynchronizableLayout
  id: ISynchronizableLayout
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.ChangeRowHeight(Sdl.DesktopEditor.EditorApi.ISynchronizableCell,System.Int32)
  - Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.Draw
  - Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.StructureChanged
  langs:
  - csharp
  - vb
  name: ISynchronizableLayout
  nameWithType: ISynchronizableLayout
  fullName: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout
  type: Interface
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nA control must implement this interface if synchronized scrolling of rows between this control\nand other controls through the <see ref=\"ILayoutSynchronizer\"></see> is required.\n"
  syntax:
    content: public interface ISynchronizableLayout
    content.vb: Public Interface ISynchronizableLayout
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.ChangeRowHeight(Sdl.DesktopEditor.EditorApi.ISynchronizableCell,System.Int32)
  commentId: M:Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.ChangeRowHeight(Sdl.DesktopEditor.EditorApi.ISynchronizableCell,System.Int32)
  id: ChangeRowHeight(Sdl.DesktopEditor.EditorApi.ISynchronizableCell,System.Int32)
  parent: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout
  langs:
  - csharp
  - vb
  name: ChangeRowHeight(ISynchronizableCell, Int32)
  nameWithType: ISynchronizableLayout.ChangeRowHeight(ISynchronizableCell, Int32)
  fullName: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.ChangeRowHeight(Sdl.DesktopEditor.EditorApi.ISynchronizableCell, System.Int32)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nChanges the height of the row in the layout to the new height specified.\n"
  syntax:
    content: void ChangeRowHeight(ISynchronizableCell synchronizableCell, int height)
    parameters:
    - id: synchronizableCell
      type: Sdl.DesktopEditor.EditorApi.ISynchronizableCell
      description: The cell in the layout that needs to have its height changed
    - id: height
      type: System.Int32
      description: The height which the cell will be changed to
    content.vb: Sub ChangeRowHeight(synchronizableCell As ISynchronizableCell, height As Integer)
  overload: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.ChangeRowHeight*
- uid: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.Draw
  commentId: M:Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.Draw
  id: Draw
  parent: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout
  langs:
  - csharp
  - vb
  name: Draw()
  nameWithType: ISynchronizableLayout.Draw()
  fullName: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.Draw()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nDraws the visible components contained within each row of the layout\n"
  syntax:
    content: void Draw()
    content.vb: Sub Draw
  overload: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.Draw*
- uid: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.StructureChanged
  commentId: M:Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.StructureChanged
  id: StructureChanged
  parent: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout
  langs:
  - csharp
  - vb
  name: StructureChanged()
  nameWithType: ISynchronizableLayout.StructureChanged()
  fullName: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.StructureChanged()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nCalled when structure change notifications have been received from all synchronizable\nlayouts registered with the synchronizer.\n"
  remarks: "\nThe implementation is expected to register all synchronizable cells with the synchronizer\nand call <xref href=\"Sdl.DesktopEditor.EditorApi.ILayoutSynchronizer.CellHeightChanged(Sdl.DesktopEditor.EditorApi.ISynchronizableCell%2cSystem.Int32%2cSdl.DesktopEditor.EditorApi.ISynchronizableLayout)\" data-throw-if-not-resolved=\"false\"></xref> and \n<xref href=\"Sdl.DesktopEditor.EditorApi.ILayoutSynchronizer.NotifyLayoutCompleted(Sdl.DesktopEditor.EditorApi.ISynchronizableLayout)\" data-throw-if-not-resolved=\"false\"></xref> as necessary.\n"
  syntax:
    content: void StructureChanged()
    content.vb: Sub StructureChanged
  overload: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.StructureChanged*
references:
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.ChangeRowHeight*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.ChangeRowHeight
  isExternal: true
  name: ChangeRowHeight
  nameWithType: ISynchronizableLayout.ChangeRowHeight
  fullName: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.ChangeRowHeight
- uid: Sdl.DesktopEditor.EditorApi.ISynchronizableCell
  commentId: T:Sdl.DesktopEditor.EditorApi.ISynchronizableCell
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: ISynchronizableCell
  nameWithType: ISynchronizableCell
  fullName: Sdl.DesktopEditor.EditorApi.ISynchronizableCell
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.Draw*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.Draw
  isExternal: true
  name: Draw
  nameWithType: ISynchronizableLayout.Draw
  fullName: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.Draw
- uid: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.StructureChanged*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.StructureChanged
  isExternal: true
  name: StructureChanged
  nameWithType: ISynchronizableLayout.StructureChanged
  fullName: Sdl.DesktopEditor.EditorApi.ISynchronizableLayout.StructureChanged
