### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection
  commentId: T:Sdl.DesktopEditor.EditorApi.IContentSelection
  id: IContentSelection
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom
  - Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto
  - Sdl.DesktopEditor.EditorApi.IContentSelection.Contains(Sdl.DesktopEditor.EditorApi.Position)
  - Sdl.DesktopEditor.EditorApi.IContentSelection.Control
  - Sdl.DesktopEditor.EditorApi.IContentSelection.FileAtActiveEnd
  - Sdl.DesktopEditor.EditorApi.IContentSelection.FileAtNonactiveEnd
  - Sdl.DesktopEditor.EditorApi.IContentSelection.From
  - Sdl.DesktopEditor.EditorApi.IContentSelection.FromRow
  - Sdl.DesktopEditor.EditorApi.IContentSelection.IsEmpty
  - Sdl.DesktopEditor.EditorApi.IContentSelection.IsReversed
  - Sdl.DesktopEditor.EditorApi.IContentSelection.IsValid
  - Sdl.DesktopEditor.EditorApi.IContentSelection.Move(Sdl.DesktopEditor.EditorApi.Move,System.Boolean)
  - Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.ContentRange)
  - Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position,System.Boolean)
  - Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize
  - Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse
  - Sdl.DesktopEditor.EditorApi.IContentSelection.ScrollIntoView
  - Sdl.DesktopEditor.EditorApi.IContentSelection.Upto
  - Sdl.DesktopEditor.EditorApi.IContentSelection.UptoRow
  langs:
  - csharp
  - vb
  name: IContentSelection
  nameWithType: IContentSelection
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection
  type: Interface
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    The currently selected content in the edit control.

    <p>

    The selection is represented by two positions: <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.From" data-throw-if-not-resolved="false"></xref> and <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Upto" data-throw-if-not-resolved="false"></xref>, where the from 

    position is the start of the selection and the upto position is the active end of the selection, i.e. the end that

    typically moves when the user presses Shift + arrow keys, or selects text using the mouse.

    </p>

    <p>

    When no content is selected the from and upto positions are the same. This can

    be tested through the <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.IsEmpty" data-throw-if-not-resolved="false"></xref> property of the selection.

    </p>

    <p>

    The selection can be made empty by explicitly calling <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom" data-throw-if-not-resolved="false"></xref> and <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    The from position does not need to be before the upto position. This can happen e.g. if the user selects 

    text starting from the right and moving left in the document. In such cases the selection is said to be reversed. 

    This can be tested through the <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.IsReversed" data-throw-if-not-resolved="false"></xref> property of the selection. 

    </p>

    <p>

    The from and upto positions of the selection can be swapped by calling the <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse" data-throw-if-not-resolved="false"></xref>

    method. Calling the <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize" data-throw-if-not-resolved="false"></xref> method ensures that the from position in the selection

    is not after the upto position, by testing if the selection is reversed and in that case reversing it.

    </p>

    <p>

    The selection can be explicitly moved through the methods <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Move(Sdl.DesktopEditor.EditorApi.Move%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> and 

    <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    The selection is never <code>null</code> but may not always be valid. Use <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.IsValid" data-throw-if-not-resolved="false"></xref> to test whether

    the selection is in a safe state to use.

    </p>
  example: []
  syntax:
    content: public interface IContentSelection
    content.vb: Public Interface IContentSelection
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Contains(Sdl.DesktopEditor.EditorApi.Position)
  commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.Contains(Sdl.DesktopEditor.EditorApi.Position)
  id: Contains(Sdl.DesktopEditor.EditorApi.Position)
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: Contains(Position)
  nameWithType: IContentSelection.Contains(Position)
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.Contains(Sdl.DesktopEditor.EditorApi.Position)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Determine if a position is inside the selection.
  remarks: >-
    <p>

    The position is considered to be "inside" if it is at the same location as the first 

    position in the selection (i.e. the From position if the range is normalized, or the Upto position if not).

    It is considered "outside" if it is at (i.e. same as) the last part of the selection.

    If the selection is empty the position is not considered to be "inside".

    </p>
  example: []
  syntax:
    content: bool Contains(Position position)
    parameters:
    - id: position
      type: Sdl.DesktopEditor.EditorApi.Position
      description: The position to test.
    return:
      type: System.Boolean
      description: <code>true</code> if the position is considered to be inside the selection.
    content.vb: Function Contains(position As Position) As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.Contains*
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.ScrollIntoView
  commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.ScrollIntoView
  id: ScrollIntoView
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: ScrollIntoView()
  nameWithType: IContentSelection.ScrollIntoView()
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.ScrollIntoView()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Scroll the content at the current selection into view.
  remarks: >-
    <p>

    Note that there is seldom a need to call this method as the selection is

    automatically scrolled into view when it is moved. However if you resize

    the window (for example) the selection may end up outside of the view as a result - calling

    this method will bring it back into view.

    </p>

    <p>

    If the entire selection cannot be scrolled into view the <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Upto" data-throw-if-not-resolved="false"></xref> end

    of the selection should at least be scrolled in, with as much of the rest

    of the selection visible as possible.

    </p>
  example: []
  syntax:
    content: void ScrollIntoView()
    content.vb: Sub ScrollIntoView()
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.ScrollIntoView*
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom
  commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom
  id: CollapseToFrom
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: CollapseToFrom()
  nameWithType: IContentSelection.CollapseToFrom()
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Makes the selection empty by moving <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Upto" data-throw-if-not-resolved="false"></xref> to the <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.From" data-throw-if-not-resolved="false"></xref> position.
  example: []
  syntax:
    content: void CollapseToFrom()
    content.vb: Sub CollapseToFrom()
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom*
  seealso:
  - linkId: Sdl.DesktopEditor.EditorApi.IContentSelection.IsEmpty
    commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.IsEmpty
  - linkId: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto
    commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto
  commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto
  id: CollapseToUpto
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: CollapseToUpto()
  nameWithType: IContentSelection.CollapseToUpto()
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Makes the selection empty by moving <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.From" data-throw-if-not-resolved="false"></xref> to the <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Upto" data-throw-if-not-resolved="false"></xref> position.
  example: []
  syntax:
    content: void CollapseToUpto()
    content.vb: Sub CollapseToUpto()
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto*
  seealso:
  - linkId: Sdl.DesktopEditor.EditorApi.IContentSelection.IsEmpty
    commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.IsEmpty
  - linkId: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom
    commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse
  commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse
  id: Reverse
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: Reverse()
  nameWithType: IContentSelection.Reverse()
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Swaps the <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.From" data-throw-if-not-resolved="false"></xref> and <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Upto" data-throw-if-not-resolved="false"></xref> positions.
  remarks: This operation has no effect if the selection is empty.
  example: []
  syntax:
    content: void Reverse()
    content.vb: Sub Reverse()
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse*
  seealso:
  - linkId: Sdl.DesktopEditor.EditorApi.IContentSelection.IsReversed
    commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.IsReversed
  - linkId: Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize
    commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize
  commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize
  id: Normalize
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: IContentSelection.Normalize()
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize()
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Swaps the <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.From" data-throw-if-not-resolved="false"></xref> and <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Upto" data-throw-if-not-resolved="false"></xref> positions if the selection

    is reversed, to ensure that From always appears before (or in the same place as) Upto.
  remarks: This operation has no effect if the selection is empty or if it is not reversed.
  example: []
  syntax:
    content: void Normalize()
    content.vb: Sub Normalize()
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize*
  seealso:
  - linkId: Sdl.DesktopEditor.EditorApi.IContentSelection.IsReversed
    commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.IsReversed
  - linkId: Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse
    commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Move(Sdl.DesktopEditor.EditorApi.Move,System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.Move(Sdl.DesktopEditor.EditorApi.Move,System.Boolean)
  id: Move(Sdl.DesktopEditor.EditorApi.Move,System.Boolean)
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: Move(Move, bool)
  nameWithType: IContentSelection.Move(Move, bool)
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.Move(Sdl.DesktopEditor.EditorApi.Move, bool)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Move the selection relative to its current location.
  remarks: >-
    <p>

    If the selection is not visible it is automatically scrolled into view.

    </p>
  example: []
  syntax:
    content: bool Move(Move direction, bool extendSelection)
    parameters:
    - id: direction
      type: Sdl.DesktopEditor.EditorApi.Move
      description: Indicates how the selection should be moved.
    - id: extendSelection
      type: System.Boolean
      description: >-
        If <code>true</code> only the active end (<xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Upto" data-throw-if-not-resolved="false"></xref>)
                    is moved. If <code>false</code> both <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.From" data-throw-if-not-resolved="false"></xref> and <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Upto" data-throw-if-not-resolved="false"></xref> are moved.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if the selection was moved as a result of the operation. (For example
                    moving to the start of the line when the selection is already at the start of the line
                    will not change the selection.)
    content.vb: Function Move(direction As Move, extendSelection As Boolean) As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.Move*
  nameWithType.vb: IContentSelection.Move(Move, Boolean)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IContentSelection.Move(Sdl.DesktopEditor.EditorApi.Move, Boolean)
  name.vb: Move(Move, Boolean)
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position,System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position,System.Boolean)
  id: MoveTo(Sdl.DesktopEditor.EditorApi.Position,System.Boolean)
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: MoveTo(Position, bool)
  nameWithType: IContentSelection.MoveTo(Position, bool)
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position, bool)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Move the selection to a specific location.
  remarks: >-
    <p>

    If the selection is not visible it is automatically scrolled into view.

    </p>
  example: []
  syntax:
    content: bool MoveTo(Position destination, bool extendSelection)
    parameters:
    - id: destination
      type: Sdl.DesktopEditor.EditorApi.Position
      description: The location to which the selection should be moved.
    - id: extendSelection
      type: System.Boolean
      description: >-
        If <code>true</code> only the active end (<xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Upto" data-throw-if-not-resolved="false"></xref>)
                    is moved. If <code>false</code> both <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.From" data-throw-if-not-resolved="false"></xref> and <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Upto" data-throw-if-not-resolved="false"></xref> are moved.
    return:
      type: System.Boolean
      description: <code>true</code> if the selection was moved as a result of the operation.
    content.vb: Function MoveTo(destination As Position, extendSelection As Boolean) As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo*
  nameWithType.vb: IContentSelection.MoveTo(Position, Boolean)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position, Boolean)
  name.vb: MoveTo(Position, Boolean)
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.ContentRange)
  commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.ContentRange)
  id: MoveTo(Sdl.DesktopEditor.EditorApi.ContentRange)
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: MoveTo(ContentRange)
  nameWithType: IContentSelection.MoveTo(ContentRange)
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.ContentRange)
  type: Method
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: Move the selection so that it spans the specified range.
  remarks: >-
    <p>

    If the selection is not visible it is automatically scrolled into view.

    </p>
  example: []
  syntax:
    content: bool MoveTo(ContentRange range)
    parameters:
    - id: range
      type: Sdl.DesktopEditor.EditorApi.ContentRange
      description: The range that the selection should span.
    return:
      type: System.Boolean
      description: <code>true</code> if the selection was moved as a result of this operation.
    content.vb: Function MoveTo(range As ContentRange) As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo*
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Control
  commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.Control
  id: Control
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: Control
  nameWithType: IContentSelection.Control
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.Control
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: The edit control the selection belongs to.
  example: []
  syntax:
    content: IEditControl Control { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IEditControl
    content.vb: ReadOnly Property Control As IEditControl
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.Control*
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.IsEmpty
  commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.IsEmpty
  id: IsEmpty
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: IContentSelection.IsEmpty
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.IsEmpty
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    <code>true</code> if the selection is empty (when the <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.From" data-throw-if-not-resolved="false"></xref> position

    is equivalent to the <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Upto" data-throw-if-not-resolved="false"></xref> position).
  example: []
  syntax:
    content: bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsEmpty As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.IsEmpty*
  seealso:
  - linkId: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom
    commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom
  - linkId: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto
    commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.IsReversed
  commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.IsReversed
  id: IsReversed
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: IsReversed
  nameWithType: IContentSelection.IsReversed
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.IsReversed
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    <code>true</code> if the selection is reversed (the <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Upto" data-throw-if-not-resolved="false"></xref>

    position is before the <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.From" data-throw-if-not-resolved="false"></xref> position).
  example: []
  syntax:
    content: bool IsReversed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsReversed As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.IsReversed*
  seealso:
  - linkId: Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse
    commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse
  - linkId: Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize
    commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.IsValid
  commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.IsValid
  id: IsValid
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: IContentSelection.IsValid
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.IsValid
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Tests whether the current selection is valid. The selection is valid when both

    from and upto positions are valid, otherwise it is not valid.  This is useful for

    testing whether the selection has been initialized properly yet, or is visible on the screen.
  example: []
  syntax:
    content: bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsValid As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.IsValid*
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.From
  commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.From
  id: From
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: From
  nameWithType: IContentSelection.From
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.From
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: The start of the currently selected content in the edit control.
  remarks: >-
    <p>This is the non-active end of the selection, i.e. the end that does not move when selecting 

    text using arrow keys or the mouse (or the <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Move(Sdl.DesktopEditor.EditorApi.Move%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> or 

    <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> methods).</p>

    <p>The From position may appear before the Upto position if the selection is reversed.</p>

    <p>

    Assigning to this property moves the selection. If the selection is not visible it is also scrolled into view.

    </p>
  example: []
  syntax:
    content: Position From { get; set; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.Position
    content.vb: Property From As Position
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.From*
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Upto
  commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.Upto
  id: Upto
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: Upto
  nameWithType: IContentSelection.Upto
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.Upto
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: The active end of the currently selected content in the edit control.
  remarks: >-
    <p>This is the part of the selection that moves when selecting text using arrow keys or the mouse 

    (or the <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Move(Sdl.DesktopEditor.EditorApi.Move%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> methods).</p>

    <p>The Upto position may appear after the From position if the selection is reversed.</p>

    <p>

    Assigning to this property moves the selection. If the selection is not visible it is also scrolled into view.

    </p>
  example: []
  syntax:
    content: Position Upto { get; set; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.Position
    content.vb: Property Upto As Position
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.Upto*
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.FromRow
  commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.FromRow
  id: FromRow
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: FromRow
  nameWithType: IContentSelection.FromRow
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.FromRow
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    The row at the <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.From" data-throw-if-not-resolved="false"></xref> position of the current selection. Can be <code>null</code> if there is

    no row at that position (either because from is invalid or the layout has not be fully generated yet).
  remarks: >-
    <p>

    This property can also be used to gain access to the <xref href="Sdl.DesktopEditor.EditorApi.ISegmentContainerNode" data-throw-if-not-resolved="false"></xref>

    and the <xref href="Sdl.DesktopEditor.EditorApi.IParagraphUnitContainerNode" data-throw-if-not-resolved="false"></xref> at the from end of selection.

    </p>
  example: []
  syntax:
    content: IRowInfo FromRow { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
    content.vb: ReadOnly Property FromRow As IRowInfo
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.FromRow*
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.UptoRow
  commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.UptoRow
  id: UptoRow
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: UptoRow
  nameWithType: IContentSelection.UptoRow
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.UptoRow
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    The row at the <xref href="Sdl.DesktopEditor.EditorApi.IContentSelection.Upto" data-throw-if-not-resolved="false"></xref> position of the current selection. Can be <code>null</code> if there is

    no row at that position (either because upto is invalid or the layout has not be fully generated yet).
  remarks: >-
    <p>

    This property can also be used to gain access to the <xref href="Sdl.DesktopEditor.EditorApi.ISegmentContainerNode" data-throw-if-not-resolved="false"></xref>

    and the <xref href="Sdl.DesktopEditor.EditorApi.IParagraphUnitContainerNode" data-throw-if-not-resolved="false"></xref> at the upto end of selection.

    </p>
  example: []
  syntax:
    content: IRowInfo UptoRow { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
    content.vb: ReadOnly Property UptoRow As IRowInfo
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.UptoRow*
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.FileAtActiveEnd
  commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.FileAtActiveEnd
  id: FileAtActiveEnd
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: FileAtActiveEnd
  nameWithType: IContentSelection.FileAtActiveEnd
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.FileAtActiveEnd
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Some editing operations should not work if the selection spans file boundaries.

    This method can be used for checking these condition.
  example: []
  syntax:
    content: IFileContainerNode FileAtActiveEnd { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IFileContainerNode
      description: The file container for the active end of the selection.
    content.vb: ReadOnly Property FileAtActiveEnd As IFileContainerNode
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.FileAtActiveEnd*
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.FileAtNonactiveEnd
  commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.FileAtNonactiveEnd
  id: FileAtNonactiveEnd
  parent: Sdl.DesktopEditor.EditorApi.IContentSelection
  langs:
  - csharp
  - vb
  name: FileAtNonactiveEnd
  nameWithType: IContentSelection.FileAtNonactiveEnd
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.FileAtNonactiveEnd
  type: Property
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: >-
    Some editing operations should not work if the selection spans file boundaries.

    This method can be used for checking these condition.
  example: []
  syntax:
    content: IFileContainerNode FileAtNonactiveEnd { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IFileContainerNode
      description: The file container for the non-active end of the selection.
    content.vb: ReadOnly Property FileAtNonactiveEnd As IFileContainerNode
  overload: Sdl.DesktopEditor.EditorApi.IContentSelection.FileAtNonactiveEnd*
references:
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.From
  commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.From
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_From
  name: From
  nameWithType: IContentSelection.From
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.From
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Upto
  commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.Upto
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_Upto
  name: Upto
  nameWithType: IContentSelection.Upto
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.Upto
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.IsEmpty
  commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.IsEmpty
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_IsEmpty
  name: IsEmpty
  nameWithType: IContentSelection.IsEmpty
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.IsEmpty
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom
  commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_CollapseToFrom
  name: CollapseToFrom()
  nameWithType: IContentSelection.CollapseToFrom()
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom
    name: CollapseToFrom
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_CollapseToFrom
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom
    name: CollapseToFrom
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_CollapseToFrom
  - name: (
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto
  commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_CollapseToUpto
  name: CollapseToUpto()
  nameWithType: IContentSelection.CollapseToUpto()
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto
    name: CollapseToUpto
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_CollapseToUpto
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto
    name: CollapseToUpto
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_CollapseToUpto
  - name: (
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.IsReversed
  commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.IsReversed
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_IsReversed
  name: IsReversed
  nameWithType: IContentSelection.IsReversed
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.IsReversed
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse
  commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_Reverse
  name: Reverse()
  nameWithType: IContentSelection.Reverse()
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse
    name: Reverse
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_Reverse
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse
    name: Reverse
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_Reverse
  - name: (
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize
  commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_Normalize
  name: Normalize()
  nameWithType: IContentSelection.Normalize()
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize
    name: Normalize
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_Normalize
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize
    name: Normalize
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_Normalize
  - name: (
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Move(Sdl.DesktopEditor.EditorApi.Move,System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.Move(Sdl.DesktopEditor.EditorApi.Move,System.Boolean)
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_Move_Sdl_DesktopEditor_EditorApi_Move_System_Boolean_
  name: Move(Move, bool)
  nameWithType: IContentSelection.Move(Move, bool)
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.Move(Sdl.DesktopEditor.EditorApi.Move, bool)
  nameWithType.vb: IContentSelection.Move(Move, Boolean)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IContentSelection.Move(Sdl.DesktopEditor.EditorApi.Move, Boolean)
  name.vb: Move(Move, Boolean)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Move(Sdl.DesktopEditor.EditorApi.Move,System.Boolean)
    name: Move
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_Move_Sdl_DesktopEditor_EditorApi_Move_System_Boolean_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.Move
    name: Move
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.Move.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Move(Sdl.DesktopEditor.EditorApi.Move,System.Boolean)
    name: Move
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_Move_Sdl_DesktopEditor_EditorApi_Move_System_Boolean_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.Move
    name: Move
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.Move.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position,System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position,System.Boolean)
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_MoveTo_Sdl_DesktopEditor_EditorApi_Position_System_Boolean_
  name: MoveTo(Position, bool)
  nameWithType: IContentSelection.MoveTo(Position, bool)
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position, bool)
  nameWithType.vb: IContentSelection.MoveTo(Position, Boolean)
  fullName.vb: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position, Boolean)
  name.vb: MoveTo(Position, Boolean)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position,System.Boolean)
    name: MoveTo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_MoveTo_Sdl_DesktopEditor_EditorApi_Position_System_Boolean_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.Position
    name: Position
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.Position.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo(Sdl.DesktopEditor.EditorApi.Position,System.Boolean)
    name: MoveTo
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_MoveTo_Sdl_DesktopEditor_EditorApi_Position_System_Boolean_
  - name: (
  - uid: Sdl.DesktopEditor.EditorApi.Position
    name: Position
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.Position.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.IsValid
  commentId: P:Sdl.DesktopEditor.EditorApi.IContentSelection.IsValid
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_IsValid
  name: IsValid
  nameWithType: IContentSelection.IsValid
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.IsValid
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.html
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.DesktopEditor
    name: DesktopEditor
    isExternal: true
    href: Sdl.DesktopEditor.html
  - name: .
  - uid: Sdl.DesktopEditor.EditorApi
    name: EditorApi
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.DesktopEditor
    name: DesktopEditor
    isExternal: true
    href: Sdl.DesktopEditor.html
  - name: .
  - uid: Sdl.DesktopEditor.EditorApi
    name: EditorApi
    isExternal: true
    href: Sdl.DesktopEditor.EditorApi.html
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  name: ForWindowFromFrameworkElement(object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Windows.Window
    name: Window
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.window
  - name: '>'
  - name: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Windows.Window
    name: Window
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.window
  - name: )
  - name: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  name: ForWindowFromFrameworkElement(object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Windows.Window
    name: Window
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.window
  - name: '>'
  - name: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html#Sdl_Desktop_Platform_Controls_Controls_WindowsControlUtils_ForWindowFromFrameworkElement_System_Object_System_Action_System_Windows_Window__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Windows.Window
    name: Window
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.window
  - name: )
  - name: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  href: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.html
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  href: Sdl.html
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Desktop
    name: Desktop
    isExternal: true
    href: Sdl.Desktop.html
  - name: .
  - uid: Sdl.Desktop.Platform
    name: Platform
    isExternal: true
    href: Sdl.Desktop.Platform.html
  - name: .
  - uid: Sdl.Desktop.Platform.Controls
    name: Controls
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.html
  - name: .
  - uid: Sdl.Desktop.Platform.Controls.Controls
    name: Controls
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Desktop
    name: Desktop
    isExternal: true
    href: Sdl.Desktop.html
  - name: .
  - uid: Sdl.Desktop.Platform
    name: Platform
    isExternal: true
    href: Sdl.Desktop.Platform.html
  - name: .
  - uid: Sdl.Desktop.Platform.Controls
    name: Controls
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.html
  - name: .
  - uid: Sdl.Desktop.Platform.Controls.Controls
    name: Controls
    isExternal: true
    href: Sdl.Desktop.Platform.Controls.Controls.html
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Contains*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.Contains
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_Contains_Sdl_DesktopEditor_EditorApi_Position_
  name: Contains
  nameWithType: IContentSelection.Contains
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.Contains
- uid: Sdl.DesktopEditor.EditorApi.Position
  commentId: T:Sdl.DesktopEditor.EditorApi.Position
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.Position.html
  name: Position
  nameWithType: Position
  fullName: Sdl.DesktopEditor.EditorApi.Position
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.ScrollIntoView*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.ScrollIntoView
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_ScrollIntoView
  name: ScrollIntoView
  nameWithType: IContentSelection.ScrollIntoView
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.ScrollIntoView
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_CollapseToFrom
  name: CollapseToFrom
  nameWithType: IContentSelection.CollapseToFrom
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToFrom
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_CollapseToUpto
  name: CollapseToUpto
  nameWithType: IContentSelection.CollapseToUpto
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.CollapseToUpto
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_Reverse
  name: Reverse
  nameWithType: IContentSelection.Reverse
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.Reverse
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_Normalize
  name: Normalize
  nameWithType: IContentSelection.Normalize
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.Normalize
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Move*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.Move
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_Move_Sdl_DesktopEditor_EditorApi_Move_System_Boolean_
  name: Move
  nameWithType: IContentSelection.Move
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.Move
- uid: Sdl.DesktopEditor.EditorApi.Move
  commentId: T:Sdl.DesktopEditor.EditorApi.Move
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.Move.html
  name: Move
  nameWithType: Move
  fullName: Sdl.DesktopEditor.EditorApi.Move
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_MoveTo_Sdl_DesktopEditor_EditorApi_Position_System_Boolean_
  name: MoveTo
  nameWithType: IContentSelection.MoveTo
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.MoveTo
- uid: Sdl.DesktopEditor.EditorApi.ContentRange
  commentId: T:Sdl.DesktopEditor.EditorApi.ContentRange
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.ContentRange.html
  name: ContentRange
  nameWithType: ContentRange
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Control*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.Control
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_Control
  name: Control
  nameWithType: IContentSelection.Control
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.Control
- uid: Sdl.DesktopEditor.EditorApi.IEditControl
  commentId: T:Sdl.DesktopEditor.EditorApi.IEditControl
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IEditControl.html
  name: IEditControl
  nameWithType: IEditControl
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.IsEmpty*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.IsEmpty
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_IsEmpty
  name: IsEmpty
  nameWithType: IContentSelection.IsEmpty
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.IsEmpty
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.IsReversed*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.IsReversed
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_IsReversed
  name: IsReversed
  nameWithType: IContentSelection.IsReversed
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.IsReversed
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.IsValid*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.IsValid
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_IsValid
  name: IsValid
  nameWithType: IContentSelection.IsValid
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.IsValid
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.From*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.From
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_From
  name: From
  nameWithType: IContentSelection.From
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.From
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.Upto*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.Upto
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_Upto
  name: Upto
  nameWithType: IContentSelection.Upto
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.Upto
- uid: Sdl.DesktopEditor.EditorApi.ISegmentContainerNode
  commentId: T:Sdl.DesktopEditor.EditorApi.ISegmentContainerNode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.ISegmentContainerNode.html
  name: ISegmentContainerNode
  nameWithType: ISegmentContainerNode
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentContainerNode
- uid: Sdl.DesktopEditor.EditorApi.IParagraphUnitContainerNode
  commentId: T:Sdl.DesktopEditor.EditorApi.IParagraphUnitContainerNode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IParagraphUnitContainerNode.html
  name: IParagraphUnitContainerNode
  nameWithType: IParagraphUnitContainerNode
  fullName: Sdl.DesktopEditor.EditorApi.IParagraphUnitContainerNode
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.FromRow*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.FromRow
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_FromRow
  name: FromRow
  nameWithType: IContentSelection.FromRow
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.FromRow
- uid: Sdl.DesktopEditor.EditorApi.IRowInfo
  commentId: T:Sdl.DesktopEditor.EditorApi.IRowInfo
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IRowInfo.html
  name: IRowInfo
  nameWithType: IRowInfo
  fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.UptoRow*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.UptoRow
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_UptoRow
  name: UptoRow
  nameWithType: IContentSelection.UptoRow
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.UptoRow
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.FileAtActiveEnd*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.FileAtActiveEnd
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_FileAtActiveEnd
  name: FileAtActiveEnd
  nameWithType: IContentSelection.FileAtActiveEnd
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.FileAtActiveEnd
- uid: Sdl.DesktopEditor.EditorApi.IFileContainerNode
  commentId: T:Sdl.DesktopEditor.EditorApi.IFileContainerNode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IFileContainerNode.html
  name: IFileContainerNode
  nameWithType: IFileContainerNode
  fullName: Sdl.DesktopEditor.EditorApi.IFileContainerNode
- uid: Sdl.DesktopEditor.EditorApi.IContentSelection.FileAtNonactiveEnd*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IContentSelection.FileAtNonactiveEnd
  isExternal: true
  href: Sdl.DesktopEditor.EditorApi.IContentSelection.html#Sdl_DesktopEditor_EditorApi_IContentSelection_FileAtNonactiveEnd
  name: FileAtNonactiveEnd
  nameWithType: IContentSelection.FileAtNonactiveEnd
  fullName: Sdl.DesktopEditor.EditorApi.IContentSelection.FileAtNonactiveEnd
