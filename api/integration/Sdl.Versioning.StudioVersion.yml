### YamlMime:ManagedReference
items:
- uid: Sdl.Versioning.StudioVersion
  commentId: T:Sdl.Versioning.StudioVersion
  id: StudioVersion
  parent: Sdl.Versioning
  children:
  - Sdl.Versioning.StudioVersion.#ctor
  - Sdl.Versioning.StudioVersion.BaseProductName
  - Sdl.Versioning.StudioVersion.Company
  - Sdl.Versioning.StudioVersion.Edition
  - Sdl.Versioning.StudioVersion.ExecutableVersion
  - Sdl.Versioning.StudioVersion.InstallPath
  - Sdl.Versioning.StudioVersion.PluginPackagePath
  - Sdl.Versioning.StudioVersion.PluginUnpackPath
  - Sdl.Versioning.StudioVersion.PublicVersion
  - Sdl.Versioning.StudioVersion.ShortVersion
  - Sdl.Versioning.StudioVersion.StudioDocumentsFolderName
  - Sdl.Versioning.StudioVersion.ToString
  - Sdl.Versioning.StudioVersion.Version
  langs:
  - csharp
  - vb
  name: StudioVersion
  nameWithType: StudioVersion
  fullName: Sdl.Versioning.StudioVersion
  type: Class
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nThis class hold details specific to a Studio version\n"
  syntax:
    content: public class StudioVersion
    content.vb: Public Class StudioVersion
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Versioning.StudioVersion.ToString
  commentId: M:Sdl.Versioning.StudioVersion.ToString
  id: ToString
  parent: Sdl.Versioning.StudioVersion
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: StudioVersion.ToString()
  fullName: Sdl.Versioning.StudioVersion.ToString()
  type: Method
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sdl.Versioning.StudioVersion.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.Versioning.StudioVersion.#ctor
  commentId: M:Sdl.Versioning.StudioVersion.#ctor
  id: '#ctor'
  parent: Sdl.Versioning.StudioVersion
  langs:
  - csharp
  - vb
  name: StudioVersion()
  nameWithType: StudioVersion.StudioVersion()
  fullName: Sdl.Versioning.StudioVersion.StudioVersion()
  type: Constructor
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  syntax:
    content: public StudioVersion()
    content.vb: Public Sub New
  overload: Sdl.Versioning.StudioVersion.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Versioning.StudioVersion.Version
  commentId: P:Sdl.Versioning.StudioVersion.Version
  id: Version
  parent: Sdl.Versioning.StudioVersion
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: StudioVersion.Version
  fullName: Sdl.Versioning.StudioVersion.Version
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nThe product version string e.g. studio16Beta\n"
  syntax:
    content: public string Version { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Version As String
  overload: Sdl.Versioning.StudioVersion.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Versioning.StudioVersion.PublicVersion
  commentId: P:Sdl.Versioning.StudioVersion.PublicVersion
  id: PublicVersion
  parent: Sdl.Versioning.StudioVersion
  langs:
  - csharp
  - vb
  name: PublicVersion
  nameWithType: StudioVersion.PublicVersion
  fullName: Sdl.Versioning.StudioVersion.PublicVersion
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nThe public version e.g.&quot;Trados Studio 2022&quot;\n"
  syntax:
    content: public string PublicVersion { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PublicVersion As String
  overload: Sdl.Versioning.StudioVersion.PublicVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Versioning.StudioVersion.InstallPath
  commentId: P:Sdl.Versioning.StudioVersion.InstallPath
  id: InstallPath
  parent: Sdl.Versioning.StudioVersion
  langs:
  - csharp
  - vb
  name: InstallPath
  nameWithType: StudioVersion.InstallPath
  fullName: Sdl.Versioning.StudioVersion.InstallPath
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nThe installation location\n"
  syntax:
    content: public string InstallPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InstallPath As String
  overload: Sdl.Versioning.StudioVersion.InstallPath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Versioning.StudioVersion.ExecutableVersion
  commentId: P:Sdl.Versioning.StudioVersion.ExecutableVersion
  id: ExecutableVersion
  parent: Sdl.Versioning.StudioVersion
  langs:
  - csharp
  - vb
  name: ExecutableVersion
  nameWithType: StudioVersion.ExecutableVersion
  fullName: Sdl.Versioning.StudioVersion.ExecutableVersion
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nThe version of the Executable as a version type e.g. 16.0.0.1234\n"
  syntax:
    content: public Version ExecutableVersion { get; set; }
    parameters: []
    return:
      type: System.Version
    content.vb: Public Property ExecutableVersion As Version
  overload: Sdl.Versioning.StudioVersion.ExecutableVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Versioning.StudioVersion.BaseProductName
  commentId: P:Sdl.Versioning.StudioVersion.BaseProductName
  id: BaseProductName
  parent: Sdl.Versioning.StudioVersion
  langs:
  - csharp
  - vb
  name: BaseProductName
  nameWithType: StudioVersion.BaseProductName
  fullName: Sdl.Versioning.StudioVersion.BaseProductName
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nThe Name of the product with no qualifiers e.g. Trados Studio this is usually used as a neutral folder name\n"
  syntax:
    content: public string BaseProductName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property BaseProductName As String
  overload: Sdl.Versioning.StudioVersion.BaseProductName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Versioning.StudioVersion.PluginPackagePath
  commentId: P:Sdl.Versioning.StudioVersion.PluginPackagePath
  id: PluginPackagePath
  parent: Sdl.Versioning.StudioVersion
  langs:
  - csharp
  - vb
  name: PluginPackagePath
  nameWithType: StudioVersion.PluginPackagePath
  fullName: Sdl.Versioning.StudioVersion.PluginPackagePath
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nThe version dependent part of the plugin package location e.g 15 or 16 or 16Beta\n"
  syntax:
    content: public string PluginPackagePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PluginPackagePath As String
  overload: Sdl.Versioning.StudioVersion.PluginPackagePath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Versioning.StudioVersion.PluginUnpackPath
  commentId: P:Sdl.Versioning.StudioVersion.PluginUnpackPath
  id: PluginUnpackPath
  parent: Sdl.Versioning.StudioVersion
  langs:
  - csharp
  - vb
  name: PluginUnpackPath
  nameWithType: StudioVersion.PluginUnpackPath
  fullName: Sdl.Versioning.StudioVersion.PluginUnpackPath
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nThe version dependent part of the plugin contents when unpacked location e.g 15 or 16 or 16Beta\n"
  syntax:
    content: public string PluginUnpackPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PluginUnpackPath As String
  overload: Sdl.Versioning.StudioVersion.PluginUnpackPath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Versioning.StudioVersion.Edition
  commentId: P:Sdl.Versioning.StudioVersion.Edition
  id: Edition
  parent: Sdl.Versioning.StudioVersion
  langs:
  - csharp
  - vb
  name: Edition
  nameWithType: StudioVersion.Edition
  fullName: Sdl.Versioning.StudioVersion.Edition
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nThe current Studio edition e.g. blank or beta, nightly etc.\n"
  syntax:
    content: public string Edition { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Edition As String
  overload: Sdl.Versioning.StudioVersion.Edition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Versioning.StudioVersion.StudioDocumentsFolderName
  commentId: P:Sdl.Versioning.StudioVersion.StudioDocumentsFolderName
  id: StudioDocumentsFolderName
  parent: Sdl.Versioning.StudioVersion
  langs:
  - csharp
  - vb
  name: StudioDocumentsFolderName
  nameWithType: StudioVersion.StudioDocumentsFolderName
  fullName: Sdl.Versioning.StudioVersion.StudioDocumentsFolderName
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nThe Studio Documents folder name\n"
  syntax:
    content: public string StudioDocumentsFolderName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StudioDocumentsFolderName As String
  overload: Sdl.Versioning.StudioVersion.StudioDocumentsFolderName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Versioning.StudioVersion.ShortVersion
  commentId: P:Sdl.Versioning.StudioVersion.ShortVersion
  id: ShortVersion
  parent: Sdl.Versioning.StudioVersion
  langs:
  - csharp
  - vb
  name: ShortVersion
  nameWithType: StudioVersion.ShortVersion
  fullName: Sdl.Versioning.StudioVersion.ShortVersion
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nThe Studio short version e.g. 2021\n"
  syntax:
    content: public string ShortVersion { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ShortVersion As String
  overload: Sdl.Versioning.StudioVersion.ShortVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Versioning.StudioVersion.Company
  commentId: P:Sdl.Versioning.StudioVersion.Company
  id: Company
  parent: Sdl.Versioning.StudioVersion
  langs:
  - csharp
  - vb
  name: Company
  nameWithType: StudioVersion.Company
  fullName: Sdl.Versioning.StudioVersion.Company
  type: Property
  source:
    path: Sdl.Versioning
    isExternal: true
  assemblies:
  - Sdl.Versioning
  namespace: Sdl.Versioning
  summary: "\nThe publishing company of the Studio edition e.g. Sdl or Trados\n"
  syntax:
    content: public string Company { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Company As String
  overload: Sdl.Versioning.StudioVersion.Company*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.Versioning
  commentId: N:Sdl.Versioning
  isExternal: true
  name: Sdl.Versioning
  nameWithType: Sdl.Versioning
  fullName: Sdl.Versioning
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Versioning.StudioVersion.ToString*
  commentId: Overload:Sdl.Versioning.StudioVersion.ToString
  isExternal: true
  name: ToString
  nameWithType: StudioVersion.ToString
  fullName: Sdl.Versioning.StudioVersion.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Versioning.StudioVersion.#ctor*
  commentId: Overload:Sdl.Versioning.StudioVersion.#ctor
  isExternal: true
  name: StudioVersion
  nameWithType: StudioVersion.StudioVersion
  fullName: Sdl.Versioning.StudioVersion.StudioVersion
- uid: Sdl.Versioning.StudioVersion.Version*
  commentId: Overload:Sdl.Versioning.StudioVersion.Version
  isExternal: true
  name: Version
  nameWithType: StudioVersion.Version
  fullName: Sdl.Versioning.StudioVersion.Version
- uid: Sdl.Versioning.StudioVersion.PublicVersion*
  commentId: Overload:Sdl.Versioning.StudioVersion.PublicVersion
  isExternal: true
  name: PublicVersion
  nameWithType: StudioVersion.PublicVersion
  fullName: Sdl.Versioning.StudioVersion.PublicVersion
- uid: Sdl.Versioning.StudioVersion.InstallPath*
  commentId: Overload:Sdl.Versioning.StudioVersion.InstallPath
  isExternal: true
  name: InstallPath
  nameWithType: StudioVersion.InstallPath
  fullName: Sdl.Versioning.StudioVersion.InstallPath
- uid: Sdl.Versioning.StudioVersion.ExecutableVersion*
  commentId: Overload:Sdl.Versioning.StudioVersion.ExecutableVersion
  isExternal: true
  name: ExecutableVersion
  nameWithType: StudioVersion.ExecutableVersion
  fullName: Sdl.Versioning.StudioVersion.ExecutableVersion
- uid: System.Version
  commentId: T:System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: Sdl.Versioning.StudioVersion.BaseProductName*
  commentId: Overload:Sdl.Versioning.StudioVersion.BaseProductName
  isExternal: true
  name: BaseProductName
  nameWithType: StudioVersion.BaseProductName
  fullName: Sdl.Versioning.StudioVersion.BaseProductName
- uid: Sdl.Versioning.StudioVersion.PluginPackagePath*
  commentId: Overload:Sdl.Versioning.StudioVersion.PluginPackagePath
  isExternal: true
  name: PluginPackagePath
  nameWithType: StudioVersion.PluginPackagePath
  fullName: Sdl.Versioning.StudioVersion.PluginPackagePath
- uid: Sdl.Versioning.StudioVersion.PluginUnpackPath*
  commentId: Overload:Sdl.Versioning.StudioVersion.PluginUnpackPath
  isExternal: true
  name: PluginUnpackPath
  nameWithType: StudioVersion.PluginUnpackPath
  fullName: Sdl.Versioning.StudioVersion.PluginUnpackPath
- uid: Sdl.Versioning.StudioVersion.Edition*
  commentId: Overload:Sdl.Versioning.StudioVersion.Edition
  isExternal: true
  name: Edition
  nameWithType: StudioVersion.Edition
  fullName: Sdl.Versioning.StudioVersion.Edition
- uid: Sdl.Versioning.StudioVersion.StudioDocumentsFolderName*
  commentId: Overload:Sdl.Versioning.StudioVersion.StudioDocumentsFolderName
  isExternal: true
  name: StudioDocumentsFolderName
  nameWithType: StudioVersion.StudioDocumentsFolderName
  fullName: Sdl.Versioning.StudioVersion.StudioDocumentsFolderName
- uid: Sdl.Versioning.StudioVersion.ShortVersion*
  commentId: Overload:Sdl.Versioning.StudioVersion.ShortVersion
  isExternal: true
  name: ShortVersion
  nameWithType: StudioVersion.ShortVersion
  fullName: Sdl.Versioning.StudioVersion.ShortVersion
- uid: Sdl.Versioning.StudioVersion.Company*
  commentId: Overload:Sdl.Versioning.StudioVersion.Company
  isExternal: true
  name: Company
  nameWithType: StudioVersion.Company
  fullName: Sdl.Versioning.StudioVersion.Company
