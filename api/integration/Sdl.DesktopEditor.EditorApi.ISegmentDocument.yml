### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.ISegmentDocument
  commentId: T:Sdl.DesktopEditor.EditorApi.ISegmentDocument
  id: ISegmentDocument
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.ISegmentDocument.AppendText(System.String)
  - Sdl.DesktopEditor.EditorApi.ISegmentDocument.Clear
  - Sdl.DesktopEditor.EditorApi.ISegmentDocument.Content
  - Sdl.DesktopEditor.EditorApi.ISegmentDocument.Language
  - Sdl.DesktopEditor.EditorApi.ISegmentDocument.NotifyContentUpdated
  - Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceContentContainer(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  - Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithContentOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  - Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithText(System.String)
  langs:
  - csharp
  - vb
  name: ISegmentDocument
  nameWithType: ISegmentDocument
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentDocument
  type: Interface
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nData container used with <xref href=\"Sdl.DesktopEditor.EditorApi.ISegmentEditControl\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: 'public interface ISegmentDocument : IAbstractFrameworkDocument, IDocument, IDisposable'
    content.vb: >-
      Public Interface ISegmentDocument
          Inherits IAbstractFrameworkDocument, IDocument, IDisposable
  inheritedMembers:
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CreateDocumentFragment
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Copy
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CopyInternal(System.Boolean)
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.InsertSegment(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties,Sdl.DesktopEditor.EditorApi.ISegmentContainerNode)
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetMarkupDataRanges(Sdl.DesktopEditor.EditorApi.ContentRange)
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.MergeIdenticalNeighboringTags(Sdl.DesktopEditor.EditorApi.ContentRange)
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetNearestPosition(Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation)
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.RestoreGhostTags
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ItemFactory
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.PropertiesFactory
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.DocumentProperties
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ContentChanged
  - Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  - Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
  - Sdl.DesktopEditor.EditorApi.IDocument.Delete
  - Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText(System.Boolean)
  - Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange
  - Sdl.DesktopEditor.EditorApi.IDocument.RootContainer
  - Sdl.DesktopEditor.EditorApi.IDocument.IsDirty
  - Sdl.DesktopEditor.EditorApi.IDocument.UndoBuffer
  - Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted
  - Sdl.DesktopEditor.EditorApi.IDocument.EditOperationCompleting
  - Sdl.DesktopEditor.EditorApi.IDocument.EditOperationStarting
  - System.IDisposable.Dispose
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.DesktopEditor.EditorApi.ISegmentDocument.Clear
  commentId: M:Sdl.DesktopEditor.EditorApi.ISegmentDocument.Clear
  id: Clear
  parent: Sdl.DesktopEditor.EditorApi.ISegmentDocument
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ISegmentDocument.Clear()
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentDocument.Clear()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nRemove all content from the document.\n"
  remarks: "\n<p>\nThis will cause the undo buffer and the active range to be reset and all text marks to be cleared.\n</p>\n<p>\nAny associated edit controls are automatically updated.\n</p>\n"
  syntax:
    content: void Clear()
    content.vb: Sub Clear
  overload: Sdl.DesktopEditor.EditorApi.ISegmentDocument.Clear*
- uid: Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithContentOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  commentId: M:Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithContentOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  id: ReplaceWithContentOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  parent: Sdl.DesktopEditor.EditorApi.ISegmentDocument
  langs:
  - csharp
  - vb
  name: ReplaceWithContentOf(IAbstractMarkupDataContainer)
  nameWithType: ISegmentDocument.ReplaceWithContentOf(IAbstractMarkupDataContainer)
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithContentOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nReplace all content in the document.\n"
  remarks: "\n<p>\nThis will cause the undo buffer and the active range to be reset, all text marks will be cleared,\nand all document nodes will be re-generated. Any associated edit controls are automatically updated.\n</p>\n<p>\nNote that only the nodes inside the container will be cloned to become the new content, \nthe actual container will not. To replace the entire container (and not clone the content\nnodes), call <xref href=\"Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceContentContainer(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)\" data-throw-if-not-resolved=\"false\"></xref> instead.\n</p>\n"
  syntax:
    content: void ReplaceWithContentOf(IAbstractMarkupDataContainer newContent)
    parameters:
    - id: newContent
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
      description: >-
        Each item in this container will be duplicated into

        the document. The result can later be accessed through the <xref href="Sdl.DesktopEditor.EditorApi.ISegmentDocument.Content" data-throw-if-not-resolved="false"></xref> property,

        but should not be modified directly.
    content.vb: Sub ReplaceWithContentOf(newContent As IAbstractMarkupDataContainer)
  overload: Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithContentOf*
- uid: Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceContentContainer(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  commentId: M:Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceContentContainer(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  id: ReplaceContentContainer(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  parent: Sdl.DesktopEditor.EditorApi.ISegmentDocument
  langs:
  - csharp
  - vb
  name: ReplaceContentContainer(IAbstractMarkupDataContainer)
  nameWithType: ISegmentDocument.ReplaceContentContainer(IAbstractMarkupDataContainer)
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceContentContainer(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nReplace the current <xref href=\"Sdl.DesktopEditor.EditorApi.ISegmentDocument.Content\" data-throw-if-not-resolved=\"false\"></xref> of the document with a different container.\n"
  remarks: "\n<p>\nThis will cause the undo buffer and the active range to be reset, all text marks will be cleared,\nand all document nodes will be re-generated. Any associated edit controls are automatically updated.\n</p>\n<p>\nNote that all document nodes will be re-generated to reference the nodes in the specified\ncontainer rather than clones. This means that the edit control will from now on operate\ndirectly on the container and its content. It is therefore important that no changes are made\nto the container or its content without going through the edit control, or that <xref href=\"Sdl.DesktopEditor.EditorApi.ISegmentDocument.NotifyContentUpdated\" data-throw-if-not-resolved=\"false\"></xref>\nis called if that happens.\n</p>\n<xref href=\"Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithContentOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: void ReplaceContentContainer(IAbstractMarkupDataContainer newContainer)
    parameters:
    - id: newContainer
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
      description: "The markup data container that will become the new <xref href=\"Sdl.DesktopEditor.EditorApi.ISegmentDocument.Content\" data-throw-if-not-resolved=\"false\"></xref>\nof the segment document. This must be a container that can be inserted inside a paragraph unit. Thus it must \nimplement <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData\" data-throw-if-not-resolved=\"false\"></xref> and it must not already be part of another container (i.e. its Parent \nproperty must be <code>null</code>).\nThis parameter can not be <code>null</code>."
    content.vb: Sub ReplaceContentContainer(newContainer As IAbstractMarkupDataContainer)
  overload: Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceContentContainer*
- uid: Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithText(System.String)
  commentId: M:Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithText(System.String)
  id: ReplaceWithText(System.String)
  parent: Sdl.DesktopEditor.EditorApi.ISegmentDocument
  langs:
  - csharp
  - vb
  name: ReplaceWithText(String)
  nameWithType: ISegmentDocument.ReplaceWithText(String)
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithText(System.String)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nReplace the current content in the document with a single string of text.\n"
  remarks: "\n<p>\nThis will cause the undo buffer and the active range to be reset, all text marks will be cleared,\nand all document nodes will be re-generated. Any associated edit controls are automatically updated.\n</p>\n"
  syntax:
    content: void ReplaceWithText(string newText)
    parameters:
    - id: newText
      type: System.String
      description: The text to show in the control.
    content.vb: Sub ReplaceWithText(newText As String)
  overload: Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithText*
- uid: Sdl.DesktopEditor.EditorApi.ISegmentDocument.AppendText(System.String)
  commentId: M:Sdl.DesktopEditor.EditorApi.ISegmentDocument.AppendText(System.String)
  id: AppendText(System.String)
  parent: Sdl.DesktopEditor.EditorApi.ISegmentDocument
  langs:
  - csharp
  - vb
  name: AppendText(String)
  nameWithType: ISegmentDocument.AppendText(String)
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentDocument.AppendText(System.String)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nHandy shortcut to append a literal text string to the current content of the document.\n"
  remarks: "\nAny associated edit controls are automatically updated.\n"
  syntax:
    content: void AppendText(string text)
    parameters:
    - id: text
      type: System.String
      description: The text to append to the current document content.
    content.vb: Sub AppendText(text As String)
  overload: Sdl.DesktopEditor.EditorApi.ISegmentDocument.AppendText*
- uid: Sdl.DesktopEditor.EditorApi.ISegmentDocument.NotifyContentUpdated
  commentId: M:Sdl.DesktopEditor.EditorApi.ISegmentDocument.NotifyContentUpdated
  id: NotifyContentUpdated
  parent: Sdl.DesktopEditor.EditorApi.ISegmentDocument
  langs:
  - csharp
  - vb
  name: NotifyContentUpdated()
  nameWithType: ISegmentDocument.NotifyContentUpdated()
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentDocument.NotifyContentUpdated()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nNotify the segment document implementation that <xref href=\"Sdl.DesktopEditor.EditorApi.ISegmentDocument.Content\" data-throw-if-not-resolved=\"false\"></xref> has been changed\n(other than through a call to another method in this interface).\n"
  remarks: "\n<p>\nCalling this method will cause all document content nodes to be re-generated from the \nmarkup data in the <xref href=\"Sdl.DesktopEditor.EditorApi.ISegmentDocument.Content\" data-throw-if-not-resolved=\"false\"></xref>. The active range, the undo-buffer, and all \ntext marks will be cleared and reset in the same way as if any of the other Replace methods had been called.\n</p>\n"
  syntax:
    content: void NotifyContentUpdated()
    content.vb: Sub NotifyContentUpdated
  overload: Sdl.DesktopEditor.EditorApi.ISegmentDocument.NotifyContentUpdated*
- uid: Sdl.DesktopEditor.EditorApi.ISegmentDocument.Content
  commentId: P:Sdl.DesktopEditor.EditorApi.ISegmentDocument.Content
  id: Content
  parent: Sdl.DesktopEditor.EditorApi.ISegmentDocument
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: ISegmentDocument.Content
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentDocument.Content
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe markup data content this document represents, typically a single segment.\n"
  remarks: "\n<p>\nIt is not recommended to change content in the container by directly accessing markup data items from this property.\nIf the content does change you must explicitly call <xref href=\"Sdl.DesktopEditor.EditorApi.ISegmentDocument.NotifyContentUpdated\" data-throw-if-not-resolved=\"false\"></xref> to re-generate document\nnodes from the content, reset the selection and update all edit controls. It is usually better to explicitly \ncall methods like <xref href=\"Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithContentOf(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Sdl.DesktopEditor.EditorApi.ISegmentDocument.AppendText(System.String)\" data-throw-if-not-resolved=\"false\"></xref> to update the document content.\n</p>\n<p>\nThis container instance can also be explicitly set by calling <xref href=\"Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceContentContainer(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer)\" data-throw-if-not-resolved=\"false\"></xref>, to make\nthe document operate directly on existing content.\n</p>\n"
  syntax:
    content: IAbstractMarkupDataContainer Content { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    content.vb: ReadOnly Property Content As IAbstractMarkupDataContainer
  overload: Sdl.DesktopEditor.EditorApi.ISegmentDocument.Content*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.ISegmentDocument.Language
  commentId: P:Sdl.DesktopEditor.EditorApi.ISegmentDocument.Language
  id: Language
  parent: Sdl.DesktopEditor.EditorApi.ISegmentDocument
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: ISegmentDocument.Language
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentDocument.Language
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe language of the content in the document. This is used by the edit control to determine\nright-to-left alignment and may affect the fonts used in the control.\n"
  syntax:
    content: Language Language { get; set; }
    parameters: []
    return:
      type: Sdl.Core.Globalization.Language
    content.vb: Property Language As Language
  overload: Sdl.DesktopEditor.EditorApi.ISegmentDocument.Language*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CreateDocumentFragment
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CreateDocumentFragment
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  isExternal: true
  name: CreateDocumentFragment()
  nameWithType: IAbstractFrameworkDocument.CreateDocumentFragment()
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CreateDocumentFragment()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CreateDocumentFragment
    name: CreateDocumentFragment
    nameWithType: IAbstractFrameworkDocument.CreateDocumentFragment
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CreateDocumentFragment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CreateDocumentFragment
    name: CreateDocumentFragment
    nameWithType: IAbstractFrameworkDocument.CreateDocumentFragment
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CreateDocumentFragment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Copy
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Copy
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  isExternal: true
  name: Copy()
  nameWithType: IAbstractFrameworkDocument.Copy()
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Copy()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Copy
    name: Copy
    nameWithType: IAbstractFrameworkDocument.Copy
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Copy
    name: Copy
    nameWithType: IAbstractFrameworkDocument.Copy
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CopyInternal(System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CopyInternal(System.Boolean)
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  isExternal: true
  name: CopyInternal(Boolean)
  nameWithType: IAbstractFrameworkDocument.CopyInternal(Boolean)
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CopyInternal(System.Boolean)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CopyInternal(System.Boolean)
    name: CopyInternal
    nameWithType: IAbstractFrameworkDocument.CopyInternal
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CopyInternal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CopyInternal(System.Boolean)
    name: CopyInternal
    nameWithType: IAbstractFrameworkDocument.CopyInternal
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CopyInternal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  isExternal: true
  name: Replace(IDocumentFragment)
  nameWithType: IAbstractFrameworkDocument.Replace(IDocumentFragment)
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
    name: Replace
    nameWithType: IAbstractFrameworkDocument.Replace
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Replace
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IDocumentFragment
    name: IDocumentFragment
    nameWithType: IDocumentFragment
    fullName: Sdl.DesktopEditor.EditorApi.IDocumentFragment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
    name: Replace
    nameWithType: IAbstractFrameworkDocument.Replace
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Replace
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IDocumentFragment
    name: IDocumentFragment
    nameWithType: IDocumentFragment
    fullName: Sdl.DesktopEditor.EditorApi.IDocumentFragment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.InsertSegment(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties,Sdl.DesktopEditor.EditorApi.ISegmentContainerNode)
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.InsertSegment(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties,Sdl.DesktopEditor.EditorApi.ISegmentContainerNode)
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  isExternal: true
  name: InsertSegment(ISegmentPairProperties, ISegmentContainerNode)
  nameWithType: IAbstractFrameworkDocument.InsertSegment(ISegmentPairProperties, ISegmentContainerNode)
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.InsertSegment(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties, Sdl.DesktopEditor.EditorApi.ISegmentContainerNode)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.InsertSegment(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties,Sdl.DesktopEditor.EditorApi.ISegmentContainerNode)
    name: InsertSegment
    nameWithType: IAbstractFrameworkDocument.InsertSegment
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.InsertSegment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
    name: ISegmentPairProperties
    nameWithType: ISegmentPairProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.ISegmentContainerNode
    name: ISegmentContainerNode
    nameWithType: ISegmentContainerNode
    fullName: Sdl.DesktopEditor.EditorApi.ISegmentContainerNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.InsertSegment(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties,Sdl.DesktopEditor.EditorApi.ISegmentContainerNode)
    name: InsertSegment
    nameWithType: IAbstractFrameworkDocument.InsertSegment
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.InsertSegment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
    name: ISegmentPairProperties
    nameWithType: ISegmentPairProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.ISegmentContainerNode
    name: ISegmentContainerNode
    nameWithType: ISegmentContainerNode
    fullName: Sdl.DesktopEditor.EditorApi.ISegmentContainerNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetMarkupDataRanges(Sdl.DesktopEditor.EditorApi.ContentRange)
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetMarkupDataRanges(Sdl.DesktopEditor.EditorApi.ContentRange)
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  isExternal: true
  name: GetMarkupDataRanges(ContentRange)
  nameWithType: IAbstractFrameworkDocument.GetMarkupDataRanges(ContentRange)
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetMarkupDataRanges(Sdl.DesktopEditor.EditorApi.ContentRange)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetMarkupDataRanges(Sdl.DesktopEditor.EditorApi.ContentRange)
    name: GetMarkupDataRanges
    nameWithType: IAbstractFrameworkDocument.GetMarkupDataRanges
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetMarkupDataRanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.ContentRange
    name: ContentRange
    nameWithType: ContentRange
    fullName: Sdl.DesktopEditor.EditorApi.ContentRange
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetMarkupDataRanges(Sdl.DesktopEditor.EditorApi.ContentRange)
    name: GetMarkupDataRanges
    nameWithType: IAbstractFrameworkDocument.GetMarkupDataRanges
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetMarkupDataRanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.ContentRange
    name: ContentRange
    nameWithType: ContentRange
    fullName: Sdl.DesktopEditor.EditorApi.ContentRange
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.MergeIdenticalNeighboringTags(Sdl.DesktopEditor.EditorApi.ContentRange)
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.MergeIdenticalNeighboringTags(Sdl.DesktopEditor.EditorApi.ContentRange)
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  isExternal: true
  name: MergeIdenticalNeighboringTags(ContentRange)
  nameWithType: IAbstractFrameworkDocument.MergeIdenticalNeighboringTags(ContentRange)
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.MergeIdenticalNeighboringTags(Sdl.DesktopEditor.EditorApi.ContentRange)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.MergeIdenticalNeighboringTags(Sdl.DesktopEditor.EditorApi.ContentRange)
    name: MergeIdenticalNeighboringTags
    nameWithType: IAbstractFrameworkDocument.MergeIdenticalNeighboringTags
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.MergeIdenticalNeighboringTags
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.ContentRange
    name: ContentRange
    nameWithType: ContentRange
    fullName: Sdl.DesktopEditor.EditorApi.ContentRange
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.MergeIdenticalNeighboringTags(Sdl.DesktopEditor.EditorApi.ContentRange)
    name: MergeIdenticalNeighboringTags
    nameWithType: IAbstractFrameworkDocument.MergeIdenticalNeighboringTags
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.MergeIdenticalNeighboringTags
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.ContentRange
    name: ContentRange
    nameWithType: ContentRange
    fullName: Sdl.DesktopEditor.EditorApi.ContentRange
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetNearestPosition(Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation)
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetNearestPosition(Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation)
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  isExternal: true
  name: GetNearestPosition(IMessageLocation)
  nameWithType: IAbstractFrameworkDocument.GetNearestPosition(IMessageLocation)
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetNearestPosition(Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetNearestPosition(Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation)
    name: GetNearestPosition
    nameWithType: IAbstractFrameworkDocument.GetNearestPosition
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetNearestPosition
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation
    name: IMessageLocation
    nameWithType: IMessageLocation
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetNearestPosition(Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation)
    name: GetNearestPosition
    nameWithType: IAbstractFrameworkDocument.GetNearestPosition
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetNearestPosition
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation
    name: IMessageLocation
    nameWithType: IMessageLocation
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.RestoreGhostTags
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.RestoreGhostTags
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  isExternal: true
  name: RestoreGhostTags()
  nameWithType: IAbstractFrameworkDocument.RestoreGhostTags()
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.RestoreGhostTags()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.RestoreGhostTags
    name: RestoreGhostTags
    nameWithType: IAbstractFrameworkDocument.RestoreGhostTags
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.RestoreGhostTags
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.RestoreGhostTags
    name: RestoreGhostTags
    nameWithType: IAbstractFrameworkDocument.RestoreGhostTags
    fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.RestoreGhostTags
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ItemFactory
  commentId: P:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ItemFactory
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  isExternal: true
  name: ItemFactory
  nameWithType: IAbstractFrameworkDocument.ItemFactory
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ItemFactory
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.PropertiesFactory
  commentId: P:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.PropertiesFactory
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  isExternal: true
  name: PropertiesFactory
  nameWithType: IAbstractFrameworkDocument.PropertiesFactory
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.PropertiesFactory
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.DocumentProperties
  commentId: P:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.DocumentProperties
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  isExternal: true
  name: DocumentProperties
  nameWithType: IAbstractFrameworkDocument.DocumentProperties
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.DocumentProperties
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ContentChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ContentChanged
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  isExternal: true
  name: ContentChanged
  nameWithType: IAbstractFrameworkDocument.ContentChanged
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ContentChanged
- uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  commentId: M:Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: MoveActiveRange(ContentRange)
  nameWithType: IDocument.MoveActiveRange(ContentRange)
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
    name: MoveActiveRange
    nameWithType: IDocument.MoveActiveRange
    fullName: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.ContentRange
    name: ContentRange
    nameWithType: ContentRange
    fullName: Sdl.DesktopEditor.EditorApi.ContentRange
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
    name: MoveActiveRange
    nameWithType: IDocument.MoveActiveRange
    fullName: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.ContentRange
    name: ContentRange
    nameWithType: ContentRange
    fullName: Sdl.DesktopEditor.EditorApi.ContentRange
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
  commentId: M:Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: MoveActiveRange(IContentSelection)
  nameWithType: IDocument.MoveActiveRange(IContentSelection)
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
    name: MoveActiveRange
    nameWithType: IDocument.MoveActiveRange
    fullName: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection
    name: IContentSelection
    nameWithType: IContentSelection
    fullName: Sdl.DesktopEditor.EditorApi.IContentSelection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
    name: MoveActiveRange
    nameWithType: IDocument.MoveActiveRange
    fullName: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection
    name: IContentSelection
    nameWithType: IContentSelection
    fullName: Sdl.DesktopEditor.EditorApi.IContentSelection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IDocument.Delete
  commentId: M:Sdl.DesktopEditor.EditorApi.IDocument.Delete
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: Delete()
  nameWithType: IDocument.Delete()
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.Delete()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.Delete
    name: Delete
    nameWithType: IDocument.Delete
    fullName: Sdl.DesktopEditor.EditorApi.IDocument.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.Delete
    name: Delete
    nameWithType: IDocument.Delete
    fullName: Sdl.DesktopEditor.EditorApi.IDocument.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText(System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText(System.Boolean)
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: CopyAsText(Boolean)
  nameWithType: IDocument.CopyAsText(Boolean)
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText(System.Boolean)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText(System.Boolean)
    name: CopyAsText
    nameWithType: IDocument.CopyAsText
    fullName: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText(System.Boolean)
    name: CopyAsText
    nameWithType: IDocument.CopyAsText
    fullName: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange
  commentId: P:Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: ActiveRange
  nameWithType: IDocument.ActiveRange
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange
- uid: Sdl.DesktopEditor.EditorApi.IDocument.RootContainer
  commentId: P:Sdl.DesktopEditor.EditorApi.IDocument.RootContainer
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: RootContainer
  nameWithType: IDocument.RootContainer
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.RootContainer
- uid: Sdl.DesktopEditor.EditorApi.IDocument.IsDirty
  commentId: P:Sdl.DesktopEditor.EditorApi.IDocument.IsDirty
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: IsDirty
  nameWithType: IDocument.IsDirty
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.IsDirty
- uid: Sdl.DesktopEditor.EditorApi.IDocument.UndoBuffer
  commentId: P:Sdl.DesktopEditor.EditorApi.IDocument.UndoBuffer
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: UndoBuffer
  nameWithType: IDocument.UndoBuffer
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.UndoBuffer
- uid: Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted
  commentId: E:Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: AfterEditOperationAborted
  nameWithType: IDocument.AfterEditOperationAborted
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted
- uid: Sdl.DesktopEditor.EditorApi.IDocument.EditOperationCompleting
  commentId: E:Sdl.DesktopEditor.EditorApi.IDocument.EditOperationCompleting
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: EditOperationCompleting
  nameWithType: IDocument.EditOperationCompleting
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.EditOperationCompleting
- uid: Sdl.DesktopEditor.EditorApi.IDocument.EditOperationStarting
  commentId: E:Sdl.DesktopEditor.EditorApi.IDocument.EditOperationStarting
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: EditOperationStarting
  nameWithType: IDocument.EditOperationStarting
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.EditOperationStarting
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  commentId: T:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IAbstractFrameworkDocument
  nameWithType: IAbstractFrameworkDocument
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
- uid: Sdl.DesktopEditor.EditorApi.IDocument
  commentId: T:Sdl.DesktopEditor.EditorApi.IDocument
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IDocument
  nameWithType: IDocument
  fullName: Sdl.DesktopEditor.EditorApi.IDocument
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.ISegmentDocument.Clear*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISegmentDocument.Clear
  isExternal: true
  name: Clear
  nameWithType: ISegmentDocument.Clear
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentDocument.Clear
- uid: Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithContentOf*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithContentOf
  isExternal: true
  name: ReplaceWithContentOf
  nameWithType: ISegmentDocument.ReplaceWithContentOf
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithContentOf
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  isExternal: true
  name: IAbstractMarkupDataContainer
  nameWithType: IAbstractMarkupDataContainer
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
- uid: Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceContentContainer*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceContentContainer
  isExternal: true
  name: ReplaceContentContainer
  nameWithType: ISegmentDocument.ReplaceContentContainer
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceContentContainer
- uid: Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithText*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithText
  isExternal: true
  name: ReplaceWithText
  nameWithType: ISegmentDocument.ReplaceWithText
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentDocument.ReplaceWithText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.DesktopEditor.EditorApi.ISegmentDocument.AppendText*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISegmentDocument.AppendText
  isExternal: true
  name: AppendText
  nameWithType: ISegmentDocument.AppendText
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentDocument.AppendText
- uid: Sdl.DesktopEditor.EditorApi.ISegmentDocument.NotifyContentUpdated*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISegmentDocument.NotifyContentUpdated
  isExternal: true
  name: NotifyContentUpdated
  nameWithType: ISegmentDocument.NotifyContentUpdated
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentDocument.NotifyContentUpdated
- uid: Sdl.DesktopEditor.EditorApi.ISegmentDocument.Content*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISegmentDocument.Content
  isExternal: true
  name: Content
  nameWithType: ISegmentDocument.Content
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentDocument.Content
- uid: Sdl.DesktopEditor.EditorApi.ISegmentDocument.Language*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ISegmentDocument.Language
  isExternal: true
  name: Language
  nameWithType: ISegmentDocument.Language
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentDocument.Language
- uid: Sdl.Core.Globalization.Language
  isExternal: true
  name: Language
  nameWithType: Language
  fullName: Sdl.Core.Globalization.Language
