### YamlMime:ManagedReference
items:
- uid: Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent
  commentId: T:Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent
  id: ExecuteExternalJobEvent
  parent: Sdl.Desktop.IntegrationApi.Jobs
  children:
  - Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent.#ctor(Sdl.Desktop.IntegrationApi.Jobs.IExternalJob)
  - Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent.Job
  langs:
  - csharp
  - vb
  name: ExecuteExternalJobEvent
  nameWithType: ExecuteExternalJobEvent
  fullName: Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent
  type: Class
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Jobs
  summary: "\nUsed for receiving job implementation through the API\n"
  syntax:
    content: public class ExecuteExternalJobEvent
    content.vb: Public Class ExecuteExternalJobEvent
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent.#ctor(Sdl.Desktop.IntegrationApi.Jobs.IExternalJob)
  commentId: M:Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent.#ctor(Sdl.Desktop.IntegrationApi.Jobs.IExternalJob)
  id: '#ctor(Sdl.Desktop.IntegrationApi.Jobs.IExternalJob)'
  parent: Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent
  langs:
  - csharp
  - vb
  name: ExecuteExternalJobEvent(IExternalJob)
  nameWithType: ExecuteExternalJobEvent.ExecuteExternalJobEvent(IExternalJob)
  fullName: Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent.ExecuteExternalJobEvent(Sdl.Desktop.IntegrationApi.Jobs.IExternalJob)
  type: Constructor
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Jobs
  summary: "\nConstructor \n"
  syntax:
    content: public ExecuteExternalJobEvent(IExternalJob job)
    parameters:
    - id: job
      type: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob
      description: Job to be executed
    content.vb: Public Sub New(job As IExternalJob)
  overload: Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent.Job
  commentId: P:Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent.Job
  id: Job
  parent: Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent
  langs:
  - csharp
  - vb
  name: Job
  nameWithType: ExecuteExternalJobEvent.Job
  fullName: Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent.Job
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi.Jobs
  summary: "\nThe external job to be executed by studio\n"
  syntax:
    content: public IExternalJob Job { get; }
    parameters: []
    return:
      type: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob
    content.vb: Public ReadOnly Property Job As IExternalJob
  overload: Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent.Job*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.Desktop.IntegrationApi.Jobs
  commentId: N:Sdl.Desktop.IntegrationApi.Jobs
  isExternal: true
  name: Sdl.Desktop.IntegrationApi.Jobs
  nameWithType: Sdl.Desktop.IntegrationApi.Jobs
  fullName: Sdl.Desktop.IntegrationApi.Jobs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent.#ctor*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent.#ctor
  isExternal: true
  name: ExecuteExternalJobEvent
  nameWithType: ExecuteExternalJobEvent.ExecuteExternalJobEvent
  fullName: Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent.ExecuteExternalJobEvent
- uid: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob
  commentId: T:Sdl.Desktop.IntegrationApi.Jobs.IExternalJob
  parent: Sdl.Desktop.IntegrationApi.Jobs
  isExternal: true
  name: IExternalJob
  nameWithType: IExternalJob
  fullName: Sdl.Desktop.IntegrationApi.Jobs.IExternalJob
- uid: Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent.Job*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent.Job
  isExternal: true
  name: Job
  nameWithType: ExecuteExternalJobEvent.Job
  fullName: Sdl.Desktop.IntegrationApi.Jobs.ExecuteExternalJobEvent.Job
