### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent
  id: CommentsChangedEvent
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  children:
  - Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.#ctor(Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentEventType,Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentScope,System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.IComment})
  - Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.Comments
  - Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.EventType
  - Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.Scope
  langs:
  - csharp
  - vb
  name: CommentsChangedEvent
  nameWithType: CommentsChangedEvent
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent
  type: Class
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  syntax:
    content: public class CommentsChangedEvent
    content.vb: Public Class CommentsChangedEvent
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.#ctor(Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentEventType,Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentScope,System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.IComment})
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.#ctor(Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentEventType,Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentScope,System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.IComment})
  id: '#ctor(Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentEventType,Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentScope,System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.IComment})'
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent
  langs:
  - csharp
  - vb
  name: CommentsChangedEvent(CommentsChangedEvent.CommentEventType, CommentsChangedEvent.CommentScope, IEnumerable<IComment>)
  nameWithType: CommentsChangedEvent.CommentsChangedEvent(CommentsChangedEvent.CommentEventType, CommentsChangedEvent.CommentScope, IEnumerable<IComment>)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentsChangedEvent(Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentEventType, Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentScope, System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.NativeApi.IComment>)
  type: Constructor
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  syntax:
    content: public CommentsChangedEvent(CommentsChangedEvent.CommentEventType eventType, CommentsChangedEvent.CommentScope scope, IEnumerable<IComment> comments)
    parameters:
    - id: eventType
      type: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentEventType
    - id: scope
      type: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentScope
    - id: comments
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.IComment}
    content.vb: Public Sub New(eventType As CommentsChangedEvent.CommentEventType, scope As CommentsChangedEvent.CommentScope, comments As IEnumerable(Of IComment))
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.#ctor*
  nameWithType.vb: CommentsChangedEvent.CommentsChangedEvent(CommentsChangedEvent.CommentEventType, CommentsChangedEvent.CommentScope, IEnumerable(Of IComment))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentsChangedEvent(Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentEventType, Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentScope, System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.NativeApi.IComment))
  name.vb: CommentsChangedEvent(CommentsChangedEvent.CommentEventType, CommentsChangedEvent.CommentScope, IEnumerable(Of IComment))
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.EventType
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.EventType
  id: EventType
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent
  langs:
  - csharp
  - vb
  name: EventType
  nameWithType: CommentsChangedEvent.EventType
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.EventType
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  syntax:
    content: public CommentsChangedEvent.CommentEventType EventType { get; }
    parameters: []
    return:
      type: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentEventType
    content.vb: Public ReadOnly Property EventType As CommentsChangedEvent.CommentEventType
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.EventType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.Scope
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.Scope
  id: Scope
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent
  langs:
  - csharp
  - vb
  name: Scope
  nameWithType: CommentsChangedEvent.Scope
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.Scope
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  syntax:
    content: public CommentsChangedEvent.CommentScope Scope { get; }
    parameters: []
    return:
      type: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentScope
    content.vb: Public ReadOnly Property Scope As CommentsChangedEvent.CommentScope
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.Scope*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.Comments
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.Comments
  id: Comments
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent
  langs:
  - csharp
  - vb
  name: Comments
  nameWithType: CommentsChangedEvent.Comments
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.Comments
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  syntax:
    content: public IEnumerable<IComment> Comments { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.IComment}
    content.vb: Public ReadOnly Property Comments As IEnumerable(Of IComment)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.Comments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  commentId: N:Sdl.TranslationStudioAutomation.IntegrationApi.Events
  isExternal: true
  name: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  nameWithType: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.#ctor*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.#ctor
  isExternal: true
  name: CommentsChangedEvent
  nameWithType: CommentsChangedEvent.CommentsChangedEvent
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentsChangedEvent
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentEventType
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentEventType
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  isExternal: true
  name: CommentsChangedEvent.CommentEventType
  nameWithType: CommentsChangedEvent.CommentEventType
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentEventType
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentScope
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentScope
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  isExternal: true
  name: CommentsChangedEvent.CommentScope
  nameWithType: CommentsChangedEvent.CommentScope
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.CommentScope
- uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.IComment}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.IComment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IComment>
  nameWithType: IEnumerable<IComment>
  fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.NativeApi.IComment>
  nameWithType.vb: IEnumerable(Of IComment)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.NativeApi.IComment)
  name.vb: IEnumerable(Of IComment)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IComment
    name: IComment
    nameWithType: IComment
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IComment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IComment
    name: IComment
    nameWithType: IComment
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IComment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.EventType*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.EventType
  isExternal: true
  name: EventType
  nameWithType: CommentsChangedEvent.EventType
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.EventType
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.Scope*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.Scope
  isExternal: true
  name: Scope
  nameWithType: CommentsChangedEvent.Scope
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.Scope
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.Comments*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.Comments
  isExternal: true
  name: Comments
  nameWithType: CommentsChangedEvent.Comments
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.CommentsChangedEvent.Comments
