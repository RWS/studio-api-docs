### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  commentId: T:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  id: IAbstractFrameworkDocument
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ContentChanged
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Copy
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CopyInternal(System.Boolean)
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CreateDocumentFragment
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.DocumentProperties
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetMarkupDataRanges(Sdl.DesktopEditor.EditorApi.ContentRange)
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetNearestPosition(Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation)
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.InsertSegment(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties,Sdl.DesktopEditor.EditorApi.ISegmentContainerNode)
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ItemFactory
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.MergeIdenticalNeighboringTags(Sdl.DesktopEditor.EditorApi.ContentRange)
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.PropertiesFactory
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  - Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.RestoreGhostTags
  langs:
  - csharp
  - vb
  name: IAbstractFrameworkDocument
  nameWithType: IAbstractFrameworkDocument
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  type: Interface
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nBase interface for documents used by filter framework specific edit controls.\n"
  syntax:
    content: 'public interface IAbstractFrameworkDocument : IDocument, IDisposable'
    content.vb: >-
      Public Interface IAbstractFrameworkDocument
          Inherits IDocument, IDisposable
  inheritedMembers:
  - Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  - Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
  - Sdl.DesktopEditor.EditorApi.IDocument.Delete
  - Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText(System.Boolean)
  - Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange
  - Sdl.DesktopEditor.EditorApi.IDocument.RootContainer
  - Sdl.DesktopEditor.EditorApi.IDocument.IsDirty
  - Sdl.DesktopEditor.EditorApi.IDocument.UndoBuffer
  - Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted
  - Sdl.DesktopEditor.EditorApi.IDocument.EditOperationCompleting
  - Sdl.DesktopEditor.EditorApi.IDocument.EditOperationStarting
  - System.IDisposable.Dispose
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CreateDocumentFragment
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CreateDocumentFragment
  id: CreateDocumentFragment
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  langs:
  - csharp
  - vb
  name: CreateDocumentFragment()
  nameWithType: IAbstractFrameworkDocument.CreateDocumentFragment()
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CreateDocumentFragment()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nCreates a new empty document fragment that can be used to insert\ncontent using e.g. the <xref href=\"Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  syntax:
    content: IDocumentFragment CreateDocumentFragment()
    return:
      type: Sdl.DesktopEditor.EditorApi.IDocumentFragment
      description: A new empty document fragment.
    content.vb: Function CreateDocumentFragment As IDocumentFragment
  overload: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CreateDocumentFragment*
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Copy
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Copy
  id: Copy
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  langs:
  - csharp
  - vb
  name: Copy()
  nameWithType: IAbstractFrameworkDocument.Copy()
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Copy()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nFilter framework specific version of <xref href=\"Sdl.DesktopEditor.EditorApi.IDocument.Copy\" data-throw-if-not-resolved=\"false\"></xref> that\nreturns a filter framework specific document fragment.\n"
  remarks: "\n<p>\nMay throw <code>Sdl.DesktopEditor.EditorApi.EditExeption</code> if the active range cannot \nbe copied (e.g. if it contains non-framework nodes or non-cloneable nodes such as Paragraph Units or files).\n</p>\n"
  syntax:
    content: IDocumentFragment Copy()
    return:
      type: Sdl.DesktopEditor.EditorApi.IDocumentFragment
      description: A document fragment containing a changeable copy of the active range.
    content.vb: Function Copy As IDocumentFragment
  overload: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Copy*
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CopyInternal(System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CopyInternal(System.Boolean)
  id: CopyInternal(System.Boolean)
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  langs:
  - csharp
  - vb
  name: CopyInternal(Boolean)
  nameWithType: IAbstractFrameworkDocument.CopyInternal(Boolean)
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CopyInternal(System.Boolean)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nReturns the document selection, allowing pre-extending it to include the revision marker.\n"
  syntax:
    content: IDocumentFragment CopyInternal(bool extendSelectionToIncludeRevision)
    parameters:
    - id: extendSelectionToIncludeRevision
      type: System.Boolean
    return:
      type: Sdl.DesktopEditor.EditorApi.IDocumentFragment
    content.vb: Function CopyInternal(extendSelectionToIncludeRevision As Boolean) As IDocumentFragment
  overload: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CopyInternal*
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  id: Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  langs:
  - csharp
  - vb
  name: Replace(IDocumentFragment)
  nameWithType: IAbstractFrameworkDocument.Replace(IDocumentFragment)
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Replace(Sdl.DesktopEditor.EditorApi.IDocumentFragment)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nReplace the content in the active range with the content of a filter framework specific \ndocument fragment.\n"
  syntax:
    content: void Replace(IDocumentFragment newContent)
    parameters:
    - id: newContent
      type: Sdl.DesktopEditor.EditorApi.IDocumentFragment
      description: The document fragment containing the content to replace in the active range.
    content.vb: Sub Replace(newContent As IDocumentFragment)
  overload: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Replace*
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.InsertSegment(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties,Sdl.DesktopEditor.EditorApi.ISegmentContainerNode)
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.InsertSegment(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties,Sdl.DesktopEditor.EditorApi.ISegmentContainerNode)
  id: InsertSegment(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties,Sdl.DesktopEditor.EditorApi.ISegmentContainerNode)
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  langs:
  - csharp
  - vb
  name: InsertSegment(ISegmentPairProperties, ISegmentContainerNode)
  nameWithType: IAbstractFrameworkDocument.InsertSegment(ISegmentPairProperties, ISegmentContainerNode)
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.InsertSegment(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties, Sdl.DesktopEditor.EditorApi.ISegmentContainerNode)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nInsert new empty segment after specified segment.\n"
  syntax:
    content: void InsertSegment(ISegmentPairProperties segmentPairProperties, ISegmentContainerNode afterSegment)
    parameters:
    - id: segmentPairProperties
      type: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
      description: >-
        Properties for the new segment pair, they must not use the

        same segment ID as any existing segment in the paragraph.
    - id: afterSegment
      type: Sdl.DesktopEditor.EditorApi.ISegmentContainerNode
      description: New segment will be inserted after this segment.
    content.vb: Sub InsertSegment(segmentPairProperties As ISegmentPairProperties, afterSegment As ISegmentContainerNode)
  overload: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.InsertSegment*
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetMarkupDataRanges(Sdl.DesktopEditor.EditorApi.ContentRange)
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetMarkupDataRanges(Sdl.DesktopEditor.EditorApi.ContentRange)
  id: GetMarkupDataRanges(Sdl.DesktopEditor.EditorApi.ContentRange)
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  langs:
  - csharp
  - vb
  name: GetMarkupDataRanges(ContentRange)
  nameWithType: IAbstractFrameworkDocument.GetMarkupDataRanges(ContentRange)
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetMarkupDataRanges(Sdl.DesktopEditor.EditorApi.ContentRange)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nUse this method to find all non-empty sub-ranges for a range where each sub-range\nspans only markup data nodes with a common parent.\n"
  remarks: "\n<p>\nFor example, this is used when applying a QuickTag or comment across multiple segments or tag pairs,\nwhere the main range may start in one container and end in another. Simply call\nthis method for the main range and then apply the QuickTag (or comment) to each of the\nsub-ranges returned.\n</p>\n<example>\nThe following example shows how to apply a QuickTag to all markup data content in a range,\nno matter whether the range spans paragraph units or segments.\n<pre><code>void ApplyQuickTag(IFrameworkDocument document, ContentRange range, IQuickTag quickTag)\n{\n    foreach (ContentRange subRange in document.GetMarkupDataRanges(range))\n    {\n        document.ActiveRange = subRange;\n        document.ApplyQuickTagToActiveRange(quickTag);\n    }\n}</code></pre>\nNote that you would typically want to group such operations into a single Undo command,\ne.g. by calling <xref href=\"Sdl.DesktopEditor.EditorApi.IUndoBuffer.BeginCompositeOperation(System.String)\" data-throw-if-not-resolved=\"false\"></xref> and \n<xref href=\"Sdl.DesktopEditor.EditorApi.IUndoBuffer.EndCompositeOperation\" data-throw-if-not-resolved=\"false\"></xref>. One way to access\nthe undo buffer is through <xref href=\"Sdl.DesktopEditor.EditorApi.IDocument.UndoBuffer\" data-throw-if-not-resolved=\"false\"></xref>.\n</example>\n"
  syntax:
    content: List<ContentRange> GetMarkupDataRanges(ContentRange range)
    parameters:
    - id: range
      type: Sdl.DesktopEditor.EditorApi.ContentRange
      description: The range which the sub-ranges will be limited to.
    return:
      type: System.Collections.Generic.List{Sdl.DesktopEditor.EditorApi.ContentRange}
      description: >-
        A list with 0 or more sub-ranges where for each sub-range all content nodes are markup

        data nodes that have the same parent node.
    content.vb: Function GetMarkupDataRanges(range As ContentRange) As List(Of ContentRange)
  overload: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetMarkupDataRanges*
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.MergeIdenticalNeighboringTags(Sdl.DesktopEditor.EditorApi.ContentRange)
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.MergeIdenticalNeighboringTags(Sdl.DesktopEditor.EditorApi.ContentRange)
  id: MergeIdenticalNeighboringTags(Sdl.DesktopEditor.EditorApi.ContentRange)
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  langs:
  - csharp
  - vb
  name: MergeIdenticalNeighboringTags(ContentRange)
  nameWithType: IAbstractFrameworkDocument.MergeIdenticalNeighboringTags(ContentRange)
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.MergeIdenticalNeighboringTags(Sdl.DesktopEditor.EditorApi.ContentRange)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nFinds tag pairs in the specified range that are adjacent to each other and are the same.\nUnder these circumstances, the tag pairs can be merged.  This is useful when cleaning up\nsegments before updating the TM, for example.\n"
  syntax:
    content: void MergeIdenticalNeighboringTags(ContentRange range)
    parameters:
    - id: range
      type: Sdl.DesktopEditor.EditorApi.ContentRange
      description: The range to limit the operation to.
    content.vb: Sub MergeIdenticalNeighboringTags(range As ContentRange)
  overload: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.MergeIdenticalNeighboringTags*
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetNearestPosition(Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation)
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetNearestPosition(Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation)
  id: GetNearestPosition(Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation)
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  langs:
  - csharp
  - vb
  name: GetNearestPosition(IMessageLocation)
  nameWithType: IAbstractFrameworkDocument.GetNearestPosition(IMessageLocation)
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetNearestPosition(Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nReturns a position that is nearest to what the message location references,\nor <code>null</code> if no location could be determined.\n"
  remarks: "\nIf the location cannot be directly mapped (e.g. if the corresponding node \nis no longer available in the editor) the implementation will attempt \nto guess the position based on other available information.\n"
  syntax:
    content: Position GetNearestPosition(IMessageLocation messageLocation)
    parameters:
    - id: messageLocation
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation
      description: The message location that the document position is required for.
    return:
      type: Sdl.DesktopEditor.EditorApi.Position
      description: The nearest position that relates to the message location.
    content.vb: Function GetNearestPosition(messageLocation As IMessageLocation) As Position
  overload: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetNearestPosition*
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.RestoreGhostTags
  commentId: M:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.RestoreGhostTags
  id: RestoreGhostTags
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  langs:
  - csharp
  - vb
  name: RestoreGhostTags()
  nameWithType: IAbstractFrameworkDocument.RestoreGhostTags()
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.RestoreGhostTags()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nRestores any tags in the document&apos;s active range, converting them from ghost tags to normal tags.\n"
  syntax:
    content: void RestoreGhostTags()
    content.vb: Sub RestoreGhostTags
  overload: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.RestoreGhostTags*
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ItemFactory
  commentId: P:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ItemFactory
  id: ItemFactory
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  langs:
  - csharp
  - vb
  name: ItemFactory
  nameWithType: IAbstractFrameworkDocument.ItemFactory
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ItemFactory
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe factory used when new bilingual content items need to be created.\n"
  remarks: "\n"
  syntax:
    content: IDocumentItemFactory ItemFactory { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory
    content.vb: Property ItemFactory As IDocumentItemFactory
  overload: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ItemFactory*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.PropertiesFactory
  commentId: P:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.PropertiesFactory
  id: PropertiesFactory
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  langs:
  - csharp
  - vb
  name: PropertiesFactory
  nameWithType: IAbstractFrameworkDocument.PropertiesFactory
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.PropertiesFactory
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe factory used when new properties objects need to be created.\n"
  remarks: "\nThis is just a convenience getter that returns the <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory.PropertiesFactory\" data-throw-if-not-resolved=\"false\"></xref>\nof the <xref href=\"Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ItemFactory\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  syntax:
    content: IPropertiesFactory PropertiesFactory { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
    content.vb: ReadOnly Property PropertiesFactory As IPropertiesFactory
  overload: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.PropertiesFactory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.DocumentProperties
  commentId: P:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.DocumentProperties
  id: DocumentProperties
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  langs:
  - csharp
  - vb
  name: DocumentProperties
  nameWithType: IAbstractFrameworkDocument.DocumentProperties
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.DocumentProperties
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe filter framework properties for the document.\n"
  syntax:
    content: IDocumentProperties DocumentProperties { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
    content.vb: Property DocumentProperties As IDocumentProperties
  overload: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.DocumentProperties*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ContentChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ContentChanged
  id: ContentChanged
  parent: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument
  langs:
  - csharp
  - vb
  name: ContentChanged
  nameWithType: IAbstractFrameworkDocument.ContentChanged
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ContentChanged
  type: Event
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nFired when content in the document is changed in any way. Contains\ninformation about the exact changes made to the document.\n"
  remarks: "\n<p>\nThis event hides the <xref href=\"Sdl.DesktopEditor.EditorApi.IDocument.ContentChanged\" data-throw-if-not-resolved=\"false\"></xref> event, it\ncontains the same information plus the list of edit operations that\nwere executed on the document. These could be used to determine the\naffected content more precisely than would be possible with the affected range only.\n</p>\n<p>\nThis event is typcially fired immediately when the content is changed, which\ncan be before the controls displaying the content have been updated.\n</p>\n"
  syntax:
    content: event EventHandler<FrameworkDocumentContentChangedEventArgs> ContentChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs}
    content.vb: Event ContentChanged As EventHandler(Of FrameworkDocumentContentChangedEventArgs)
references:
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  commentId: M:Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: MoveActiveRange(ContentRange)
  nameWithType: IDocument.MoveActiveRange(ContentRange)
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
    name: MoveActiveRange
    nameWithType: IDocument.MoveActiveRange
    fullName: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.ContentRange
    name: ContentRange
    nameWithType: ContentRange
    fullName: Sdl.DesktopEditor.EditorApi.ContentRange
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.ContentRange)
    name: MoveActiveRange
    nameWithType: IDocument.MoveActiveRange
    fullName: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.ContentRange
    name: ContentRange
    nameWithType: ContentRange
    fullName: Sdl.DesktopEditor.EditorApi.ContentRange
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
  commentId: M:Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: MoveActiveRange(IContentSelection)
  nameWithType: IDocument.MoveActiveRange(IContentSelection)
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
    name: MoveActiveRange
    nameWithType: IDocument.MoveActiveRange
    fullName: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection
    name: IContentSelection
    nameWithType: IContentSelection
    fullName: Sdl.DesktopEditor.EditorApi.IContentSelection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange(Sdl.DesktopEditor.EditorApi.IContentSelection)
    name: MoveActiveRange
    nameWithType: IDocument.MoveActiveRange
    fullName: Sdl.DesktopEditor.EditorApi.IDocument.MoveActiveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IContentSelection
    name: IContentSelection
    nameWithType: IContentSelection
    fullName: Sdl.DesktopEditor.EditorApi.IContentSelection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IDocument.Delete
  commentId: M:Sdl.DesktopEditor.EditorApi.IDocument.Delete
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: Delete()
  nameWithType: IDocument.Delete()
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.Delete()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.Delete
    name: Delete
    nameWithType: IDocument.Delete
    fullName: Sdl.DesktopEditor.EditorApi.IDocument.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.Delete
    name: Delete
    nameWithType: IDocument.Delete
    fullName: Sdl.DesktopEditor.EditorApi.IDocument.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText(System.Boolean)
  commentId: M:Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText(System.Boolean)
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: CopyAsText(Boolean)
  nameWithType: IDocument.CopyAsText(Boolean)
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText(System.Boolean)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText(System.Boolean)
    name: CopyAsText
    nameWithType: IDocument.CopyAsText
    fullName: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText(System.Boolean)
    name: CopyAsText
    nameWithType: IDocument.CopyAsText
    fullName: Sdl.DesktopEditor.EditorApi.IDocument.CopyAsText
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange
  commentId: P:Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: ActiveRange
  nameWithType: IDocument.ActiveRange
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.ActiveRange
- uid: Sdl.DesktopEditor.EditorApi.IDocument.RootContainer
  commentId: P:Sdl.DesktopEditor.EditorApi.IDocument.RootContainer
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: RootContainer
  nameWithType: IDocument.RootContainer
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.RootContainer
- uid: Sdl.DesktopEditor.EditorApi.IDocument.IsDirty
  commentId: P:Sdl.DesktopEditor.EditorApi.IDocument.IsDirty
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: IsDirty
  nameWithType: IDocument.IsDirty
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.IsDirty
- uid: Sdl.DesktopEditor.EditorApi.IDocument.UndoBuffer
  commentId: P:Sdl.DesktopEditor.EditorApi.IDocument.UndoBuffer
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: UndoBuffer
  nameWithType: IDocument.UndoBuffer
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.UndoBuffer
- uid: Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted
  commentId: E:Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: AfterEditOperationAborted
  nameWithType: IDocument.AfterEditOperationAborted
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.AfterEditOperationAborted
- uid: Sdl.DesktopEditor.EditorApi.IDocument.EditOperationCompleting
  commentId: E:Sdl.DesktopEditor.EditorApi.IDocument.EditOperationCompleting
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: EditOperationCompleting
  nameWithType: IDocument.EditOperationCompleting
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.EditOperationCompleting
- uid: Sdl.DesktopEditor.EditorApi.IDocument.EditOperationStarting
  commentId: E:Sdl.DesktopEditor.EditorApi.IDocument.EditOperationStarting
  parent: Sdl.DesktopEditor.EditorApi.IDocument
  isExternal: true
  name: EditOperationStarting
  nameWithType: IDocument.EditOperationStarting
  fullName: Sdl.DesktopEditor.EditorApi.IDocument.EditOperationStarting
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.IDocument
  commentId: T:Sdl.DesktopEditor.EditorApi.IDocument
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IDocument
  nameWithType: IDocument
  fullName: Sdl.DesktopEditor.EditorApi.IDocument
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CreateDocumentFragment*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CreateDocumentFragment
  isExternal: true
  name: CreateDocumentFragment
  nameWithType: IAbstractFrameworkDocument.CreateDocumentFragment
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CreateDocumentFragment
- uid: Sdl.DesktopEditor.EditorApi.IDocumentFragment
  commentId: T:Sdl.DesktopEditor.EditorApi.IDocumentFragment
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IDocumentFragment
  nameWithType: IDocumentFragment
  fullName: Sdl.DesktopEditor.EditorApi.IDocumentFragment
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Copy*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Copy
  isExternal: true
  name: Copy
  nameWithType: IAbstractFrameworkDocument.Copy
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Copy
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CopyInternal*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CopyInternal
  isExternal: true
  name: CopyInternal
  nameWithType: IAbstractFrameworkDocument.CopyInternal
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.CopyInternal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Replace*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Replace
  isExternal: true
  name: Replace
  nameWithType: IAbstractFrameworkDocument.Replace
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.Replace
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.InsertSegment*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.InsertSegment
  isExternal: true
  name: InsertSegment
  nameWithType: IAbstractFrameworkDocument.InsertSegment
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.InsertSegment
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
  isExternal: true
  name: ISegmentPairProperties
  nameWithType: ISegmentPairProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
- uid: Sdl.DesktopEditor.EditorApi.ISegmentContainerNode
  commentId: T:Sdl.DesktopEditor.EditorApi.ISegmentContainerNode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: ISegmentContainerNode
  nameWithType: ISegmentContainerNode
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentContainerNode
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetMarkupDataRanges*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetMarkupDataRanges
  isExternal: true
  name: GetMarkupDataRanges
  nameWithType: IAbstractFrameworkDocument.GetMarkupDataRanges
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetMarkupDataRanges
- uid: Sdl.DesktopEditor.EditorApi.ContentRange
  commentId: T:Sdl.DesktopEditor.EditorApi.ContentRange
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: ContentRange
  nameWithType: ContentRange
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange
- uid: System.Collections.Generic.List{Sdl.DesktopEditor.EditorApi.ContentRange}
  commentId: T:System.Collections.Generic.List{Sdl.DesktopEditor.EditorApi.ContentRange}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ContentRange>
  nameWithType: List<ContentRange>
  fullName: System.Collections.Generic.List<Sdl.DesktopEditor.EditorApi.ContentRange>
  nameWithType.vb: List(Of ContentRange)
  fullName.vb: System.Collections.Generic.List(Of Sdl.DesktopEditor.EditorApi.ContentRange)
  name.vb: List(Of ContentRange)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.ContentRange
    name: ContentRange
    nameWithType: ContentRange
    fullName: Sdl.DesktopEditor.EditorApi.ContentRange
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.ContentRange
    name: ContentRange
    nameWithType: ContentRange
    fullName: Sdl.DesktopEditor.EditorApi.ContentRange
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.MergeIdenticalNeighboringTags*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.MergeIdenticalNeighboringTags
  isExternal: true
  name: MergeIdenticalNeighboringTags
  nameWithType: IAbstractFrameworkDocument.MergeIdenticalNeighboringTags
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.MergeIdenticalNeighboringTags
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetNearestPosition*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetNearestPosition
  isExternal: true
  name: GetNearestPosition
  nameWithType: IAbstractFrameworkDocument.GetNearestPosition
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.GetNearestPosition
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation
  commentId: '!:Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation'
  isExternal: true
  name: IMessageLocation
  nameWithType: IMessageLocation
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMessageLocation
- uid: Sdl.DesktopEditor.EditorApi.Position
  commentId: T:Sdl.DesktopEditor.EditorApi.Position
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Position
  nameWithType: Position
  fullName: Sdl.DesktopEditor.EditorApi.Position
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.RestoreGhostTags*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.RestoreGhostTags
  isExternal: true
  name: RestoreGhostTags
  nameWithType: IAbstractFrameworkDocument.RestoreGhostTags
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.RestoreGhostTags
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ItemFactory*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ItemFactory
  isExternal: true
  name: ItemFactory
  nameWithType: IAbstractFrameworkDocument.ItemFactory
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.ItemFactory
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory
  isExternal: true
  name: IDocumentItemFactory
  nameWithType: IDocumentItemFactory
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.PropertiesFactory*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.PropertiesFactory
  isExternal: true
  name: PropertiesFactory
  nameWithType: IAbstractFrameworkDocument.PropertiesFactory
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.PropertiesFactory
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
  isExternal: true
  name: IPropertiesFactory
  nameWithType: IPropertiesFactory
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
- uid: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.DocumentProperties*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.DocumentProperties
  isExternal: true
  name: DocumentProperties
  nameWithType: IAbstractFrameworkDocument.DocumentProperties
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractFrameworkDocument.DocumentProperties
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
  isExternal: true
  name: IDocumentProperties
  nameWithType: IDocumentProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<FrameworkDocumentContentChangedEventArgs>
  nameWithType: EventHandler<FrameworkDocumentContentChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs>
  nameWithType.vb: EventHandler(Of FrameworkDocumentContentChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs)
  name.vb: EventHandler(Of FrameworkDocumentContentChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs
    name: FrameworkDocumentContentChangedEventArgs
    nameWithType: FrameworkDocumentContentChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs
    name: FrameworkDocumentContentChangedEventArgs
    nameWithType: FrameworkDocumentContentChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
