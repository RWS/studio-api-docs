### YamlMime:ManagedReference
items:
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  commentId: T:Sdl.Core.FineGrainedAlignment.VocabularyFile3
  id: VocabularyFile3
  parent: Sdl.Core.FineGrainedAlignment
  children:
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.#ctor
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3._contiguousKeys
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3._Dirty
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3._KeyWordMap
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add(System.Int32,System.String)
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add(System.Int32,System.String,System.Int32)
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add(System.String)
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.Count
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dirty
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dump(System.IO.TextWriter)
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dump(System.String)
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIDs(System.Collections.Generic.IEnumerable{System.String})
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIntSegment(System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token})
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetStopwordIDs(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetTokenString(Sdl.LanguagePlatform.Core.Tokenization.Token)
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.HasAllSpecialIDs
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.Load
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.Lookup(System.Int32)
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.Lookup(System.String)
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupFull(System.Int32)
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupOrAdd(System.String)
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupSpecialTokenIDs
  - Sdl.Core.FineGrainedAlignment.VocabularyFile3.SpecialTokenIDs
  langs:
  - csharp
  - vb
  name: VocabularyFile3
  nameWithType: VocabularyFile3
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  type: Class
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: 'public abstract class VocabularyFile3 : Object'
    content.vb: >-
      Public MustInherit Class VocabularyFile3
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3._Dirty
  commentId: F:Sdl.Core.FineGrainedAlignment.VocabularyFile3._Dirty
  id: _Dirty
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: _Dirty
  nameWithType: VocabularyFile3._Dirty
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3._Dirty
  type: Field
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: protected bool _Dirty
    return:
      type: System.Boolean
    content.vb: Protected _Dirty As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3._KeyWordMap
  commentId: F:Sdl.Core.FineGrainedAlignment.VocabularyFile3._KeyWordMap
  id: _KeyWordMap
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: _KeyWordMap
  nameWithType: VocabularyFile3._KeyWordMap
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3._KeyWordMap
  type: Field
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: protected Dictionary<int, TokenWithCount> _KeyWordMap
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,Sdl.Core.FineGrainedAlignment.TokenWithCount}
    content.vb: Protected _KeyWordMap As Dictionary(Of Integer, TokenWithCount)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3._contiguousKeys
  commentId: F:Sdl.Core.FineGrainedAlignment.VocabularyFile3._contiguousKeys
  id: _contiguousKeys
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: _contiguousKeys
  nameWithType: VocabularyFile3._contiguousKeys
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3._contiguousKeys
  type: Field
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: protected bool _contiguousKeys
    return:
      type: System.Boolean
    content.vb: Protected _contiguousKeys As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.#ctor
  commentId: M:Sdl.Core.FineGrainedAlignment.VocabularyFile3.#ctor
  id: '#ctor'
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: VocabularyFile3()
  nameWithType: VocabularyFile3.VocabularyFile3()
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.VocabularyFile3()
  type: Constructor
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public VocabularyFile3()
    content.vb: Public Sub New
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Load
  commentId: M:Sdl.Core.FineGrainedAlignment.VocabularyFile3.Load
  id: Load
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: VocabularyFile3.Load()
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Load()
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public abstract void Load()
    content.vb: Public MustOverride Sub Load
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Load*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupSpecialTokenIDs
  commentId: M:Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupSpecialTokenIDs
  id: LookupSpecialTokenIDs
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: LookupSpecialTokenIDs()
  nameWithType: VocabularyFile3.LookupSpecialTokenIDs()
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupSpecialTokenIDs()
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: protected void LookupSpecialTokenIDs()
    content.vb: Protected Sub LookupSpecialTokenIDs
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupSpecialTokenIDs*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.HasAllSpecialIDs
  commentId: M:Sdl.Core.FineGrainedAlignment.VocabularyFile3.HasAllSpecialIDs
  id: HasAllSpecialIDs
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: HasAllSpecialIDs()
  nameWithType: VocabularyFile3.HasAllSpecialIDs()
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.HasAllSpecialIDs()
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public bool HasAllSpecialIDs()
    return:
      type: System.Boolean
    content.vb: Public Function HasAllSpecialIDs As Boolean
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.HasAllSpecialIDs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add(System.Int32,System.String)
  commentId: M:Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add(System.Int32,System.String)
  id: Add(System.Int32,System.String)
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: Add(Int32, String)
  nameWithType: VocabularyFile3.Add(Int32, String)
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add(System.Int32, System.String)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public void Add(int key, string s)
    parameters:
    - id: key
      type: System.Int32
    - id: s
      type: System.String
    content.vb: Public Sub Add(key As Integer, s As String)
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add(System.Int32,System.String,System.Int32)
  commentId: M:Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add(System.Int32,System.String,System.Int32)
  id: Add(System.Int32,System.String,System.Int32)
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: Add(Int32, String, Int32)
  nameWithType: VocabularyFile3.Add(Int32, String, Int32)
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add(System.Int32, System.String, System.Int32)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public void Add(int key, string s, int count)
    parameters:
    - id: key
      type: System.Int32
    - id: s
      type: System.String
    - id: count
      type: System.Int32
    content.vb: Public Sub Add(key As Integer, s As String, count As Integer)
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add(System.String)
  commentId: M:Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add(System.String)
  id: Add(System.String)
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: Add(String)
  nameWithType: VocabularyFile3.Add(String)
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add(System.String)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public int Add(string s)
    parameters:
    - id: s
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Function Add(s As String) As Integer
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Lookup(System.String)
  commentId: M:Sdl.Core.FineGrainedAlignment.VocabularyFile3.Lookup(System.String)
  id: Lookup(System.String)
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: Lookup(String)
  nameWithType: VocabularyFile3.Lookup(String)
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Lookup(System.String)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  summary: "\nLookup string s in the vocabulary. Returns -1 if not found. \n"
  syntax:
    content: public int Lookup(string s)
    parameters:
    - id: s
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Function Lookup(s As String) As Integer
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Lookup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIDs(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIDs(System.Collections.Generic.IEnumerable{System.String})
  id: GetIDs(System.Collections.Generic.IEnumerable{System.String})
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: GetIDs(IEnumerable<String>)
  nameWithType: VocabularyFile3.GetIDs(IEnumerable<String>)
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIDs(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  summary: "\nNOTE IDs are not in the order of the words but in order of the IDs\n"
  syntax:
    content: public List<int> GetIDs(IEnumerable<string> words)
    parameters:
    - id: words
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public Function GetIDs(words As IEnumerable(Of String)) As List(Of Integer)
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIDs*
  nameWithType.vb: VocabularyFile3.GetIDs(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIDs(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: GetIDs(IEnumerable(Of String))
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetStopwordIDs(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  commentId: M:Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetStopwordIDs(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  id: GetStopwordIDs(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: GetStopwordIDs(CultureInfo, IResourceDataAccessor)
  nameWithType: VocabularyFile3.GetStopwordIDs(CultureInfo, IResourceDataAccessor)
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetStopwordIDs(System.Globalization.CultureInfo, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public List<int> GetStopwordIDs(CultureInfo culture, IResourceDataAccessor accessor)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public Function GetStopwordIDs(culture As CultureInfo, accessor As IResourceDataAccessor) As List(Of Integer)
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetStopwordIDs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dump(System.String)
  commentId: M:Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dump(System.String)
  id: Dump(System.String)
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: Dump(String)
  nameWithType: VocabularyFile3.Dump(String)
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dump(System.String)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public void Dump(string fileName)
    parameters:
    - id: fileName
      type: System.String
    content.vb: Public Sub Dump(fileName As String)
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dump*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dump(System.IO.TextWriter)
  commentId: M:Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dump(System.IO.TextWriter)
  id: Dump(System.IO.TextWriter)
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: Dump(TextWriter)
  nameWithType: VocabularyFile3.Dump(TextWriter)
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dump(System.IO.TextWriter)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public void Dump(TextWriter wtr)
    parameters:
    - id: wtr
      type: System.IO.TextWriter
    content.vb: Public Sub Dump(wtr As TextWriter)
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dump*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupOrAdd(System.String)
  commentId: M:Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupOrAdd(System.String)
  id: LookupOrAdd(System.String)
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: LookupOrAdd(String)
  nameWithType: VocabularyFile3.LookupOrAdd(String)
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupOrAdd(System.String)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public virtual int LookupOrAdd(string s)
    parameters:
    - id: s
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Overridable Function LookupOrAdd(s As String) As Integer
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupOrAdd*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIntSegment(System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token})
  commentId: M:Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIntSegment(System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token})
  id: GetIntSegment(System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token})
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: GetIntSegment(List<Token>)
  nameWithType: VocabularyFile3.GetIntSegment(List<Token>)
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIntSegment(System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Tokenization.Token>)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  summary: "\nKeeps ID for unknown words (won&apos;t add)\n"
  syntax:
    content: public IntSegment GetIntSegment(List<Token> tokens)
    parameters:
    - id: tokens
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token}
    return:
      type: Sdl.LanguagePlatform.Stat.IntSegment
    content.vb: Public Function GetIntSegment(tokens As List(Of Token)) As IntSegment
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIntSegment*
  nameWithType.vb: VocabularyFile3.GetIntSegment(List(Of Token))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIntSegment(System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Tokenization.Token))
  name.vb: GetIntSegment(List(Of Token))
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetTokenString(Sdl.LanguagePlatform.Core.Tokenization.Token)
  commentId: M:Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetTokenString(Sdl.LanguagePlatform.Core.Tokenization.Token)
  id: GetTokenString(Sdl.LanguagePlatform.Core.Tokenization.Token)
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: GetTokenString(Token)
  nameWithType: VocabularyFile3.GetTokenString(Token)
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetTokenString(Sdl.LanguagePlatform.Core.Tokenization.Token)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public static string GetTokenString(Token t)
    parameters:
    - id: t
      type: Sdl.LanguagePlatform.Core.Tokenization.Token
    return:
      type: System.String
    content.vb: Public Shared Function GetTokenString(t As Token) As String
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetTokenString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Lookup(System.Int32)
  commentId: M:Sdl.Core.FineGrainedAlignment.VocabularyFile3.Lookup(System.Int32)
  id: Lookup(System.Int32)
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: Lookup(Int32)
  nameWithType: VocabularyFile3.Lookup(Int32)
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Lookup(System.Int32)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  summary: "\nLooks up the word with id key in the vocabulary. Returns null if not found. \n"
  syntax:
    content: public string Lookup(int key)
    parameters:
    - id: key
      type: System.Int32
      description: The key of the word to look up
    return:
      type: System.String
      description: The word, or null if not found
    content.vb: Public Function Lookup(key As Integer) As String
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Lookup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupFull(System.Int32)
  commentId: M:Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupFull(System.Int32)
  id: LookupFull(System.Int32)
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: LookupFull(Int32)
  nameWithType: VocabularyFile3.LookupFull(Int32)
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupFull(System.Int32)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public TokenWithCount LookupFull(int key)
    parameters:
    - id: key
      type: System.Int32
    return:
      type: Sdl.Core.FineGrainedAlignment.TokenWithCount
    content.vb: Public Function LookupFull(key As Integer) As TokenWithCount
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupFull*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Count
  commentId: P:Sdl.Core.FineGrainedAlignment.VocabularyFile3.Count
  id: Count
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: VocabularyFile3.Count
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Count
  type: Property
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.SpecialTokenIDs
  commentId: P:Sdl.Core.FineGrainedAlignment.VocabularyFile3.SpecialTokenIDs
  id: SpecialTokenIDs
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: SpecialTokenIDs
  nameWithType: VocabularyFile3.SpecialTokenIDs
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.SpecialTokenIDs
  type: Property
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public SpecialTokenIDs SpecialTokenIDs { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Stat.SpecialTokenIDs
    content.vb: Public ReadOnly Property SpecialTokenIDs As SpecialTokenIDs
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.SpecialTokenIDs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dirty
  commentId: P:Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dirty
  id: Dirty
  parent: Sdl.Core.FineGrainedAlignment.VocabularyFile3
  langs:
  - csharp
  - vb
  name: Dirty
  nameWithType: VocabularyFile3.Dirty
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dirty
  type: Property
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  summary: "\nTrue iff words were added since loading\n"
  syntax:
    content: public bool Dirty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Dirty As Boolean
  overload: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dirty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.Core.FineGrainedAlignment
  commentId: N:Sdl.Core.FineGrainedAlignment
  isExternal: true
  name: Sdl.Core.FineGrainedAlignment
  nameWithType: Sdl.Core.FineGrainedAlignment
  fullName: Sdl.Core.FineGrainedAlignment
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.Dictionary{System.Int32,Sdl.Core.FineGrainedAlignment.TokenWithCount}
  commentId: '!:System.Collections.Generic.Dictionary{System.Int32,Sdl.Core.FineGrainedAlignment.TokenWithCount}'
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Int32, TokenWithCount>
  nameWithType: Dictionary<Int32, TokenWithCount>
  fullName: System.Collections.Generic.Dictionary<System.Int32, Sdl.Core.FineGrainedAlignment.TokenWithCount>
  nameWithType.vb: Dictionary(Of Int32, TokenWithCount)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Int32, Sdl.Core.FineGrainedAlignment.TokenWithCount)
  name.vb: Dictionary(Of Int32, TokenWithCount)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.Core.FineGrainedAlignment.TokenWithCount
    name: TokenWithCount
    nameWithType: TokenWithCount
    fullName: Sdl.Core.FineGrainedAlignment.TokenWithCount
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.Core.FineGrainedAlignment.TokenWithCount
    name: TokenWithCount
    nameWithType: TokenWithCount
    fullName: Sdl.Core.FineGrainedAlignment.TokenWithCount
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: System.Collections.Generic.Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: System.Collections.Generic.Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.#ctor*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.VocabularyFile3.#ctor
  isExternal: true
  name: VocabularyFile3
  nameWithType: VocabularyFile3.VocabularyFile3
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.VocabularyFile3
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Load*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.VocabularyFile3.Load
  isExternal: true
  name: Load
  nameWithType: VocabularyFile3.Load
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Load
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupSpecialTokenIDs*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupSpecialTokenIDs
  isExternal: true
  name: LookupSpecialTokenIDs
  nameWithType: VocabularyFile3.LookupSpecialTokenIDs
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupSpecialTokenIDs
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.HasAllSpecialIDs*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.VocabularyFile3.HasAllSpecialIDs
  isExternal: true
  name: HasAllSpecialIDs
  nameWithType: VocabularyFile3.HasAllSpecialIDs
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.HasAllSpecialIDs
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add
  isExternal: true
  name: Add
  nameWithType: VocabularyFile3.Add
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Add
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Lookup*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.VocabularyFile3.Lookup
  isExternal: true
  name: Lookup
  nameWithType: VocabularyFile3.Lookup
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Lookup
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIDs*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIDs
  isExternal: true
  name: GetIDs
  nameWithType: VocabularyFile3.GetIDs
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIDs
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: '!:System.Collections.Generic.IEnumerable{System.String}'
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.Int32}
  commentId: '!:System.Collections.Generic.List{System.Int32}'
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetStopwordIDs*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetStopwordIDs
  isExternal: true
  name: GetStopwordIDs
  nameWithType: VocabularyFile3.GetStopwordIDs
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetStopwordIDs
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
  commentId: T:Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
  parent: Sdl.LanguagePlatform.Core.Resources
  isExternal: true
  name: IResourceDataAccessor
  nameWithType: IResourceDataAccessor
  fullName: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Sdl.LanguagePlatform.Core.Resources
  commentId: N:Sdl.LanguagePlatform.Core.Resources
  isExternal: true
  name: Sdl.LanguagePlatform.Core.Resources
  nameWithType: Sdl.LanguagePlatform.Core.Resources
  fullName: Sdl.LanguagePlatform.Core.Resources
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dump*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dump
  isExternal: true
  name: Dump
  nameWithType: VocabularyFile3.Dump
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dump
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupOrAdd*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupOrAdd
  isExternal: true
  name: LookupOrAdd
  nameWithType: VocabularyFile3.LookupOrAdd
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupOrAdd
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIntSegment*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIntSegment
  isExternal: true
  name: GetIntSegment
  nameWithType: VocabularyFile3.GetIntSegment
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetIntSegment
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token}
  commentId: '!:System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token}'
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Token>
  nameWithType: List<Token>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Tokenization.Token>
  nameWithType.vb: List(Of Token)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Tokenization.Token)
  name.vb: List(Of Token)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token
    name: Token
    nameWithType: Token
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token
    name: Token
    nameWithType: Token
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Stat.IntSegment
  isExternal: true
  name: IntSegment
  nameWithType: IntSegment
  fullName: Sdl.LanguagePlatform.Stat.IntSegment
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetTokenString*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetTokenString
  isExternal: true
  name: GetTokenString
  nameWithType: VocabularyFile3.GetTokenString
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.GetTokenString
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.Token
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Token
  nameWithType: Token
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token
- uid: Sdl.LanguagePlatform.Core.Tokenization
  commentId: N:Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Sdl.LanguagePlatform.Core.Tokenization
  nameWithType: Sdl.LanguagePlatform.Core.Tokenization
  fullName: Sdl.LanguagePlatform.Core.Tokenization
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupFull*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupFull
  isExternal: true
  name: LookupFull
  nameWithType: VocabularyFile3.LookupFull
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.LookupFull
- uid: Sdl.Core.FineGrainedAlignment.TokenWithCount
  commentId: T:Sdl.Core.FineGrainedAlignment.TokenWithCount
  parent: Sdl.Core.FineGrainedAlignment
  isExternal: true
  name: TokenWithCount
  nameWithType: TokenWithCount
  fullName: Sdl.Core.FineGrainedAlignment.TokenWithCount
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Count*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.VocabularyFile3.Count
  isExternal: true
  name: Count
  nameWithType: VocabularyFile3.Count
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Count
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.SpecialTokenIDs*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.VocabularyFile3.SpecialTokenIDs
  isExternal: true
  name: SpecialTokenIDs
  nameWithType: VocabularyFile3.SpecialTokenIDs
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.SpecialTokenIDs
- uid: Sdl.LanguagePlatform.Stat.SpecialTokenIDs
  commentId: '!:Sdl.LanguagePlatform.Stat.SpecialTokenIDs'
  isExternal: true
  name: SpecialTokenIDs
  nameWithType: SpecialTokenIDs
  fullName: Sdl.LanguagePlatform.Stat.SpecialTokenIDs
- uid: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dirty*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dirty
  isExternal: true
  name: Dirty
  nameWithType: VocabularyFile3.Dirty
  fullName: Sdl.Core.FineGrainedAlignment.VocabularyFile3.Dirty
