### YamlMime:ManagedReference
items:
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync
  commentId: T:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync
  id: IAlignableCorpusAsync
  parent: Sdl.Core.FineGrainedAlignment
  children:
  - Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetAlignedPredatedContentPairCountAsync(System.DateTime)
  - Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetAlignerDefinitionAsync
  - Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPairCountAsync
  - Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPairEnumeratorAsync
  - Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPostdatedContentPairCountAsync(System.DateTime)
  - Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetUnalignedCountAsync(System.Nullable{System.DateTime})
  - Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.Id
  - Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.SourceCulture
  - Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.TargetCulture
  langs:
  - csharp
  - vb
  name: IAlignableCorpusAsync
  nameWithType: IAlignableCorpusAsync
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync
  type: Interface
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public interface IAlignableCorpusAsync
    content.vb: Public Interface IAlignableCorpusAsync
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPairEnumeratorAsync
  commentId: M:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPairEnumeratorAsync
  id: GetPairEnumeratorAsync
  parent: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync
  langs:
  - csharp
  - vb
  name: GetPairEnumeratorAsync()
  nameWithType: IAlignableCorpusAsync.GetPairEnumeratorAsync()
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPairEnumeratorAsync()
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: Task<IPairEnumerator> GetPairEnumeratorAsync()
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.FineGrainedAlignment.IPairEnumerator}
    content.vb: Function GetPairEnumeratorAsync As Task(Of IPairEnumerator)
  overload: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPairEnumeratorAsync*
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetAlignerDefinitionAsync
  commentId: M:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetAlignerDefinitionAsync
  id: GetAlignerDefinitionAsync
  parent: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync
  langs:
  - csharp
  - vb
  name: GetAlignerDefinitionAsync()
  nameWithType: IAlignableCorpusAsync.GetAlignerDefinitionAsync()
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetAlignerDefinitionAsync()
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: Task<AlignerDefinition> GetAlignerDefinitionAsync()
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.FineGrainedAlignment.AlignerDefinition}
    content.vb: Function GetAlignerDefinitionAsync As Task(Of AlignerDefinition)
  overload: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetAlignerDefinitionAsync*
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetAlignedPredatedContentPairCountAsync(System.DateTime)
  commentId: M:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetAlignedPredatedContentPairCountAsync(System.DateTime)
  id: GetAlignedPredatedContentPairCountAsync(System.DateTime)
  parent: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync
  langs:
  - csharp
  - vb
  name: GetAlignedPredatedContentPairCountAsync(DateTime)
  nameWithType: IAlignableCorpusAsync.GetAlignedPredatedContentPairCountAsync(DateTime)
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetAlignedPredatedContentPairCountAsync(System.DateTime)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: Task<int> GetAlignedPredatedContentPairCountAsync(DateTime modelDate)
    parameters:
    - id: modelDate
      type: System.DateTime
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Function GetAlignedPredatedContentPairCountAsync(modelDate As DateTime) As Task(Of Integer)
  overload: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetAlignedPredatedContentPairCountAsync*
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetUnalignedCountAsync(System.Nullable{System.DateTime})
  commentId: M:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetUnalignedCountAsync(System.Nullable{System.DateTime})
  id: GetUnalignedCountAsync(System.Nullable{System.DateTime})
  parent: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync
  langs:
  - csharp
  - vb
  name: GetUnalignedCountAsync(Nullable<DateTime>)
  nameWithType: IAlignableCorpusAsync.GetUnalignedCountAsync(Nullable<DateTime>)
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetUnalignedCountAsync(System.Nullable<System.DateTime>)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: Task<int> GetUnalignedCountAsync(Nullable<DateTime> modelDate)
    parameters:
    - id: modelDate
      type: System.Nullable{System.DateTime}
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Function GetUnalignedCountAsync(modelDate As Nullable(Of DateTime)) As Task(Of Integer)
  overload: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetUnalignedCountAsync*
  nameWithType.vb: IAlignableCorpusAsync.GetUnalignedCountAsync(Nullable(Of DateTime))
  fullName.vb: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetUnalignedCountAsync(System.Nullable(Of System.DateTime))
  name.vb: GetUnalignedCountAsync(Nullable(Of DateTime))
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPostdatedContentPairCountAsync(System.DateTime)
  commentId: M:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPostdatedContentPairCountAsync(System.DateTime)
  id: GetPostdatedContentPairCountAsync(System.DateTime)
  parent: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync
  langs:
  - csharp
  - vb
  name: GetPostdatedContentPairCountAsync(DateTime)
  nameWithType: IAlignableCorpusAsync.GetPostdatedContentPairCountAsync(DateTime)
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPostdatedContentPairCountAsync(System.DateTime)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: Task<int> GetPostdatedContentPairCountAsync(DateTime modelDate)
    parameters:
    - id: modelDate
      type: System.DateTime
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Function GetPostdatedContentPairCountAsync(modelDate As DateTime) As Task(Of Integer)
  overload: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPostdatedContentPairCountAsync*
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPairCountAsync
  commentId: M:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPairCountAsync
  id: GetPairCountAsync
  parent: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync
  langs:
  - csharp
  - vb
  name: GetPairCountAsync()
  nameWithType: IAlignableCorpusAsync.GetPairCountAsync()
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPairCountAsync()
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: Task<int> GetPairCountAsync()
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Function GetPairCountAsync As Task(Of Integer)
  overload: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPairCountAsync*
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.Id
  commentId: P:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.Id
  id: Id
  parent: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IAlignableCorpusAsync.Id
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.Id
  type: Property
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: AlignableCorpusId Id { get; }
    parameters: []
    return:
      type: Sdl.Core.FineGrainedAlignment.AlignableCorpusId
    content.vb: ReadOnly Property Id As AlignableCorpusId
  overload: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.SourceCulture
  commentId: P:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.SourceCulture
  id: SourceCulture
  parent: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync
  langs:
  - csharp
  - vb
  name: SourceCulture
  nameWithType: IAlignableCorpusAsync.SourceCulture
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.SourceCulture
  type: Property
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: CultureCode SourceCulture { get; }
    parameters: []
    return:
      type: Sdl.Core.Globalization.CultureCode
    content.vb: ReadOnly Property SourceCulture As CultureCode
  overload: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.SourceCulture*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.TargetCulture
  commentId: P:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.TargetCulture
  id: TargetCulture
  parent: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync
  langs:
  - csharp
  - vb
  name: TargetCulture
  nameWithType: IAlignableCorpusAsync.TargetCulture
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.TargetCulture
  type: Property
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: CultureCode TargetCulture { get; }
    parameters: []
    return:
      type: Sdl.Core.Globalization.CultureCode
    content.vb: ReadOnly Property TargetCulture As CultureCode
  overload: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.TargetCulture*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.Core.FineGrainedAlignment
  commentId: N:Sdl.Core.FineGrainedAlignment
  isExternal: true
  name: Sdl.Core.FineGrainedAlignment
  nameWithType: Sdl.Core.FineGrainedAlignment
  fullName: Sdl.Core.FineGrainedAlignment
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPairEnumeratorAsync*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPairEnumeratorAsync
  isExternal: true
  name: GetPairEnumeratorAsync
  nameWithType: IAlignableCorpusAsync.GetPairEnumeratorAsync
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPairEnumeratorAsync
- uid: System.Threading.Tasks.Task{Sdl.Core.FineGrainedAlignment.IPairEnumerator}
  commentId: '!:System.Threading.Tasks.Task{Sdl.Core.FineGrainedAlignment.IPairEnumerator}'
  definition: System.Threading.Tasks.Task`1
  name: Task<IPairEnumerator>
  nameWithType: Task<IPairEnumerator>
  fullName: System.Threading.Tasks.Task<Sdl.Core.FineGrainedAlignment.IPairEnumerator>
  nameWithType.vb: Task(Of IPairEnumerator)
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.Core.FineGrainedAlignment.IPairEnumerator)
  name.vb: Task(Of IPairEnumerator)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Core.FineGrainedAlignment.IPairEnumerator
    name: IPairEnumerator
    nameWithType: IPairEnumerator
    fullName: Sdl.Core.FineGrainedAlignment.IPairEnumerator
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Core.FineGrainedAlignment.IPairEnumerator
    name: IPairEnumerator
    nameWithType: IPairEnumerator
    fullName: Sdl.Core.FineGrainedAlignment.IPairEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetAlignerDefinitionAsync*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetAlignerDefinitionAsync
  isExternal: true
  name: GetAlignerDefinitionAsync
  nameWithType: IAlignableCorpusAsync.GetAlignerDefinitionAsync
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetAlignerDefinitionAsync
- uid: System.Threading.Tasks.Task{Sdl.Core.FineGrainedAlignment.AlignerDefinition}
  commentId: '!:System.Threading.Tasks.Task{Sdl.Core.FineGrainedAlignment.AlignerDefinition}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AlignerDefinition>
  nameWithType: Task<AlignerDefinition>
  fullName: System.Threading.Tasks.Task<Sdl.Core.FineGrainedAlignment.AlignerDefinition>
  nameWithType.vb: Task(Of AlignerDefinition)
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.Core.FineGrainedAlignment.AlignerDefinition)
  name.vb: Task(Of AlignerDefinition)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Core.FineGrainedAlignment.AlignerDefinition
    name: AlignerDefinition
    nameWithType: AlignerDefinition
    fullName: Sdl.Core.FineGrainedAlignment.AlignerDefinition
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Core.FineGrainedAlignment.AlignerDefinition
    name: AlignerDefinition
    nameWithType: AlignerDefinition
    fullName: Sdl.Core.FineGrainedAlignment.AlignerDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetAlignedPredatedContentPairCountAsync*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetAlignedPredatedContentPairCountAsync
  isExternal: true
  name: GetAlignedPredatedContentPairCountAsync
  nameWithType: IAlignableCorpusAsync.GetAlignedPredatedContentPairCountAsync
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetAlignedPredatedContentPairCountAsync
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetUnalignedCountAsync*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetUnalignedCountAsync
  isExternal: true
  name: GetUnalignedCountAsync
  nameWithType: IAlignableCorpusAsync.GetUnalignedCountAsync
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetUnalignedCountAsync
- uid: System.Nullable{System.DateTime}
  commentId: '!:System.Nullable{System.DateTime}'
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPostdatedContentPairCountAsync*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPostdatedContentPairCountAsync
  isExternal: true
  name: GetPostdatedContentPairCountAsync
  nameWithType: IAlignableCorpusAsync.GetPostdatedContentPairCountAsync
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPostdatedContentPairCountAsync
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPairCountAsync*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPairCountAsync
  isExternal: true
  name: GetPairCountAsync
  nameWithType: IAlignableCorpusAsync.GetPairCountAsync
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.GetPairCountAsync
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.Id*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.Id
  isExternal: true
  name: Id
  nameWithType: IAlignableCorpusAsync.Id
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.Id
- uid: Sdl.Core.FineGrainedAlignment.AlignableCorpusId
  commentId: T:Sdl.Core.FineGrainedAlignment.AlignableCorpusId
  parent: Sdl.Core.FineGrainedAlignment
  isExternal: true
  name: AlignableCorpusId
  nameWithType: AlignableCorpusId
  fullName: Sdl.Core.FineGrainedAlignment.AlignableCorpusId
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.SourceCulture*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.SourceCulture
  isExternal: true
  name: SourceCulture
  nameWithType: IAlignableCorpusAsync.SourceCulture
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.SourceCulture
- uid: Sdl.Core.Globalization.CultureCode
  isExternal: true
  name: CultureCode
  nameWithType: CultureCode
  fullName: Sdl.Core.Globalization.CultureCode
- uid: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.TargetCulture*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.TargetCulture
  isExternal: true
  name: TargetCulture
  nameWithType: IAlignableCorpusAsync.TargetCulture
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableCorpusAsync.TargetCulture
