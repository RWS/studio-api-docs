### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  id: PhysicalUnitDescriptions
  parent: Sdl.LanguagePlatform.Core.Tokenization
  children:
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.#ctor
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.#ctor(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions)
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Add(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Count
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Delete(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.FindFirst(System.String)
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.GetEnumerator
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load(System.IO.Stream)
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load(System.String)
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Save(System.IO.Stream)
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Save(System.String)
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.System#Collections#IEnumerable#GetEnumerator
  - Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Units
  langs:
  - csharp
  - vb
  name: PhysicalUnitDescriptions
  nameWithType: PhysicalUnitDescriptions
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  type: Class
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nRepresents a serializable list of physical unit descriptions.\n"
  syntax:
    content: 'public class PhysicalUnitDescriptions : IEnumerable<PhysicalUnitDescription>, IEnumerable'
    content.vb: >-
      Public Class PhysicalUnitDescriptions
          Implements IEnumerable(Of PhysicalUnitDescription), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load(System.String)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load(System.String)
  id: Load(System.String)
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  langs:
  - csharp
  - vb
  name: Load(String)
  nameWithType: PhysicalUnitDescriptions.Load(String)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nCreates a new instance and loads (deserializes) the data from the specified \nfile name.\n"
  syntax:
    content: public static PhysicalUnitDescriptions Load(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: The name of the file to load the data from
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
      description: A new instance with the data initialized from the file&apos;s data
    content.vb: Public Shared Function Load(fileName As String) As PhysicalUnitDescriptions
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  id: Load(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  langs:
  - csharp
  - vb
  name: Load(CultureInfo, IResourceDataAccessor)
  nameWithType: PhysicalUnitDescriptions.Load(CultureInfo, IResourceDataAccessor)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load(System.Globalization.CultureInfo, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nCreates a new instance and obtains, and loads (deserializes) the data from the specified \nresource accessor, using the provided culture. This method can be used to load a culture-specific\nset of physical unit descriptions.\n"
  syntax:
    content: public static PhysicalUnitDescriptions Load(CultureInfo culture, IResourceDataAccessor accessor)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: The culture to use
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
      description: The resource data accessor to use to obtain the data
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
      description: A new instance with the data initialized from the resource data
    content.vb: Public Shared Function Load(culture As CultureInfo, accessor As IResourceDataAccessor) As PhysicalUnitDescriptions
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load(System.IO.Stream)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load(System.IO.Stream)
  id: Load(System.IO.Stream)
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  langs:
  - csharp
  - vb
  name: Load(Stream)
  nameWithType: PhysicalUnitDescriptions.Load(Stream)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load(System.IO.Stream)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nCreates a new instance and loads (deserializes) the data from the specified \ninput stream.\n"
  syntax:
    content: public static PhysicalUnitDescriptions Load(Stream reader)
    parameters:
    - id: reader
      type: System.IO.Stream
      description: The reader to read the data from
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
      description: A new instance with the data initialized from the stream&apos;s data
    content.vb: Public Shared Function Load(reader As Stream) As PhysicalUnitDescriptions
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Save(System.String)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Save(System.String)
  id: Save(System.String)
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  langs:
  - csharp
  - vb
  name: Save(String)
  nameWithType: PhysicalUnitDescriptions.Save(String)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Save(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nSaves (serializes) the data of this instance in the specified file.\n"
  syntax:
    content: public void Save(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: The file name to write the output to.
    content.vb: Public Sub Save(fileName As String)
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Save*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Save(System.IO.Stream)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  langs:
  - csharp
  - vb
  name: Save(Stream)
  nameWithType: PhysicalUnitDescriptions.Save(Stream)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Save(System.IO.Stream)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nSaves (serializes) the data of this instance in the specified stream.\n"
  syntax:
    content: public void Save(Stream writer)
    parameters:
    - id: writer
      type: System.IO.Stream
      description: The stream to write the output to.
    content.vb: Public Sub Save(writer As Stream)
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Save*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.#ctor
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  langs:
  - csharp
  - vb
  name: PhysicalUnitDescriptions()
  nameWithType: PhysicalUnitDescriptions.PhysicalUnitDescriptions()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.PhysicalUnitDescriptions()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nInitializes a new instance with default values. This constructor should not \nbe used directly, it is primarily for XML deserialization.\n"
  syntax:
    content: public PhysicalUnitDescriptions()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.#ctor(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.#ctor(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions)
  id: '#ctor(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions)'
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  langs:
  - csharp
  - vb
  name: PhysicalUnitDescriptions(PhysicalUnitDescriptions)
  nameWithType: PhysicalUnitDescriptions.PhysicalUnitDescriptions(PhysicalUnitDescriptions)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.PhysicalUnitDescriptions(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nInitializes a new instance, using the values contained in another instance. This constructor\ncan be used to create a deep copy.\n"
  syntax:
    content: public PhysicalUnitDescriptions(PhysicalUnitDescriptions other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
      description: The instance to create a deep copy from
    content.vb: Public Sub New(other As PhysicalUnitDescriptions)
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Add(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Add(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)
  id: Add(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  langs:
  - csharp
  - vb
  name: Add(PhysicalUnitDescription)
  nameWithType: PhysicalUnitDescriptions.Add(PhysicalUnitDescription)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Add(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nAdds a physical unit description to this set.\n"
  syntax:
    content: public void Add(PhysicalUnitDescription d)
    parameters:
    - id: d
      type: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
      description: The description to add. No duplicate checks are performed.
    content.vb: Public Sub Add(d As PhysicalUnitDescription)
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Delete(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Delete(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)
  id: Delete(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  langs:
  - csharp
  - vb
  name: Delete(PhysicalUnitDescription)
  nameWithType: PhysicalUnitDescriptions.Delete(PhysicalUnitDescription)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Delete(Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nDeletes a physical unit description from this set. Not implemented yet, will throw an \nexception.\n"
  syntax:
    content: public void Delete(PhysicalUnitDescription d)
    parameters:
    - id: d
      type: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
      description: The physical unit description to delete.
    content.vb: Public Sub Delete(d As PhysicalUnitDescription)
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Delete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.FindFirst(System.String)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.FindFirst(System.String)
  id: FindFirst(System.String)
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  langs:
  - csharp
  - vb
  name: FindFirst(String)
  nameWithType: PhysicalUnitDescriptions.FindFirst(String)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.FindFirst(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nFinds the first physical unit description which matches the specified unit abbreviation.\nNot implemented yet, will throw.\n"
  syntax:
    content: public PhysicalUnitDescription FindFirst(string abbreviation)
    parameters:
    - id: abbreviation
      type: System.String
      description: The abbreviation to search
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
      description: Always throws an exception
    content.vb: Public Function FindFirst(abbreviation As String) As PhysicalUnitDescription
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.FindFirst*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.GetEnumerator
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.GetEnumerator
  id: GetEnumerator
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: PhysicalUnitDescriptions.GetEnumerator()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.GetEnumerator()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nReturns an enumerator which can be used to iterate through the elements of this set.\n"
  syntax:
    content: public IEnumerator<PhysicalUnitDescription> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription}
      description: An enumerator
    content.vb: Public Function GetEnumerator As IEnumerator(Of PhysicalUnitDescription)
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: PhysicalUnitDescriptions.IEnumerable.GetEnumerator()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nReturns an enumerator which can be used to iterate through the elements of this set.\n"
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: An enumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: PhysicalUnitDescriptions.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Units
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Units
  id: Units
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  langs:
  - csharp
  - vb
  name: Units
  nameWithType: PhysicalUnitDescriptions.Units
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Units
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets or sets the list of physical unit descriptions in this set.\n"
  syntax:
    content: public List<PhysicalUnitDescription> Units { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription}
    content.vb: Public Property Units As List(Of PhysicalUnitDescription)
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Units*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Count
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Count
  id: Count
  parent: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: PhysicalUnitDescriptions.Count
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Count
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets the number of elements in this set.\n"
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.Core.Tokenization
  commentId: N:Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Sdl.LanguagePlatform.Core.Tokenization
  nameWithType: Sdl.LanguagePlatform.Core.Tokenization
  fullName: Sdl.LanguagePlatform.Core.Tokenization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PhysicalUnitDescription>
  nameWithType: IEnumerable<PhysicalUnitDescription>
  fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription>
  nameWithType.vb: IEnumerable(Of PhysicalUnitDescription)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)
  name.vb: IEnumerable(Of PhysicalUnitDescription)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
    name: PhysicalUnitDescription
    nameWithType: PhysicalUnitDescription
    fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
    name: PhysicalUnitDescription
    nameWithType: PhysicalUnitDescription
    fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load
  isExternal: true
  name: Load
  nameWithType: PhysicalUnitDescriptions.Load
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Load
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: PhysicalUnitDescriptions
  nameWithType: PhysicalUnitDescriptions
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
  commentId: T:Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
  parent: Sdl.LanguagePlatform.Core.Resources
  isExternal: true
  name: IResourceDataAccessor
  nameWithType: IResourceDataAccessor
  fullName: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Sdl.LanguagePlatform.Core.Resources
  commentId: N:Sdl.LanguagePlatform.Core.Resources
  isExternal: true
  name: Sdl.LanguagePlatform.Core.Resources
  nameWithType: Sdl.LanguagePlatform.Core.Resources
  fullName: Sdl.LanguagePlatform.Core.Resources
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Save*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Save
  isExternal: true
  name: Save
  nameWithType: PhysicalUnitDescriptions.Save
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Save
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.#ctor
  isExternal: true
  name: PhysicalUnitDescriptions
  nameWithType: PhysicalUnitDescriptions.PhysicalUnitDescriptions
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.PhysicalUnitDescriptions
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Add*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Add
  isExternal: true
  name: Add
  nameWithType: PhysicalUnitDescriptions.Add
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Add
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: PhysicalUnitDescription
  nameWithType: PhysicalUnitDescription
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Delete*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Delete
  isExternal: true
  name: Delete
  nameWithType: PhysicalUnitDescriptions.Delete
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Delete
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.FindFirst*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.FindFirst
  isExternal: true
  name: FindFirst
  nameWithType: PhysicalUnitDescriptions.FindFirst
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.FindFirst
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.GetEnumerator*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.GetEnumerator
  isExternal: true
  name: GetEnumerator
  nameWithType: PhysicalUnitDescriptions.GetEnumerator
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<PhysicalUnitDescription>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of PhysicalUnitDescription).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<PhysicalUnitDescription>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of PhysicalUnitDescription).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription}
  commentId: T:System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<PhysicalUnitDescription>
  nameWithType: IEnumerator<PhysicalUnitDescription>
  fullName: System.Collections.Generic.IEnumerator<Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription>
  nameWithType.vb: IEnumerator(Of PhysicalUnitDescription)
  fullName.vb: System.Collections.Generic.IEnumerator(Of Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)
  name.vb: IEnumerator(Of PhysicalUnitDescription)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
    name: PhysicalUnitDescription
    nameWithType: PhysicalUnitDescription
    fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
    name: PhysicalUnitDescription
    nameWithType: PhysicalUnitDescription
    fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator
  nameWithType: PhysicalUnitDescriptions.IEnumerable.GetEnumerator
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: PhysicalUnitDescriptions.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Units*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Units
  isExternal: true
  name: Units
  nameWithType: PhysicalUnitDescriptions.Units
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Units
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<PhysicalUnitDescription>
  nameWithType: List<PhysicalUnitDescription>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription>
  nameWithType.vb: List(Of PhysicalUnitDescription)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription)
  name.vb: List(Of PhysicalUnitDescription)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
    name: PhysicalUnitDescription
    nameWithType: PhysicalUnitDescription
    fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
    name: PhysicalUnitDescription
    nameWithType: PhysicalUnitDescription
    fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescription
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Count*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Count
  isExternal: true
  name: Count
  nameWithType: PhysicalUnitDescriptions.Count
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PhysicalUnitDescriptions.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
