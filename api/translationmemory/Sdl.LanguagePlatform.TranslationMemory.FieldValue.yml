### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldValue
  id: FieldValue
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.FieldValue.#ctor
  - Sdl.LanguagePlatform.TranslationMemory.FieldValue.#ctor(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValue.Clear
  - Sdl.LanguagePlatform.TranslationMemory.FieldValue.Duplicate
  - Sdl.LanguagePlatform.TranslationMemory.FieldValue.GetValueString
  - Sdl.LanguagePlatform.TranslationMemory.FieldValue.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValue.Name
  - Sdl.LanguagePlatform.TranslationMemory.FieldValue.Parse(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValue.Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValue.ValueType
  langs:
  - csharp
  - vb
  name: FieldValue
  nameWithType: FieldValue
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nRepresents a field value, which is a combination of a field name, a field value type,\nand the actual field values. This class is abstract.\n"
  syntax:
    content: public abstract class FieldValue
    content.vb: Public MustInherit Class FieldValue
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue
  - Sdl.LanguagePlatform.TranslationMemory.IntFieldValue
  - Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue
  - Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue
  - Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue
  - Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  langs:
  - csharp
  - vb
  name: FieldValue()
  nameWithType: FieldValue.FieldValue()
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.FieldValue()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance with default values. Required for serialization.\n"
  syntax:
    content: public FieldValue()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.#ctor(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  langs:
  - csharp
  - vb
  name: FieldValue(String)
  nameWithType: FieldValue.FieldValue(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.FieldValue(System.String)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance with the specified field name.\n"
  syntax:
    content: public FieldValue(string name)
    parameters:
    - id: name
      type: System.String
      description: The field name.
    content.vb: Public Sub New(name As String)
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  id: Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  langs:
  - csharp
  - vb
  name: Merge(FieldValue)
  nameWithType: FieldValue.Merge(FieldValue)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nMerges this instance with another field value, which must be of the same\ntype.\n"
  syntax:
    content: public abstract bool Merge(FieldValue rhs)
    parameters:
    - id: rhs
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValue
      description: The object to merge with.
    return:
      type: System.Boolean
      description: <code>true</code> if this instance was changed, <code>false</code> otherwise.
    content.vb: Public MustOverride Function Merge(rhs As FieldValue) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Merge*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  id: Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  langs:
  - csharp
  - vb
  name: Add(FieldValue)
  nameWithType: FieldValue.Add(FieldValue)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nAdds another field value to the current value. The other value must be of the same type.\n"
  syntax:
    content: public abstract bool Add(FieldValue rhs)
    parameters:
    - id: rhs
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValue
      description: The field value to add.
    return:
      type: System.Boolean
      description: <code>true</code>
    content.vb: Public MustOverride Function Add(rhs As FieldValue) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  id: Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  langs:
  - csharp
  - vb
  name: Substract(FieldValue)
  nameWithType: FieldValue.Substract(FieldValue)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nSubstracts a field value from this instance&apos;s field value. Both field values must be of the same type.\n"
  syntax:
    content: public abstract bool Substract(FieldValue rhs)
    parameters:
    - id: rhs
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValue
      description: The field value to substract.
    return:
      type: System.Boolean
      description: <code>true</code> if this instance was changed, <code>false</code> otherwise.
    content.vb: Public MustOverride Function Substract(rhs As FieldValue) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Substract*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Duplicate
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Duplicate
  id: Duplicate
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: FieldValue.Duplicate()
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Duplicate()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nCreates a new instance that is a deep copy of this instance.\n"
  syntax:
    content: public abstract FieldValue Duplicate()
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValue
      description: A new instance that is a deep copy of this instance.
    content.vb: Public MustOverride Function Duplicate As FieldValue
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Duplicate*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Parse(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Parse(System.String)
  id: Parse(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: FieldValue.Parse(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Parse(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes this instance from a string (deserialization).\n"
  syntax:
    content: public abstract void Parse(string s)
    parameters:
    - id: s
      type: System.String
      description: The string that contains the serialized form.
    content.vb: Public MustOverride Sub Parse(s As String)
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Parse*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(System.String)
  id: Add(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  langs:
  - csharp
  - vb
  name: Add(String)
  nameWithType: FieldValue.Add(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nAdds another string to this instance&apos;s value list, if this instance is of any of the multiple valued types.\n"
  syntax:
    content: public abstract bool Add(string s)
    parameters:
    - id: s
      type: System.String
      description: The new value to be added.
    return:
      type: System.Boolean
      description: <code>true</code> if this instance was changed, <code>false</code> otherwise.
    content.vb: Public MustOverride Function Add(s As String) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Clear
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Clear
  id: Clear
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: FieldValue.Clear()
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Clear()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nResets this instance to the default value.\n"
  syntax:
    content: public abstract void Clear()
    content.vb: Public MustOverride Sub Clear
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Clear*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.GetValueString
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.GetValueString
  id: GetValueString
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  langs:
  - csharp
  - vb
  name: GetValueString()
  nameWithType: FieldValue.GetValueString()
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.GetValueString()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nCompute a string which represents the field value without the field name in a way which \ncan be reversed through parsing. This should only be used internally by the field expression\nparser. UI-level presentation should use the field value&apos;s .ToString() method to get the \nfield value display string.\n"
  syntax:
    content: public abstract string GetValueString()
    return:
      type: System.String
      description: "A serialized string representation of the field value, which is suitable for \npersisting, and can be parsed through <xref href=\"Sdl.LanguagePlatform.TranslationMemory.FieldValue.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref>."
    content.vb: Public MustOverride Function GetValueString As String
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValue.GetValueString*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Name
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Name
  id: Name
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FieldValue.Name
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Name
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the field name of this instance. If the vield name is not valid, \nan exception is thrown.\n"
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.ValueType
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.FieldValue.ValueType
  id: ValueType
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  langs:
  - csharp
  - vb
  name: ValueType
  nameWithType: FieldValue.ValueType
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.ValueType
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets the field value type.\n"
  syntax:
    content: public abstract FieldValueType ValueType { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
    content.vb: Public MustOverride Property ValueType As FieldValueType
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValue.ValueType*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValue.#ctor
  isExternal: true
  name: FieldValue
  nameWithType: FieldValue.FieldValue
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.FieldValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Merge*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Merge
  isExternal: true
  name: Merge
  nameWithType: FieldValue.Merge
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Merge
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldValue
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldValue
  nameWithType: FieldValue
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add
  isExternal: true
  name: Add
  nameWithType: FieldValue.Add
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Substract*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Substract
  isExternal: true
  name: Substract
  nameWithType: FieldValue.Substract
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Substract
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Duplicate*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Duplicate
  isExternal: true
  name: Duplicate
  nameWithType: FieldValue.Duplicate
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Duplicate
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Parse*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Parse
  isExternal: true
  name: Parse
  nameWithType: FieldValue.Parse
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Parse
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Clear*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Clear
  isExternal: true
  name: Clear
  nameWithType: FieldValue.Clear
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Clear
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.GetValueString*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValue.GetValueString
  isExternal: true
  name: GetValueString
  nameWithType: FieldValue.GetValueString
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.GetValueString
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Name*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Name
  isExternal: true
  name: Name
  nameWithType: FieldValue.Name
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.Name
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue.ValueType*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValue.ValueType
  isExternal: true
  name: ValueType
  nameWithType: FieldValue.ValueType
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue.ValueType
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldValueType
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldValueType
  nameWithType: FieldValueType
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
