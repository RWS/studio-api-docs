### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  commentId: T:Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  id: EditDistance
  parent: Sdl.LanguagePlatform.Core.EditDistance
  children:
  - Sdl.LanguagePlatform.Core.EditDistance.EditDistance.#ctor
  - Sdl.LanguagePlatform.Core.EditDistance.EditDistance.#ctor(System.Int32,System.Int32,System.Double)
  - Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Add(Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem)
  - Sdl.LanguagePlatform.Core.EditDistance.EditDistance.AddAtStart(Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem)
  - Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Distance
  - Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Dump(System.IO.TextWriter,System.String)
  - Sdl.LanguagePlatform.Core.EditDistance.EditDistance.FindSourceItemIndex(System.Int32)
  - Sdl.LanguagePlatform.Core.EditDistance.EditDistance.FindTargetItemIndex(System.Int32)
  - Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Item(System.Int32)
  - Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Items
  - Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Score
  - Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetResolutionAt(System.Int32,Sdl.LanguagePlatform.Core.EditDistance.EditDistanceResolution)
  - Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetSourceAt(System.Int32,System.Int32)
  - Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetTargetAt(System.Int32,System.Int32)
  - Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Sort
  - Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SourceObjectCount
  - Sdl.LanguagePlatform.Core.EditDistance.EditDistance.TargetObjectCount
  langs:
  - csharp
  - vb
  name: EditDistance
  nameWithType: EditDistance
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  type: Class
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nRepresents the result of an edit distance computation. \n"
  syntax:
    content: public class EditDistance
    content.vb: Public Class EditDistance
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.#ctor
  commentId: M:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  langs:
  - csharp
  - vb
  name: EditDistance()
  nameWithType: EditDistance.EditDistance()
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.EditDistance()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nInitializes a new instance with default values.\n"
  syntax:
    content: public EditDistance()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.#ctor(System.Int32,System.Int32,System.Double)
  commentId: M:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.#ctor(System.Int32,System.Int32,System.Double)
  id: '#ctor(System.Int32,System.Int32,System.Double)'
  parent: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  langs:
  - csharp
  - vb
  name: EditDistance(Int32, Int32, Double)
  nameWithType: EditDistance.EditDistance(Int32, Int32, Double)
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.EditDistance(System.Int32, System.Int32, System.Double)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nInitializes a new instance with the specified parameters.\n"
  syntax:
    content: public EditDistance(int sourceObjectCount, int targetObjectCount, double distance)
    parameters:
    - id: sourceObjectCount
      type: System.Int32
      description: The number of source objects (needed for scoring).
    - id: targetObjectCount
      type: System.Int32
      description: The number of target objects (needed for scoring).
    - id: distance
      type: System.Double
      description: "The score representing the edit distance between the \nsource and the target objects."
    content.vb: Public Sub New(sourceObjectCount As Integer, targetObjectCount As Integer, distance As Double)
  overload: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetSourceAt(System.Int32,System.Int32)
  commentId: M:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetSourceAt(System.Int32,System.Int32)
  id: SetSourceAt(System.Int32,System.Int32)
  parent: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  langs:
  - csharp
  - vb
  name: SetSourceAt(Int32, Int32)
  nameWithType: EditDistance.SetSourceAt(Int32, Int32)
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetSourceAt(System.Int32, System.Int32)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nSets the source offset for the edit operation at the specific index. This\nis necessary if indices have been changed in the underlying sequence.\n"
  syntax:
    content: public void SetSourceAt(int index, int offset)
    parameters:
    - id: index
      type: System.Int32
      description: The edit operation index.
    - id: offset
      type: System.Int32
      description: The offsetin the source sequence.
    content.vb: Public Sub SetSourceAt(index As Integer, offset As Integer)
  overload: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetSourceAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetTargetAt(System.Int32,System.Int32)
  commentId: M:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetTargetAt(System.Int32,System.Int32)
  id: SetTargetAt(System.Int32,System.Int32)
  parent: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  langs:
  - csharp
  - vb
  name: SetTargetAt(Int32, Int32)
  nameWithType: EditDistance.SetTargetAt(Int32, Int32)
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetTargetAt(System.Int32, System.Int32)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nSets the target offset for the edit operation at the specific index. This\nis necessary if indices have been changed in the underlying sequence.\n"
  syntax:
    content: public void SetTargetAt(int index, int offset)
    parameters:
    - id: index
      type: System.Int32
      description: The edit operation index.
    - id: offset
      type: System.Int32
      description: The offsetin the target sequence.
    content.vb: Public Sub SetTargetAt(index As Integer, offset As Integer)
  overload: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetTargetAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetResolutionAt(System.Int32,Sdl.LanguagePlatform.Core.EditDistance.EditDistanceResolution)
  commentId: M:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetResolutionAt(System.Int32,Sdl.LanguagePlatform.Core.EditDistance.EditDistanceResolution)
  id: SetResolutionAt(System.Int32,Sdl.LanguagePlatform.Core.EditDistance.EditDistanceResolution)
  parent: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  langs:
  - csharp
  - vb
  name: SetResolutionAt(Int32, EditDistanceResolution)
  nameWithType: EditDistance.SetResolutionAt(Int32, EditDistanceResolution)
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetResolutionAt(System.Int32, Sdl.LanguagePlatform.Core.EditDistance.EditDistanceResolution)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nSets the edit distance resolution for the edit distance item at the \nspecified index.\n"
  syntax:
    content: public void SetResolutionAt(int index, EditDistanceResolution resolution)
    parameters:
    - id: index
      type: System.Int32
      description: The edit operation index.
    - id: resolution
      type: Sdl.LanguagePlatform.Core.EditDistance.EditDistanceResolution
      description: The edit distance resolution.
    content.vb: Public Sub SetResolutionAt(index As Integer, resolution As EditDistanceResolution)
  overload: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetResolutionAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.FindSourceItemIndex(System.Int32)
  commentId: M:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.FindSourceItemIndex(System.Int32)
  id: FindSourceItemIndex(System.Int32)
  parent: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  langs:
  - csharp
  - vb
  name: FindSourceItemIndex(Int32)
  nameWithType: EditDistance.FindSourceItemIndex(Int32)
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.FindSourceItemIndex(System.Int32)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nRetrieves the edit operation index for a specified source sequence offset.\n"
  syntax:
    content: public int FindSourceItemIndex(int sourceTokenOffset)
    parameters:
    - id: sourceTokenOffset
      type: System.Int32
      description: The sequence offset in the underlying source sequence.
    return:
      type: System.Int32
      description: The zero-based index of the corresponding edit distance item, if found, or <code>-1</code> otherwise.
    content.vb: Public Function FindSourceItemIndex(sourceTokenOffset As Integer) As Integer
  overload: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.FindSourceItemIndex*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.FindTargetItemIndex(System.Int32)
  commentId: M:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.FindTargetItemIndex(System.Int32)
  id: FindTargetItemIndex(System.Int32)
  parent: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  langs:
  - csharp
  - vb
  name: FindTargetItemIndex(Int32)
  nameWithType: EditDistance.FindTargetItemIndex(Int32)
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.FindTargetItemIndex(System.Int32)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nRetrieves the edit operation index for a specified target sequence offset.\n"
  syntax:
    content: public int FindTargetItemIndex(int targetTokenOffset)
    parameters:
    - id: targetTokenOffset
      type: System.Int32
      description: The sequence offset in the underlying target sequence.
    return:
      type: System.Int32
      description: The zero-based index of the corresponding edit distance item, if found, or <code>-1</code> otherwise.
    content.vb: Public Function FindTargetItemIndex(targetTokenOffset As Integer) As Integer
  overload: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.FindTargetItemIndex*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Sort
  commentId: M:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Sort
  id: Sort
  parent: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  langs:
  - csharp
  - vb
  name: Sort()
  nameWithType: EditDistance.Sort()
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Sort()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nSorts the edit distance items.\n"
  syntax:
    content: public void Sort()
    content.vb: Public Sub Sort
  overload: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Sort*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Add(Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem)
  commentId: M:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Add(Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem)
  id: Add(Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem)
  parent: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  langs:
  - csharp
  - vb
  name: Add(EditDistanceItem)
  nameWithType: EditDistance.Add(EditDistanceItem)
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Add(Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nAdds a new edit distance operation to the list.\n"
  syntax:
    content: public void Add(EditDistanceItem item)
    parameters:
    - id: item
      type: Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem
      description: The item to add. No consistency checks are performed.
    content.vb: Public Sub Add(item As EditDistanceItem)
  overload: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.AddAtStart(Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem)
  commentId: M:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.AddAtStart(Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem)
  id: AddAtStart(Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem)
  parent: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  langs:
  - csharp
  - vb
  name: AddAtStart(EditDistanceItem)
  nameWithType: EditDistance.AddAtStart(EditDistanceItem)
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.AddAtStart(Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nInserts a new edit distance operation at the beginning of the list.\n"
  syntax:
    content: public void AddAtStart(EditDistanceItem item)
    parameters:
    - id: item
      type: Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem
      description: The item to add. No consistency checks are performed.
    content.vb: Public Sub AddAtStart(item As EditDistanceItem)
  overload: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.AddAtStart*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Dump(System.IO.TextWriter,System.String)
  commentId: M:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Dump(System.IO.TextWriter,System.String)
  id: Dump(System.IO.TextWriter,System.String)
  parent: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  langs:
  - csharp
  - vb
  name: Dump(TextWriter, String)
  nameWithType: EditDistance.Dump(TextWriter, String)
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Dump(System.IO.TextWriter, System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nTextually writes the edit distance information to a stream, for debugging purposes.\n"
  syntax:
    content: public void Dump(TextWriter wtr, string msg)
    parameters:
    - id: wtr
      type: System.IO.TextWriter
      description: The output text writer stream, which must be ready for writing.
    - id: msg
      type: System.String
      description: A caption to add at the start of the output.
    content.vb: Public Sub Dump(wtr As TextWriter, msg As String)
  overload: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Dump*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Item(System.Int32)
  commentId: P:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Item(System.Int32)
  id: Item(System.Int32)
  parent: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: EditDistance.Item[Int32]
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Item[System.Int32]
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nRetrieves the edit distance information at the specified index.\n"
  syntax:
    content: public EditDistanceItem this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: The index in the collection of edit operations.
    return:
      type: Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem
      description: "The <xref href=\"Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem\" data-throw-if-not-resolved=\"false\"></xref> at the specified index. If the \nindex is invalid, an exception is thrown."
    content.vb: Public ReadOnly Property Item(index As Integer) As EditDistanceItem
  overload: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Item*
  nameWithType.vb: EditDistance.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Score
  commentId: P:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Score
  id: Score
  parent: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  langs:
  - csharp
  - vb
  name: Score
  nameWithType: EditDistance.Score
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Score
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nGets the edit distance score as a floating-point value between 0 and 1. The score depends on the \nlength of the input vectors while the standard distance only represents the sum of the costs\nof all edit operations. Use this Score for TM applications.\n"
  syntax:
    content: public double Score { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Score As Double
  overload: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Score*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Distance
  commentId: P:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Distance
  id: Distance
  parent: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  langs:
  - csharp
  - vb
  name: Distance
  nameWithType: EditDistance.Distance
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Distance
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nGets or sets the standard distance score as a floating-point value representing the total cost of edit operations. Note \nthat this value should not be used for TM operations. It only computes the basic costs of the transformation, \nbut does not compute a match score (which also depends on the lengths of the sequences). \nFor TM applications, use <xref href=\"Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Score\" data-throw-if-not-resolved=\"false\"></xref> instead.\n"
  syntax:
    content: public double Distance { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Distance As Double
  overload: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Distance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Items
  commentId: P:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Items
  id: Items
  parent: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: EditDistance.Items
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Items
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nGets or sets the list of edit operations.\n"
  syntax:
    content: public List<EditDistanceItem> Items { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem}
    content.vb: Public Property Items As List(Of EditDistanceItem)
  overload: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Items*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SourceObjectCount
  commentId: P:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SourceObjectCount
  id: SourceObjectCount
  parent: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  langs:
  - csharp
  - vb
  name: SourceObjectCount
  nameWithType: EditDistance.SourceObjectCount
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SourceObjectCount
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nGets the length of the source sequence.\n"
  syntax:
    content: public int SourceObjectCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SourceObjectCount As Integer
  overload: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SourceObjectCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.TargetObjectCount
  commentId: P:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.TargetObjectCount
  id: TargetObjectCount
  parent: Sdl.LanguagePlatform.Core.EditDistance.EditDistance
  langs:
  - csharp
  - vb
  name: TargetObjectCount
  nameWithType: EditDistance.TargetObjectCount
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.TargetObjectCount
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.EditDistance
  summary: "\nGets the length of the target sequence.\n"
  syntax:
    content: public int TargetObjectCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TargetObjectCount As Integer
  overload: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.TargetObjectCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.Core.EditDistance
  commentId: N:Sdl.LanguagePlatform.Core.EditDistance
  isExternal: true
  name: Sdl.LanguagePlatform.Core.EditDistance
  nameWithType: Sdl.LanguagePlatform.Core.EditDistance
  fullName: Sdl.LanguagePlatform.Core.EditDistance
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.#ctor
  isExternal: true
  name: EditDistance
  nameWithType: EditDistance.EditDistance
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.EditDistance
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetSourceAt*
  commentId: Overload:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetSourceAt
  isExternal: true
  name: SetSourceAt
  nameWithType: EditDistance.SetSourceAt
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetSourceAt
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetTargetAt*
  commentId: Overload:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetTargetAt
  isExternal: true
  name: SetTargetAt
  nameWithType: EditDistance.SetTargetAt
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetTargetAt
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetResolutionAt*
  commentId: Overload:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetResolutionAt
  isExternal: true
  name: SetResolutionAt
  nameWithType: EditDistance.SetResolutionAt
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SetResolutionAt
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistanceResolution
  commentId: T:Sdl.LanguagePlatform.Core.EditDistance.EditDistanceResolution
  parent: Sdl.LanguagePlatform.Core.EditDistance
  isExternal: true
  name: EditDistanceResolution
  nameWithType: EditDistanceResolution
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistanceResolution
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.FindSourceItemIndex*
  commentId: Overload:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.FindSourceItemIndex
  isExternal: true
  name: FindSourceItemIndex
  nameWithType: EditDistance.FindSourceItemIndex
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.FindSourceItemIndex
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.FindTargetItemIndex*
  commentId: Overload:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.FindTargetItemIndex
  isExternal: true
  name: FindTargetItemIndex
  nameWithType: EditDistance.FindTargetItemIndex
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.FindTargetItemIndex
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Sort*
  commentId: Overload:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Sort
  isExternal: true
  name: Sort
  nameWithType: EditDistance.Sort
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Sort
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Add*
  commentId: Overload:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Add
  isExternal: true
  name: Add
  nameWithType: EditDistance.Add
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Add
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem
  commentId: T:Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem
  parent: Sdl.LanguagePlatform.Core.EditDistance
  isExternal: true
  name: EditDistanceItem
  nameWithType: EditDistanceItem
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.AddAtStart*
  commentId: Overload:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.AddAtStart
  isExternal: true
  name: AddAtStart
  nameWithType: EditDistance.AddAtStart
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.AddAtStart
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Dump*
  commentId: Overload:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Dump
  isExternal: true
  name: Dump
  nameWithType: EditDistance.Dump
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Dump
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Item*
  commentId: Overload:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Item
  isExternal: true
  name: Item
  nameWithType: EditDistance.Item
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Item
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Score*
  commentId: Overload:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Score
  isExternal: true
  name: Score
  nameWithType: EditDistance.Score
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Score
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Distance*
  commentId: Overload:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Distance
  isExternal: true
  name: Distance
  nameWithType: EditDistance.Distance
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Distance
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Items*
  commentId: Overload:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Items
  isExternal: true
  name: Items
  nameWithType: EditDistance.Items
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.Items
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<EditDistanceItem>
  nameWithType: List<EditDistanceItem>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem>
  nameWithType.vb: List(Of EditDistanceItem)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem)
  name.vb: List(Of EditDistanceItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem
    name: EditDistanceItem
    nameWithType: EditDistanceItem
    fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem
    name: EditDistanceItem
    nameWithType: EditDistanceItem
    fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistanceItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SourceObjectCount*
  commentId: Overload:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SourceObjectCount
  isExternal: true
  name: SourceObjectCount
  nameWithType: EditDistance.SourceObjectCount
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.SourceObjectCount
- uid: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.TargetObjectCount*
  commentId: Overload:Sdl.LanguagePlatform.Core.EditDistance.EditDistance.TargetObjectCount
  isExternal: true
  name: TargetObjectCount
  nameWithType: EditDistance.TargetObjectCount
  fullName: Sdl.LanguagePlatform.Core.EditDistance.EditDistance.TargetObjectCount
