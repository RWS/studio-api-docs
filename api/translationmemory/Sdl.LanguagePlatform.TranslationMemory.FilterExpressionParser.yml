### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser
  id: FilterExpressionParser
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.#ctor(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  - Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(System.String,Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  langs:
  - csharp
  - vb
  name: FilterExpressionParser
  nameWithType: FilterExpressionParser
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser
  type: Class
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: >-
    Provides a parser that can read a filter expression from a string and create an equivalent FilterExpression object.

    <p>The returned object can be serialized back into an equivalent string, which may not look exactly like the original input. 

    That is because the parser normalizes the input, by surrounding field names and values with double quotes and by adding brackets.</p>

    <p>Field names are case insensitive and so are string values.</p>

    <p>Picklist values are case sensitive and the parser will throw an error if the expression contains a value not defined by the 

    specified field.</p>
  example: []
  syntax:
    content: public class FilterExpressionParser
    content.vb: Public Class FilterExpressionParser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(System.String,Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(System.String,Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  id: Parse(System.String,Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  parent: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser
  langs:
  - csharp
  - vb
  name: Parse(string, IFieldDefinitions)
  nameWithType: FilterExpressionParser.Parse(string, IFieldDefinitions)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(string, Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: >-
    Parses the provided <code class="paramref">expression</code>, using the provided field declarations, 

    and returns a <xref href="Sdl.LanguagePlatform.TranslationMemory.FilterExpression" data-throw-if-not-resolved="false"></xref> which corresponds to the expression.
  example: []
  syntax:
    content: public static FilterExpression Parse(string expression, IFieldDefinitions fieldDeclarations)
    parameters:
    - id: expression
      type: System.String
      description: The expression
    - id: fieldDeclarations
      type: Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
      description: >-
        The field declarations which are in effect, to 
                    resolve any field references
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
      description: >-
        A filter expression. An exception is thrown if <code class="paramref">expression</code>
                    is invalid.
    content.vb: Public Shared Function Parse(expression As String, fieldDeclarations As IFieldDefinitions) As FilterExpression
  overload: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse*
  nameWithType.vb: FilterExpressionParser.Parse(String, IFieldDefinitions)
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(String, Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  name.vb: Parse(String, IFieldDefinitions)
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.#ctor(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.#ctor(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  id: '#ctor(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)'
  parent: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser
  langs:
  - csharp
  - vb
  name: FilterExpressionParser(IFieldDefinitions)
  nameWithType: FilterExpressionParser.FilterExpressionParser(IFieldDefinitions)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.FilterExpressionParser(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: Initializes a new instance with a collection of field declarations.
  example: []
  syntax:
    content: public FilterExpressionParser(IFieldDefinitions fieldDeclarations)
    parameters:
    - id: fieldDeclarations
      type: Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
      description: The field declarations to use for parsing.
    content.vb: Public Sub New(fieldDeclarations As IFieldDefinitions)
  overload: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.#ctor*
  nameWithType.vb: FilterExpressionParser.New(IFieldDefinitions)
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.New(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  name.vb: New(IFieldDefinitions)
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(System.String)
  id: Parse(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser
  langs:
  - csharp
  - vb
  name: Parse(string)
  nameWithType: FilterExpressionParser.Parse(string)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(string)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: Parses a string expression and returns the equivalent <xref href="Sdl.LanguagePlatform.TranslationMemory.FilterExpression" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public FilterExpression Parse(string s)
    parameters:
    - id: s
      type: System.String
      description: The input string.
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
      description: >-
        The equivalent filter expression. If the string does not represent a valid 
                    expression, an exception is thrown.
    content.vb: Public Function Parse(s As String) As FilterExpression
  overload: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse*
  nameWithType.vb: FilterExpressionParser.Parse(String)
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(String)
  name.vb: Parse(String)
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  href: Sdl.html
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.TranslationMemory
    name: TranslationMemory
    isExternal: true
    href: Sdl.LanguagePlatform.TranslationMemory.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.TranslationMemory
    name: TranslationMemory
    isExternal: true
    href: Sdl.LanguagePlatform.TranslationMemory.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.FilterExpression.html
  name: FilterExpression
  nameWithType: FilterExpression
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.html#Sdl_LanguagePlatform_TranslationMemory_FilterExpressionParser_Parse_System_String_Sdl_LanguagePlatform_TranslationMemory_IFieldDefinitions_
  name: Parse
  nameWithType: FilterExpressionParser.Parse
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions.html
  name: IFieldDefinitions
  nameWithType: IFieldDefinitions
  fullName: Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.#ctor
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.html#Sdl_LanguagePlatform_TranslationMemory_FilterExpressionParser__ctor_Sdl_LanguagePlatform_TranslationMemory_IFieldDefinitions_
  name: FilterExpressionParser
  nameWithType: FilterExpressionParser.FilterExpressionParser
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.FilterExpressionParser
  nameWithType.vb: FilterExpressionParser.New
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.New
  name.vb: New
