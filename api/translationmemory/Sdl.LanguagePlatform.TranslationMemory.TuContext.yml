### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TuContext
  id: TuContext
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.TuContext.#ctor
  - Sdl.LanguagePlatform.TranslationMemory.TuContext.#ctor(System.Int64,System.Int64)
  - Sdl.LanguagePlatform.TranslationMemory.TuContext.Context1
  - Sdl.LanguagePlatform.TranslationMemory.TuContext.Context2
  - Sdl.LanguagePlatform.TranslationMemory.TuContext.Equals(System.Object)
  - Sdl.LanguagePlatform.TranslationMemory.TuContext.GetHashCode
  - Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftSource
  - Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftTarget
  - Sdl.LanguagePlatform.TranslationMemory.TuContext.Segment1
  - Sdl.LanguagePlatform.TranslationMemory.TuContext.Segment2
  langs:
  - csharp
  - vb
  name: TuContext
  nameWithType: TuContext
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nEncapsulates information about the context of a translation unit relative to other translation units within a document.\n"
  syntax:
    content: public class TuContext
    content.vb: Public Class TuContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TuContext.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemory.TuContext
  langs:
  - csharp
  - vb
  name: TuContext()
  nameWithType: TuContext.TuContext()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.TuContext()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance with default values.\n"
  syntax:
    content: public TuContext()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemory.TuContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.#ctor(System.Int64,System.Int64)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TuContext.#ctor(System.Int64,System.Int64)
  id: '#ctor(System.Int64,System.Int64)'
  parent: Sdl.LanguagePlatform.TranslationMemory.TuContext
  langs:
  - csharp
  - vb
  name: TuContext(Int64, Int64)
  nameWithType: TuContext.TuContext(Int64, Int64)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.TuContext(System.Int64, System.Int64)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance of the TuContext class with the specified hash values.\n"
  syntax:
    content: public TuContext(long context1, long context2)
    parameters:
    - id: context1
      type: System.Int64
      description: The source hash value of the preceding translation unit.
    - id: context2
      type: System.Int64
      description: The target hash value of the preceding translation unit, or the source hash value of the following translation unit.
    content.vb: Public Sub New(context1 As Long, context2 As Long)
  overload: Sdl.LanguagePlatform.TranslationMemory.TuContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.Equals(System.Object)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TuContext.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.LanguagePlatform.TranslationMemory.TuContext
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: TuContext.Equals(Object)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.Equals(System.Object)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\n<xref href=\"System.Object.Equals(object)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: >
        true if the specified object is equal to the current object;

        otherwise, false.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.LanguagePlatform.TranslationMemory.TuContext.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.GetHashCode
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TuContext.GetHashCode
  id: GetHashCode
  parent: Sdl.LanguagePlatform.TranslationMemory.TuContext
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TuContext.GetHashCode()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.GetHashCode()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nSimple hashcode, we don&apos;t care that much if there are some conflicts\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.LanguagePlatform.TranslationMemory.TuContext.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.Context1
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TuContext.Context1
  id: Context1
  parent: Sdl.LanguagePlatform.TranslationMemory.TuContext
  langs:
  - csharp
  - vb
  name: Context1
  nameWithType: TuContext.Context1
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.Context1
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the source hash value of the preceding translation unit relative to this instance.\n"
  syntax:
    content: public long Context1 { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Context1 As Long
  overload: Sdl.LanguagePlatform.TranslationMemory.TuContext.Context1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.Context2
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TuContext.Context2
  id: Context2
  parent: Sdl.LanguagePlatform.TranslationMemory.TuContext
  langs:
  - csharp
  - vb
  name: Context2
  nameWithType: TuContext.Context2
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.Context2
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the target hash value of the preceding translation unit relative to this instance, or the source hash value of the following translation unit relative to this instance.\n"
  syntax:
    content: public long Context2 { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Context2 As Long
  overload: Sdl.LanguagePlatform.TranslationMemory.TuContext.Context2*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.Segment1
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TuContext.Segment1
  id: Segment1
  parent: Sdl.LanguagePlatform.TranslationMemory.TuContext
  langs:
  - csharp
  - vb
  name: Segment1
  nameWithType: TuContext.Segment1
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.Segment1
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nWhen transferring context content, provides the content used to generate <xref href=\"Sdl.LanguagePlatform.TranslationMemory.TuContext.Context1\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public Segment Segment1 { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Segment
    content.vb: Public Property Segment1 As Segment
  overload: Sdl.LanguagePlatform.TranslationMemory.TuContext.Segment1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.Segment2
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TuContext.Segment2
  id: Segment2
  parent: Sdl.LanguagePlatform.TranslationMemory.TuContext
  langs:
  - csharp
  - vb
  name: Segment2
  nameWithType: TuContext.Segment2
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.Segment2
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nWhen transferring context content, provides the content used to generate <xref href=\"Sdl.LanguagePlatform.TranslationMemory.TuContext.Context2\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public Segment Segment2 { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Segment
    content.vb: Public Property Segment2 As Segment
  overload: Sdl.LanguagePlatform.TranslationMemory.TuContext.Segment2*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftSource
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftSource
  id: LeftSource
  parent: Sdl.LanguagePlatform.TranslationMemory.TuContext
  langs:
  - csharp
  - vb
  name: LeftSource
  nameWithType: TuContext.LeftSource
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftSource
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nDeprecated\n"
  syntax:
    content: >-
      [Obsolete]

      public long LeftSource { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <Obsolete>

      Public Property LeftSource As Long
  overload: Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftSource*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftTarget
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftTarget
  id: LeftTarget
  parent: Sdl.LanguagePlatform.TranslationMemory.TuContext
  langs:
  - csharp
  - vb
  name: LeftTarget
  nameWithType: TuContext.LeftTarget
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftTarget
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nDeprecated\n"
  syntax:
    content: >-
      [Obsolete]

      public long LeftTarget { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <Obsolete>

      Public Property LeftTarget As Long
  overload: Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftTarget*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuContext.#ctor
  isExternal: true
  name: TuContext
  nameWithType: TuContext.TuContext
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.TuContext
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.Equals*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuContext.Equals
  isExternal: true
  name: Equals
  nameWithType: TuContext.Equals
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.GetHashCode*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuContext.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: TuContext.GetHashCode
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.Context1*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuContext.Context1
  isExternal: true
  name: Context1
  nameWithType: TuContext.Context1
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.Context1
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.Context2*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuContext.Context2
  isExternal: true
  name: Context2
  nameWithType: TuContext.Context2
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.Context2
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.Segment1*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuContext.Segment1
  isExternal: true
  name: Segment1
  nameWithType: TuContext.Segment1
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.Segment1
- uid: Sdl.LanguagePlatform.Core.Segment
  commentId: T:Sdl.LanguagePlatform.Core.Segment
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: Segment
  nameWithType: Segment
  fullName: Sdl.LanguagePlatform.Core.Segment
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.Segment2*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuContext.Segment2
  isExternal: true
  name: Segment2
  nameWithType: TuContext.Segment2
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.Segment2
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftSource*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftSource
  isExternal: true
  name: LeftSource
  nameWithType: TuContext.LeftSource
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftSource
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftTarget*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftTarget
  isExternal: true
  name: LeftTarget
  nameWithType: TuContext.LeftTarget
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftTarget
