### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer
  id: SearchResultFieldValueComparer
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer.#ctor
  - Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer.Compare(Sdl.LanguagePlatform.TranslationMemory.SearchResult,Sdl.LanguagePlatform.TranslationMemory.SearchResult,System.String)
  langs:
  - csharp
  - vb
  name: SearchResultFieldValueComparer
  nameWithType: SearchResultFieldValueComparer
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: 'public class SearchResultFieldValueComparer : IFieldValueComparer<SearchResult>'
    content.vb: >-
      Public Class SearchResultFieldValueComparer
          Implements IFieldValueComparer(Of SearchResult)
  inheritance:
  - System.Object
  implements:
  - Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer{Sdl.LanguagePlatform.TranslationMemory.SearchResult}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer.Compare(Sdl.LanguagePlatform.TranslationMemory.SearchResult,Sdl.LanguagePlatform.TranslationMemory.SearchResult,System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer.Compare(Sdl.LanguagePlatform.TranslationMemory.SearchResult,Sdl.LanguagePlatform.TranslationMemory.SearchResult,System.String)
  id: Compare(Sdl.LanguagePlatform.TranslationMemory.SearchResult,Sdl.LanguagePlatform.TranslationMemory.SearchResult,System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer
  langs:
  - csharp
  - vb
  name: Compare(SearchResult, SearchResult, String)
  nameWithType: SearchResultFieldValueComparer.Compare(SearchResult, SearchResult, String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer.Compare(Sdl.LanguagePlatform.TranslationMemory.SearchResult, Sdl.LanguagePlatform.TranslationMemory.SearchResult, System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public int Compare(SearchResult a, SearchResult b, string fieldName)
    parameters:
    - id: a
      type: Sdl.LanguagePlatform.TranslationMemory.SearchResult
    - id: b
      type: Sdl.LanguagePlatform.TranslationMemory.SearchResult
    - id: fieldName
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Function Compare(a As SearchResult, b As SearchResult, fieldName As String) As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer.Compare*
  implements:
  - Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer{Sdl.LanguagePlatform.TranslationMemory.SearchResult}.Compare(Sdl.LanguagePlatform.TranslationMemory.SearchResult,Sdl.LanguagePlatform.TranslationMemory.SearchResult,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer
  langs:
  - csharp
  - vb
  name: SearchResultFieldValueComparer()
  nameWithType: SearchResultFieldValueComparer.SearchResultFieldValueComparer()
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer.SearchResultFieldValueComparer()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public SearchResultFieldValueComparer()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer{Sdl.LanguagePlatform.TranslationMemory.SearchResult}
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer{Sdl.LanguagePlatform.TranslationMemory.SearchResult}
  parent: Sdl.LanguagePlatform.TranslationMemory
  definition: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer`1
  name: IFieldValueComparer<SearchResult>
  nameWithType: IFieldValueComparer<SearchResult>
  fullName: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer<Sdl.LanguagePlatform.TranslationMemory.SearchResult>
  nameWithType.vb: IFieldValueComparer(Of SearchResult)
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer(Of Sdl.LanguagePlatform.TranslationMemory.SearchResult)
  name.vb: IFieldValueComparer(Of SearchResult)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer`1
    name: IFieldValueComparer
    nameWithType: IFieldValueComparer
    fullName: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult
    name: SearchResult
    nameWithType: SearchResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer`1
    name: IFieldValueComparer
    nameWithType: IFieldValueComparer
    fullName: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult
    name: SearchResult
    nameWithType: SearchResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer`1
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer`1
  isExternal: true
  name: IFieldValueComparer<T>
  nameWithType: IFieldValueComparer<T>
  fullName: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer<T>
  nameWithType.vb: IFieldValueComparer(Of T)
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer(Of T)
  name.vb: IFieldValueComparer(Of T)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer`1
    name: IFieldValueComparer
    nameWithType: IFieldValueComparer
    fullName: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer`1
    name: IFieldValueComparer
    nameWithType: IFieldValueComparer
    fullName: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer.Compare*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer.Compare
  isExternal: true
  name: Compare
  nameWithType: SearchResultFieldValueComparer.Compare
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer.Compare
- uid: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer{Sdl.LanguagePlatform.TranslationMemory.SearchResult}.Compare(Sdl.LanguagePlatform.TranslationMemory.SearchResult,Sdl.LanguagePlatform.TranslationMemory.SearchResult,System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer{Sdl.LanguagePlatform.TranslationMemory.SearchResult}.Compare(Sdl.LanguagePlatform.TranslationMemory.SearchResult,Sdl.LanguagePlatform.TranslationMemory.SearchResult,System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer{Sdl.LanguagePlatform.TranslationMemory.SearchResult}
  definition: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer`1.Compare(`0,`0,System.String)
  name: Compare(SearchResult, SearchResult, String)
  nameWithType: IFieldValueComparer<SearchResult>.Compare(SearchResult, SearchResult, String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer<Sdl.LanguagePlatform.TranslationMemory.SearchResult>.Compare(Sdl.LanguagePlatform.TranslationMemory.SearchResult, Sdl.LanguagePlatform.TranslationMemory.SearchResult, System.String)
  nameWithType.vb: IFieldValueComparer(Of SearchResult).Compare(SearchResult, SearchResult, String)
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer(Of Sdl.LanguagePlatform.TranslationMemory.SearchResult).Compare(Sdl.LanguagePlatform.TranslationMemory.SearchResult, Sdl.LanguagePlatform.TranslationMemory.SearchResult, System.String)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer`1.Compare(`0,`0,System.String)
    name: Compare
    nameWithType: IFieldValueComparer<SearchResult>.Compare
    fullName: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer<Sdl.LanguagePlatform.TranslationMemory.SearchResult>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult
    name: SearchResult
    nameWithType: SearchResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult
    name: SearchResult
    nameWithType: SearchResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer`1.Compare(`0,`0,System.String)
    name: Compare
    nameWithType: IFieldValueComparer(Of SearchResult).Compare
    fullName: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer(Of Sdl.LanguagePlatform.TranslationMemory.SearchResult).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult
    name: SearchResult
    nameWithType: SearchResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult
    name: SearchResult
    nameWithType: SearchResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.SearchResult
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: SearchResult
  nameWithType: SearchResult
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer`1.Compare(`0,`0,System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer`1.Compare(`0,`0,System.String)
  isExternal: true
  name: Compare(T, T, String)
  nameWithType: IFieldValueComparer<T>.Compare(T, T, String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer<T>.Compare(T, T, System.String)
  nameWithType.vb: IFieldValueComparer(Of T).Compare(T, T, String)
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer(Of T).Compare(T, T, System.String)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer`1.Compare(`0,`0,System.String)
    name: Compare
    nameWithType: IFieldValueComparer<T>.Compare
    fullName: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer<T>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer`1.Compare(`0,`0,System.String)
    name: Compare
    nameWithType: IFieldValueComparer(Of T).Compare
    fullName: Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer(Of T).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer.#ctor
  isExternal: true
  name: SearchResultFieldValueComparer
  nameWithType: SearchResultFieldValueComparer.SearchResultFieldValueComparer
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer.SearchResultFieldValueComparer
