### YamlMime:ManagedReference
items:
- uid: Sdl.Core.TM.ImportExport.ImporterAsync
  commentId: T:Sdl.Core.TM.ImportExport.ImporterAsync
  id: ImporterAsync
  parent: Sdl.Core.TM.ImportExport
  children:
  - Sdl.Core.TM.ImportExport.ImporterAsync.#ctor(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager,System.Func{Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.LanguagePlatform.TranslationMemory.ImportResults,System.Threading.Tasks.Task{System.Boolean}})
  - Sdl.Core.TM.ImportExport.ImporterAsync.#ctor(Sdl.Core.TM.ImportExport.IImportDestinationAsync,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager,System.Func{Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.LanguagePlatform.TranslationMemory.ImportResults,System.Threading.Tasks.Task{System.Boolean}})
  - Sdl.Core.TM.ImportExport.ImporterAsync.BadTuCount
  - Sdl.Core.TM.ImportExport.ImporterAsync.Buffer
  - Sdl.Core.TM.ImportExport.ImporterAsync.CanChangeImportFile
  - Sdl.Core.TM.ImportExport.ImporterAsync.ChunkSize
  - Sdl.Core.TM.ImportExport.ImporterAsync.DefaultTranslationUnitChunkSize
  - Sdl.Core.TM.ImportExport.ImporterAsync.ErrorOutput
  - Sdl.Core.TM.ImportExport.ImporterAsync.Exclusive
  - Sdl.Core.TM.ImportExport.ImporterAsync.FileTypeManager
  - Sdl.Core.TM.ImportExport.ImporterAsync.Flush(Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.Core.TM.ImportExport.IImportDestinationAsync)
  - Sdl.Core.TM.ImportExport.ImporterAsync.GetDefaultFileTypeManager
  - Sdl.Core.TM.ImportExport.ImporterAsync.ImportAsync(System.String,Sdl.Core.TM.ImportExport.IImportDestinationAsync)
  - Sdl.Core.TM.ImportExport.ImporterAsync.ImportSettings
  - Sdl.Core.TM.ImportExport.ImporterAsync.InvalidTranslationUnitsExportPath
  - Sdl.Core.TM.ImportExport.ImporterAsync.MaxTranslationUnitChunkSize
  - Sdl.Core.TM.ImportExport.ImporterAsync.MinTranslationUnitChunkSize
  - Sdl.Core.TM.ImportExport.ImporterAsync.OnBatchImportedAsync(Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.LanguagePlatform.TranslationMemory.ImportResults)
  - Sdl.Core.TM.ImportExport.ImporterAsync.OutputErrorTuAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,Sdl.LanguagePlatform.TranslationMemory.ImportResult)
  - Sdl.Core.TM.ImportExport.ImporterAsync.Statistics
  - Sdl.Core.TM.ImportExport.ImporterAsync.TranslationMemoryUserIdSetting
  - Sdl.Core.TM.ImportExport.ImporterAsync._batchImportedAsync
  langs:
  - csharp
  - vb
  name: ImporterAsync
  nameWithType: ImporterAsync
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync
  type: Class
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: >-
    Normally this one would be called Importer and the other LegacyImporter, but backwards compatibility :(

    Importer class without any legacy code. Include the legacy support in the Importer class, use that in legacy clients (and hopefully we'll be able remove that one at some point).

    Use this class everywhere else.
  example: []
  syntax:
    content: public class ImporterAsync
    content.vb: Public Class ImporterAsync
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.Core.TM.ImportExport.Importer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.DefaultTranslationUnitChunkSize
  commentId: F:Sdl.Core.TM.ImportExport.ImporterAsync.DefaultTranslationUnitChunkSize
  id: DefaultTranslationUnitChunkSize
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: DefaultTranslationUnitChunkSize
  nameWithType: ImporterAsync.DefaultTranslationUnitChunkSize
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.DefaultTranslationUnitChunkSize
  type: Field
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: >-
    Defines the default size for a chunk of translation units to be processed in one round-trip through the import/export process.

    <returns>The default chunk size is 25.</returns>
  example: []
  syntax:
    content: public const int DefaultTranslationUnitChunkSize = 200
    return:
      type: System.Int32
    content.vb: Public Const DefaultTranslationUnitChunkSize As Integer = 200
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.MaxTranslationUnitChunkSize
  commentId: F:Sdl.Core.TM.ImportExport.ImporterAsync.MaxTranslationUnitChunkSize
  id: MaxTranslationUnitChunkSize
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: MaxTranslationUnitChunkSize
  nameWithType: ImporterAsync.MaxTranslationUnitChunkSize
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.MaxTranslationUnitChunkSize
  type: Field
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: >-
    Defines the maximum allowed chunk size.

    <returns>The maximum allowed chunk size is 200.</returns>
  example: []
  syntax:
    content: public const int MaxTranslationUnitChunkSize = 200
    return:
      type: System.Int32
    content.vb: Public Const MaxTranslationUnitChunkSize As Integer = 200
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.MinTranslationUnitChunkSize
  commentId: F:Sdl.Core.TM.ImportExport.ImporterAsync.MinTranslationUnitChunkSize
  id: MinTranslationUnitChunkSize
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: MinTranslationUnitChunkSize
  nameWithType: ImporterAsync.MinTranslationUnitChunkSize
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.MinTranslationUnitChunkSize
  type: Field
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: >-
    Defines the minimum allowed chunk size.

    <returns>The minimum allowed chunk size is 2.</returns>
  example: []
  syntax:
    content: public const int MinTranslationUnitChunkSize = 2
    return:
      type: System.Int32
    content.vb: Public Const MinTranslationUnitChunkSize As Integer = 2
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.Buffer
  commentId: F:Sdl.Core.TM.ImportExport.ImporterAsync.Buffer
  id: Buffer
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: Buffer
  nameWithType: ImporterAsync.Buffer
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.Buffer
  type: Field
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: protected readonly List<TranslationUnit> Buffer
    return:
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit}
    content.vb: Protected ReadOnly Buffer As List(Of TranslationUnit)
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.ErrorOutput
  commentId: F:Sdl.Core.TM.ImportExport.ImporterAsync.ErrorOutput
  id: ErrorOutput
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: ErrorOutput
  nameWithType: ImporterAsync.ErrorOutput
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ErrorOutput
  type: Field
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: protected TMXWriter ErrorOutput
    return:
      type: Sdl.LanguagePlatform.IO.TMX.TMXWriter
    content.vb: Protected ErrorOutput As TMXWriter
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.BadTuCount
  commentId: F:Sdl.Core.TM.ImportExport.ImporterAsync.BadTuCount
  id: BadTuCount
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: BadTuCount
  nameWithType: ImporterAsync.BadTuCount
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.BadTuCount
  type: Field
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: protected int BadTuCount
    return:
      type: System.Int32
    content.vb: Protected BadTuCount As Integer
- uid: Sdl.Core.TM.ImportExport.ImporterAsync._batchImportedAsync
  commentId: F:Sdl.Core.TM.ImportExport.ImporterAsync._batchImportedAsync
  id: _batchImportedAsync
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: _batchImportedAsync
  nameWithType: ImporterAsync._batchImportedAsync
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync._batchImportedAsync
  type: Field
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: protected readonly Func<ImportStatistics, ImportResults, Task<bool>> _batchImportedAsync
    return:
      type: System.Func{Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.LanguagePlatform.TranslationMemory.ImportResults,System.Threading.Tasks.Task{System.Boolean}}
    content.vb: Protected ReadOnly _batchImportedAsync As Func(Of ImportStatistics, ImportResults, Task(Of Boolean))
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.#ctor(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager,System.Func{Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.LanguagePlatform.TranslationMemory.ImportResults,System.Threading.Tasks.Task{System.Boolean}})
  commentId: M:Sdl.Core.TM.ImportExport.ImporterAsync.#ctor(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager,System.Func{Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.LanguagePlatform.TranslationMemory.ImportResults,System.Threading.Tasks.Task{System.Boolean}})
  id: '#ctor(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager,System.Func{Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.LanguagePlatform.TranslationMemory.ImportResults,System.Threading.Tasks.Task{System.Boolean}})'
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: ImporterAsync(ICultureMetadataManager, Func<ImportStatistics, ImportResults, Task<bool>>)
  nameWithType: ImporterAsync.ImporterAsync(ICultureMetadataManager, Func<ImportStatistics, ImportResults, Task<bool>>)
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ImporterAsync(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager, System.Func<Sdl.LanguagePlatform.TranslationMemory.ImportStatistics, Sdl.LanguagePlatform.TranslationMemory.ImportResults, System.Threading.Tasks.Task<bool>>)
  type: Constructor
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: Initializes a new instance of the <xref href="Sdl.Core.TM.ImportExport.Importer" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public ImporterAsync(ICultureMetadataManager cultureMetadataManager, Func<ImportStatistics, ImportResults, Task<bool>> batchImportedAsync = null)
    parameters:
    - id: cultureMetadataManager
      type: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
    - id: batchImportedAsync
      type: System.Func{Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.LanguagePlatform.TranslationMemory.ImportResults,System.Threading.Tasks.Task{System.Boolean}}
    content.vb: Public Sub New(cultureMetadataManager As ICultureMetadataManager, batchImportedAsync As Func(Of ImportStatistics, ImportResults, Task(Of Boolean)) = Nothing)
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.#ctor*
  nameWithType.vb: ImporterAsync.New(ICultureMetadataManager, Func(Of ImportStatistics, ImportResults, Task(Of Boolean)))
  fullName.vb: Sdl.Core.TM.ImportExport.ImporterAsync.New(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager, System.Func(Of Sdl.LanguagePlatform.TranslationMemory.ImportStatistics, Sdl.LanguagePlatform.TranslationMemory.ImportResults, System.Threading.Tasks.Task(Of Boolean)))
  name.vb: New(ICultureMetadataManager, Func(Of ImportStatistics, ImportResults, Task(Of Boolean)))
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.#ctor(Sdl.Core.TM.ImportExport.IImportDestinationAsync,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager,System.Func{Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.LanguagePlatform.TranslationMemory.ImportResults,System.Threading.Tasks.Task{System.Boolean}})
  commentId: M:Sdl.Core.TM.ImportExport.ImporterAsync.#ctor(Sdl.Core.TM.ImportExport.IImportDestinationAsync,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager,System.Func{Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.LanguagePlatform.TranslationMemory.ImportResults,System.Threading.Tasks.Task{System.Boolean}})
  id: '#ctor(Sdl.Core.TM.ImportExport.IImportDestinationAsync,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager,System.Func{Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.LanguagePlatform.TranslationMemory.ImportResults,System.Threading.Tasks.Task{System.Boolean}})'
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: ImporterAsync(IImportDestinationAsync, ICultureMetadataManager, Func<ImportStatistics, ImportResults, Task<bool>>)
  nameWithType: ImporterAsync.ImporterAsync(IImportDestinationAsync, ICultureMetadataManager, Func<ImportStatistics, ImportResults, Task<bool>>)
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ImporterAsync(Sdl.Core.TM.ImportExport.IImportDestinationAsync, Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager, System.Func<Sdl.LanguagePlatform.TranslationMemory.ImportStatistics, Sdl.LanguagePlatform.TranslationMemory.ImportResults, System.Threading.Tasks.Task<bool>>)
  type: Constructor
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public ImporterAsync(IImportDestinationAsync importDestinationAsync, ICultureMetadataManager cultureMetadataManager, Func<ImportStatistics, ImportResults, Task<bool>> batchImportedAsync = null)
    parameters:
    - id: importDestinationAsync
      type: Sdl.Core.TM.ImportExport.IImportDestinationAsync
    - id: cultureMetadataManager
      type: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
    - id: batchImportedAsync
      type: System.Func{Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.LanguagePlatform.TranslationMemory.ImportResults,System.Threading.Tasks.Task{System.Boolean}}
    content.vb: Public Sub New(importDestinationAsync As IImportDestinationAsync, cultureMetadataManager As ICultureMetadataManager, batchImportedAsync As Func(Of ImportStatistics, ImportResults, Task(Of Boolean)) = Nothing)
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.#ctor*
  nameWithType.vb: ImporterAsync.New(IImportDestinationAsync, ICultureMetadataManager, Func(Of ImportStatistics, ImportResults, Task(Of Boolean)))
  fullName.vb: Sdl.Core.TM.ImportExport.ImporterAsync.New(Sdl.Core.TM.ImportExport.IImportDestinationAsync, Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager, System.Func(Of Sdl.LanguagePlatform.TranslationMemory.ImportStatistics, Sdl.LanguagePlatform.TranslationMemory.ImportResults, System.Threading.Tasks.Task(Of Boolean)))
  name.vb: New(IImportDestinationAsync, ICultureMetadataManager, Func(Of ImportStatistics, ImportResults, Task(Of Boolean)))
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.ImportAsync(System.String,Sdl.Core.TM.ImportExport.IImportDestinationAsync)
  commentId: M:Sdl.Core.TM.ImportExport.ImporterAsync.ImportAsync(System.String,Sdl.Core.TM.ImportExport.IImportDestinationAsync)
  id: ImportAsync(System.String,Sdl.Core.TM.ImportExport.IImportDestinationAsync)
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: ImportAsync(string, IImportDestinationAsync)
  nameWithType: ImporterAsync.ImportAsync(string, IImportDestinationAsync)
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ImportAsync(string, Sdl.Core.TM.ImportExport.IImportDestinationAsync)
  type: Method
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: Starts the import from the specified file.
  example: []
  syntax:
    content: public Task<bool> ImportAsync(string fileName, IImportDestinationAsync importDestination)
    parameters:
    - id: fileName
      type: System.String
      description: The file name.
    - id: importDestination
      type: Sdl.Core.TM.ImportExport.IImportDestinationAsync
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Public Function ImportAsync(fileName As String, importDestination As IImportDestinationAsync) As Task(Of Boolean)
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.ImportAsync*
  nameWithType.vb: ImporterAsync.ImportAsync(String, IImportDestinationAsync)
  fullName.vb: Sdl.Core.TM.ImportExport.ImporterAsync.ImportAsync(String, Sdl.Core.TM.ImportExport.IImportDestinationAsync)
  name.vb: ImportAsync(String, IImportDestinationAsync)
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.GetDefaultFileTypeManager
  commentId: M:Sdl.Core.TM.ImportExport.ImporterAsync.GetDefaultFileTypeManager
  id: GetDefaultFileTypeManager
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: GetDefaultFileTypeManager()
  nameWithType: ImporterAsync.GetDefaultFileTypeManager()
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.GetDefaultFileTypeManager()
  type: Method
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: Returns the default file type manager.
  example: []
  syntax:
    content: public IFileTypeManager GetDefaultFileTypeManager()
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
    content.vb: Public Function GetDefaultFileTypeManager() As IFileTypeManager
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.GetDefaultFileTypeManager*
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.Flush(Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.Core.TM.ImportExport.IImportDestinationAsync)
  commentId: M:Sdl.Core.TM.ImportExport.ImporterAsync.Flush(Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.Core.TM.ImportExport.IImportDestinationAsync)
  id: Flush(Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.Core.TM.ImportExport.IImportDestinationAsync)
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: Flush(ImportStatistics, IImportDestinationAsync)
  nameWithType: ImporterAsync.Flush(ImportStatistics, IImportDestinationAsync)
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.Flush(Sdl.LanguagePlatform.TranslationMemory.ImportStatistics, Sdl.Core.TM.ImportExport.IImportDestinationAsync)
  type: Method
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: Flushes the content of the internal translation unit buffer into the translation memory immediately.
  remarks: Stats is an input/output parameter and it will be updated after the execution of this method accordingly.
  example: []
  syntax:
    content: protected Task<bool> Flush(ImportStatistics stats, IImportDestinationAsync importDestination)
    parameters:
    - id: stats
      type: Sdl.LanguagePlatform.TranslationMemory.ImportStatistics
      description: The import results.
    - id: importDestination
      type: Sdl.Core.TM.ImportExport.IImportDestinationAsync
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: >-
        Response.Cancel if there is an event listener that has signaled it wants to stop the import, 
                    otherwise Response.Continue.
    content.vb: Protected Function Flush(stats As ImportStatistics, importDestination As IImportDestinationAsync) As Task(Of Boolean)
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.Flush*
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.OutputErrorTuAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,Sdl.LanguagePlatform.TranslationMemory.ImportResult)
  commentId: M:Sdl.Core.TM.ImportExport.ImporterAsync.OutputErrorTuAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,Sdl.LanguagePlatform.TranslationMemory.ImportResult)
  id: OutputErrorTuAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,Sdl.LanguagePlatform.TranslationMemory.ImportResult)
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: OutputErrorTuAsync(TranslationUnit, ImportResult)
  nameWithType: ImporterAsync.OutputErrorTuAsync(TranslationUnit, ImportResult)
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.OutputErrorTuAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit, Sdl.LanguagePlatform.TranslationMemory.ImportResult)
  type: Method
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: protected Task OutputErrorTuAsync(TranslationUnit tu, ImportResult result)
    parameters:
    - id: tu
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    - id: result
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function OutputErrorTuAsync(tu As TranslationUnit, result As ImportResult) As Task
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.OutputErrorTuAsync*
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.OnBatchImportedAsync(Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.LanguagePlatform.TranslationMemory.ImportResults)
  commentId: M:Sdl.Core.TM.ImportExport.ImporterAsync.OnBatchImportedAsync(Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.LanguagePlatform.TranslationMemory.ImportResults)
  id: OnBatchImportedAsync(Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.LanguagePlatform.TranslationMemory.ImportResults)
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: OnBatchImportedAsync(ImportStatistics, ImportResults)
  nameWithType: ImporterAsync.OnBatchImportedAsync(ImportStatistics, ImportResults)
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.OnBatchImportedAsync(Sdl.LanguagePlatform.TranslationMemory.ImportStatistics, Sdl.LanguagePlatform.TranslationMemory.ImportResults)
  type: Method
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: protected virtual Task<bool> OnBatchImportedAsync(ImportStatistics overallResults, ImportResults batchResults)
    parameters:
    - id: overallResults
      type: Sdl.LanguagePlatform.TranslationMemory.ImportStatistics
    - id: batchResults
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResults
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Protected Overridable Function OnBatchImportedAsync(overallResults As ImportStatistics, batchResults As ImportResults) As Task(Of Boolean)
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.OnBatchImportedAsync*
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.Statistics
  commentId: P:Sdl.Core.TM.ImportExport.ImporterAsync.Statistics
  id: Statistics
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: Statistics
  nameWithType: ImporterAsync.Statistics
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.Statistics
  type: Property
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: Gets the statistics.
  example: []
  syntax:
    content: public ImportStatistics Statistics { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportStatistics
      description: The statistics.
    content.vb: Public Property Statistics As ImportStatistics
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.Statistics*
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.FileTypeManager
  commentId: P:Sdl.Core.TM.ImportExport.ImporterAsync.FileTypeManager
  id: FileTypeManager
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: FileTypeManager
  nameWithType: ImporterAsync.FileTypeManager
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.FileTypeManager
  type: Property
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: >-
    Gets or sets the file type manager. This is only needed when imported bilingual documents; it is not required when

    imported TMX files.
  example: []
  syntax:
    content: public IFileTypeManager FileTypeManager { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
      description: The file type manager.
    content.vb: Public Property FileTypeManager As IFileTypeManager
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.FileTypeManager*
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.CanChangeImportFile
  commentId: P:Sdl.Core.TM.ImportExport.ImporterAsync.CanChangeImportFile
  id: CanChangeImportFile
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: CanChangeImportFile
  nameWithType: ImporterAsync.CanChangeImportFile
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.CanChangeImportFile
  type: Property
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: Flag set to true if the imported file can/should be changed
  example: []
  syntax:
    content: public bool CanChangeImportFile { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanChangeImportFile As Boolean
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.CanChangeImportFile*
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.TranslationMemoryUserIdSetting
  commentId: P:Sdl.Core.TM.ImportExport.ImporterAsync.TranslationMemoryUserIdSetting
  id: TranslationMemoryUserIdSetting
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: TranslationMemoryUserIdSetting
  nameWithType: ImporterAsync.TranslationMemoryUserIdSetting
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.TranslationMemoryUserIdSetting
  type: Property
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: Gets or sets the user id used to import TUs.
  example: []
  syntax:
    content: public string TranslationMemoryUserIdSetting { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TranslationMemoryUserIdSetting As String
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.TranslationMemoryUserIdSetting*
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.ChunkSize
  commentId: P:Sdl.Core.TM.ImportExport.ImporterAsync.ChunkSize
  id: ChunkSize
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: ChunkSize
  nameWithType: ImporterAsync.ChunkSize
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ChunkSize
  type: Property
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: Gets or sets the size of the translation unit chunk size
  example: []
  syntax:
    content: public int ChunkSize { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The size of the chunk.
    content.vb: Public Property ChunkSize As Integer
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.ChunkSize*
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.Exclusive
  commentId: P:Sdl.Core.TM.ImportExport.ImporterAsync.Exclusive
  id: Exclusive
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: Exclusive
  nameWithType: ImporterAsync.Exclusive
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.Exclusive
  type: Property
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: >-
    If true, indicates this <xref href="Sdl.Core.TM.ImportExport.Importer" data-throw-if-not-resolved="false"></xref> is the only flow making 

    changes to the destination TM, in which case optimisations are used. Do not

    set true if other flows/users may be updating the TM during the import.
  example: []
  syntax:
    content: public bool Exclusive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Exclusive As Boolean
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.Exclusive*
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.ImportSettings
  commentId: P:Sdl.Core.TM.ImportExport.ImporterAsync.ImportSettings
  id: ImportSettings
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: ImportSettings
  nameWithType: ImporterAsync.ImportSettings
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ImportSettings
  type: Property
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: Gets or sets the import settings.
  example: []
  syntax:
    content: public ImportSettings ImportSettings { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    content.vb: Public Property ImportSettings As ImportSettings
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.ImportSettings*
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.InvalidTranslationUnitsExportPath
  commentId: P:Sdl.Core.TM.ImportExport.ImporterAsync.InvalidTranslationUnitsExportPath
  id: InvalidTranslationUnitsExportPath
  parent: Sdl.Core.TM.ImportExport.ImporterAsync
  langs:
  - csharp
  - vb
  name: InvalidTranslationUnitsExportPath
  nameWithType: ImporterAsync.InvalidTranslationUnitsExportPath
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.InvalidTranslationUnitsExportPath
  type: Property
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: Gets or sets the invalid translation units export path.
  example: []
  syntax:
    content: public string InvalidTranslationUnitsExportPath { get; set; }
    parameters: []
    return:
      type: System.String
      description: The invalid translation units export path.
    content.vb: Public Property InvalidTranslationUnitsExportPath As String
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.InvalidTranslationUnitsExportPath*
references:
- uid: Sdl.Core.TM.ImportExport
  commentId: N:Sdl.Core.TM.ImportExport
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.TM.ImportExport
  nameWithType: Sdl.Core.TM.ImportExport
  fullName: Sdl.Core.TM.ImportExport
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.TM
    name: TM
    isExternal: true
    href: Sdl.Core.TM.html
  - name: .
  - uid: Sdl.Core.TM.ImportExport
    name: ImportExport
    isExternal: true
    href: Sdl.Core.TM.ImportExport.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.TM
    name: TM
    isExternal: true
    href: Sdl.Core.TM.html
  - name: .
  - uid: Sdl.Core.TM.ImportExport
    name: ImportExport
    isExternal: true
    href: Sdl.Core.TM.ImportExport.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<TranslationUnit>
  nameWithType: List<TranslationUnit>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemory.TranslationUnit>
  nameWithType.vb: List(Of TranslationUnit)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  name.vb: List(Of TranslationUnit)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter
  commentId: T:Sdl.LanguagePlatform.IO.TMX.TMXWriter
  parent: Sdl.LanguagePlatform.IO.TMX
  isExternal: true
  href: Sdl.LanguagePlatform.IO.TMX.TMXWriter.html
  name: TMXWriter
  nameWithType: TMXWriter
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter
- uid: Sdl.LanguagePlatform.IO.TMX
  commentId: N:Sdl.LanguagePlatform.IO.TMX
  isExternal: true
  href: Sdl.html
  name: Sdl.LanguagePlatform.IO.TMX
  nameWithType: Sdl.LanguagePlatform.IO.TMX
  fullName: Sdl.LanguagePlatform.IO.TMX
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.IO
    name: IO
    isExternal: true
    href: Sdl.LanguagePlatform.IO.html
  - name: .
  - uid: Sdl.LanguagePlatform.IO.TMX
    name: TMX
    isExternal: true
    href: Sdl.LanguagePlatform.IO.TMX.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.IO
    name: IO
    isExternal: true
    href: Sdl.LanguagePlatform.IO.html
  - name: .
  - uid: Sdl.LanguagePlatform.IO.TMX
    name: TMX
    isExternal: true
    href: Sdl.LanguagePlatform.IO.TMX.html
- uid: System.Func{Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.LanguagePlatform.TranslationMemory.ImportResults,System.Threading.Tasks.Task{System.Boolean}}
  commentId: T:System.Func{Sdl.LanguagePlatform.TranslationMemory.ImportStatistics,Sdl.LanguagePlatform.TranslationMemory.ImportResults,System.Threading.Tasks.Task{System.Boolean}}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<ImportStatistics, ImportResults, Task<bool>>
  nameWithType: Func<ImportStatistics, ImportResults, Task<bool>>
  fullName: System.Func<Sdl.LanguagePlatform.TranslationMemory.ImportStatistics, Sdl.LanguagePlatform.TranslationMemory.ImportResults, System.Threading.Tasks.Task<bool>>
  nameWithType.vb: Func(Of ImportStatistics, ImportResults, Task(Of Boolean))
  fullName.vb: System.Func(Of Sdl.LanguagePlatform.TranslationMemory.ImportStatistics, Sdl.LanguagePlatform.TranslationMemory.ImportResults, System.Threading.Tasks.Task(Of Boolean))
  name.vb: Func(Of ImportStatistics, ImportResults, Task(Of Boolean))
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportStatistics
    name: ImportStatistics
    isExternal: true
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportResults
    name: ImportResults
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportStatistics
    name: ImportStatistics
    isExternal: true
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportResults
    name: ImportResults
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Sdl.Core.TM.ImportExport.Importer
  commentId: T:Sdl.Core.TM.ImportExport.Importer
  parent: Sdl.Core.TM.ImportExport
  isExternal: true
  href: Sdl.Core.TM.ImportExport.Importer.html
  name: Importer
  nameWithType: Importer
  fullName: Sdl.Core.TM.ImportExport.Importer
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.#ctor*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.#ctor
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ImporterAsync.html#Sdl_Core_TM_ImportExport_ImporterAsync__ctor_Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_System_Func_Sdl_LanguagePlatform_TranslationMemory_ImportStatistics_Sdl_LanguagePlatform_TranslationMemory_ImportResults_System_Threading_Tasks_Task_System_Boolean___
  name: ImporterAsync
  nameWithType: ImporterAsync.ImporterAsync
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ImporterAsync
  nameWithType.vb: ImporterAsync.New
  fullName.vb: Sdl.Core.TM.ImportExport.ImporterAsync.New
  name.vb: New
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  commentId: T:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  parent: Sdl.Core.Globalization.CultureMetadataManager
  isExternal: true
  name: ICultureMetadataManager
  nameWithType: ICultureMetadataManager
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
- uid: Sdl.Core.Globalization.CultureMetadataManager
  commentId: N:Sdl.Core.Globalization.CultureMetadataManager
  isExternal: true
  name: Sdl.Core.Globalization.CultureMetadataManager
  nameWithType: Sdl.Core.Globalization.CultureMetadataManager
  fullName: Sdl.Core.Globalization.CultureMetadataManager
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
  - name: .
  - uid: Sdl.Core.Globalization.CultureMetadataManager
    name: CultureMetadataManager
    isExternal: true
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
  - name: .
  - uid: Sdl.Core.Globalization.CultureMetadataManager
    name: CultureMetadataManager
    isExternal: true
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync
  commentId: T:Sdl.Core.TM.ImportExport.IImportDestinationAsync
  parent: Sdl.Core.TM.ImportExport
  isExternal: true
  href: Sdl.Core.TM.ImportExport.IImportDestinationAsync.html
  name: IImportDestinationAsync
  nameWithType: IImportDestinationAsync
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.ImportAsync*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.ImportAsync
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ImporterAsync.html#Sdl_Core_TM_ImportExport_ImporterAsync_ImportAsync_System_String_Sdl_Core_TM_ImportExport_IImportDestinationAsync_
  name: ImportAsync
  nameWithType: ImporterAsync.ImportAsync
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ImportAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.GetDefaultFileTypeManager*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.GetDefaultFileTypeManager
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ImporterAsync.html#Sdl_Core_TM_ImportExport_ImporterAsync_GetDefaultFileTypeManager
  name: GetDefaultFileTypeManager
  nameWithType: ImporterAsync.GetDefaultFileTypeManager
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.GetDefaultFileTypeManager
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileTypeManager
  nameWithType: IFileTypeManager
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi
    name: IntegrationApi
    isExternal: true
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.FileTypeSupport
    name: FileTypeSupport
    isExternal: true
  - name: .
  - uid: Sdl.FileTypeSupport.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi
    name: IntegrationApi
    isExternal: true
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.Flush*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.Flush
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ImporterAsync.html#Sdl_Core_TM_ImportExport_ImporterAsync_Flush_Sdl_LanguagePlatform_TranslationMemory_ImportStatistics_Sdl_Core_TM_ImportExport_IImportDestinationAsync_
  name: Flush
  nameWithType: ImporterAsync.Flush
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.Flush
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportStatistics
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.html
  name: ImportStatistics
  nameWithType: ImportStatistics
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportStatistics
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  href: Sdl.html
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.TranslationMemory
    name: TranslationMemory
    isExternal: true
    href: Sdl.LanguagePlatform.TranslationMemory.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.TranslationMemory
    name: TranslationMemory
    isExternal: true
    href: Sdl.LanguagePlatform.TranslationMemory.html
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.OutputErrorTuAsync*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.OutputErrorTuAsync
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ImporterAsync.html#Sdl_Core_TM_ImportExport_ImporterAsync_OutputErrorTuAsync_Sdl_LanguagePlatform_TranslationMemory_TranslationUnit_Sdl_LanguagePlatform_TranslationMemory_ImportResult_
  name: OutputErrorTuAsync
  nameWithType: ImporterAsync.OutputErrorTuAsync
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.OutputErrorTuAsync
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.html
  name: TranslationUnit
  nameWithType: TranslationUnit
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportResult
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ImportResult
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.ImportResult.html
  name: ImportResult
  nameWithType: ImportResult
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResult
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.OnBatchImportedAsync*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.OnBatchImportedAsync
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ImporterAsync.html#Sdl_Core_TM_ImportExport_ImporterAsync_OnBatchImportedAsync_Sdl_LanguagePlatform_TranslationMemory_ImportStatistics_Sdl_LanguagePlatform_TranslationMemory_ImportResults_
  name: OnBatchImportedAsync
  nameWithType: ImporterAsync.OnBatchImportedAsync
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.OnBatchImportedAsync
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportResults
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ImportResults
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.ImportResults.html
  name: ImportResults
  nameWithType: ImportResults
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResults
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.Statistics*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.Statistics
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ImporterAsync.html#Sdl_Core_TM_ImportExport_ImporterAsync_Statistics
  name: Statistics
  nameWithType: ImporterAsync.Statistics
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.Statistics
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.FileTypeManager*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.FileTypeManager
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ImporterAsync.html#Sdl_Core_TM_ImportExport_ImporterAsync_FileTypeManager
  name: FileTypeManager
  nameWithType: ImporterAsync.FileTypeManager
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.FileTypeManager
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.CanChangeImportFile*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.CanChangeImportFile
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ImporterAsync.html#Sdl_Core_TM_ImportExport_ImporterAsync_CanChangeImportFile
  name: CanChangeImportFile
  nameWithType: ImporterAsync.CanChangeImportFile
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.CanChangeImportFile
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.TranslationMemoryUserIdSetting*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.TranslationMemoryUserIdSetting
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ImporterAsync.html#Sdl_Core_TM_ImportExport_ImporterAsync_TranslationMemoryUserIdSetting
  name: TranslationMemoryUserIdSetting
  nameWithType: ImporterAsync.TranslationMemoryUserIdSetting
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.TranslationMemoryUserIdSetting
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.ChunkSize*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.ChunkSize
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ImporterAsync.html#Sdl_Core_TM_ImportExport_ImporterAsync_ChunkSize
  name: ChunkSize
  nameWithType: ImporterAsync.ChunkSize
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ChunkSize
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.Exclusive*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.Exclusive
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ImporterAsync.html#Sdl_Core_TM_ImportExport_ImporterAsync_Exclusive
  name: Exclusive
  nameWithType: ImporterAsync.Exclusive
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.Exclusive
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.ImportSettings*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.ImportSettings
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ImporterAsync.html#Sdl_Core_TM_ImportExport_ImporterAsync_ImportSettings
  name: ImportSettings
  nameWithType: ImporterAsync.ImportSettings
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ImportSettings
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.html
  name: ImportSettings
  nameWithType: ImportSettings
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.InvalidTranslationUnitsExportPath*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.InvalidTranslationUnitsExportPath
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ImporterAsync.html#Sdl_Core_TM_ImportExport_ImporterAsync_InvalidTranslationUnitsExportPath
  name: InvalidTranslationUnitsExportPath
  nameWithType: ImporterAsync.InvalidTranslationUnitsExportPath
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.InvalidTranslationUnitsExportPath
