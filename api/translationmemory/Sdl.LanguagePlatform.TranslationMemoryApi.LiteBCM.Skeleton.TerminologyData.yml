### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData
  id: TerminologyData
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.#ctor(System.Int32)
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.Terms
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.TermsHandler
  langs:
  - csharp
  - vb
  name: TerminologyData
  nameWithType: TerminologyData
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  summary: "\nData containing a list of <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term\" data-throw-if-not-resolved=\"false\"></xref>s representing terminology information.\n"
  syntax:
    content: 'public class TerminologyData : SkeletonItem'
    content.vb: >-
      Public Class TerminologyData
          Inherits SkeletonItem
  inheritance:
  - System.Object
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonItem
  inheritedMembers:
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonItem.Id
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.#ctor(System.Int32)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData
  langs:
  - csharp
  - vb
  name: TerminologyData(Int32)
  nameWithType: TerminologyData.TerminologyData(Int32)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.TerminologyData(System.Int32)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  summary: "\nInitializes a new instance of the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public TerminologyData(int id)
    parameters:
    - id: id
      type: System.Int32
      description: The identifier.
    content.vb: Public Sub New(id As Integer)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.TermsHandler
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.TermsHandler
  id: TermsHandler
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData
  langs:
  - csharp
  - vb
  name: TermsHandler
  nameWithType: TerminologyData.TermsHandler
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.TermsHandler
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  summary: "\nThread-safe handler that backs the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.Terms\" data-throw-if-not-resolved=\"false\"></xref> property. For simple operations, prefer using that property directly.\nCan be used for controlling the locking mechanism to achieve more complex transactions on the list.\n"
  syntax:
    content: public ThreadSafeListHandler<Term> TermsHandler { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term}
    content.vb: Public ReadOnly Property TermsHandler As ThreadSafeListHandler(Of Term)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.TermsHandler*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.Terms
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.Terms
  id: Terms
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData
  langs:
  - csharp
  - vb
  name: Terms
  nameWithType: TerminologyData.Terms
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.Terms
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  summary: "\nGets or sets the terms.\nNull items can not be added.\n"
  syntax:
    content: public IList<Term> Terms { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term}
      description: "\nThe terms.\n"
    content.vb: Public Property Terms As IList(Of Term)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.Terms*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonItem
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonItem
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  isExternal: true
  name: SkeletonItem
  nameWithType: SkeletonItem
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonItem
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonItem.Id
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonItem.Id
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonItem
  isExternal: true
  name: Id
  nameWithType: SkeletonItem.Id
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonItem.Id
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.#ctor
  isExternal: true
  name: TerminologyData
  nameWithType: TerminologyData.TerminologyData
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.TerminologyData
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.TermsHandler*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.TermsHandler
  isExternal: true
  name: TermsHandler
  nameWithType: TerminologyData.TermsHandler
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.TermsHandler
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term}
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term}
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection
  definition: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler`1
  name: ThreadSafeListHandler<Term>
  nameWithType: ThreadSafeListHandler<Term>
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler<Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term>
  nameWithType.vb: ThreadSafeListHandler(Of Term)
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler(Of Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term)
  name.vb: ThreadSafeListHandler(Of Term)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler`1
    name: ThreadSafeListHandler
    nameWithType: ThreadSafeListHandler
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term
    name: Term
    nameWithType: Term
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler`1
    name: ThreadSafeListHandler
    nameWithType: ThreadSafeListHandler
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term
    name: Term
    nameWithType: Term
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler`1
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler`1
  isExternal: true
  name: ThreadSafeListHandler<T>
  nameWithType: ThreadSafeListHandler<T>
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler<T>
  nameWithType.vb: ThreadSafeListHandler(Of T)
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler(Of T)
  name.vb: ThreadSafeListHandler(Of T)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler`1
    name: ThreadSafeListHandler
    nameWithType: ThreadSafeListHandler
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler`1
    name: ThreadSafeListHandler
    nameWithType: ThreadSafeListHandler
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection.ThreadSafeListHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Collection
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.Terms*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.Terms
  isExternal: true
  name: Terms
  nameWithType: TerminologyData.Terms
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.TerminologyData.Terms
- uid: System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term}
  commentId: T:System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Term>
  nameWithType: IList<Term>
  fullName: System.Collections.Generic.IList<Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term>
  nameWithType.vb: IList(Of Term)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term)
  name.vb: IList(Of Term)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term
    name: Term
    nameWithType: Term
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term
    name: Term
    nameWithType: Term
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.Term
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
