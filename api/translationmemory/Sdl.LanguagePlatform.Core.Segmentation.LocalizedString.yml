### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  commentId: T:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  id: LocalizedString
  parent: Sdl.LanguagePlatform.Core.Segmentation
  children:
  - Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.#ctor
  - Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.#ctor(Sdl.LanguagePlatform.Core.Segmentation.LocalizedString)
  - Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.#ctor(System.String)
  - Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Add(System.Object)
  - Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Clone
  - Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Count
  - Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.DeleteText(Sdl.Core.Globalization.CultureCode)
  - Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.DeleteText(Sdl.Core.Globalization.CultureCode,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetEnumerator
  - Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetText(Sdl.Core.Globalization.CultureCode)
  - Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetText(Sdl.Core.Globalization.CultureCode,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.InvariantText
  - Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.SetText(Sdl.Core.Globalization.CultureCode,System.String)
  - Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.SetText(Sdl.Core.Globalization.CultureCode,System.String,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Text
  - Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.ToString
  langs:
  - csharp
  - vb
  name: LocalizedString
  nameWithType: LocalizedString
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  type: Class
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Represents a collection of culture-annotated strings.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class LocalizedString : IEnumerable<CultureString>, IEnumerable, ICloneable
    content.vb: >-
      <DataContract>

      Public Class LocalizedString Implements IEnumerable(Of CultureString), IEnumerable, ICloneable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.CultureString}
  - System.Collections.IEnumerable
  - System.ICloneable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.#ctor
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  langs:
  - csharp
  - vb
  name: LocalizedString()
  nameWithType: LocalizedString.LocalizedString()
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.LocalizedString()
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Initializes a new instance with default values.
  example: []
  syntax:
    content: public LocalizedString()
    content.vb: Public Sub New()
  overload: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.#ctor*
  nameWithType.vb: LocalizedString.New()
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.New()
  name.vb: New()
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.#ctor(Sdl.LanguagePlatform.Core.Segmentation.LocalizedString)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.#ctor(Sdl.LanguagePlatform.Core.Segmentation.LocalizedString)
  id: '#ctor(Sdl.LanguagePlatform.Core.Segmentation.LocalizedString)'
  parent: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  langs:
  - csharp
  - vb
  name: LocalizedString(LocalizedString)
  nameWithType: LocalizedString.LocalizedString(LocalizedString)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.LocalizedString(Sdl.LanguagePlatform.Core.Segmentation.LocalizedString)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Initializes a new instance with the values of another instance, creating a deep copy.
  example: []
  syntax:
    content: public LocalizedString(LocalizedString other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
      description: The other instance
    content.vb: Public Sub New(other As LocalizedString)
  overload: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.#ctor*
  nameWithType.vb: LocalizedString.New(LocalizedString)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.New(Sdl.LanguagePlatform.Core.Segmentation.LocalizedString)
  name.vb: New(LocalizedString)
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.#ctor(System.String)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  langs:
  - csharp
  - vb
  name: LocalizedString(string)
  nameWithType: LocalizedString.LocalizedString(string)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.LocalizedString(string)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Creates a new instance with the InvariantText set to the provided text.
  example: []
  syntax:
    content: public LocalizedString(string text)
    parameters:
    - id: text
      type: System.String
      description: The text to use for the invariant culture
    content.vb: Public Sub New(text As String)
  overload: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.#ctor*
  nameWithType.vb: LocalizedString.New(String)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.New(String)
  name.vb: New(String)
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetText(Sdl.Core.Globalization.CultureCode)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetText(Sdl.Core.Globalization.CultureCode)
  id: GetText(Sdl.Core.Globalization.CultureCode)
  parent: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  langs:
  - csharp
  - vb
  name: GetText(CultureCode)
  nameWithType: LocalizedString.GetText(CultureCode)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetText(Sdl.Core.Globalization.CultureCode)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Returns the text compatible with the provided culture.
  example: []
  syntax:
    content: public string GetText(CultureCode culture)
    parameters:
    - id: culture
      type: Sdl.Core.Globalization.CultureCode
    return:
      type: System.String
    content.vb: Public Function GetText(culture As CultureCode) As String
  overload: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetText*
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetText(Sdl.Core.Globalization.CultureCode,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetText(Sdl.Core.Globalization.CultureCode,System.Boolean)
  id: GetText(Sdl.Core.Globalization.CultureCode,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  langs:
  - csharp
  - vb
  name: GetText(CultureCode, bool)
  nameWithType: LocalizedString.GetText(CultureCode, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetText(Sdl.Core.Globalization.CultureCode, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Returns the text for the provided culture.
  example: []
  syntax:
    content: public string GetText(CultureCode culture, bool mayFallback)
    parameters:
    - id: culture
      type: Sdl.Core.Globalization.CultureCode
      description: The culture (non-null)
    - id: mayFallback
      type: System.Boolean
      description: >-
        If false, the culture of the text and the provided
                    culture must match exactly. Otherwise, it is sufficient if the cultures are 
                    compatible. If an exact match for the culture is available, it will still 
                    be preferred.
    return:
      type: System.String
    content.vb: Public Function GetText(culture As CultureCode, mayFallback As Boolean) As String
  overload: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetText*
  nameWithType.vb: LocalizedString.GetText(CultureCode, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetText(Sdl.Core.Globalization.CultureCode, Boolean)
  name.vb: GetText(CultureCode, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Add(System.Object)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Add(System.Object)
  id: Add(System.Object)
  parent: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  langs:
  - csharp
  - vb
  name: Add(object)
  nameWithType: LocalizedString.Add(object)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Add(object)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Only used for XML deserialization.
  example: []
  syntax:
    content: public void Add(object o)
    parameters:
    - id: o
      type: System.Object
    content.vb: Public Sub Add(o As Object)
  overload: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Add*
  nameWithType.vb: LocalizedString.Add(Object)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Add(Object)
  name.vb: Add(Object)
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.SetText(Sdl.Core.Globalization.CultureCode,System.String)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.SetText(Sdl.Core.Globalization.CultureCode,System.String)
  id: SetText(Sdl.Core.Globalization.CultureCode,System.String)
  parent: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  langs:
  - csharp
  - vb
  name: SetText(CultureCode, string)
  nameWithType: LocalizedString.SetText(CultureCode, string)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.SetText(Sdl.Core.Globalization.CultureCode, string)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Sets (adds or overwrites) the text compatible with the provided culture.
  example: []
  syntax:
    content: public void SetText(CultureCode culture, string text)
    parameters:
    - id: culture
      type: Sdl.Core.Globalization.CultureCode
      description: The culture (non-null)
    - id: text
      type: System.String
      description: The text
    content.vb: Public Sub SetText(culture As CultureCode, text As String)
  overload: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.SetText*
  nameWithType.vb: LocalizedString.SetText(CultureCode, String)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.SetText(Sdl.Core.Globalization.CultureCode, String)
  name.vb: SetText(CultureCode, String)
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.SetText(Sdl.Core.Globalization.CultureCode,System.String,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.SetText(Sdl.Core.Globalization.CultureCode,System.String,System.Boolean)
  id: SetText(Sdl.Core.Globalization.CultureCode,System.String,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  langs:
  - csharp
  - vb
  name: SetText(CultureCode, string, bool)
  nameWithType: LocalizedString.SetText(CultureCode, string, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.SetText(Sdl.Core.Globalization.CultureCode, string, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Sets the text for the provided culture.
  example: []
  syntax:
    content: public void SetText(CultureCode culture, string text, bool mayFallback)
    parameters:
    - id: culture
      type: Sdl.Core.Globalization.CultureCode
      description: The culture (non-null)
    - id: text
      type: System.String
      description: The text
    - id: mayFallback
      type: System.Boolean
      description: >-
        If false, the culture of the text and the provided
                    culture must match exactly. Otherwise, it is sufficient if the cultures are 
                    compatible. If an exact match for the culture is available, it will still 
                    be preferred.
    content.vb: Public Sub SetText(culture As CultureCode, text As String, mayFallback As Boolean)
  overload: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.SetText*
  nameWithType.vb: LocalizedString.SetText(CultureCode, String, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.SetText(Sdl.Core.Globalization.CultureCode, String, Boolean)
  name.vb: SetText(CultureCode, String, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.DeleteText(Sdl.Core.Globalization.CultureCode)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.DeleteText(Sdl.Core.Globalization.CultureCode)
  id: DeleteText(Sdl.Core.Globalization.CultureCode)
  parent: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  langs:
  - csharp
  - vb
  name: DeleteText(CultureCode)
  nameWithType: LocalizedString.DeleteText(CultureCode)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.DeleteText(Sdl.Core.Globalization.CultureCode)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Deletes the text compatible with the provided culture.
  example: []
  syntax:
    content: public void DeleteText(CultureCode culture)
    parameters:
    - id: culture
      type: Sdl.Core.Globalization.CultureCode
      description: The culture
    content.vb: Public Sub DeleteText(culture As CultureCode)
  overload: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.DeleteText*
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.DeleteText(Sdl.Core.Globalization.CultureCode,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.DeleteText(Sdl.Core.Globalization.CultureCode,System.Boolean)
  id: DeleteText(Sdl.Core.Globalization.CultureCode,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  langs:
  - csharp
  - vb
  name: DeleteText(CultureCode, bool)
  nameWithType: LocalizedString.DeleteText(CultureCode, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.DeleteText(Sdl.Core.Globalization.CultureCode, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Deletes the text for the provided culture.
  example: []
  syntax:
    content: public void DeleteText(CultureCode culture, bool mayFallback)
    parameters:
    - id: culture
      type: Sdl.Core.Globalization.CultureCode
      description: The culture
    - id: mayFallback
      type: System.Boolean
      description: >-
        If false, the culture of the text and the provided
                    culture must match exactly. Otherwise, it is sufficient if the cultures are 
                    compatible. If an exact match for the culture is available, it will still 
                    be preferred.
    content.vb: Public Sub DeleteText(culture As CultureCode, mayFallback As Boolean)
  overload: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.DeleteText*
  nameWithType.vb: LocalizedString.DeleteText(CultureCode, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.DeleteText(Sdl.Core.Globalization.CultureCode, Boolean)
  name.vb: DeleteText(CultureCode, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetEnumerator
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetEnumerator
  id: GetEnumerator
  parent: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: LocalizedString.GetEnumerator()
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetEnumerator()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Returns an enumerator which is used to enumerate the encapsulated culture-annotated strings.
  example: []
  syntax:
    content: public IEnumerator<CultureString> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.Core.CultureString}
      description: An enumerator
    content.vb: Public Function GetEnumerator() As IEnumerator(Of CultureString)
  overload: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.CultureString}.GetEnumerator
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Clone
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Clone
  id: Clone
  parent: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: LocalizedString.Clone()
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Clone()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: <xref href="System.ICloneable.Clone" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public object Clone()
    return:
      type: System.Object
      description: A new object that is a deep copy of this instance.
    content.vb: Public Function Clone() As Object
  overload: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Clone*
  implements:
  - System.ICloneable.Clone
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.ToString
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.ToString
  id: ToString
  parent: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: LocalizedString.ToString()
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.ToString()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: <xref href="System.Object.ToString" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representation of the object, for display purposes.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.ToString*
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Text
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Text
  id: Text
  parent: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: LocalizedString.Text
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Text
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Accesses the localized text which is compatible with the current UI culture.
  example: []
  syntax:
    content: public string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Text As String
  overload: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Text*
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.InvariantText
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.InvariantText
  id: InvariantText
  parent: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  langs:
  - csharp
  - vb
  name: InvariantText
  nameWithType: LocalizedString.InvariantText
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.InvariantText
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Accesses the localized text which is compatible with the invariant culture.
  example: []
  syntax:
    content: public string InvariantText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InvariantText As String
  overload: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.InvariantText*
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Count
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Count
  id: Count
  parent: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: LocalizedString.Count
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Count
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Returns the number of localized versions of the string.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Count*
references:
- uid: Sdl.LanguagePlatform.Core.Segmentation
  commentId: N:Sdl.LanguagePlatform.Core.Segmentation
  isExternal: true
  href: Sdl.html
  name: Sdl.LanguagePlatform.Core.Segmentation
  nameWithType: Sdl.LanguagePlatform.Core.Segmentation
  fullName: Sdl.LanguagePlatform.Core.Segmentation
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core.Segmentation
    name: Segmentation
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core.Segmentation
    name: Segmentation
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.CultureString}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.CultureString}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<CultureString>
  nameWithType: IEnumerable<CultureString>
  fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.Core.CultureString>
  nameWithType.vb: IEnumerable(Of CultureString)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.Core.CultureString)
  name.vb: IEnumerable(Of CultureString)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Sdl.LanguagePlatform.Core.CultureString
    name: CultureString
    isExternal: true
    href: Sdl.LanguagePlatform.Core.CultureString.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.CultureString
    name: CultureString
    isExternal: true
    href: Sdl.LanguagePlatform.Core.CultureString.html
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.#ctor
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.html#Sdl_LanguagePlatform_Core_Segmentation_LocalizedString__ctor
  name: LocalizedString
  nameWithType: LocalizedString.LocalizedString
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.LocalizedString
  nameWithType.vb: LocalizedString.New
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.New
  name.vb: New
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  commentId: T:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  parent: Sdl.LanguagePlatform.Core.Segmentation
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.html
  name: LocalizedString
  nameWithType: LocalizedString
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetText*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetText
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.html#Sdl_LanguagePlatform_Core_Segmentation_LocalizedString_GetText_Sdl_Core_Globalization_CultureCode_
  name: GetText
  nameWithType: LocalizedString.GetText
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetText
- uid: Sdl.Core.Globalization.CultureCode
  commentId: T:Sdl.Core.Globalization.CultureCode
  parent: Sdl.Core.Globalization
  isExternal: true
  name: CultureCode
  nameWithType: CultureCode
  fullName: Sdl.Core.Globalization.CultureCode
- uid: Sdl.Core.Globalization
  commentId: N:Sdl.Core.Globalization
  isExternal: true
  name: Sdl.Core.Globalization
  nameWithType: Sdl.Core.Globalization
  fullName: Sdl.Core.Globalization
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Add*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Add
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.html#Sdl_LanguagePlatform_Core_Segmentation_LocalizedString_Add_System_Object_
  name: Add
  nameWithType: LocalizedString.Add
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Add
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.SetText*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.SetText
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.html#Sdl_LanguagePlatform_Core_Segmentation_LocalizedString_SetText_Sdl_Core_Globalization_CultureCode_System_String_
  name: SetText
  nameWithType: LocalizedString.SetText
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.SetText
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.DeleteText*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.DeleteText
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.html#Sdl_LanguagePlatform_Core_Segmentation_LocalizedString_DeleteText_Sdl_Core_Globalization_CultureCode_
  name: DeleteText
  nameWithType: LocalizedString.DeleteText
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.DeleteText
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetEnumerator*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetEnumerator
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.html#Sdl_LanguagePlatform_Core_Segmentation_LocalizedString_GetEnumerator
  name: GetEnumerator
  nameWithType: LocalizedString.GetEnumerator
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.CultureString}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.CultureString}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.CultureString}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<CultureString>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.Core.CultureString>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of CultureString).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.Core.CultureString).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.CultureString}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.CultureString}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.Core.CultureString}
  commentId: T:System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.Core.CultureString}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<CultureString>
  nameWithType: IEnumerator<CultureString>
  fullName: System.Collections.Generic.IEnumerator<Sdl.LanguagePlatform.Core.CultureString>
  nameWithType.vb: IEnumerator(Of CultureString)
  fullName.vb: System.Collections.Generic.IEnumerator(Of Sdl.LanguagePlatform.Core.CultureString)
  name.vb: IEnumerator(Of CultureString)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: Sdl.LanguagePlatform.Core.CultureString
    name: CultureString
    isExternal: true
    href: Sdl.LanguagePlatform.Core.CultureString.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.CultureString
    name: CultureString
    isExternal: true
    href: Sdl.LanguagePlatform.Core.CultureString.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Clone*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Clone
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.html#Sdl_LanguagePlatform_Core_Segmentation_LocalizedString_Clone
  name: Clone
  nameWithType: LocalizedString.Clone
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Clone
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.ToString*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.ToString
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.html#Sdl_LanguagePlatform_Core_Segmentation_LocalizedString_ToString
  name: ToString
  nameWithType: LocalizedString.ToString
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.ToString
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Text*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Text
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.html#Sdl_LanguagePlatform_Core_Segmentation_LocalizedString_Text
  name: Text
  nameWithType: LocalizedString.Text
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Text
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.InvariantText*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.InvariantText
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.html#Sdl_LanguagePlatform_Core_Segmentation_LocalizedString_InvariantText
  name: InvariantText
  nameWithType: LocalizedString.InvariantText
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.InvariantText
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Count*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Count
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.html#Sdl_LanguagePlatform_Core_Segmentation_LocalizedString_Count
  name: Count
  nameWithType: LocalizedString.Count
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
