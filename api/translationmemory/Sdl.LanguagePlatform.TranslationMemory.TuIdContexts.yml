### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  id: TuIdContexts
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.#ctor
  - Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.#ctor(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  - Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Add(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.AddRange(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  - Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.AddRange(System.Collections.Generic.IEnumerable{System.String})
  - Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Assign(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  - Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Clear
  - Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Equals(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  - Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.HasValue(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.HasValues(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  - Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Length
  - Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  - Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge(System.Collections.Generic.IEnumerable{System.String})
  - Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Values
  langs:
  - csharp
  - vb
  name: TuIdContexts
  nameWithType: TuIdContexts
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public class TuIdContexts
    content.vb: Public Class TuIdContexts
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  langs:
  - csharp
  - vb
  name: TuIdContexts()
  nameWithType: TuIdContexts.TuIdContexts()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.TuIdContexts()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public TuIdContexts()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.#ctor(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.#ctor(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  id: '#ctor(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)'
  parent: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  langs:
  - csharp
  - vb
  name: TuIdContexts(TuIdContexts)
  nameWithType: TuIdContexts.TuIdContexts(TuIdContexts)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.TuIdContexts(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public TuIdContexts(TuIdContexts other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
    content.vb: Public Sub New(other As TuIdContexts)
  overload: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Add(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Add(System.String)
  id: Add(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  langs:
  - csharp
  - vb
  name: Add(String)
  nameWithType: TuIdContexts.Add(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Add(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public bool Add(string newVal)
    parameters:
    - id: newVal
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function Add(newVal As String) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.AddRange(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.AddRange(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  id: AddRange(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  parent: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  langs:
  - csharp
  - vb
  name: AddRange(TuIdContexts)
  nameWithType: TuIdContexts.AddRange(TuIdContexts)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.AddRange(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public void AddRange(TuIdContexts contexts)
    parameters:
    - id: contexts
      type: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
    content.vb: Public Sub AddRange(contexts As TuIdContexts)
  overload: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.AddRange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.AddRange(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.AddRange(System.Collections.Generic.IEnumerable{System.String})
  id: AddRange(System.Collections.Generic.IEnumerable{System.String})
  parent: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  langs:
  - csharp
  - vb
  name: AddRange(IEnumerable<String>)
  nameWithType: TuIdContexts.AddRange(IEnumerable<String>)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.AddRange(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public void AddRange(IEnumerable<string> values)
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Sub AddRange(values As IEnumerable(Of String))
  overload: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.AddRange*
  nameWithType.vb: TuIdContexts.AddRange(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.AddRange(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: AddRange(IEnumerable(Of String))
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  id: Merge(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  parent: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  langs:
  - csharp
  - vb
  name: Merge(TuIdContexts)
  nameWithType: TuIdContexts.Merge(TuIdContexts)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public bool Merge(TuIdContexts contexts)
    parameters:
    - id: contexts
      type: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
    return:
      type: System.Boolean
    content.vb: Public Function Merge(contexts As TuIdContexts) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Assign(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Assign(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  id: Assign(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  parent: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  langs:
  - csharp
  - vb
  name: Assign(TuIdContexts)
  nameWithType: TuIdContexts.Assign(TuIdContexts)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Assign(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public bool Assign(TuIdContexts contexts)
    parameters:
    - id: contexts
      type: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
    return:
      type: System.Boolean
    content.vb: Public Function Assign(contexts As TuIdContexts) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Assign*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge(System.String)
  id: Merge(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  langs:
  - csharp
  - vb
  name: Merge(String)
  nameWithType: TuIdContexts.Merge(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public bool Merge(string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function Merge(value As String) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge(System.Collections.Generic.IEnumerable{System.String})
  id: Merge(System.Collections.Generic.IEnumerable{System.String})
  parent: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  langs:
  - csharp
  - vb
  name: Merge(IEnumerable<String>)
  nameWithType: TuIdContexts.Merge(IEnumerable<String>)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public bool Merge(IEnumerable<string> values)
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.Boolean
    content.vb: Public Function Merge(values As IEnumerable(Of String)) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge*
  nameWithType.vb: TuIdContexts.Merge(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Merge(IEnumerable(Of String))
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Clear
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Clear
  id: Clear
  parent: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: TuIdContexts.Clear()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Clear()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.HasValue(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.HasValue(System.String)
  id: HasValue(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  langs:
  - csharp
  - vb
  name: HasValue(String)
  nameWithType: TuIdContexts.HasValue(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.HasValue(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public bool HasValue(string val)
    parameters:
    - id: val
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function HasValue(val As String) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.HasValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.HasValues(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.HasValues(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  id: HasValues(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  parent: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  langs:
  - csharp
  - vb
  name: HasValues(TuIdContexts)
  nameWithType: TuIdContexts.HasValues(TuIdContexts)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.HasValues(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public bool HasValues(TuIdContexts other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
    return:
      type: System.Boolean
    content.vb: Public Function HasValues(other As TuIdContexts) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.HasValues*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Equals(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Equals(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  id: Equals(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  parent: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  langs:
  - csharp
  - vb
  name: Equals(TuIdContexts)
  nameWithType: TuIdContexts.Equals(TuIdContexts)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Equals(Sdl.LanguagePlatform.TranslationMemory.TuIdContexts)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public bool Equals(TuIdContexts other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As TuIdContexts) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Values
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Values
  id: Values
  parent: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: TuIdContexts.Values
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Values
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public HashSet<string> Values { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.String}
    content.vb: Public Property Values As HashSet(Of String)
  overload: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Values*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Length
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Length
  id: Length
  parent: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: TuIdContexts.Length
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Length
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Length As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.#ctor
  isExternal: true
  name: TuIdContexts
  nameWithType: TuIdContexts.TuIdContexts
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.TuIdContexts
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: TuIdContexts
  nameWithType: TuIdContexts
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Add*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Add
  isExternal: true
  name: Add
  nameWithType: TuIdContexts.Add
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Add
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.AddRange*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.AddRange
  isExternal: true
  name: AddRange
  nameWithType: TuIdContexts.AddRange
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.AddRange
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge
  isExternal: true
  name: Merge
  nameWithType: TuIdContexts.Merge
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Merge
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Assign*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Assign
  isExternal: true
  name: Assign
  nameWithType: TuIdContexts.Assign
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Assign
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Clear*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Clear
  isExternal: true
  name: Clear
  nameWithType: TuIdContexts.Clear
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Clear
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.HasValue*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.HasValue
  isExternal: true
  name: HasValue
  nameWithType: TuIdContexts.HasValue
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.HasValue
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.HasValues*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.HasValues
  isExternal: true
  name: HasValues
  nameWithType: TuIdContexts.HasValues
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.HasValues
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Equals*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Equals
  isExternal: true
  name: Equals
  nameWithType: TuIdContexts.Equals
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Equals
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Values*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Values
  isExternal: true
  name: Values
  nameWithType: TuIdContexts.Values
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Values
- uid: System.Collections.Generic.HashSet{System.String}
  commentId: '!:System.Collections.Generic.HashSet{System.String}'
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<String>
  nameWithType: HashSet<String>
  fullName: System.Collections.Generic.HashSet<System.String>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<>
  nameWithType: HashSet<>
  fullName: System.Collections.Generic.HashSet<>
  nameWithType.vb: HashSet(Of )
  fullName.vb: System.Collections.Generic.HashSet(Of )
  name.vb: HashSet(Of )
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Length*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Length
  isExternal: true
  name: Length
  nameWithType: TuIdContexts.Length
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts.Length
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
