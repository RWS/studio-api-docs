### YamlMime:ManagedReference
items:
- uid: Sdl.Core.TM.ImportExport.ExporterAsync
  commentId: T:Sdl.Core.TM.ImportExport.ExporterAsync
  id: ExporterAsync
  parent: Sdl.Core.TM.ImportExport
  children:
  - Sdl.Core.TM.ImportExport.ExporterAsync.#ctor(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager,System.Func{System.Int32,System.Int32,System.Threading.Tasks.Task{System.Boolean}})
  - Sdl.Core.TM.ImportExport.ExporterAsync.ExportAsync(Sdl.Core.TM.ImportExport.IExportOriginAsync,System.String,System.Boolean)
  - Sdl.Core.TM.ImportExport.ExporterAsync.FilterExpression
  - Sdl.Core.TM.ImportExport.ExporterAsync.OnBatchExportedAsync(System.Int32,System.Int32)
  - Sdl.Core.TM.ImportExport.ExporterAsync.TmxExportFormat
  langs:
  - csharp
  - vb
  name: ExporterAsync
  nameWithType: ExporterAsync
  fullName: Sdl.Core.TM.ImportExport.ExporterAsync
  type: Class
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public class ExporterAsync
    content.vb: Public Class ExporterAsync
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.Core.TM.ImportExport.Exporter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Sdl.Core.TM.ImportExport.ExporterAsync.#ctor(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager,System.Func{System.Int32,System.Int32,System.Threading.Tasks.Task{System.Boolean}})
  commentId: M:Sdl.Core.TM.ImportExport.ExporterAsync.#ctor(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager,System.Func{System.Int32,System.Int32,System.Threading.Tasks.Task{System.Boolean}})
  id: '#ctor(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager,System.Func{System.Int32,System.Int32,System.Threading.Tasks.Task{System.Boolean}})'
  parent: Sdl.Core.TM.ImportExport.ExporterAsync
  langs:
  - csharp
  - vb
  name: ExporterAsync(ICultureMetadataManager, Func<int, int, Task<bool>>)
  nameWithType: ExporterAsync.ExporterAsync(ICultureMetadataManager, Func<int, int, Task<bool>>)
  fullName: Sdl.Core.TM.ImportExport.ExporterAsync.ExporterAsync(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager, System.Func<int, int, System.Threading.Tasks.Task<bool>>)
  type: Constructor
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public ExporterAsync(ICultureMetadataManager cultureMetadataManager, Func<int, int, Task<bool>> batchExportedAsync = null)
    parameters:
    - id: cultureMetadataManager
      type: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
    - id: batchExportedAsync
      type: System.Func{System.Int32,System.Int32,System.Threading.Tasks.Task{System.Boolean}}
    content.vb: Public Sub New(cultureMetadataManager As ICultureMetadataManager, batchExportedAsync As Func(Of Integer, Integer, Task(Of Boolean)) = Nothing)
  overload: Sdl.Core.TM.ImportExport.ExporterAsync.#ctor*
  nameWithType.vb: ExporterAsync.New(ICultureMetadataManager, Func(Of Integer, Integer, Task(Of Boolean)))
  fullName.vb: Sdl.Core.TM.ImportExport.ExporterAsync.New(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager, System.Func(Of Integer, Integer, System.Threading.Tasks.Task(Of Boolean)))
  name.vb: New(ICultureMetadataManager, Func(Of Integer, Integer, Task(Of Boolean)))
- uid: Sdl.Core.TM.ImportExport.ExporterAsync.OnBatchExportedAsync(System.Int32,System.Int32)
  commentId: M:Sdl.Core.TM.ImportExport.ExporterAsync.OnBatchExportedAsync(System.Int32,System.Int32)
  id: OnBatchExportedAsync(System.Int32,System.Int32)
  parent: Sdl.Core.TM.ImportExport.ExporterAsync
  langs:
  - csharp
  - vb
  name: OnBatchExportedAsync(int, int)
  nameWithType: ExporterAsync.OnBatchExportedAsync(int, int)
  fullName: Sdl.Core.TM.ImportExport.ExporterAsync.OnBatchExportedAsync(int, int)
  type: Method
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: protected virtual Task<bool> OnBatchExportedAsync(int totalProcessed, int totalExported)
    parameters:
    - id: totalProcessed
      type: System.Int32
    - id: totalExported
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Protected Overridable Function OnBatchExportedAsync(totalProcessed As Integer, totalExported As Integer) As Task(Of Boolean)
  overload: Sdl.Core.TM.ImportExport.ExporterAsync.OnBatchExportedAsync*
  nameWithType.vb: ExporterAsync.OnBatchExportedAsync(Integer, Integer)
  fullName.vb: Sdl.Core.TM.ImportExport.ExporterAsync.OnBatchExportedAsync(Integer, Integer)
  name.vb: OnBatchExportedAsync(Integer, Integer)
- uid: Sdl.Core.TM.ImportExport.ExporterAsync.ExportAsync(Sdl.Core.TM.ImportExport.IExportOriginAsync,System.String,System.Boolean)
  commentId: M:Sdl.Core.TM.ImportExport.ExporterAsync.ExportAsync(Sdl.Core.TM.ImportExport.IExportOriginAsync,System.String,System.Boolean)
  id: ExportAsync(Sdl.Core.TM.ImportExport.IExportOriginAsync,System.String,System.Boolean)
  parent: Sdl.Core.TM.ImportExport.ExporterAsync
  langs:
  - csharp
  - vb
  name: ExportAsync(IExportOriginAsync, string, bool)
  nameWithType: ExporterAsync.ExportAsync(IExportOriginAsync, string, bool)
  fullName: Sdl.Core.TM.ImportExport.ExporterAsync.ExportAsync(Sdl.Core.TM.ImportExport.IExportOriginAsync, string, bool)
  type: Method
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: >-
    Starts the export process with the configured settings into a file with the specified name.

    <remarks>This method supports GZip compressed files, such as: export.tmx.gz</remarks>
  example: []
  syntax:
    content: public Task ExportAsync(IExportOriginAsync exportOrigin, string fileName, bool overwriteExisting)
    parameters:
    - id: exportOrigin
      type: Sdl.Core.TM.ImportExport.IExportOriginAsync
      description: ''
    - id: fileName
      type: System.String
      description: Name of the file.
    - id: overwriteExisting
      type: System.Boolean
      description: if set to <code>true</code> [overwrite existing].
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ExportAsync(exportOrigin As IExportOriginAsync, fileName As String, overwriteExisting As Boolean) As Task
  overload: Sdl.Core.TM.ImportExport.ExporterAsync.ExportAsync*
  nameWithType.vb: ExporterAsync.ExportAsync(IExportOriginAsync, String, Boolean)
  fullName.vb: Sdl.Core.TM.ImportExport.ExporterAsync.ExportAsync(Sdl.Core.TM.ImportExport.IExportOriginAsync, String, Boolean)
  name.vb: ExportAsync(IExportOriginAsync, String, Boolean)
- uid: Sdl.Core.TM.ImportExport.ExporterAsync.TmxExportFormat
  commentId: P:Sdl.Core.TM.ImportExport.ExporterAsync.TmxExportFormat
  id: TmxExportFormat
  parent: Sdl.Core.TM.ImportExport.ExporterAsync
  langs:
  - csharp
  - vb
  name: TmxExportFormat
  nameWithType: ExporterAsync.TmxExportFormat
  fullName: Sdl.Core.TM.ImportExport.ExporterAsync.TmxExportFormat
  type: Property
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: Gets or sets the flavour of the exported TMX.
  example: []
  syntax:
    content: public TranslationUnitFormat TmxExportFormat { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnitFormat
    content.vb: Public Property TmxExportFormat As TranslationUnitFormat
  overload: Sdl.Core.TM.ImportExport.ExporterAsync.TmxExportFormat*
- uid: Sdl.Core.TM.ImportExport.ExporterAsync.FilterExpression
  commentId: P:Sdl.Core.TM.ImportExport.ExporterAsync.FilterExpression
  id: FilterExpression
  parent: Sdl.Core.TM.ImportExport.ExporterAsync
  langs:
  - csharp
  - vb
  name: FilterExpression
  nameWithType: ExporterAsync.FilterExpression
  fullName: Sdl.Core.TM.ImportExport.ExporterAsync.FilterExpression
  type: Property
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: Gets or sets the filter expression.
  example: []
  syntax:
    content: public FilterExpression FilterExpression { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
      description: The filter expression.
    content.vb: Public Property FilterExpression As FilterExpression
  overload: Sdl.Core.TM.ImportExport.ExporterAsync.FilterExpression*
references:
- uid: Sdl.Core.TM.ImportExport
  commentId: N:Sdl.Core.TM.ImportExport
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.TM.ImportExport
  nameWithType: Sdl.Core.TM.ImportExport
  fullName: Sdl.Core.TM.ImportExport
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.TM
    name: TM
    isExternal: true
    href: Sdl.Core.TM.html
  - name: .
  - uid: Sdl.Core.TM.ImportExport
    name: ImportExport
    isExternal: true
    href: Sdl.Core.TM.ImportExport.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.TM
    name: TM
    isExternal: true
    href: Sdl.Core.TM.html
  - name: .
  - uid: Sdl.Core.TM.ImportExport
    name: ImportExport
    isExternal: true
    href: Sdl.Core.TM.ImportExport.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.TM.ImportExport.ExporterAsync.#ctor*
  commentId: Overload:Sdl.Core.TM.ImportExport.ExporterAsync.#ctor
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ExporterAsync.html#Sdl_Core_TM_ImportExport_ExporterAsync__ctor_Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_System_Func_System_Int32_System_Int32_System_Threading_Tasks_Task_System_Boolean___
  name: ExporterAsync
  nameWithType: ExporterAsync.ExporterAsync
  fullName: Sdl.Core.TM.ImportExport.ExporterAsync.ExporterAsync
  nameWithType.vb: ExporterAsync.New
  fullName.vb: Sdl.Core.TM.ImportExport.ExporterAsync.New
  name.vb: New
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  commentId: T:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  parent: Sdl.Core.Globalization.CultureMetadataManager
  isExternal: true
  name: ICultureMetadataManager
  nameWithType: ICultureMetadataManager
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
- uid: System.Func{System.Int32,System.Int32,System.Threading.Tasks.Task{System.Boolean}}
  commentId: T:System.Func{System.Int32,System.Int32,System.Threading.Tasks.Task{System.Boolean}}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<int, int, Task<bool>>
  nameWithType: Func<int, int, Task<bool>>
  fullName: System.Func<int, int, System.Threading.Tasks.Task<bool>>
  nameWithType.vb: Func(Of Integer, Integer, Task(Of Boolean))
  fullName.vb: System.Func(Of Integer, Integer, System.Threading.Tasks.Task(Of Boolean))
  name.vb: Func(Of Integer, Integer, Task(Of Boolean))
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: Sdl.Core.Globalization.CultureMetadataManager
  commentId: N:Sdl.Core.Globalization.CultureMetadataManager
  isExternal: true
  name: Sdl.Core.Globalization.CultureMetadataManager
  nameWithType: Sdl.Core.Globalization.CultureMetadataManager
  fullName: Sdl.Core.Globalization.CultureMetadataManager
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
  - name: .
  - uid: Sdl.Core.Globalization.CultureMetadataManager
    name: CultureMetadataManager
    isExternal: true
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
  - name: .
  - uid: Sdl.Core.Globalization.CultureMetadataManager
    name: CultureMetadataManager
    isExternal: true
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Sdl.Core.TM.ImportExport.ExporterAsync.OnBatchExportedAsync*
  commentId: Overload:Sdl.Core.TM.ImportExport.ExporterAsync.OnBatchExportedAsync
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ExporterAsync.html#Sdl_Core_TM_ImportExport_ExporterAsync_OnBatchExportedAsync_System_Int32_System_Int32_
  name: OnBatchExportedAsync
  nameWithType: ExporterAsync.OnBatchExportedAsync
  fullName: Sdl.Core.TM.ImportExport.ExporterAsync.OnBatchExportedAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Sdl.Core.TM.ImportExport.ExporterAsync.ExportAsync*
  commentId: Overload:Sdl.Core.TM.ImportExport.ExporterAsync.ExportAsync
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ExporterAsync.html#Sdl_Core_TM_ImportExport_ExporterAsync_ExportAsync_Sdl_Core_TM_ImportExport_IExportOriginAsync_System_String_System_Boolean_
  name: ExportAsync
  nameWithType: ExporterAsync.ExportAsync
  fullName: Sdl.Core.TM.ImportExport.ExporterAsync.ExportAsync
- uid: Sdl.Core.TM.ImportExport.IExportOriginAsync
  commentId: T:Sdl.Core.TM.ImportExport.IExportOriginAsync
  parent: Sdl.Core.TM.ImportExport
  isExternal: true
  href: Sdl.Core.TM.ImportExport.IExportOriginAsync.html
  name: IExportOriginAsync
  nameWithType: IExportOriginAsync
  fullName: Sdl.Core.TM.ImportExport.IExportOriginAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Sdl.Core.TM.ImportExport.ExporterAsync.TmxExportFormat*
  commentId: Overload:Sdl.Core.TM.ImportExport.ExporterAsync.TmxExportFormat
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ExporterAsync.html#Sdl_Core_TM_ImportExport_ExporterAsync_TmxExportFormat
  name: TmxExportFormat
  nameWithType: ExporterAsync.TmxExportFormat
  fullName: Sdl.Core.TM.ImportExport.ExporterAsync.TmxExportFormat
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnitFormat
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TranslationUnitFormat
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.TranslationUnitFormat.html
  name: TranslationUnitFormat
  nameWithType: TranslationUnitFormat
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnitFormat
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  href: Sdl.html
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.TranslationMemory
    name: TranslationMemory
    isExternal: true
    href: Sdl.LanguagePlatform.TranslationMemory.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.TranslationMemory
    name: TranslationMemory
    isExternal: true
    href: Sdl.LanguagePlatform.TranslationMemory.html
- uid: Sdl.Core.TM.ImportExport.ExporterAsync.FilterExpression*
  commentId: Overload:Sdl.Core.TM.ImportExport.ExporterAsync.FilterExpression
  isExternal: true
  href: Sdl.Core.TM.ImportExport.ExporterAsync.html#Sdl_Core_TM_ImportExport_ExporterAsync_FilterExpression
  name: FilterExpression
  nameWithType: ExporterAsync.FilterExpression
  fullName: Sdl.Core.TM.ImportExport.ExporterAsync.FilterExpression
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.FilterExpression.html
  name: FilterExpression
  nameWithType: FilterExpression
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
