### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  id: LanguageResourceBundle
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.#ctor
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.#ctor(System.Globalization.CultureInfo)
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.#ctor(System.String)
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Abbreviations
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Clone
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.CurrencyFormats
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.IsCustomized
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Language
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LanguageCode
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LongDateFormats
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LongTimeFormats
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.MeasurementUnits
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.NumbersSeparators
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.OrdinalFollowers
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.PropertyChanged
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ResetToDefaults
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.SegmentationRules
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ShortDateFormats
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ShortTimeFormats
  - Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Variables
  langs:
  - csharp
  - vb
  name: LanguageResourceBundle
  nameWithType: LanguageResourceBundle
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nA language resource bundle holds custom language resources for a certain language (abbreviation, ordinal followers, variables and segmentation rules).\n"
  syntax:
    content: public class LanguageResourceBundle
    content.vb: Public Class LanguageResourceBundle
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.#ctor(System.Globalization.CultureInfo)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.#ctor(System.Globalization.CultureInfo)
  id: '#ctor(System.Globalization.CultureInfo)'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: LanguageResourceBundle(CultureInfo)
  nameWithType: LanguageResourceBundle.LanguageResourceBundle(CultureInfo)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LanguageResourceBundle(System.Globalization.CultureInfo)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCreates a new, empty language resource bundle for the specified language.\n"
  syntax:
    content: public LanguageResourceBundle(CultureInfo language)
    parameters:
    - id: language
      type: System.Globalization.CultureInfo
      description: The language for which the language resource bundle will hold resources.
    content.vb: Public Sub New(language As CultureInfo)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.#ctor(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: LanguageResourceBundle(String)
  nameWithType: LanguageResourceBundle.LanguageResourceBundle(String)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LanguageResourceBundle(System.String)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCreates a new, empty language resource bundle for the specified language.\n"
  syntax:
    content: public LanguageResourceBundle(string languageCode)
    parameters:
    - id: languageCode
      type: System.String
      description: The language code for which the language resource bundle will hold resources.
    content.vb: Public Sub New(languageCode As String)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: LanguageResourceBundle()
  nameWithType: LanguageResourceBundle.LanguageResourceBundle()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LanguageResourceBundle()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  syntax:
    content: public LanguageResourceBundle()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Clone
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Clone
  id: Clone
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: LanguageResourceBundle.Clone()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Clone()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCreates a deep copy of this language resource bundle.\n"
  syntax:
    content: public LanguageResourceBundle Clone()
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
    content.vb: Public Function Clone As LanguageResourceBundle
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ResetToDefaults
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ResetToDefaults
  id: ResetToDefaults
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: ResetToDefaults()
  nameWithType: LanguageResourceBundle.ResetToDefaults()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ResetToDefaults()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nResets all language resources to default (null).\n"
  syntax:
    content: public void ResetToDefaults()
    content.vb: Public Sub ResetToDefaults
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ResetToDefaults*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.IsCustomized
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.IsCustomized
  id: IsCustomized
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: IsCustomized()
  nameWithType: LanguageResourceBundle.IsCustomized()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.IsCustomized()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nReturns true if any language resource has be customized.\n"
  syntax:
    content: public bool IsCustomized()
    return:
      type: System.Boolean
    content.vb: Public Function IsCustomized As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.IsCustomized*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Language
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Language
  id: Language
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: LanguageResourceBundle.Language
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Language
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets the language for which the language resource bundle will hold resources.\n"
  syntax:
    content: public CultureInfo Language { get; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
    content.vb: Public ReadOnly Property Language As CultureInfo
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Language*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LanguageCode
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LanguageCode
  id: LanguageCode
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: LanguageCode
  nameWithType: LanguageResourceBundle.LanguageCode
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LanguageCode
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets the language code of the language for which the language resource bundle will hold resources.\n"
  syntax:
    content: public string LanguageCode { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property LanguageCode As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LanguageCode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Abbreviations
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Abbreviations
  id: Abbreviations
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: Abbreviations
  nameWithType: LanguageResourceBundle.Abbreviations
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Abbreviations
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the list abbreviations for this bundle&apos;s language.\n"
  remarks: >-
    Setting this property to null will force the default abbreviations for the language to be used during TM processing.

    In order to change the list of abbreviations, you can either manipulate the list returned, or assign an entirely new list.
  syntax:
    content: public Wordlist Abbreviations { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Wordlist
    content.vb: Public Property Abbreviations As Wordlist
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Abbreviations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.CurrencyFormats
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.CurrencyFormats
  id: CurrencyFormats
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: CurrencyFormats
  nameWithType: LanguageResourceBundle.CurrencyFormats
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.CurrencyFormats
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the list currency formats for this bundle&apos;s language.\n"
  remarks: >-
    Setting this property to null will force the default currency formts to be used.

    In order to change the list of currency formats, you can either manipulate the list returned, or assign an entirely new list.
  syntax:
    content: public List<CurrencyFormat> CurrencyFormats { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat}
    content.vb: Public Property CurrencyFormats As List(Of CurrencyFormat)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.CurrencyFormats*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.OrdinalFollowers
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.OrdinalFollowers
  id: OrdinalFollowers
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: OrdinalFollowers
  nameWithType: LanguageResourceBundle.OrdinalFollowers
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.OrdinalFollowers
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the list ordinal followers for this bundle&apos;s language.\n"
  remarks: >-
    Setting this property to null will force the default ordinal followers for the language to be used during TM processing.

    In order to change the list of ordinal followers, you can either manipulate the list returned, or assign an entirely new list.
  syntax:
    content: public Wordlist OrdinalFollowers { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Wordlist
    content.vb: Public Property OrdinalFollowers As Wordlist
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.OrdinalFollowers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Variables
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Variables
  id: Variables
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: Variables
  nameWithType: LanguageResourceBundle.Variables
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Variables
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the list variables for this bundle&apos;s language.\n"
  remarks: >-
    Setting this property to null will force the default variables for the language to be used during TM processing.

    In order to change the list of variables, you can either manipulate the list returned, or assign an entirely new list.
  syntax:
    content: public Wordlist Variables { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Wordlist
    content.vb: Public Property Variables As Wordlist
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Variables*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.SegmentationRules
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.SegmentationRules
  id: SegmentationRules
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: SegmentationRules
  nameWithType: LanguageResourceBundle.SegmentationRules
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.SegmentationRules
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the segmentation rules for this bundle&apos;s language.\n"
  remarks: >-
    Setting this property to null will force the default segmentation rules for the language to be used during TM processing.

    In order to change the segmentation rules, you can either manipulate the rules returned by this property, or assign an entirely new <xref href="Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public SegmentationRules SegmentationRules { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
    content.vb: Public Property SegmentationRules As SegmentationRules
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.SegmentationRules*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.NumbersSeparators
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.NumbersSeparators
  id: NumbersSeparators
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: NumbersSeparators
  nameWithType: LanguageResourceBundle.NumbersSeparators
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.NumbersSeparators
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  syntax:
    content: public List<SeparatorCombination> NumbersSeparators { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination}
    content.vb: Public Property NumbersSeparators As List(Of SeparatorCombination)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.NumbersSeparators*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ShortTimeFormats
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ShortTimeFormats
  id: ShortTimeFormats
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: ShortTimeFormats
  nameWithType: LanguageResourceBundle.ShortTimeFormats
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ShortTimeFormats
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the short time patterns for this bundle&apos;s language.\n"
  remarks: Setting this property to null will force the default short time patterns for the language to be used during TM processing.
  syntax:
    content: public List<string> ShortTimeFormats { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property ShortTimeFormats As List(Of String)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ShortTimeFormats*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ShortDateFormats
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ShortDateFormats
  id: ShortDateFormats
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: ShortDateFormats
  nameWithType: LanguageResourceBundle.ShortDateFormats
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ShortDateFormats
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the short date patterns for this bundle&apos;s language.\n"
  remarks: Setting this property to null will force the default short date patterns for the language to be used during TM processing.
  syntax:
    content: public List<string> ShortDateFormats { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property ShortDateFormats As List(Of String)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ShortDateFormats*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LongTimeFormats
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LongTimeFormats
  id: LongTimeFormats
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: LongTimeFormats
  nameWithType: LanguageResourceBundle.LongTimeFormats
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LongTimeFormats
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the long time patterns for this bundle&apos;s language.\n"
  remarks: Setting this property to null will force the default long time patterns for the language to be used during TM processing.
  syntax:
    content: public List<string> LongTimeFormats { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property LongTimeFormats As List(Of String)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LongTimeFormats*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LongDateFormats
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LongDateFormats
  id: LongDateFormats
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: LongDateFormats
  nameWithType: LanguageResourceBundle.LongDateFormats
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LongDateFormats
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the long date patterns for this bundle&apos;s language.\n"
  remarks: Setting this property to null will force the default long date patterns for the language to be used during TM processing.
  syntax:
    content: public List<string> LongDateFormats { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property LongDateFormats As List(Of String)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LongDateFormats*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.MeasurementUnits
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.MeasurementUnits
  id: MeasurementUnits
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: MeasurementUnits
  nameWithType: LanguageResourceBundle.MeasurementUnits
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.MeasurementUnits
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the measurement units for this bundle&apos;s language.\n"
  remarks: Setting this property to null will force the default measurement units for the language to be used during TM processing.
  syntax:
    content: public Dictionary<string, CustomUnitDefinition> MeasurementUnits { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition}
    content.vb: Public Property MeasurementUnits As Dictionary(Of String, CustomUnitDefinition)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.MeasurementUnits*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.PropertyChanged
  commentId: E:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.PropertyChanged
  id: PropertyChanged
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: LanguageResourceBundle.PropertyChanged
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.PropertyChanged
  type: Event
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nOccurs when a property value changes.\n"
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.#ctor
  isExternal: true
  name: LanguageResourceBundle
  nameWithType: LanguageResourceBundle.LanguageResourceBundle
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LanguageResourceBundle
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Clone*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Clone
  isExternal: true
  name: Clone
  nameWithType: LanguageResourceBundle.Clone
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Clone
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: LanguageResourceBundle
  nameWithType: LanguageResourceBundle
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ResetToDefaults*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ResetToDefaults
  isExternal: true
  name: ResetToDefaults
  nameWithType: LanguageResourceBundle.ResetToDefaults
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ResetToDefaults
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.IsCustomized*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.IsCustomized
  isExternal: true
  name: IsCustomized
  nameWithType: LanguageResourceBundle.IsCustomized
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.IsCustomized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Language*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Language
  isExternal: true
  name: Language
  nameWithType: LanguageResourceBundle.Language
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Language
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LanguageCode*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LanguageCode
  isExternal: true
  name: LanguageCode
  nameWithType: LanguageResourceBundle.LanguageCode
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LanguageCode
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Abbreviations*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Abbreviations
  isExternal: true
  name: Abbreviations
  nameWithType: LanguageResourceBundle.Abbreviations
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Abbreviations
- uid: Sdl.LanguagePlatform.Core.Wordlist
  commentId: T:Sdl.LanguagePlatform.Core.Wordlist
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: Wordlist
  nameWithType: Wordlist
  fullName: Sdl.LanguagePlatform.Core.Wordlist
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.CurrencyFormats*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.CurrencyFormats
  isExternal: true
  name: CurrencyFormats
  nameWithType: LanguageResourceBundle.CurrencyFormats
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.CurrencyFormats
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<CurrencyFormat>
  nameWithType: List<CurrencyFormat>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat>
  nameWithType.vb: List(Of CurrencyFormat)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat)
  name.vb: List(Of CurrencyFormat)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat
    name: CurrencyFormat
    nameWithType: CurrencyFormat
    fullName: Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat
    name: CurrencyFormat
    nameWithType: CurrencyFormat
    fullName: Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.OrdinalFollowers*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.OrdinalFollowers
  isExternal: true
  name: OrdinalFollowers
  nameWithType: LanguageResourceBundle.OrdinalFollowers
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.OrdinalFollowers
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Variables*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Variables
  isExternal: true
  name: Variables
  nameWithType: LanguageResourceBundle.Variables
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.Variables
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.SegmentationRules*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.SegmentationRules
  isExternal: true
  name: SegmentationRules
  nameWithType: LanguageResourceBundle.SegmentationRules
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.SegmentationRules
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  commentId: T:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  parent: Sdl.LanguagePlatform.Core.Segmentation
  isExternal: true
  name: SegmentationRules
  nameWithType: SegmentationRules
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
- uid: Sdl.LanguagePlatform.Core.Segmentation
  commentId: N:Sdl.LanguagePlatform.Core.Segmentation
  isExternal: true
  name: Sdl.LanguagePlatform.Core.Segmentation
  nameWithType: Sdl.LanguagePlatform.Core.Segmentation
  fullName: Sdl.LanguagePlatform.Core.Segmentation
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.NumbersSeparators*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.NumbersSeparators
  isExternal: true
  name: NumbersSeparators
  nameWithType: LanguageResourceBundle.NumbersSeparators
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.NumbersSeparators
- uid: System.Collections.Generic.List{Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination}
  commentId: T:System.Collections.Generic.List{Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SeparatorCombination>
  nameWithType: List<SeparatorCombination>
  fullName: System.Collections.Generic.List<Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination>
  nameWithType.vb: List(Of SeparatorCombination)
  fullName.vb: System.Collections.Generic.List(Of Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination)
  name.vb: List(Of SeparatorCombination)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination
    name: SeparatorCombination
    nameWithType: SeparatorCombination
    fullName: Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination
    name: SeparatorCombination
    nameWithType: SeparatorCombination
    fullName: Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ShortTimeFormats*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ShortTimeFormats
  isExternal: true
  name: ShortTimeFormats
  nameWithType: LanguageResourceBundle.ShortTimeFormats
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ShortTimeFormats
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ShortDateFormats*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ShortDateFormats
  isExternal: true
  name: ShortDateFormats
  nameWithType: LanguageResourceBundle.ShortDateFormats
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.ShortDateFormats
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LongTimeFormats*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LongTimeFormats
  isExternal: true
  name: LongTimeFormats
  nameWithType: LanguageResourceBundle.LongTimeFormats
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LongTimeFormats
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LongDateFormats*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LongDateFormats
  isExternal: true
  name: LongDateFormats
  nameWithType: LanguageResourceBundle.LongDateFormats
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.LongDateFormats
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.MeasurementUnits*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.MeasurementUnits
  isExternal: true
  name: MeasurementUnits
  nameWithType: LanguageResourceBundle.MeasurementUnits
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LanguageResourceBundle.MeasurementUnits
- uid: System.Collections.Generic.Dictionary{System.String,Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, CustomUnitDefinition>
  nameWithType: Dictionary<String, CustomUnitDefinition>
  fullName: System.Collections.Generic.Dictionary<System.String, Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition>
  nameWithType.vb: Dictionary(Of String, CustomUnitDefinition)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition)
  name.vb: Dictionary(Of String, CustomUnitDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition
    name: CustomUnitDefinition
    nameWithType: CustomUnitDefinition
    fullName: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition
    name: CustomUnitDefinition
    nameWithType: CustomUnitDefinition
    fullName: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: System.Collections.Generic.Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: System.Collections.Generic.Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.PropertyChangedEventHandler
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
