### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection
  id: IInputLanguageDirectionDataCollection
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Add(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory,Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageDirectionData)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Item(System.Int32)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Move(System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: IInputLanguageDirectionDataCollection
  nameWithType: IInputLanguageDirectionDataCollection
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection
  type: Interface
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nRepresents a collection of input language data (see <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData\" data-throw-if-not-resolved=\"false\"></xref>), \nwhich makes up the content that will be imported into a single output translation \nmemory (see <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.InputLanguageDirections\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  syntax:
    content: 'public interface IInputLanguageDirectionDataCollection : ICollection<IInputLanguageDirectionData>, IEnumerable<IInputLanguageDirectionData>, IEnumerable'
    content.vb: >-
      Public Interface IInputLanguageDirectionDataCollection
          Inherits ICollection(Of IInputLanguageDirectionData), IEnumerable(Of IInputLanguageDirectionData), IEnumerable
  inheritedMembers:
  - System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.Add(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData)
  - System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.Clear
  - System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.Contains(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData)
  - System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.CopyTo(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData[],System.Int32)
  - System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.Remove(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData)
  - System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.Count
  - System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.IsReadOnly
  - System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.GetEnumerator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Add(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory,Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageDirectionData)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Add(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory,Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageDirectionData)
  id: Add(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory,Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageDirectionData)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection
  langs:
  - csharp
  - vb
  name: Add(IInputTranslationMemory, ILegacyLanguageDirectionData)
  nameWithType: IInputLanguageDirectionDataCollection.Add(IInputTranslationMemory, ILegacyLanguageDirectionData)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Add(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory, Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageDirectionData)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nAdds a language direction of a legacy translation memory to the collection.\n"
  syntax:
    content: IInputLanguageDirectionData Add(IInputTranslationMemory translationMemory, ILegacyLanguageDirectionData languageDirectionData)
    parameters:
    - id: translationMemory
      type: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory
      description: The legacy translation memory.
    - id: languageDirectionData
      type: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageDirectionData
      description: One of the available language direction data from the legacy translation memory.
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
      description: >-
        A new <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData" data-throw-if-not-resolved="false"></xref> object, representing the language direction data of the

        legacy translation memory as input to a single output translation memory within a migration project.
    content.vb: Function Add(translationMemory As IInputTranslationMemory, languageDirectionData As ILegacyLanguageDirectionData) As IInputLanguageDirectionData
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Add*
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Move(System.Int32,System.Int32)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Move(System.Int32,System.Int32)
  id: Move(System.Int32,System.Int32)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection
  langs:
  - csharp
  - vb
  name: Move(Int32, Int32)
  nameWithType: IInputLanguageDirectionDataCollection.Move(Int32, Int32)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Move(System.Int32, System.Int32)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nMoves the input language direction data from <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromIndex</code> to <code data-dev-comment-type=\"paramref\" class=\"paramref\">toIndex</code>.\n"
  remarks: >-
    The content will be imported into the output translation memory in the order

    that input language direction data objects appear in this collection.
  syntax:
    content: void Move(int fromIndex, int toIndex)
    parameters:
    - id: fromIndex
      type: System.Int32
      description: The index from which to move the object.
    - id: toIndex
      type: System.Int32
      description: The index to which to move the object.
    content.vb: Sub Move(fromIndex As Integer, toIndex As Integer)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Move*
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Item(System.Int32)
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: IInputLanguageDirectionDataCollection.Item[Int32]
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Item[System.Int32]
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets the input language direction data at the specified index.\n"
  syntax:
    content: IInputLanguageDirectionData this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: The index.
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
      description: The input language direction data object at the specified index.
    content.vb: ReadOnly Property Item(index As Integer) As IInputLanguageDirectionData
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Item*
  nameWithType.vb: IInputLanguageDirectionDataCollection.Item(Int32)
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Item(System.Int32)
  name.vb: Item(Int32)
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
- uid: System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.Add(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData)
  commentId: M:System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.Add(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData)
  parent: System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(IInputLanguageDirectionData)
  nameWithType: ICollection<IInputLanguageDirectionData>.Add(IInputLanguageDirectionData)
  fullName: System.Collections.Generic.ICollection<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData>.Add(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData)
  nameWithType.vb: ICollection(Of IInputLanguageDirectionData).Add(IInputLanguageDirectionData)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData).Add(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<IInputLanguageDirectionData>.Add
    fullName: System.Collections.Generic.ICollection<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    name: IInputLanguageDirectionData
    nameWithType: IInputLanguageDirectionData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of IInputLanguageDirectionData).Add
    fullName: System.Collections.Generic.ICollection(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    name: IInputLanguageDirectionData
    nameWithType: IInputLanguageDirectionData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.Clear
  commentId: M:System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.Clear
  parent: System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<IInputLanguageDirectionData>.Clear()
  fullName: System.Collections.Generic.ICollection<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData>.Clear()
  nameWithType.vb: ICollection(Of IInputLanguageDirectionData).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<IInputLanguageDirectionData>.Clear
    fullName: System.Collections.Generic.ICollection<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of IInputLanguageDirectionData).Clear
    fullName: System.Collections.Generic.ICollection(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.Contains(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData)
  commentId: M:System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.Contains(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData)
  parent: System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(IInputLanguageDirectionData)
  nameWithType: ICollection<IInputLanguageDirectionData>.Contains(IInputLanguageDirectionData)
  fullName: System.Collections.Generic.ICollection<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData>.Contains(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData)
  nameWithType.vb: ICollection(Of IInputLanguageDirectionData).Contains(IInputLanguageDirectionData)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData).Contains(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<IInputLanguageDirectionData>.Contains
    fullName: System.Collections.Generic.ICollection<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    name: IInputLanguageDirectionData
    nameWithType: IInputLanguageDirectionData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of IInputLanguageDirectionData).Contains
    fullName: System.Collections.Generic.ICollection(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    name: IInputLanguageDirectionData
    nameWithType: IInputLanguageDirectionData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.CopyTo(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.CopyTo(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData[],System.Int32)
  parent: System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(IInputLanguageDirectionData[], Int32)
  nameWithType: ICollection<IInputLanguageDirectionData>.CopyTo(IInputLanguageDirectionData[], Int32)
  fullName: System.Collections.Generic.ICollection<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData>.CopyTo(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData[], System.Int32)
  nameWithType.vb: ICollection(Of IInputLanguageDirectionData).CopyTo(IInputLanguageDirectionData(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData).CopyTo(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData(), System.Int32)
  name.vb: CopyTo(IInputLanguageDirectionData(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<IInputLanguageDirectionData>.CopyTo
    fullName: System.Collections.Generic.ICollection<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    name: IInputLanguageDirectionData
    nameWithType: IInputLanguageDirectionData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of IInputLanguageDirectionData).CopyTo
    fullName: System.Collections.Generic.ICollection(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    name: IInputLanguageDirectionData
    nameWithType: IInputLanguageDirectionData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.Remove(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData)
  commentId: M:System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.Remove(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData)
  parent: System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(IInputLanguageDirectionData)
  nameWithType: ICollection<IInputLanguageDirectionData>.Remove(IInputLanguageDirectionData)
  fullName: System.Collections.Generic.ICollection<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData>.Remove(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData)
  nameWithType.vb: ICollection(Of IInputLanguageDirectionData).Remove(IInputLanguageDirectionData)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData).Remove(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<IInputLanguageDirectionData>.Remove
    fullName: System.Collections.Generic.ICollection<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    name: IInputLanguageDirectionData
    nameWithType: IInputLanguageDirectionData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of IInputLanguageDirectionData).Remove
    fullName: System.Collections.Generic.ICollection(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    name: IInputLanguageDirectionData
    nameWithType: IInputLanguageDirectionData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.Count
  commentId: P:System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.Count
  parent: System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<IInputLanguageDirectionData>.Count
  fullName: System.Collections.Generic.ICollection<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData>.Count
  nameWithType.vb: ICollection(Of IInputLanguageDirectionData).Count
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData).Count
- uid: System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.IsReadOnly
  parent: System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<IInputLanguageDirectionData>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData>.IsReadOnly
  nameWithType.vb: ICollection(Of IInputLanguageDirectionData).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData).IsReadOnly
- uid: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IInputLanguageDirectionData>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IInputLanguageDirectionData).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<IInputLanguageDirectionData>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of IInputLanguageDirectionData).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}
  commentId: T:System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IInputLanguageDirectionData>
  nameWithType: ICollection<IInputLanguageDirectionData>
  fullName: System.Collections.Generic.ICollection<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData>
  nameWithType.vb: ICollection(Of IInputLanguageDirectionData)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData)
  name.vb: ICollection(Of IInputLanguageDirectionData)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    name: IInputLanguageDirectionData
    nameWithType: IInputLanguageDirectionData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    name: IInputLanguageDirectionData
    nameWithType: IInputLanguageDirectionData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IInputLanguageDirectionData>
  nameWithType: IEnumerable<IInputLanguageDirectionData>
  fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData>
  nameWithType.vb: IEnumerable(Of IInputLanguageDirectionData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData)
  name.vb: IEnumerable(Of IInputLanguageDirectionData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    name: IInputLanguageDirectionData
    nameWithType: IInputLanguageDirectionData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    name: IInputLanguageDirectionData
    nameWithType: IInputLanguageDirectionData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Add*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Add
  isExternal: true
  name: Add
  nameWithType: IInputLanguageDirectionDataCollection.Add
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Add
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: IInputTranslationMemory
  nameWithType: IInputTranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageDirectionData
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageDirectionData
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: ILegacyLanguageDirectionData
  nameWithType: ILegacyLanguageDirectionData
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageDirectionData
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: IInputLanguageDirectionData
  nameWithType: IInputLanguageDirectionData
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Move*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Move
  isExternal: true
  name: Move
  nameWithType: IInputLanguageDirectionDataCollection.Move
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Move
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Item*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Item
  isExternal: true
  name: Item
  nameWithType: IInputLanguageDirectionDataCollection.Item
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection.Item
