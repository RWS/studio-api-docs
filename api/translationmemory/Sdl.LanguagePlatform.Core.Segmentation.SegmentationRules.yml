### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  commentId: T:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  id: SegmentationRules
  parent: Sdl.LanguagePlatform.Core.Segmentation
  children:
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor(Sdl.Core.Globalization.CultureCode,System.String)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor(System.String,System.String)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Add(System.Object)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.AddRule(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Clone
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Count
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Culture
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.CultureName
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Description
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.GetEnumerator
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Item(System.Int32)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.ListReferencesResolved
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadRaw(System.IO.Stream,Sdl.Core.Globalization.CultureCode,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializer(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializer(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Rules
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules,System.IO.Stream)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save(System.IO.Stream)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save(System.String)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.SaveUsingDataContractSerializer(System.IO.Stream)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.ToString
  langs:
  - csharp
  - vb
  name: SegmentationRules
  nameWithType: SegmentationRules
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  type: Class
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: A collection of segmentation rules.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class SegmentationRules : ICloneable
    content.vb: >-
      <DataContract>

      Public Class SegmentationRules Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  id: LoadAsync(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: LoadAsync(string, CultureCode, IResourceDataAccessorAsync)
  nameWithType: SegmentationRules.LoadAsync(string, CultureCode, IResourceDataAccessorAsync)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(string, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Load segmentation rules from a file. The resource data accessor is used to resolve

    any variable references which may be present in the rules.
  example: []
  syntax:
    content: public static Task<SegmentationRules> LoadAsync(string fileName, CultureCode cultureOverride, IResourceDataAccessorAsync accessor)
    parameters:
    - id: fileName
      type: System.String
      description: The name of the file to load the rules from
    - id: cultureOverride
      type: Sdl.Core.Globalization.CultureCode
      description: >-
        If provided, the specified culture will be 
                    used to retrieve any missing language resources and will be put into the 
                    result object.
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
      description: The resource data accessor to use to resolve variable references
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules}
      description: A fully initialized SegmentationRules object
    content.vb: Public Shared Function LoadAsync(fileName As String, cultureOverride As CultureCode, accessor As IResourceDataAccessorAsync) As Task(Of SegmentationRules)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync*
  nameWithType.vb: SegmentationRules.LoadAsync(String, CultureCode, IResourceDataAccessorAsync)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(String, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  name.vb: LoadAsync(String, CultureCode, IResourceDataAccessorAsync)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  id: Load(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: Load(string, CultureCode, IResourceDataAccessor)
  nameWithType: SegmentationRules.Load(string, CultureCode, IResourceDataAccessor)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(string, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: See <xref href="Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String%2cSdl.Core.Globalization.CultureCode%2cSdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [Obsolete("Use LoadAsync")]

      public static SegmentationRules Load(string fileName, CultureCode cultureOverride, IResourceDataAccessor accessor)
    parameters:
    - id: fileName
      type: System.String
      description: ''
    - id: cultureOverride
      type: Sdl.Core.Globalization.CultureCode
      description: ''
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
      description: ''
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
      description: ''
    content.vb: >-
      <Obsolete("Use LoadAsync")>

      Public Shared Function Load(fileName As String, cultureOverride As CultureCode, accessor As IResourceDataAccessor) As SegmentationRules
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use LoadAsync
  nameWithType.vb: SegmentationRules.Load(String, CultureCode, IResourceDataAccessor)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(String, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  name.vb: Load(String, CultureCode, IResourceDataAccessor)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  id: LoadAsync(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: LoadAsync(string, CultureCode, IResourceDataAccessorAsync, bool)
  nameWithType: SegmentationRules.LoadAsync(string, CultureCode, IResourceDataAccessorAsync, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(string, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Load segmentation rules from a file. The resource data accessor is used to resolve

    any variable references which may be present in the rules.
  example: []
  syntax:
    content: public static Task<SegmentationRules> LoadAsync(string fileName, CultureCode cultureOverride, IResourceDataAccessorAsync accessor, bool keepListReferences)
    parameters:
    - id: fileName
      type: System.String
      description: The name of the file to load the rules from
    - id: cultureOverride
      type: Sdl.Core.Globalization.CultureCode
      description: >-
        If provided, the specified culture will be 
                    used to retrieve any missing language resources and will be put into the 
                    result object.
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
      description: The resource data accessor to use to resolve variable references
    - id: keepListReferences
      type: System.Boolean
      description: >-
        If true, list references will not be resolved. The resulting
                    rule set will not be functional and should not be used for segmentation, only for editing, 
                    display, or copying between resource containers.
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules}
      description: A fully initialized SegmentationRules object
    content.vb: Public Shared Function LoadAsync(fileName As String, cultureOverride As CultureCode, accessor As IResourceDataAccessorAsync, keepListReferences As Boolean) As Task(Of SegmentationRules)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync*
  nameWithType.vb: SegmentationRules.LoadAsync(String, CultureCode, IResourceDataAccessorAsync, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(String, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, Boolean)
  name.vb: LoadAsync(String, CultureCode, IResourceDataAccessorAsync, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  id: Load(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: Load(string, CultureCode, IResourceDataAccessor, bool)
  nameWithType: SegmentationRules.Load(string, CultureCode, IResourceDataAccessor, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(string, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: See <xref href="Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String%2cSdl.Core.Globalization.CultureCode%2cSdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [Obsolete("Use LoadAsync")]

      public static SegmentationRules Load(string fileName, CultureCode cultureOverride, IResourceDataAccessor accessor, bool keepListReferences)
    parameters:
    - id: fileName
      type: System.String
      description: ''
    - id: cultureOverride
      type: Sdl.Core.Globalization.CultureCode
      description: ''
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
      description: ''
    - id: keepListReferences
      type: System.Boolean
      description: ''
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
      description: ''
    content.vb: >-
      <Obsolete("Use LoadAsync")>

      Public Shared Function Load(fileName As String, cultureOverride As CultureCode, accessor As IResourceDataAccessor, keepListReferences As Boolean) As SegmentationRules
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use LoadAsync
  nameWithType.vb: SegmentationRules.Load(String, CultureCode, IResourceDataAccessor, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(String, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor, Boolean)
  name.vb: Load(String, CultureCode, IResourceDataAccessor, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  id: LoadAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: LoadAsync(Stream, CultureCode, IResourceDataAccessorAsync)
  nameWithType: SegmentationRules.LoadAsync(Stream, CultureCode, IResourceDataAccessorAsync)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Load segmentation rules from a stream. The resource data accessor is used to resolve

    any variable references which may be present in the rules.
  example: []
  syntax:
    content: public static Task<SegmentationRules> LoadAsync(Stream reader, CultureCode cultureOverride, IResourceDataAccessorAsync accessor)
    parameters:
    - id: reader
      type: System.IO.Stream
      description: The stream to load the rules from
    - id: cultureOverride
      type: Sdl.Core.Globalization.CultureCode
      description: >-
        If provided, the specified culture will be 
                    used to retrieve any missing language resources and will be put into the 
                    result object.
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
      description: The resource data accessor to use to resolve variable references
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules}
      description: A fully initialized SegmentationRules object
    content.vb: Public Shared Function LoadAsync(reader As Stream, cultureOverride As CultureCode, accessor As IResourceDataAccessorAsync) As Task(Of SegmentationRules)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync*
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  id: Load(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: Load(Stream, CultureCode, IResourceDataAccessor)
  nameWithType: SegmentationRules.Load(Stream, CultureCode, IResourceDataAccessor)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: See <xref href="Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream%2cSdl.Core.Globalization.CultureCode%2cSdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [Obsolete("Use LoadAsync")]

      public static SegmentationRules Load(Stream reader, CultureCode cultureOverride, IResourceDataAccessor accessor)
    parameters:
    - id: reader
      type: System.IO.Stream
      description: ''
    - id: cultureOverride
      type: Sdl.Core.Globalization.CultureCode
      description: ''
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
      description: ''
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
      description: ''
    content.vb: >-
      <Obsolete("Use LoadAsync")>

      Public Shared Function Load(reader As Stream, cultureOverride As CultureCode, accessor As IResourceDataAccessor) As SegmentationRules
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use LoadAsync
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  id: LoadAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: LoadAsync(Stream, CultureCode, IResourceDataAccessorAsync, bool)
  nameWithType: SegmentationRules.LoadAsync(Stream, CultureCode, IResourceDataAccessorAsync, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Load segmentation rules from a stream. The resource data accessor is used to resolve

    any variable references which may be present in the rules.
  example: []
  syntax:
    content: public static Task<SegmentationRules> LoadAsync(Stream reader, CultureCode cultureOverride, IResourceDataAccessorAsync accessor, bool keepListReferences)
    parameters:
    - id: reader
      type: System.IO.Stream
      description: The stream to load the rules from
    - id: cultureOverride
      type: Sdl.Core.Globalization.CultureCode
      description: >-
        If provided, the specified culture will be 
                    used to retrieve any missing language resources and will be put into the 
                    result object.
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
      description: The resource data accessor to use to resolve variable references
    - id: keepListReferences
      type: System.Boolean
      description: >-
        If true, list references will not be resolved. The resulting
                    rule set will not be functional and should not be used for segmentation, only for editing, 
                    display, or copying between resource containers.
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules}
      description: A fully initialized SegmentationRules object
    content.vb: Public Shared Function LoadAsync(reader As Stream, cultureOverride As CultureCode, accessor As IResourceDataAccessorAsync, keepListReferences As Boolean) As Task(Of SegmentationRules)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync*
  nameWithType.vb: SegmentationRules.LoadAsync(Stream, CultureCode, IResourceDataAccessorAsync, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, Boolean)
  name.vb: LoadAsync(Stream, CultureCode, IResourceDataAccessorAsync, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  id: LoadAsync(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: LoadAsync(string, string, IResourceDataAccessorAsync)
  nameWithType: SegmentationRules.LoadAsync(string, string, IResourceDataAccessorAsync)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(string, string, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Load segmentation rules from a file. The resource data accessor is used to resolve

    any variable references which may be present in the rules.
  example: []
  syntax:
    content: public static Task<SegmentationRules> LoadAsync(string fileName, string cultureOverride, IResourceDataAccessorAsync accessor)
    parameters:
    - id: fileName
      type: System.String
      description: The name of the file to load the rules from
    - id: cultureOverride
      type: System.String
      description: >-
        If provided, the specified culture will be 
                    used to retrieve any missing language resources and will be put into the 
                    result object.
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
      description: The resource data accessor to use to resolve variable references
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules}
      description: A fully initialized SegmentationRules object
    content.vb: Public Shared Function LoadAsync(fileName As String, cultureOverride As String, accessor As IResourceDataAccessorAsync) As Task(Of SegmentationRules)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync*
  nameWithType.vb: SegmentationRules.LoadAsync(String, String, IResourceDataAccessorAsync)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(String, String, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  name.vb: LoadAsync(String, String, IResourceDataAccessorAsync)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  id: LoadAsync(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: LoadAsync(string, string, IResourceDataAccessorAsync, bool)
  nameWithType: SegmentationRules.LoadAsync(string, string, IResourceDataAccessorAsync, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(string, string, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Load segmentation rules from a file. The resource data accessor is used to resolve

    any variable references which may be present in the rules.
  example: []
  syntax:
    content: public static Task<SegmentationRules> LoadAsync(string fileName, string cultureOverride, IResourceDataAccessorAsync accessor, bool keepListReferences)
    parameters:
    - id: fileName
      type: System.String
      description: The name of the file to load the rules from
    - id: cultureOverride
      type: System.String
      description: >-
        If provided, the specified culture will be 
                    used to retrieve any missing language resources and will be put into the 
                    result object.
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
      description: The resource data accessor to use to resolve variable references
    - id: keepListReferences
      type: System.Boolean
      description: >-
        If true, list references will not be resolved. The resulting
                    rule set will not be functional and should not be used for segmentation, only for editing, 
                    display, or copying between resource containers.
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules}
      description: A fully initialized SegmentationRules object
    content.vb: Public Shared Function LoadAsync(fileName As String, cultureOverride As String, accessor As IResourceDataAccessorAsync, keepListReferences As Boolean) As Task(Of SegmentationRules)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync*
  nameWithType.vb: SegmentationRules.LoadAsync(String, String, IResourceDataAccessorAsync, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(String, String, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, Boolean)
  name.vb: LoadAsync(String, String, IResourceDataAccessorAsync, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  id: LoadAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: LoadAsync(Stream, string, IResourceDataAccessorAsync)
  nameWithType: SegmentationRules.LoadAsync(Stream, string, IResourceDataAccessorAsync)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream, string, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Load segmentation rules from a stream. The resource data accessor is used to resolve

    any variable references which may be present in the rules.
  example: []
  syntax:
    content: public static Task<SegmentationRules> LoadAsync(Stream reader, string cultureOverride, IResourceDataAccessorAsync accessor)
    parameters:
    - id: reader
      type: System.IO.Stream
      description: The stream to load the rules from
    - id: cultureOverride
      type: System.String
      description: >-
        If provided, the specified culture will be 
                    used to retrieve any missing language resources and will be put into the 
                    result object.
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
      description: The resource data accessor to use to resolve variable references
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules}
      description: A fully initialized SegmentationRules object
    content.vb: Public Shared Function LoadAsync(reader As Stream, cultureOverride As String, accessor As IResourceDataAccessorAsync) As Task(Of SegmentationRules)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync*
  nameWithType.vb: SegmentationRules.LoadAsync(Stream, String, IResourceDataAccessorAsync)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream, String, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  name.vb: LoadAsync(Stream, String, IResourceDataAccessorAsync)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  id: LoadAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: LoadAsync(Stream, string, IResourceDataAccessorAsync, bool)
  nameWithType: SegmentationRules.LoadAsync(Stream, string, IResourceDataAccessorAsync, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream, string, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Load segmentation rules from a stream. The resource data accessor is used to resolve

    any variable references which may be present in the rules.
  example: []
  syntax:
    content: public static Task<SegmentationRules> LoadAsync(Stream reader, string cultureOverride, IResourceDataAccessorAsync accessor, bool keepListReferences)
    parameters:
    - id: reader
      type: System.IO.Stream
      description: The stream to load the rules from
    - id: cultureOverride
      type: System.String
      description: >-
        If provided, the specified culture will be 
                    used to retrieve any missing language resources and will be put into the 
                    result object.
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
      description: The resource data accessor to use to resolve variable references
    - id: keepListReferences
      type: System.Boolean
      description: >-
        If true, list references will not be resolved. The resulting
                    rule set will not be functional and should not be used for segmentation, only for editing, 
                    display, or copying between resource containers.
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules}
      description: A fully initialized SegmentationRules object
    content.vb: Public Shared Function LoadAsync(reader As Stream, cultureOverride As String, accessor As IResourceDataAccessorAsync, keepListReferences As Boolean) As Task(Of SegmentationRules)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync*
  nameWithType.vb: SegmentationRules.LoadAsync(Stream, String, IResourceDataAccessorAsync, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream, String, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, Boolean)
  name.vb: LoadAsync(Stream, String, IResourceDataAccessorAsync, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  id: Load(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: Load(Stream, string, IResourceDataAccessor, bool)
  nameWithType: SegmentationRules.Load(Stream, string, IResourceDataAccessor, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream, string, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: See <xref href="Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream%2cSystem.String%2cSdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [Obsolete("Use LoadAsync")]

      public static SegmentationRules Load(Stream reader, string cultureOverride, IResourceDataAccessor accessor, bool keepListReferences)
    parameters:
    - id: reader
      type: System.IO.Stream
      description: ''
    - id: cultureOverride
      type: System.String
      description: ''
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
      description: ''
    - id: keepListReferences
      type: System.Boolean
      description: ''
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
      description: ''
    content.vb: >-
      <Obsolete("Use LoadAsync")>

      Public Shared Function Load(reader As Stream, cultureOverride As String, accessor As IResourceDataAccessor, keepListReferences As Boolean) As SegmentationRules
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use LoadAsync
  nameWithType.vb: SegmentationRules.Load(Stream, String, IResourceDataAccessor, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream, String, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor, Boolean)
  name.vb: Load(Stream, String, IResourceDataAccessor, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  id: Load(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: Load(string, string, IResourceDataAccessor)
  nameWithType: SegmentationRules.Load(string, string, IResourceDataAccessor)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(string, string, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: See <xref href="Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String%2cSystem.String%2cSdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [Obsolete("Use LoadAsync")]

      public static SegmentationRules Load(string fileName, string cultureOverride, IResourceDataAccessor accessor)
    parameters:
    - id: fileName
      type: System.String
      description: ''
    - id: cultureOverride
      type: System.String
      description: ''
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
      description: ''
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
      description: ''
    content.vb: >-
      <Obsolete("Use LoadAsync")>

      Public Shared Function Load(fileName As String, cultureOverride As String, accessor As IResourceDataAccessor) As SegmentationRules
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use LoadAsync
  nameWithType.vb: SegmentationRules.Load(String, String, IResourceDataAccessor)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(String, String, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  name.vb: Load(String, String, IResourceDataAccessor)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  id: Load(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: Load(Stream, string, IResourceDataAccessor)
  nameWithType: SegmentationRules.Load(Stream, string, IResourceDataAccessor)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream, string, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: See <xref href="Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream%2cSystem.String%2cSdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [Obsolete("Use LoadAsync")]

      public static SegmentationRules Load(Stream reader, string cultureOverride, IResourceDataAccessor accessor)
    parameters:
    - id: reader
      type: System.IO.Stream
      description: ''
    - id: cultureOverride
      type: System.String
      description: ''
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
      description: ''
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
      description: ''
    content.vb: >-
      <Obsolete("Use LoadAsync")>

      Public Shared Function Load(reader As Stream, cultureOverride As String, accessor As IResourceDataAccessor) As SegmentationRules
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use LoadAsync
  nameWithType.vb: SegmentationRules.Load(Stream, String, IResourceDataAccessor)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream, String, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor)
  name.vb: Load(Stream, String, IResourceDataAccessor)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  id: Load(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: Load(string, string, IResourceDataAccessor, bool)
  nameWithType: SegmentationRules.Load(string, string, IResourceDataAccessor, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(string, string, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: See <xref href="Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream%2cSystem.String%2cSdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [Obsolete("Use LoadAsync")]

      public static SegmentationRules Load(string fileName, string cultureOverride, IResourceDataAccessor accessor, bool keepListReferences)
    parameters:
    - id: fileName
      type: System.String
      description: ''
    - id: cultureOverride
      type: System.String
      description: ''
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
      description: ''
    - id: keepListReferences
      type: System.Boolean
      description: ''
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
      description: ''
    content.vb: >-
      <Obsolete("Use LoadAsync")>

      Public Shared Function Load(fileName As String, cultureOverride As String, accessor As IResourceDataAccessor, keepListReferences As Boolean) As SegmentationRules
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use LoadAsync
  nameWithType.vb: SegmentationRules.Load(String, String, IResourceDataAccessor, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(String, String, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor, Boolean)
  name.vb: Load(String, String, IResourceDataAccessor, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  id: Load(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: Load(Stream, CultureCode, IResourceDataAccessor, bool)
  nameWithType: SegmentationRules.Load(Stream, CultureCode, IResourceDataAccessor, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: See <xref href="Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream%2cSdl.Core.Globalization.CultureCode%2cSdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [Obsolete("Use LoadAsync")]

      public static SegmentationRules Load(Stream reader, CultureCode cultureOverride, IResourceDataAccessor accessor, bool keepListReferences)
    parameters:
    - id: reader
      type: System.IO.Stream
      description: ''
    - id: cultureOverride
      type: Sdl.Core.Globalization.CultureCode
      description: ''
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
      description: ''
    - id: keepListReferences
      type: System.Boolean
      description: ''
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
      description: ''
    content.vb: >-
      <Obsolete("Use LoadAsync")>

      Public Shared Function Load(reader As Stream, cultureOverride As CultureCode, accessor As IResourceDataAccessor, keepListReferences As Boolean) As SegmentationRules
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use LoadAsync
  nameWithType.vb: SegmentationRules.Load(Stream, CultureCode, IResourceDataAccessor, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load(System.IO.Stream, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor, Boolean)
  name.vb: Load(Stream, CultureCode, IResourceDataAccessor, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  id: LoadUsingDataContractSerializerAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: LoadUsingDataContractSerializerAsync(Stream, CultureCode, IResourceDataAccessorAsync, bool)
  nameWithType: SegmentationRules.LoadUsingDataContractSerializerAsync(Stream, CultureCode, IResourceDataAccessorAsync, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Load segmentation rules from a stream. The resource data accessor is used to resolve

    any variable references which may be present in the rules. The data is assumed to be

    serialized by a <xref href="System.Runtime.Serialization.DataContractSerializer" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task<SegmentationRules> LoadUsingDataContractSerializerAsync(Stream reader, CultureCode cultureOverride, IResourceDataAccessorAsync accessor, bool keepListReferences)
    parameters:
    - id: reader
      type: System.IO.Stream
      description: The stream to load the rules from
    - id: cultureOverride
      type: Sdl.Core.Globalization.CultureCode
      description: >-
        If provided, the specified culture will be 
                    used to retrieve any missing language resources and will be put into the 
                    result object.
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
      description: The resource data accessor to use to resolve variable references
    - id: keepListReferences
      type: System.Boolean
      description: >-
        If true, list references will not be resolved. The resulting
                    rule set will not be functional and should not be used for segmentation, only for editing, 
                    display, or copying between resource containers.
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules}
      description: A fully initialized SegmentationRules object
    content.vb: Public Shared Function LoadUsingDataContractSerializerAsync(reader As Stream, cultureOverride As CultureCode, accessor As IResourceDataAccessorAsync, keepListReferences As Boolean) As Task(Of SegmentationRules)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync*
  nameWithType.vb: SegmentationRules.LoadUsingDataContractSerializerAsync(Stream, CultureCode, IResourceDataAccessorAsync, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, Boolean)
  name.vb: LoadUsingDataContractSerializerAsync(Stream, CultureCode, IResourceDataAccessorAsync, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  id: LoadUsingDataContractSerializerAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: LoadUsingDataContractSerializerAsync(Stream, string, IResourceDataAccessorAsync, bool)
  nameWithType: SegmentationRules.LoadUsingDataContractSerializerAsync(Stream, string, IResourceDataAccessorAsync, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream, string, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Load segmentation rules from a stream. The resource data accessor is used to resolve

    any variable references which may be present in the rules. The data is assumed to be

    serialized by a <xref href="System.Runtime.Serialization.DataContractSerializer" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task<SegmentationRules> LoadUsingDataContractSerializerAsync(Stream reader, string cultureOverride, IResourceDataAccessorAsync accessor, bool keepListReferences)
    parameters:
    - id: reader
      type: System.IO.Stream
      description: The stream to load the rules from
    - id: cultureOverride
      type: System.String
      description: >-
        If provided, the specified culture will be 
                    used to retrieve any missing language resources and will be put into the 
                    result object.
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
      description: The resource data accessor to use to resolve variable references
    - id: keepListReferences
      type: System.Boolean
      description: >-
        If true, list references will not be resolved. The resulting
                    rule set will not be functional and should not be used for segmentation, only for editing, 
                    display, or copying between resource containers.
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules}
      description: A fully initialized SegmentationRules object
    content.vb: Public Shared Function LoadUsingDataContractSerializerAsync(reader As Stream, cultureOverride As String, accessor As IResourceDataAccessorAsync, keepListReferences As Boolean) As Task(Of SegmentationRules)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync*
  nameWithType.vb: SegmentationRules.LoadUsingDataContractSerializerAsync(Stream, String, IResourceDataAccessorAsync, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream, String, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, Boolean)
  name.vb: LoadUsingDataContractSerializerAsync(Stream, String, IResourceDataAccessorAsync, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializer(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializer(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  id: LoadUsingDataContractSerializer(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: LoadUsingDataContractSerializer(Stream, string, IResourceDataAccessor, bool)
  nameWithType: SegmentationRules.LoadUsingDataContractSerializer(Stream, string, IResourceDataAccessor, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializer(System.IO.Stream, string, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: See <xref href="Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream%2cSystem.String%2cSdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [Obsolete("Use LoadUsingDataContractSerializerAsync")]

      public static SegmentationRules LoadUsingDataContractSerializer(Stream reader, string cultureOverride, IResourceDataAccessor accessor, bool keepListReferences)
    parameters:
    - id: reader
      type: System.IO.Stream
      description: ''
    - id: cultureOverride
      type: System.String
      description: ''
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
      description: ''
    - id: keepListReferences
      type: System.Boolean
      description: ''
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
      description: ''
    content.vb: >-
      <Obsolete("Use LoadUsingDataContractSerializerAsync")>

      Public Shared Function LoadUsingDataContractSerializer(reader As Stream, cultureOverride As String, accessor As IResourceDataAccessor, keepListReferences As Boolean) As SegmentationRules
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializer*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use LoadUsingDataContractSerializerAsync
  nameWithType.vb: SegmentationRules.LoadUsingDataContractSerializer(Stream, String, IResourceDataAccessor, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializer(System.IO.Stream, String, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor, Boolean)
  name.vb: LoadUsingDataContractSerializer(Stream, String, IResourceDataAccessor, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializer(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializer(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  id: LoadUsingDataContractSerializer(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: LoadUsingDataContractSerializer(Stream, CultureCode, IResourceDataAccessor, bool)
  nameWithType: SegmentationRules.LoadUsingDataContractSerializer(Stream, CultureCode, IResourceDataAccessor, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializer(System.IO.Stream, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: See <xref href="Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream%2cSdl.Core.Globalization.CultureCode%2cSdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [Obsolete("Use LoadUsingDataContractSerializerAsync")]

      public static SegmentationRules LoadUsingDataContractSerializer(Stream reader, CultureCode cultureOverride, IResourceDataAccessor accessor, bool keepListReferences)
    parameters:
    - id: reader
      type: System.IO.Stream
      description: ''
    - id: cultureOverride
      type: Sdl.Core.Globalization.CultureCode
      description: ''
    - id: accessor
      type: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
      description: ''
    - id: keepListReferences
      type: System.Boolean
      description: ''
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
      description: ''
    content.vb: >-
      <Obsolete("Use LoadUsingDataContractSerializerAsync")>

      Public Shared Function LoadUsingDataContractSerializer(reader As Stream, cultureOverride As CultureCode, accessor As IResourceDataAccessor, keepListReferences As Boolean) As SegmentationRules
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializer*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use LoadUsingDataContractSerializerAsync
  nameWithType.vb: SegmentationRules.LoadUsingDataContractSerializer(Stream, CultureCode, IResourceDataAccessor, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializer(System.IO.Stream, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor, Boolean)
  name.vb: LoadUsingDataContractSerializer(Stream, CultureCode, IResourceDataAccessor, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadRaw(System.IO.Stream,Sdl.Core.Globalization.CultureCode,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadRaw(System.IO.Stream,Sdl.Core.Globalization.CultureCode,System.Boolean)
  id: LoadRaw(System.IO.Stream,Sdl.Core.Globalization.CultureCode,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: LoadRaw(Stream, CultureCode, bool)
  nameWithType: SegmentationRules.LoadRaw(Stream, CultureCode, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadRaw(System.IO.Stream, Sdl.Core.Globalization.CultureCode, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Equivalent to <xref href="Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream%2cSdl.Core.Globalization.CultureCode%2cSdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    where keepListReferences is true and no accessor is provided, i.e. loads

    the rules from XML without resolving any references and/or removing any

    unresolved rules.
  example: []
  syntax:
    content: public static SegmentationRules LoadRaw(Stream reader, CultureCode cultureOverride, bool useDataContractSerializer)
    parameters:
    - id: reader
      type: System.IO.Stream
      description: ''
    - id: cultureOverride
      type: Sdl.Core.Globalization.CultureCode
      description: ''
    - id: useDataContractSerializer
      type: System.Boolean
      description: ''
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
      description: ''
    content.vb: Public Shared Function LoadRaw(reader As Stream, cultureOverride As CultureCode, useDataContractSerializer As Boolean) As SegmentationRules
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadRaw*
  nameWithType.vb: SegmentationRules.LoadRaw(Stream, CultureCode, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadRaw(System.IO.Stream, Sdl.Core.Globalization.CultureCode, Boolean)
  name.vb: LoadRaw(Stream, CultureCode, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: SegmentationRules()
  nameWithType: SegmentationRules.SegmentationRules()
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.SegmentationRules()
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Initializes a new instance with default values. This constructor is required for

    XML deserialization and should not be used directly.
  example: []
  syntax:
    content: public SegmentationRules()
    content.vb: Public Sub New()
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor*
  nameWithType.vb: SegmentationRules.New()
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.New()
  name.vb: New()
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules)
  id: '#ctor(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules)'
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: SegmentationRules(SegmentationRules)
  nameWithType: SegmentationRules.SegmentationRules(SegmentationRules)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.SegmentationRules(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Initializes a new instance with the values of another instance, creating a deep copy.
  example: []
  syntax:
    content: public SegmentationRules(SegmentationRules other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
      description: The other instance
    content.vb: Public Sub New(other As SegmentationRules)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor*
  nameWithType.vb: SegmentationRules.New(SegmentationRules)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.New(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules)
  name.vb: New(SegmentationRules)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor(Sdl.Core.Globalization.CultureCode,System.String)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor(Sdl.Core.Globalization.CultureCode,System.String)
  id: '#ctor(Sdl.Core.Globalization.CultureCode,System.String)'
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: SegmentationRules(CultureCode, string)
  nameWithType: SegmentationRules.SegmentationRules(CultureCode, string)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.SegmentationRules(Sdl.Core.Globalization.CultureCode, string)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Initializes a new instance with the specified values.
  example: []
  syntax:
    content: public SegmentationRules(CultureCode culture, string description)
    parameters:
    - id: culture
      type: Sdl.Core.Globalization.CultureCode
      description: >-
        The culture for which to apply this segmentation rule set. This
                    culture is also used to retrieve additional language resources, if required.
    - id: description
      type: System.String
      description: A description for this segmentation rules set.
    content.vb: Public Sub New(culture As CultureCode, description As String)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor*
  nameWithType.vb: SegmentationRules.New(CultureCode, String)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.New(Sdl.Core.Globalization.CultureCode, String)
  name.vb: New(CultureCode, String)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor(System.String,System.String)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: SegmentationRules(string, string)
  nameWithType: SegmentationRules.SegmentationRules(string, string)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.SegmentationRules(string, string)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Initializes a new instance with the specified values.
  example: []
  syntax:
    content: public SegmentationRules(string cultureName, string description)
    parameters:
    - id: cultureName
      type: System.String
      description: >-
        The culture for which to apply this segmentation rule set. This
                    culture is also used to retrieve additional language resources, if required.
    - id: description
      type: System.String
      description: A description for this segmentation rules set.
    content.vb: Public Sub New(cultureName As String, description As String)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor*
  nameWithType.vb: SegmentationRules.New(String, String)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.New(String, String)
  name.vb: New(String, String)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.ToString
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.ToString
  id: ToString
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SegmentationRules.ToString()
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.ToString()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: <xref href="System.Object.ToString" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representation of the object, for display purposes.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.ToString*
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules,System.IO.Stream)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules,System.IO.Stream)
  id: Save(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules,System.IO.Stream)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: Save(SegmentationRules, Stream)
  nameWithType: SegmentationRules.Save(SegmentationRules, Stream)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules, System.IO.Stream)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Saves the rules to a stream.
  example: []
  syntax:
    content: public static void Save(SegmentationRules rules, Stream writer)
    parameters:
    - id: rules
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
    - id: writer
      type: System.IO.Stream
    content.vb: Public Shared Sub Save(rules As SegmentationRules, writer As Stream)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save*
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save(System.String)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save(System.String)
  id: Save(System.String)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: Save(string)
  nameWithType: SegmentationRules.Save(string)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save(string)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Saves a segmentation rules object to a file.
  example: []
  syntax:
    content: public void Save(string fileName)
    parameters:
    - id: fileName
      type: System.String
    content.vb: Public Sub Save(fileName As String)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save*
  nameWithType.vb: SegmentationRules.Save(String)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save(String)
  name.vb: Save(String)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save(System.IO.Stream)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: Save(Stream)
  nameWithType: SegmentationRules.Save(Stream)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save(System.IO.Stream)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Saves a segmentation rules object to a stream.
  example: []
  syntax:
    content: public void Save(Stream writer)
    parameters:
    - id: writer
      type: System.IO.Stream
    content.vb: Public Sub Save(writer As Stream)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save*
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.SaveUsingDataContractSerializer(System.IO.Stream)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.SaveUsingDataContractSerializer(System.IO.Stream)
  id: SaveUsingDataContractSerializer(System.IO.Stream)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: SaveUsingDataContractSerializer(Stream)
  nameWithType: SegmentationRules.SaveUsingDataContractSerializer(Stream)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.SaveUsingDataContractSerializer(System.IO.Stream)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Saves a segmentation rules object to a stream, using a 

    <xref href="System.Runtime.Serialization.DataContractSerializer" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void SaveUsingDataContractSerializer(Stream writer)
    parameters:
    - id: writer
      type: System.IO.Stream
    content.vb: Public Sub SaveUsingDataContractSerializer(writer As Stream)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.SaveUsingDataContractSerializer*
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.AddRule(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.AddRule(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule)
  id: AddRule(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: AddRule(SegmentationRule)
  nameWithType: SegmentationRules.AddRule(SegmentationRule)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.AddRule(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Adds the specified rule to the rule set (non-null).
  example: []
  syntax:
    content: public void AddRule(SegmentationRule r)
    parameters:
    - id: r
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
    content.vb: Public Sub AddRule(r As SegmentationRule)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.AddRule*
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Add(System.Object)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Add(System.Object)
  id: Add(System.Object)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: Add(object)
  nameWithType: SegmentationRules.Add(object)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Add(object)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Adds the specified object, which must be a non-null <xref href="Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule" data-throw-if-not-resolved="false"></xref>, to the list of 

    rules. This method is for XML deserialization only and should not be used.
  example: []
  syntax:
    content: public void Add(object o)
    parameters:
    - id: o
      type: System.Object
    content.vb: Public Sub Add(o As Object)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Add*
  nameWithType.vb: SegmentationRules.Add(Object)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Add(Object)
  name.vb: Add(Object)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.GetEnumerator
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.GetEnumerator
  id: GetEnumerator
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: SegmentationRules.GetEnumerator()
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.GetEnumerator()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Returns an enumerator which can be used to iterate through the segmentation rules.
  example: []
  syntax:
    content: public IEnumerator<SegmentationRule> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule}
      description: An enumerator
    content.vb: Public Function GetEnumerator() As IEnumerator(Of SegmentationRule)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.GetEnumerator*
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Clone
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Clone
  id: Clone
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SegmentationRules.Clone()
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Clone()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: <xref href="System.ICloneable.Clone" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public object Clone()
    return:
      type: System.Object
      description: A new object that is a deep copy of this instance.
    content.vb: Public Function Clone() As Object
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Clone*
  implements:
  - System.ICloneable.Clone
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Culture
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Culture
  id: Culture
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: Culture
  nameWithType: SegmentationRules.Culture
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Culture
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Gets the culture for which to apply this segmentation rule set.
  example: []
  syntax:
    content: >-
      [Obsolete("Use CultureName")]

      public CultureInfo Culture { get; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
    content.vb: >-
      <Obsolete("Use CultureName")>

      Public ReadOnly Property Culture As CultureInfo
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Culture*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use CultureName
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Description
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Description
  id: Description
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: SegmentationRules.Description
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Description
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Gets or sets the description of this rule set.
  example: []
  syntax:
    content: >-
      [DataMember]

      public LocalizedString Description { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
    content.vb: >-
      <DataMember>

      Public Property Description As LocalizedString
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Description*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Count
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Count
  id: Count
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: SegmentationRules.Count
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Count
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Gets the number of rules in this rule set.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Count*
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.ListReferencesResolved
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.ListReferencesResolved
  id: ListReferencesResolved
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: ListReferencesResolved
  nameWithType: SegmentationRules.ListReferencesResolved
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.ListReferencesResolved
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Returns a flag which indicates whether references to externally stored word lists

    (abbreviations, ordinal followers, ...) have been resolved during Load or not. If not, the rule

    set should not be used for segmentation, only for display, editing, serialization, or

    copying across resource containers.

    <p>Note that if the rule set does not refer to external lists, this flag will still be

    set to true if the resolution has been attempted. 

    </p>
  example: []
  syntax:
    content: public bool ListReferencesResolved { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ListReferencesResolved As Boolean
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.ListReferencesResolved*
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Rules
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Rules
  id: Rules
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: Rules
  nameWithType: SegmentationRules.Rules
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Rules
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Gets or sets the rules for this rule set.
  example: []
  syntax:
    content: >-
      [DataMember]

      public List<SegmentationRule> Rules { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule}
    content.vb: >-
      <DataMember>

      Public Property Rules As List(Of SegmentationRule)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Rules*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Item(System.Int32)
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Item(System.Int32)
  id: Item(System.Int32)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: SegmentationRules.this[int]
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.this[int]
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Gets the segmentation rule at the specified zero-based position.
  example: []
  syntax:
    content: public SegmentationRule this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
    content.vb: Public ReadOnly Default Property this[](index As Integer) As SegmentationRule
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Item*
  nameWithType.vb: SegmentationRules.this[](Integer)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.this[](Integer)
  name.vb: this[](Integer)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.CultureName
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.CultureName
  id: CultureName
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  langs:
  - csharp
  - vb
  name: CultureName
  nameWithType: SegmentationRules.CultureName
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.CultureName
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Gets or sets the name of the culture to which to apply this segmentation rules. This 

    property is primarily intended for XML deserialization and should not be used directly.
  example: []
  syntax:
    content: >-
      [DataMember]

      public string CultureName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public Property CultureName As String
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.CultureName*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
references:
- uid: Sdl.LanguagePlatform.Core.Segmentation
  commentId: N:Sdl.LanguagePlatform.Core.Segmentation
  isExternal: true
  href: Sdl.html
  name: Sdl.LanguagePlatform.Core.Segmentation
  nameWithType: Sdl.LanguagePlatform.Core.Segmentation
  fullName: Sdl.LanguagePlatform.Core.Segmentation
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core.Segmentation
    name: Segmentation
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core.Segmentation
    name: Segmentation
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_String_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_
  name: LoadAsync
  nameWithType: SegmentationRules.LoadAsync
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Sdl.Core.Globalization.CultureCode
  commentId: T:Sdl.Core.Globalization.CultureCode
  parent: Sdl.Core.Globalization
  isExternal: true
  name: CultureCode
  nameWithType: CultureCode
  fullName: Sdl.Core.Globalization.CultureCode
- uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
  commentId: T:Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
  parent: Sdl.LanguagePlatform.Core.Resources
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  name: IResourceDataAccessorAsync
  nameWithType: IResourceDataAccessorAsync
  fullName: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
- uid: System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules}
  commentId: T:System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SegmentationRules>
  nameWithType: Task<SegmentationRules>
  fullName: System.Threading.Tasks.Task<Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules>
  nameWithType.vb: Task(Of SegmentationRules)
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules)
  name.vb: Task(Of SegmentationRules)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
    name: SegmentationRules
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
    name: SegmentationRules
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html
  - name: )
- uid: Sdl.Core.Globalization
  commentId: N:Sdl.Core.Globalization
  isExternal: true
  name: Sdl.Core.Globalization
  nameWithType: Sdl.Core.Globalization
  fullName: Sdl.Core.Globalization
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
- uid: Sdl.LanguagePlatform.Core.Resources
  commentId: N:Sdl.LanguagePlatform.Core.Resources
  isExternal: true
  href: Sdl.html
  name: Sdl.LanguagePlatform.Core.Resources
  nameWithType: Sdl.LanguagePlatform.Core.Resources
  fullName: Sdl.LanguagePlatform.Core.Resources
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core.Resources
    name: Resources
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core.Resources
    name: Resources
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_String_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_
  name: LoadAsync(string, CultureCode, IResourceDataAccessorAsync)
  nameWithType: SegmentationRules.LoadAsync(string, CultureCode, IResourceDataAccessorAsync)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(string, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  nameWithType.vb: SegmentationRules.LoadAsync(String, CultureCode, IResourceDataAccessorAsync)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(String, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  name.vb: LoadAsync(String, CultureCode, IResourceDataAccessorAsync)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
    name: LoadAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_String_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Sdl.Core.Globalization.CultureCode
    name: CultureCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
    name: LoadAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_String_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Sdl.Core.Globalization.CultureCode
    name: CultureCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: )
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_Load_System_String_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessor_
  name: Load
  nameWithType: SegmentationRules.Load
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Load
- uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
  commentId: T:Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
  parent: Sdl.LanguagePlatform.Core.Resources
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor.html
  name: IResourceDataAccessor
  nameWithType: IResourceDataAccessor
  fullName: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessor
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  commentId: T:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
  parent: Sdl.LanguagePlatform.Core.Segmentation
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html
  name: SegmentationRules
  nameWithType: SegmentationRules
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_String_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_System_Boolean_
  name: LoadAsync(string, CultureCode, IResourceDataAccessorAsync, bool)
  nameWithType: SegmentationRules.LoadAsync(string, CultureCode, IResourceDataAccessorAsync, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(string, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, bool)
  nameWithType.vb: SegmentationRules.LoadAsync(String, CultureCode, IResourceDataAccessorAsync, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(String, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, Boolean)
  name.vb: LoadAsync(String, CultureCode, IResourceDataAccessorAsync, Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
    name: LoadAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_String_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_System_Boolean_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Sdl.Core.Globalization.CultureCode
    name: CultureCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
    name: LoadAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_String_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_System_Boolean_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Sdl.Core.Globalization.CultureCode
    name: CultureCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_IO_Stream_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_
  name: LoadAsync(Stream, CultureCode, IResourceDataAccessorAsync)
  nameWithType: SegmentationRules.LoadAsync(Stream, CultureCode, IResourceDataAccessorAsync)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
    name: LoadAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_IO_Stream_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: Sdl.Core.Globalization.CultureCode
    name: CultureCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
    name: LoadAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_IO_Stream_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: Sdl.Core.Globalization.CultureCode
    name: CultureCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: )
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_IO_Stream_System_String_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_System_Boolean_
  name: LoadAsync(Stream, string, IResourceDataAccessorAsync, bool)
  nameWithType: SegmentationRules.LoadAsync(Stream, string, IResourceDataAccessorAsync, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream, string, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, bool)
  nameWithType.vb: SegmentationRules.LoadAsync(Stream, String, IResourceDataAccessorAsync, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream, String, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, Boolean)
  name.vb: LoadAsync(Stream, String, IResourceDataAccessorAsync, Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
    name: LoadAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_IO_Stream_System_String_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_System_Boolean_
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
    name: LoadAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_IO_Stream_System_String_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_System_Boolean_
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_String_System_String_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_
  name: LoadAsync(string, string, IResourceDataAccessorAsync)
  nameWithType: SegmentationRules.LoadAsync(string, string, IResourceDataAccessorAsync)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(string, string, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  nameWithType.vb: SegmentationRules.LoadAsync(String, String, IResourceDataAccessorAsync)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(String, String, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  name.vb: LoadAsync(String, String, IResourceDataAccessorAsync)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
    name: LoadAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_String_System_String_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.String,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
    name: LoadAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_String_System_String_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: )
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_IO_Stream_System_String_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_
  name: LoadAsync(Stream, string, IResourceDataAccessorAsync)
  nameWithType: SegmentationRules.LoadAsync(Stream, string, IResourceDataAccessorAsync)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream, string, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  nameWithType.vb: SegmentationRules.LoadAsync(Stream, String, IResourceDataAccessorAsync)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream, String, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
  name.vb: LoadAsync(Stream, String, IResourceDataAccessorAsync)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
    name: LoadAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_IO_Stream_System_String_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync)
    name: LoadAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_IO_Stream_System_String_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: )
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_IO_Stream_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_System_Boolean_
  name: LoadAsync(Stream, CultureCode, IResourceDataAccessorAsync, bool)
  nameWithType: SegmentationRules.LoadAsync(Stream, CultureCode, IResourceDataAccessorAsync, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, bool)
  nameWithType.vb: SegmentationRules.LoadAsync(Stream, CultureCode, IResourceDataAccessorAsync, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, Boolean)
  name.vb: LoadAsync(Stream, CultureCode, IResourceDataAccessorAsync, Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
    name: LoadAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_IO_Stream_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_System_Boolean_
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: Sdl.Core.Globalization.CultureCode
    name: CultureCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
    name: LoadAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadAsync_System_IO_Stream_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_System_Boolean_
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: Sdl.Core.Globalization.CultureCode
    name: CultureCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Runtime.Serialization.DataContractSerializer
  commentId: T:System.Runtime.Serialization.DataContractSerializer
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.datacontractserializer
  name: DataContractSerializer
  nameWithType: DataContractSerializer
  fullName: System.Runtime.Serialization.DataContractSerializer
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadUsingDataContractSerializerAsync_System_IO_Stream_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_System_Boolean_
  name: LoadUsingDataContractSerializerAsync
  nameWithType: SegmentationRules.LoadUsingDataContractSerializerAsync
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadUsingDataContractSerializerAsync_System_IO_Stream_System_String_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_System_Boolean_
  name: LoadUsingDataContractSerializerAsync(Stream, string, IResourceDataAccessorAsync, bool)
  nameWithType: SegmentationRules.LoadUsingDataContractSerializerAsync(Stream, string, IResourceDataAccessorAsync, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream, string, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, bool)
  nameWithType.vb: SegmentationRules.LoadUsingDataContractSerializerAsync(Stream, String, IResourceDataAccessorAsync, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream, String, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, Boolean)
  name.vb: LoadUsingDataContractSerializerAsync(Stream, String, IResourceDataAccessorAsync, Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
    name: LoadUsingDataContractSerializerAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadUsingDataContractSerializerAsync_System_IO_Stream_System_String_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_System_Boolean_
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream,System.String,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
    name: LoadUsingDataContractSerializerAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadUsingDataContractSerializerAsync_System_IO_Stream_System_String_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_System_Boolean_
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializer*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializer
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadUsingDataContractSerializer_System_IO_Stream_System_String_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessor_System_Boolean_
  name: LoadUsingDataContractSerializer
  nameWithType: SegmentationRules.LoadUsingDataContractSerializer
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializer
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadUsingDataContractSerializerAsync_System_IO_Stream_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_System_Boolean_
  name: LoadUsingDataContractSerializerAsync(Stream, CultureCode, IResourceDataAccessorAsync, bool)
  nameWithType: SegmentationRules.LoadUsingDataContractSerializerAsync(Stream, CultureCode, IResourceDataAccessorAsync, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, bool)
  nameWithType.vb: SegmentationRules.LoadUsingDataContractSerializerAsync(Stream, CultureCode, IResourceDataAccessorAsync, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream, Sdl.Core.Globalization.CultureCode, Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync, Boolean)
  name.vb: LoadUsingDataContractSerializerAsync(Stream, CultureCode, IResourceDataAccessorAsync, Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
    name: LoadUsingDataContractSerializerAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadUsingDataContractSerializerAsync_System_IO_Stream_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_System_Boolean_
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: Sdl.Core.Globalization.CultureCode
    name: CultureCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadUsingDataContractSerializerAsync(System.IO.Stream,Sdl.Core.Globalization.CultureCode,Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync,System.Boolean)
    name: LoadUsingDataContractSerializerAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadUsingDataContractSerializerAsync_System_IO_Stream_Sdl_Core_Globalization_CultureCode_Sdl_LanguagePlatform_Core_Resources_IResourceDataAccessorAsync_System_Boolean_
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: Sdl.Core.Globalization.CultureCode
    name: CultureCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync
    name: IResourceDataAccessorAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Resources.IResourceDataAccessorAsync.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadRaw*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadRaw
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_LoadRaw_System_IO_Stream_Sdl_Core_Globalization_CultureCode_System_Boolean_
  name: LoadRaw
  nameWithType: SegmentationRules.LoadRaw
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.LoadRaw
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.#ctor
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules__ctor
  name: SegmentationRules
  nameWithType: SegmentationRules.SegmentationRules
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.SegmentationRules
  nameWithType.vb: SegmentationRules.New
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.New
  name.vb: New
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.ToString*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.ToString
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_ToString
  name: ToString
  nameWithType: SegmentationRules.ToString
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.ToString
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_Save_Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_System_IO_Stream_
  name: Save
  nameWithType: SegmentationRules.Save
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Save
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.SaveUsingDataContractSerializer*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.SaveUsingDataContractSerializer
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_SaveUsingDataContractSerializer_System_IO_Stream_
  name: SaveUsingDataContractSerializer
  nameWithType: SegmentationRules.SaveUsingDataContractSerializer
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.SaveUsingDataContractSerializer
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.AddRule*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.AddRule
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_AddRule_Sdl_LanguagePlatform_Core_Segmentation_SegmentationRule_
  name: AddRule
  nameWithType: SegmentationRules.AddRule
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.AddRule
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  commentId: T:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  parent: Sdl.LanguagePlatform.Core.Segmentation
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html
  name: SegmentationRule
  nameWithType: SegmentationRule
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Add*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Add
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_Add_System_Object_
  name: Add
  nameWithType: SegmentationRules.Add
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Add
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.GetEnumerator*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.GetEnumerator
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_GetEnumerator
  name: GetEnumerator
  nameWithType: SegmentationRules.GetEnumerator
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule}
  commentId: T:System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<SegmentationRule>
  nameWithType: IEnumerator<SegmentationRule>
  fullName: System.Collections.Generic.IEnumerator<Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule>
  nameWithType.vb: IEnumerator(Of SegmentationRule)
  fullName.vb: System.Collections.Generic.IEnumerator(Of Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule)
  name.vb: IEnumerator(Of SegmentationRule)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
    name: SegmentationRule
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
    name: SegmentationRule
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Clone*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Clone
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_Clone
  name: Clone
  nameWithType: SegmentationRules.Clone
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Clone
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Culture*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Culture
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_Culture
  name: Culture
  nameWithType: SegmentationRules.Culture
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Culture
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Description*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Description
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_Description
  name: Description
  nameWithType: SegmentationRules.Description
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Description
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  commentId: T:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  parent: Sdl.LanguagePlatform.Core.Segmentation
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.html
  name: LocalizedString
  nameWithType: LocalizedString
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Count*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Count
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_Count
  name: Count
  nameWithType: SegmentationRules.Count
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.ListReferencesResolved*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.ListReferencesResolved
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_ListReferencesResolved
  name: ListReferencesResolved
  nameWithType: SegmentationRules.ListReferencesResolved
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.ListReferencesResolved
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Rules*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Rules
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_Rules
  name: Rules
  nameWithType: SegmentationRules.Rules
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Rules
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<SegmentationRule>
  nameWithType: List<SegmentationRule>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule>
  nameWithType.vb: List(Of SegmentationRule)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule)
  name.vb: List(Of SegmentationRule)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
    name: SegmentationRule
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
    name: SegmentationRule
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Item*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.Item
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_Item_System_Int32_
  name: this
  nameWithType: SegmentationRules.this
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.this
  nameWithType.vb: SegmentationRules.this[]
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.this[]
  name.vb: this[]
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.CultureName*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.CultureName
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRules_CultureName
  name: CultureName
  nameWithType: SegmentationRules.CultureName
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRules.CultureName
