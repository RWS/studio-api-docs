### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage
  id: LegacyLanguage
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.#ctor
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.#ctor(Sdl.Core.Globalization.CultureCode)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.Culture
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.Equals(System.Object)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.GetHashCode
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.NativeCode
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.NativeName
  langs:
  - csharp
  - vb
  name: LegacyLanguage
  nameWithType: LegacyLanguage
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nRepresents a language within a legacy translation memory. Provides a way to keep track of the original language code\nand name, as well as the associated <xref href=\"Sdl.Core.Globalization.CultureCode\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  syntax:
    content: public class LegacyLanguage
    content.vb: Public Class LegacyLanguage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage
  langs:
  - csharp
  - vb
  name: LegacyLanguage()
  nameWithType: LegacyLanguage.LegacyLanguage()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.LegacyLanguage()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nInitializes a new instance with default values.\n"
  syntax:
    content: public LegacyLanguage()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.#ctor(Sdl.Core.Globalization.CultureCode)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.#ctor(Sdl.Core.Globalization.CultureCode)
  id: '#ctor(Sdl.Core.Globalization.CultureCode)'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage
  langs:
  - csharp
  - vb
  name: LegacyLanguage(CultureCode)
  nameWithType: LegacyLanguage.LegacyLanguage(CultureCode)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.LegacyLanguage(Sdl.Core.Globalization.CultureCode)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nConstructor with culture.\n"
  syntax:
    content: public LegacyLanguage(CultureCode cultureCode)
    parameters:
    - id: cultureCode
      type: Sdl.Core.Globalization.CultureCode
    content.vb: Public Sub New(cultureCode As CultureCode)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.Equals(System.Object)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: LegacyLanguage.Equals(Object)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.Equals(System.Object)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\n<xref href=\"System.Object.Equals(object)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: >
        true if the specified object is equal to the current object;

        otherwise, false.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.GetHashCode
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.GetHashCode
  id: GetHashCode
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: LegacyLanguage.GetHashCode()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.GetHashCode()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\n<xref href=\"System.Object.GetHashCode\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for this object
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.NativeCode
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.NativeCode
  id: NativeCode
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage
  langs:
  - csharp
  - vb
  name: NativeCode
  nameWithType: LegacyLanguage.NativeCode
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.NativeCode
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the native language code, as used by the legacy translation memory.\n"
  syntax:
    content: public string NativeCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NativeCode As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.NativeCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.NativeName
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.NativeName
  id: NativeName
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage
  langs:
  - csharp
  - vb
  name: NativeName
  nameWithType: LegacyLanguage.NativeName
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.NativeName
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the native language name, as used by the legacy translation memory.\n"
  syntax:
    content: public string NativeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NativeName As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.NativeName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.Culture
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.Culture
  id: Culture
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage
  langs:
  - csharp
  - vb
  name: Culture
  nameWithType: LegacyLanguage.Culture
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.Culture
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the <xref href=\"Sdl.Core.Globalization.CultureCode\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to this legacy language.\n"
  syntax:
    content: public CultureCode Culture { get; set; }
    parameters: []
    return:
      type: Sdl.Core.Globalization.CultureCode
    content.vb: Public Property Culture As CultureCode
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.Culture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.#ctor
  isExternal: true
  name: LegacyLanguage
  nameWithType: LegacyLanguage.LegacyLanguage
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.LegacyLanguage
- uid: Sdl.Core.Globalization.CultureCode
  isExternal: true
  name: CultureCode
  nameWithType: CultureCode
  fullName: Sdl.Core.Globalization.CultureCode
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.Equals*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.Equals
  isExternal: true
  name: Equals
  nameWithType: LegacyLanguage.Equals
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.GetHashCode*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: LegacyLanguage.GetHashCode
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.NativeCode*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.NativeCode
  isExternal: true
  name: NativeCode
  nameWithType: LegacyLanguage.NativeCode
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.NativeCode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.NativeName*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.NativeName
  isExternal: true
  name: NativeName
  nameWithType: LegacyLanguage.NativeName
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.NativeName
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.Culture*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.Culture
  isExternal: true
  name: Culture
  nameWithType: LegacyLanguage.Culture
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.LegacyLanguage.Culture
