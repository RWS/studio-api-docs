### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory
  id: IOutputTranslationMemory
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.CreateTranslationMemory
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.ExpectedTUCount
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Import(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData,System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs})
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.InputLanguageDirections
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.IsValid(System.String@)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.PopulateSetup
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Process(System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs})
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Setup
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.TranslationMemory
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.TranslationMemoryCreator
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Validate
  langs:
  - csharp
  - vb
  name: IOutputTranslationMemory
  nameWithType: IOutputTranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory
  type: Interface
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nRepresents an output translation memory to be created within a migration project, to which the contents of one or more legacy translation\nmemories (or language directions within such TMs) will be migrated. Holds settings required to create the new translation memory (<xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.InputLanguageDirections\" data-throw-if-not-resolved=\"false\"></xref>, \n<xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.TranslationMemoryCreator\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Setup\" data-throw-if-not-resolved=\"false\"></xref>) and provides status information on the migration process.\n"
  syntax:
    content: public interface IOutputTranslationMemory
    content.vb: Public Interface IOutputTranslationMemory
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.PopulateSetup
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.PopulateSetup
  id: PopulateSetup
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory
  langs:
  - csharp
  - vb
  name: PopulateSetup()
  nameWithType: IOutputTranslationMemory.PopulateSetup()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.PopulateSetup()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nAutomatically populate the setup information based on the language directions currently present in <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.InputLanguageDirections\" data-throw-if-not-resolved=\"false\"></xref>.\nThis will reset any setup information in the output translation memory that is currently present.\n<remarks>All changes to the setup should be done before the output translation memory is created.</remarks>\n"
  syntax:
    content: void PopulateSetup()
    content.vb: Sub PopulateSetup
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.PopulateSetup*
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Process(System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs})
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Process(System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs})
  id: Process(System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs})
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory
  langs:
  - csharp
  - vb
  name: Process(EventHandler<ProgressEventArgs>)
  nameWithType: IOutputTranslationMemory.Process(EventHandler<ProgressEventArgs>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Process(System.EventHandler<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nCreates the output translation memory and import all content.\n"
  remarks: >-
    This method assumes that all the input translation memories have been exported to TMX and will throw an exception if

    this is not the case.
  syntax:
    content: void Process(EventHandler<ProgressEventArgs> progressEventHandler)
    parameters:
    - id: progressEventHandler
      type: System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs}
      description: A delegate which can be used to monitor progress and to cancel the migration process. May be null.
    content.vb: Sub Process(progressEventHandler As EventHandler(Of ProgressEventArgs))
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Process*
  nameWithType.vb: IOutputTranslationMemory.Process(EventHandler(Of ProgressEventArgs))
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Process(System.EventHandler(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs))
  name.vb: Process(EventHandler(Of ProgressEventArgs))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Validate
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Validate
  id: Validate
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: IOutputTranslationMemory.Validate()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Validate()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nValidates whether this output translation memory is ready to be processed. Throws an xception if it is not.\n"
  syntax:
    content: void Validate()
    content.vb: Sub Validate
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Validate*
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.IsValid(System.String@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.IsValid(System.String@)
  id: IsValid(System.String@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory
  langs:
  - csharp
  - vb
  name: IsValid(out String)
  nameWithType: IOutputTranslationMemory.IsValid(out String)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.IsValid(out System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nDetermines whether the output translation memory is valid. It returns false and a user-friendly localised error message if it is not.\n"
  syntax:
    content: bool IsValid(out string errorMessage)
    parameters:
    - id: errorMessage
      type: System.String
      description: error message
    return:
      type: System.Boolean
      description: whether output translation memory valid
    content.vb: Function IsValid(ByRef errorMessage As String) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.IsValid*
  nameWithType.vb: IOutputTranslationMemory.IsValid(ByRef String)
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.IsValid(ByRef System.String)
  name.vb: IsValid(ByRef String)
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.CreateTranslationMemory
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.CreateTranslationMemory
  id: CreateTranslationMemory
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory
  langs:
  - csharp
  - vb
  name: CreateTranslationMemory()
  nameWithType: IOutputTranslationMemory.CreateTranslationMemory()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.CreateTranslationMemory()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nCreates the output translation memory if it has not been created yet.\n"
  syntax:
    content: void CreateTranslationMemory()
    content.vb: Sub CreateTranslationMemory
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.CreateTranslationMemory*
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Import(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData,System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs})
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Import(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData,System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs})
  id: Import(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData,System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs})
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory
  langs:
  - csharp
  - vb
  name: Import(IInputLanguageDirectionData, EventHandler<ProgressEventArgs>)
  nameWithType: IOutputTranslationMemory.Import(IInputLanguageDirectionData, EventHandler<ProgressEventArgs>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Import(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData, System.EventHandler<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nImports the content of the specified input language direction data sets into the output TM.\n"
  syntax:
    content: void Import(IInputLanguageDirectionData languageDirectionData, EventHandler<ProgressEventArgs> progressEventHandler)
    parameters:
    - id: languageDirectionData
      type: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
      description: The input language direction data to import.
    - id: progressEventHandler
      type: System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs}
      description: Progress delegate; can be null.
    content.vb: Sub Import(languageDirectionData As IInputLanguageDirectionData, progressEventHandler As EventHandler(Of ProgressEventArgs))
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Import*
  nameWithType.vb: IOutputTranslationMemory.Import(IInputLanguageDirectionData, EventHandler(Of ProgressEventArgs))
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Import(Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData, System.EventHandler(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs))
  name.vb: Import(IInputLanguageDirectionData, EventHandler(Of ProgressEventArgs))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.InputLanguageDirections
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.InputLanguageDirections
  id: InputLanguageDirections
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory
  langs:
  - csharp
  - vb
  name: InputLanguageDirections
  nameWithType: IOutputTranslationMemory.InputLanguageDirections
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.InputLanguageDirections
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nThe collection of input language direction data, from which content should be imported into the output translation memory.\n"
  syntax:
    content: IInputLanguageDirectionDataCollection InputLanguageDirections { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection
    content.vb: ReadOnly Property InputLanguageDirections As IInputLanguageDirectionDataCollection
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.InputLanguageDirections*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.TranslationMemoryCreator
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.TranslationMemoryCreator
  id: TranslationMemoryCreator
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory
  langs:
  - csharp
  - vb
  name: TranslationMemoryCreator
  nameWithType: IOutputTranslationMemory.TranslationMemoryCreator
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.TranslationMemoryCreator
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets a <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryCreator\" data-throw-if-not-resolved=\"false\"></xref> object, which should be usd for creating the output translation memory.\n"
  syntax:
    content: ITranslationMemoryCreator TranslationMemoryCreator { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryCreator
    content.vb: Property TranslationMemoryCreator As ITranslationMemoryCreator
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.TranslationMemoryCreator*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Setup
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Setup
  id: Setup
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory
  langs:
  - csharp
  - vb
  name: Setup
  nameWithType: IOutputTranslationMemory.Setup
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Setup
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets the setup information to be used for creating the output translation memory.\n"
  syntax:
    content: ITranslationMemorySetupOptions Setup { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
    content.vb: ReadOnly Property Setup As ITranslationMemorySetupOptions
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Setup*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.ExpectedTUCount
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.ExpectedTUCount
  id: ExpectedTUCount
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory
  langs:
  - csharp
  - vb
  name: ExpectedTUCount
  nameWithType: IOutputTranslationMemory.ExpectedTUCount
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.ExpectedTUCount
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets the estimated number of translation units this output translation memory will contains after the \nmigration is complete. Can be used for progress notifications. This is <pre><code>-1</code></pre> if this number\nis not available (or cannot easily be obtained).\n"
  syntax:
    content: int ExpectedTUCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property ExpectedTUCount As Integer
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.ExpectedTUCount*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.TranslationMemory
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.TranslationMemory
  id: TranslationMemory
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory
  langs:
  - csharp
  - vb
  name: TranslationMemory
  nameWithType: IOutputTranslationMemory.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.TranslationMemory
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets the newly created translation memory. Returns null before the translation memory has been created.\n"
  syntax:
    content: ITranslationMemory TranslationMemory { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory
    content.vb: ReadOnly Property TranslationMemory As ITranslationMemory
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.TranslationMemory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.PopulateSetup*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.PopulateSetup
  isExternal: true
  name: PopulateSetup
  nameWithType: IOutputTranslationMemory.PopulateSetup
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.PopulateSetup
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Process*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Process
  isExternal: true
  name: Process
  nameWithType: IOutputTranslationMemory.Process
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Process
- uid: System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs}
  commentId: T:System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ProgressEventArgs>
  nameWithType: EventHandler<ProgressEventArgs>
  fullName: System.EventHandler<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs>
  nameWithType.vb: EventHandler(Of ProgressEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs)
  name.vb: EventHandler(Of ProgressEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Validate*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Validate
  isExternal: true
  name: Validate
  nameWithType: IOutputTranslationMemory.Validate
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Validate
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.IsValid*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.IsValid
  isExternal: true
  name: IsValid
  nameWithType: IOutputTranslationMemory.IsValid
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.IsValid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.CreateTranslationMemory*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.CreateTranslationMemory
  isExternal: true
  name: CreateTranslationMemory
  nameWithType: IOutputTranslationMemory.CreateTranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.CreateTranslationMemory
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Import*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Import
  isExternal: true
  name: Import
  nameWithType: IOutputTranslationMemory.Import
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Import
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: IInputLanguageDirectionData
  nameWithType: IInputLanguageDirectionData
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionData
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.InputLanguageDirections*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.InputLanguageDirections
  isExternal: true
  name: InputLanguageDirections
  nameWithType: IOutputTranslationMemory.InputLanguageDirections
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.InputLanguageDirections
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: IInputLanguageDirectionDataCollection
  nameWithType: IInputLanguageDirectionDataCollection
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputLanguageDirectionDataCollection
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.TranslationMemoryCreator*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.TranslationMemoryCreator
  isExternal: true
  name: TranslationMemoryCreator
  nameWithType: IOutputTranslationMemory.TranslationMemoryCreator
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.TranslationMemoryCreator
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryCreator
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryCreator
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: ITranslationMemoryCreator
  nameWithType: ITranslationMemoryCreator
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryCreator
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Setup*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Setup
  isExternal: true
  name: Setup
  nameWithType: IOutputTranslationMemory.Setup
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Setup
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: ITranslationMemorySetupOptions
  nameWithType: ITranslationMemorySetupOptions
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.ExpectedTUCount*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.ExpectedTUCount
  isExternal: true
  name: ExpectedTUCount
  nameWithType: IOutputTranslationMemory.ExpectedTUCount
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.ExpectedTUCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.TranslationMemory*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.TranslationMemory
  isExternal: true
  name: TranslationMemory
  nameWithType: IOutputTranslationMemory.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.TranslationMemory
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: ITranslationMemory
  nameWithType: ITranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory
- uid: Sdl.LanguagePlatform.TranslationMemoryApi
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi
