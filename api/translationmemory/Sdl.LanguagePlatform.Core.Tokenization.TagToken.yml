### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.TagToken
  id: TagToken
  parent: Sdl.LanguagePlatform.Core.Tokenization
  children:
  - Sdl.LanguagePlatform.Core.Tokenization.TagToken.#ctor
  - Sdl.LanguagePlatform.Core.Tokenization.TagToken.#ctor(Sdl.LanguagePlatform.Core.Tag)
  - Sdl.LanguagePlatform.Core.Tokenization.TagToken.#ctor(Sdl.LanguagePlatform.Core.Tokenization.TagToken)
  - Sdl.LanguagePlatform.Core.Tokenization.TagToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  - Sdl.LanguagePlatform.Core.Tokenization.TagToken.Duplicate
  - Sdl.LanguagePlatform.Core.Tokenization.TagToken.Equals(System.Object)
  - Sdl.LanguagePlatform.Core.Tokenization.TagToken.GetHashCode
  - Sdl.LanguagePlatform.Core.Tokenization.TagToken.GetTokenType
  - Sdl.LanguagePlatform.Core.Tokenization.TagToken.IsPlaceable
  - Sdl.LanguagePlatform.Core.Tokenization.TagToken.IsSubstitutable
  - Sdl.LanguagePlatform.Core.Tokenization.TagToken.Tag
  - Sdl.LanguagePlatform.Core.Tokenization.TagToken.ToString
  - Sdl.LanguagePlatform.Core.Tokenization.TagToken.UpdateValue(Sdl.LanguagePlatform.Core.Tokenization.TagToken)
  - Sdl.LanguagePlatform.Core.Tokenization.TagToken.UpdateValue(Sdl.LanguagePlatform.Core.Tokenization.TagToken,System.Boolean)
  langs:
  - csharp
  - vb
  name: TagToken
  nameWithType: TagToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken
  type: Class
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nA <xref href=\"Sdl.LanguagePlatform.Core.Tokenization.Token\" data-throw-if-not-resolved=\"false\"></xref> which encapsulates a tag in the input.\n"
  syntax:
    content: 'public class TagToken : Token'
    content.vb: >-
      Public Class TagToken
          Inherits Token
  inheritance:
  - System.Object
  - Sdl.LanguagePlatform.Core.SegmentElement
  - Sdl.LanguagePlatform.Core.Tokenization.Token
  inheritedMembers:
  - Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  - Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
  - Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  - Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Text
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Span
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Type
  - Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
  - Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
  - Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.#ctor
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TagToken.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.Core.Tokenization.TagToken
  langs:
  - csharp
  - vb
  name: TagToken()
  nameWithType: TagToken.TagToken()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.TagToken()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nInitializes a new instance with default values.\n"
  syntax:
    content: public TagToken()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.Core.Tokenization.TagToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.#ctor(Sdl.LanguagePlatform.Core.Tag)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TagToken.#ctor(Sdl.LanguagePlatform.Core.Tag)
  id: '#ctor(Sdl.LanguagePlatform.Core.Tag)'
  parent: Sdl.LanguagePlatform.Core.Tokenization.TagToken
  langs:
  - csharp
  - vb
  name: TagToken(Tag)
  nameWithType: TagToken.TagToken(Tag)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.TagToken(Sdl.LanguagePlatform.Core.Tag)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nInitializes a new instance with the specified tag.\n"
  syntax:
    content: public TagToken(Tag tag)
    parameters:
    - id: tag
      type: Sdl.LanguagePlatform.Core.Tag
      description: The tag (must not be null)
    content.vb: Public Sub New(tag As Tag)
  overload: Sdl.LanguagePlatform.Core.Tokenization.TagToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.#ctor(Sdl.LanguagePlatform.Core.Tokenization.TagToken)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TagToken.#ctor(Sdl.LanguagePlatform.Core.Tokenization.TagToken)
  id: '#ctor(Sdl.LanguagePlatform.Core.Tokenization.TagToken)'
  parent: Sdl.LanguagePlatform.Core.Tokenization.TagToken
  langs:
  - csharp
  - vb
  name: TagToken(TagToken)
  nameWithType: TagToken.TagToken(TagToken)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.TagToken(Sdl.LanguagePlatform.Core.Tokenization.TagToken)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nInitializes a new instance from another instance, creating a deep copy\n"
  syntax:
    content: public TagToken(TagToken other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.Tokenization.TagToken
    content.vb: Public Sub New(other As TagToken)
  overload: Sdl.LanguagePlatform.Core.Tokenization.TagToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.Duplicate
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TagToken.Duplicate
  id: Duplicate
  parent: Sdl.LanguagePlatform.Core.Tokenization.TagToken
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: TagToken.Duplicate()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.Duplicate()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nSee <xref href=\"Sdl.LanguagePlatform.Core.SegmentElement.Duplicate\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override SegmentElement Duplicate()
    return:
      type: Sdl.LanguagePlatform.Core.SegmentElement
      description: A new instance that is a deep copy of this instance.
    content.vb: Public Overrides Function Duplicate As SegmentElement
  overridden: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
  overload: Sdl.LanguagePlatform.Core.Tokenization.TagToken.Duplicate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.UpdateValue(Sdl.LanguagePlatform.Core.Tokenization.TagToken)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TagToken.UpdateValue(Sdl.LanguagePlatform.Core.Tokenization.TagToken)
  id: UpdateValue(Sdl.LanguagePlatform.Core.Tokenization.TagToken)
  parent: Sdl.LanguagePlatform.Core.Tokenization.TagToken
  langs:
  - csharp
  - vb
  name: UpdateValue(TagToken)
  nameWithType: TagToken.UpdateValue(TagToken)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.UpdateValue(Sdl.LanguagePlatform.Core.Tokenization.TagToken)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nUpdates the token&apos;s value, using the values of another instance.\n"
  syntax:
    content: public void UpdateValue(TagToken blueprint)
    parameters:
    - id: blueprint
      type: Sdl.LanguagePlatform.Core.Tokenization.TagToken
      description: The instance to update this instance from.
    content.vb: Public Sub UpdateValue(blueprint As TagToken)
  overload: Sdl.LanguagePlatform.Core.Tokenization.TagToken.UpdateValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.UpdateValue(Sdl.LanguagePlatform.Core.Tokenization.TagToken,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TagToken.UpdateValue(Sdl.LanguagePlatform.Core.Tokenization.TagToken,System.Boolean)
  id: UpdateValue(Sdl.LanguagePlatform.Core.Tokenization.TagToken,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Tokenization.TagToken
  langs:
  - csharp
  - vb
  name: UpdateValue(TagToken, Boolean)
  nameWithType: TagToken.UpdateValue(TagToken, Boolean)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.UpdateValue(Sdl.LanguagePlatform.Core.Tokenization.TagToken, System.Boolean)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nUpdates the token&apos;s value, using the values of another instance.\n"
  syntax:
    content: public void UpdateValue(TagToken blueprint, bool updateValuesOnly)
    parameters:
    - id: blueprint
      type: Sdl.LanguagePlatform.Core.Tokenization.TagToken
      description: The instance to update this instance from.
    - id: updateValuesOnly
      type: System.Boolean
      description: "If true, only the tag&apos;s values are updated. Otherwise, \nall other information (such as the text) will be updated as well."
    content.vb: Public Sub UpdateValue(blueprint As TagToken, updateValuesOnly As Boolean)
  overload: Sdl.LanguagePlatform.Core.Tokenization.TagToken.UpdateValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.GetTokenType
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TagToken.GetTokenType
  id: GetTokenType
  parent: Sdl.LanguagePlatform.Core.Tokenization.TagToken
  langs:
  - csharp
  - vb
  name: GetTokenType()
  nameWithType: TagToken.GetTokenType()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.GetTokenType()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\n<xref href=\"Sdl.LanguagePlatform.Core.Tokenization.Token.Type\" data-throw-if-not-resolved=\"false\"></xref>. Always returns <xref href=\"Sdl.LanguagePlatform.Core.Tokenization.TokenType.Tag\" data-throw-if-not-resolved=\"false\"></xref> for instances\nof this class.\n"
  syntax:
    content: protected override TokenType GetTokenType()
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    content.vb: Protected Overrides Function GetTokenType As TokenType
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
  overload: Sdl.LanguagePlatform.Core.Tokenization.TagToken.GetTokenType*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.Equals(System.Object)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TagToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.LanguagePlatform.Core.Tokenization.TagToken
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: TagToken.Equals(Object)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.Equals(System.Object)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\n<xref href=\"System.Object.Equals(object)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: >
        true if the specified object is equal to the current object;

        otherwise, false.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
  overload: Sdl.LanguagePlatform.Core.Tokenization.TagToken.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.GetHashCode
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TagToken.GetHashCode
  id: GetHashCode
  parent: Sdl.LanguagePlatform.Core.Tokenization.TagToken
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TagToken.GetHashCode()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.GetHashCode()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\n<xref href=\"System.Object.GetHashCode(object)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
  overload: Sdl.LanguagePlatform.Core.Tokenization.TagToken.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.ToString
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TagToken.ToString
  id: ToString
  parent: Sdl.LanguagePlatform.Core.Tokenization.TagToken
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TagToken.ToString()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.ToString()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\n<xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representation of the object, for display purposes.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sdl.LanguagePlatform.Core.Tokenization.TagToken.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TagToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  id: AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  parent: Sdl.LanguagePlatform.Core.Tokenization.TagToken
  langs:
  - csharp
  - vb
  name: AcceptSegmentElementVisitor(ISegmentElementVisitor)
  nameWithType: TagToken.AcceptSegmentElementVisitor(ISegmentElementVisitor)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nVisitor pattern implementation. Calls <xref href=\"Sdl.LanguagePlatform.Core.ISegmentElementVisitor.VisitTagToken(Sdl.LanguagePlatform.Core.Tokenization.TagToken)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public override void AcceptSegmentElementVisitor(ISegmentElementVisitor visitor)
    parameters:
    - id: visitor
      type: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
      description: The visitor instance
    content.vb: Public Overrides Sub AcceptSegmentElementVisitor(visitor As ISegmentElementVisitor)
  overridden: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  overload: Sdl.LanguagePlatform.Core.Tokenization.TagToken.AcceptSegmentElementVisitor*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.Tag
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.TagToken.Tag
  id: Tag
  parent: Sdl.LanguagePlatform.Core.Tokenization.TagToken
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: TagToken.Tag
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.Tag
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets or sets the tag encapsulated in this instance.\n"
  syntax:
    content: public Tag Tag { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Tag
    content.vb: Public Property Tag As Tag
  overload: Sdl.LanguagePlatform.Core.Tokenization.TagToken.Tag*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.IsPlaceable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.TagToken.IsPlaceable
  id: IsPlaceable
  parent: Sdl.LanguagePlatform.Core.Tokenization.TagToken
  langs:
  - csharp
  - vb
  name: IsPlaceable
  nameWithType: TagToken.IsPlaceable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.IsPlaceable
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\n<xref href=\"Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable\" data-throw-if-not-resolved=\"false\"></xref>. Always <code>true</code> for this class.\n"
  syntax:
    content: public override bool IsPlaceable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsPlaceable As Boolean
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable
  overload: Sdl.LanguagePlatform.Core.Tokenization.TagToken.IsPlaceable*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.IsSubstitutable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.TagToken.IsSubstitutable
  id: IsSubstitutable
  parent: Sdl.LanguagePlatform.Core.Tokenization.TagToken
  langs:
  - csharp
  - vb
  name: IsSubstitutable
  nameWithType: TagToken.IsSubstitutable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.IsSubstitutable
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\n<xref href=\"Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable\" data-throw-if-not-resolved=\"false\"></xref>. Always <code>true</code> for this class.\n"
  syntax:
    content: public override bool IsSubstitutable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsSubstitutable As Boolean
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable
  overload: Sdl.LanguagePlatform.Core.Tokenization.TagToken.IsSubstitutable*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.Core.Tokenization
  commentId: N:Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Sdl.LanguagePlatform.Core.Tokenization
  nameWithType: Sdl.LanguagePlatform.Core.Tokenization
  fullName: Sdl.LanguagePlatform.Core.Tokenization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.LanguagePlatform.Core.SegmentElement
  commentId: T:Sdl.LanguagePlatform.Core.SegmentElement
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: SegmentElement
  nameWithType: SegmentElement
  fullName: Sdl.LanguagePlatform.Core.SegmentElement
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.Token
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Token
  nameWithType: Token
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: SetTokenType(TokenType)
  nameWithType: Token.SetTokenType(TokenType)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
    name: SetTokenType
    nameWithType: Token.SetTokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    name: TokenType
    nameWithType: TokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
    name: SetTokenType
    nameWithType: Token.SetTokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    name: TokenType
    nameWithType: TokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: GetWeakHashCode()
  nameWithType: Token.GetWeakHashCode()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    name: GetWeakHashCode
    nameWithType: Token.GetWeakHashCode
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    name: GetWeakHashCode
    nameWithType: Token.GetWeakHashCode
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: GetBundleSimilarity(SegmentElement)
  nameWithType: Token.GetBundleSimilarity(SegmentElement)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetBundleSimilarity
    nameWithType: Token.GetBundleSimilarity
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetBundleSimilarity
    nameWithType: Token.GetBundleSimilarity
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: TokenizationContext
  nameWithType: Token.TokenizationContext
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Text
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Text
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Text
  nameWithType: Token.Text
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Text
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Span
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Span
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Span
  nameWithType: Token.Span
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Span
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Type
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Type
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Type
  nameWithType: Token.Type
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Type
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsWord
  nameWithType: Token.IsWord
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsPunctuation
  nameWithType: Token.IsPunctuation
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsWhitespace
  nameWithType: Token.IsWhitespace
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Culture
  nameWithType: Token.Culture
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: GetSimilarity(SegmentElement)
  nameWithType: SegmentElement.GetSimilarity(SegmentElement)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: GetSimilarity(SegmentElement, Boolean)
  nameWithType: SegmentElement.GetSimilarity(SegmentElement, Boolean)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement, System.Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: GetSimilarityAsync(SegmentElement)
  nameWithType: SegmentElement.GetSimilarityAsync(SegmentElement)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarityAsync
    nameWithType: SegmentElement.GetSimilarityAsync
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarityAsync
    nameWithType: SegmentElement.GetSimilarityAsync
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: GetSimilarityAsync(SegmentElement, Boolean)
  nameWithType: SegmentElement.GetSimilarityAsync(SegmentElement, Boolean)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement, System.Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarityAsync
    nameWithType: SegmentElement.GetSimilarityAsync
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarityAsync
    nameWithType: SegmentElement.GetSimilarityAsync
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TagToken.#ctor
  isExternal: true
  name: TagToken
  nameWithType: TagToken.TagToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.TagToken
- uid: Sdl.LanguagePlatform.Core.Tag
  commentId: T:Sdl.LanguagePlatform.Core.Tag
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: Tag
  nameWithType: Tag
  fullName: Sdl.LanguagePlatform.Core.Tag
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.TagToken
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: TagToken
  nameWithType: TagToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken
- uid: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: Duplicate()
  nameWithType: SegmentElement.Duplicate()
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    name: Duplicate
    nameWithType: SegmentElement.Duplicate
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    name: Duplicate
    nameWithType: SegmentElement.Duplicate
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.Duplicate*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TagToken.Duplicate
  isExternal: true
  name: Duplicate
  nameWithType: TagToken.Duplicate
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.Duplicate
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.UpdateValue*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TagToken.UpdateValue
  isExternal: true
  name: UpdateValue
  nameWithType: TagToken.UpdateValue
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.UpdateValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: GetTokenType()
  nameWithType: Token.GetTokenType()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
    name: GetTokenType
    nameWithType: Token.GetTokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
    name: GetTokenType
    nameWithType: Token.GetTokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.GetTokenType*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TagToken.GetTokenType
  isExternal: true
  name: GetTokenType
  nameWithType: TagToken.GetTokenType
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.GetTokenType
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenType
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.TokenType
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: TokenType
  nameWithType: TokenType
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenType
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Equals(Object)
  nameWithType: Token.Equals(Object)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
    name: Equals
    nameWithType: Token.Equals
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
    name: Equals
    nameWithType: Token.Equals
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.Equals*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TagToken.Equals
  isExternal: true
  name: Equals
  nameWithType: TagToken.Equals
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.Equals
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: GetHashCode()
  nameWithType: Token.GetHashCode()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
    name: GetHashCode
    nameWithType: Token.GetHashCode
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
    name: GetHashCode
    nameWithType: Token.GetHashCode
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.GetHashCode*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TagToken.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: TagToken.GetHashCode
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.ToString*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TagToken.ToString
  isExternal: true
  name: ToString
  nameWithType: TagToken.ToString
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: AcceptSegmentElementVisitor(ISegmentElementVisitor)
  nameWithType: SegmentElement.AcceptSegmentElementVisitor(ISegmentElementVisitor)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
    name: AcceptSegmentElementVisitor
    nameWithType: SegmentElement.AcceptSegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    name: ISegmentElementVisitor
    nameWithType: ISegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
    name: AcceptSegmentElementVisitor
    nameWithType: SegmentElement.AcceptSegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    name: ISegmentElementVisitor
    nameWithType: ISegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.AcceptSegmentElementVisitor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TagToken.AcceptSegmentElementVisitor
  isExternal: true
  name: AcceptSegmentElementVisitor
  nameWithType: TagToken.AcceptSegmentElementVisitor
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.AcceptSegmentElementVisitor
- uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
  commentId: T:Sdl.LanguagePlatform.Core.ISegmentElementVisitor
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: ISegmentElementVisitor
  nameWithType: ISegmentElementVisitor
  fullName: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.Tag*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TagToken.Tag
  isExternal: true
  name: Tag
  nameWithType: TagToken.Tag
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.Tag
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsPlaceable
  nameWithType: Token.IsPlaceable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.IsPlaceable*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TagToken.IsPlaceable
  isExternal: true
  name: IsPlaceable
  nameWithType: TagToken.IsPlaceable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.IsPlaceable
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsSubstitutable
  nameWithType: Token.IsSubstitutable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable
- uid: Sdl.LanguagePlatform.Core.Tokenization.TagToken.IsSubstitutable*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TagToken.IsSubstitutable
  isExternal: true
  name: IsSubstitutable
  nameWithType: TagToken.IsSubstitutable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TagToken.IsSubstitutable
