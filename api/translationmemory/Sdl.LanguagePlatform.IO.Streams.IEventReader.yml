### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.IO.Streams.IEventReader
  commentId: T:Sdl.LanguagePlatform.IO.Streams.IEventReader
  id: IEventReader
  parent: Sdl.LanguagePlatform.IO.Streams
  children:
  - Sdl.LanguagePlatform.IO.Streams.IEventReader.ReadAsync
  langs:
  - csharp
  - vb
  name: IEventReader
  nameWithType: IEventReader
  fullName: Sdl.LanguagePlatform.IO.Streams.IEventReader
  type: Interface
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.Streams
  summary: "\nSimple interface for reading events from a stream.\n"
  syntax:
    content: public interface IEventReader
    content.vb: Public Interface IEventReader
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.LanguagePlatform.IO.Streams.IEventReader.ReadAsync
  commentId: M:Sdl.LanguagePlatform.IO.Streams.IEventReader.ReadAsync
  id: ReadAsync
  parent: Sdl.LanguagePlatform.IO.Streams.IEventReader
  langs:
  - csharp
  - vb
  name: ReadAsync()
  nameWithType: IEventReader.ReadAsync()
  fullName: Sdl.LanguagePlatform.IO.Streams.IEventReader.ReadAsync()
  type: Method
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.Streams
  summary: "\nReads the next item in the stream and returns the corresponding Event object, from that particular item.\n"
  syntax:
    content: Task<Event> ReadAsync()
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.IO.Streams.Event}
      description: An Event object.
    content.vb: Function ReadAsync As Task(Of  Event)
  overload: Sdl.LanguagePlatform.IO.Streams.IEventReader.ReadAsync*
references:
- uid: Sdl.LanguagePlatform.IO.Streams
  commentId: N:Sdl.LanguagePlatform.IO.Streams
  isExternal: true
  name: Sdl.LanguagePlatform.IO.Streams
  nameWithType: Sdl.LanguagePlatform.IO.Streams
  fullName: Sdl.LanguagePlatform.IO.Streams
- uid: Sdl.LanguagePlatform.IO.Streams.IEventReader.ReadAsync*
  commentId: Overload:Sdl.LanguagePlatform.IO.Streams.IEventReader.ReadAsync
  isExternal: true
  name: ReadAsync
  nameWithType: IEventReader.ReadAsync
  fullName: Sdl.LanguagePlatform.IO.Streams.IEventReader.ReadAsync
- uid: System.Threading.Tasks.Task{Sdl.LanguagePlatform.IO.Streams.Event}
  commentId: T:System.Threading.Tasks.Task{Sdl.LanguagePlatform.IO.Streams.Event}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Event>
  nameWithType: Task<Event>
  fullName: System.Threading.Tasks.Task<Sdl.LanguagePlatform.IO.Streams.Event>
  nameWithType.vb: Task(Of Event)
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.LanguagePlatform.IO.Streams.Event)
  name.vb: Task(Of Event)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.IO.Streams.Event
    name: Event
    nameWithType: Event
    fullName: Sdl.LanguagePlatform.IO.Streams.Event
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.IO.Streams.Event
    name: Event
    nameWithType: Event
    fullName: Sdl.LanguagePlatform.IO.Streams.Event
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
