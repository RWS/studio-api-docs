### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator
  id: TranslationMemoryIterator
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.#ctor
  - Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.#ctor(System.Int32)
  - Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Filter
  - Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Forward
  - Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxCount
  - Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxScan
  - Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ProcessedTranslationUnits
  - Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Reset
  - Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ScannedTranslationUnits
  langs:
  - csharp
  - vb
  name: TranslationMemoryIterator
  nameWithType: TranslationMemoryIterator
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nBase iterator class. Contains the common properties needed for iteration through \na translation memory.\n"
  syntax:
    content: public abstract class TranslationMemoryIterator
    content.vb: Public MustInherit Class TranslationMemoryIterator
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.LanguagePlatform.TranslationMemory.DuplicateIterator
  - Sdl.LanguagePlatform.TranslationMemory.RegularIterator
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator
  langs:
  - csharp
  - vb
  name: TranslationMemoryIterator()
  nameWithType: TranslationMemoryIterator.TranslationMemoryIterator()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.TranslationMemoryIterator()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance with default values (the max count is set to 100).\n"
  syntax:
    content: protected TranslationMemoryIterator()
    content.vb: Protected Sub New
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.#ctor(System.Int32)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator
  langs:
  - csharp
  - vb
  name: TranslationMemoryIterator(Int32)
  nameWithType: TranslationMemoryIterator.TranslationMemoryIterator(Int32)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.TranslationMemoryIterator(System.Int32)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance with the specified values.\n"
  syntax:
    content: protected TranslationMemoryIterator(int maxCount)
    parameters:
    - id: maxCount
      type: System.Int32
      description: The maximum number of TUs to return in one iteration roundtrip
    content.vb: Protected Sub New(maxCount As Integer)
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Reset
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Reset
  id: Reset
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: TranslationMemoryIterator.Reset()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Reset()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nRepositions the iterator at the beginning of the translation memory.\n"
  syntax:
    content: public abstract void Reset()
    content.vb: Public MustOverride Sub Reset
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Reset*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Filter
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Filter
  id: Filter
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: TranslationMemoryIterator.Filter
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Filter
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the filter used by this iterator.\n<p>Only translation units satisfying this filter will be returned.</p>\n"
  syntax:
    content: public FilterExpression Filter { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
    content.vb: Public Property Filter As FilterExpression
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Filter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxCount
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxCount
  id: MaxCount
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator
  langs:
  - csharp
  - vb
  name: MaxCount
  nameWithType: TranslationMemoryIterator.MaxCount
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxCount
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the maximum number of translation units that this iterator will return \nto the caller in one step.\n"
  syntax:
    content: public int MaxCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxCount As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxScan
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxScan
  id: MaxScan
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator
  langs:
  - csharp
  - vb
  name: MaxScan
  nameWithType: TranslationMemoryIterator.MaxScan
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxScan
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the maximum number of translation units that this iterator will \nretrieve from the TM in one step. If 0, the number will be unlimited. Note that while <xref href=\"Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxCount\" data-throw-if-not-resolved=\"false\"></xref>\nlimits the number of TUs returned to the caller, <xref href=\"Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxScan\" data-throw-if-not-resolved=\"false\"></xref> limits the number of TUs retrieved from\nthe storage. This facilitates cancellation and progress reporting in cases where the iterator&apos;s filter\nconditions require many (or all) TUs retrieved from the storage to fill the result set.\n<p>\nSince TUs are retrieved from storage in batches of size <xref href=\"Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxCount\" data-throw-if-not-resolved=\"false\"></xref>, the number of scanned\nTUs in one iteration may actually be larger than the <xref href=\"Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxScan\" data-throw-if-not-resolved=\"false\"></xref> value.\n</p>\n"
  syntax:
    content: public int MaxScan { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxScan As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxScan*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ProcessedTranslationUnits
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ProcessedTranslationUnits
  id: ProcessedTranslationUnits
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator
  langs:
  - csharp
  - vb
  name: ProcessedTranslationUnits
  nameWithType: TranslationMemoryIterator.ProcessedTranslationUnits
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ProcessedTranslationUnits
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the number of translation units processed by this iterator since its creation.\n"
  syntax:
    content: public int ProcessedTranslationUnits { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ProcessedTranslationUnits As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ProcessedTranslationUnits*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ScannedTranslationUnits
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ScannedTranslationUnits
  id: ScannedTranslationUnits
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator
  langs:
  - csharp
  - vb
  name: ScannedTranslationUnits
  nameWithType: TranslationMemoryIterator.ScannedTranslationUnits
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ScannedTranslationUnits
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the number of translation units processed by this iterator in the last roundtrip.\n"
  syntax:
    content: public int ScannedTranslationUnits { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ScannedTranslationUnits As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ScannedTranslationUnits*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Forward
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Forward
  id: Forward
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator
  langs:
  - csharp
  - vb
  name: Forward
  nameWithType: TranslationMemoryIterator.Forward
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Forward
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets whether this iterator is moving forward or backward to retrieve the next page of translation units.\n"
  syntax:
    content: public bool Forward { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Forward As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Forward*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.#ctor
  isExternal: true
  name: TranslationMemoryIterator
  nameWithType: TranslationMemoryIterator.TranslationMemoryIterator
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.TranslationMemoryIterator
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Reset*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Reset
  isExternal: true
  name: Reset
  nameWithType: TranslationMemoryIterator.Reset
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Reset
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Filter*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Filter
  isExternal: true
  name: Filter
  nameWithType: TranslationMemoryIterator.Filter
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Filter
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FilterExpression
  nameWithType: FilterExpression
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxCount*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxCount
  isExternal: true
  name: MaxCount
  nameWithType: TranslationMemoryIterator.MaxCount
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxCount
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxScan*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxScan
  isExternal: true
  name: MaxScan
  nameWithType: TranslationMemoryIterator.MaxScan
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxScan
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ProcessedTranslationUnits*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ProcessedTranslationUnits
  isExternal: true
  name: ProcessedTranslationUnits
  nameWithType: TranslationMemoryIterator.ProcessedTranslationUnits
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ProcessedTranslationUnits
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ScannedTranslationUnits*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ScannedTranslationUnits
  isExternal: true
  name: ScannedTranslationUnits
  nameWithType: TranslationMemoryIterator.ScannedTranslationUnits
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ScannedTranslationUnits
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Forward*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Forward
  isExternal: true
  name: Forward
  nameWithType: TranslationMemoryIterator.Forward
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Forward
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
