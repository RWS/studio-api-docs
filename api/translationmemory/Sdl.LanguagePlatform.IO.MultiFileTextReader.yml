### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader
  commentId: T:Sdl.LanguagePlatform.IO.MultiFileTextReader
  id: MultiFileTextReader
  parent: Sdl.LanguagePlatform.IO
  children:
  - Sdl.LanguagePlatform.IO.MultiFileTextReader.#ctor(System.IO.DirectoryInfo,System.String,System.Boolean)
  - Sdl.LanguagePlatform.IO.MultiFileTextReader.#ctor(System.IO.FileInfo[])
  - Sdl.LanguagePlatform.IO.MultiFileTextReader.#ctor(System.String[])
  - Sdl.LanguagePlatform.IO.MultiFileTextReader.Close
  - Sdl.LanguagePlatform.IO.MultiFileTextReader.CurrentFile
  - Sdl.LanguagePlatform.IO.MultiFileTextReader.Peek
  - Sdl.LanguagePlatform.IO.MultiFileTextReader.Read
  - Sdl.LanguagePlatform.IO.MultiFileTextReader.Read(System.Char[],System.Int32,System.Int32)
  - Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
  - Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadLine
  - Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadToEnd
  langs:
  - csharp
  - vb
  name: MultiFileTextReader
  nameWithType: MultiFileTextReader
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader
  type: Class
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO
  summary: A text reader which virtually concatenates a number of text files and allows sequential reading from this file set.
  example: []
  syntax:
    content: 'public class MultiFileTextReader : TextReader, IDisposable'
    content.vb: Public Class MultiFileTextReader Inherits TextReader Implements IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.IO.TextReader
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IO.TextReader.Null
  - System.IO.TextReader.Dispose
  - System.IO.TextReader.Dispose(System.Boolean)
  - System.IO.TextReader.ReadLineAsync
  - System.IO.TextReader.ReadToEndAsync
  - System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)
  - System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
  - System.IO.TextReader.Synchronized(System.IO.TextReader)
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.#ctor(System.IO.FileInfo[])
  commentId: M:Sdl.LanguagePlatform.IO.MultiFileTextReader.#ctor(System.IO.FileInfo[])
  id: '#ctor(System.IO.FileInfo[])'
  parent: Sdl.LanguagePlatform.IO.MultiFileTextReader
  langs:
  - csharp
  - vb
  name: MultiFileTextReader(params FileInfo[])
  nameWithType: MultiFileTextReader.MultiFileTextReader(params FileInfo[])
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.MultiFileTextReader(params System.IO.FileInfo[])
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO
  summary: >-
    Instantiates a MultiFileTextReader which works on the specified set of files. The files are opened with BOM sniffing

    defaulting to UTF8 encoding.
  example: []
  syntax:
    content: public MultiFileTextReader(params FileInfo[] files)
    parameters:
    - id: files
      type: System.IO.FileInfo[]
    content.vb: Public Sub New(ParamArray files As FileInfo())
  overload: Sdl.LanguagePlatform.IO.MultiFileTextReader.#ctor*
  nameWithType.vb: MultiFileTextReader.New(ParamArray FileInfo())
  fullName.vb: Sdl.LanguagePlatform.IO.MultiFileTextReader.New(ParamArray System.IO.FileInfo())
  name.vb: New(ParamArray FileInfo())
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.#ctor(System.IO.DirectoryInfo,System.String,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.IO.MultiFileTextReader.#ctor(System.IO.DirectoryInfo,System.String,System.Boolean)
  id: '#ctor(System.IO.DirectoryInfo,System.String,System.Boolean)'
  parent: Sdl.LanguagePlatform.IO.MultiFileTextReader
  langs:
  - csharp
  - vb
  name: MultiFileTextReader(DirectoryInfo, string, bool)
  nameWithType: MultiFileTextReader.MultiFileTextReader(DirectoryInfo, string, bool)
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.MultiFileTextReader(System.IO.DirectoryInfo, string, bool)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO
  summary: Instantiates a MultiFileTextReader which works on the files contained in the specified directory and its subdirectories.
  example: []
  syntax:
    content: public MultiFileTextReader(DirectoryInfo rootDirectory, string fileFilter, bool recurse)
    parameters:
    - id: rootDirectory
      type: System.IO.DirectoryInfo
      description: The directory in which to search for applicable files.
    - id: fileFilter
      type: System.String
      description: If non-null, only files which match the filter are added to the file set (see System.IO.DirectoryInfo.GetFiles()).
    - id: recurse
      type: System.Boolean
      description: If true, subdirectories are scanned for matching false. Otherwise, only files in the specified root directory are considered.
    content.vb: Public Sub New(rootDirectory As DirectoryInfo, fileFilter As String, recurse As Boolean)
  overload: Sdl.LanguagePlatform.IO.MultiFileTextReader.#ctor*
  nameWithType.vb: MultiFileTextReader.New(DirectoryInfo, String, Boolean)
  fullName.vb: Sdl.LanguagePlatform.IO.MultiFileTextReader.New(System.IO.DirectoryInfo, String, Boolean)
  name.vb: New(DirectoryInfo, String, Boolean)
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.#ctor(System.String[])
  commentId: M:Sdl.LanguagePlatform.IO.MultiFileTextReader.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: Sdl.LanguagePlatform.IO.MultiFileTextReader
  langs:
  - csharp
  - vb
  name: MultiFileTextReader(params string[])
  nameWithType: MultiFileTextReader.MultiFileTextReader(params string[])
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.MultiFileTextReader(params string[])
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO
  summary: >-
    Instantiates a MultiFileTextReader which works on the files or directories passed as the parameter. Directories

    are recursed into, files are opened UTF8 with BOM sniffing.
  example: []
  syntax:
    content: public MultiFileTextReader(params string[] filesOrDirectories)
    parameters:
    - id: filesOrDirectories
      type: System.String[]
      description: The set of file names or directory names to work on
    content.vb: Public Sub New(ParamArray filesOrDirectories As String())
  overload: Sdl.LanguagePlatform.IO.MultiFileTextReader.#ctor*
  nameWithType.vb: MultiFileTextReader.New(ParamArray String())
  fullName.vb: Sdl.LanguagePlatform.IO.MultiFileTextReader.New(ParamArray String())
  name.vb: New(ParamArray String())
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.Peek
  commentId: M:Sdl.LanguagePlatform.IO.MultiFileTextReader.Peek
  id: Peek
  parent: Sdl.LanguagePlatform.IO.MultiFileTextReader
  langs:
  - csharp
  - vb
  name: Peek()
  nameWithType: MultiFileTextReader.Peek()
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.Peek()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO
  summary: Not implemented.
  example: []
  syntax:
    content: public override int Peek()
    return:
      type: System.Int32
      description: Always throws exception.
    content.vb: Public Overrides Function Peek() As Integer
  overridden: System.IO.TextReader.Peek
  overload: Sdl.LanguagePlatform.IO.MultiFileTextReader.Peek*
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.Read
  commentId: M:Sdl.LanguagePlatform.IO.MultiFileTextReader.Read
  id: Read
  parent: Sdl.LanguagePlatform.IO.MultiFileTextReader
  langs:
  - csharp
  - vb
  name: Read()
  nameWithType: MultiFileTextReader.Read()
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.Read()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO
  summary: Reads the next character from the set of input files, advances the current file as necessary.
  example: []
  syntax:
    content: public override int Read()
    return:
      type: System.Int32
      description: The next input character or -1 if EOF (of the concatenation) is reached.
    content.vb: Public Overrides Function Read() As Integer
  overridden: System.IO.TextReader.Read
  overload: Sdl.LanguagePlatform.IO.MultiFileTextReader.Read*
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.Read(System.Char[],System.Int32,System.Int32)
  commentId: M:Sdl.LanguagePlatform.IO.MultiFileTextReader.Read(System.Char[],System.Int32,System.Int32)
  id: Read(System.Char[],System.Int32,System.Int32)
  parent: Sdl.LanguagePlatform.IO.MultiFileTextReader
  langs:
  - csharp
  - vb
  name: Read(char[], int, int)
  nameWithType: MultiFileTextReader.Read(char[], int, int)
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.Read(char[], int, int)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO
  summary: Reads a block of characters from the virtual concatenation of text files.
  example: []
  syntax:
    content: public override int Read(char[] buffer, int index, int count)
    parameters:
    - id: buffer
      type: System.Char[]
      description: The buffer to store the data in (see TextReader.Read())
    - id: index
      type: System.Int32
      description: The index to start storing characters in the buffer.
    - id: count
      type: System.Int32
      description: The maximum number of characters to read
    return:
      type: System.Int32
      description: 0 on EOF, or the number of characters read which may be 0 &lt; n &lt;= count
    content.vb: Public Overrides Function Read(buffer As Char(), index As Integer, count As Integer) As Integer
  overridden: System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)
  overload: Sdl.LanguagePlatform.IO.MultiFileTextReader.Read*
  nameWithType.vb: MultiFileTextReader.Read(Char(), Integer, Integer)
  fullName.vb: Sdl.LanguagePlatform.IO.MultiFileTextReader.Read(Char(), Integer, Integer)
  name.vb: Read(Char(), Integer, Integer)
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
  commentId: M:Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
  id: ReadBlock(System.Char[],System.Int32,System.Int32)
  parent: Sdl.LanguagePlatform.IO.MultiFileTextReader
  langs:
  - csharp
  - vb
  name: ReadBlock(char[], int, int)
  nameWithType: MultiFileTextReader.ReadBlock(char[], int, int)
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadBlock(char[], int, int)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO
  summary: Reads a block of characters from the virtual concatenation of text files.
  example: []
  syntax:
    content: public override int ReadBlock(char[] buffer, int index, int count)
    parameters:
    - id: buffer
      type: System.Char[]
      description: The buffer to store the data in (see TextReader.Read())
    - id: index
      type: System.Int32
      description: The index to start storing characters in the buffer
    - id: count
      type: System.Int32
      description: The number of characters to read
    return:
      type: System.Int32
      description: >-
        The number of characters read. Unlike Read(buffer, index, count), this method
                    will always attempt to read count characters and will automatically advance to the next file 
                    if the current file does not contain enough data.
    content.vb: Public Overrides Function ReadBlock(buffer As Char(), index As Integer, count As Integer) As Integer
  overridden: System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
  overload: Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadBlock*
  nameWithType.vb: MultiFileTextReader.ReadBlock(Char(), Integer, Integer)
  fullName.vb: Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadBlock(Char(), Integer, Integer)
  name.vb: ReadBlock(Char(), Integer, Integer)
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadLine
  commentId: M:Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadLine
  id: ReadLine
  parent: Sdl.LanguagePlatform.IO.MultiFileTextReader
  langs:
  - csharp
  - vb
  name: ReadLine()
  nameWithType: MultiFileTextReader.ReadLine()
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadLine()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO
  summary: Reads the next line of input from the concatenation of text files.
  example: []
  syntax:
    content: public override string ReadLine()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ReadLine() As String
  overridden: System.IO.TextReader.ReadLine
  overload: Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadLine*
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadToEnd
  commentId: M:Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadToEnd
  id: ReadToEnd
  parent: Sdl.LanguagePlatform.IO.MultiFileTextReader
  langs:
  - csharp
  - vb
  name: ReadToEnd()
  nameWithType: MultiFileTextReader.ReadToEnd()
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadToEnd()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO
  summary: Not implemented.
  example: []
  syntax:
    content: public override string ReadToEnd()
    return:
      type: System.String
      description: Always throws exception.
    content.vb: Public Overrides Function ReadToEnd() As String
  overridden: System.IO.TextReader.ReadToEnd
  overload: Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadToEnd*
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.Close
  commentId: M:Sdl.LanguagePlatform.IO.MultiFileTextReader.Close
  id: Close
  parent: Sdl.LanguagePlatform.IO.MultiFileTextReader
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: MultiFileTextReader.Close()
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.Close()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO
  summary: Closes the overall file set. An attempt to read more data will lead to an exception.
  example: []
  syntax:
    content: public override void Close()
    content.vb: Public Overrides Sub Close()
  overridden: System.IO.TextReader.Close
  overload: Sdl.LanguagePlatform.IO.MultiFileTextReader.Close*
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.CurrentFile
  commentId: P:Sdl.LanguagePlatform.IO.MultiFileTextReader.CurrentFile
  id: CurrentFile
  parent: Sdl.LanguagePlatform.IO.MultiFileTextReader
  langs:
  - csharp
  - vb
  name: CurrentFile
  nameWithType: MultiFileTextReader.CurrentFile
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.CurrentFile
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO
  summary: Allows access to the FileInfo of the currently worked-on file. If null, EOF has been reached.
  example: []
  syntax:
    content: public FileInfo CurrentFile { get; }
    parameters: []
    return:
      type: System.IO.FileInfo
    content.vb: Public ReadOnly Property CurrentFile As FileInfo
  overload: Sdl.LanguagePlatform.IO.MultiFileTextReader.CurrentFile*
references:
- uid: Sdl.LanguagePlatform.IO
  commentId: N:Sdl.LanguagePlatform.IO
  isExternal: true
  href: Sdl.html
  name: Sdl.LanguagePlatform.IO
  nameWithType: Sdl.LanguagePlatform.IO
  fullName: Sdl.LanguagePlatform.IO
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.IO
    name: IO
    isExternal: true
    href: Sdl.LanguagePlatform.IO.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.IO
    name: IO
    isExternal: true
    href: Sdl.LanguagePlatform.IO.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.IO.TextReader.Null
  commentId: F:System.IO.TextReader.Null
  parent: System.IO.TextReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader.null
  name: "Null"
  nameWithType: TextReader.Null
  fullName: System.IO.TextReader.Null
- uid: System.IO.TextReader.Dispose
  commentId: M:System.IO.TextReader.Dispose
  parent: System.IO.TextReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader.dispose#system-io-textreader-dispose
  name: Dispose()
  nameWithType: TextReader.Dispose()
  fullName: System.IO.TextReader.Dispose()
  spec.csharp:
  - uid: System.IO.TextReader.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.dispose#system-io-textreader-dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IO.TextReader.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.dispose#system-io-textreader-dispose
  - name: (
  - name: )
- uid: System.IO.TextReader.Dispose(System.Boolean)
  commentId: M:System.IO.TextReader.Dispose(System.Boolean)
  parent: System.IO.TextReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader.dispose#system-io-textreader-dispose(system-boolean)
  name: Dispose(bool)
  nameWithType: TextReader.Dispose(bool)
  fullName: System.IO.TextReader.Dispose(bool)
  nameWithType.vb: TextReader.Dispose(Boolean)
  fullName.vb: System.IO.TextReader.Dispose(Boolean)
  name.vb: Dispose(Boolean)
  spec.csharp:
  - uid: System.IO.TextReader.Dispose(System.Boolean)
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.dispose#system-io-textreader-dispose(system-boolean)
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: System.IO.TextReader.Dispose(System.Boolean)
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.dispose#system-io-textreader-dispose(system-boolean)
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.IO.TextReader.ReadLineAsync
  commentId: M:System.IO.TextReader.ReadLineAsync
  parent: System.IO.TextReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readlineasync
  name: ReadLineAsync()
  nameWithType: TextReader.ReadLineAsync()
  fullName: System.IO.TextReader.ReadLineAsync()
  spec.csharp:
  - uid: System.IO.TextReader.ReadLineAsync
    name: ReadLineAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readlineasync
  - name: (
  - name: )
  spec.vb:
  - uid: System.IO.TextReader.ReadLineAsync
    name: ReadLineAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readlineasync
  - name: (
  - name: )
- uid: System.IO.TextReader.ReadToEndAsync
  commentId: M:System.IO.TextReader.ReadToEndAsync
  parent: System.IO.TextReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readtoendasync
  name: ReadToEndAsync()
  nameWithType: TextReader.ReadToEndAsync()
  fullName: System.IO.TextReader.ReadToEndAsync()
  spec.csharp:
  - uid: System.IO.TextReader.ReadToEndAsync
    name: ReadToEndAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readtoendasync
  - name: (
  - name: )
  spec.vb:
  - uid: System.IO.TextReader.ReadToEndAsync
    name: ReadToEndAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readtoendasync
  - name: (
  - name: )
- uid: System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readasync
  name: ReadAsync(char[], int, int)
  nameWithType: TextReader.ReadAsync(char[], int, int)
  fullName: System.IO.TextReader.ReadAsync(char[], int, int)
  nameWithType.vb: TextReader.ReadAsync(Char(), Integer, Integer)
  fullName.vb: System.IO.TextReader.ReadAsync(Char(), Integer, Integer)
  name.vb: ReadAsync(Char(), Integer, Integer)
  spec.csharp:
  - uid: System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)
    name: ReadAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readasync
  - name: (
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)
    name: ReadAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readasync
  - name: (
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readblockasync
  name: ReadBlockAsync(char[], int, int)
  nameWithType: TextReader.ReadBlockAsync(char[], int, int)
  fullName: System.IO.TextReader.ReadBlockAsync(char[], int, int)
  nameWithType.vb: TextReader.ReadBlockAsync(Char(), Integer, Integer)
  fullName.vb: System.IO.TextReader.ReadBlockAsync(Char(), Integer, Integer)
  name.vb: ReadBlockAsync(Char(), Integer, Integer)
  spec.csharp:
  - uid: System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
    name: ReadBlockAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readblockasync
  - name: (
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
    name: ReadBlockAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readblockasync
  - name: (
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.IO.TextReader.Synchronized(System.IO.TextReader)
  commentId: M:System.IO.TextReader.Synchronized(System.IO.TextReader)
  parent: System.IO.TextReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader.synchronized
  name: Synchronized(TextReader)
  nameWithType: TextReader.Synchronized(TextReader)
  fullName: System.IO.TextReader.Synchronized(System.IO.TextReader)
  spec.csharp:
  - uid: System.IO.TextReader.Synchronized(System.IO.TextReader)
    name: Synchronized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.synchronized
  - name: (
  - uid: System.IO.TextReader
    name: TextReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader
  - name: )
  spec.vb:
  - uid: System.IO.TextReader.Synchronized(System.IO.TextReader)
    name: Synchronized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.synchronized
  - name: (
  - uid: System.IO.TextReader
    name: TextReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader
  - name: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.memberwiseclone
  name: MemberwiseClone(bool)
  nameWithType: MarshalByRefObject.MemberwiseClone(bool)
  fullName: System.MarshalByRefObject.MemberwiseClone(bool)
  nameWithType.vb: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName.vb: System.MarshalByRefObject.MemberwiseClone(Boolean)
  name.vb: MemberwiseClone(Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.memberwiseclone
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.memberwiseclone
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  - name: (
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  - name: (
  - name: )
- uid: System.MarshalByRefObject.InitializeLifetimeService
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  - name: (
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  - name: (
  - name: )
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.createobjref
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)
  spec.csharp:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.createobjref
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.createobjref
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.IO.MultiFileTextReader.#ctor
  isExternal: true
  href: Sdl.LanguagePlatform.IO.MultiFileTextReader.html#Sdl_LanguagePlatform_IO_MultiFileTextReader__ctor_System_IO_FileInfo___
  name: MultiFileTextReader
  nameWithType: MultiFileTextReader.MultiFileTextReader
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.MultiFileTextReader
  nameWithType.vb: MultiFileTextReader.New
  fullName.vb: Sdl.LanguagePlatform.IO.MultiFileTextReader.New
  name.vb: New
- uid: System.IO.FileInfo[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  name: FileInfo[]
  nameWithType: FileInfo[]
  fullName: System.IO.FileInfo[]
  nameWithType.vb: FileInfo()
  fullName.vb: System.IO.FileInfo()
  name.vb: FileInfo()
  spec.csharp:
  - uid: System.IO.FileInfo
    name: FileInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.IO.FileInfo
    name: FileInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  - name: (
  - name: )
- uid: System.IO.DirectoryInfo
  commentId: T:System.IO.DirectoryInfo
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.directoryinfo
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.IO.TextReader.Peek
  commentId: M:System.IO.TextReader.Peek
  parent: System.IO.TextReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader.peek
  name: Peek()
  nameWithType: TextReader.Peek()
  fullName: System.IO.TextReader.Peek()
  spec.csharp:
  - uid: System.IO.TextReader.Peek
    name: Peek
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.peek
  - name: (
  - name: )
  spec.vb:
  - uid: System.IO.TextReader.Peek
    name: Peek
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.peek
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.Peek*
  commentId: Overload:Sdl.LanguagePlatform.IO.MultiFileTextReader.Peek
  isExternal: true
  href: Sdl.LanguagePlatform.IO.MultiFileTextReader.html#Sdl_LanguagePlatform_IO_MultiFileTextReader_Peek
  name: Peek
  nameWithType: MultiFileTextReader.Peek
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.Peek
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.IO.TextReader.Read
  commentId: M:System.IO.TextReader.Read
  parent: System.IO.TextReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader.read#system-io-textreader-read
  name: Read()
  nameWithType: TextReader.Read()
  fullName: System.IO.TextReader.Read()
  spec.csharp:
  - uid: System.IO.TextReader.Read
    name: Read
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.read#system-io-textreader-read
  - name: (
  - name: )
  spec.vb:
  - uid: System.IO.TextReader.Read
    name: Read
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.read#system-io-textreader-read
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.Read*
  commentId: Overload:Sdl.LanguagePlatform.IO.MultiFileTextReader.Read
  isExternal: true
  href: Sdl.LanguagePlatform.IO.MultiFileTextReader.html#Sdl_LanguagePlatform_IO_MultiFileTextReader_Read
  name: Read
  nameWithType: MultiFileTextReader.Read
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.Read
- uid: System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader.read#system-io-textreader-read(system-char()-system-int32-system-int32)
  name: Read(char[], int, int)
  nameWithType: TextReader.Read(char[], int, int)
  fullName: System.IO.TextReader.Read(char[], int, int)
  nameWithType.vb: TextReader.Read(Char(), Integer, Integer)
  fullName.vb: System.IO.TextReader.Read(Char(), Integer, Integer)
  name.vb: Read(Char(), Integer, Integer)
  spec.csharp:
  - uid: System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)
    name: Read
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.read#system-io-textreader-read(system-char()-system-int32-system-int32)
  - name: (
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)
    name: Read
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.read#system-io-textreader-read(system-char()-system-int32-system-int32)
  - name: (
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Char[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char[]
  nameWithType: char[]
  fullName: char[]
  nameWithType.vb: Char()
  fullName.vb: Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
- uid: System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readblock
  name: ReadBlock(char[], int, int)
  nameWithType: TextReader.ReadBlock(char[], int, int)
  fullName: System.IO.TextReader.ReadBlock(char[], int, int)
  nameWithType.vb: TextReader.ReadBlock(Char(), Integer, Integer)
  fullName.vb: System.IO.TextReader.ReadBlock(Char(), Integer, Integer)
  name.vb: ReadBlock(Char(), Integer, Integer)
  spec.csharp:
  - uid: System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
    name: ReadBlock
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readblock
  - name: (
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
    name: ReadBlock
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readblock
  - name: (
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadBlock*
  commentId: Overload:Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadBlock
  isExternal: true
  href: Sdl.LanguagePlatform.IO.MultiFileTextReader.html#Sdl_LanguagePlatform_IO_MultiFileTextReader_ReadBlock_System_Char___System_Int32_System_Int32_
  name: ReadBlock
  nameWithType: MultiFileTextReader.ReadBlock
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadBlock
- uid: System.IO.TextReader.ReadLine
  commentId: M:System.IO.TextReader.ReadLine
  parent: System.IO.TextReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readline
  name: ReadLine()
  nameWithType: TextReader.ReadLine()
  fullName: System.IO.TextReader.ReadLine()
  spec.csharp:
  - uid: System.IO.TextReader.ReadLine
    name: ReadLine
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readline
  - name: (
  - name: )
  spec.vb:
  - uid: System.IO.TextReader.ReadLine
    name: ReadLine
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readline
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadLine*
  commentId: Overload:Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadLine
  isExternal: true
  href: Sdl.LanguagePlatform.IO.MultiFileTextReader.html#Sdl_LanguagePlatform_IO_MultiFileTextReader_ReadLine
  name: ReadLine
  nameWithType: MultiFileTextReader.ReadLine
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadLine
- uid: System.IO.TextReader.ReadToEnd
  commentId: M:System.IO.TextReader.ReadToEnd
  parent: System.IO.TextReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readtoend
  name: ReadToEnd()
  nameWithType: TextReader.ReadToEnd()
  fullName: System.IO.TextReader.ReadToEnd()
  spec.csharp:
  - uid: System.IO.TextReader.ReadToEnd
    name: ReadToEnd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readtoend
  - name: (
  - name: )
  spec.vb:
  - uid: System.IO.TextReader.ReadToEnd
    name: ReadToEnd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.readtoend
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadToEnd*
  commentId: Overload:Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadToEnd
  isExternal: true
  href: Sdl.LanguagePlatform.IO.MultiFileTextReader.html#Sdl_LanguagePlatform_IO_MultiFileTextReader_ReadToEnd
  name: ReadToEnd
  nameWithType: MultiFileTextReader.ReadToEnd
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.ReadToEnd
- uid: System.IO.TextReader.Close
  commentId: M:System.IO.TextReader.Close
  parent: System.IO.TextReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader.close
  name: Close()
  nameWithType: TextReader.Close()
  fullName: System.IO.TextReader.Close()
  spec.csharp:
  - uid: System.IO.TextReader.Close
    name: Close
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.close
  - name: (
  - name: )
  spec.vb:
  - uid: System.IO.TextReader.Close
    name: Close
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.textreader.close
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.Close*
  commentId: Overload:Sdl.LanguagePlatform.IO.MultiFileTextReader.Close
  isExternal: true
  href: Sdl.LanguagePlatform.IO.MultiFileTextReader.html#Sdl_LanguagePlatform_IO_MultiFileTextReader_Close
  name: Close
  nameWithType: MultiFileTextReader.Close
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.Close
- uid: Sdl.LanguagePlatform.IO.MultiFileTextReader.CurrentFile*
  commentId: Overload:Sdl.LanguagePlatform.IO.MultiFileTextReader.CurrentFile
  isExternal: true
  href: Sdl.LanguagePlatform.IO.MultiFileTextReader.html#Sdl_LanguagePlatform_IO_MultiFileTextReader_CurrentFile
  name: CurrentFile
  nameWithType: MultiFileTextReader.CurrentFile
  fullName: Sdl.LanguagePlatform.IO.MultiFileTextReader.CurrentFile
- uid: System.IO.FileInfo
  commentId: T:System.IO.FileInfo
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
