### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.Tag
  commentId: T:Sdl.LanguagePlatform.Core.Tag
  id: Tag
  parent: Sdl.LanguagePlatform.Core
  children:
  - Sdl.LanguagePlatform.Core.Tag.#ctor
  - Sdl.LanguagePlatform.Core.Tag.#ctor(Sdl.LanguagePlatform.Core.Tag)
  - Sdl.LanguagePlatform.Core.Tag.#ctor(Sdl.LanguagePlatform.Core.TagType,System.String,System.Int32)
  - Sdl.LanguagePlatform.Core.Tag.#ctor(Sdl.LanguagePlatform.Core.TagType,System.String,System.Int32,System.Int32,System.String)
  - Sdl.LanguagePlatform.Core.Tag.#ctor(Sdl.LanguagePlatform.Core.TagType,System.String,System.Int32,System.Int32,System.String,System.Boolean)
  - Sdl.LanguagePlatform.Core.Tag.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  - Sdl.LanguagePlatform.Core.Tag.AlignmentAnchor
  - Sdl.LanguagePlatform.Core.Tag.Anchor
  - Sdl.LanguagePlatform.Core.Tag.CanHide
  - Sdl.LanguagePlatform.Core.Tag.Duplicate
  - Sdl.LanguagePlatform.Core.Tag.Equals(System.Object)
  - Sdl.LanguagePlatform.Core.Tag.GetHashCode
  - Sdl.LanguagePlatform.Core.Tag.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  - Sdl.LanguagePlatform.Core.Tag.GetWeakHashCode
  - Sdl.LanguagePlatform.Core.Tag.SeriliazedWihoutAnchor
  - Sdl.LanguagePlatform.Core.Tag.TagID
  - Sdl.LanguagePlatform.Core.Tag.TextEquivalent
  - Sdl.LanguagePlatform.Core.Tag.ToString
  - Sdl.LanguagePlatform.Core.Tag.Type
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: Tag
  fullName: Sdl.LanguagePlatform.Core.Tag
  type: Class
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nRepresents a tag.\n"
  syntax:
    content: 'public class Tag : SegmentElement'
    content.vb: >-
      Public Class Tag
          Inherits SegmentElement
  inheritance:
  - System.Object
  - Sdl.LanguagePlatform.Core.SegmentElement
  inheritedMembers:
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.Core.Tag.#ctor
  commentId: M:Sdl.LanguagePlatform.Core.Tag.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: Tag()
  nameWithType: Tag.Tag()
  fullName: Sdl.LanguagePlatform.Core.Tag.Tag()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nInitializes a new instance with default values (used for XML serialization only).\n"
  syntax:
    content: public Tag()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.Core.Tag.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tag.#ctor(Sdl.LanguagePlatform.Core.Tag)
  commentId: M:Sdl.LanguagePlatform.Core.Tag.#ctor(Sdl.LanguagePlatform.Core.Tag)
  id: '#ctor(Sdl.LanguagePlatform.Core.Tag)'
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: Tag(Tag)
  nameWithType: Tag.Tag(Tag)
  fullName: Sdl.LanguagePlatform.Core.Tag.Tag(Sdl.LanguagePlatform.Core.Tag)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nInitializes a new instance of the Tag class from another instance.\n"
  syntax:
    content: public Tag(Tag other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.Tag
      description: The other instance.
    content.vb: Public Sub New(other As Tag)
  overload: Sdl.LanguagePlatform.Core.Tag.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tag.#ctor(Sdl.LanguagePlatform.Core.TagType,System.String,System.Int32)
  commentId: M:Sdl.LanguagePlatform.Core.Tag.#ctor(Sdl.LanguagePlatform.Core.TagType,System.String,System.Int32)
  id: '#ctor(Sdl.LanguagePlatform.Core.TagType,System.String,System.Int32)'
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: Tag(TagType, String, Int32)
  nameWithType: Tag.Tag(TagType, String, Int32)
  fullName: Sdl.LanguagePlatform.Core.Tag.Tag(Sdl.LanguagePlatform.Core.TagType, System.String, System.Int32)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nInitializes a new instance of the Tag class with the specified type and anchor. The alignment anchor will be\nset to zero.\n"
  syntax:
    content: public Tag(TagType type, string tagId, int anchor)
    parameters:
    - id: type
      type: Sdl.LanguagePlatform.Core.TagType
      description: The tag type.
    - id: tagId
      type: System.String
      description: The tag ID (user-defined)
    - id: anchor
      type: System.Int32
      description: The tag anchor.
    content.vb: Public Sub New(type As TagType, tagId As String, anchor As Integer)
  overload: Sdl.LanguagePlatform.Core.Tag.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tag.#ctor(Sdl.LanguagePlatform.Core.TagType,System.String,System.Int32,System.Int32,System.String)
  commentId: M:Sdl.LanguagePlatform.Core.Tag.#ctor(Sdl.LanguagePlatform.Core.TagType,System.String,System.Int32,System.Int32,System.String)
  id: '#ctor(Sdl.LanguagePlatform.Core.TagType,System.String,System.Int32,System.Int32,System.String)'
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: Tag(TagType, String, Int32, Int32, String)
  nameWithType: Tag.Tag(TagType, String, Int32, Int32, String)
  fullName: Sdl.LanguagePlatform.Core.Tag.Tag(Sdl.LanguagePlatform.Core.TagType, System.String, System.Int32, System.Int32, System.String)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nInitializes a new instance of the Tag class with the specified type and anchor.\n"
  syntax:
    content: public Tag(TagType type, string tagId, int anchor, int alignmentAnchor, string textEquivalent)
    parameters:
    - id: type
      type: Sdl.LanguagePlatform.Core.TagType
      description: The tag type.
    - id: tagId
      type: System.String
      description: The tag ID (user-defined)
    - id: anchor
      type: System.Int32
      description: The tag anchor.
    - id: alignmentAnchor
      type: System.Int32
      description: An alignment anchor (cross-segment), if available
    - id: textEquivalent
      type: System.String
      description: A text equivalent string (ignored if the tag type is not TextPlaceholder or LockedContent)
    content.vb: Public Sub New(type As TagType, tagId As String, anchor As Integer, alignmentAnchor As Integer, textEquivalent As String)
  overload: Sdl.LanguagePlatform.Core.Tag.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tag.#ctor(Sdl.LanguagePlatform.Core.TagType,System.String,System.Int32,System.Int32,System.String,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Tag.#ctor(Sdl.LanguagePlatform.Core.TagType,System.String,System.Int32,System.Int32,System.String,System.Boolean)
  id: '#ctor(Sdl.LanguagePlatform.Core.TagType,System.String,System.Int32,System.Int32,System.String,System.Boolean)'
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: Tag(TagType, String, Int32, Int32, String, Boolean)
  nameWithType: Tag.Tag(TagType, String, Int32, Int32, String, Boolean)
  fullName: Sdl.LanguagePlatform.Core.Tag.Tag(Sdl.LanguagePlatform.Core.TagType, System.String, System.Int32, System.Int32, System.String, System.Boolean)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nInitializes a new instance of the Tag class with the specified type and anchor.\n"
  syntax:
    content: public Tag(TagType type, string tagId, int anchor, int alignmentAnchor, string textEquivalent, bool canHide)
    parameters:
    - id: type
      type: Sdl.LanguagePlatform.Core.TagType
      description: The tag type.
    - id: tagId
      type: System.String
      description: The tag ID (user-defined)
    - id: anchor
      type: System.Int32
      description: The tag anchor.
    - id: alignmentAnchor
      type: System.Int32
      description: An alignment anchor (cross-segment), if available
    - id: textEquivalent
      type: System.String
      description: A text equivalent string (ignored if the tag type is not TextPlaceholder or LockedContent)
    - id: canHide
      type: System.Boolean
      description: True if the tag represents inline formatting, false otherwise
    content.vb: Public Sub New(type As TagType, tagId As String, anchor As Integer, alignmentAnchor As Integer, textEquivalent As String, canHide As Boolean)
  overload: Sdl.LanguagePlatform.Core.Tag.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tag.Duplicate
  commentId: M:Sdl.LanguagePlatform.Core.Tag.Duplicate
  id: Duplicate
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: Tag.Duplicate()
  fullName: Sdl.LanguagePlatform.Core.Tag.Duplicate()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nSee <xref href=\"Sdl.LanguagePlatform.Core.SegmentElement.Duplicate\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override SegmentElement Duplicate()
    return:
      type: Sdl.LanguagePlatform.Core.SegmentElement
      description: A new instance that is a deep copy of this instance.
    content.vb: Public Overrides Function Duplicate As SegmentElement
  overridden: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
  overload: Sdl.LanguagePlatform.Core.Tag.Duplicate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tag.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  commentId: M:Sdl.LanguagePlatform.Core.Tag.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  id: GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: GetSimilarity(SegmentElement)
  nameWithType: Tag.GetSimilarity(SegmentElement)
  fullName: Sdl.LanguagePlatform.Core.Tag.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nDetermines if this tag has the same type as another SegmentElement, which must also be a Tag object.\n"
  syntax:
    content: public override SegmentElement.Similarity GetSimilarity(SegmentElement other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.SegmentElement
      description: The other SegmentElement object.
    return:
      type: Sdl.LanguagePlatform.Core.SegmentElement.Similarity
      description: true if the tag type is the same, false otherwise or if other is not a Tag.
    content.vb: Public Overrides Function GetSimilarity(other As SegmentElement) As SegmentElement.Similarity
  overridden: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  overload: Sdl.LanguagePlatform.Core.Tag.GetSimilarity*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tag.ToString
  commentId: M:Sdl.LanguagePlatform.Core.Tag.ToString
  id: ToString
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Tag.ToString()
  fullName: Sdl.LanguagePlatform.Core.Tag.ToString()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\n<xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representation of the object, for display purposes.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sdl.LanguagePlatform.Core.Tag.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tag.SeriliazedWihoutAnchor
  commentId: M:Sdl.LanguagePlatform.Core.Tag.SeriliazedWihoutAnchor
  id: SeriliazedWihoutAnchor
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: SeriliazedWihoutAnchor()
  nameWithType: Tag.SeriliazedWihoutAnchor()
  fullName: Sdl.LanguagePlatform.Core.Tag.SeriliazedWihoutAnchor()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nSame as ToString, but doesn&apos;t includes _AlignmentAnchor\n"
  syntax:
    content: public string SeriliazedWihoutAnchor()
    return:
      type: System.String
    content.vb: Public Function SeriliazedWihoutAnchor As String
  overload: Sdl.LanguagePlatform.Core.Tag.SeriliazedWihoutAnchor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tag.Equals(System.Object)
  commentId: M:Sdl.LanguagePlatform.Core.Tag.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Tag.Equals(Object)
  fullName: Sdl.LanguagePlatform.Core.Tag.Equals(System.Object)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\n<xref href=\"System.Object.Equals(object)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: >
        true if the specified object is equal to the current object;

        otherwise, false.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.LanguagePlatform.Core.Tag.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tag.GetHashCode
  commentId: M:Sdl.LanguagePlatform.Core.Tag.GetHashCode
  id: GetHashCode
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Tag.GetHashCode()
  fullName: Sdl.LanguagePlatform.Core.Tag.GetHashCode()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\n<xref href=\"System.Object.GetHashCode\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for this object
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.LanguagePlatform.Core.Tag.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tag.GetWeakHashCode
  commentId: M:Sdl.LanguagePlatform.Core.Tag.GetWeakHashCode
  id: GetWeakHashCode
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: GetWeakHashCode()
  nameWithType: Tag.GetWeakHashCode()
  fullName: Sdl.LanguagePlatform.Core.Tag.GetWeakHashCode()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nSee <xref href=\"Sdl.LanguagePlatform.Core.SegmentElement.GetWeakHashCode\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override int GetWeakHashCode()
    return:
      type: System.Int32
      description: A hash code independent of tag anchors.
    content.vb: Public Overrides Function GetWeakHashCode As Integer
  overridden: Sdl.LanguagePlatform.Core.SegmentElement.GetWeakHashCode
  overload: Sdl.LanguagePlatform.Core.Tag.GetWeakHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tag.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  commentId: M:Sdl.LanguagePlatform.Core.Tag.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  id: AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: AcceptSegmentElementVisitor(ISegmentElementVisitor)
  nameWithType: Tag.AcceptSegmentElementVisitor(ISegmentElementVisitor)
  fullName: Sdl.LanguagePlatform.Core.Tag.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nVisitor pattern implementation. Calls <xref href=\"Sdl.LanguagePlatform.Core.ISegmentElementVisitor.VisitTag(Sdl.LanguagePlatform.Core.Tag)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public override void AcceptSegmentElementVisitor(ISegmentElementVisitor visitor)
    parameters:
    - id: visitor
      type: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
      description: The visitor instance
    content.vb: Public Overrides Sub AcceptSegmentElementVisitor(visitor As ISegmentElementVisitor)
  overridden: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  overload: Sdl.LanguagePlatform.Core.Tag.AcceptSegmentElementVisitor*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tag.Type
  commentId: P:Sdl.LanguagePlatform.Core.Tag.Type
  id: Type
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Tag.Type
  fullName: Sdl.LanguagePlatform.Core.Tag.Type
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nGets or sets the tag type.\n"
  syntax:
    content: public TagType Type { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.TagType
    content.vb: Public Property Type As TagType
  overload: Sdl.LanguagePlatform.Core.Tag.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tag.Anchor
  commentId: P:Sdl.LanguagePlatform.Core.Tag.Anchor
  id: Anchor
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: Anchor
  nameWithType: Tag.Anchor
  fullName: Sdl.LanguagePlatform.Core.Tag.Anchor
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nGets or sets the tag anchor, which is used to bracket two tags (connect start and end tag). The anchor\nis only relevant for start and end tags and has no cross-segment semantics.\n"
  syntax:
    content: public int Anchor { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Anchor As Integer
  overload: Sdl.LanguagePlatform.Core.Tag.Anchor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tag.AlignmentAnchor
  commentId: P:Sdl.LanguagePlatform.Core.Tag.AlignmentAnchor
  id: AlignmentAnchor
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: AlignmentAnchor
  nameWithType: Tag.AlignmentAnchor
  fullName: Sdl.LanguagePlatform.Core.Tag.AlignmentAnchor
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nGets or sets the alignment anchor, which is used to align cross-segment tags. It only needs to be\nset for the start tag.\n"
  syntax:
    content: public int AlignmentAnchor { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AlignmentAnchor As Integer
  overload: Sdl.LanguagePlatform.Core.Tag.AlignmentAnchor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tag.TagID
  commentId: P:Sdl.LanguagePlatform.Core.Tag.TagID
  id: TagID
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: TagID
  nameWithType: Tag.TagID
  fullName: Sdl.LanguagePlatform.Core.Tag.TagID
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nGets or sets the tag ID which is a cross-format ID assigned by the filters and which may be\nused to represent a cross-format formatting class (such as &quot;bold&quot;).\n"
  syntax:
    content: public string TagID { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TagID As String
  overload: Sdl.LanguagePlatform.Core.Tag.TagID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tag.TextEquivalent
  commentId: P:Sdl.LanguagePlatform.Core.Tag.TextEquivalent
  id: TextEquivalent
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: TextEquivalent
  nameWithType: Tag.TextEquivalent
  fullName: Sdl.LanguagePlatform.Core.Tag.TextEquivalent
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nGets or sets the text equivalent string. This will only be valid for text placeholder tags.\n"
  syntax:
    content: public string TextEquivalent { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TextEquivalent As String
  overload: Sdl.LanguagePlatform.Core.Tag.TextEquivalent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tag.CanHide
  commentId: P:Sdl.LanguagePlatform.Core.Tag.CanHide
  id: CanHide
  parent: Sdl.LanguagePlatform.Core.Tag
  langs:
  - csharp
  - vb
  name: CanHide
  nameWithType: Tag.CanHide
  fullName: Sdl.LanguagePlatform.Core.Tag.CanHide
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: "\nGets or sets the CanHide flag\n"
  syntax:
    content: public bool CanHide { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanHide As Boolean
  overload: Sdl.LanguagePlatform.Core.Tag.CanHide*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.LanguagePlatform.Core.SegmentElement
  commentId: T:Sdl.LanguagePlatform.Core.SegmentElement
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: SegmentElement
  nameWithType: SegmentElement
  fullName: Sdl.LanguagePlatform.Core.SegmentElement
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: GetSimilarity(SegmentElement, Boolean)
  nameWithType: SegmentElement.GetSimilarity(SegmentElement, Boolean)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement, System.Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core.Tag.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tag.#ctor
  isExternal: true
  name: Tag
  nameWithType: Tag.Tag
  fullName: Sdl.LanguagePlatform.Core.Tag.Tag
- uid: Sdl.LanguagePlatform.Core.Tag
  commentId: T:Sdl.LanguagePlatform.Core.Tag
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: Tag
  nameWithType: Tag
  fullName: Sdl.LanguagePlatform.Core.Tag
- uid: Sdl.LanguagePlatform.Core.TagType
  commentId: T:Sdl.LanguagePlatform.Core.TagType
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: TagType
  nameWithType: TagType
  fullName: Sdl.LanguagePlatform.Core.TagType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: Duplicate()
  nameWithType: SegmentElement.Duplicate()
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    name: Duplicate
    nameWithType: SegmentElement.Duplicate
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    name: Duplicate
    nameWithType: SegmentElement.Duplicate
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tag.Duplicate*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tag.Duplicate
  isExternal: true
  name: Duplicate
  nameWithType: Tag.Duplicate
  fullName: Sdl.LanguagePlatform.Core.Tag.Duplicate
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: GetSimilarity(SegmentElement)
  nameWithType: SegmentElement.GetSimilarity(SegmentElement)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tag.GetSimilarity*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tag.GetSimilarity
  isExternal: true
  name: GetSimilarity
  nameWithType: Tag.GetSimilarity
  fullName: Sdl.LanguagePlatform.Core.Tag.GetSimilarity
- uid: Sdl.LanguagePlatform.Core.SegmentElement.Similarity
  commentId: T:Sdl.LanguagePlatform.Core.SegmentElement.Similarity
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: SegmentElement.Similarity
  nameWithType: SegmentElement.Similarity
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.Similarity
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tag.ToString*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tag.ToString
  isExternal: true
  name: ToString
  nameWithType: Tag.ToString
  fullName: Sdl.LanguagePlatform.Core.Tag.ToString
- uid: Sdl.LanguagePlatform.Core.Tag.SeriliazedWihoutAnchor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tag.SeriliazedWihoutAnchor
  isExternal: true
  name: SeriliazedWihoutAnchor
  nameWithType: Tag.SeriliazedWihoutAnchor
  fullName: Sdl.LanguagePlatform.Core.Tag.SeriliazedWihoutAnchor
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tag.Equals*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tag.Equals
  isExternal: true
  name: Equals
  nameWithType: Tag.Equals
  fullName: Sdl.LanguagePlatform.Core.Tag.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tag.GetHashCode*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tag.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: Tag.GetHashCode
  fullName: Sdl.LanguagePlatform.Core.Tag.GetHashCode
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetWeakHashCode
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetWeakHashCode
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: GetWeakHashCode()
  nameWithType: SegmentElement.GetWeakHashCode()
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetWeakHashCode()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetWeakHashCode
    name: GetWeakHashCode
    nameWithType: SegmentElement.GetWeakHashCode
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetWeakHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetWeakHashCode
    name: GetWeakHashCode
    nameWithType: SegmentElement.GetWeakHashCode
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetWeakHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tag.GetWeakHashCode*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tag.GetWeakHashCode
  isExternal: true
  name: GetWeakHashCode
  nameWithType: Tag.GetWeakHashCode
  fullName: Sdl.LanguagePlatform.Core.Tag.GetWeakHashCode
- uid: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: AcceptSegmentElementVisitor(ISegmentElementVisitor)
  nameWithType: SegmentElement.AcceptSegmentElementVisitor(ISegmentElementVisitor)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
    name: AcceptSegmentElementVisitor
    nameWithType: SegmentElement.AcceptSegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    name: ISegmentElementVisitor
    nameWithType: ISegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
    name: AcceptSegmentElementVisitor
    nameWithType: SegmentElement.AcceptSegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    name: ISegmentElementVisitor
    nameWithType: ISegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tag.AcceptSegmentElementVisitor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tag.AcceptSegmentElementVisitor
  isExternal: true
  name: AcceptSegmentElementVisitor
  nameWithType: Tag.AcceptSegmentElementVisitor
  fullName: Sdl.LanguagePlatform.Core.Tag.AcceptSegmentElementVisitor
- uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
  commentId: T:Sdl.LanguagePlatform.Core.ISegmentElementVisitor
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: ISegmentElementVisitor
  nameWithType: ISegmentElementVisitor
  fullName: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
- uid: Sdl.LanguagePlatform.Core.Tag.Type*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tag.Type
  isExternal: true
  name: Type
  nameWithType: Tag.Type
  fullName: Sdl.LanguagePlatform.Core.Tag.Type
- uid: Sdl.LanguagePlatform.Core.Tag.Anchor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tag.Anchor
  isExternal: true
  name: Anchor
  nameWithType: Tag.Anchor
  fullName: Sdl.LanguagePlatform.Core.Tag.Anchor
- uid: Sdl.LanguagePlatform.Core.Tag.AlignmentAnchor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tag.AlignmentAnchor
  isExternal: true
  name: AlignmentAnchor
  nameWithType: Tag.AlignmentAnchor
  fullName: Sdl.LanguagePlatform.Core.Tag.AlignmentAnchor
- uid: Sdl.LanguagePlatform.Core.Tag.TagID*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tag.TagID
  isExternal: true
  name: TagID
  nameWithType: Tag.TagID
  fullName: Sdl.LanguagePlatform.Core.Tag.TagID
- uid: Sdl.LanguagePlatform.Core.Tag.TextEquivalent*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tag.TextEquivalent
  isExternal: true
  name: TextEquivalent
  nameWithType: Tag.TextEquivalent
  fullName: Sdl.LanguagePlatform.Core.Tag.TextEquivalent
- uid: Sdl.LanguagePlatform.Core.Tag.CanHide*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tag.CanHide
  isExternal: true
  name: CanHide
  nameWithType: Tag.CanHide
  fullName: Sdl.LanguagePlatform.Core.Tag.CanHide
