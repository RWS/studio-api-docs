### YamlMime:ManagedReference
items:
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync
  commentId: T:Sdl.Core.TM.ImportExport.IImportDestinationAsync
  id: IImportDestinationAsync
  parent: Sdl.Core.TM.ImportExport
  children:
  - Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  - Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetFieldDefinitionsAsync
  - Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetLanguageResourcesAsync
  - Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateFieldDefinitionsAsync(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  - Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  langs:
  - csharp
  - vb
  name: IImportDestinationAsync
  nameWithType: IImportDestinationAsync
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync
  type: Interface
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: "\nAsync version of <xref href=\"Sdl.Core.TM.ImportExport.IImportDestination\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: 'public interface IImportDestinationAsync : IImportDestination'
    content.vb: >-
      Public Interface IImportDestinationAsync
          Inherits IImportDestination
  inheritedMembers:
  - Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  - Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  - Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  - Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  - Sdl.Core.TM.ImportExport.IImportDestination.SourceLanguage
  - Sdl.Core.TM.ImportExport.IImportDestination.TargetLanguage
  - Sdl.Core.TM.ImportExport.IImportDestination.FieldDefinitions
  - Sdl.Core.TM.ImportExport.IImportDestination.UsesLegacyHashes
  - Sdl.Core.TM.ImportExport.IImportDestination.LanguageResources
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetFieldDefinitionsAsync
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetFieldDefinitionsAsync
  id: GetFieldDefinitionsAsync
  parent: Sdl.Core.TM.ImportExport.IImportDestinationAsync
  langs:
  - csharp
  - vb
  name: GetFieldDefinitionsAsync()
  nameWithType: IImportDestinationAsync.GetFieldDefinitionsAsync()
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetFieldDefinitionsAsync()
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: "\nAsync version of <xref href=\"Sdl.Core.TM.ImportExport.IImportDestination.FieldDefinitions\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: Task<FieldDefinitions> GetFieldDefinitionsAsync()
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions}
    content.vb: Function GetFieldDefinitionsAsync As Task(Of FieldDefinitions)
  overload: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetFieldDefinitionsAsync*
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetLanguageResourcesAsync
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetLanguageResourcesAsync
  id: GetLanguageResourcesAsync
  parent: Sdl.Core.TM.ImportExport.IImportDestinationAsync
  langs:
  - csharp
  - vb
  name: GetLanguageResourcesAsync()
  nameWithType: IImportDestinationAsync.GetLanguageResourcesAsync()
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetLanguageResourcesAsync()
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: "\nAsync version of <xref href=\"Sdl.Core.TM.ImportExport.IImportDestination.LanguageResources\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: Task<LanguageResource[]> GetLanguageResourcesAsync()
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource[]}
    content.vb: Function GetLanguageResourcesAsync As Task(Of LanguageResource())
  overload: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetLanguageResourcesAsync*
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  id: AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  parent: Sdl.Core.TM.ImportExport.IImportDestinationAsync
  langs:
  - csharp
  - vb
  name: AddTranslationUnitsMaskedAsync(TranslationUnit[], ImportSettings, Boolean[])
  nameWithType: IImportDestinationAsync.AddTranslationUnitsMaskedAsync(TranslationUnit[], ImportSettings, Boolean[])
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean[])
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: "\nSee <xref href=\"Sdl.Core.TM.ImportExport.IImportDestinationAsync\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: Task<ImportResult[]> AddTranslationUnitsMaskedAsync(TranslationUnit[] tus, ImportSettings settings, bool[] mask)
    parameters:
    - id: tus
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    - id: mask
      type: System.Boolean[]
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.ImportResult[]}
    content.vb: Function AddTranslationUnitsMaskedAsync(tus As TranslationUnit(), settings As ImportSettings, mask As Boolean()) As Task(Of ImportResult())
  overload: Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync*
  nameWithType.vb: IImportDestinationAsync.AddTranslationUnitsMaskedAsync(TranslationUnit(), ImportSettings, Boolean())
  fullName.vb: Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean())
  name.vb: AddTranslationUnitsMaskedAsync(TranslationUnit(), ImportSettings, Boolean())
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateFieldDefinitionsAsync(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateFieldDefinitionsAsync(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  id: UpdateFieldDefinitionsAsync(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  parent: Sdl.Core.TM.ImportExport.IImportDestinationAsync
  langs:
  - csharp
  - vb
  name: UpdateFieldDefinitionsAsync(FieldDefinitions)
  nameWithType: IImportDestinationAsync.UpdateFieldDefinitionsAsync(FieldDefinitions)
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateFieldDefinitionsAsync(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: "\n\n"
  syntax:
    content: Task UpdateFieldDefinitionsAsync(FieldDefinitions mergedFieldDefinitions)
    parameters:
    - id: mergedFieldDefinitions
      type: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
      description: Fields that either 1. were only defined in the incoming data or 2. were defined in incoming data and destination data, but with additional picklist values in the incoming data (field contains a merge of both)
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function UpdateFieldDefinitionsAsync(mergedFieldDefinitions As FieldDefinitions) As Task
  overload: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateFieldDefinitionsAsync*
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  id: UpdateLanguageResourcesAsync(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  parent: Sdl.Core.TM.ImportExport.IImportDestinationAsync
  langs:
  - csharp
  - vb
  name: UpdateLanguageResourcesAsync(List<LanguageResource>)
  nameWithType: IImportDestinationAsync.UpdateLanguageResourcesAsync(List<LanguageResource>)
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync(System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource>)
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: "\n\n"
  syntax:
    content: Task UpdateLanguageResourcesAsync(List<LanguageResource> mergedLanguageResources)
    parameters:
    - id: mergedLanguageResources
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource}
      description: Language resources that either 1. were only defined in the incoming data or 2. were defined in incoming and destination data, but with additional values in the incoming data (resource contains a merge of both)
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function UpdateLanguageResourcesAsync(mergedLanguageResources As List(Of LanguageResource)) As Task
  overload: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync*
  nameWithType.vb: IImportDestinationAsync.UpdateLanguageResourcesAsync(List(Of LanguageResource))
  fullName.vb: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync(System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource))
  name.vb: UpdateLanguageResourcesAsync(List(Of LanguageResource))
references:
- uid: Sdl.Core.TM.ImportExport
  commentId: N:Sdl.Core.TM.ImportExport
  isExternal: true
  name: Sdl.Core.TM.ImportExport
  nameWithType: Sdl.Core.TM.ImportExport
  fullName: Sdl.Core.TM.ImportExport
- uid: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: AddTranslationUnits(TranslationUnit[], ImportSettings)
  nameWithType: IImportDestination.AddTranslationUnits(TranslationUnit[], ImportSettings)
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  nameWithType.vb: IImportDestination.AddTranslationUnits(TranslationUnit(), ImportSettings)
  fullName.vb: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  name.vb: AddTranslationUnits(TranslationUnit(), ImportSettings)
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
    name: AddTranslationUnits
    nameWithType: IImportDestination.AddTranslationUnits
    fullName: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    name: ImportSettings
    nameWithType: ImportSettings
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
    name: AddTranslationUnits
    nameWithType: IImportDestination.AddTranslationUnits
    fullName: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    name: ImportSettings
    nameWithType: ImportSettings
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: AddTranslationUnitsMask(TranslationUnit[], ImportSettings, Boolean[])
  nameWithType: IImportDestination.AddTranslationUnitsMask(TranslationUnit[], ImportSettings, Boolean[])
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean[])
  nameWithType.vb: IImportDestination.AddTranslationUnitsMask(TranslationUnit(), ImportSettings, Boolean())
  fullName.vb: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean())
  name.vb: AddTranslationUnitsMask(TranslationUnit(), ImportSettings, Boolean())
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
    name: AddTranslationUnitsMask
    nameWithType: IImportDestination.AddTranslationUnitsMask
    fullName: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    name: ImportSettings
    nameWithType: ImportSettings
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
    name: AddTranslationUnitsMask
    nameWithType: IImportDestination.AddTranslationUnitsMask
    fullName: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    name: ImportSettings
    nameWithType: ImportSettings
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: UpdateFieldDefinitions(FieldDefinitions)
  nameWithType: IImportDestination.UpdateFieldDefinitions(FieldDefinitions)
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
    name: UpdateFieldDefinitions
    nameWithType: IImportDestination.UpdateFieldDefinitions
    fullName: Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    name: FieldDefinitions
    nameWithType: FieldDefinitions
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
    name: UpdateFieldDefinitions
    nameWithType: IImportDestination.UpdateFieldDefinitions
    fullName: Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    name: FieldDefinitions
    nameWithType: FieldDefinitions
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: UpdateLanguageResources(List<LanguageResource>)
  nameWithType: IImportDestination.UpdateLanguageResources(List<LanguageResource>)
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource>)
  nameWithType.vb: IImportDestination.UpdateLanguageResources(List(Of LanguageResource))
  fullName.vb: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource))
  name.vb: UpdateLanguageResources(List(Of LanguageResource))
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
    name: UpdateLanguageResources
    nameWithType: IImportDestination.UpdateLanguageResources
    fullName: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
    name: UpdateLanguageResources
    nameWithType: IImportDestination.UpdateLanguageResources
    fullName: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.TM.ImportExport.IImportDestination.SourceLanguage
  commentId: P:Sdl.Core.TM.ImportExport.IImportDestination.SourceLanguage
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: SourceLanguage
  nameWithType: IImportDestination.SourceLanguage
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.SourceLanguage
- uid: Sdl.Core.TM.ImportExport.IImportDestination.TargetLanguage
  commentId: P:Sdl.Core.TM.ImportExport.IImportDestination.TargetLanguage
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: TargetLanguage
  nameWithType: IImportDestination.TargetLanguage
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.TargetLanguage
- uid: Sdl.Core.TM.ImportExport.IImportDestination.FieldDefinitions
  commentId: P:Sdl.Core.TM.ImportExport.IImportDestination.FieldDefinitions
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: FieldDefinitions
  nameWithType: IImportDestination.FieldDefinitions
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.FieldDefinitions
- uid: Sdl.Core.TM.ImportExport.IImportDestination.UsesLegacyHashes
  commentId: P:Sdl.Core.TM.ImportExport.IImportDestination.UsesLegacyHashes
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: UsesLegacyHashes
  nameWithType: IImportDestination.UsesLegacyHashes
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.UsesLegacyHashes
- uid: Sdl.Core.TM.ImportExport.IImportDestination.LanguageResources
  commentId: P:Sdl.Core.TM.ImportExport.IImportDestination.LanguageResources
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: LanguageResources
  nameWithType: IImportDestination.LanguageResources
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.LanguageResources
- uid: Sdl.Core.TM.ImportExport.IImportDestination
  commentId: T:Sdl.Core.TM.ImportExport.IImportDestination
  parent: Sdl.Core.TM.ImportExport
  isExternal: true
  name: IImportDestination
  nameWithType: IImportDestination
  fullName: Sdl.Core.TM.ImportExport.IImportDestination
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetFieldDefinitionsAsync*
  commentId: Overload:Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetFieldDefinitionsAsync
  isExternal: true
  name: GetFieldDefinitionsAsync
  nameWithType: IImportDestinationAsync.GetFieldDefinitionsAsync
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetFieldDefinitionsAsync
- uid: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions}
  commentId: T:System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FieldDefinitions>
  nameWithType: Task<FieldDefinitions>
  fullName: System.Threading.Tasks.Task<Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions>
  nameWithType.vb: Task(Of FieldDefinitions)
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  name.vb: Task(Of FieldDefinitions)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    name: FieldDefinitions
    nameWithType: FieldDefinitions
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    name: FieldDefinitions
    nameWithType: FieldDefinitions
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetLanguageResourcesAsync*
  commentId: Overload:Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetLanguageResourcesAsync
  isExternal: true
  name: GetLanguageResourcesAsync
  nameWithType: IImportDestinationAsync.GetLanguageResourcesAsync
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetLanguageResourcesAsync
- uid: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource[]}
  commentId: T:System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LanguageResource[]>
  nameWithType: Task<LanguageResource[]>
  fullName: System.Threading.Tasks.Task<Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource[]>
  nameWithType.vb: Task(Of LanguageResource())
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource())
  name.vb: Task(Of LanguageResource())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync*
  commentId: Overload:Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync
  isExternal: true
  name: AddTranslationUnitsMaskedAsync
  nameWithType: IImportDestinationAsync.AddTranslationUnitsMaskedAsync
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
  isExternal: true
  name: TranslationUnit[]
  nameWithType: TranslationUnit[]
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
  nameWithType.vb: TranslationUnit()
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit()
  name.vb: TranslationUnit()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: ImportSettings
  nameWithType: ImportSettings
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
- uid: System.Boolean[]
  isExternal: true
  name: Boolean[]
  nameWithType: Boolean[]
  fullName: System.Boolean[]
  nameWithType.vb: Boolean()
  fullName.vb: System.Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.ImportResult[]}
  commentId: T:System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.ImportResult[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ImportResult[]>
  nameWithType: Task<ImportResult[]>
  fullName: System.Threading.Tasks.Task<Sdl.LanguagePlatform.TranslationMemory.ImportResult[]>
  nameWithType.vb: Task(Of ImportResult())
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.LanguagePlatform.TranslationMemory.ImportResult())
  name.vb: Task(Of ImportResult())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    name: ImportResult
    nameWithType: ImportResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    name: ImportResult
    nameWithType: ImportResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateFieldDefinitionsAsync*
  commentId: Overload:Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateFieldDefinitionsAsync
  isExternal: true
  name: UpdateFieldDefinitionsAsync
  nameWithType: IImportDestinationAsync.UpdateFieldDefinitionsAsync
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateFieldDefinitionsAsync
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldDefinitions
  nameWithType: FieldDefinitions
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync*
  commentId: Overload:Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync
  isExternal: true
  name: UpdateLanguageResourcesAsync
  nameWithType: IImportDestinationAsync.UpdateLanguageResourcesAsync
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<LanguageResource>
  nameWithType: List<LanguageResource>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource>
  nameWithType.vb: List(Of LanguageResource)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource)
  name.vb: List(Of LanguageResource)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
