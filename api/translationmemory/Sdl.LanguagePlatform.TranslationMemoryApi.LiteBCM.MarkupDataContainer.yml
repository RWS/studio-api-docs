### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  id: MarkupDataContainer
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.#ctor
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.#ctor(System.String)
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Add(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Add(System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData})
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.AllSubItems
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Children
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Clear
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Count
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetAllChildren(System.Func{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData,System.Boolean})
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetAllChildren``1(System.Func{``0,System.Boolean})
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetEnumerator
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.IndexOf(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Insert(System.Int32,Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Item(System.Int32)
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.MoveToContainer(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer,System.Int32,System.Int32,System.Int32)
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Remove(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.ToString
  langs:
  - csharp
  - vb
  name: MarkupDataContainer
  nameWithType: MarkupDataContainer
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nInitializes a new instance of the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer\" data-throw-if-not-resolved=\"false\"></xref> class.\nRepresents an abstract container for <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData\" data-throw-if-not-resolved=\"false\"></xref> elements, providing thread-safe management of child items,\nhierarchical traversal, and collection manipulation methods. Enforces constraints such as unique child IDs among siblings and ancestors,\nand prevents nesting of certain container types. Supports depth-first traversal, addition, insertion, removal, and movement of child elements.\n"
  syntax:
    content: 'public abstract class MarkupDataContainer : MarkupData'
    content.vb: >-
      Public MustInherit Class MarkupDataContainer
          Inherits MarkupData
  inheritance:
  - System.Object
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
  derivedClasses:
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Annotations.AnnotationContainer
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.LockedContentContainer
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Paragraph
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.RevisionContainer
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Segment
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.TagPair
  inheritedMembers:
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.AcceptVisitor(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Common.LiteBcmVisitor)
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.Id
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.Type
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.Parent
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.ParentFragment
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.ParentParagraph
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.ParentParagraphUnit
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.Ancestors
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.ParentSegment
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.IsContainer
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.IndexInParent
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  langs:
  - csharp
  - vb
  name: MarkupDataContainer()
  nameWithType: MarkupDataContainer.MarkupDataContainer()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.MarkupDataContainer()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nInitializes a new instance of the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: protected MarkupDataContainer()
    content.vb: Protected Sub New
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.#ctor(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  langs:
  - csharp
  - vb
  name: MarkupDataContainer(String)
  nameWithType: MarkupDataContainer.MarkupDataContainer(String)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.MarkupDataContainer(System.String)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nInitializes a new instance of the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: protected MarkupDataContainer(string id)
    parameters:
    - id: id
      type: System.String
      description: The identifier.
    content.vb: Protected Sub New(id As String)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetAllChildren(System.Func{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData,System.Boolean})
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetAllChildren(System.Func{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData,System.Boolean})
  id: GetAllChildren(System.Func{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData,System.Boolean})
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  langs:
  - csharp
  - vb
  name: GetAllChildren(Func<MarkupData, Boolean>)
  nameWithType: MarkupDataContainer.GetAllChildren(Func<MarkupData, Boolean>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetAllChildren(System.Func<Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData, System.Boolean>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nFinds all the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData\" data-throw-if-not-resolved=\"false\"></xref> items in the subtree which satisfy a specific condition, in depth-first order.\n"
  syntax:
    content: public IEnumerable<MarkupData> GetAllChildren(Func<MarkupData, bool> condition)
    parameters:
    - id: condition
      type: System.Func{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData,System.Boolean}
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData}
    content.vb: Public Function GetAllChildren(condition As Func(Of MarkupData, Boolean)) As IEnumerable(Of MarkupData)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetAllChildren*
  nameWithType.vb: MarkupDataContainer.GetAllChildren(Func(Of MarkupData, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetAllChildren(System.Func(Of Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData, System.Boolean))
  name.vb: GetAllChildren(Func(Of MarkupData, Boolean))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetAllChildren``1(System.Func{``0,System.Boolean})
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetAllChildren``1(System.Func{``0,System.Boolean})
  id: GetAllChildren``1(System.Func{``0,System.Boolean})
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  langs:
  - csharp
  - vb
  name: GetAllChildren<T>(Func<T, Boolean>)
  nameWithType: MarkupDataContainer.GetAllChildren<T>(Func<T, Boolean>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetAllChildren<T>(System.Func<T, System.Boolean>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nFinds all the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData\" data-throw-if-not-resolved=\"false\"></xref> items in the subtree which satisfy a specific condition, in depth-first order.\n"
  syntax:
    content: >-
      public IEnumerable<T> GetAllChildren<T>(Func<T, bool> condition)
          where T : MarkupData
    parameters:
    - id: condition
      type: System.Func{{T},System.Boolean}
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Function GetAllChildren(Of T As MarkupData)(condition As Func(Of T, Boolean)) As IEnumerable(Of T)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetAllChildren*
  nameWithType.vb: MarkupDataContainer.GetAllChildren(Of T)(Func(Of T, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetAllChildren(Of T)(System.Func(Of T, System.Boolean))
  name.vb: GetAllChildren(Of T)(Func(Of T, Boolean))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Add(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Add(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  id: Add(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  langs:
  - csharp
  - vb
  name: Add(MarkupData)
  nameWithType: MarkupDataContainer.Add(MarkupData)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Add(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nAdds a new <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData\" data-throw-if-not-resolved=\"false\"></xref> to the container.\n"
  syntax:
    content: public MarkupDataContainer Add(MarkupData markupData)
    parameters:
    - id: markupData
      type: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
      description: The item to be added.
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
      description: The container after the change.
    content.vb: Public Function Add(markupData As MarkupData) As MarkupDataContainer
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Add(System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData})
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Add(System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData})
  id: Add(System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData})
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  langs:
  - csharp
  - vb
  name: Add(IEnumerable<MarkupData>)
  nameWithType: MarkupDataContainer.Add(IEnumerable<MarkupData>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Add(System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nAdds a new <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData\" data-throw-if-not-resolved=\"false\"></xref> to the container.\n"
  syntax:
    content: public MarkupDataContainer Add(IEnumerable<MarkupData> range)
    parameters:
    - id: range
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData}
      description: The range of <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData" data-throw-if-not-resolved="false"></xref> items to be added.
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
      description: The container after the change.
    content.vb: Public Function Add(range As IEnumerable(Of MarkupData)) As MarkupDataContainer
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Add*
  nameWithType.vb: MarkupDataContainer.Add(IEnumerable(Of MarkupData))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Add(System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData))
  name.vb: Add(IEnumerable(Of MarkupData))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Insert(System.Int32,Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Insert(System.Int32,Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  id: Insert(System.Int32,Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  langs:
  - csharp
  - vb
  name: Insert(Int32, MarkupData)
  nameWithType: MarkupDataContainer.Insert(Int32, MarkupData)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Insert(System.Int32, Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nInserts a new <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData\" data-throw-if-not-resolved=\"false\"></xref> into the container.\n"
  syntax:
    content: public MarkupDataContainer Insert(int index, MarkupData markupData)
    parameters:
    - id: index
      type: System.Int32
      description: The position where the item should be inserted.
    - id: markupData
      type: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
      description: The item to be inserted.
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
      description: The container after the change.
    content.vb: Public Function Insert(index As Integer, markupData As MarkupData) As MarkupDataContainer
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Insert*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Remove(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Remove(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  id: Remove(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  langs:
  - csharp
  - vb
  name: Remove(MarkupData)
  nameWithType: MarkupDataContainer.Remove(MarkupData)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Remove(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nRemoves a <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData\" data-throw-if-not-resolved=\"false\"></xref> item from the container.\n"
  syntax:
    content: public MarkupDataContainer Remove(MarkupData markupData)
    parameters:
    - id: markupData
      type: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
      description: The item to be removed.
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
      description: The container after the changes.
    content.vb: Public Function Remove(markupData As MarkupData) As MarkupDataContainer
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Clear
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Clear
  id: Clear
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: MarkupDataContainer.Clear()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Clear()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nRemoves all the items from this container. \nSets the previous children Parent property to null.\n"
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.IndexOf(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.IndexOf(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  id: IndexOf(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  langs:
  - csharp
  - vb
  name: IndexOf(MarkupData)
  nameWithType: MarkupDataContainer.IndexOf(MarkupData)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.IndexOf(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nGets the index of a given item.\n"
  syntax:
    content: public int IndexOf(MarkupData markupData)
    parameters:
    - id: markupData
      type: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
      description: Item to retrieve index for.
    return:
      type: System.Int32
      description: Index of the given item in the collection. -1 if not found.
    content.vb: Public Function IndexOf(markupData As MarkupData) As Integer
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.IndexOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetEnumerator
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetEnumerator
  id: GetEnumerator
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: MarkupDataContainer.GetEnumerator()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetEnumerator()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nGets an <xref href=\"System.Collections.Generic.IEnumerator%601\" data-throw-if-not-resolved=\"false\"></xref> for the container&apos;s children.\n"
  syntax:
    content: public IEnumerator<MarkupData> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData}
      description: An <xref href="System.Collections.Generic.IEnumerator%601" data-throw-if-not-resolved="false"></xref> instance enumerating the container&apos;s children.
    content.vb: Public Function GetEnumerator As IEnumerator(Of MarkupData)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.MoveToContainer(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer,System.Int32,System.Int32,System.Int32)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.MoveToContainer(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer,System.Int32,System.Int32,System.Int32)
  id: MoveToContainer(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer,System.Int32,System.Int32,System.Int32)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  langs:
  - csharp
  - vb
  name: MoveToContainer(MarkupDataContainer, Int32, Int32, Int32)
  nameWithType: MarkupDataContainer.MoveToContainer(MarkupDataContainer, Int32, Int32, Int32)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.MoveToContainer(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nMoves the children of this container to another <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  syntax:
    content: public void MoveToContainer(MarkupDataContainer target, int sourceIndex, int targetIndex, int count)
    parameters:
    - id: target
      type: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
      description: The target <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer" data-throw-if-not-resolved="false"></xref>.
    - id: sourceIndex
      type: System.Int32
      description: Index in the source container, from where to start moving elements.
    - id: targetIndex
      type: System.Int32
      description: Index in the target container, where the elements should be inserted.
    - id: count
      type: System.Int32
      description: Number of elements to be moved.
    content.vb: Public Sub MoveToContainer(target As MarkupDataContainer, sourceIndex As Integer, targetIndex As Integer, count As Integer)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.MoveToContainer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.ToString
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.ToString
  id: ToString
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MarkupDataContainer.ToString()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.ToString()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nConverts to string.\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Children
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Children
  id: Children
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: MarkupDataContainer.Children
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Children
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nThe container&apos;s direct children.\nCan not be null. Null items can not be added. Items with duplicate Id values are not allowed between siblings or in the ancestors.\nRevisionContainer and FeedbackContainer items are not allowed to be nested.\n"
  syntax:
    content: public IReadOnlyCollection<MarkupData> Children { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData}
    content.vb: Public ReadOnly Property Children As IReadOnlyCollection(Of MarkupData)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Children*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.AllSubItems
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.AllSubItems
  id: AllSubItems
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  langs:
  - csharp
  - vb
  name: AllSubItems
  nameWithType: MarkupDataContainer.AllSubItems
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.AllSubItems
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nAll the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData\" data-throw-if-not-resolved=\"false\"></xref> items in the subtree, in depth-first order.\n"
  syntax:
    content: public IEnumerable<MarkupData> AllSubItems { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData}
    content.vb: Public ReadOnly Property AllSubItems As IEnumerable(Of MarkupData)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.AllSubItems*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Count
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Count
  id: Count
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: MarkupDataContainer.Count
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Count
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nGets the number of children of this container.\n"
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe number of children of this container.\n"
    content.vb: Public ReadOnly Property Count As Integer
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Item(System.Int32)
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Item(System.Int32)
  id: Item(System.Int32)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: MarkupDataContainer.Item[Int32]
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Item[System.Int32]
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  summary: "\nGets or sets the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData\" data-throw-if-not-resolved=\"false\"></xref> at the specified index.\n"
  syntax:
    content: public MarkupData this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The index.
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
      description: "\nThe <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Property Item(index As Integer) As MarkupData
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Item*
  nameWithType.vb: MarkupDataContainer.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Item(System.Int32)
  name.vb: Item(Int32)
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  isExternal: true
  name: MarkupData
  nameWithType: MarkupData
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.AcceptVisitor(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Common.LiteBcmVisitor)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.AcceptVisitor(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Common.LiteBcmVisitor)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
  isExternal: true
  name: AcceptVisitor(LiteBcmVisitor)
  nameWithType: MarkupData.AcceptVisitor(LiteBcmVisitor)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.AcceptVisitor(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Common.LiteBcmVisitor)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.AcceptVisitor(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Common.LiteBcmVisitor)
    name: AcceptVisitor
    nameWithType: MarkupData.AcceptVisitor
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.AcceptVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Common.LiteBcmVisitor
    name: LiteBcmVisitor
    nameWithType: LiteBcmVisitor
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Common.LiteBcmVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.AcceptVisitor(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Common.LiteBcmVisitor)
    name: AcceptVisitor
    nameWithType: MarkupData.AcceptVisitor
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.AcceptVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Common.LiteBcmVisitor
    name: LiteBcmVisitor
    nameWithType: LiteBcmVisitor
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Common.LiteBcmVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.Id
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.Id
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
  isExternal: true
  name: Id
  nameWithType: MarkupData.Id
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.Id
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.Type
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.Type
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
  isExternal: true
  name: Type
  nameWithType: MarkupData.Type
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.Type
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.Parent
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.Parent
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
  isExternal: true
  name: Parent
  nameWithType: MarkupData.Parent
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.Parent
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.ParentFragment
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.ParentFragment
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
  isExternal: true
  name: ParentFragment
  nameWithType: MarkupData.ParentFragment
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.ParentFragment
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.ParentParagraph
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.ParentParagraph
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
  isExternal: true
  name: ParentParagraph
  nameWithType: MarkupData.ParentParagraph
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.ParentParagraph
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.ParentParagraphUnit
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.ParentParagraphUnit
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
  isExternal: true
  name: ParentParagraphUnit
  nameWithType: MarkupData.ParentParagraphUnit
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.ParentParagraphUnit
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.Ancestors
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.Ancestors
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
  isExternal: true
  name: Ancestors
  nameWithType: MarkupData.Ancestors
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.Ancestors
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.ParentSegment
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.ParentSegment
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
  isExternal: true
  name: ParentSegment
  nameWithType: MarkupData.ParentSegment
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.ParentSegment
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.IsContainer
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.IsContainer
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
  isExternal: true
  name: IsContainer
  nameWithType: MarkupData.IsContainer
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.IsContainer
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.IndexInParent
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.IndexInParent
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
  isExternal: true
  name: IndexInParent
  nameWithType: MarkupData.IndexInParent
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData.IndexInParent
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.#ctor
  isExternal: true
  name: MarkupDataContainer
  nameWithType: MarkupDataContainer.MarkupDataContainer
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.MarkupDataContainer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetAllChildren*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetAllChildren
  isExternal: true
  name: GetAllChildren
  nameWithType: MarkupDataContainer.GetAllChildren
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetAllChildren
- uid: System.Func{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData,System.Boolean}
  commentId: T:System.Func{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<MarkupData, Boolean>
  nameWithType: Func<MarkupData, Boolean>
  fullName: System.Func<Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData, System.Boolean>
  nameWithType.vb: Func(Of MarkupData, Boolean)
  fullName.vb: System.Func(Of Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData, System.Boolean)
  name.vb: Func(Of MarkupData, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
    name: MarkupData
    nameWithType: MarkupData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
    name: MarkupData
    nameWithType: MarkupData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MarkupData>
  nameWithType: IEnumerable<MarkupData>
  fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData>
  nameWithType.vb: IEnumerable(Of MarkupData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  name.vb: IEnumerable(Of MarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
    name: MarkupData
    nameWithType: MarkupData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
    name: MarkupData
    nameWithType: MarkupData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Func{{T},System.Boolean}
  commentId: T:System.Func{``0,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<T, Boolean>
  nameWithType: Func<T, Boolean>
  fullName: System.Func<T, System.Boolean>
  nameWithType.vb: Func(Of T, Boolean)
  fullName.vb: System.Func(Of T, System.Boolean)
  name.vb: Func(Of T, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Add*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Add
  isExternal: true
  name: Add
  nameWithType: MarkupDataContainer.Add
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Add
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM
  isExternal: true
  name: MarkupDataContainer
  nameWithType: MarkupDataContainer
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Insert*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Insert
  isExternal: true
  name: Insert
  nameWithType: MarkupDataContainer.Insert
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Insert
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Remove*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Remove
  isExternal: true
  name: Remove
  nameWithType: MarkupDataContainer.Remove
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Remove
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Clear*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Clear
  isExternal: true
  name: Clear
  nameWithType: MarkupDataContainer.Clear
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Clear
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.IndexOf*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.IndexOf
  isExternal: true
  name: IndexOf
  nameWithType: MarkupDataContainer.IndexOf
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.IndexOf
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetEnumerator*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetEnumerator
  isExternal: true
  name: GetEnumerator
  nameWithType: MarkupDataContainer.GetEnumerator
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData}
  commentId: T:System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<MarkupData>
  nameWithType: IEnumerator<MarkupData>
  fullName: System.Collections.Generic.IEnumerator<Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData>
  nameWithType.vb: IEnumerator(Of MarkupData)
  fullName.vb: System.Collections.Generic.IEnumerator(Of Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  name.vb: IEnumerator(Of MarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
    name: MarkupData
    nameWithType: MarkupData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
    name: MarkupData
    nameWithType: MarkupData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.MoveToContainer*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.MoveToContainer
  isExternal: true
  name: MoveToContainer
  nameWithType: MarkupDataContainer.MoveToContainer
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.MoveToContainer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.ToString*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.ToString
  isExternal: true
  name: ToString
  nameWithType: MarkupDataContainer.ToString
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.ToString
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Children*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Children
  isExternal: true
  name: Children
  nameWithType: MarkupDataContainer.Children
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Children
- uid: System.Collections.Generic.IReadOnlyCollection{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<MarkupData>
  nameWithType: IReadOnlyCollection<MarkupData>
  fullName: System.Collections.Generic.IReadOnlyCollection<Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData>
  nameWithType.vb: IReadOnlyCollection(Of MarkupData)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData)
  name.vb: IReadOnlyCollection(Of MarkupData)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
    name: MarkupData
    nameWithType: MarkupData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
    name: MarkupData
    nameWithType: MarkupData
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.AllSubItems*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.AllSubItems
  isExternal: true
  name: AllSubItems
  nameWithType: MarkupDataContainer.AllSubItems
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.AllSubItems
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Count*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Count
  isExternal: true
  name: Count
  nameWithType: MarkupDataContainer.Count
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Count
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Item*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Item
  isExternal: true
  name: Item
  nameWithType: MarkupDataContainer.Item
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.MarkupDataContainer.Item
