### YamlMime:ManagedReference
items:
- uid: Sdl.Core.FineGrainedAlignment.BilingualPhraseComputer3
  commentId: T:Sdl.Core.FineGrainedAlignment.BilingualPhraseComputer3
  id: BilingualPhraseComputer3
  parent: Sdl.Core.FineGrainedAlignment
  children:
  - Sdl.Core.FineGrainedAlignment.BilingualPhraseComputer3.Compute(Sdl.LanguagePlatform.Stat.IntSegment,Sdl.LanguagePlatform.Stat.IntSegment,Sdl.LanguagePlatform.Stat.AlignmentTable)
  langs:
  - csharp
  - vb
  name: BilingualPhraseComputer3
  nameWithType: BilingualPhraseComputer3
  fullName: Sdl.Core.FineGrainedAlignment.BilingualPhraseComputer3
  type: Class
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: 'public class BilingualPhraseComputer3 : Object'
    content.vb: >-
      Public Class BilingualPhraseComputer3
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.FineGrainedAlignment.BilingualPhraseComputer3.Compute(Sdl.LanguagePlatform.Stat.IntSegment,Sdl.LanguagePlatform.Stat.IntSegment,Sdl.LanguagePlatform.Stat.AlignmentTable)
  commentId: M:Sdl.Core.FineGrainedAlignment.BilingualPhraseComputer3.Compute(Sdl.LanguagePlatform.Stat.IntSegment,Sdl.LanguagePlatform.Stat.IntSegment,Sdl.LanguagePlatform.Stat.AlignmentTable)
  id: Compute(Sdl.LanguagePlatform.Stat.IntSegment,Sdl.LanguagePlatform.Stat.IntSegment,Sdl.LanguagePlatform.Stat.AlignmentTable)
  parent: Sdl.Core.FineGrainedAlignment.BilingualPhraseComputer3
  langs:
  - csharp
  - vb
  name: Compute(IntSegment, IntSegment, AlignmentTable)
  nameWithType: BilingualPhraseComputer3.Compute(IntSegment, IntSegment, AlignmentTable)
  fullName: Sdl.Core.FineGrainedAlignment.BilingualPhraseComputer3.Compute(Sdl.LanguagePlatform.Stat.IntSegment, Sdl.LanguagePlatform.Stat.IntSegment, Sdl.LanguagePlatform.Stat.AlignmentTable)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public List<AlignedPhrase> Compute(IntSegment srcSegment, IntSegment trgSegment, AlignmentTable at)
    parameters:
    - id: srcSegment
      type: Sdl.LanguagePlatform.Stat.IntSegment
    - id: trgSegment
      type: Sdl.LanguagePlatform.Stat.IntSegment
    - id: at
      type: Sdl.LanguagePlatform.Stat.AlignmentTable
    return:
      type: System.Collections.Generic.List{Sdl.Core.FineGrainedAlignment.AlignedPhrase}
    content.vb: Public Function Compute(srcSegment As IntSegment, trgSegment As IntSegment, at As AlignmentTable) As List(Of AlignedPhrase)
  overload: Sdl.Core.FineGrainedAlignment.BilingualPhraseComputer3.Compute*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.Core.FineGrainedAlignment
  commentId: N:Sdl.Core.FineGrainedAlignment
  isExternal: true
  name: Sdl.Core.FineGrainedAlignment
  nameWithType: Sdl.Core.FineGrainedAlignment
  fullName: Sdl.Core.FineGrainedAlignment
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.FineGrainedAlignment.BilingualPhraseComputer3.Compute*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.BilingualPhraseComputer3.Compute
  isExternal: true
  name: Compute
  nameWithType: BilingualPhraseComputer3.Compute
  fullName: Sdl.Core.FineGrainedAlignment.BilingualPhraseComputer3.Compute
- uid: Sdl.LanguagePlatform.Stat.IntSegment
  isExternal: true
  name: IntSegment
  nameWithType: IntSegment
  fullName: Sdl.LanguagePlatform.Stat.IntSegment
- uid: Sdl.LanguagePlatform.Stat.AlignmentTable
  commentId: '!:Sdl.LanguagePlatform.Stat.AlignmentTable'
  isExternal: true
  name: AlignmentTable
  nameWithType: AlignmentTable
  fullName: Sdl.LanguagePlatform.Stat.AlignmentTable
- uid: System.Collections.Generic.List{Sdl.Core.FineGrainedAlignment.AlignedPhrase}
  commentId: '!:System.Collections.Generic.List{Sdl.Core.FineGrainedAlignment.AlignedPhrase}'
  definition: System.Collections.Generic.List`1
  name: List<AlignedPhrase>
  nameWithType: List<AlignedPhrase>
  fullName: System.Collections.Generic.List<Sdl.Core.FineGrainedAlignment.AlignedPhrase>
  nameWithType.vb: List(Of AlignedPhrase)
  fullName.vb: System.Collections.Generic.List(Of Sdl.Core.FineGrainedAlignment.AlignedPhrase)
  name.vb: List(Of AlignedPhrase)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Core.FineGrainedAlignment.AlignedPhrase
    name: AlignedPhrase
    nameWithType: AlignedPhrase
    fullName: Sdl.Core.FineGrainedAlignment.AlignedPhrase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Core.FineGrainedAlignment.AlignedPhrase
    name: AlignedPhrase
    nameWithType: AlignedPhrase
    fullName: Sdl.Core.FineGrainedAlignment.AlignedPhrase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
