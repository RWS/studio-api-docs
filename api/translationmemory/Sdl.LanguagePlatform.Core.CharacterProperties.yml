### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.CharacterProperties
  commentId: T:Sdl.LanguagePlatform.Core.CharacterProperties
  id: CharacterProperties
  parent: Sdl.LanguagePlatform.Core
  children:
  - Sdl.LanguagePlatform.Core.CharacterProperties.Blanks
  - Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.String)
  - Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.String,System.Int32)
  - Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength(System.String,System.Predicate{System.Char})
  - Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeBlock(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryFromName(System.String)
  - Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryName(System.Globalization.UnicodeCategory)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(System.String,System.Int32,System.Predicate{System.Char})
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(System.String,System.Predicate{System.Char})
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsApostrophe(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsBlank(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsBrace(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsBracket(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKChar(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKPunctuation(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingBracket(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingParenthesis(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingQuote(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsColon(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsComma(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsDash(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsDot(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsDoubleQuote(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsExclamation(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsHyphen(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsInBlock(System.Char,Sdl.LanguagePlatform.Core.UnicodeBlock)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsJaLongVowelMarker(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsLatinLetter(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningBracket(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningParenthesis(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningQuote(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsParagraph(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsParenthesis(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsPercent(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsQuestion(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsQuote(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsSemicolon(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsSequenceOf(System.String,System.Globalization.UnicodeCategory)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsSingleQuote(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsStop(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsSurrounder(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsTabulator(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsUpperOrLower(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsVowel(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsWhitespace(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String)
  - Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String,System.Boolean)
  - Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(System.Char,Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  - Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(System.String,Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  - Sdl.LanguagePlatform.Core.CharacterProperties.UppercaseCharacters
  - Sdl.LanguagePlatform.Core.CharacterProperties.WhitespaceCharacters
  langs:
  - csharp
  - vb
  name: CharacterProperties
  nameWithType: CharacterProperties
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties
  type: Class
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static class CharacterProperties
    content.vb: Public Module CharacterProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.WhitespaceCharacters
  commentId: F:Sdl.LanguagePlatform.Core.CharacterProperties.WhitespaceCharacters
  id: WhitespaceCharacters
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: WhitespaceCharacters
  nameWithType: CharacterProperties.WhitespaceCharacters
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.WhitespaceCharacters
  type: Field
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static readonly char[] WhitespaceCharacters
    return:
      type: System.Char[]
    content.vb: Public Shared ReadOnly WhitespaceCharacters As Char()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.Blanks
  commentId: F:Sdl.LanguagePlatform.Core.CharacterProperties.Blanks
  id: Blanks
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: Blanks
  nameWithType: CharacterProperties.Blanks
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.Blanks
  type: Field
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static readonly char[] Blanks
    return:
      type: System.Char[]
    content.vb: Public Shared ReadOnly Blanks As Char()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeBlock(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeBlock(System.Char)
  id: GetUnicodeBlock(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: GetUnicodeBlock(Char)
  nameWithType: CharacterProperties.GetUnicodeBlock(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeBlock(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static UnicodeBlock GetUnicodeBlock(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: Sdl.LanguagePlatform.Core.UnicodeBlock
    content.vb: Public Shared Function GetUnicodeBlock(c As Char) As UnicodeBlock
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeBlock*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsInBlock(System.Char,Sdl.LanguagePlatform.Core.UnicodeBlock)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsInBlock(System.Char,Sdl.LanguagePlatform.Core.UnicodeBlock)
  id: IsInBlock(System.Char,Sdl.LanguagePlatform.Core.UnicodeBlock)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsInBlock(Char, UnicodeBlock)
  nameWithType: CharacterProperties.IsInBlock(Char, UnicodeBlock)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsInBlock(System.Char, Sdl.LanguagePlatform.Core.UnicodeBlock)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsInBlock(char c, UnicodeBlock b)
    parameters:
    - id: c
      type: System.Char
    - id: b
      type: Sdl.LanguagePlatform.Core.UnicodeBlock
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsInBlock(c As Char, b As UnicodeBlock) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsInBlock*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(System.String,System.Predicate{System.Char})
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(System.String,System.Predicate{System.Char})
  id: IsAll(System.String,System.Predicate{System.Char})
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsAll(String, Predicate<Char>)
  nameWithType: CharacterProperties.IsAll(String, Predicate<Char>)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(System.String, System.Predicate<System.Char>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsAll(string s, Predicate<char> predicate)
    parameters:
    - id: s
      type: System.String
    - id: predicate
      type: System.Predicate{System.Char}
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsAll(s As String, predicate As Predicate(Of Char)) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll*
  nameWithType.vb: CharacterProperties.IsAll(String, Predicate(Of Char))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(System.String, System.Predicate(Of System.Char))
  name.vb: IsAll(String, Predicate(Of Char))
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(System.String,System.Int32,System.Predicate{System.Char})
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(System.String,System.Int32,System.Predicate{System.Char})
  id: IsAll(System.String,System.Int32,System.Predicate{System.Char})
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsAll(String, Int32, Predicate<Char>)
  nameWithType: CharacterProperties.IsAll(String, Int32, Predicate<Char>)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(System.String, System.Int32, System.Predicate<System.Char>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsAll(string s, int start, Predicate<char> predicate)
    parameters:
    - id: s
      type: System.String
    - id: start
      type: System.Int32
    - id: predicate
      type: System.Predicate{System.Char}
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsAll(s As String, start As Integer, predicate As Predicate(Of Char)) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll*
  nameWithType.vb: CharacterProperties.IsAll(String, Int32, Predicate(Of Char))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(System.String, System.Int32, System.Predicate(Of System.Char))
  name.vb: IsAll(String, Int32, Predicate(Of Char))
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength(System.String,System.Predicate{System.Char})
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength(System.String,System.Predicate{System.Char})
  id: GetPrefixLength(System.String,System.Predicate{System.Char})
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: GetPrefixLength(String, Predicate<Char>)
  nameWithType: CharacterProperties.GetPrefixLength(String, Predicate<Char>)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength(System.String, System.Predicate<System.Char>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static int GetPrefixLength(string s, Predicate<char> predicate)
    parameters:
    - id: s
      type: System.String
    - id: predicate
      type: System.Predicate{System.Char}
    return:
      type: System.Int32
    content.vb: Public Shared Function GetPrefixLength(s As String, predicate As Predicate(Of Char)) As Integer
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength*
  nameWithType.vb: CharacterProperties.GetPrefixLength(String, Predicate(Of Char))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength(System.String, System.Predicate(Of System.Char))
  name.vb: GetPrefixLength(String, Predicate(Of Char))
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsApostrophe(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsApostrophe(System.Char)
  id: IsApostrophe(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsApostrophe(Char)
  nameWithType: CharacterProperties.IsApostrophe(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsApostrophe(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsApostrophe(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsApostrophe(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsApostrophe*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsColon(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsColon(System.Char)
  id: IsColon(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsColon(Char)
  nameWithType: CharacterProperties.IsColon(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsColon(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsColon(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsColon(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsColon*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsComma(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsComma(System.Char)
  id: IsComma(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsComma(Char)
  nameWithType: CharacterProperties.IsComma(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsComma(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsComma(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsComma(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsComma*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsDot(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsDot(System.Char)
  id: IsDot(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsDot(Char)
  nameWithType: CharacterProperties.IsDot(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsDot(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsDot(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsDot(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsDot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsExclamation(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsExclamation(System.Char)
  id: IsExclamation(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsExclamation(Char)
  nameWithType: CharacterProperties.IsExclamation(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsExclamation(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsExclamation(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsExclamation(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsExclamation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsHyphen(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsHyphen(System.Char)
  id: IsHyphen(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsHyphen(Char)
  nameWithType: CharacterProperties.IsHyphen(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsHyphen(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsHyphen(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsHyphen(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsHyphen*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsDash(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsDash(System.Char)
  id: IsDash(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsDash(Char)
  nameWithType: CharacterProperties.IsDash(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsDash(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsDash(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsDash(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsDash*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuestion(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsQuestion(System.Char)
  id: IsQuestion(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsQuestion(Char)
  nameWithType: CharacterProperties.IsQuestion(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuestion(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsQuestion(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsQuestion(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuestion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsSemicolon(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsSemicolon(System.Char)
  id: IsSemicolon(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsSemicolon(Char)
  nameWithType: CharacterProperties.IsSemicolon(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsSemicolon(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsSemicolon(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsSemicolon(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsSemicolon*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsBrace(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsBrace(System.Char)
  id: IsBrace(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsBrace(Char)
  nameWithType: CharacterProperties.IsBrace(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsBrace(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsBrace(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsBrace(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsBrace*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsTabulator(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsTabulator(System.Char)
  id: IsTabulator(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsTabulator(Char)
  nameWithType: CharacterProperties.IsTabulator(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsTabulator(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsTabulator(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsTabulator(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsTabulator*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsParagraph(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsParagraph(System.Char)
  id: IsParagraph(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsParagraph(Char)
  nameWithType: CharacterProperties.IsParagraph(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsParagraph(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsParagraph(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsParagraph(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsParagraph*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningBracket(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningBracket(System.Char)
  id: IsOpeningBracket(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsOpeningBracket(Char)
  nameWithType: CharacterProperties.IsOpeningBracket(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningBracket(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsOpeningBracket(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsOpeningBracket(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningBracket*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingBracket(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingBracket(System.Char)
  id: IsClosingBracket(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsClosingBracket(Char)
  nameWithType: CharacterProperties.IsClosingBracket(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingBracket(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsClosingBracket(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsClosingBracket(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingBracket*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsBracket(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsBracket(System.Char)
  id: IsBracket(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsBracket(Char)
  nameWithType: CharacterProperties.IsBracket(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsBracket(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsBracket(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsBracket(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsBracket*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsParenthesis(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsParenthesis(System.Char)
  id: IsParenthesis(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsParenthesis(Char)
  nameWithType: CharacterProperties.IsParenthesis(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsParenthesis(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsParenthesis(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsParenthesis(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsParenthesis*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningParenthesis(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningParenthesis(System.Char)
  id: IsOpeningParenthesis(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsOpeningParenthesis(Char)
  nameWithType: CharacterProperties.IsOpeningParenthesis(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningParenthesis(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsOpeningParenthesis(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsOpeningParenthesis(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningParenthesis*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingParenthesis(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingParenthesis(System.Char)
  id: IsClosingParenthesis(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsClosingParenthesis(Char)
  nameWithType: CharacterProperties.IsClosingParenthesis(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingParenthesis(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsClosingParenthesis(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsClosingParenthesis(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingParenthesis*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsLatinLetter(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsLatinLetter(System.Char)
  id: IsLatinLetter(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsLatinLetter(Char)
  nameWithType: CharacterProperties.IsLatinLetter(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsLatinLetter(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsLatinLetter(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsLatinLetter(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsLatinLetter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuote(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsQuote(System.Char)
  id: IsQuote(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsQuote(Char)
  nameWithType: CharacterProperties.IsQuote(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuote(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsQuote(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsQuote(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuote*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsPercent(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsPercent(System.Char)
  id: IsPercent(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsPercent(Char)
  nameWithType: CharacterProperties.IsPercent(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsPercent(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsPercent(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsPercent(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsPercent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsSingleQuote(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsSingleQuote(System.Char)
  id: IsSingleQuote(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsSingleQuote(Char)
  nameWithType: CharacterProperties.IsSingleQuote(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsSingleQuote(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsSingleQuote(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsSingleQuote(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsSingleQuote*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsDoubleQuote(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsDoubleQuote(System.Char)
  id: IsDoubleQuote(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsDoubleQuote(Char)
  nameWithType: CharacterProperties.IsDoubleQuote(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsDoubleQuote(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsDoubleQuote(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsDoubleQuote(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsDoubleQuote*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningQuote(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningQuote(System.Char)
  id: IsOpeningQuote(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsOpeningQuote(Char)
  nameWithType: CharacterProperties.IsOpeningQuote(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningQuote(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsOpeningQuote(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsOpeningQuote(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningQuote*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingQuote(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingQuote(System.Char)
  id: IsClosingQuote(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsClosingQuote(Char)
  nameWithType: CharacterProperties.IsClosingQuote(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingQuote(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsClosingQuote(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsClosingQuote(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingQuote*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsSurrounder(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsSurrounder(System.Char)
  id: IsSurrounder(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsSurrounder(Char)
  nameWithType: CharacterProperties.IsSurrounder(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsSurrounder(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsSurrounder(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsSurrounder(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsSurrounder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsStop(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsStop(System.Char)
  id: IsStop(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsStop(Char)
  nameWithType: CharacterProperties.IsStop(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsStop(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsStop(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsStop(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsStop*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsVowel(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsVowel(System.Char)
  id: IsVowel(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsVowel(Char)
  nameWithType: CharacterProperties.IsVowel(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsVowel(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsVowel(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsVowel(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsVowel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsSequenceOf(System.String,System.Globalization.UnicodeCategory)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsSequenceOf(System.String,System.Globalization.UnicodeCategory)
  id: IsSequenceOf(System.String,System.Globalization.UnicodeCategory)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsSequenceOf(String, UnicodeCategory)
  nameWithType: CharacterProperties.IsSequenceOf(String, UnicodeCategory)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsSequenceOf(System.String, System.Globalization.UnicodeCategory)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsSequenceOf(string s, UnicodeCategory c)
    parameters:
    - id: s
      type: System.String
    - id: c
      type: System.Globalization.UnicodeCategory
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsSequenceOf(s As String, c As UnicodeCategory) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsSequenceOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String)
  id: ToBase(System.String)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: ToBase(String)
  nameWithType: CharacterProperties.ToBase(String)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static string ToBase(string s)
    parameters:
    - id: s
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function ToBase(s As String) As String
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String,System.Boolean)
  id: ToBase(System.String,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: ToBase(String, Boolean)
  nameWithType: CharacterProperties.ToBase(String, Boolean)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String, System.Boolean)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static string ToBase(string s, bool skipSurrogates)
    parameters:
    - id: s
      type: System.String
    - id: skipSurrogates
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Shared Function ToBase(s As String, skipSurrogates As Boolean) As String
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(System.String,Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(System.String,Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  id: ToCase(System.String,Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: ToCase(String, CharacterProperties.Case)
  nameWithType: CharacterProperties.ToCase(String, CharacterProperties.Case)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(System.String, Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static string ToCase(string s, CharacterProperties.Case c)
    parameters:
    - id: s
      type: System.String
    - id: c
      type: Sdl.LanguagePlatform.Core.CharacterProperties.Case
    return:
      type: System.String
    content.vb: Public Shared Function ToCase(s As String, c As CharacterProperties.Case) As String
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(System.Char,Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(System.Char,Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  id: ToCase(System.Char,Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: ToCase(Char, CharacterProperties.Case)
  nameWithType: CharacterProperties.ToCase(Char, CharacterProperties.Case)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(System.Char, Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static char ToCase(char ch, CharacterProperties.Case c)
    parameters:
    - id: ch
      type: System.Char
    - id: c
      type: Sdl.LanguagePlatform.Core.CharacterProperties.Case
    return:
      type: System.Char
    content.vb: Public Shared Function ToCase(ch As Char, c As CharacterProperties.Case) As Char
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsWhitespace(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsWhitespace(System.Char)
  id: IsWhitespace(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsWhitespace(Char)
  nameWithType: CharacterProperties.IsWhitespace(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsWhitespace(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsWhitespace(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsWhitespace(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsWhitespace*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsUpperOrLower(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsUpperOrLower(System.Char)
  id: IsUpperOrLower(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsUpperOrLower(Char)
  nameWithType: CharacterProperties.IsUpperOrLower(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsUpperOrLower(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsUpperOrLower(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsUpperOrLower(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsUpperOrLower*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsBlank(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsBlank(System.Char)
  id: IsBlank(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsBlank(Char)
  nameWithType: CharacterProperties.IsBlank(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsBlank(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsBlank(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsBlank(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsBlank*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.Char)
  id: GetCase(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: GetCase(Char)
  nameWithType: CharacterProperties.GetCase(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static CharacterProperties.Case GetCase(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: Sdl.LanguagePlatform.Core.CharacterProperties.Case
    content.vb: Public Shared Function GetCase(c As Char) As CharacterProperties.Case
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.String)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.String)
  id: GetCase(System.String)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: GetCase(String)
  nameWithType: CharacterProperties.GetCase(String)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static CharacterProperties.Case GetCase(string s)
    parameters:
    - id: s
      type: System.String
    return:
      type: Sdl.LanguagePlatform.Core.CharacterProperties.Case
    content.vb: Public Shared Function GetCase(s As String) As CharacterProperties.Case
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.String,System.Int32)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.String,System.Int32)
  id: GetCase(System.String,System.Int32)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: GetCase(String, Int32)
  nameWithType: CharacterProperties.GetCase(String, Int32)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.String, System.Int32)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static CharacterProperties.Case GetCase(string s, int length)
    parameters:
    - id: s
      type: System.String
    - id: length
      type: System.Int32
    return:
      type: Sdl.LanguagePlatform.Core.CharacterProperties.Case
    content.vb: Public Shared Function GetCase(s As String, length As Integer) As CharacterProperties.Case
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.Char)
  id: ToBase(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: ToBase(Char)
  nameWithType: CharacterProperties.ToBase(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static char ToBase(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Char
    content.vb: Public Shared Function ToBase(c As Char) As Char
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKChar(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKChar(System.Char)
  id: IsCJKChar(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsCJKChar(Char)
  nameWithType: CharacterProperties.IsCJKChar(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKChar(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsCJKChar(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsCJKChar(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKChar*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar(System.Char)
  id: IsKoreanChar(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsKoreanChar(Char)
  nameWithType: CharacterProperties.IsKoreanChar(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsKoreanChar(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsKoreanChar(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsJaLongVowelMarker(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsJaLongVowelMarker(System.Char)
  id: IsJaLongVowelMarker(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsJaLongVowelMarker(Char)
  nameWithType: CharacterProperties.IsJaLongVowelMarker(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsJaLongVowelMarker(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsJaLongVowelMarker(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsJaLongVowelMarker(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsJaLongVowelMarker*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKPunctuation(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKPunctuation(System.Char)
  id: IsCJKPunctuation(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsCJKPunctuation(Char)
  nameWithType: CharacterProperties.IsCJKPunctuation(Char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKPunctuation(System.Char)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static bool IsCJKPunctuation(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsCJKPunctuation(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKPunctuation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryFromName(System.String)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryFromName(System.String)
  id: GetUnicodeCategoryFromName(System.String)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: GetUnicodeCategoryFromName(String)
  nameWithType: CharacterProperties.GetUnicodeCategoryFromName(String)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryFromName(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static UnicodeCategory? GetUnicodeCategoryFromName(string className)
    parameters:
    - id: className
      type: System.String
    return:
      type: System.Nullable{System.Globalization.UnicodeCategory}
    content.vb: Public Shared Function GetUnicodeCategoryFromName(className As String) As UnicodeCategory?
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryFromName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryName(System.Globalization.UnicodeCategory)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryName(System.Globalization.UnicodeCategory)
  id: GetUnicodeCategoryName(System.Globalization.UnicodeCategory)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: GetUnicodeCategoryName(UnicodeCategory)
  nameWithType: CharacterProperties.GetUnicodeCategoryName(UnicodeCategory)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryName(System.Globalization.UnicodeCategory)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static string GetUnicodeCategoryName(UnicodeCategory cat)
    parameters:
    - id: cat
      type: System.Globalization.UnicodeCategory
    return:
      type: System.String
    content.vb: Public Shared Function GetUnicodeCategoryName(cat As UnicodeCategory) As String
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.UppercaseCharacters
  commentId: P:Sdl.LanguagePlatform.Core.CharacterProperties.UppercaseCharacters
  id: UppercaseCharacters
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: UppercaseCharacters
  nameWithType: CharacterProperties.UppercaseCharacters
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.UppercaseCharacters
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public static char[] UppercaseCharacters { get; }
    parameters: []
    return:
      type: System.Char[]
    content.vb: Public Shared ReadOnly Property UppercaseCharacters As Char()
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.UppercaseCharacters*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Char[]
  isExternal: true
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullName.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeBlock*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeBlock
  isExternal: true
  name: GetUnicodeBlock
  nameWithType: CharacterProperties.GetUnicodeBlock
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeBlock
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: Sdl.LanguagePlatform.Core.UnicodeBlock
  commentId: T:Sdl.LanguagePlatform.Core.UnicodeBlock
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: UnicodeBlock
  nameWithType: UnicodeBlock
  fullName: Sdl.LanguagePlatform.Core.UnicodeBlock
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsInBlock*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsInBlock
  isExternal: true
  name: IsInBlock
  nameWithType: CharacterProperties.IsInBlock
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsInBlock
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsAll
  isExternal: true
  name: IsAll
  nameWithType: CharacterProperties.IsAll
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Predicate{System.Char}
  commentId: T:System.Predicate{System.Char}
  parent: System
  definition: System.Predicate`1
  name: Predicate<Char>
  nameWithType: Predicate<Char>
  fullName: System.Predicate<System.Char>
  nameWithType.vb: Predicate(Of Char)
  fullName.vb: System.Predicate(Of System.Char)
  name.vb: Predicate(Of Char)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength
  isExternal: true
  name: GetPrefixLength
  nameWithType: CharacterProperties.GetPrefixLength
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsApostrophe*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsApostrophe
  isExternal: true
  name: IsApostrophe
  nameWithType: CharacterProperties.IsApostrophe
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsApostrophe
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsColon*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsColon
  isExternal: true
  name: IsColon
  nameWithType: CharacterProperties.IsColon
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsColon
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsComma*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsComma
  isExternal: true
  name: IsComma
  nameWithType: CharacterProperties.IsComma
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsComma
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsDot*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsDot
  isExternal: true
  name: IsDot
  nameWithType: CharacterProperties.IsDot
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsDot
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsExclamation*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsExclamation
  isExternal: true
  name: IsExclamation
  nameWithType: CharacterProperties.IsExclamation
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsExclamation
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsHyphen*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsHyphen
  isExternal: true
  name: IsHyphen
  nameWithType: CharacterProperties.IsHyphen
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsHyphen
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsDash*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsDash
  isExternal: true
  name: IsDash
  nameWithType: CharacterProperties.IsDash
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsDash
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuestion*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsQuestion
  isExternal: true
  name: IsQuestion
  nameWithType: CharacterProperties.IsQuestion
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuestion
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsSemicolon*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsSemicolon
  isExternal: true
  name: IsSemicolon
  nameWithType: CharacterProperties.IsSemicolon
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsSemicolon
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsBrace*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsBrace
  isExternal: true
  name: IsBrace
  nameWithType: CharacterProperties.IsBrace
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsBrace
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsTabulator*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsTabulator
  isExternal: true
  name: IsTabulator
  nameWithType: CharacterProperties.IsTabulator
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsTabulator
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsParagraph*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsParagraph
  isExternal: true
  name: IsParagraph
  nameWithType: CharacterProperties.IsParagraph
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsParagraph
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningBracket*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningBracket
  isExternal: true
  name: IsOpeningBracket
  nameWithType: CharacterProperties.IsOpeningBracket
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningBracket
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingBracket*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingBracket
  isExternal: true
  name: IsClosingBracket
  nameWithType: CharacterProperties.IsClosingBracket
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingBracket
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsBracket*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsBracket
  isExternal: true
  name: IsBracket
  nameWithType: CharacterProperties.IsBracket
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsBracket
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsParenthesis*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsParenthesis
  isExternal: true
  name: IsParenthesis
  nameWithType: CharacterProperties.IsParenthesis
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsParenthesis
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningParenthesis*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningParenthesis
  isExternal: true
  name: IsOpeningParenthesis
  nameWithType: CharacterProperties.IsOpeningParenthesis
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningParenthesis
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingParenthesis*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingParenthesis
  isExternal: true
  name: IsClosingParenthesis
  nameWithType: CharacterProperties.IsClosingParenthesis
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingParenthesis
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsLatinLetter*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsLatinLetter
  isExternal: true
  name: IsLatinLetter
  nameWithType: CharacterProperties.IsLatinLetter
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsLatinLetter
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuote*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsQuote
  isExternal: true
  name: IsQuote
  nameWithType: CharacterProperties.IsQuote
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuote
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsPercent*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsPercent
  isExternal: true
  name: IsPercent
  nameWithType: CharacterProperties.IsPercent
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsPercent
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsSingleQuote*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsSingleQuote
  isExternal: true
  name: IsSingleQuote
  nameWithType: CharacterProperties.IsSingleQuote
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsSingleQuote
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsDoubleQuote*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsDoubleQuote
  isExternal: true
  name: IsDoubleQuote
  nameWithType: CharacterProperties.IsDoubleQuote
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsDoubleQuote
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningQuote*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningQuote
  isExternal: true
  name: IsOpeningQuote
  nameWithType: CharacterProperties.IsOpeningQuote
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningQuote
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingQuote*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingQuote
  isExternal: true
  name: IsClosingQuote
  nameWithType: CharacterProperties.IsClosingQuote
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingQuote
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsSurrounder*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsSurrounder
  isExternal: true
  name: IsSurrounder
  nameWithType: CharacterProperties.IsSurrounder
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsSurrounder
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsStop*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsStop
  isExternal: true
  name: IsStop
  nameWithType: CharacterProperties.IsStop
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsStop
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsVowel*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsVowel
  isExternal: true
  name: IsVowel
  nameWithType: CharacterProperties.IsVowel
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsVowel
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsSequenceOf*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsSequenceOf
  isExternal: true
  name: IsSequenceOf
  nameWithType: CharacterProperties.IsSequenceOf
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsSequenceOf
- uid: System.Globalization.UnicodeCategory
  commentId: T:System.Globalization.UnicodeCategory
  parent: System.Globalization
  isExternal: true
  name: UnicodeCategory
  nameWithType: UnicodeCategory
  fullName: System.Globalization.UnicodeCategory
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.ToBase
  isExternal: true
  name: ToBase
  nameWithType: CharacterProperties.ToBase
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.ToCase
  isExternal: true
  name: ToCase
  nameWithType: CharacterProperties.ToCase
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.Case
  commentId: T:Sdl.LanguagePlatform.Core.CharacterProperties.Case
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: CharacterProperties.Case
  nameWithType: CharacterProperties.Case
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.Case
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsWhitespace*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsWhitespace
  isExternal: true
  name: IsWhitespace
  nameWithType: CharacterProperties.IsWhitespace
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsWhitespace
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsUpperOrLower*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsUpperOrLower
  isExternal: true
  name: IsUpperOrLower
  nameWithType: CharacterProperties.IsUpperOrLower
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsUpperOrLower
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsBlank*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsBlank
  isExternal: true
  name: IsBlank
  nameWithType: CharacterProperties.IsBlank
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsBlank
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.GetCase
  isExternal: true
  name: GetCase
  nameWithType: CharacterProperties.GetCase
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKChar*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKChar
  isExternal: true
  name: IsCJKChar
  nameWithType: CharacterProperties.IsCJKChar
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKChar
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar
  isExternal: true
  name: IsKoreanChar
  nameWithType: CharacterProperties.IsKoreanChar
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsJaLongVowelMarker*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsJaLongVowelMarker
  isExternal: true
  name: IsJaLongVowelMarker
  nameWithType: CharacterProperties.IsJaLongVowelMarker
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsJaLongVowelMarker
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKPunctuation*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKPunctuation
  isExternal: true
  name: IsCJKPunctuation
  nameWithType: CharacterProperties.IsCJKPunctuation
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKPunctuation
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryFromName*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryFromName
  isExternal: true
  name: GetUnicodeCategoryFromName
  nameWithType: CharacterProperties.GetUnicodeCategoryFromName
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryFromName
- uid: System.Nullable{System.Globalization.UnicodeCategory}
  commentId: T:System.Nullable{System.Globalization.UnicodeCategory}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UnicodeCategory>
  nameWithType: Nullable<UnicodeCategory>
  fullName: System.Nullable<System.Globalization.UnicodeCategory>
  nameWithType.vb: Nullable(Of UnicodeCategory)
  fullName.vb: System.Nullable(Of System.Globalization.UnicodeCategory)
  name.vb: Nullable(Of UnicodeCategory)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Globalization.UnicodeCategory
    name: UnicodeCategory
    nameWithType: UnicodeCategory
    fullName: System.Globalization.UnicodeCategory
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Globalization.UnicodeCategory
    name: UnicodeCategory
    nameWithType: UnicodeCategory
    fullName: System.Globalization.UnicodeCategory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryName*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryName
  isExternal: true
  name: GetUnicodeCategoryName
  nameWithType: CharacterProperties.GetUnicodeCategoryName
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryName
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.UppercaseCharacters*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.UppercaseCharacters
  isExternal: true
  name: UppercaseCharacters
  nameWithType: CharacterProperties.UppercaseCharacters
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.UppercaseCharacters
