### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.CharacterProperties
  commentId: T:Sdl.LanguagePlatform.Core.CharacterProperties
  id: CharacterProperties
  parent: Sdl.LanguagePlatform.Core
  children:
  - Sdl.LanguagePlatform.Core.CharacterProperties.Blanks
  - Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.String)
  - Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.String,System.Int32)
  - Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength(System.String,System.Predicate{System.Char})
  - Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeBlock(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryFromName(System.String)
  - Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryName(System.Globalization.UnicodeCategory)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(System.String,System.Int32,System.Predicate{System.Char})
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(System.String,System.Predicate{System.Char})
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsApostrophe(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsBlank(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsBrace(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsBracket(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKChar(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKPunctuation(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingBracket(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingParenthesis(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingQuote(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsColon(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsComma(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsDash(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsDot(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsDoubleQuote(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsExclamation(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsHyphen(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsInBlock(System.Char,Sdl.LanguagePlatform.Core.UnicodeBlock)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsJaLongVowelMarker(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsLatinLetter(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningBracket(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningParenthesis(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningQuote(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsParagraph(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsParenthesis(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsPercent(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsQuestion(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsQuote(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsSemicolon(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsSequenceOf(System.String,System.Globalization.UnicodeCategory)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsSingleQuote(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsStop(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsSurrounder(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsTabulator(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsUpperOrLower(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsVowel(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.IsWhitespace(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.Char)
  - Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String)
  - Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String,System.Boolean)
  - Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(System.Char,Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  - Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(System.String,Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  - Sdl.LanguagePlatform.Core.CharacterProperties.UppercaseCharacters
  - Sdl.LanguagePlatform.Core.CharacterProperties.WhitespaceCharacters
  langs:
  - csharp
  - vb
  name: CharacterProperties
  nameWithType: CharacterProperties
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties
  type: Class
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Proides methods that check for certain properties of strings and characters.
  example: []
  syntax:
    content: public static class CharacterProperties
    content.vb: Public Module CharacterProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.WhitespaceCharacters
  commentId: F:Sdl.LanguagePlatform.Core.CharacterProperties.WhitespaceCharacters
  id: WhitespaceCharacters
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: WhitespaceCharacters
  nameWithType: CharacterProperties.WhitespaceCharacters
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.WhitespaceCharacters
  type: Field
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Contains a set of known whitespace characters from different languages. This should

    be equivalent to the set of characters for which <xref href="System.Char.IsWhiteSpace(System.Char)" data-throw-if-not-resolved="false"></xref> returns

    <code>true</code>, which however is incomplete in earlier .Net versions.

    <p>The elements of the array are sorted in ascending order, so binary search

    can be used.</p>
  example: []
  syntax:
    content: public static readonly char[] WhitespaceCharacters
    return:
      type: System.Char[]
    content.vb: Public Shared ReadOnly WhitespaceCharacters As Char()
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.Blanks
  commentId: F:Sdl.LanguagePlatform.Core.CharacterProperties.Blanks
  id: Blanks
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: Blanks
  nameWithType: CharacterProperties.Blanks
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.Blanks
  type: Field
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Contains a set of known blank characters of various widths from different languages. This

    should be a subset of <xref href="Sdl.LanguagePlatform.Core.CharacterProperties.WhitespaceCharacters" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static readonly char[] Blanks
    return:
      type: System.Char[]
    content.vb: Public Shared ReadOnly Blanks As Char()
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeBlock(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeBlock(System.Char)
  id: GetUnicodeBlock(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: GetUnicodeBlock(char)
  nameWithType: CharacterProperties.GetUnicodeBlock(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeBlock(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Attempts to identify the <xref href="Sdl.LanguagePlatform.Core.UnicodeBlock" data-throw-if-not-resolved="false"></xref> for the provided character.
  example: []
  syntax:
    content: public static UnicodeBlock GetUnicodeBlock(char c)
    parameters:
    - id: c
      type: System.Char
      description: A character to get the <xref href="Sdl.LanguagePlatform.Core.UnicodeBlock" data-throw-if-not-resolved="false"></xref> for.
    return:
      type: Sdl.LanguagePlatform.Core.UnicodeBlock
      description: >-
        The <xref href="Sdl.LanguagePlatform.Core.UnicodeBlock" data-throw-if-not-resolved="false"></xref> for <code class="paramref">c</code>, or <xref href="Sdl.LanguagePlatform.Core.UnicodeBlock.Unknown" data-throw-if-not-resolved="false"></xref> if the block
                    cannot be determined.
    content.vb: Public Shared Function GetUnicodeBlock(c As Char) As UnicodeBlock
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeBlock*
  nameWithType.vb: CharacterProperties.GetUnicodeBlock(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeBlock(Char)
  name.vb: GetUnicodeBlock(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsInBlock(System.Char,Sdl.LanguagePlatform.Core.UnicodeBlock)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsInBlock(System.Char,Sdl.LanguagePlatform.Core.UnicodeBlock)
  id: IsInBlock(System.Char,Sdl.LanguagePlatform.Core.UnicodeBlock)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsInBlock(char, UnicodeBlock)
  nameWithType: CharacterProperties.IsInBlock(char, UnicodeBlock)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsInBlock(char, Sdl.LanguagePlatform.Core.UnicodeBlock)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Tests whether <code class="paramref">c</code> is contained in the <xref href="Sdl.LanguagePlatform.Core.UnicodeBlock" data-throw-if-not-resolved="false"></xref> <code class="paramref">b</code>.
  example: []
  syntax:
    content: public static bool IsInBlock(char c, UnicodeBlock b)
    parameters:
    - id: c
      type: System.Char
      description: A character
    - id: b
      type: Sdl.LanguagePlatform.Core.UnicodeBlock
      description: A <xref href="Sdl.LanguagePlatform.Core.UnicodeBlock" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if <code class="paramref">c</code> is contained in <code class="paramref">b</code>, 
                    and <code>false</code> otherwise.
    content.vb: Public Shared Function IsInBlock(c As Char, b As UnicodeBlock) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsInBlock*
  nameWithType.vb: CharacterProperties.IsInBlock(Char, UnicodeBlock)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsInBlock(Char, Sdl.LanguagePlatform.Core.UnicodeBlock)
  name.vb: IsInBlock(Char, UnicodeBlock)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(System.String,System.Predicate{System.Char})
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(System.String,System.Predicate{System.Char})
  id: IsAll(System.String,System.Predicate{System.Char})
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsAll(string, Predicate<char>)
  nameWithType: CharacterProperties.IsAll(string, Predicate<char>)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(string, System.Predicate<char>)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Evaluates the predicate on all characters in the string and returns true if all characters

    fulfill the predicate, and false otherwise. Note that the method will always return <code>true</code> 

    for the empty string.
  example: []
  syntax:
    content: public static bool IsAll(string s, Predicate<char> predicate)
    parameters:
    - id: s
      type: System.String
    - id: predicate
      type: System.Predicate{System.Char}
    return:
      type: System.Boolean
      description: >-
        true if all characters fulfill the predicate or <code class="paramref">s</code> is the 
                    empty string, and false otherwise.
    content.vb: Public Shared Function IsAll(s As String, predicate As Predicate(Of Char)) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll*
  nameWithType.vb: CharacterProperties.IsAll(String, Predicate(Of Char))
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(String, System.Predicate(Of Char))
  name.vb: IsAll(String, Predicate(Of Char))
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(System.String,System.Int32,System.Predicate{System.Char})
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(System.String,System.Int32,System.Predicate{System.Char})
  id: IsAll(System.String,System.Int32,System.Predicate{System.Char})
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsAll(string, int, Predicate<char>)
  nameWithType: CharacterProperties.IsAll(string, int, Predicate<char>)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(string, int, System.Predicate<char>)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Evaluates the predicate on all characters in the string, starting from position <code class="paramref">start</code>, 

    and returns true if all characters

    fulfill the predicate, and false otherwise. Note that the method will always return <code>true</code> 

    for the empty string or if the start position exceeds the string length.
  example: []
  syntax:
    content: public static bool IsAll(string s, int start, Predicate<char> predicate)
    parameters:
    - id: s
      type: System.String
    - id: start
      type: System.Int32
    - id: predicate
      type: System.Predicate{System.Char}
    return:
      type: System.Boolean
      description: >-
        true if all characters fulfill the predicate, or <code class="paramref">s</code> is the 
                    empty string, or <code class="paramref">start</code> exceeds the string length, and false otherwise.
    content.vb: Public Shared Function IsAll(s As String, start As Integer, predicate As Predicate(Of Char)) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll*
  nameWithType.vb: CharacterProperties.IsAll(String, Integer, Predicate(Of Char))
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll(String, Integer, System.Predicate(Of Char))
  name.vb: IsAll(String, Integer, Predicate(Of Char))
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength(System.String,System.Predicate{System.Char})
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength(System.String,System.Predicate{System.Char})
  id: GetPrefixLength(System.String,System.Predicate{System.Char})
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: GetPrefixLength(string, Predicate<char>)
  nameWithType: CharacterProperties.GetPrefixLength(string, Predicate<char>)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength(string, System.Predicate<char>)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Computes and returns the length of the prefix of the provided string <code class="paramref">s</code> where each 

    character satisfies the provided predicate.
  example: []
  syntax:
    content: public static int GetPrefixLength(string s, Predicate<char> predicate)
    parameters:
    - id: s
      type: System.String
    - id: predicate
      type: System.Predicate{System.Char}
    return:
      type: System.Int32
    content.vb: Public Shared Function GetPrefixLength(s As String, predicate As Predicate(Of Char)) As Integer
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength*
  nameWithType.vb: CharacterProperties.GetPrefixLength(String, Predicate(Of Char))
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength(String, System.Predicate(Of Char))
  name.vb: GetPrefixLength(String, Predicate(Of Char))
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsApostrophe(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsApostrophe(System.Char)
  id: IsApostrophe(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsApostrophe(char)
  nameWithType: CharacterProperties.IsApostrophe(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsApostrophe(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is an apostrophe.
  example: []
  syntax:
    content: public static bool IsApostrophe(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is an apostrophe, otherwise false.
    content.vb: Public Shared Function IsApostrophe(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsApostrophe*
  nameWithType.vb: CharacterProperties.IsApostrophe(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsApostrophe(Char)
  name.vb: IsApostrophe(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsColon(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsColon(System.Char)
  id: IsColon(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsColon(char)
  nameWithType: CharacterProperties.IsColon(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsColon(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a colon.
  example: []
  syntax:
    content: public static bool IsColon(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a colon, otherwise false.
    content.vb: Public Shared Function IsColon(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsColon*
  nameWithType.vb: CharacterProperties.IsColon(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsColon(Char)
  name.vb: IsColon(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsComma(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsComma(System.Char)
  id: IsComma(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsComma(char)
  nameWithType: CharacterProperties.IsComma(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsComma(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a comma.
  example: []
  syntax:
    content: public static bool IsComma(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a comma, otherwise false.
    content.vb: Public Shared Function IsComma(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsComma*
  nameWithType.vb: CharacterProperties.IsComma(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsComma(Char)
  name.vb: IsComma(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsDot(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsDot(System.Char)
  id: IsDot(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsDot(char)
  nameWithType: CharacterProperties.IsDot(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsDot(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a dor.
  example: []
  syntax:
    content: public static bool IsDot(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a dot, otherwise false.
    content.vb: Public Shared Function IsDot(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsDot*
  nameWithType.vb: CharacterProperties.IsDot(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsDot(Char)
  name.vb: IsDot(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsExclamation(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsExclamation(System.Char)
  id: IsExclamation(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsExclamation(char)
  nameWithType: CharacterProperties.IsExclamation(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsExclamation(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is an exclamation mark.
  example: []
  syntax:
    content: public static bool IsExclamation(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is an exclamation mark, otherwise false.
    content.vb: Public Shared Function IsExclamation(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsExclamation*
  nameWithType.vb: CharacterProperties.IsExclamation(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsExclamation(Char)
  name.vb: IsExclamation(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsHyphen(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsHyphen(System.Char)
  id: IsHyphen(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsHyphen(char)
  nameWithType: CharacterProperties.IsHyphen(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsHyphen(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a hyphen.
  example: []
  syntax:
    content: public static bool IsHyphen(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a hyphen, otherwise false.
    content.vb: Public Shared Function IsHyphen(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsHyphen*
  nameWithType.vb: CharacterProperties.IsHyphen(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsHyphen(Char)
  name.vb: IsHyphen(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsDash(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsDash(System.Char)
  id: IsDash(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsDash(char)
  nameWithType: CharacterProperties.IsDash(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsDash(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a dash.
  example: []
  syntax:
    content: public static bool IsDash(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a dash, otherwise false.
    content.vb: Public Shared Function IsDash(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsDash*
  nameWithType.vb: CharacterProperties.IsDash(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsDash(Char)
  name.vb: IsDash(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuestion(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsQuestion(System.Char)
  id: IsQuestion(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsQuestion(char)
  nameWithType: CharacterProperties.IsQuestion(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuestion(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a question mark.
  example: []
  syntax:
    content: public static bool IsQuestion(char c)
    parameters:
    - id: c
      type: System.Char
      description: The characters.
    return:
      type: System.Boolean
      description: true if c is a question mark, otherwise false.
    content.vb: Public Shared Function IsQuestion(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuestion*
  nameWithType.vb: CharacterProperties.IsQuestion(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuestion(Char)
  name.vb: IsQuestion(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsSemicolon(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsSemicolon(System.Char)
  id: IsSemicolon(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsSemicolon(char)
  nameWithType: CharacterProperties.IsSemicolon(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsSemicolon(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a semicolon.
  example: []
  syntax:
    content: public static bool IsSemicolon(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a semicolon, otherwise false.
    content.vb: Public Shared Function IsSemicolon(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsSemicolon*
  nameWithType.vb: CharacterProperties.IsSemicolon(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsSemicolon(Char)
  name.vb: IsSemicolon(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsBrace(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsBrace(System.Char)
  id: IsBrace(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsBrace(char)
  nameWithType: CharacterProperties.IsBrace(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsBrace(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a brace.
  example: []
  syntax:
    content: public static bool IsBrace(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a brace, otherwise false.
    content.vb: Public Shared Function IsBrace(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsBrace*
  nameWithType.vb: CharacterProperties.IsBrace(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsBrace(Char)
  name.vb: IsBrace(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsTabulator(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsTabulator(System.Char)
  id: IsTabulator(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsTabulator(char)
  nameWithType: CharacterProperties.IsTabulator(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsTabulator(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a tabulator.
  example: []
  syntax:
    content: public static bool IsTabulator(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a tabulator, otherwise false.
    content.vb: Public Shared Function IsTabulator(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsTabulator*
  nameWithType.vb: CharacterProperties.IsTabulator(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsTabulator(Char)
  name.vb: IsTabulator(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsParagraph(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsParagraph(System.Char)
  id: IsParagraph(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsParagraph(char)
  nameWithType: CharacterProperties.IsParagraph(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsParagraph(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a paragraph separator.
  example: []
  syntax:
    content: public static bool IsParagraph(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a paragraph separator, otherwise false.
    content.vb: Public Shared Function IsParagraph(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsParagraph*
  nameWithType.vb: CharacterProperties.IsParagraph(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsParagraph(Char)
  name.vb: IsParagraph(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningBracket(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningBracket(System.Char)
  id: IsOpeningBracket(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsOpeningBracket(char)
  nameWithType: CharacterProperties.IsOpeningBracket(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningBracket(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is an opening bracket.
  example: []
  syntax:
    content: public static bool IsOpeningBracket(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is an opening bracket, otherwise false.
    content.vb: Public Shared Function IsOpeningBracket(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningBracket*
  nameWithType.vb: CharacterProperties.IsOpeningBracket(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningBracket(Char)
  name.vb: IsOpeningBracket(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingBracket(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingBracket(System.Char)
  id: IsClosingBracket(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsClosingBracket(char)
  nameWithType: CharacterProperties.IsClosingBracket(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingBracket(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a closing bracket.
  example: []
  syntax:
    content: public static bool IsClosingBracket(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a closing bracket, otherwise false.
    content.vb: Public Shared Function IsClosingBracket(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingBracket*
  nameWithType.vb: CharacterProperties.IsClosingBracket(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingBracket(Char)
  name.vb: IsClosingBracket(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsBracket(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsBracket(System.Char)
  id: IsBracket(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsBracket(char)
  nameWithType: CharacterProperties.IsBracket(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsBracket(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is an opening or a closing bracket.
  example: []
  syntax:
    content: public static bool IsBracket(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is an opening or a closing bracket, otherwise false.
    content.vb: Public Shared Function IsBracket(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsBracket*
  nameWithType.vb: CharacterProperties.IsBracket(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsBracket(Char)
  name.vb: IsBracket(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsParenthesis(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsParenthesis(System.Char)
  id: IsParenthesis(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsParenthesis(char)
  nameWithType: CharacterProperties.IsParenthesis(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsParenthesis(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is an opening or a closing paranthesis.
  example: []
  syntax:
    content: public static bool IsParenthesis(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is an opening or a closing , otherwise false.
    content.vb: Public Shared Function IsParenthesis(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsParenthesis*
  nameWithType.vb: CharacterProperties.IsParenthesis(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsParenthesis(Char)
  name.vb: IsParenthesis(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningParenthesis(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningParenthesis(System.Char)
  id: IsOpeningParenthesis(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsOpeningParenthesis(char)
  nameWithType: CharacterProperties.IsOpeningParenthesis(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningParenthesis(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is an opening paranthesis.
  example: []
  syntax:
    content: public static bool IsOpeningParenthesis(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is an openint paranthesis, otherwise false.
    content.vb: Public Shared Function IsOpeningParenthesis(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningParenthesis*
  nameWithType.vb: CharacterProperties.IsOpeningParenthesis(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningParenthesis(Char)
  name.vb: IsOpeningParenthesis(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingParenthesis(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingParenthesis(System.Char)
  id: IsClosingParenthesis(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsClosingParenthesis(char)
  nameWithType: CharacterProperties.IsClosingParenthesis(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingParenthesis(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a closing paranthesis.
  example: []
  syntax:
    content: public static bool IsClosingParenthesis(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a closing paranthesis, otherwise false.
    content.vb: Public Shared Function IsClosingParenthesis(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingParenthesis*
  nameWithType.vb: CharacterProperties.IsClosingParenthesis(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingParenthesis(Char)
  name.vb: IsClosingParenthesis(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsLatinLetter(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsLatinLetter(System.Char)
  id: IsLatinLetter(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsLatinLetter(char)
  nameWithType: CharacterProperties.IsLatinLetter(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsLatinLetter(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a Latin-alphabet letter, single or double width
  example: []
  syntax:
    content: public static bool IsLatinLetter(char c)
    parameters:
    - id: c
      type: System.Char
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsLatinLetter(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsLatinLetter*
  nameWithType.vb: CharacterProperties.IsLatinLetter(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsLatinLetter(Char)
  name.vb: IsLatinLetter(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuote(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsQuote(System.Char)
  id: IsQuote(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsQuote(char)
  nameWithType: CharacterProperties.IsQuote(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuote(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a quote.
  example: []
  syntax:
    content: public static bool IsQuote(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a quote, otherwise false.
    content.vb: Public Shared Function IsQuote(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuote*
  nameWithType.vb: CharacterProperties.IsQuote(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuote(Char)
  name.vb: IsQuote(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsPercent(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsPercent(System.Char)
  id: IsPercent(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsPercent(char)
  nameWithType: CharacterProperties.IsPercent(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsPercent(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a percent character.
  example: []
  syntax:
    content: public static bool IsPercent(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a percent character, otherwise false.
    content.vb: Public Shared Function IsPercent(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsPercent*
  nameWithType.vb: CharacterProperties.IsPercent(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsPercent(Char)
  name.vb: IsPercent(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsSingleQuote(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsSingleQuote(System.Char)
  id: IsSingleQuote(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsSingleQuote(char)
  nameWithType: CharacterProperties.IsSingleQuote(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsSingleQuote(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a single quote.
  example: []
  syntax:
    content: public static bool IsSingleQuote(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a single quote, otherwise false.
    content.vb: Public Shared Function IsSingleQuote(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsSingleQuote*
  nameWithType.vb: CharacterProperties.IsSingleQuote(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsSingleQuote(Char)
  name.vb: IsSingleQuote(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsDoubleQuote(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsDoubleQuote(System.Char)
  id: IsDoubleQuote(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsDoubleQuote(char)
  nameWithType: CharacterProperties.IsDoubleQuote(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsDoubleQuote(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a double quote.
  example: []
  syntax:
    content: public static bool IsDoubleQuote(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a double quote, otherwise false.
    content.vb: Public Shared Function IsDoubleQuote(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsDoubleQuote*
  nameWithType.vb: CharacterProperties.IsDoubleQuote(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsDoubleQuote(Char)
  name.vb: IsDoubleQuote(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningQuote(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningQuote(System.Char)
  id: IsOpeningQuote(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsOpeningQuote(char)
  nameWithType: CharacterProperties.IsOpeningQuote(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningQuote(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is an opening quote.
  example: []
  syntax:
    content: public static bool IsOpeningQuote(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is an opening quote, otherwise false.
    content.vb: Public Shared Function IsOpeningQuote(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningQuote*
  nameWithType.vb: CharacterProperties.IsOpeningQuote(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningQuote(Char)
  name.vb: IsOpeningQuote(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingQuote(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingQuote(System.Char)
  id: IsClosingQuote(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsClosingQuote(char)
  nameWithType: CharacterProperties.IsClosingQuote(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingQuote(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a closing quote.
  example: []
  syntax:
    content: public static bool IsClosingQuote(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a closing quote, otherwise false.
    content.vb: Public Shared Function IsClosingQuote(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingQuote*
  nameWithType.vb: CharacterProperties.IsClosingQuote(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingQuote(Char)
  name.vb: IsClosingQuote(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsSurrounder(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsSurrounder(System.Char)
  id: IsSurrounder(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsSurrounder(char)
  nameWithType: CharacterProperties.IsSurrounder(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsSurrounder(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Determines whether the specified character is any of the known surrounder characters, 

    such as bracket, paranthesis, quote, apostrophe or a special surrounder.
  example: []
  syntax:
    content: public static bool IsSurrounder(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a any of the surrounder characters, otherwise false.
    content.vb: Public Shared Function IsSurrounder(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsSurrounder*
  nameWithType.vb: CharacterProperties.IsSurrounder(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsSurrounder(Char)
  name.vb: IsSurrounder(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsStop(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsStop(System.Char)
  id: IsStop(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsStop(char)
  nameWithType: CharacterProperties.IsStop(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsStop(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a stop character such as colon, dot, exclamation mark, question mark or semicolon.
  example: []
  syntax:
    content: public static bool IsStop(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a stop character, otherwise false.
    content.vb: Public Shared Function IsStop(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsStop*
  nameWithType.vb: CharacterProperties.IsStop(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsStop(Char)
  name.vb: IsStop(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsVowel(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsVowel(System.Char)
  id: IsVowel(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsVowel(char)
  nameWithType: CharacterProperties.IsVowel(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsVowel(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified character is a vowel (Western or Far East).
  example: []
  syntax:
    content: public static bool IsVowel(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a vowel, otherwise false.
    content.vb: Public Shared Function IsVowel(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsVowel*
  nameWithType.vb: CharacterProperties.IsVowel(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsVowel(Char)
  name.vb: IsVowel(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsSequenceOf(System.String,System.Globalization.UnicodeCategory)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsSequenceOf(System.String,System.Globalization.UnicodeCategory)
  id: IsSequenceOf(System.String,System.Globalization.UnicodeCategory)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsSequenceOf(string, UnicodeCategory)
  nameWithType: CharacterProperties.IsSequenceOf(string, UnicodeCategory)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsSequenceOf(string, System.Globalization.UnicodeCategory)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether the specified string is a sequence of characters of the specified unicode category <code class="paramref">c</code>.
  example: []
  syntax:
    content: public static bool IsSequenceOf(string s, UnicodeCategory c)
    parameters:
    - id: s
      type: System.String
      description: The string.
    - id: c
      type: System.Globalization.UnicodeCategory
      description: The Unicode category.
    return:
      type: System.Boolean
      description: true if all the characters in <code class="paramref">s</code> have the Unicode category <code class="paramref">c</code> or <code class="paramref">s</code> is the empty string, otherwise false.
    content.vb: Public Shared Function IsSequenceOf(s As String, c As UnicodeCategory) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsSequenceOf*
  nameWithType.vb: CharacterProperties.IsSequenceOf(String, UnicodeCategory)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsSequenceOf(String, System.Globalization.UnicodeCategory)
  name.vb: IsSequenceOf(String, UnicodeCategory)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String)
  id: ToBase(System.String)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: ToBase(string)
  nameWithType: CharacterProperties.ToBase(string)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(string)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Returns a new string with the same textual value as the input string, but whose binary representation 

    is normalized using full canonical decomposition ignoring any characters that belong to the following 

    Unicode categories: Format, ModifierLetter, NonSpacingMark, OtherNotAssigned, ParagraphSeparator, 

    PrivateUse, SpaceSeparator, SpacingCombiningMark.
  example: []
  syntax:
    content: public static string ToBase(string s)
    parameters:
    - id: s
      type: System.String
      description: The input string.
    return:
      type: System.String
      description: The normalized string.
    content.vb: Public Shared Function ToBase(s As String) As String
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase*
  nameWithType.vb: CharacterProperties.ToBase(String)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(String)
  name.vb: ToBase(String)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String,System.Boolean)
  id: ToBase(System.String,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: ToBase(string, bool)
  nameWithType: CharacterProperties.ToBase(string, bool)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(string, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: See <xref href="Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string ToBase(string s, bool skipSurrogates)
    parameters:
    - id: s
      type: System.String
      description: ''
    - id: skipSurrogates
      type: System.Boolean
      description: If true, no changes will be applied if any surrogate-pair bytes are found after decomposition
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function ToBase(s As String, skipSurrogates As Boolean) As String
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase*
  nameWithType.vb: CharacterProperties.ToBase(String, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(String, Boolean)
  name.vb: ToBase(String, Boolean)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(System.String,Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(System.String,Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  id: ToCase(System.String,Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: ToCase(string, Case)
  nameWithType: CharacterProperties.ToCase(string, CharacterProperties.Case)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(string, Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Applies the specified casing to the provided string.
  example: []
  syntax:
    content: public static string ToCase(string s, CharacterProperties.Case c)
    parameters:
    - id: s
      type: System.String
    - id: c
      type: Sdl.LanguagePlatform.Core.CharacterProperties.Case
    return:
      type: System.String
    content.vb: Public Shared Function ToCase(s As String, c As CharacterProperties.Case) As String
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase*
  nameWithType.vb: CharacterProperties.ToCase(String, CharacterProperties.Case)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(String, Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  name.vb: ToCase(String, Case)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(System.Char,Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(System.Char,Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  id: ToCase(System.Char,Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: ToCase(char, Case)
  nameWithType: CharacterProperties.ToCase(char, CharacterProperties.Case)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(char, Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Applies the specified casing to the provided character.
  example: []
  syntax:
    content: public static char ToCase(char ch, CharacterProperties.Case c)
    parameters:
    - id: ch
      type: System.Char
    - id: c
      type: Sdl.LanguagePlatform.Core.CharacterProperties.Case
    return:
      type: System.Char
    content.vb: Public Shared Function ToCase(ch As Char, c As CharacterProperties.Case) As Char
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase*
  nameWithType.vb: CharacterProperties.ToCase(Char, CharacterProperties.Case)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase(Char, Sdl.LanguagePlatform.Core.CharacterProperties.Case)
  name.vb: ToCase(Char, Case)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsWhitespace(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsWhitespace(System.Char)
  id: IsWhitespace(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsWhitespace(char)
  nameWithType: CharacterProperties.IsWhitespace(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsWhitespace(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Determines whether the specified character is a whitespace.

    <p>This test does not cover format characters.</p>

    <remarks>This method is no longer required since <xref href="System.char.IsWhiteSpace(char)" data-throw-if-not-resolved="false"></xref> has

    been fixed in .Net 3.5 to return the correct information.</remarks>
  example: []
  syntax:
    content: public static bool IsWhitespace(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a whitespace, otherwise false.
    content.vb: Public Shared Function IsWhitespace(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsWhitespace*
  nameWithType.vb: CharacterProperties.IsWhitespace(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsWhitespace(Char)
  name.vb: IsWhitespace(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsUpperOrLower(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsUpperOrLower(System.Char)
  id: IsUpperOrLower(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsUpperOrLower(char)
  nameWithType: CharacterProperties.IsUpperOrLower(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsUpperOrLower(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Returns true if <code class="paramref">c</code> is upper or lower case, and false otherwise.
  example: []
  syntax:
    content: public static bool IsUpperOrLower(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsUpperOrLower(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsUpperOrLower*
  nameWithType.vb: CharacterProperties.IsUpperOrLower(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsUpperOrLower(Char)
  name.vb: IsUpperOrLower(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsBlank(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsBlank(System.Char)
  id: IsBlank(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsBlank(char)
  nameWithType: CharacterProperties.IsBlank(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsBlank(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Determines whether the specified character is a blank.

    <p>This test does not cover format characters.</p>
  example: []
  syntax:
    content: public static bool IsBlank(char c)
    parameters:
    - id: c
      type: System.Char
      description: The character.
    return:
      type: System.Boolean
      description: true if c is a blank, otherwise false.
    content.vb: Public Shared Function IsBlank(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsBlank*
  nameWithType.vb: CharacterProperties.IsBlank(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsBlank(Char)
  name.vb: IsBlank(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.Char)
  id: GetCase(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: GetCase(char)
  nameWithType: CharacterProperties.GetCase(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Determines the case of a character. Only upper and lower case characters are

    distinguished, in all other cases or for non-letter characters, <xref href="Sdl.LanguagePlatform.Core.CharacterProperties.Case.Other" data-throw-if-not-resolved="false"></xref>

    is returned.
  example: []
  syntax:
    content: public static CharacterProperties.Case GetCase(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: Sdl.LanguagePlatform.Core.CharacterProperties.Case
    content.vb: Public Shared Function GetCase(c As Char) As CharacterProperties.Case
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase*
  nameWithType.vb: CharacterProperties.GetCase(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(Char)
  name.vb: GetCase(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.String)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.String)
  id: GetCase(System.String)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: GetCase(string)
  nameWithType: CharacterProperties.GetCase(string)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(string)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines the case of the string, if it is consistent.
  example: []
  syntax:
    content: public static CharacterProperties.Case GetCase(string s)
    parameters:
    - id: s
      type: System.String
    return:
      type: Sdl.LanguagePlatform.Core.CharacterProperties.Case
    content.vb: Public Shared Function GetCase(s As String) As CharacterProperties.Case
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase*
  nameWithType.vb: CharacterProperties.GetCase(String)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(String)
  name.vb: GetCase(String)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.String,System.Int32)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(System.String,System.Int32)
  id: GetCase(System.String,System.Int32)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: GetCase(string, int)
  nameWithType: CharacterProperties.GetCase(string, int)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(string, int)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Determines the case of the string, if it is consistent. The string is only scanned

    up to the specified length.
  example: []
  syntax:
    content: public static CharacterProperties.Case GetCase(string s, int length)
    parameters:
    - id: s
      type: System.String
    - id: length
      type: System.Int32
    return:
      type: Sdl.LanguagePlatform.Core.CharacterProperties.Case
    content.vb: Public Shared Function GetCase(s As String, length As Integer) As CharacterProperties.Case
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase*
  nameWithType.vb: CharacterProperties.GetCase(String, Integer)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase(String, Integer)
  name.vb: GetCase(String, Integer)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.Char)
  id: ToBase(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: ToBase(char)
  nameWithType: CharacterProperties.ToBase(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Returns a new character which is the normalized version of the input character, using full canonical decomposition.
  example: []
  syntax:
    content: public static char ToBase(char c)
    parameters:
    - id: c
      type: System.Char
      description: The input character.
    return:
      type: System.Char
      description: The normalized character.
    content.vb: Public Shared Function ToBase(c As Char) As Char
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase*
  nameWithType.vb: CharacterProperties.ToBase(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(Char)
  name.vb: ToBase(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKChar(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKChar(System.Char)
  id: IsCJKChar(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsCJKChar(char)
  nameWithType: CharacterProperties.IsCJKChar(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKChar(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Tests whether <code class="paramref">c</code> is a CJK (Chinese/Japanese/Korean) character - note, this does NOT include modern Korean characters
  remarks: Regarding Korean, the character ranges covered include (not necessarily all) the largely-archaic Hanja characters. To test for Hangul characters, use <xref href="Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar(System.Char)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool IsCJKChar(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
      description: true if <code class="paramref">c</code> is a CJK (Chinese/Japanese/Korean) character, false otherwise.
    content.vb: Public Shared Function IsCJKChar(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKChar*
  nameWithType.vb: CharacterProperties.IsCJKChar(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKChar(Char)
  name.vb: IsCJKChar(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar(System.Char)
  id: IsKoreanChar(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsKoreanChar(char)
  nameWithType: CharacterProperties.IsKoreanChar(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Tests whether <code class="paramref">c</code> is a Hangul character, precomposed or otherwise
  example: []
  syntax:
    content: public static bool IsKoreanChar(char c)
    parameters:
    - id: c
      type: System.Char
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsKoreanChar(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar*
  nameWithType.vb: CharacterProperties.IsKoreanChar(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar(Char)
  name.vb: IsKoreanChar(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsJaLongVowelMarker(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsJaLongVowelMarker(System.Char)
  id: IsJaLongVowelMarker(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsJaLongVowelMarker(char)
  nameWithType: CharacterProperties.IsJaLongVowelMarker(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsJaLongVowelMarker(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Tests whether <code class="paramref">c</code> is the JA long vowel marker
  example: []
  syntax:
    content: public static bool IsJaLongVowelMarker(char c)
    parameters:
    - id: c
      type: System.Char
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsJaLongVowelMarker(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsJaLongVowelMarker*
  nameWithType.vb: CharacterProperties.IsJaLongVowelMarker(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsJaLongVowelMarker(Char)
  name.vb: IsJaLongVowelMarker(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKPunctuation(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKPunctuation(System.Char)
  id: IsCJKPunctuation(System.Char)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: IsCJKPunctuation(char)
  nameWithType: CharacterProperties.IsCJKPunctuation(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKPunctuation(char)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Tests whether the provided character <code class="paramref">c</code> is a CJK (Chinese/Japanese/Korean) punctuation characater.
  example: []
  syntax:
    content: public static bool IsCJKPunctuation(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
      description: >-
        true if <code class="paramref">c</code> is a CJK (Chinese/Japanese/Korean) punctuation, and
                    false otherwise
    content.vb: Public Shared Function IsCJKPunctuation(c As Char) As Boolean
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKPunctuation*
  nameWithType.vb: CharacterProperties.IsCJKPunctuation(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKPunctuation(Char)
  name.vb: IsCJKPunctuation(Char)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryFromName(System.String)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryFromName(System.String)
  id: GetUnicodeCategoryFromName(System.String)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: GetUnicodeCategoryFromName(string)
  nameWithType: CharacterProperties.GetUnicodeCategoryFromName(string)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryFromName(string)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Maps Unicode category names as they are used in <xref href="Sdl.LanguagePlatform.Core.CharacterSet" data-throw-if-not-resolved="false"></xref>s to 

    the corresponding <xref href="System.Globalization.UnicodeCategory" data-throw-if-not-resolved="false"></xref>. The lookup

    is case-insensitive.
  example: []
  syntax:
    content: public static UnicodeCategory? GetUnicodeCategoryFromName(string className)
    parameters:
    - id: className
      type: System.String
      description: The category name
    return:
      type: System.Nullable{System.Globalization.UnicodeCategory}
      description: >-
        The corresponding <xref href="System.Globalization.UnicodeCategory" data-throw-if-not-resolved="false"></xref>, or
                    <code>null</code> if the class name is not known.
    content.vb: Public Shared Function GetUnicodeCategoryFromName(className As String) As UnicodeCategory?
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryFromName*
  nameWithType.vb: CharacterProperties.GetUnicodeCategoryFromName(String)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryFromName(String)
  name.vb: GetUnicodeCategoryFromName(String)
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryName(System.Globalization.UnicodeCategory)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryName(System.Globalization.UnicodeCategory)
  id: GetUnicodeCategoryName(System.Globalization.UnicodeCategory)
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: GetUnicodeCategoryName(UnicodeCategory)
  nameWithType: CharacterProperties.GetUnicodeCategoryName(UnicodeCategory)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryName(System.Globalization.UnicodeCategory)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Maps from <xref href="System.Globalization.UnicodeCategory" data-throw-if-not-resolved="false"></xref> to class names

    as they are used in <xref href="Sdl.LanguagePlatform.Core.CharacterSet" data-throw-if-not-resolved="false"></xref>s.
  example: []
  syntax:
    content: public static string GetUnicodeCategoryName(UnicodeCategory cat)
    parameters:
    - id: cat
      type: System.Globalization.UnicodeCategory
      description: The Unicode category
    return:
      type: System.String
      description: A category name, to be used in character sets.
    content.vb: Public Shared Function GetUnicodeCategoryName(cat As UnicodeCategory) As String
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryName*
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.UppercaseCharacters
  commentId: P:Sdl.LanguagePlatform.Core.CharacterProperties.UppercaseCharacters
  id: UppercaseCharacters
  parent: Sdl.LanguagePlatform.Core.CharacterProperties
  langs:
  - csharp
  - vb
  name: UppercaseCharacters
  nameWithType: CharacterProperties.UppercaseCharacters
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.UppercaseCharacters
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Gets a collection of all characters in the range [U+0020, U+00FB] for which 

    <xref href="System.Char.IsUpper(System.Char)" data-throw-if-not-resolved="false"></xref> is <code>true</code>.
  example: []
  syntax:
    content: public static char[] UppercaseCharacters { get; }
    parameters: []
    return:
      type: System.Char[]
    content.vb: Public Shared ReadOnly Property UppercaseCharacters As Char()
  overload: Sdl.LanguagePlatform.Core.CharacterProperties.UppercaseCharacters*
references:
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  href: Sdl.html
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Char.IsWhiteSpace(System.Char)
  commentId: M:System.Char.IsWhiteSpace(System.Char)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char.iswhitespace#system-char-iswhitespace(system-char)
  name: IsWhiteSpace(char)
  nameWithType: char.IsWhiteSpace(char)
  fullName: char.IsWhiteSpace(char)
  nameWithType.vb: Char.IsWhiteSpace(Char)
  fullName.vb: Char.IsWhiteSpace(Char)
  name.vb: IsWhiteSpace(Char)
  spec.csharp:
  - uid: System.Char.IsWhiteSpace(System.Char)
    name: IsWhiteSpace
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char.iswhitespace#system-char-iswhitespace(system-char)
  - name: (
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
  spec.vb:
  - uid: System.Char.IsWhiteSpace(System.Char)
    name: IsWhiteSpace
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char.iswhitespace#system-char-iswhitespace(system-char)
  - name: (
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: System.Char[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char[]
  nameWithType: char[]
  fullName: char[]
  nameWithType.vb: Char()
  fullName.vb: Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.WhitespaceCharacters
  commentId: F:Sdl.LanguagePlatform.Core.CharacterProperties.WhitespaceCharacters
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_WhitespaceCharacters
  name: WhitespaceCharacters
  nameWithType: CharacterProperties.WhitespaceCharacters
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.WhitespaceCharacters
- uid: Sdl.LanguagePlatform.Core.UnicodeBlock
  commentId: T:Sdl.LanguagePlatform.Core.UnicodeBlock
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  href: Sdl.LanguagePlatform.Core.UnicodeBlock.html
  name: UnicodeBlock
  nameWithType: UnicodeBlock
  fullName: Sdl.LanguagePlatform.Core.UnicodeBlock
- uid: Sdl.LanguagePlatform.Core.UnicodeBlock.Unknown
  commentId: F:Sdl.LanguagePlatform.Core.UnicodeBlock.Unknown
  isExternal: true
  href: Sdl.LanguagePlatform.Core.UnicodeBlock.html#Sdl_LanguagePlatform_Core_UnicodeBlock_Unknown
  name: Unknown
  nameWithType: UnicodeBlock.Unknown
  fullName: Sdl.LanguagePlatform.Core.UnicodeBlock.Unknown
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeBlock*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeBlock
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_GetUnicodeBlock_System_Char_
  name: GetUnicodeBlock
  nameWithType: CharacterProperties.GetUnicodeBlock
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeBlock
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsInBlock*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsInBlock
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsInBlock_System_Char_Sdl_LanguagePlatform_Core_UnicodeBlock_
  name: IsInBlock
  nameWithType: CharacterProperties.IsInBlock
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsInBlock
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsAll
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsAll_System_String_System_Predicate_System_Char__
  name: IsAll
  nameWithType: CharacterProperties.IsAll
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsAll
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Predicate{System.Char}
  commentId: T:System.Predicate{System.Char}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<char>
  nameWithType: Predicate<char>
  fullName: System.Predicate<char>
  nameWithType.vb: Predicate(Of Char)
  fullName.vb: System.Predicate(Of Char)
  name.vb: Predicate(Of Char)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_GetPrefixLength_System_String_System_Predicate_System_Char__
  name: GetPrefixLength
  nameWithType: CharacterProperties.GetPrefixLength
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetPrefixLength
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsApostrophe*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsApostrophe
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsApostrophe_System_Char_
  name: IsApostrophe
  nameWithType: CharacterProperties.IsApostrophe
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsApostrophe
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsColon*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsColon
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsColon_System_Char_
  name: IsColon
  nameWithType: CharacterProperties.IsColon
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsColon
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsComma*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsComma
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsComma_System_Char_
  name: IsComma
  nameWithType: CharacterProperties.IsComma
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsComma
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsDot*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsDot
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsDot_System_Char_
  name: IsDot
  nameWithType: CharacterProperties.IsDot
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsDot
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsExclamation*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsExclamation
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsExclamation_System_Char_
  name: IsExclamation
  nameWithType: CharacterProperties.IsExclamation
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsExclamation
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsHyphen*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsHyphen
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsHyphen_System_Char_
  name: IsHyphen
  nameWithType: CharacterProperties.IsHyphen
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsHyphen
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsDash*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsDash
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsDash_System_Char_
  name: IsDash
  nameWithType: CharacterProperties.IsDash
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsDash
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuestion*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsQuestion
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsQuestion_System_Char_
  name: IsQuestion
  nameWithType: CharacterProperties.IsQuestion
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuestion
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsSemicolon*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsSemicolon
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsSemicolon_System_Char_
  name: IsSemicolon
  nameWithType: CharacterProperties.IsSemicolon
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsSemicolon
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsBrace*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsBrace
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsBrace_System_Char_
  name: IsBrace
  nameWithType: CharacterProperties.IsBrace
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsBrace
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsTabulator*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsTabulator
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsTabulator_System_Char_
  name: IsTabulator
  nameWithType: CharacterProperties.IsTabulator
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsTabulator
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsParagraph*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsParagraph
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsParagraph_System_Char_
  name: IsParagraph
  nameWithType: CharacterProperties.IsParagraph
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsParagraph
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningBracket*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningBracket
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsOpeningBracket_System_Char_
  name: IsOpeningBracket
  nameWithType: CharacterProperties.IsOpeningBracket
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningBracket
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingBracket*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingBracket
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsClosingBracket_System_Char_
  name: IsClosingBracket
  nameWithType: CharacterProperties.IsClosingBracket
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingBracket
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsBracket*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsBracket
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsBracket_System_Char_
  name: IsBracket
  nameWithType: CharacterProperties.IsBracket
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsBracket
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsParenthesis*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsParenthesis
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsParenthesis_System_Char_
  name: IsParenthesis
  nameWithType: CharacterProperties.IsParenthesis
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsParenthesis
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningParenthesis*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningParenthesis
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsOpeningParenthesis_System_Char_
  name: IsOpeningParenthesis
  nameWithType: CharacterProperties.IsOpeningParenthesis
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningParenthesis
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingParenthesis*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingParenthesis
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsClosingParenthesis_System_Char_
  name: IsClosingParenthesis
  nameWithType: CharacterProperties.IsClosingParenthesis
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingParenthesis
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsLatinLetter*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsLatinLetter
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsLatinLetter_System_Char_
  name: IsLatinLetter
  nameWithType: CharacterProperties.IsLatinLetter
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsLatinLetter
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuote*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsQuote
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsQuote_System_Char_
  name: IsQuote
  nameWithType: CharacterProperties.IsQuote
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsQuote
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsPercent*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsPercent
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsPercent_System_Char_
  name: IsPercent
  nameWithType: CharacterProperties.IsPercent
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsPercent
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsSingleQuote*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsSingleQuote
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsSingleQuote_System_Char_
  name: IsSingleQuote
  nameWithType: CharacterProperties.IsSingleQuote
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsSingleQuote
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsDoubleQuote*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsDoubleQuote
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsDoubleQuote_System_Char_
  name: IsDoubleQuote
  nameWithType: CharacterProperties.IsDoubleQuote
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsDoubleQuote
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningQuote*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningQuote
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsOpeningQuote_System_Char_
  name: IsOpeningQuote
  nameWithType: CharacterProperties.IsOpeningQuote
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsOpeningQuote
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingQuote*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingQuote
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsClosingQuote_System_Char_
  name: IsClosingQuote
  nameWithType: CharacterProperties.IsClosingQuote
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsClosingQuote
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsSurrounder*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsSurrounder
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsSurrounder_System_Char_
  name: IsSurrounder
  nameWithType: CharacterProperties.IsSurrounder
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsSurrounder
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsStop*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsStop
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsStop_System_Char_
  name: IsStop
  nameWithType: CharacterProperties.IsStop
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsStop
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsVowel*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsVowel
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsVowel_System_Char_
  name: IsVowel
  nameWithType: CharacterProperties.IsVowel
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsVowel
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsSequenceOf*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsSequenceOf
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsSequenceOf_System_String_System_Globalization_UnicodeCategory_
  name: IsSequenceOf
  nameWithType: CharacterProperties.IsSequenceOf
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsSequenceOf
- uid: System.Globalization.UnicodeCategory
  commentId: T:System.Globalization.UnicodeCategory
  parent: System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.unicodecategory
  name: UnicodeCategory
  nameWithType: UnicodeCategory
  fullName: System.Globalization.UnicodeCategory
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.ToBase
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_ToBase_System_String_
  name: ToBase
  nameWithType: CharacterProperties.ToBase
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String)
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_ToBase_System_String_
  name: ToBase(string)
  nameWithType: CharacterProperties.ToBase(string)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(string)
  nameWithType.vb: CharacterProperties.ToBase(String)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(String)
  name.vb: ToBase(String)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String)
    name: ToBase
    isExternal: true
    href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_ToBase_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.CharacterProperties.ToBase(System.String)
    name: ToBase
    isExternal: true
    href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_ToBase_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.ToCase
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_ToCase_System_String_Sdl_LanguagePlatform_Core_CharacterProperties_Case_
  name: ToCase
  nameWithType: CharacterProperties.ToCase
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.ToCase
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.Case
  commentId: T:Sdl.LanguagePlatform.Core.CharacterProperties.Case
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html
  name: CharacterProperties.Case
  nameWithType: CharacterProperties.Case
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.Case
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.CharacterProperties
    name: CharacterProperties
    isExternal: true
    href: Sdl.LanguagePlatform.Core.CharacterProperties.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core.CharacterProperties.Case
    name: Case
    isExternal: true
    href: Sdl.LanguagePlatform.Core.CharacterProperties.Case.html
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.CharacterProperties
    name: CharacterProperties
    isExternal: true
    href: Sdl.LanguagePlatform.Core.CharacterProperties.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core.CharacterProperties.Case
    name: Case
    isExternal: true
    href: Sdl.LanguagePlatform.Core.CharacterProperties.Case.html
- uid: System.char.IsWhiteSpace(char)
  commentId: M:System.char.IsWhiteSpace(char)
  isExternal: true
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsWhitespace*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsWhitespace
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsWhitespace_System_Char_
  name: IsWhitespace
  nameWithType: CharacterProperties.IsWhitespace
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsWhitespace
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsUpperOrLower*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsUpperOrLower
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsUpperOrLower_System_Char_
  name: IsUpperOrLower
  nameWithType: CharacterProperties.IsUpperOrLower
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsUpperOrLower
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsBlank*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsBlank
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsBlank_System_Char_
  name: IsBlank
  nameWithType: CharacterProperties.IsBlank
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsBlank
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.Case.Other
  commentId: F:Sdl.LanguagePlatform.Core.CharacterProperties.Case.Other
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.Case.html#Sdl_LanguagePlatform_Core_CharacterProperties_Case_Other
  name: Other
  nameWithType: CharacterProperties.Case.Other
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.Case.Other
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.GetCase
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_GetCase_System_Char_
  name: GetCase
  nameWithType: CharacterProperties.GetCase
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetCase
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar(System.Char)
  commentId: M:Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar(System.Char)
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsKoreanChar_System_Char_
  name: IsKoreanChar(char)
  nameWithType: CharacterProperties.IsKoreanChar(char)
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar(char)
  nameWithType.vb: CharacterProperties.IsKoreanChar(Char)
  fullName.vb: Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar(Char)
  name.vb: IsKoreanChar(Char)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar(System.Char)
    name: IsKoreanChar
    isExternal: true
    href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsKoreanChar_System_Char_
  - name: (
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar(System.Char)
    name: IsKoreanChar
    isExternal: true
    href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsKoreanChar_System_Char_
  - name: (
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKChar*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKChar
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsCJKChar_System_Char_
  name: IsCJKChar
  nameWithType: CharacterProperties.IsCJKChar
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKChar
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsKoreanChar_System_Char_
  name: IsKoreanChar
  nameWithType: CharacterProperties.IsKoreanChar
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsKoreanChar
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsJaLongVowelMarker*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsJaLongVowelMarker
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsJaLongVowelMarker_System_Char_
  name: IsJaLongVowelMarker
  nameWithType: CharacterProperties.IsJaLongVowelMarker
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsJaLongVowelMarker
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKPunctuation*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKPunctuation
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_IsCJKPunctuation_System_Char_
  name: IsCJKPunctuation
  nameWithType: CharacterProperties.IsCJKPunctuation
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.IsCJKPunctuation
- uid: Sdl.LanguagePlatform.Core.CharacterSet
  commentId: T:Sdl.LanguagePlatform.Core.CharacterSet
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterSet.html
  name: CharacterSet
  nameWithType: CharacterSet
  fullName: Sdl.LanguagePlatform.Core.CharacterSet
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryFromName*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryFromName
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_GetUnicodeCategoryFromName_System_String_
  name: GetUnicodeCategoryFromName
  nameWithType: CharacterProperties.GetUnicodeCategoryFromName
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryFromName
- uid: System.Nullable{System.Globalization.UnicodeCategory}
  commentId: T:System.Nullable{System.Globalization.UnicodeCategory}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.globalization.unicodecategory
  name: UnicodeCategory?
  nameWithType: UnicodeCategory?
  fullName: System.Globalization.UnicodeCategory?
  spec.csharp:
  - uid: System.Globalization.UnicodeCategory
    name: UnicodeCategory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.unicodecategory
  - name: '?'
  spec.vb:
  - uid: System.Globalization.UnicodeCategory
    name: UnicodeCategory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.unicodecategory
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryName*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryName
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_GetUnicodeCategoryName_System_Globalization_UnicodeCategory_
  name: GetUnicodeCategoryName
  nameWithType: CharacterProperties.GetUnicodeCategoryName
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.GetUnicodeCategoryName
- uid: System.Char.IsUpper(System.Char)
  commentId: M:System.Char.IsUpper(System.Char)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char.isupper#system-char-isupper(system-char)
  name: IsUpper(char)
  nameWithType: char.IsUpper(char)
  fullName: char.IsUpper(char)
  nameWithType.vb: Char.IsUpper(Char)
  fullName.vb: Char.IsUpper(Char)
  name.vb: IsUpper(Char)
  spec.csharp:
  - uid: System.Char.IsUpper(System.Char)
    name: IsUpper
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char.isupper#system-char-isupper(system-char)
  - name: (
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
  spec.vb:
  - uid: System.Char.IsUpper(System.Char)
    name: IsUpper
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char.isupper#system-char-isupper(system-char)
  - name: (
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: Sdl.LanguagePlatform.Core.CharacterProperties.UppercaseCharacters*
  commentId: Overload:Sdl.LanguagePlatform.Core.CharacterProperties.UppercaseCharacters
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterProperties.html#Sdl_LanguagePlatform_Core_CharacterProperties_UppercaseCharacters
  name: UppercaseCharacters
  nameWithType: CharacterProperties.UppercaseCharacters
  fullName: Sdl.LanguagePlatform.Core.CharacterProperties.UppercaseCharacters
