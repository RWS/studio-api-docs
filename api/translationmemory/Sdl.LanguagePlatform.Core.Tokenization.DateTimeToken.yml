### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  id: DateTimeToken
  parent: Sdl.LanguagePlatform.Core.Tokenization
  children:
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor(Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken)
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor(System.String,System.DateTime,Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType)
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor(System.String,System.DateTime,Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType,System.String)
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.DateTimePatternType
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Duplicate
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Equals(System.Object)
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.FormatString
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.GetHashCode
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.GetTokenType
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsDateToken
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsPlaceable
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsSubstitutable
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsTimeToken
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings)
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean)
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.SetValue(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Boolean)
  - Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Value
  langs:
  - csharp
  - vb
  name: DateTimeToken
  nameWithType: DateTimeToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  type: Class
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nA <xref href=\"Sdl.LanguagePlatform.Core.Tokenization.Token\" data-throw-if-not-resolved=\"false\"></xref> which represents a date or time expression.\n"
  syntax:
    content: 'public class DateTimeToken : Token, ILocalizableToken'
    content.vb: >-
      Public Class DateTimeToken
          Inherits Token
          Implements ILocalizableToken
  inheritance:
  - System.Object
  - Sdl.LanguagePlatform.Core.SegmentElement
  - Sdl.LanguagePlatform.Core.Tokenization.Token
  implements:
  - Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
  inheritedMembers:
  - Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  - Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
  - Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  - Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
  - Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Text
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Span
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Type
  - Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
  - Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
  - Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: DateTimeToken()
  nameWithType: DateTimeToken.DateTimeToken()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.DateTimeToken()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nInitializes a new instance with default values.\n"
  syntax:
    content: public DateTimeToken()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor(Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor(Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken)
  id: '#ctor(Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken)'
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: DateTimeToken(DateTimeToken)
  nameWithType: DateTimeToken.DateTimeToken(DateTimeToken)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.DateTimeToken(Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nInitializes a new instance with the values of another token, creating a deep copy.\n"
  syntax:
    content: public DateTimeToken(DateTimeToken other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
      description: The other token (must not be null)
    content.vb: Public Sub New(other As DateTimeToken)
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor(System.String,System.DateTime,Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor(System.String,System.DateTime,Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType)
  id: '#ctor(System.String,System.DateTime,Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType)'
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: DateTimeToken(String, DateTime, DateTimePatternType)
  nameWithType: DateTimeToken.DateTimeToken(String, DateTime, DateTimePatternType)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.DateTimeToken(System.String, System.DateTime, Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nInitializes a new instance with the specified values.\n"
  syntax:
    content: public DateTimeToken(string text, DateTime dateTime, DateTimePatternType type)
    parameters:
    - id: text
      type: System.String
      description: The text to assign to the token
    - id: dateTime
      type: System.DateTime
      description: "The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to assign to the \ntoken&apos;s value"
    - id: type
      type: Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType
      description: The type of the date or time token
    content.vb: Public Sub New(text As String, dateTime As Date, type As DateTimePatternType)
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor(System.String,System.DateTime,Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType,System.String)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor(System.String,System.DateTime,Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType,System.String)
  id: '#ctor(System.String,System.DateTime,Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType,System.String)'
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: DateTimeToken(String, DateTime, DateTimePatternType, String)
  nameWithType: DateTimeToken.DateTimeToken(String, DateTime, DateTimePatternType, String)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.DateTimeToken(System.String, System.DateTime, Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType, System.String)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nInitializes a new instance with the specified values.\n"
  syntax:
    content: public DateTimeToken(string text, DateTime dateTime, DateTimePatternType type, string formatString)
    parameters:
    - id: text
      type: System.String
      description: The text to assign to the token
    - id: dateTime
      type: System.DateTime
      description: "The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to assign to the \ntoken&apos;s value"
    - id: type
      type: Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType
      description: The type of the date or time token
    - id: formatString
      type: System.String
      description: The format string describing this value, used to generate new values in the same format
    content.vb: Public Sub New(text As String, dateTime As Date, type As DateTimePatternType, formatString As String)
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.SetValue(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.SetValue(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Boolean)
  id: SetValue(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: SetValue(Token, Boolean)
  nameWithType: DateTimeToken.SetValue(Token, Boolean)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.SetValue(Sdl.LanguagePlatform.Core.Tokenization.Token, System.Boolean)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nOverwrites the current token&apos;s value with the value from <code data-dev-comment-type=\"paramref\" class=\"paramref\">blueprint</code>, which\nalso must be a <xref href=\"Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken\" data-throw-if-not-resolved=\"false\"></xref>. Note that only the value and the type are\noverwritten, not the textual representation. \n"
  syntax:
    content: public virtual bool SetValue(Token blueprint, bool keepNumericSeparators)
    parameters:
    - id: blueprint
      type: Sdl.LanguagePlatform.Core.Tokenization.Token
      description: The token to take the value from
    - id: keepNumericSeparators
      type: System.Boolean
      description: (ignored)
    return:
      type: System.Boolean
      description: A flag indicating whether the token&apos;s value or type were changed.
    content.vb: Public Overridable Function SetValue(blueprint As Token, keepNumericSeparators As Boolean) As Boolean
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.SetValue*
  implements:
  - Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.SetValue(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Duplicate
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Duplicate
  id: Duplicate
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: DateTimeToken.Duplicate()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Duplicate()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nSee <xref href=\"Sdl.LanguagePlatform.Core.SegmentElement.Duplicate\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override SegmentElement Duplicate()
    return:
      type: Sdl.LanguagePlatform.Core.SegmentElement
      description: A new instance that is a deep copy of this instance.
    content.vb: Public Overrides Function Duplicate As SegmentElement
  overridden: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Duplicate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  id: LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: LocalizeAsync(CultureInfo, AutoLocalizationSettings, ICultureMetadataManager)
  nameWithType: DateTimeToken.LocalizeAsync(CultureInfo, AutoLocalizationSettings, ICultureMetadataManager)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.LocalizeAsync(System.Globalization.CultureInfo, Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings, Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nAuto-localizes the token according to the settings of the specified target culture \nand the provided auto-localization settings. The text of the token will be changed, \nbut not the values.\n<p>\nFor some token types, special <xref href=\"Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings\" data-throw-if-not-resolved=\"false\"></xref> will be used, if provided.\n</p>\n"
  syntax:
    content: public virtual Task<bool> LocalizeAsync(CultureInfo culture, AutoLocalizationSettings autoLocalizationSettings, ICultureMetadataManager cultureMetadataManager)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: The target culture
    - id: autoLocalizationSettings
      type: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
      description: "Contains the <xref href=\"Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings\" data-throw-if-not-resolved=\"false\"></xref> to use for some token types. May be null, \nin which case default settings will be used."
    - id: cultureMetadataManager
      type: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the token text has been changed, and <code>false</code> otherwise
    content.vb: Public Overridable Function LocalizeAsync(culture As CultureInfo, autoLocalizationSettings As AutoLocalizationSettings, cultureMetadataManager As ICultureMetadataManager) As Task(Of Boolean)
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.LocalizeAsync*
  implements:
  - Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  id: LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: LocalizeAsync(CultureInfo, AutoLocalizationSettings, ILocalizableToken, Boolean, ICultureMetadataManager)
  nameWithType: DateTimeToken.LocalizeAsync(CultureInfo, AutoLocalizationSettings, ILocalizableToken, Boolean, ICultureMetadataManager)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.LocalizeAsync(System.Globalization.CultureInfo, Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings, Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken, System.Boolean, Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nAuto-localizes the token according to the settings of the specified target culture \nand the provided auto-localization settings. The text of the token will be changed, \nbut not the values.\n<p>\nFor some token types, special <xref href=\"Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings\" data-throw-if-not-resolved=\"false\"></xref> will be used, if provided.\n</p>\n"
  syntax:
    content: public virtual Task<bool> LocalizeAsync(CultureInfo culture, AutoLocalizationSettings autoLocalizationSettings, ILocalizableToken originalMemoryToken, bool adjustCasing, ICultureMetadataManager cultureMetadataManager)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: The target culture
    - id: autoLocalizationSettings
      type: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
      description: "Contains the <xref href=\"Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings\" data-throw-if-not-resolved=\"false\"></xref> to use for some token types. May be null, \nin which case default settings will be used."
    - id: originalMemoryToken
      type: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
      description: "The original memory token. Some auto-localization settings will \nbe derived from the token, if provided."
    - id: adjustCasing
      type: System.Boolean
      description: >-
        If true, it is assumed that the token is in segment-initial position. Then, casing

        will be adjusted if the original memory token is supplied as well.
    - id: cultureMetadataManager
      type: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the token text has been changed, and <code>false</code> otherwise
    content.vb: Public Overridable Function LocalizeAsync(culture As CultureInfo, autoLocalizationSettings As AutoLocalizationSettings, originalMemoryToken As ILocalizableToken, adjustCasing As Boolean, cultureMetadataManager As ICultureMetadataManager) As Task(Of Boolean)
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.LocalizeAsync*
  implements:
  - Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.GetTokenType
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.GetTokenType
  id: GetTokenType
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: GetTokenType()
  nameWithType: DateTimeToken.GetTokenType()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.GetTokenType()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\n<xref href=\"Sdl.LanguagePlatform.Core.Tokenization.Token.Type\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: protected override TokenType GetTokenType()
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    content.vb: Protected Overrides Function GetTokenType As TokenType
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.GetTokenType*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Equals(System.Object)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: DateTimeToken.Equals(Object)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Equals(System.Object)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\n<xref href=\"System.Object.Equals(object)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: >
        true if the specified object is equal to the current object;

        otherwise, false.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.GetHashCode
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.GetHashCode
  id: GetHashCode
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: DateTimeToken.GetHashCode()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.GetHashCode()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\n<xref href=\"System.Object.GetHashCode(object)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  id: AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: AcceptSegmentElementVisitor(ISegmentElementVisitor)
  nameWithType: DateTimeToken.AcceptSegmentElementVisitor(ISegmentElementVisitor)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nVisitor pattern implementation. Calls <xref href=\"Sdl.LanguagePlatform.Core.ISegmentElementVisitor.VisitDateTimeToken(Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public override void AcceptSegmentElementVisitor(ISegmentElementVisitor visitor)
    parameters:
    - id: visitor
      type: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
      description: The visitor instance
    content.vb: Public Overrides Sub AcceptSegmentElementVisitor(visitor As ISegmentElementVisitor)
  overridden: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.AcceptSegmentElementVisitor*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings)
  id: Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings)
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: Localize(CultureInfo, AutoLocalizationSettings)
  nameWithType: DateTimeToken.Localize(CultureInfo, AutoLocalizationSettings)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Localize(System.Globalization.CultureInfo, Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nSee <xref href=\"Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.LocalizeAsync(System.Globalization.CultureInfo%2cSdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings%2cSdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public bool Localize(CultureInfo culture, AutoLocalizationSettings autoLocalizationSettings)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
    - id: autoLocalizationSettings
      type: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    return:
      type: System.Boolean
    content.vb: Public Function Localize(culture As CultureInfo, autoLocalizationSettings As AutoLocalizationSettings) As Boolean
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Localize*
  implements:
  - Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean)
  id: Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: Localize(CultureInfo, AutoLocalizationSettings, ILocalizableToken, Boolean)
  nameWithType: DateTimeToken.Localize(CultureInfo, AutoLocalizationSettings, ILocalizableToken, Boolean)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Localize(System.Globalization.CultureInfo, Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings, Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken, System.Boolean)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nSee <xref href=\"Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.LocalizeAsync(System.Globalization.CultureInfo%2cSdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings%2cSdl.LanguagePlatform.Core.Tokenization.ILocalizableToken%2cSystem.Boolean%2cSdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public bool Localize(CultureInfo culture, AutoLocalizationSettings autoLocalizationSettings, ILocalizableToken originalMemoryToken, bool adjustCasing)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
    - id: autoLocalizationSettings
      type: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    - id: originalMemoryToken
      type: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
    - id: adjustCasing
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function Localize(culture As CultureInfo, autoLocalizationSettings As AutoLocalizationSettings, originalMemoryToken As ILocalizableToken, adjustCasing As Boolean) As Boolean
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Localize*
  implements:
  - Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.DateTimePatternType
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.DateTimePatternType
  id: DateTimePatternType
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: DateTimePatternType
  nameWithType: DateTimeToken.DateTimePatternType
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.DateTimePatternType
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets or sets the pattern type\n"
  syntax:
    content: public DateTimePatternType DateTimePatternType { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType
    content.vb: Public Property DateTimePatternType As DateTimePatternType
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.DateTimePatternType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.FormatString
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.FormatString
  id: FormatString
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: FormatString
  nameWithType: DateTimeToken.FormatString
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.FormatString
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets or sets the format string corresponding to the text representation of this date value, if available.\nSee <a href=\"https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings\">https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings</a>\n"
  syntax:
    content: public string FormatString { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FormatString As String
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.FormatString*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Value
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Value
  id: Value
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: DateTimeToken.Value
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Value
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets or sets the value\n"
  syntax:
    content: public DateTime Value { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property Value As Date
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsPlaceable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsPlaceable
  id: IsPlaceable
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: IsPlaceable
  nameWithType: DateTimeToken.IsPlaceable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsPlaceable
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\n<xref href=\"Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable\" data-throw-if-not-resolved=\"false\"></xref>. Always <code>true</code> for this class.\n"
  syntax:
    content: public override bool IsPlaceable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsPlaceable As Boolean
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsPlaceable*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsSubstitutable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsSubstitutable
  id: IsSubstitutable
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: IsSubstitutable
  nameWithType: DateTimeToken.IsSubstitutable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsSubstitutable
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\n<xref href=\"Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable\" data-throw-if-not-resolved=\"false\"></xref>. Always <code>true</code> for this class.\n"
  syntax:
    content: public override bool IsSubstitutable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsSubstitutable As Boolean
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsSubstitutable*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsDateToken
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsDateToken
  id: IsDateToken
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: IsDateToken
  nameWithType: DateTimeToken.IsDateToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsDateToken
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets a value to indicate whether this token represents a date or not.\n"
  syntax:
    content: public bool IsDateToken { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDateToken As Boolean
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsDateToken*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsTimeToken
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsTimeToken
  id: IsTimeToken
  parent: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  langs:
  - csharp
  - vb
  name: IsTimeToken
  nameWithType: DateTimeToken.IsTimeToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsTimeToken
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets a value to indicate whether this token represents a time or not.\n"
  syntax:
    content: public bool IsTimeToken { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTimeToken As Boolean
  overload: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsTimeToken*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.Core.Tokenization
  commentId: N:Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Sdl.LanguagePlatform.Core.Tokenization
  nameWithType: Sdl.LanguagePlatform.Core.Tokenization
  fullName: Sdl.LanguagePlatform.Core.Tokenization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.LanguagePlatform.Core.SegmentElement
  commentId: T:Sdl.LanguagePlatform.Core.SegmentElement
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: SegmentElement
  nameWithType: SegmentElement
  fullName: Sdl.LanguagePlatform.Core.SegmentElement
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.Token
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Token
  nameWithType: Token
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token
- uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: ILocalizableToken
  nameWithType: ILocalizableToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: SetTokenType(TokenType)
  nameWithType: Token.SetTokenType(TokenType)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
    name: SetTokenType
    nameWithType: Token.SetTokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    name: TokenType
    nameWithType: TokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
    name: SetTokenType
    nameWithType: Token.SetTokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    name: TokenType
    nameWithType: TokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: GetWeakHashCode()
  nameWithType: Token.GetWeakHashCode()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    name: GetWeakHashCode
    nameWithType: Token.GetWeakHashCode
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    name: GetWeakHashCode
    nameWithType: Token.GetWeakHashCode
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: GetBundleSimilarity(SegmentElement)
  nameWithType: Token.GetBundleSimilarity(SegmentElement)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetBundleSimilarity
    nameWithType: Token.GetBundleSimilarity
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetBundleSimilarity
    nameWithType: Token.GetBundleSimilarity
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: GetIdentityStringAsync()
  nameWithType: Token.GetIdentityStringAsync()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
    name: GetIdentityStringAsync
    nameWithType: Token.GetIdentityStringAsync
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
    name: GetIdentityStringAsync
    nameWithType: Token.GetIdentityStringAsync
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: TokenizationContext
  nameWithType: Token.TokenizationContext
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Text
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Text
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Text
  nameWithType: Token.Text
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Text
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Span
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Span
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Span
  nameWithType: Token.Span
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Span
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Type
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Type
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Type
  nameWithType: Token.Type
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Type
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsWord
  nameWithType: Token.IsWord
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsPunctuation
  nameWithType: Token.IsPunctuation
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsWhitespace
  nameWithType: Token.IsWhitespace
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Culture
  nameWithType: Token.Culture
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: GetSimilarity(SegmentElement)
  nameWithType: SegmentElement.GetSimilarity(SegmentElement)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: GetSimilarity(SegmentElement, Boolean)
  nameWithType: SegmentElement.GetSimilarity(SegmentElement, Boolean)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement, System.Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: GetSimilarityAsync(SegmentElement)
  nameWithType: SegmentElement.GetSimilarityAsync(SegmentElement)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarityAsync
    nameWithType: SegmentElement.GetSimilarityAsync
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarityAsync
    nameWithType: SegmentElement.GetSimilarityAsync
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: GetSimilarityAsync(SegmentElement, Boolean)
  nameWithType: SegmentElement.GetSimilarityAsync(SegmentElement, Boolean)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement, System.Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarityAsync
    nameWithType: SegmentElement.GetSimilarityAsync
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarityAsync
    nameWithType: SegmentElement.GetSimilarityAsync
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.#ctor
  isExternal: true
  name: DateTimeToken
  nameWithType: DateTimeToken.DateTimeToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.DateTimeToken
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: DateTimeToken
  nameWithType: DateTimeToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: DateTimePatternType
  nameWithType: DateTimePatternType
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.SetValue*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.SetValue
  isExternal: true
  name: SetValue
  nameWithType: DateTimeToken.SetValue
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.SetValue
- uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.SetValue(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.SetValue(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
  isExternal: true
  name: SetValue(Token, Boolean)
  nameWithType: ILocalizableToken.SetValue(Token, Boolean)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.SetValue(Sdl.LanguagePlatform.Core.Tokenization.Token, System.Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.SetValue(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Boolean)
    name: SetValue
    nameWithType: ILocalizableToken.SetValue
    fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.SetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token
    name: Token
    nameWithType: Token
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.SetValue(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Boolean)
    name: SetValue
    nameWithType: ILocalizableToken.SetValue
    fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.SetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token
    name: Token
    nameWithType: Token
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: Duplicate()
  nameWithType: SegmentElement.Duplicate()
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    name: Duplicate
    nameWithType: SegmentElement.Duplicate
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    name: Duplicate
    nameWithType: SegmentElement.Duplicate
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Duplicate*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Duplicate
  isExternal: true
  name: Duplicate
  nameWithType: DateTimeToken.Duplicate
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Duplicate
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.LocalizeAsync*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.LocalizeAsync
  isExternal: true
  name: LocalizeAsync
  nameWithType: DateTimeToken.LocalizeAsync
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.LocalizeAsync
- uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  parent: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
  isExternal: true
  name: LocalizeAsync(CultureInfo, AutoLocalizationSettings, ICultureMetadataManager)
  nameWithType: ILocalizableToken.LocalizeAsync(CultureInfo, AutoLocalizationSettings, ICultureMetadataManager)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.LocalizeAsync(System.Globalization.CultureInfo, Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings, Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
    name: LocalizeAsync
    nameWithType: ILocalizableToken.LocalizeAsync
    fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.LocalizeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    name: AutoLocalizationSettings
    nameWithType: AutoLocalizationSettings
    fullName: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
    name: ICultureMetadataManager
    nameWithType: ICultureMetadataManager
    fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
    name: LocalizeAsync
    nameWithType: ILocalizableToken.LocalizeAsync
    fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.LocalizeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    name: AutoLocalizationSettings
    nameWithType: AutoLocalizationSettings
    fullName: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
    name: ICultureMetadataManager
    nameWithType: ICultureMetadataManager
    fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: AutoLocalizationSettings
  nameWithType: AutoLocalizationSettings
  fullName: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  isExternal: true
  name: ICultureMetadataManager
  nameWithType: ICultureMetadataManager
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  parent: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
  isExternal: true
  name: LocalizeAsync(CultureInfo, AutoLocalizationSettings, ILocalizableToken, Boolean, ICultureMetadataManager)
  nameWithType: ILocalizableToken.LocalizeAsync(CultureInfo, AutoLocalizationSettings, ILocalizableToken, Boolean, ICultureMetadataManager)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.LocalizeAsync(System.Globalization.CultureInfo, Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings, Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken, System.Boolean, Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
    name: LocalizeAsync
    nameWithType: ILocalizableToken.LocalizeAsync
    fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.LocalizeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    name: AutoLocalizationSettings
    nameWithType: AutoLocalizationSettings
    fullName: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
    name: ILocalizableToken
    nameWithType: ILocalizableToken
    fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
    name: ICultureMetadataManager
    nameWithType: ICultureMetadataManager
    fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.LocalizeAsync(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
    name: LocalizeAsync
    nameWithType: ILocalizableToken.LocalizeAsync
    fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.LocalizeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    name: AutoLocalizationSettings
    nameWithType: AutoLocalizationSettings
    fullName: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
    name: ILocalizableToken
    nameWithType: ILocalizableToken
    fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
    name: ICultureMetadataManager
    nameWithType: ICultureMetadataManager
    fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: GetTokenType()
  nameWithType: Token.GetTokenType()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
    name: GetTokenType
    nameWithType: Token.GetTokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
    name: GetTokenType
    nameWithType: Token.GetTokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.GetTokenType*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.GetTokenType
  isExternal: true
  name: GetTokenType
  nameWithType: DateTimeToken.GetTokenType
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.GetTokenType
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenType
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.TokenType
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: TokenType
  nameWithType: TokenType
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenType
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Equals(Object)
  nameWithType: Token.Equals(Object)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
    name: Equals
    nameWithType: Token.Equals
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
    name: Equals
    nameWithType: Token.Equals
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Equals*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Equals
  isExternal: true
  name: Equals
  nameWithType: DateTimeToken.Equals
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Equals
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: GetHashCode()
  nameWithType: Token.GetHashCode()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
    name: GetHashCode
    nameWithType: Token.GetHashCode
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
    name: GetHashCode
    nameWithType: Token.GetHashCode
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.GetHashCode*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: DateTimeToken.GetHashCode
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: AcceptSegmentElementVisitor(ISegmentElementVisitor)
  nameWithType: SegmentElement.AcceptSegmentElementVisitor(ISegmentElementVisitor)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
    name: AcceptSegmentElementVisitor
    nameWithType: SegmentElement.AcceptSegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    name: ISegmentElementVisitor
    nameWithType: ISegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
    name: AcceptSegmentElementVisitor
    nameWithType: SegmentElement.AcceptSegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    name: ISegmentElementVisitor
    nameWithType: ISegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.AcceptSegmentElementVisitor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.AcceptSegmentElementVisitor
  isExternal: true
  name: AcceptSegmentElementVisitor
  nameWithType: DateTimeToken.AcceptSegmentElementVisitor
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.AcceptSegmentElementVisitor
- uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
  commentId: T:Sdl.LanguagePlatform.Core.ISegmentElementVisitor
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: ISegmentElementVisitor
  nameWithType: ISegmentElementVisitor
  fullName: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Localize*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Localize
  isExternal: true
  name: Localize
  nameWithType: DateTimeToken.Localize
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Localize
- uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings)
  parent: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
  isExternal: true
  name: Localize(CultureInfo, AutoLocalizationSettings)
  nameWithType: ILocalizableToken.Localize(CultureInfo, AutoLocalizationSettings)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.Localize(System.Globalization.CultureInfo, Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings)
    name: Localize
    nameWithType: ILocalizableToken.Localize
    fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.Localize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    name: AutoLocalizationSettings
    nameWithType: AutoLocalizationSettings
    fullName: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings)
    name: Localize
    nameWithType: ILocalizableToken.Localize
    fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.Localize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    name: AutoLocalizationSettings
    nameWithType: AutoLocalizationSettings
    fullName: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
  isExternal: true
  name: Localize(CultureInfo, AutoLocalizationSettings, ILocalizableToken, Boolean)
  nameWithType: ILocalizableToken.Localize(CultureInfo, AutoLocalizationSettings, ILocalizableToken, Boolean)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.Localize(System.Globalization.CultureInfo, Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings, Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken, System.Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean)
    name: Localize
    nameWithType: ILocalizableToken.Localize
    fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.Localize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    name: AutoLocalizationSettings
    nameWithType: AutoLocalizationSettings
    fullName: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
    name: ILocalizableToken
    nameWithType: ILocalizableToken
    fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.Localize(System.Globalization.CultureInfo,Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings,Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken,System.Boolean)
    name: Localize
    nameWithType: ILocalizableToken.Localize
    fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken.Localize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    name: AutoLocalizationSettings
    nameWithType: AutoLocalizationSettings
    fullName: Sdl.LanguagePlatform.Core.Tokenization.AutoLocalizationSettings
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
    name: ILocalizableToken
    nameWithType: ILocalizableToken
    fullName: Sdl.LanguagePlatform.Core.Tokenization.ILocalizableToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.DateTimePatternType*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.DateTimePatternType
  isExternal: true
  name: DateTimePatternType
  nameWithType: DateTimeToken.DateTimePatternType
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.DateTimePatternType
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.FormatString*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.FormatString
  isExternal: true
  name: FormatString
  nameWithType: DateTimeToken.FormatString
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.FormatString
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Value*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Value
  isExternal: true
  name: Value
  nameWithType: DateTimeToken.Value
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.Value
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsPlaceable
  nameWithType: Token.IsPlaceable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsPlaceable*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsPlaceable
  isExternal: true
  name: IsPlaceable
  nameWithType: DateTimeToken.IsPlaceable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsPlaceable
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsSubstitutable
  nameWithType: Token.IsSubstitutable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsSubstitutable*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsSubstitutable
  isExternal: true
  name: IsSubstitutable
  nameWithType: DateTimeToken.IsSubstitutable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsSubstitutable
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsDateToken*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsDateToken
  isExternal: true
  name: IsDateToken
  nameWithType: DateTimeToken.IsDateToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsDateToken
- uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsTimeToken*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsTimeToken
  isExternal: true
  name: IsTimeToken
  nameWithType: DateTimeToken.IsTimeToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimeToken.IsTimeToken
