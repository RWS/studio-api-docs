### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty
  id: AppliedPenalty
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.#ctor(Sdl.LanguagePlatform.TranslationMemory.PenaltyType,System.Int32)
  - Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.#ctor(System.String,System.Int32)
  - Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.FilterName
  - Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.Malus
  - Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.Type
  langs:
  - csharp
  - vb
  name: AppliedPenalty
  nameWithType: AppliedPenalty
  fullName: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nRepresents the penalty applied to a search result.\n"
  syntax:
    content: public class AppliedPenalty
    content.vb: Public Class AppliedPenalty
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.Type
  commentId: F:Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.Type
  id: Type
  parent: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: AppliedPenalty.Type
  fullName: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.Type
  type: Field
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the penalty type.\n"
  syntax:
    content: public PenaltyType Type
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.PenaltyType
    content.vb: Public Type As PenaltyType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.FilterName
  commentId: F:Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.FilterName
  id: FilterName
  parent: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty
  langs:
  - csharp
  - vb
  name: FilterName
  nameWithType: AppliedPenalty.FilterName
  fullName: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.FilterName
  type: Field
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the filter name. Default value: null.\n"
  syntax:
    content: public string FilterName
    return:
      type: System.String
    content.vb: Public FilterName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.Malus
  commentId: F:Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.Malus
  id: Malus
  parent: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty
  langs:
  - csharp
  - vb
  name: Malus
  nameWithType: AppliedPenalty.Malus
  fullName: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.Malus
  type: Field
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the penalty cost. Default value: 0.\n"
  syntax:
    content: public int Malus
    return:
      type: System.Int32
    content.vb: Public Malus As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.#ctor(Sdl.LanguagePlatform.TranslationMemory.PenaltyType,System.Int32)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.#ctor(Sdl.LanguagePlatform.TranslationMemory.PenaltyType,System.Int32)
  id: '#ctor(Sdl.LanguagePlatform.TranslationMemory.PenaltyType,System.Int32)'
  parent: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty
  langs:
  - csharp
  - vb
  name: AppliedPenalty(PenaltyType, Int32)
  nameWithType: AppliedPenalty.AppliedPenalty(PenaltyType, Int32)
  fullName: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.AppliedPenalty(Sdl.LanguagePlatform.TranslationMemory.PenaltyType, System.Int32)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance of the AppliedPenalty class with the specified type and cost.\n"
  syntax:
    content: public AppliedPenalty(PenaltyType pt, int malus)
    parameters:
    - id: pt
      type: Sdl.LanguagePlatform.TranslationMemory.PenaltyType
      description: The penalty type.
    - id: malus
      type: System.Int32
      description: The penalty cost.
    content.vb: Public Sub New(pt As PenaltyType, malus As Integer)
  overload: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.#ctor(System.String,System.Int32)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty
  langs:
  - csharp
  - vb
  name: AppliedPenalty(String, Int32)
  nameWithType: AppliedPenalty.AppliedPenalty(String, Int32)
  fullName: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.AppliedPenalty(System.String, System.Int32)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance of the AppliedPenalty class with the specified filter name and cost.\n"
  syntax:
    content: public AppliedPenalty(string filterName, int malus)
    parameters:
    - id: filterName
      type: System.String
      description: The filter name.
    - id: malus
      type: System.Int32
      description: The penalty cost.
    content.vb: Public Sub New(filterName As String, malus As Integer)
  overload: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory.PenaltyType
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.PenaltyType
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: PenaltyType
  nameWithType: PenaltyType
  fullName: Sdl.LanguagePlatform.TranslationMemory.PenaltyType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.#ctor
  isExternal: true
  name: AppliedPenalty
  nameWithType: AppliedPenalty.AppliedPenalty
  fullName: Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.AppliedPenalty
