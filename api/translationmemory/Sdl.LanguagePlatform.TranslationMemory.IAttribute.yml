### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.IAttribute
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.IAttribute
  id: IAttribute
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.IAttribute.Guid
  - Sdl.LanguagePlatform.TranslationMemory.IAttribute.Name
  - Sdl.LanguagePlatform.TranslationMemory.IAttribute.Picklist
  - Sdl.LanguagePlatform.TranslationMemory.IAttribute.Type
  langs:
  - csharp
  - vb
  name: IAttribute
  nameWithType: IAttribute
  fullName: Sdl.LanguagePlatform.TranslationMemory.IAttribute
  type: Interface
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nAttribute data, V2 schema.\n"
  syntax:
    content: public interface IAttribute
    content.vb: Public Interface IAttribute
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Guid
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.IAttribute.Guid
  id: Guid
  parent: Sdl.LanguagePlatform.TranslationMemory.IAttribute
  langs:
  - csharp
  - vb
  name: Guid
  nameWithType: IAttribute.Guid
  fullName: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Guid
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGuid\n"
  syntax:
    content: Guid Guid { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: ReadOnly Property Guid As Guid
  overload: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Guid*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Name
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.IAttribute.Name
  id: Name
  parent: Sdl.LanguagePlatform.TranslationMemory.IAttribute
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IAttribute.Name
  fullName: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Name
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the field name.\n"
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Type
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.IAttribute.Type
  id: Type
  parent: Sdl.LanguagePlatform.TranslationMemory.IAttribute
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: IAttribute.Type
  fullName: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Type
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the field value type.\n"
  syntax:
    content: FieldValueType Type { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
    content.vb: ReadOnly Property Type As FieldValueType
  overload: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Type*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Picklist
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.IAttribute.Picklist
  id: Picklist
  parent: Sdl.LanguagePlatform.TranslationMemory.IAttribute
  langs:
  - csharp
  - vb
  name: Picklist
  nameWithType: IAttribute.Picklist
  fullName: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Picklist
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nThe names of all picklist items for this Field. This collection will be empty if this field is not a \n<xref href=\"Sdl.LanguagePlatform.TranslationMemory.FieldValueType.SinglePicklist\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Sdl.LanguagePlatform.TranslationMemory.FieldValueType.MultiplePicklist\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: IReadOnlyCollection<IPicklistOption> Picklist { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{Sdl.LanguagePlatform.TranslationMemory.IPicklistOption}
    content.vb: ReadOnly Property Picklist As IReadOnlyCollection(Of IPicklistOption)
  overload: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Picklist*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Guid*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.IAttribute.Guid
  isExternal: true
  name: Guid
  nameWithType: IAttribute.Guid
  fullName: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Guid
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Name*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.IAttribute.Name
  isExternal: true
  name: Name
  nameWithType: IAttribute.Name
  fullName: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Type*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.IAttribute.Type
  isExternal: true
  name: Type
  nameWithType: IAttribute.Type
  fullName: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Type
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldValueType
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldValueType
  nameWithType: FieldValueType
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
- uid: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Picklist*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.IAttribute.Picklist
  isExternal: true
  name: Picklist
  nameWithType: IAttribute.Picklist
  fullName: Sdl.LanguagePlatform.TranslationMemory.IAttribute.Picklist
- uid: System.Collections.Generic.IReadOnlyCollection{Sdl.LanguagePlatform.TranslationMemory.IPicklistOption}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Sdl.LanguagePlatform.TranslationMemory.IPicklistOption}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<IPicklistOption>
  nameWithType: IReadOnlyCollection<IPicklistOption>
  fullName: System.Collections.Generic.IReadOnlyCollection<Sdl.LanguagePlatform.TranslationMemory.IPicklistOption>
  nameWithType.vb: IReadOnlyCollection(Of IPicklistOption)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Sdl.LanguagePlatform.TranslationMemory.IPicklistOption)
  name.vb: IReadOnlyCollection(Of IPicklistOption)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.IPicklistOption
    name: IPicklistOption
    nameWithType: IPicklistOption
    fullName: Sdl.LanguagePlatform.TranslationMemory.IPicklistOption
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.IPicklistOption
    name: IPicklistOption
    nameWithType: IPicklistOption
    fullName: Sdl.LanguagePlatform.TranslationMemory.IPicklistOption
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
