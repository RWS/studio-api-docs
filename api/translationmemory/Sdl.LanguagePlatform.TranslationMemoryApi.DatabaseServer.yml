### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  id: DatabaseServer
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.#ctor(Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderServer)
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.AuthenticationType
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Containers
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Delete(System.Boolean)
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Description
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Equals(Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer)
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Equals(System.Object)
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.GetHashCode
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.HasPermission(System.String)
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Id
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsDeleted
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsDirty
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsNewObject
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.LinkedResourceGroupPaths
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Name
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupDescription
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupName
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupPath
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Password
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.PropertyChanged
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Save
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ServerName
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ServerType
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.TranslationProviderServer
  - Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.UserName
  langs:
  - csharp
  - vb
  name: DatabaseServer
  nameWithType: DatabaseServer
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nRepresents a database server known in the system, which can serve as the host for one or more\ntranslation memory containers (<xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryContainer\" data-throw-if-not-resolved=\"false\"></xref>). A translation memory\ncontainer is a database that contains one or more server-based\ntranslation memories. \n"
  syntax:
    content: 'public class DatabaseServer : IEquatable<DatabaseServer>, IPermissionCheck'
    content.vb: >-
      Public Class DatabaseServer
          Implements IEquatable(Of DatabaseServer), IPermissionCheck
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.IEditableObject
  - System.ComponentModel.INotifyPropertyChanged
  - System.IEquatable{Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer}
  - Sdl.LanguagePlatform.TranslationMemoryApi.IPermissionCheck
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.#ctor(Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderServer)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.#ctor(Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderServer)
  id: '#ctor(Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderServer)'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: DatabaseServer(TranslationProviderServer)
  nameWithType: DatabaseServer.DatabaseServer(TranslationProviderServer)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.DatabaseServer(Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderServer)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCreates a new database server. Note that you have to call <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Save\" data-throw-if-not-resolved=\"false\"></xref> to \npersist the database server object, after setting all the required properties.\n"
  syntax:
    content: public DatabaseServer(TranslationProviderServer server)
    parameters:
    - id: server
      type: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderServer
      description: The translation provider server with which the database server should be registered.
    content.vb: Public Sub New(server As TranslationProviderServer)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code data-dev-comment-type="paramref" class="paramref">server</code> is null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Delete(System.Boolean)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Delete(System.Boolean)
  id: Delete(System.Boolean)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: Delete(Boolean)
  nameWithType: DatabaseServer.Delete(Boolean)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Delete(System.Boolean)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nDeletes this database server and all its containers from the system. \n<param name=\"deleteContainerDatabases\">Whether to delete the physical container databases.</param>\n"
  syntax:
    content: public void Delete(bool deleteContainerDatabases)
    parameters:
    - id: deleteContainerDatabases
      type: System.Boolean
    content.vb: Public Sub Delete(deleteContainerDatabases As Boolean)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Delete*
  exceptions:
  - type: Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    description: Thrown when this object has already been deleted.
  - type: Sdl.LanguagePlatform.TranslationMemoryApi.ObjectNotSavedException
    commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ObjectNotSavedException
    description: Thrown when this object has not been initially saved yet.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Save
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Save
  id: Save
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: DatabaseServer.Save()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Save()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nSaves this database server.\n"
  syntax:
    content: public void Save()
    content.vb: Public Sub Save
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Save*
  exceptions:
  - type: Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    description: Thrown when this object has already been deleted.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.HasPermission(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.HasPermission(System.String)
  id: HasPermission(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: HasPermission(String)
  nameWithType: DatabaseServer.HasPermission(String)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.HasPermission(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets whether this object has the permission with the specified name.\n"
  syntax:
    content: public bool HasPermission(string permission)
    parameters:
    - id: permission
      type: System.String
      description: The permission name.
    return:
      type: System.Boolean
      description: "\n<pre><code>true</code></pre> is the object has the specified permission.\n"
    content.vb: Public Function HasPermission(permission As String) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.HasPermission*
  implements:
  - Sdl.LanguagePlatform.TranslationMemoryApi.IPermissionCheck.HasPermission(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Equals(Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Equals(Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer)
  id: Equals(Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: Equals(DatabaseServer)
  nameWithType: DatabaseServer.Equals(DatabaseServer)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Equals(Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nIndicates whether the current object is equal to another object of the same type.\n"
  syntax:
    content: public bool Equals(DatabaseServer other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: "\ntrue if the current object is equal to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">other</code> parameter; otherwise, false.\n"
    content.vb: Public Function Equals(other As DatabaseServer) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Equals*
  implements:
  - System.IEquatable{Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer}.Equals(Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Equals(System.Object)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: DatabaseServer.Equals(Object)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Equals(System.Object)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to this instance.\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with this instance.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to this instance; otherwise, <code>false</code>.\n"
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Equals*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: "\nThe <code data-dev-comment-type=\"paramref\" class=\"paramref\">obj</code> parameter is null.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.GetHashCode
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.GetHashCode
  id: GetHashCode
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: DatabaseServer.GetHashCode()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.GetHashCode()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nReturns a hash code for this instance.\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: "\nA hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. \n"
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.TranslationProviderServer
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.TranslationProviderServer
  id: TranslationProviderServer
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: TranslationProviderServer
  nameWithType: DatabaseServer.TranslationProviderServer
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.TranslationProviderServer
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets the translation provider server on which this database server is registered.\n"
  syntax:
    content: public TranslationProviderServer TranslationProviderServer { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderServer
    content.vb: Public ReadOnly Property TranslationProviderServer As TranslationProviderServer
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.TranslationProviderServer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Id
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Id
  id: Id
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: DatabaseServer.Id
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Id
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets the unique Id for this database server.\n"
  remarks: This is auto-generated by the system when the database server is created.
  syntax:
    content: public Guid Id { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public ReadOnly Property Id As Guid
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Id*
  exceptions:
  - type: Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    description: Thrown when trying to get the unique ID of an entity that no longer exists.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Name
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Name
  id: Name
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: DatabaseServer.Name
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Name
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the friendly name of the database server.\n"
  remarks: Note that you have to call <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Save" data-throw-if-not-resolved="false"></xref> to persists the change after setting this property.
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Name*
  exceptions:
  - type: Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    description: Thrown when trying to get or set name of an entity that no longer exists.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Description
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Description
  id: Description
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: DatabaseServer.Description
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Description
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the description of the database server.\n"
  remarks: Note that you have to call <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Save" data-throw-if-not-resolved="false"></xref> to persists the change after setting this property.
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Description*
  exceptions:
  - type: Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    description: Thrown when trying to get/set description of an entity that no longer exists.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ServerName
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ServerName
  id: ServerName
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: ServerName
  nameWithType: DatabaseServer.ServerName
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ServerName
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the DNS name or IP address of this database server.\n"
  remarks: This property can not be changed after the database server has been created.
  syntax:
    content: public string ServerName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ServerName As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ServerName*
  exceptions:
  - type: Sdl.LanguagePlatform.TranslationMemoryApi.NullPropertyException
    commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.NullPropertyException
    description: Thrown when trying to set this property to null or an empty string.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown when trying to set this property after initial creation of the database server.
  - type: Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    description: Thrown when trying to get/set ServerName of an entity that no longer exists.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ServerType
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ServerType
  id: ServerType
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: ServerType
  nameWithType: DatabaseServer.ServerType
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ServerType
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the database server type.\n"
  remarks: This property can not be changed after the database server has been created.
  syntax:
    content: public DatabaseServerType ServerType { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServerType
    content.vb: Public Property ServerType As DatabaseServerType
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ServerType*
  exceptions:
  - type: Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    description: Thrown when trying to set ServerType of an entity that no longer exists.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown when trying to set this property after initial creation of the database server.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.AuthenticationType
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.AuthenticationType
  id: AuthenticationType
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: AuthenticationType
  nameWithType: DatabaseServer.AuthenticationType
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.AuthenticationType
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the type of authentication that is used when the application server communicates with this database server.\n"
  syntax:
    content: public DatabaseServerAuthenticationType AuthenticationType { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServerAuthenticationType
    content.vb: Public Property AuthenticationType As DatabaseServerAuthenticationType
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.AuthenticationType*
  exceptions:
  - type: Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    description: Thrown when trying to set AuthenticationType of an entity that no longer exists.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.UserName
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.UserName
  id: UserName
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: DatabaseServer.UserName
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.UserName
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the user name used for authentication together with the password specified in <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Password\" data-throw-if-not-resolved=\"false\"></xref> when the application server communicates with this database server.\n"
  remarks: The user name is only used when <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.AuthenticationType" data-throw-if-not-resolved="false"></xref> is set to <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServerAuthenticationType.Database" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserName As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.UserName*
  exceptions:
  - type: Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    description: Thrown when trying to set UserName of an entity that no longer exists.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Password
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Password
  id: Password
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: DatabaseServer.Password
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Password
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the password for the user name specified in <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.UserName\" data-throw-if-not-resolved=\"false\"></xref> that is used for authentication when the application server communicates with this database server.\n"
  remarks: The password is only used when <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.AuthenticationType" data-throw-if-not-resolved="false"></xref> is set to <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServerAuthenticationType.Database" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Password As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Password*
  exceptions:
  - type: Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    description: Thrown when trying to set Password of an entity that no longer exists.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Containers
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Containers
  id: Containers
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: Containers
  nameWithType: DatabaseServer.Containers
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Containers
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets all the translation memory containers that are hosted on this database server.\n"
  remarks: >-
    If the list of containers has been pre-loaded, the in-memory collection of containers is returned, otherwise

    the list of containers is retrieved from the server on-demand.
  syntax:
    content: public ReadOnlyCollection<TranslationMemoryContainer> Containers { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryContainer}
    content.vb: Public ReadOnly Property Containers As ReadOnlyCollection(Of TranslationMemoryContainer)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Containers*
  exceptions:
  - type: Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
    description: Thrown when this object has already been deleted.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupPath
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupPath
  id: ParentResourceGroupPath
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: ParentResourceGroupPath
  nameWithType: DatabaseServer.ParentResourceGroupPath
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupPath
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets the parent resource group path.\n"
  syntax:
    content: public string ParentResourceGroupPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ParentResourceGroupPath As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupPath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupName
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupName
  id: ParentResourceGroupName
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: ParentResourceGroupName
  nameWithType: DatabaseServer.ParentResourceGroupName
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupName
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the parent resource group name.\n"
  syntax:
    content: public string ParentResourceGroupName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ParentResourceGroupName As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupDescription
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupDescription
  id: ParentResourceGroupDescription
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: ParentResourceGroupDescription
  nameWithType: DatabaseServer.ParentResourceGroupDescription
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupDescription
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets the parent resource group description.\n"
  syntax:
    content: public string ParentResourceGroupDescription { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ParentResourceGroupDescription As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupDescription*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.LinkedResourceGroupPaths
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.LinkedResourceGroupPaths
  id: LinkedResourceGroupPaths
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: LinkedResourceGroupPaths
  nameWithType: DatabaseServer.LinkedResourceGroupPaths
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.LinkedResourceGroupPaths
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the collection of paths for the linked resource groups.\n"
  syntax:
    content: public string[] LinkedResourceGroupPaths { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property LinkedResourceGroupPaths As String()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.LinkedResourceGroupPaths*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsDirty
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsDirty
  id: IsDirty
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: IsDirty
  nameWithType: DatabaseServer.IsDirty
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsDirty
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nReturns <pre><code>true</code></pre> if this database server has unsaved changes.\n"
  syntax:
    content: public bool IsDirty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDirty As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsDirty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsDeleted
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsDeleted
  id: IsDeleted
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: IsDeleted
  nameWithType: DatabaseServer.IsDeleted
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsDeleted
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nReturns <pre><code>true</code></pre> if this translation memory has been deleted.\n"
  syntax:
    content: public bool IsDeleted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDeleted As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsDeleted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsNewObject
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsNewObject
  id: IsNewObject
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: IsNewObject
  nameWithType: DatabaseServer.IsNewObject
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsNewObject
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a value indicating whether this instance is new object.\n"
  syntax:
    content: public bool IsNewObject { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is new object; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsNewObject As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsNewObject*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.PropertyChanged
  commentId: E:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.PropertyChanged
  id: PropertyChanged
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: DatabaseServer.PropertyChanged
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.PropertyChanged
  type: Event
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nOccurs when a property value changes.\n"
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.IEditableObject
  isExternal: true
  name: IEditableObject
  nameWithType: IEditableObject
  fullName: System.ComponentModel.IEditableObject
- uid: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.IEquatable{Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer}
  commentId: T:System.IEquatable{Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<DatabaseServer>
  nameWithType: IEquatable<DatabaseServer>
  fullName: System.IEquatable<Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer>
  nameWithType.vb: IEquatable(Of DatabaseServer)
  fullName.vb: System.IEquatable(Of Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer)
  name.vb: IEquatable(Of DatabaseServer)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
    name: DatabaseServer
    nameWithType: DatabaseServer
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
    name: DatabaseServer
    nameWithType: DatabaseServer
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.IPermissionCheck
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.IPermissionCheck
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: IPermissionCheck
  nameWithType: IPermissionCheck
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.IPermissionCheck
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.#ctor
  isExternal: true
  name: DatabaseServer
  nameWithType: DatabaseServer.DatabaseServer
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.DatabaseServer
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderServer
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderServer
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: TranslationProviderServer
  nameWithType: TranslationProviderServer
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderServer
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Delete*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Delete
  isExternal: true
  name: Delete
  nameWithType: DatabaseServer.Delete
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Delete
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
  isExternal: true
  name: ObjectDeletedException
  nameWithType: ObjectDeletedException
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ObjectDeletedException
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ObjectNotSavedException
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ObjectNotSavedException
  isExternal: true
  name: ObjectNotSavedException
  nameWithType: ObjectNotSavedException
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ObjectNotSavedException
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Save*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Save
  isExternal: true
  name: Save
  nameWithType: DatabaseServer.Save
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Save
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.HasPermission*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.HasPermission
  isExternal: true
  name: HasPermission
  nameWithType: DatabaseServer.HasPermission
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.HasPermission
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.IPermissionCheck.HasPermission(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.IPermissionCheck.HasPermission(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.IPermissionCheck
  isExternal: true
  name: HasPermission(String)
  nameWithType: IPermissionCheck.HasPermission(String)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.IPermissionCheck.HasPermission(System.String)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.IPermissionCheck.HasPermission(System.String)
    name: HasPermission
    nameWithType: IPermissionCheck.HasPermission
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.IPermissionCheck.HasPermission
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.IPermissionCheck.HasPermission(System.String)
    name: HasPermission
    nameWithType: IPermissionCheck.HasPermission
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.IPermissionCheck.HasPermission
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Equals*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Equals
  isExternal: true
  name: Equals
  nameWithType: DatabaseServer.Equals
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Equals
- uid: System.IEquatable{Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer}.Equals(Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer)
  commentId: M:System.IEquatable{Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer}.Equals(Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer)
  parent: System.IEquatable{Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(DatabaseServer)
  nameWithType: IEquatable<DatabaseServer>.Equals(DatabaseServer)
  fullName: System.IEquatable<Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer>.Equals(Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer)
  nameWithType.vb: IEquatable(Of DatabaseServer).Equals(DatabaseServer)
  fullName.vb: System.IEquatable(Of Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer).Equals(Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<DatabaseServer>.Equals
    fullName: System.IEquatable<Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
    name: DatabaseServer
    nameWithType: DatabaseServer
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of DatabaseServer).Equals
    fullName: System.IEquatable(Of Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
    name: DatabaseServer
    nameWithType: DatabaseServer
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: DatabaseServer
  nameWithType: DatabaseServer
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.NullReferenceException
  commentId: T:System.NullReferenceException
  isExternal: true
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.GetHashCode*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: DatabaseServer.GetHashCode
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.TranslationProviderServer*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.TranslationProviderServer
  isExternal: true
  name: TranslationProviderServer
  nameWithType: DatabaseServer.TranslationProviderServer
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.TranslationProviderServer
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Id*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Id
  isExternal: true
  name: Id
  nameWithType: DatabaseServer.Id
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Id
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Name*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Name
  isExternal: true
  name: Name
  nameWithType: DatabaseServer.Name
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Name
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Description*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Description
  isExternal: true
  name: Description
  nameWithType: DatabaseServer.Description
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Description
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ServerName*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ServerName
  isExternal: true
  name: ServerName
  nameWithType: DatabaseServer.ServerName
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ServerName
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.NullPropertyException
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.NullPropertyException
  isExternal: true
  name: NullPropertyException
  nameWithType: NullPropertyException
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.NullPropertyException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: true
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ServerType*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ServerType
  isExternal: true
  name: ServerType
  nameWithType: DatabaseServer.ServerType
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ServerType
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServerType
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServerType
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: DatabaseServerType
  nameWithType: DatabaseServerType
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServerType
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.AuthenticationType*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.AuthenticationType
  isExternal: true
  name: AuthenticationType
  nameWithType: DatabaseServer.AuthenticationType
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.AuthenticationType
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServerAuthenticationType
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServerAuthenticationType
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: DatabaseServerAuthenticationType
  nameWithType: DatabaseServerAuthenticationType
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServerAuthenticationType
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.UserName*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.UserName
  isExternal: true
  name: UserName
  nameWithType: DatabaseServer.UserName
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.UserName
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Password*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Password
  isExternal: true
  name: Password
  nameWithType: DatabaseServer.Password
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Password
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Containers*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Containers
  isExternal: true
  name: Containers
  nameWithType: DatabaseServer.Containers
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.Containers
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryContainer}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryContainer}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<TranslationMemoryContainer>
  nameWithType: ReadOnlyCollection<TranslationMemoryContainer>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryContainer>
  nameWithType.vb: ReadOnlyCollection(Of TranslationMemoryContainer)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryContainer)
  name.vb: ReadOnlyCollection(Of TranslationMemoryContainer)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryContainer
    name: TranslationMemoryContainer
    nameWithType: TranslationMemoryContainer
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryContainer
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryContainer
    name: TranslationMemoryContainer
    nameWithType: TranslationMemoryContainer
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupPath*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupPath
  isExternal: true
  name: ParentResourceGroupPath
  nameWithType: DatabaseServer.ParentResourceGroupPath
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupPath
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupName*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupName
  isExternal: true
  name: ParentResourceGroupName
  nameWithType: DatabaseServer.ParentResourceGroupName
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupName
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupDescription*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupDescription
  isExternal: true
  name: ParentResourceGroupDescription
  nameWithType: DatabaseServer.ParentResourceGroupDescription
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.ParentResourceGroupDescription
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.LinkedResourceGroupPaths*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.LinkedResourceGroupPaths
  isExternal: true
  name: LinkedResourceGroupPaths
  nameWithType: DatabaseServer.LinkedResourceGroupPaths
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.LinkedResourceGroupPaths
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsDirty*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsDirty
  isExternal: true
  name: IsDirty
  nameWithType: DatabaseServer.IsDirty
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsDirty
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsDeleted*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsDeleted
  isExternal: true
  name: IsDeleted
  nameWithType: DatabaseServer.IsDeleted
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsDeleted
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsNewObject*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsNewObject
  isExternal: true
  name: IsNewObject
  nameWithType: DatabaseServer.IsNewObject
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.DatabaseServer.IsNewObject
- uid: System.ComponentModel.PropertyChangedEventHandler
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
