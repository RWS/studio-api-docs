### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  id: TranslationUnit
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.#ctor
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.#ctor(Sdl.LanguagePlatform.Core.Segment,Sdl.LanguagePlatform.Core.Segment)
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.#ctor(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.AlignmentData
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.AlignModelDate
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociations
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociationsAndKeepInvalidAlignmentsAsync
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociationsAsync
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ComputePlaceables
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ComputePlaceablesAsync
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ConfirmationLevel
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ContainsQuickInsertId(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,System.String)
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Contexts
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DeleteTags
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DeleteTags(Sdl.LanguagePlatform.Core.Segment.DeleteTagsAction)
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentProperties
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentSegmentPair
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Duplicate
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ExtractFragment(Sdl.LanguagePlatform.Core.SegmentRange,Sdl.LanguagePlatform.Core.SegmentRange)
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FieldValues
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FileId
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FileProperties
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Format
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GenerateAlignmentData
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GenerateAlignmentDataAsync
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetMaxTagAnchor
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetQuickInsertIds(Sdl.LanguagePlatform.TranslationMemory.SearchSettings)
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetSystemFieldType(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetType(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetValue(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetValue(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IdContexts
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.InsertDate
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IsStandardFieldName(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IsValid
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Origin
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SetValue(Sdl.LanguagePlatform.TranslationMemory.FieldValue,System.Boolean)
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SourceSegment
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.StructureContexts
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SystemFields
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.TargetSegment
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Trim
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Validate
  - Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Validate(Sdl.LanguagePlatform.Core.Segment.ValidationMode)
  langs:
  - csharp
  - vb
  name: TranslationUnit
  nameWithType: TranslationUnit
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nRepresents a pair of source and target text, decorated with a set of system fields and eventually, with a set of\nuser defined fields/attributes. It may also contain contextual information as well as information about its origin and\neventually, a key for unique identification on a given system.\n"
  syntax:
    content: 'public class TranslationUnit : PersistentObject, ITypedKeyValueContainer'
    content.vb: >-
      Public Class TranslationUnit
          Inherits PersistentObject
          Implements ITypedKeyValueContainer
  inheritance:
  - System.Object
  - Sdl.LanguagePlatform.TranslationMemory.PersistentObject
  implements:
  - Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer
  inheritedMembers:
  - Sdl.LanguagePlatform.TranslationMemory.PersistentObject.ResourceId
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: TranslationUnit()
  nameWithType: TranslationUnit.TranslationUnit()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.TranslationUnit()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance of the TranslationUnit class. The system fields are initialized to their default values, \nthe user defined fields as well as the context list are initialized to empty lists.\n"
  syntax:
    content: public TranslationUnit()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.#ctor(Sdl.LanguagePlatform.Core.Segment,Sdl.LanguagePlatform.Core.Segment)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.#ctor(Sdl.LanguagePlatform.Core.Segment,Sdl.LanguagePlatform.Core.Segment)
  id: '#ctor(Sdl.LanguagePlatform.Core.Segment,Sdl.LanguagePlatform.Core.Segment)'
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: TranslationUnit(Segment, Segment)
  nameWithType: TranslationUnit.TranslationUnit(Segment, Segment)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.TranslationUnit(Sdl.LanguagePlatform.Core.Segment, Sdl.LanguagePlatform.Core.Segment)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance of the TranslationUnit class with the specified values. The system fields are initialized to their default values, \nthe user defined fields as well as the context list are initialized to empty lists.\n"
  syntax:
    content: public TranslationUnit(Segment sourceSegment, Segment targetSegment)
    parameters:
    - id: sourceSegment
      type: Sdl.LanguagePlatform.Core.Segment
      description: The source segment
    - id: targetSegment
      type: Sdl.LanguagePlatform.Core.Segment
      description: The target segment
    content.vb: Public Sub New(sourceSegment As Segment, targetSegment As Segment)
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.#ctor(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.#ctor(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  id: '#ctor(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)'
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: TranslationUnit(TranslationUnit)
  nameWithType: TranslationUnit.TranslationUnit(TranslationUnit)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.TranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance of the TranslationUnit class from another instance (deep copy).\n"
  syntax:
    content: public TranslationUnit(TranslationUnit other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
      description: The other instance.
    content.vb: Public Sub New(other As TranslationUnit)
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Duplicate
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Duplicate
  id: Duplicate
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: TranslationUnit.Duplicate()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Duplicate()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInstantiates and returns a deep copy of the current instance.\n"
  syntax:
    content: public TranslationUnit Duplicate()
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    content.vb: Public Function Duplicate As TranslationUnit
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Duplicate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DeleteTags
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DeleteTags
  id: DeleteTags
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: DeleteTags()
  nameWithType: TranslationUnit.DeleteTags()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DeleteTags()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nDeletes all tags from the TU&apos;s segments but keeps text placeholders (and locked content tags).\n"
  syntax:
    content: public void DeleteTags()
    content.vb: Public Sub DeleteTags
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DeleteTags*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DeleteTags(Sdl.LanguagePlatform.Core.Segment.DeleteTagsAction)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DeleteTags(Sdl.LanguagePlatform.Core.Segment.DeleteTagsAction)
  id: DeleteTags(Sdl.LanguagePlatform.Core.Segment.DeleteTagsAction)
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: DeleteTags(Segment.DeleteTagsAction)
  nameWithType: TranslationUnit.DeleteTags(Segment.DeleteTagsAction)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DeleteTags(Sdl.LanguagePlatform.Core.Segment.DeleteTagsAction)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nDeletes all tags from the TU&apos;s segments and performs the specified <xref href=\"Sdl.LanguagePlatform.Core.Segment.DeleteTagsAction\" data-throw-if-not-resolved=\"false\"></xref> on text placeholders\nand locked content.\n"
  syntax:
    content: public void DeleteTags(Segment.DeleteTagsAction action)
    parameters:
    - id: action
      type: Sdl.LanguagePlatform.Core.Segment.DeleteTagsAction
    content.vb: Public Sub DeleteTags(action As Segment.DeleteTagsAction)
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DeleteTags*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Validate
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Validate
  id: Validate
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: TranslationUnit.Validate()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Validate()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nPerforms validation checks on this instance. All errors will be reported.\n"
  syntax:
    content: public ErrorCode Validate()
    return:
      type: Sdl.LanguagePlatform.Core.ErrorCode
      description: An ErrorCode.
    content.vb: Public Function Validate As ErrorCode
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Validate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Validate(Sdl.LanguagePlatform.Core.Segment.ValidationMode)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Validate(Sdl.LanguagePlatform.Core.Segment.ValidationMode)
  id: Validate(Sdl.LanguagePlatform.Core.Segment.ValidationMode)
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: Validate(Segment.ValidationMode)
  nameWithType: TranslationUnit.Validate(Segment.ValidationMode)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Validate(Sdl.LanguagePlatform.Core.Segment.ValidationMode)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nPerforms validation checks on this instance with the specified validation mode.\n"
  syntax:
    content: public ErrorCode Validate(Segment.ValidationMode mode)
    parameters:
    - id: mode
      type: Sdl.LanguagePlatform.Core.Segment.ValidationMode
    return:
      type: Sdl.LanguagePlatform.Core.ErrorCode
      description: An ErrorCode.
    content.vb: Public Function Validate(mode As Segment.ValidationMode) As ErrorCode
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Validate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IsValid
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IsValid
  id: IsValid
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: IsValid()
  nameWithType: TranslationUnit.IsValid()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IsValid()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nDetermines whether this instance is a valid translation unit.\n"
  syntax:
    content: public bool IsValid()
    return:
      type: System.Boolean
    content.vb: Public Function IsValid As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IsValid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetMaxTagAnchor
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetMaxTagAnchor
  id: GetMaxTagAnchor
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: GetMaxTagAnchor()
  nameWithType: TranslationUnit.GetMaxTagAnchor()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetMaxTagAnchor()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nReturns the highest tag anchor used in any segment, or 0 if no tags are present.\n"
  syntax:
    content: public int GetMaxTagAnchor()
    return:
      type: System.Int32
    content.vb: Public Function GetMaxTagAnchor As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetMaxTagAnchor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociationsAsync
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociationsAsync
  id: CheckAndComputeTagAssociationsAsync
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: CheckAndComputeTagAssociationsAsync()
  nameWithType: TranslationUnit.CheckAndComputeTagAssociationsAsync()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociationsAsync()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nComputes cross-segment tag associations. Primarily checks or changes the tag-related\nalignment anchors. Renumbers association anchors.\n"
  syntax:
    content: public Task CheckAndComputeTagAssociationsAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function CheckAndComputeTagAssociationsAsync As Task
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociationsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociations
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociations
  id: CheckAndComputeTagAssociations
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: CheckAndComputeTagAssociations()
  nameWithType: TranslationUnit.CheckAndComputeTagAssociations()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociations()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nSee <xref href=\"Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociationsAsync\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: >-
      [Obsolete("Use CheckAndComputeTagAssociationsAsync")]

      public void CheckAndComputeTagAssociations()
    content.vb: >-
      <Obsolete("Use CheckAndComputeTagAssociationsAsync")>

      Public Sub CheckAndComputeTagAssociations
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociations*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use CheckAndComputeTagAssociationsAsync
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociationsAndKeepInvalidAlignmentsAsync
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociationsAndKeepInvalidAlignmentsAsync
  id: CheckAndComputeTagAssociationsAndKeepInvalidAlignmentsAsync
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: CheckAndComputeTagAssociationsAndKeepInvalidAlignmentsAsync()
  nameWithType: TranslationUnit.CheckAndComputeTagAssociationsAndKeepInvalidAlignmentsAsync()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociationsAndKeepInvalidAlignmentsAsync()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nsimilar with CheckAndComputeTagAssociations but keeps invalid alignments so tu.validate detects them later and invalidates tu before write to storage\n"
  syntax:
    content: public Task CheckAndComputeTagAssociationsAndKeepInvalidAlignmentsAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function CheckAndComputeTagAssociationsAndKeepInvalidAlignmentsAsync As Task
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociationsAndKeepInvalidAlignmentsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GenerateAlignmentData
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GenerateAlignmentData
  id: GenerateAlignmentData
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: GenerateAlignmentData()
  nameWithType: TranslationUnit.GenerateAlignmentData()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GenerateAlignmentData()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nIf AlignmentData == null, creates minimal alignment data for the TU, based on placeable information\n"
  syntax:
    content: >-
      [Obsolete("Use GenerateAlignmentDataAsync")]

      public bool GenerateAlignmentData()
    return:
      type: System.Boolean
      description: True if alignment data was created, false otherwise (AlignmentData != null, or segment tokens not available)
    content.vb: >-
      <Obsolete("Use GenerateAlignmentDataAsync")>

      Public Function GenerateAlignmentData As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GenerateAlignmentData*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use GenerateAlignmentDataAsync
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GenerateAlignmentDataAsync
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GenerateAlignmentDataAsync
  id: GenerateAlignmentDataAsync
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: GenerateAlignmentDataAsync()
  nameWithType: TranslationUnit.GenerateAlignmentDataAsync()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GenerateAlignmentDataAsync()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nIf AlignmentData == null, creates minimal alignment data for the TU, based on placeable information\n"
  syntax:
    content: public Task<bool> GenerateAlignmentDataAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if alignment data was created, false otherwise (AlignmentData != null, or segment tokens not available)
    content.vb: Public Function GenerateAlignmentDataAsync As Task(Of Boolean)
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GenerateAlignmentDataAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Trim
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Trim
  id: Trim
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: Trim()
  nameWithType: TranslationUnit.Trim()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Trim()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nTrims off peripheral whitespace from the TU&apos;s segments.\n"
  syntax:
    content: public void Trim()
    content.vb: Public Sub Trim
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Trim*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetValue(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetValue(System.String)
  id: GetValue(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: GetValue(String)
  nameWithType: TranslationUnit.GetValue(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetValue(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nRetrieves the value of a specified field from this translation unit.\n<p>The system fields can be retrieved using the following names:</p>\n<table><thead><tr><th>Name</th><th>Corresponding System Field</th></tr></thead><tbody><tr><td>chd</td><td>Change date</td></tr><tr><td>chu</td><td>Change user</td></tr><tr><td>usd</td><td>Last used date</td></tr><tr><td>usu</td><td>Last used user</td></tr><tr><td>usc</td><td>Usage counter</td></tr><tr><td>crd</td><td>Creation date</td></tr><tr><td>cru</td><td>Creation user</td></tr></tbody></table>\n<p>Pseudo-fields contain values that are not saved as separate field values, but can be computed from the existing \ninformation in a translatin unit. The available pseudo-fields are:</p>\n<table><thead><tr><th>Name</th><th>Corresponding Pseudo-field</th></tr></thead><tbody><tr><td>src</td><td>Source segment (including tags).</td></tr><tr><td>trg</td><td>Target segment (including tags)</td></tr><tr><td>sourceplainlength</td><td>The length of the plain text in the source segment (without tags)</td></tr><tr><td>targetplainlength</td><td>The length of the plain text in the target segment (without tags)</td></tr></tbody></table>\n"
  syntax:
    content: public FieldValue GetValue(string fieldName)
    parameters:
    - id: fieldName
      type: System.String
      description: The field name.
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValue
      description: The corresponding field value or null if such a field does not exist.
    content.vb: Public Function GetValue(fieldName As String) As FieldValue
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetValue*
  implements:
  - Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SetValue(Sdl.LanguagePlatform.TranslationMemory.FieldValue,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SetValue(Sdl.LanguagePlatform.TranslationMemory.FieldValue,System.Boolean)
  id: SetValue(Sdl.LanguagePlatform.TranslationMemory.FieldValue,System.Boolean)
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: SetValue(FieldValue, Boolean)
  nameWithType: TranslationUnit.SetValue(FieldValue, Boolean)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SetValue(Sdl.LanguagePlatform.TranslationMemory.FieldValue, System.Boolean)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nSets the value of the specified field, which can be a system field or a user field.\nPseudo fields (such as src, trg, soruceplainlength, etc.) can not be set. \n<p>Exceptions will be thrown if the field types are incompatible.</p>\n"
  syntax:
    content: public void SetValue(FieldValue fv, bool addIfMissing)
    parameters:
    - id: fv
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValue
      description: The new field value, including the field name.
    - id: addIfMissing
      type: System.Boolean
      description: >-
        If true, a new field value is added to the current

        list of values if no previous value is present.
    content.vb: Public Sub SetValue(fv As FieldValue, addIfMissing As Boolean)
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SetValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetValue(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetValue(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  id: GetValue(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: GetValue(String, FieldValueType)
  nameWithType: TranslationUnit.GetValue(String, FieldValueType)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetValue(System.String, Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nRetrieves the field value with the specified type from this translation unit.\n"
  syntax:
    content: public FieldValue GetValue(string fieldName, FieldValueType t)
    parameters:
    - id: fieldName
      type: System.String
      description: The field name.
    - id: t
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
      description: The field type.
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValue
      description: "The corresponding field value, null if a field with the specified name does not exist or an error if the type \ndoes not match the result."
    content.vb: Public Function GetValue(fieldName As String, t As FieldValueType) As FieldValue
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetValue*
  implements:
  - Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetSystemFieldType(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetSystemFieldType(System.String)
  id: GetSystemFieldType(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: GetSystemFieldType(String)
  nameWithType: TranslationUnit.GetSystemFieldType(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetSystemFieldType(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nReturns the field value type for known system and pseudo fields.\n"
  syntax:
    content: public static FieldValueType GetSystemFieldType(string fieldName)
    parameters:
    - id: fieldName
      type: System.String
      description: The field name.
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
      description: "The field type, or <xref href=\"FieldValueType.Unknown\" data-throw-if-not-resolved=\"false\"></xref> if the \nfield is not a known system or pseudo field."
    content.vb: Public Shared Function GetSystemFieldType(fieldName As String) As FieldValueType
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetSystemFieldType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetType(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetType(System.String)
  id: GetType(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: GetType(String)
  nameWithType: TranslationUnit.GetType(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetType(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nRetrieves the type of the specified field.\n"
  syntax:
    content: public FieldValueType GetType(string fieldName)
    parameters:
    - id: fieldName
      type: System.String
      description: The field name.
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
      description: The corresponding type or Unknown if a field with such name does not exist.
    content.vb: Public Function GetType(fieldName As String) As FieldValueType
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetType*
  implements:
  - Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetType(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ComputePlaceables
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ComputePlaceables
  id: ComputePlaceables
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: ComputePlaceables()
  nameWithType: TranslationUnit.ComputePlaceables()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ComputePlaceables()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\n\n"
  syntax:
    content: >-
      [Obsolete("Use ComputePlaceablesAsync")]

      public List<Placeable> ComputePlaceables()
    return:
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable}
    content.vb: >-
      <Obsolete("Use ComputePlaceablesAsync")>

      Public Function ComputePlaceables As List(Of Placeable)
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ComputePlaceables*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ComputePlaceablesAsync
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ComputePlaceablesAsync
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ComputePlaceablesAsync
  id: ComputePlaceablesAsync
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: ComputePlaceablesAsync()
  nameWithType: TranslationUnit.ComputePlaceablesAsync()
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ComputePlaceablesAsync()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nComputes the list of placeables and their alignment for this translation unit.\n"
  syntax:
    content: public Task<List<Placeable>> ComputePlaceablesAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable}}
      description: A list of placeables
    content.vb: Public Function ComputePlaceablesAsync As Task(Of List(Of Placeable))
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ComputePlaceablesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ExtractFragment(Sdl.LanguagePlatform.Core.SegmentRange,Sdl.LanguagePlatform.Core.SegmentRange)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ExtractFragment(Sdl.LanguagePlatform.Core.SegmentRange,Sdl.LanguagePlatform.Core.SegmentRange)
  id: ExtractFragment(Sdl.LanguagePlatform.Core.SegmentRange,Sdl.LanguagePlatform.Core.SegmentRange)
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: ExtractFragment(SegmentRange, SegmentRange)
  nameWithType: TranslationUnit.ExtractFragment(SegmentRange, SegmentRange)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ExtractFragment(Sdl.LanguagePlatform.Core.SegmentRange, Sdl.LanguagePlatform.Core.SegmentRange)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nExtracts a fragment of a translation unit based on a segment range\n"
  syntax:
    content: public TranslationUnit ExtractFragment(SegmentRange sourceRange, SegmentRange targetRange)
    parameters:
    - id: sourceRange
      type: Sdl.LanguagePlatform.Core.SegmentRange
      description: The segment range for the source segment
    - id: targetRange
      type: Sdl.LanguagePlatform.Core.SegmentRange
      description: The segment range for the target segment
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
      description: A translation unit containing the fragment specified by the segment range
    content.vb: Public Function ExtractFragment(sourceRange As SegmentRange, targetRange As SegmentRange) As TranslationUnit
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ExtractFragment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IsStandardFieldName(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IsStandardFieldName(System.String)
  id: IsStandardFieldName(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: IsStandardFieldName(String)
  nameWithType: TranslationUnit.IsStandardFieldName(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IsStandardFieldName(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nReturns true if the name matches one of the built-in field names\n"
  syntax:
    content: public static bool IsStandardFieldName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsStandardFieldName(name As String) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IsStandardFieldName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetQuickInsertIds(Sdl.LanguagePlatform.TranslationMemory.SearchSettings)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetQuickInsertIds(Sdl.LanguagePlatform.TranslationMemory.SearchSettings)
  id: GetQuickInsertIds(Sdl.LanguagePlatform.TranslationMemory.SearchSettings)
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: GetQuickInsertIds(SearchSettings)
  nameWithType: TranslationUnit.GetQuickInsertIds(SearchSettings)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetQuickInsertIds(Sdl.LanguagePlatform.TranslationMemory.SearchSettings)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nReturns the supported/allowed list of quickInsertIds for this tu\n"
  syntax:
    content: public IList<string> GetQuickInsertIds(SearchSettings searchSettings)
    parameters:
    - id: searchSettings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Function GetQuickInsertIds(searchSettings As SearchSettings) As IList(Of String)
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetQuickInsertIds*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ContainsQuickInsertId(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ContainsQuickInsertId(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,System.String)
  id: ContainsQuickInsertId(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: ContainsQuickInsertId(SearchSettings, String)
  nameWithType: TranslationUnit.ContainsQuickInsertId(SearchSettings, String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ContainsQuickInsertId(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nReturs true if the quickInsertId is supported/allowed for this tu\n"
  syntax:
    content: public bool ContainsQuickInsertId(SearchSettings searchSettings, string quickInsertId)
    parameters:
    - id: searchSettings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    - id: quickInsertId
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function ContainsQuickInsertId(searchSettings As SearchSettings, quickInsertId As String) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ContainsQuickInsertId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentProperties
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentProperties
  id: DocumentProperties
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: DocumentProperties
  nameWithType: TranslationUnit.DocumentProperties
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentProperties
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or set the document properties\n"
  syntax:
    content: public IDocumentProperties DocumentProperties { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
    content.vb: Public Property DocumentProperties As IDocumentProperties
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentProperties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FileProperties
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FileProperties
  id: FileProperties
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: FileProperties
  nameWithType: TranslationUnit.FileProperties
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FileProperties
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or set the file properties \n"
  syntax:
    content: public IFileProperties FileProperties { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
    content.vb: Public Property FileProperties As IFileProperties
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FileProperties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentSegmentPair
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentSegmentPair
  id: DocumentSegmentPair
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: DocumentSegmentPair
  nameWithType: TranslationUnit.DocumentSegmentPair
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentSegmentPair
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the segment pair associated to this translation unit.\nThe segment pair should not be modified because the modification might change the original document.\n"
  syntax:
    content: public ISegmentPair DocumentSegmentPair { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
    content.vb: Public Property DocumentSegmentPair As ISegmentPair
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentSegmentPair*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FileId
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FileId
  id: FileId
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: FileId
  nameWithType: TranslationUnit.FileId
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FileId
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nFileId of the bcm document file that holds the segmentPair that generated this translationUnit \n"
  syntax:
    content: public string FileId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileId As String
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FileId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SourceSegment
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SourceSegment
  id: SourceSegment
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: SourceSegment
  nameWithType: TranslationUnit.SourceSegment
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SourceSegment
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the source segment of this instance.\n"
  syntax:
    content: public Segment SourceSegment { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Segment
    content.vb: Public Property SourceSegment As Segment
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SourceSegment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.TargetSegment
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.TargetSegment
  id: TargetSegment
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: TargetSegment
  nameWithType: TranslationUnit.TargetSegment
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.TargetSegment
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the target segment of this instance.\n"
  syntax:
    content: public Segment TargetSegment { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Segment
    content.vb: Public Property TargetSegment As Segment
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.TargetSegment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Contexts
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Contexts
  id: Contexts
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: Contexts
  nameWithType: TranslationUnit.Contexts
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Contexts
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the contexts for this instance.\n"
  syntax:
    content: public TuContexts Contexts { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.TuContexts
    content.vb: Public Property Contexts As TuContexts
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Contexts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IdContexts
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IdContexts
  id: IdContexts
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: IdContexts
  nameWithType: TranslationUnit.IdContexts
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IdContexts
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nstores SID context\n"
  syntax:
    content: public TuIdContexts IdContexts { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
    content.vb: Public Property IdContexts As TuIdContexts
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IdContexts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.AlignmentData
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.AlignmentData
  id: AlignmentData
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: AlignmentData
  nameWithType: TranslationUnit.AlignmentData
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.AlignmentData
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\n\n"
  syntax:
    content: public LiftAlignedSpanPairSet AlignmentData { get; set; }
    parameters: []
    return:
      type: Sdl.Core.FineGrainedAlignment.Core.LiftAlignedSpanPairSet
    content.vb: Public Property AlignmentData As LiftAlignedSpanPairSet
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.AlignmentData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.AlignModelDate
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.AlignModelDate
  id: AlignModelDate
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: AlignModelDate
  nameWithType: TranslationUnit.AlignModelDate
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.AlignModelDate
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nThe build DateTime of the translation model used to align content in this TU.\n"
  syntax:
    content: public DateTime? AlignModelDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property AlignModelDate As Date?
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.AlignModelDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.InsertDate
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.InsertDate
  id: InsertDate
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: InsertDate
  nameWithType: TranslationUnit.InsertDate
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.InsertDate
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nThe DateTime used to determine whether this TU is &apos;postdated&apos; compared to a translation model.\nThis is usually the time at which the TU was added, unless it&apos;s &quot;cloned&quot; from an earlier TU,\ne.g. in an UpdateTranslationUnits flow that does not change segment content.\n"
  syntax:
    content: public DateTime? InsertDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property InsertDate As Date?
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.InsertDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Origin
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Origin
  id: Origin
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: TranslationUnit.Origin
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Origin
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the origin of this translation unit.\n"
  syntax:
    content: public TranslationUnitOrigin Origin { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnitOrigin
    content.vb: Public Property Origin As TranslationUnitOrigin
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Origin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ConfirmationLevel
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ConfirmationLevel
  id: ConfirmationLevel
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: ConfirmationLevel
  nameWithType: TranslationUnit.ConfirmationLevel
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ConfirmationLevel
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the confirmation level of this translation unit.\n"
  syntax:
    content: public ConfirmationLevel ConfirmationLevel { get; set; }
    parameters: []
    return:
      type: Sdl.Core.Globalization.ConfirmationLevel
    content.vb: Public Property ConfirmationLevel As ConfirmationLevel
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ConfirmationLevel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Format
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Format
  id: Format
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: Format
  nameWithType: TranslationUnit.Format
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Format
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the format of this translation unit.\n"
  syntax:
    content: public TranslationUnitFormat Format { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnitFormat
    content.vb: Public Property Format As TranslationUnitFormat
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Format*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SystemFields
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SystemFields
  id: SystemFields
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: SystemFields
  nameWithType: TranslationUnit.SystemFields
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SystemFields
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the system fields of this translation unit.\n"
  syntax:
    content: public SystemFields SystemFields { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SystemFields
    content.vb: Public Property SystemFields As SystemFields
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SystemFields*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FieldValues
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FieldValues
  id: FieldValues
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: FieldValues
  nameWithType: TranslationUnit.FieldValues
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FieldValues
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the user-defined field values for this translation unit.\n"
  syntax:
    content: public FieldValues FieldValues { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValues
    content.vb: Public Property FieldValues As FieldValues
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FieldValues*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.StructureContexts
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.StructureContexts
  id: StructureContexts
  parent: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  langs:
  - csharp
  - vb
  name: StructureContexts
  nameWithType: TranslationUnit.StructureContexts
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.StructureContexts
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the names of the structure contexts in which this translation unit occured within\nthe documents it originated from.\n"
  remarks: >-
    This setting is stored as a multiple string field value with name &quot;StructureContext&quot; in the <xref href="Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FieldValues" data-throw-if-not-resolved="false"></xref>

    collection.
  syntax:
    content: public string[] StructureContexts { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property StructureContexts As String()
  overload: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.StructureContexts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.LanguagePlatform.TranslationMemory.PersistentObject
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.PersistentObject
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: PersistentObject
  nameWithType: PersistentObject
  fullName: Sdl.LanguagePlatform.TranslationMemory.PersistentObject
- uid: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: ITypedKeyValueContainer
  nameWithType: ITypedKeyValueContainer
  fullName: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer
- uid: Sdl.LanguagePlatform.TranslationMemory.PersistentObject.ResourceId
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.PersistentObject.ResourceId
  parent: Sdl.LanguagePlatform.TranslationMemory.PersistentObject
  isExternal: true
  name: ResourceId
  nameWithType: PersistentObject.ResourceId
  fullName: Sdl.LanguagePlatform.TranslationMemory.PersistentObject.ResourceId
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.#ctor
  isExternal: true
  name: TranslationUnit
  nameWithType: TranslationUnit.TranslationUnit
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.TranslationUnit
- uid: Sdl.LanguagePlatform.Core.Segment
  commentId: T:Sdl.LanguagePlatform.Core.Segment
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: Segment
  nameWithType: Segment
  fullName: Sdl.LanguagePlatform.Core.Segment
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: TranslationUnit
  nameWithType: TranslationUnit
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Duplicate*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Duplicate
  isExternal: true
  name: Duplicate
  nameWithType: TranslationUnit.Duplicate
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Duplicate
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DeleteTags*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DeleteTags
  isExternal: true
  name: DeleteTags
  nameWithType: TranslationUnit.DeleteTags
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DeleteTags
- uid: Sdl.LanguagePlatform.Core.Segment.DeleteTagsAction
  commentId: T:Sdl.LanguagePlatform.Core.Segment.DeleteTagsAction
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: Segment.DeleteTagsAction
  nameWithType: Segment.DeleteTagsAction
  fullName: Sdl.LanguagePlatform.Core.Segment.DeleteTagsAction
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Validate*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Validate
  isExternal: true
  name: Validate
  nameWithType: TranslationUnit.Validate
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Validate
- uid: Sdl.LanguagePlatform.Core.ErrorCode
  commentId: T:Sdl.LanguagePlatform.Core.ErrorCode
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: ErrorCode
  nameWithType: ErrorCode
  fullName: Sdl.LanguagePlatform.Core.ErrorCode
- uid: Sdl.LanguagePlatform.Core.Segment.ValidationMode
  commentId: T:Sdl.LanguagePlatform.Core.Segment.ValidationMode
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: Segment.ValidationMode
  nameWithType: Segment.ValidationMode
  fullName: Sdl.LanguagePlatform.Core.Segment.ValidationMode
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IsValid*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IsValid
  isExternal: true
  name: IsValid
  nameWithType: TranslationUnit.IsValid
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetMaxTagAnchor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetMaxTagAnchor
  isExternal: true
  name: GetMaxTagAnchor
  nameWithType: TranslationUnit.GetMaxTagAnchor
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetMaxTagAnchor
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociationsAsync*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociationsAsync
  isExternal: true
  name: CheckAndComputeTagAssociationsAsync
  nameWithType: TranslationUnit.CheckAndComputeTagAssociationsAsync
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociationsAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociations*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociations
  isExternal: true
  name: CheckAndComputeTagAssociations
  nameWithType: TranslationUnit.CheckAndComputeTagAssociations
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociations
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociationsAndKeepInvalidAlignmentsAsync*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociationsAndKeepInvalidAlignmentsAsync
  isExternal: true
  name: CheckAndComputeTagAssociationsAndKeepInvalidAlignmentsAsync
  nameWithType: TranslationUnit.CheckAndComputeTagAssociationsAndKeepInvalidAlignmentsAsync
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociationsAndKeepInvalidAlignmentsAsync
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GenerateAlignmentData*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GenerateAlignmentData
  isExternal: true
  name: GenerateAlignmentData
  nameWithType: TranslationUnit.GenerateAlignmentData
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GenerateAlignmentData
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GenerateAlignmentDataAsync*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GenerateAlignmentDataAsync
  isExternal: true
  name: GenerateAlignmentDataAsync
  nameWithType: TranslationUnit.GenerateAlignmentDataAsync
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GenerateAlignmentDataAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Trim*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Trim
  isExternal: true
  name: Trim
  nameWithType: TranslationUnit.Trim
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Trim
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetValue*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetValue
  isExternal: true
  name: GetValue
  nameWithType: TranslationUnit.GetValue
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetValue
- uid: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer
  isExternal: true
  name: GetValue(String)
  nameWithType: ITypedKeyValueContainer.GetValue(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue(System.String)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue(System.String)
    name: GetValue
    nameWithType: ITypedKeyValueContainer.GetValue
    fullName: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue(System.String)
    name: GetValue
    nameWithType: ITypedKeyValueContainer.GetValue
    fullName: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldValue
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldValue
  nameWithType: FieldValue
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SetValue*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SetValue
  isExternal: true
  name: SetValue
  nameWithType: TranslationUnit.SetValue
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SetValue
- uid: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  parent: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer
  isExternal: true
  name: GetValue(String, FieldValueType)
  nameWithType: ITypedKeyValueContainer.GetValue(String, FieldValueType)
  fullName: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue(System.String, Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
    name: GetValue
    nameWithType: ITypedKeyValueContainer.GetValue
    fullName: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
    name: FieldValueType
    nameWithType: FieldValueType
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
    name: GetValue
    nameWithType: ITypedKeyValueContainer.GetValue
    fullName: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
    name: FieldValueType
    nameWithType: FieldValueType
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldValueType
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldValueType
  nameWithType: FieldValueType
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetSystemFieldType*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetSystemFieldType
  isExternal: true
  name: GetSystemFieldType
  nameWithType: TranslationUnit.GetSystemFieldType
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetSystemFieldType
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetType*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetType
  isExternal: true
  name: GetType
  nameWithType: TranslationUnit.GetType
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetType
- uid: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetType(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetType(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer
  isExternal: true
  name: GetType(String)
  nameWithType: ITypedKeyValueContainer.GetType(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetType(System.String)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetType(System.String)
    name: GetType
    nameWithType: ITypedKeyValueContainer.GetType
    fullName: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetType(System.String)
    name: GetType
    nameWithType: ITypedKeyValueContainer.GetType
    fullName: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ComputePlaceables*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ComputePlaceables
  isExternal: true
  name: ComputePlaceables
  nameWithType: TranslationUnit.ComputePlaceables
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ComputePlaceables
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Placeable>
  nameWithType: List<Placeable>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemory.Placeable>
  nameWithType.vb: List(Of Placeable)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemory.Placeable)
  name.vb: List(Of Placeable)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.Placeable
    name: Placeable
    nameWithType: Placeable
    fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.Placeable
    name: Placeable
    nameWithType: Placeable
    fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ComputePlaceablesAsync*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ComputePlaceablesAsync
  isExternal: true
  name: ComputePlaceablesAsync
  nameWithType: TranslationUnit.ComputePlaceablesAsync
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ComputePlaceablesAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<Placeable>>
  nameWithType: Task<List<Placeable>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemory.Placeable>>
  nameWithType.vb: Task(Of List(Of Placeable))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemory.Placeable))
  name.vb: Task(Of List(Of Placeable))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.Placeable
    name: Placeable
    nameWithType: Placeable
    fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.Placeable
    name: Placeable
    nameWithType: Placeable
    fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ExtractFragment*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ExtractFragment
  isExternal: true
  name: ExtractFragment
  nameWithType: TranslationUnit.ExtractFragment
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ExtractFragment
- uid: Sdl.LanguagePlatform.Core.SegmentRange
  commentId: T:Sdl.LanguagePlatform.Core.SegmentRange
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: SegmentRange
  nameWithType: SegmentRange
  fullName: Sdl.LanguagePlatform.Core.SegmentRange
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IsStandardFieldName*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IsStandardFieldName
  isExternal: true
  name: IsStandardFieldName
  nameWithType: TranslationUnit.IsStandardFieldName
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IsStandardFieldName
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetQuickInsertIds*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetQuickInsertIds
  isExternal: true
  name: GetQuickInsertIds
  nameWithType: TranslationUnit.GetQuickInsertIds
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetQuickInsertIds
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.SearchSettings
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: SearchSettings
  nameWithType: SearchSettings
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ContainsQuickInsertId*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ContainsQuickInsertId
  isExternal: true
  name: ContainsQuickInsertId
  nameWithType: TranslationUnit.ContainsQuickInsertId
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ContainsQuickInsertId
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentProperties*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentProperties
  isExternal: true
  name: DocumentProperties
  nameWithType: TranslationUnit.DocumentProperties
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentProperties
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
  commentId: '!:Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties'
  isExternal: true
  name: IDocumentProperties
  nameWithType: IDocumentProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FileProperties*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FileProperties
  isExternal: true
  name: FileProperties
  nameWithType: TranslationUnit.FileProperties
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FileProperties
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
  commentId: '!:Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties'
  isExternal: true
  name: IFileProperties
  nameWithType: IFileProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentSegmentPair*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentSegmentPair
  isExternal: true
  name: DocumentSegmentPair
  nameWithType: TranslationUnit.DocumentSegmentPair
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentSegmentPair
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
  commentId: '!:Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair'
  isExternal: true
  name: ISegmentPair
  nameWithType: ISegmentPair
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FileId*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FileId
  isExternal: true
  name: FileId
  nameWithType: TranslationUnit.FileId
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FileId
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SourceSegment*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SourceSegment
  isExternal: true
  name: SourceSegment
  nameWithType: TranslationUnit.SourceSegment
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SourceSegment
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.TargetSegment*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.TargetSegment
  isExternal: true
  name: TargetSegment
  nameWithType: TranslationUnit.TargetSegment
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.TargetSegment
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Contexts*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Contexts
  isExternal: true
  name: Contexts
  nameWithType: TranslationUnit.Contexts
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Contexts
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContexts
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TuContexts
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: TuContexts
  nameWithType: TuContexts
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContexts
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IdContexts*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IdContexts
  isExternal: true
  name: IdContexts
  nameWithType: TranslationUnit.IdContexts
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IdContexts
- uid: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: TuIdContexts
  nameWithType: TuIdContexts
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuIdContexts
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.AlignmentData*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.AlignmentData
  isExternal: true
  name: AlignmentData
  nameWithType: TranslationUnit.AlignmentData
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.AlignmentData
- uid: Sdl.Core.FineGrainedAlignment.Core.LiftAlignedSpanPairSet
  isExternal: true
  name: LiftAlignedSpanPairSet
  nameWithType: LiftAlignedSpanPairSet
  fullName: Sdl.Core.FineGrainedAlignment.Core.LiftAlignedSpanPairSet
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.AlignModelDate*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.AlignModelDate
  isExternal: true
  name: AlignModelDate
  nameWithType: TranslationUnit.AlignModelDate
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.AlignModelDate
- uid: System.Nullable{System.DateTime}
  commentId: '!:System.Nullable{System.DateTime}'
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.InsertDate*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.InsertDate
  isExternal: true
  name: InsertDate
  nameWithType: TranslationUnit.InsertDate
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.InsertDate
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Origin*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Origin
  isExternal: true
  name: Origin
  nameWithType: TranslationUnit.Origin
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Origin
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnitOrigin
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TranslationUnitOrigin
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: TranslationUnitOrigin
  nameWithType: TranslationUnitOrigin
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnitOrigin
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ConfirmationLevel*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ConfirmationLevel
  isExternal: true
  name: ConfirmationLevel
  nameWithType: TranslationUnit.ConfirmationLevel
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ConfirmationLevel
- uid: Sdl.Core.Globalization.ConfirmationLevel
  commentId: '!:Sdl.Core.Globalization.ConfirmationLevel'
  isExternal: true
  name: ConfirmationLevel
  nameWithType: ConfirmationLevel
  fullName: Sdl.Core.Globalization.ConfirmationLevel
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Format*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Format
  isExternal: true
  name: Format
  nameWithType: TranslationUnit.Format
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Format
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnitFormat
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TranslationUnitFormat
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: TranslationUnitFormat
  nameWithType: TranslationUnitFormat
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnitFormat
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SystemFields*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SystemFields
  isExternal: true
  name: SystemFields
  nameWithType: TranslationUnit.SystemFields
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SystemFields
- uid: Sdl.LanguagePlatform.TranslationMemory.SystemFields
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.SystemFields
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: SystemFields
  nameWithType: SystemFields
  fullName: Sdl.LanguagePlatform.TranslationMemory.SystemFields
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FieldValues*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FieldValues
  isExternal: true
  name: FieldValues
  nameWithType: TranslationUnit.FieldValues
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FieldValues
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldValues
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldValues
  nameWithType: FieldValues
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.StructureContexts*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.StructureContexts
  isExternal: true
  name: StructureContexts
  nameWithType: TranslationUnit.StructureContexts
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.StructureContexts
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
