### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.Wordlist
  commentId: T:Sdl.LanguagePlatform.Core.Wordlist
  id: Wordlist
  parent: Sdl.LanguagePlatform.Core
  children:
  - Sdl.LanguagePlatform.Core.Wordlist.#ctor
  - Sdl.LanguagePlatform.Core.Wordlist.#ctor(Sdl.LanguagePlatform.Core.SearchOption)
  - Sdl.LanguagePlatform.Core.Wordlist.#ctor(Sdl.LanguagePlatform.Core.Wordlist)
  - Sdl.LanguagePlatform.Core.Wordlist.Add(System.String)
  - Sdl.LanguagePlatform.Core.Wordlist.CleanupList(System.String,System.String,System.Boolean)
  - Sdl.LanguagePlatform.Core.Wordlist.Clear
  - Sdl.LanguagePlatform.Core.Wordlist.Clone
  - Sdl.LanguagePlatform.Core.Wordlist.Contains(System.String)
  - Sdl.LanguagePlatform.Core.Wordlist.Count
  - Sdl.LanguagePlatform.Core.Wordlist.Flags
  - Sdl.LanguagePlatform.Core.Wordlist.GetBytes
  - Sdl.LanguagePlatform.Core.Wordlist.GetRegularExpression(Sdl.LanguagePlatform.Core.CharacterSet@)
  - Sdl.LanguagePlatform.Core.Wordlist.Items
  - Sdl.LanguagePlatform.Core.Wordlist.Load(System.Byte[],System.Boolean)
  - Sdl.LanguagePlatform.Core.Wordlist.Load(System.IO.Stream,System.Boolean)
  - Sdl.LanguagePlatform.Core.Wordlist.Load(System.String,System.Boolean)
  - Sdl.LanguagePlatform.Core.Wordlist.Merge(Sdl.LanguagePlatform.Core.Wordlist)
  - Sdl.LanguagePlatform.Core.Wordlist.Merge(System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Wordlist})
  - Sdl.LanguagePlatform.Core.Wordlist.Remove(System.String)
  - Sdl.LanguagePlatform.Core.Wordlist.Save(System.IO.TextWriter)
  - Sdl.LanguagePlatform.Core.Wordlist.Version
  langs:
  - csharp
  - vb
  name: Wordlist
  nameWithType: Wordlist
  fullName: Sdl.LanguagePlatform.Core.Wordlist
  type: Class
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: A searchable word list with index.
  example: []
  syntax:
    content: 'public class Wordlist : ICloneable'
    content.vb: Public Class Wordlist Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Sdl.LanguagePlatform.Core.Wordlist.#ctor
  commentId: M:Sdl.LanguagePlatform.Core.Wordlist.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Wordlist()
  nameWithType: Wordlist.Wordlist()
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Wordlist()
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Initializes a new instance of the Wordlist class with an empty wordlist.
  example: []
  syntax:
    content: public Wordlist()
    content.vb: Public Sub New()
  overload: Sdl.LanguagePlatform.Core.Wordlist.#ctor*
  nameWithType.vb: Wordlist.New()
  fullName.vb: Sdl.LanguagePlatform.Core.Wordlist.New()
  name.vb: New()
- uid: Sdl.LanguagePlatform.Core.Wordlist.#ctor(Sdl.LanguagePlatform.Core.SearchOption)
  commentId: M:Sdl.LanguagePlatform.Core.Wordlist.#ctor(Sdl.LanguagePlatform.Core.SearchOption)
  id: '#ctor(Sdl.LanguagePlatform.Core.SearchOption)'
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Wordlist(SearchOption)
  nameWithType: Wordlist.Wordlist(SearchOption)
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Wordlist(Sdl.LanguagePlatform.Core.SearchOption)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Initializes a new instance of the Wordlist class with an empty wordlist.
  example: []
  syntax:
    content: public Wordlist(SearchOption flags)
    parameters:
    - id: flags
      type: Sdl.LanguagePlatform.Core.SearchOption
    content.vb: Public Sub New(flags As SearchOption)
  overload: Sdl.LanguagePlatform.Core.Wordlist.#ctor*
  nameWithType.vb: Wordlist.New(SearchOption)
  fullName.vb: Sdl.LanguagePlatform.Core.Wordlist.New(Sdl.LanguagePlatform.Core.SearchOption)
  name.vb: New(SearchOption)
- uid: Sdl.LanguagePlatform.Core.Wordlist.#ctor(Sdl.LanguagePlatform.Core.Wordlist)
  commentId: M:Sdl.LanguagePlatform.Core.Wordlist.#ctor(Sdl.LanguagePlatform.Core.Wordlist)
  id: '#ctor(Sdl.LanguagePlatform.Core.Wordlist)'
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Wordlist(Wordlist)
  nameWithType: Wordlist.Wordlist(Wordlist)
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Wordlist(Sdl.LanguagePlatform.Core.Wordlist)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Creates a new instance and deep-copies the other instance.
  example: []
  syntax:
    content: public Wordlist(Wordlist other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.Wordlist
    content.vb: Public Sub New(other As Wordlist)
  overload: Sdl.LanguagePlatform.Core.Wordlist.#ctor*
  nameWithType.vb: Wordlist.New(Wordlist)
  fullName.vb: Sdl.LanguagePlatform.Core.Wordlist.New(Sdl.LanguagePlatform.Core.Wordlist)
  name.vb: New(Wordlist)
- uid: Sdl.LanguagePlatform.Core.Wordlist.Contains(System.String)
  commentId: M:Sdl.LanguagePlatform.Core.Wordlist.Contains(System.String)
  id: Contains(System.String)
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Contains(string)
  nameWithType: Wordlist.Contains(string)
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Contains(string)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Determines whether this wordlist contains the specified string.
  example: []
  syntax:
    content: public bool Contains(string s)
    parameters:
    - id: s
      type: System.String
      description: The string to search for.
    return:
      type: System.Boolean
      description: true if s is part of this wordlist, otherwise false.
    content.vb: Public Function Contains(s As String) As Boolean
  overload: Sdl.LanguagePlatform.Core.Wordlist.Contains*
  nameWithType.vb: Wordlist.Contains(String)
  fullName.vb: Sdl.LanguagePlatform.Core.Wordlist.Contains(String)
  name.vb: Contains(String)
- uid: Sdl.LanguagePlatform.Core.Wordlist.Clear
  commentId: M:Sdl.LanguagePlatform.Core.Wordlist.Clear
  id: Clear
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: Wordlist.Clear()
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Clear()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Removes all words from the list, but keeps the flags.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: Sdl.LanguagePlatform.Core.Wordlist.Clear*
- uid: Sdl.LanguagePlatform.Core.Wordlist.Merge(Sdl.LanguagePlatform.Core.Wordlist)
  commentId: M:Sdl.LanguagePlatform.Core.Wordlist.Merge(Sdl.LanguagePlatform.Core.Wordlist)
  id: Merge(Sdl.LanguagePlatform.Core.Wordlist)
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Merge(Wordlist)
  nameWithType: Wordlist.Merge(Wordlist)
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Merge(Sdl.LanguagePlatform.Core.Wordlist)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Merges the contents of another instance into this word list. Note that conflicting

    flags and search options are ignored.
  example: []
  syntax:
    content: public void Merge(Wordlist other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.Wordlist
      description: The instance to merge into this instance.
    content.vb: Public Sub Merge(other As Wordlist)
  overload: Sdl.LanguagePlatform.Core.Wordlist.Merge*
- uid: Sdl.LanguagePlatform.Core.Wordlist.Merge(System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Wordlist})
  commentId: M:Sdl.LanguagePlatform.Core.Wordlist.Merge(System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Wordlist})
  id: Merge(System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Wordlist})
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Merge(IEnumerable<Wordlist>)
  nameWithType: Wordlist.Merge(IEnumerable<Wordlist>)
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Merge(System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.Core.Wordlist>)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Creates a new word list and merges all specified wordLists into the new one.
  example: []
  syntax:
    content: public static Wordlist Merge(IEnumerable<Wordlist> wordLists)
    parameters:
    - id: wordLists
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Wordlist}
      description: The word lists to merge.
    return:
      type: Sdl.LanguagePlatform.Core.Wordlist
      description: The result of the merge, or null if all specified word lists are null.
    content.vb: Public Shared Function Merge(wordLists As IEnumerable(Of Wordlist)) As Wordlist
  overload: Sdl.LanguagePlatform.Core.Wordlist.Merge*
  nameWithType.vb: Wordlist.Merge(IEnumerable(Of Wordlist))
  fullName.vb: Sdl.LanguagePlatform.Core.Wordlist.Merge(System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.Core.Wordlist))
  name.vb: Merge(IEnumerable(Of Wordlist))
- uid: Sdl.LanguagePlatform.Core.Wordlist.GetRegularExpression(Sdl.LanguagePlatform.Core.CharacterSet@)
  commentId: M:Sdl.LanguagePlatform.Core.Wordlist.GetRegularExpression(Sdl.LanguagePlatform.Core.CharacterSet@)
  id: GetRegularExpression(Sdl.LanguagePlatform.Core.CharacterSet@)
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: GetRegularExpression(out CharacterSet)
  nameWithType: Wordlist.GetRegularExpression(out CharacterSet)
  fullName: Sdl.LanguagePlatform.Core.Wordlist.GetRegularExpression(out Sdl.LanguagePlatform.Core.CharacterSet)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Computes a <xref href="System.Text.RegularExpressions.Regex?text=regular+expression" data-throw-if-not-resolved="false"></xref> 

    which matches the words in the list. The expression is not anchored.

    <p>

    NOTE: if the word list is case insensitive, the regular expression will include the 

    corresponding option "(?i-:)". 

    </p>
  example: []
  syntax:
    content: public string GetRegularExpression(out CharacterSet first)
    parameters:
    - id: first
      type: Sdl.LanguagePlatform.Core.CharacterSet
    return:
      type: System.String
    content.vb: Public Function GetRegularExpression(first As CharacterSet) As String
  overload: Sdl.LanguagePlatform.Core.Wordlist.GetRegularExpression*
  nameWithType.vb: Wordlist.GetRegularExpression(CharacterSet)
  fullName.vb: Sdl.LanguagePlatform.Core.Wordlist.GetRegularExpression(Sdl.LanguagePlatform.Core.CharacterSet)
  name.vb: GetRegularExpression(CharacterSet)
- uid: Sdl.LanguagePlatform.Core.Wordlist.Add(System.String)
  commentId: M:Sdl.LanguagePlatform.Core.Wordlist.Add(System.String)
  id: Add(System.String)
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Add(string)
  nameWithType: Wordlist.Add(string)
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Add(string)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Adds a new string to this wordlist if it isn't already there.
  example: []
  syntax:
    content: public bool Add(string s)
    parameters:
    - id: s
      type: System.String
    return:
      type: System.Boolean
      description: true iff the word was added
    content.vb: Public Function Add(s As String) As Boolean
  overload: Sdl.LanguagePlatform.Core.Wordlist.Add*
  nameWithType.vb: Wordlist.Add(String)
  fullName.vb: Sdl.LanguagePlatform.Core.Wordlist.Add(String)
  name.vb: Add(String)
- uid: Sdl.LanguagePlatform.Core.Wordlist.Remove(System.String)
  commentId: M:Sdl.LanguagePlatform.Core.Wordlist.Remove(System.String)
  id: Remove(System.String)
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Remove(string)
  nameWithType: Wordlist.Remove(string)
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Remove(string)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Removes <code class="paramref">s</code> from the list.
  example: []
  syntax:
    content: public bool Remove(string s)
    parameters:
    - id: s
      type: System.String
    return:
      type: System.Boolean
      description: true iff the word was removed
    content.vb: Public Function Remove(s As String) As Boolean
  overload: Sdl.LanguagePlatform.Core.Wordlist.Remove*
  nameWithType.vb: Wordlist.Remove(String)
  fullName.vb: Sdl.LanguagePlatform.Core.Wordlist.Remove(String)
  name.vb: Remove(String)
- uid: Sdl.LanguagePlatform.Core.Wordlist.Save(System.IO.TextWriter)
  commentId: M:Sdl.LanguagePlatform.Core.Wordlist.Save(System.IO.TextWriter)
  id: Save(System.IO.TextWriter)
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Save(TextWriter)
  nameWithType: Wordlist.Save(TextWriter)
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Save(System.IO.TextWriter)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Saves the word list in textual format to the specified stream.
  example: []
  syntax:
    content: public void Save(TextWriter writer)
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: ''
    content.vb: Public Sub Save(writer As TextWriter)
  overload: Sdl.LanguagePlatform.Core.Wordlist.Save*
- uid: Sdl.LanguagePlatform.Core.Wordlist.CleanupList(System.String,System.String,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Wordlist.CleanupList(System.String,System.String,System.Boolean)
  id: CleanupList(System.String,System.String,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: CleanupList(string, string, bool)
  nameWithType: Wordlist.CleanupList(string, string, bool)
  fullName: Sdl.LanguagePlatform.Core.Wordlist.CleanupList(string, string, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Loads a word list from the specified input file, removes all duplicates, and writes the result

    to the output file. The two file names should not be the same. Only used internally.
  example: []
  syntax:
    content: public static void CleanupList(string inputFileName, string outputFileName, bool ignoreComments = true)
    parameters:
    - id: inputFileName
      type: System.String
      description: The input file name
    - id: outputFileName
      type: System.String
      description: The output file name
    - id: ignoreComments
      type: System.Boolean
      description: Ignore comments flag, if not set it is true
    content.vb: Public Shared Sub CleanupList(inputFileName As String, outputFileName As String, ignoreComments As Boolean = True)
  overload: Sdl.LanguagePlatform.Core.Wordlist.CleanupList*
  nameWithType.vb: Wordlist.CleanupList(String, String, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Wordlist.CleanupList(String, String, Boolean)
  name.vb: CleanupList(String, String, Boolean)
- uid: Sdl.LanguagePlatform.Core.Wordlist.Load(System.String,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Wordlist.Load(System.String,System.Boolean)
  id: Load(System.String,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Load(string, bool)
  nameWithType: Wordlist.Load(string, bool)
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Load(string, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Adds new words to this wordlist from a stream. A UTF8 data encoding is assumed, but byte order

    marks will be honored.
  example: []
  syntax:
    content: public void Load(string filename, bool ignoreComments = true)
    parameters:
    - id: filename
      type: System.String
      description: The name of the file to load
    - id: ignoreComments
      type: System.Boolean
      description: Ignore comments flag, if not set it is true
    content.vb: Public Sub Load(filename As String, ignoreComments As Boolean = True)
  overload: Sdl.LanguagePlatform.Core.Wordlist.Load*
  nameWithType.vb: Wordlist.Load(String, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Wordlist.Load(String, Boolean)
  name.vb: Load(String, Boolean)
- uid: Sdl.LanguagePlatform.Core.Wordlist.Load(System.IO.Stream,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Wordlist.Load(System.IO.Stream,System.Boolean)
  id: Load(System.IO.Stream,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Load(Stream, bool)
  nameWithType: Wordlist.Load(Stream, bool)
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Load(System.IO.Stream, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Adds new words to this wordlist from a stream. A UTF8 data encoding is assumed, but byte order

    marks will be honored.
  example: []
  syntax:
    content: public void Load(Stream stream, bool ignoreComments = true)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream.
    - id: ignoreComments
      type: System.Boolean
      description: Ignore comments flag, if not set it is true
    content.vb: Public Sub Load(stream As Stream, ignoreComments As Boolean = True)
  overload: Sdl.LanguagePlatform.Core.Wordlist.Load*
  nameWithType.vb: Wordlist.Load(Stream, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Wordlist.Load(System.IO.Stream, Boolean)
  name.vb: Load(Stream, Boolean)
- uid: Sdl.LanguagePlatform.Core.Wordlist.Load(System.Byte[],System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Wordlist.Load(System.Byte[],System.Boolean)
  id: Load(System.Byte[],System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Load(byte[], bool)
  nameWithType: Wordlist.Load(byte[], bool)
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Load(byte[], bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Read the word list from an array of bytes. A UTF8 encoding is assumed, but byte order

    marks will be honored.
  example: []
  syntax:
    content: public void Load(byte[] data, bool ignoreComments = true)
    parameters:
    - id: data
      type: System.Byte[]
      description: ''
    - id: ignoreComments
      type: System.Boolean
      description: Ignore comments flag, if not set it is true
    content.vb: Public Sub Load(data As Byte(), ignoreComments As Boolean = True)
  overload: Sdl.LanguagePlatform.Core.Wordlist.Load*
  nameWithType.vb: Wordlist.Load(Byte(), Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Wordlist.Load(Byte(), Boolean)
  name.vb: Load(Byte(), Boolean)
- uid: Sdl.LanguagePlatform.Core.Wordlist.GetBytes
  commentId: M:Sdl.LanguagePlatform.Core.Wordlist.GetBytes
  id: GetBytes
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: GetBytes()
  nameWithType: Wordlist.GetBytes()
  fullName: Sdl.LanguagePlatform.Core.Wordlist.GetBytes()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Returns the contents of the word list as an array of bytes. The data is UTF8-encoded. Note

    that search flags (such as case invariance) are not preserved.
  example: []
  syntax:
    content: public byte[] GetBytes()
    return:
      type: System.Byte[]
      description: An array of bytes which represents the word list.
    content.vb: Public Function GetBytes() As Byte()
  overload: Sdl.LanguagePlatform.Core.Wordlist.GetBytes*
- uid: Sdl.LanguagePlatform.Core.Wordlist.Clone
  commentId: M:Sdl.LanguagePlatform.Core.Wordlist.Clone
  id: Clone
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Wordlist.Clone()
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Clone()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: <xref href="System.ICloneable.Clone" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public object Clone()
    return:
      type: System.Object
      description: A new object that is a deep copy of this instance.
    content.vb: Public Function Clone() As Object
  overload: Sdl.LanguagePlatform.Core.Wordlist.Clone*
  implements:
  - System.ICloneable.Clone
- uid: Sdl.LanguagePlatform.Core.Wordlist.Version
  commentId: P:Sdl.LanguagePlatform.Core.Wordlist.Version
  id: Version
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: Wordlist.Version
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Version
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: ''
  example: []
  syntax:
    content: public int Version { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Version As Integer
  overload: Sdl.LanguagePlatform.Core.Wordlist.Version*
- uid: Sdl.LanguagePlatform.Core.Wordlist.Flags
  commentId: P:Sdl.LanguagePlatform.Core.Wordlist.Flags
  id: Flags
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: Wordlist.Flags
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Flags
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Gets the search flags.
  example: []
  syntax:
    content: public SearchOption Flags { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.SearchOption
    content.vb: Public ReadOnly Property Flags As SearchOption
  overload: Sdl.LanguagePlatform.Core.Wordlist.Flags*
- uid: Sdl.LanguagePlatform.Core.Wordlist.Items
  commentId: P:Sdl.LanguagePlatform.Core.Wordlist.Items
  id: Items
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: Wordlist.Items
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Items
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Gets the list of words.
  example: []
  syntax:
    content: public IEnumerable<string> Items { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public ReadOnly Property Items As IEnumerable(Of String)
  overload: Sdl.LanguagePlatform.Core.Wordlist.Items*
- uid: Sdl.LanguagePlatform.Core.Wordlist.Count
  commentId: P:Sdl.LanguagePlatform.Core.Wordlist.Count
  id: Count
  parent: Sdl.LanguagePlatform.Core.Wordlist
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: Wordlist.Count
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Count
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Returns the number of words in the word list.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Sdl.LanguagePlatform.Core.Wordlist.Count*
references:
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  href: Sdl.html
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core.Wordlist.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Wordlist.#ctor
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Wordlist.html#Sdl_LanguagePlatform_Core_Wordlist__ctor
  name: Wordlist
  nameWithType: Wordlist.Wordlist
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Wordlist
  nameWithType.vb: Wordlist.New
  fullName.vb: Sdl.LanguagePlatform.Core.Wordlist.New
  name.vb: New
- uid: Sdl.LanguagePlatform.Core.SearchOption
  commentId: T:Sdl.LanguagePlatform.Core.SearchOption
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SearchOption.html
  name: SearchOption
  nameWithType: SearchOption
  fullName: Sdl.LanguagePlatform.Core.SearchOption
- uid: Sdl.LanguagePlatform.Core.Wordlist
  commentId: T:Sdl.LanguagePlatform.Core.Wordlist
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Wordlist.html
  name: Wordlist
  nameWithType: Wordlist
  fullName: Sdl.LanguagePlatform.Core.Wordlist
- uid: Sdl.LanguagePlatform.Core.Wordlist.Contains*
  commentId: Overload:Sdl.LanguagePlatform.Core.Wordlist.Contains
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Wordlist.html#Sdl_LanguagePlatform_Core_Wordlist_Contains_System_String_
  name: Contains
  nameWithType: Wordlist.Contains
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Contains
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.LanguagePlatform.Core.Wordlist.Clear*
  commentId: Overload:Sdl.LanguagePlatform.Core.Wordlist.Clear
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Wordlist.html#Sdl_LanguagePlatform_Core_Wordlist_Clear
  name: Clear
  nameWithType: Wordlist.Clear
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Clear
- uid: Sdl.LanguagePlatform.Core.Wordlist.Merge*
  commentId: Overload:Sdl.LanguagePlatform.Core.Wordlist.Merge
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Wordlist.html#Sdl_LanguagePlatform_Core_Wordlist_Merge_Sdl_LanguagePlatform_Core_Wordlist_
  name: Merge
  nameWithType: Wordlist.Merge
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Merge
- uid: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Wordlist}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Wordlist}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Wordlist>
  nameWithType: IEnumerable<Wordlist>
  fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.Core.Wordlist>
  nameWithType.vb: IEnumerable(Of Wordlist)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.Core.Wordlist)
  name.vb: IEnumerable(Of Wordlist)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Sdl.LanguagePlatform.Core.Wordlist
    name: Wordlist
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Wordlist.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Wordlist
    name: Wordlist
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Wordlist.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Text.RegularExpressions.Regex
  commentId: T:System.Text.RegularExpressions.Regex
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: Sdl.LanguagePlatform.Core.Wordlist.GetRegularExpression*
  commentId: Overload:Sdl.LanguagePlatform.Core.Wordlist.GetRegularExpression
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Wordlist.html#Sdl_LanguagePlatform_Core_Wordlist_GetRegularExpression_Sdl_LanguagePlatform_Core_CharacterSet__
  name: GetRegularExpression
  nameWithType: Wordlist.GetRegularExpression
  fullName: Sdl.LanguagePlatform.Core.Wordlist.GetRegularExpression
- uid: Sdl.LanguagePlatform.Core.CharacterSet
  commentId: T:Sdl.LanguagePlatform.Core.CharacterSet
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  href: Sdl.LanguagePlatform.Core.CharacterSet.html
  name: CharacterSet
  nameWithType: CharacterSet
  fullName: Sdl.LanguagePlatform.Core.CharacterSet
- uid: Sdl.LanguagePlatform.Core.Wordlist.Add*
  commentId: Overload:Sdl.LanguagePlatform.Core.Wordlist.Add
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Wordlist.html#Sdl_LanguagePlatform_Core_Wordlist_Add_System_String_
  name: Add
  nameWithType: Wordlist.Add
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Add
- uid: Sdl.LanguagePlatform.Core.Wordlist.Remove*
  commentId: Overload:Sdl.LanguagePlatform.Core.Wordlist.Remove
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Wordlist.html#Sdl_LanguagePlatform_Core_Wordlist_Remove_System_String_
  name: Remove
  nameWithType: Wordlist.Remove
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Remove
- uid: Sdl.LanguagePlatform.Core.Wordlist.Save*
  commentId: Overload:Sdl.LanguagePlatform.Core.Wordlist.Save
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Wordlist.html#Sdl_LanguagePlatform_Core_Wordlist_Save_System_IO_TextWriter_
  name: Save
  nameWithType: Wordlist.Save
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Save
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textwriter
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: Sdl.LanguagePlatform.Core.Wordlist.CleanupList*
  commentId: Overload:Sdl.LanguagePlatform.Core.Wordlist.CleanupList
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Wordlist.html#Sdl_LanguagePlatform_Core_Wordlist_CleanupList_System_String_System_String_System_Boolean_
  name: CleanupList
  nameWithType: Wordlist.CleanupList
  fullName: Sdl.LanguagePlatform.Core.Wordlist.CleanupList
- uid: Sdl.LanguagePlatform.Core.Wordlist.Load*
  commentId: Overload:Sdl.LanguagePlatform.Core.Wordlist.Load
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Wordlist.html#Sdl_LanguagePlatform_Core_Wordlist_Load_System_String_System_Boolean_
  name: Load
  nameWithType: Wordlist.Load
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Load
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.Core.Wordlist.GetBytes*
  commentId: Overload:Sdl.LanguagePlatform.Core.Wordlist.GetBytes
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Wordlist.html#Sdl_LanguagePlatform_Core_Wordlist_GetBytes
  name: GetBytes
  nameWithType: Wordlist.GetBytes
  fullName: Sdl.LanguagePlatform.Core.Wordlist.GetBytes
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.Core.Wordlist.Clone*
  commentId: Overload:Sdl.LanguagePlatform.Core.Wordlist.Clone
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Wordlist.html#Sdl_LanguagePlatform_Core_Wordlist_Clone
  name: Clone
  nameWithType: Wordlist.Clone
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Clone
- uid: Sdl.LanguagePlatform.Core.Wordlist.Version*
  commentId: Overload:Sdl.LanguagePlatform.Core.Wordlist.Version
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Wordlist.html#Sdl_LanguagePlatform_Core_Wordlist_Version
  name: Version
  nameWithType: Wordlist.Version
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Version
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Sdl.LanguagePlatform.Core.Wordlist.Flags*
  commentId: Overload:Sdl.LanguagePlatform.Core.Wordlist.Flags
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Wordlist.html#Sdl_LanguagePlatform_Core_Wordlist_Flags
  name: Flags
  nameWithType: Wordlist.Flags
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Flags
- uid: Sdl.LanguagePlatform.Core.Wordlist.Items*
  commentId: Overload:Sdl.LanguagePlatform.Core.Wordlist.Items
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Wordlist.html#Sdl_LanguagePlatform_Core_Wordlist_Items
  name: Items
  nameWithType: Wordlist.Items
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Items
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Sdl.LanguagePlatform.Core.Wordlist.Count*
  commentId: Overload:Sdl.LanguagePlatform.Core.Wordlist.Count
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Wordlist.html#Sdl_LanguagePlatform_Core_Wordlist_Count
  name: Count
  nameWithType: Wordlist.Count
  fullName: Sdl.LanguagePlatform.Core.Wordlist.Count
