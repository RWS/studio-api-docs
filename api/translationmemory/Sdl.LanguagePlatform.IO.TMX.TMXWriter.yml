### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter
  commentId: T:Sdl.LanguagePlatform.IO.TMX.TMXWriter
  id: TMXWriter
  parent: Sdl.LanguagePlatform.IO.TMX
  children:
  - Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.IO.Stream)
  - Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.IO.Stream,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  - Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.IO.Stream,Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  - Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.String)
  - Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.String,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  - Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.String,Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings)
  - Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.String,Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  - Sdl.LanguagePlatform.IO.TMX.TMXWriter.Close
  - Sdl.LanguagePlatform.IO.TMX.TMXWriter.Dispose
  - Sdl.LanguagePlatform.IO.TMX.TMXWriter.Emit(Sdl.LanguagePlatform.IO.Streams.Event)
  - Sdl.LanguagePlatform.IO.TMX.TMXWriter.EmitAsync(Sdl.LanguagePlatform.IO.Streams.Event)
  langs:
  - csharp
  - vb
  name: TMXWriter
  nameWithType: TMXWriter
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter
  type: Class
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  summary: "\nRepresents a writer for exporting translation units into the TMX format.\n<remarks>The content is generated in TMX version 1.4.</remarks>\n"
  syntax:
    content: 'public class TMXWriter : IEventReceiver, IDisposable'
    content.vb: >-
      Public Class TMXWriter
          Implements IEventReceiver, IDisposable
  inheritance:
  - System.Object
  implements:
  - Sdl.LanguagePlatform.IO.Streams.IEventReceiver
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.String)
  commentId: M:Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.LanguagePlatform.IO.TMX.TMXWriter
  langs:
  - csharp
  - vb
  name: TMXWriter(String)
  nameWithType: TMXWriter.TMXWriter(String)
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter.TMXWriter(System.String)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  summary: "\nInitializes a new instance of the TMXWriter class with the specified file name and UTF8 encoding.\n"
  syntax:
    content: >-
      [Obsolete("Use version providing ICultureMetadataManager")]

      public TMXWriter(string filename)
    parameters:
    - id: filename
      type: System.String
      description: The file name.
    content.vb: >-
      <Obsolete("Use version providing ICultureMetadataManager")>

      Public Sub New(filename As String)
  overload: Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use version providing ICultureMetadataManager
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.String,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  commentId: M:Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.String,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  id: '#ctor(System.String,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)'
  parent: Sdl.LanguagePlatform.IO.TMX.TMXWriter
  langs:
  - csharp
  - vb
  name: TMXWriter(String, ICultureMetadataManager)
  nameWithType: TMXWriter.TMXWriter(String, ICultureMetadataManager)
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter.TMXWriter(System.String, Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  summary: "\nInitializes a new instance of the TMXWriter class with the specified file name and UTF8 encoding.\n"
  syntax:
    content: public TMXWriter(string filename, ICultureMetadataManager cultureMetadataManager)
    parameters:
    - id: filename
      type: System.String
      description: The file name.
    - id: cultureMetadataManager
      type: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
      description: Language culture meta-data source.
    content.vb: Public Sub New(filename As String, cultureMetadataManager As ICultureMetadataManager)
  overload: Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.IO.Stream)
  commentId: M:Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: Sdl.LanguagePlatform.IO.TMX.TMXWriter
  langs:
  - csharp
  - vb
  name: TMXWriter(Stream)
  nameWithType: TMXWriter.TMXWriter(Stream)
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter.TMXWriter(System.IO.Stream)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  summary: "\nInitializes a new instance of the TMXWriter class with the specified output stream and UTF8 encoding.\nThe ICultureMetadataManager instance used is the obsolete LanguageRegistryApi.Instance.CultureMetadataManager.\n"
  syntax:
    content: >-
      [Obsolete("Use version providing ICultureMetadataManager")]

      public TMXWriter(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The output stream.
    content.vb: >-
      <Obsolete("Use version providing ICultureMetadataManager")>

      Public Sub New(stream As Stream)
  overload: Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use version providing ICultureMetadataManager
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.IO.Stream,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  commentId: M:Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.IO.Stream,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  id: '#ctor(System.IO.Stream,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)'
  parent: Sdl.LanguagePlatform.IO.TMX.TMXWriter
  langs:
  - csharp
  - vb
  name: TMXWriter(Stream, ICultureMetadataManager)
  nameWithType: TMXWriter.TMXWriter(Stream, ICultureMetadataManager)
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter.TMXWriter(System.IO.Stream, Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  summary: "\nInitializes a new instance of the TMXWriter class with the specified output stream and UTF8 encoding.\n"
  syntax:
    content: public TMXWriter(Stream stream, ICultureMetadataManager cultureMetadataManager)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The output stream.
    - id: cultureMetadataManager
      type: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
      description: Language culture meta-data source.
    content.vb: Public Sub New(stream As Stream, cultureMetadataManager As ICultureMetadataManager)
  overload: Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.String,Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings)
  commentId: M:Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.String,Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings)
  id: '#ctor(System.String,Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings)'
  parent: Sdl.LanguagePlatform.IO.TMX.TMXWriter
  langs:
  - csharp
  - vb
  name: TMXWriter(String, TMXWriterSettings)
  nameWithType: TMXWriter.TMXWriter(String, TMXWriterSettings)
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter.TMXWriter(System.String, Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  summary: "\nInitializes a new instance of the TMXWriter class with the specified file name and encoding.\n"
  syntax:
    content: >-
      [Obsolete("Use version providing ICultureMetadataManager")]

      public TMXWriter(string filename, TMXWriterSettings writerSettings)
    parameters:
    - id: filename
      type: System.String
      description: The file name.
    - id: writerSettings
      type: Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings
      description: The <xref href="Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings" data-throw-if-not-resolved="false"></xref>TMX writer settings to apply.
    content.vb: >-
      <Obsolete("Use version providing ICultureMetadataManager")>

      Public Sub New(filename As String, writerSettings As TMXWriterSettings)
  overload: Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use version providing ICultureMetadataManager
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.String,Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  commentId: M:Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.String,Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  id: '#ctor(System.String,Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)'
  parent: Sdl.LanguagePlatform.IO.TMX.TMXWriter
  langs:
  - csharp
  - vb
  name: TMXWriter(String, TMXWriterSettings, ICultureMetadataManager)
  nameWithType: TMXWriter.TMXWriter(String, TMXWriterSettings, ICultureMetadataManager)
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter.TMXWriter(System.String, Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings, Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  summary: "\nInitializes a new instance of the TMXWriter class with the specified file name and encoding.\n"
  syntax:
    content: public TMXWriter(string filename, TMXWriterSettings writerSettings, ICultureMetadataManager cultureMetadataManager)
    parameters:
    - id: filename
      type: System.String
      description: The file name.
    - id: writerSettings
      type: Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings
      description: The <xref href="Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings" data-throw-if-not-resolved="false"></xref>TMX writer settings to apply.
    - id: cultureMetadataManager
      type: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
      description: Language culture meta-data source.
    content.vb: Public Sub New(filename As String, writerSettings As TMXWriterSettings, cultureMetadataManager As ICultureMetadataManager)
  overload: Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.IO.Stream,Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  commentId: M:Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor(System.IO.Stream,Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  id: '#ctor(System.IO.Stream,Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)'
  parent: Sdl.LanguagePlatform.IO.TMX.TMXWriter
  langs:
  - csharp
  - vb
  name: TMXWriter(Stream, TMXWriterSettings, ICultureMetadataManager)
  nameWithType: TMXWriter.TMXWriter(Stream, TMXWriterSettings, ICultureMetadataManager)
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter.TMXWriter(System.IO.Stream, Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings, Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  summary: "\nInitializes a new instance of the TMXWriter class with the specified output stream and encoding.\n"
  syntax:
    content: public TMXWriter(Stream outStream, TMXWriterSettings writerSettings, ICultureMetadataManager cultureMetadataManager)
    parameters:
    - id: outStream
      type: System.IO.Stream
      description: The output stream.
    - id: writerSettings
      type: Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings
      description: The <xref href="Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings" data-throw-if-not-resolved="false"></xref>TMX writer settings to apply.
    - id: cultureMetadataManager
      type: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
      description: Language culture meta-data source.
    content.vb: Public Sub New(outStream As Stream, writerSettings As TMXWriterSettings, cultureMetadataManager As ICultureMetadataManager)
  overload: Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter.Emit(Sdl.LanguagePlatform.IO.Streams.Event)
  commentId: M:Sdl.LanguagePlatform.IO.TMX.TMXWriter.Emit(Sdl.LanguagePlatform.IO.Streams.Event)
  id: Emit(Sdl.LanguagePlatform.IO.Streams.Event)
  parent: Sdl.LanguagePlatform.IO.TMX.TMXWriter
  langs:
  - csharp
  - vb
  name: Emit(Event)
  nameWithType: TMXWriter.Emit(Event)
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter.Emit(Sdl.LanguagePlatform.IO.Streams.Event)
  type: Method
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  syntax:
    content: public void Emit(Event e)
    parameters:
    - id: e
      type: Sdl.LanguagePlatform.IO.Streams.Event
    content.vb: Public Sub Emit(e As  Event)
  overload: Sdl.LanguagePlatform.IO.TMX.TMXWriter.Emit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter.EmitAsync(Sdl.LanguagePlatform.IO.Streams.Event)
  commentId: M:Sdl.LanguagePlatform.IO.TMX.TMXWriter.EmitAsync(Sdl.LanguagePlatform.IO.Streams.Event)
  id: EmitAsync(Sdl.LanguagePlatform.IO.Streams.Event)
  parent: Sdl.LanguagePlatform.IO.TMX.TMXWriter
  langs:
  - csharp
  - vb
  name: EmitAsync(Event)
  nameWithType: TMXWriter.EmitAsync(Event)
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter.EmitAsync(Sdl.LanguagePlatform.IO.Streams.Event)
  type: Method
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  summary: "\nWrites the specified event to the associated export writer.\n"
  syntax:
    content: public Task EmitAsync(Event e)
    parameters:
    - id: e
      type: Sdl.LanguagePlatform.IO.Streams.Event
      description: The event.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function EmitAsync(e As  Event) As Task
  overload: Sdl.LanguagePlatform.IO.TMX.TMXWriter.EmitAsync*
  implements:
  - Sdl.LanguagePlatform.IO.Streams.IEventReceiver.EmitAsync(Sdl.LanguagePlatform.IO.Streams.Event)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter.Close
  commentId: M:Sdl.LanguagePlatform.IO.TMX.TMXWriter.Close
  id: Close
  parent: Sdl.LanguagePlatform.IO.TMX.TMXWriter
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: TMXWriter.Close()
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter.Close()
  type: Method
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  summary: "\nCloses the underlying writer.\n"
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  overload: Sdl.LanguagePlatform.IO.TMX.TMXWriter.Close*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter.Dispose
  commentId: M:Sdl.LanguagePlatform.IO.TMX.TMXWriter.Dispose
  id: Dispose
  parent: Sdl.LanguagePlatform.IO.TMX.TMXWriter
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TMXWriter.Dispose()
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter.Dispose()
  type: Method
  source:
    path: Sdl.LanguagePlatform.IO
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.IO
  namespace: Sdl.LanguagePlatform.IO.TMX
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Sdl.LanguagePlatform.IO.TMX.TMXWriter.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.IO.TMX
  commentId: N:Sdl.LanguagePlatform.IO.TMX
  isExternal: true
  name: Sdl.LanguagePlatform.IO.TMX
  nameWithType: Sdl.LanguagePlatform.IO.TMX
  fullName: Sdl.LanguagePlatform.IO.TMX
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.LanguagePlatform.IO.Streams.IEventReceiver
  commentId: T:Sdl.LanguagePlatform.IO.Streams.IEventReceiver
  parent: Sdl.LanguagePlatform.IO.Streams
  isExternal: true
  name: IEventReceiver
  nameWithType: IEventReceiver
  fullName: Sdl.LanguagePlatform.IO.Streams.IEventReceiver
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.IO.Streams
  commentId: N:Sdl.LanguagePlatform.IO.Streams
  isExternal: true
  name: Sdl.LanguagePlatform.IO.Streams
  nameWithType: Sdl.LanguagePlatform.IO.Streams
  fullName: Sdl.LanguagePlatform.IO.Streams
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.IO.TMX.TMXWriter.#ctor
  isExternal: true
  name: TMXWriter
  nameWithType: TMXWriter.TMXWriter
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter.TMXWriter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  isExternal: true
  name: ICultureMetadataManager
  nameWithType: ICultureMetadataManager
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings
  commentId: T:Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings
  parent: Sdl.LanguagePlatform.IO.TMX
  isExternal: true
  name: TMXWriterSettings
  nameWithType: TMXWriterSettings
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriterSettings
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter.Emit*
  commentId: Overload:Sdl.LanguagePlatform.IO.TMX.TMXWriter.Emit
  isExternal: true
  name: Emit
  nameWithType: TMXWriter.Emit
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter.Emit
- uid: Sdl.LanguagePlatform.IO.Streams.Event
  commentId: T:Sdl.LanguagePlatform.IO.Streams.Event
  parent: Sdl.LanguagePlatform.IO.Streams
  isExternal: true
  name: Event
  nameWithType: Event
  fullName: Sdl.LanguagePlatform.IO.Streams.Event
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter.EmitAsync*
  commentId: Overload:Sdl.LanguagePlatform.IO.TMX.TMXWriter.EmitAsync
  isExternal: true
  name: EmitAsync
  nameWithType: TMXWriter.EmitAsync
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter.EmitAsync
- uid: Sdl.LanguagePlatform.IO.Streams.IEventReceiver.EmitAsync(Sdl.LanguagePlatform.IO.Streams.Event)
  commentId: M:Sdl.LanguagePlatform.IO.Streams.IEventReceiver.EmitAsync(Sdl.LanguagePlatform.IO.Streams.Event)
  parent: Sdl.LanguagePlatform.IO.Streams.IEventReceiver
  isExternal: true
  name: EmitAsync(Event)
  nameWithType: IEventReceiver.EmitAsync(Event)
  fullName: Sdl.LanguagePlatform.IO.Streams.IEventReceiver.EmitAsync(Sdl.LanguagePlatform.IO.Streams.Event)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.IO.Streams.IEventReceiver.EmitAsync(Sdl.LanguagePlatform.IO.Streams.Event)
    name: EmitAsync
    nameWithType: IEventReceiver.EmitAsync
    fullName: Sdl.LanguagePlatform.IO.Streams.IEventReceiver.EmitAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.IO.Streams.Event
    name: Event
    nameWithType: Event
    fullName: Sdl.LanguagePlatform.IO.Streams.Event
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.IO.Streams.IEventReceiver.EmitAsync(Sdl.LanguagePlatform.IO.Streams.Event)
    name: EmitAsync
    nameWithType: IEventReceiver.EmitAsync
    fullName: Sdl.LanguagePlatform.IO.Streams.IEventReceiver.EmitAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.IO.Streams.Event
    name: Event
    nameWithType: Event
    fullName: Sdl.LanguagePlatform.IO.Streams.Event
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter.Close*
  commentId: Overload:Sdl.LanguagePlatform.IO.TMX.TMXWriter.Close
  isExternal: true
  name: Close
  nameWithType: TMXWriter.Close
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter.Close
- uid: Sdl.LanguagePlatform.IO.TMX.TMXWriter.Dispose*
  commentId: Overload:Sdl.LanguagePlatform.IO.TMX.TMXWriter.Dispose
  isExternal: true
  name: Dispose
  nameWithType: TMXWriter.Dispose
  fullName: Sdl.LanguagePlatform.IO.TMX.TMXWriter.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
