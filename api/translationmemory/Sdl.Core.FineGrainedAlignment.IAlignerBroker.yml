### YamlMime:ManagedReference
items:
- uid: Sdl.Core.FineGrainedAlignment.IAlignerBroker
  commentId: T:Sdl.Core.FineGrainedAlignment.IAlignerBroker
  id: IAlignerBroker
  parent: Sdl.Core.FineGrainedAlignment
  children:
  - Sdl.Core.FineGrainedAlignment.IAlignerBroker.GetAlignerAsync(Sdl.Core.FineGrainedAlignment.AlignerDefinition)
  langs:
  - csharp
  - vb
  name: IAlignerBroker
  nameWithType: IAlignerBroker
  fullName: Sdl.Core.FineGrainedAlignment.IAlignerBroker
  type: Interface
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public interface IAlignerBroker
    content.vb: Public Interface IAlignerBroker
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Core.FineGrainedAlignment.IAlignerBroker.GetAlignerAsync(Sdl.Core.FineGrainedAlignment.AlignerDefinition)
  commentId: M:Sdl.Core.FineGrainedAlignment.IAlignerBroker.GetAlignerAsync(Sdl.Core.FineGrainedAlignment.AlignerDefinition)
  id: GetAlignerAsync(Sdl.Core.FineGrainedAlignment.AlignerDefinition)
  parent: Sdl.Core.FineGrainedAlignment.IAlignerBroker
  langs:
  - csharp
  - vb
  name: GetAlignerAsync(AlignerDefinition)
  nameWithType: IAlignerBroker.GetAlignerAsync(AlignerDefinition)
  fullName: Sdl.Core.FineGrainedAlignment.IAlignerBroker.GetAlignerAsync(Sdl.Core.FineGrainedAlignment.AlignerDefinition)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: Task<IFineGrainedAligner> GetAlignerAsync(AlignerDefinition definition)
    parameters:
    - id: definition
      type: Sdl.Core.FineGrainedAlignment.AlignerDefinition
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.FineGrainedAlignment.IFineGrainedAligner}
    content.vb: Function GetAlignerAsync(definition As AlignerDefinition) As Task(Of IFineGrainedAligner)
  overload: Sdl.Core.FineGrainedAlignment.IAlignerBroker.GetAlignerAsync*
references:
- uid: Sdl.Core.FineGrainedAlignment
  commentId: N:Sdl.Core.FineGrainedAlignment
  isExternal: true
  name: Sdl.Core.FineGrainedAlignment
  nameWithType: Sdl.Core.FineGrainedAlignment
  fullName: Sdl.Core.FineGrainedAlignment
- uid: Sdl.Core.FineGrainedAlignment.IAlignerBroker.GetAlignerAsync*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IAlignerBroker.GetAlignerAsync
  isExternal: true
  name: GetAlignerAsync
  nameWithType: IAlignerBroker.GetAlignerAsync
  fullName: Sdl.Core.FineGrainedAlignment.IAlignerBroker.GetAlignerAsync
- uid: Sdl.Core.FineGrainedAlignment.AlignerDefinition
  commentId: T:Sdl.Core.FineGrainedAlignment.AlignerDefinition
  parent: Sdl.Core.FineGrainedAlignment
  isExternal: true
  name: AlignerDefinition
  nameWithType: AlignerDefinition
  fullName: Sdl.Core.FineGrainedAlignment.AlignerDefinition
- uid: System.Threading.Tasks.Task{Sdl.Core.FineGrainedAlignment.IFineGrainedAligner}
  commentId: '!:System.Threading.Tasks.Task{Sdl.Core.FineGrainedAlignment.IFineGrainedAligner}'
  definition: System.Threading.Tasks.Task`1
  name: Task<IFineGrainedAligner>
  nameWithType: Task<IFineGrainedAligner>
  fullName: System.Threading.Tasks.Task<Sdl.Core.FineGrainedAlignment.IFineGrainedAligner>
  nameWithType.vb: Task(Of IFineGrainedAligner)
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.Core.FineGrainedAlignment.IFineGrainedAligner)
  name.vb: Task(Of IFineGrainedAligner)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
    name: IFineGrainedAligner
    nameWithType: IFineGrainedAligner
    fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
    name: IFineGrainedAligner
    nameWithType: IFineGrainedAligner
    fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
