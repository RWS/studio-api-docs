### YamlMime:ManagedReference
items:
- uid: Sdl.Core.TM.ImportExport.IImportDestination
  commentId: T:Sdl.Core.TM.ImportExport.IImportDestination
  id: IImportDestination
  parent: Sdl.Core.TM.ImportExport
  children:
  - Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  - Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  - Sdl.Core.TM.ImportExport.IImportDestination.FieldDefinitions
  - Sdl.Core.TM.ImportExport.IImportDestination.LanguageResources
  - Sdl.Core.TM.ImportExport.IImportDestination.SourceLanguage
  - Sdl.Core.TM.ImportExport.IImportDestination.TargetLanguage
  - Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  - Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  - Sdl.Core.TM.ImportExport.IImportDestination.UsesLegacyHashes
  langs:
  - csharp
  - vb
  name: IImportDestination
  nameWithType: IImportDestination
  fullName: Sdl.Core.TM.ImportExport.IImportDestination
  type: Interface
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public interface IImportDestination
    content.vb: Public Interface IImportDestination
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  id: AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  langs:
  - csharp
  - vb
  name: AddTranslationUnits(TranslationUnit[], ImportSettings)
  nameWithType: IImportDestination.AddTranslationUnits(TranslationUnit[], ImportSettings)
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: >-
      [Obsolete]

      ImportResult[] AddTranslationUnits(TranslationUnit[] tus, ImportSettings settings)
    parameters:
    - id: tus
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
    content.vb: >-
      <Obsolete>

      Function AddTranslationUnits(tus As TranslationUnit(), settings As ImportSettings) As ImportResult()
  overload: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
  nameWithType.vb: IImportDestination.AddTranslationUnits(TranslationUnit(), ImportSettings)
  fullName.vb: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  name.vb: AddTranslationUnits(TranslationUnit(), ImportSettings)
- uid: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  id: AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  langs:
  - csharp
  - vb
  name: AddTranslationUnitsMask(TranslationUnit[], ImportSettings, Boolean[])
  nameWithType: IImportDestination.AddTranslationUnitsMask(TranslationUnit[], ImportSettings, Boolean[])
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean[])
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: ImportResult[] AddTranslationUnitsMask(TranslationUnit[] tus, ImportSettings settings, bool[] mask)
    parameters:
    - id: tus
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    - id: mask
      type: System.Boolean[]
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
    content.vb: Function AddTranslationUnitsMask(tus As TranslationUnit(), settings As ImportSettings, mask As Boolean()) As ImportResult()
  overload: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask*
  nameWithType.vb: IImportDestination.AddTranslationUnitsMask(TranslationUnit(), ImportSettings, Boolean())
  fullName.vb: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean())
  name.vb: AddTranslationUnitsMask(TranslationUnit(), ImportSettings, Boolean())
- uid: Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  id: UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  langs:
  - csharp
  - vb
  name: UpdateFieldDefinitions(FieldDefinitions)
  nameWithType: IImportDestination.UpdateFieldDefinitions(FieldDefinitions)
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: void UpdateFieldDefinitions(FieldDefinitions mergedFieldDefinitions)
    parameters:
    - id: mergedFieldDefinitions
      type: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    content.vb: Sub UpdateFieldDefinitions(mergedFieldDefinitions As FieldDefinitions)
  overload: Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions*
- uid: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  id: UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  langs:
  - csharp
  - vb
  name: UpdateLanguageResources(List<LanguageResource>)
  nameWithType: IImportDestination.UpdateLanguageResources(List<LanguageResource>)
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource>)
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: void UpdateLanguageResources(List<LanguageResource> mergedLanguageResources)
    parameters:
    - id: mergedLanguageResources
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource}
    content.vb: Sub UpdateLanguageResources(mergedLanguageResources As List(Of LanguageResource))
  overload: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources*
  nameWithType.vb: IImportDestination.UpdateLanguageResources(List(Of LanguageResource))
  fullName.vb: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource))
  name.vb: UpdateLanguageResources(List(Of LanguageResource))
- uid: Sdl.Core.TM.ImportExport.IImportDestination.SourceLanguage
  commentId: P:Sdl.Core.TM.ImportExport.IImportDestination.SourceLanguage
  id: SourceLanguage
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  langs:
  - csharp
  - vb
  name: SourceLanguage
  nameWithType: IImportDestination.SourceLanguage
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.SourceLanguage
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: CultureInfo SourceLanguage { get; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
    content.vb: ReadOnly Property SourceLanguage As CultureInfo
  overload: Sdl.Core.TM.ImportExport.IImportDestination.SourceLanguage*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Core.TM.ImportExport.IImportDestination.TargetLanguage
  commentId: P:Sdl.Core.TM.ImportExport.IImportDestination.TargetLanguage
  id: TargetLanguage
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  langs:
  - csharp
  - vb
  name: TargetLanguage
  nameWithType: IImportDestination.TargetLanguage
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.TargetLanguage
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: CultureInfo TargetLanguage { get; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
    content.vb: ReadOnly Property TargetLanguage As CultureInfo
  overload: Sdl.Core.TM.ImportExport.IImportDestination.TargetLanguage*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Core.TM.ImportExport.IImportDestination.FieldDefinitions
  commentId: P:Sdl.Core.TM.ImportExport.IImportDestination.FieldDefinitions
  id: FieldDefinitions
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  langs:
  - csharp
  - vb
  name: FieldDefinitions
  nameWithType: IImportDestination.FieldDefinitions
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.FieldDefinitions
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: FieldDefinitions FieldDefinitions { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    content.vb: ReadOnly Property FieldDefinitions As FieldDefinitions
  overload: Sdl.Core.TM.ImportExport.IImportDestination.FieldDefinitions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Core.TM.ImportExport.IImportDestination.UsesLegacyHashes
  commentId: P:Sdl.Core.TM.ImportExport.IImportDestination.UsesLegacyHashes
  id: UsesLegacyHashes
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  langs:
  - csharp
  - vb
  name: UsesLegacyHashes
  nameWithType: IImportDestination.UsesLegacyHashes
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.UsesLegacyHashes
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: bool UsesLegacyHashes { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property UsesLegacyHashes As Boolean
  overload: Sdl.Core.TM.ImportExport.IImportDestination.UsesLegacyHashes*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Core.TM.ImportExport.IImportDestination.LanguageResources
  commentId: P:Sdl.Core.TM.ImportExport.IImportDestination.LanguageResources
  id: LanguageResources
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  langs:
  - csharp
  - vb
  name: LanguageResources
  nameWithType: IImportDestination.LanguageResources
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.LanguageResources
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: LanguageResource[] LanguageResources { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource[]
    content.vb: ReadOnly Property LanguageResources As LanguageResource()
  overload: Sdl.Core.TM.ImportExport.IImportDestination.LanguageResources*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.Core.TM.ImportExport
  commentId: N:Sdl.Core.TM.ImportExport
  isExternal: true
  name: Sdl.Core.TM.ImportExport
  nameWithType: Sdl.Core.TM.ImportExport
  fullName: Sdl.Core.TM.ImportExport
- uid: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits*
  commentId: Overload:Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits
  isExternal: true
  name: AddTranslationUnits
  nameWithType: IImportDestination.AddTranslationUnits
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
  isExternal: true
  name: TranslationUnit[]
  nameWithType: TranslationUnit[]
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
  nameWithType.vb: TranslationUnit()
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit()
  name.vb: TranslationUnit()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: ImportSettings
  nameWithType: ImportSettings
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
  isExternal: true
  name: ImportResult[]
  nameWithType: ImportResult[]
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
  nameWithType.vb: ImportResult()
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.ImportResult()
  name.vb: ImportResult()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    name: ImportResult
    nameWithType: ImportResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    name: ImportResult
    nameWithType: ImportResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask*
  commentId: Overload:Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask
  isExternal: true
  name: AddTranslationUnitsMask
  nameWithType: IImportDestination.AddTranslationUnitsMask
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask
- uid: System.Boolean[]
  isExternal: true
  name: Boolean[]
  nameWithType: Boolean[]
  fullName: System.Boolean[]
  nameWithType.vb: Boolean()
  fullName.vb: System.Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions*
  commentId: Overload:Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions
  isExternal: true
  name: UpdateFieldDefinitions
  nameWithType: IImportDestination.UpdateFieldDefinitions
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldDefinitions
  nameWithType: FieldDefinitions
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
- uid: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources*
  commentId: Overload:Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources
  isExternal: true
  name: UpdateLanguageResources
  nameWithType: IImportDestination.UpdateLanguageResources
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<LanguageResource>
  nameWithType: List<LanguageResource>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource>
  nameWithType.vb: List(Of LanguageResource)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource)
  name.vb: List(Of LanguageResource)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.Core.TM.ImportExport.IImportDestination.SourceLanguage*
  commentId: Overload:Sdl.Core.TM.ImportExport.IImportDestination.SourceLanguage
  isExternal: true
  name: SourceLanguage
  nameWithType: IImportDestination.SourceLanguage
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.SourceLanguage
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Sdl.Core.TM.ImportExport.IImportDestination.TargetLanguage*
  commentId: Overload:Sdl.Core.TM.ImportExport.IImportDestination.TargetLanguage
  isExternal: true
  name: TargetLanguage
  nameWithType: IImportDestination.TargetLanguage
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.TargetLanguage
- uid: Sdl.Core.TM.ImportExport.IImportDestination.FieldDefinitions*
  commentId: Overload:Sdl.Core.TM.ImportExport.IImportDestination.FieldDefinitions
  isExternal: true
  name: FieldDefinitions
  nameWithType: IImportDestination.FieldDefinitions
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.FieldDefinitions
- uid: Sdl.Core.TM.ImportExport.IImportDestination.UsesLegacyHashes*
  commentId: Overload:Sdl.Core.TM.ImportExport.IImportDestination.UsesLegacyHashes
  isExternal: true
  name: UsesLegacyHashes
  nameWithType: IImportDestination.UsesLegacyHashes
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.UsesLegacyHashes
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.TM.ImportExport.IImportDestination.LanguageResources*
  commentId: Overload:Sdl.Core.TM.ImportExport.IImportDestination.LanguageResources
  isExternal: true
  name: LanguageResources
  nameWithType: IImportDestination.LanguageResources
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.LanguageResources
- uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource[]
  isExternal: true
  name: LanguageResource[]
  nameWithType: LanguageResource[]
  fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource[]
  nameWithType.vb: LanguageResource()
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource()
  name.vb: LanguageResource()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
