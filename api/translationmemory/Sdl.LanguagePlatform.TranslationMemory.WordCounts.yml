### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.WordCounts
  id: WordCounts
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor
  - Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor(Sdl.LanguagePlatform.TranslationMemory.WordCounts)
  - Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token})
  - Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token},Sdl.LanguagePlatform.TranslationMemory.WordCountsOptions,Sdl.Core.Globalization.CultureCode)
  - Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - Sdl.LanguagePlatform.TranslationMemory.WordCounts.Assign(Sdl.LanguagePlatform.TranslationMemory.WordCounts)
  - Sdl.LanguagePlatform.TranslationMemory.WordCounts.Characters
  - Sdl.LanguagePlatform.TranslationMemory.WordCounts.CreateWordCountsAsync(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token},Sdl.LanguagePlatform.TranslationMemory.WordCountsOptions,Sdl.Core.Globalization.CultureCode,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  - Sdl.LanguagePlatform.TranslationMemory.WordCounts.Duplicate
  - Sdl.LanguagePlatform.TranslationMemory.WordCounts.Inc(Sdl.LanguagePlatform.TranslationMemory.WordCounts)
  - Sdl.LanguagePlatform.TranslationMemory.WordCounts.IsZero
  - Sdl.LanguagePlatform.TranslationMemory.WordCounts.Placeables
  - Sdl.LanguagePlatform.TranslationMemory.WordCounts.Segments
  - Sdl.LanguagePlatform.TranslationMemory.WordCounts.Tags
  - Sdl.LanguagePlatform.TranslationMemory.WordCounts.Words
  langs:
  - csharp
  - vb
  name: WordCounts
  nameWithType: WordCounts
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nRepresents the result of a word count.\n"
  syntax:
    content: public class WordCounts
    content.vb: Public Class WordCounts
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  langs:
  - csharp
  - vb
  name: WordCounts()
  nameWithType: WordCounts.WordCounts()
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.WordCounts()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance with default values. All counts will be set to 0.\n"
  syntax:
    content: public WordCounts()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor(Sdl.LanguagePlatform.TranslationMemory.WordCounts)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor(Sdl.LanguagePlatform.TranslationMemory.WordCounts)
  id: '#ctor(Sdl.LanguagePlatform.TranslationMemory.WordCounts)'
  parent: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  langs:
  - csharp
  - vb
  name: WordCounts(WordCounts)
  nameWithType: WordCounts.WordCounts(WordCounts)
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.WordCounts(Sdl.LanguagePlatform.TranslationMemory.WordCounts)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance with the values of another instance, creating a deep copy.\n"
  syntax:
    content: public WordCounts(WordCounts other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.TranslationMemory.WordCounts
      description: The instance to copy
    content.vb: Public Sub New(other As WordCounts)
  overload: Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token})
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token})
  id: '#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token})'
  parent: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  langs:
  - csharp
  - vb
  name: WordCounts(IList<Token>)
  nameWithType: WordCounts.WordCounts(IList<Token>)
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.WordCounts(System.Collections.Generic.IList<Sdl.LanguagePlatform.Core.Tokenization.Token>)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance from the values in the provided token collection.\n<ul><li>Word and abbreviation tokens increment the character count by the length of the \ntoken text and increment the word count by one, </li><li>Char sequence tokens (used in far-east tokenization) increment the word and character\ncount by the length of the token text,</li><li>Punctuation tokens only increment the character count, by the length of the token text,</li><li>Date, time, variable, number, measurement, acronym, uri, and other text placeable tokens\nincrement the word and character count like words do, but also increment the placeables count,</li><li>Tag tokens increment the tag and placeable counts, but not the word or character counts,</li><li>Whitespace tokens do not increment any counts (even not the character count),</li><li>All other token types do not increment any counts.</li><li>The segment count is set to 1, independent on the number and type of the tokens.</li></ul>\n"
  syntax:
    content: public WordCounts(IList<Token> tokens)
    parameters:
    - id: tokens
      type: System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token}
      description: The token collection
    content.vb: Public Sub New(tokens As IList(Of Token))
  overload: Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor*
  nameWithType.vb: WordCounts.WordCounts(IList(Of Token))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.WordCounts.WordCounts(System.Collections.Generic.IList(Of Sdl.LanguagePlatform.Core.Tokenization.Token))
  name.vb: WordCounts(IList(Of Token))
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Boolean,System.Boolean,System.Boolean,System.Boolean)'
  parent: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  langs:
  - csharp
  - vb
  name: WordCounts(IList<Token>, Boolean, Boolean, Boolean, Boolean)
  nameWithType: WordCounts.WordCounts(IList<Token>, Boolean, Boolean, Boolean, Boolean)
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.WordCounts(System.Collections.Generic.IList<Sdl.LanguagePlatform.Core.Tokenization.Token>, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance from the values in the provided token collection.\n<ul><li>Word and abbreviation tokens increment the character count by the length of the \ntoken text and increment the word count by one, </li><li>Char sequence tokens (used in far-east tokenization) increment the word and character\ncount by the length of the token text,</li><li>Punctuation tokens only increment the character count, by the length of the token text,</li><li>Date, time, variable, number, measurement, acronym, uri, and other text placeable tokens\nincrement the word and character count like words do, but also increment the placeables count,</li><li>Tag tokens increment the tag and placeable counts, but not the word or character counts,</li><li>Whitespace tokens do not increment any counts (even not the character count),</li><li>All other token types do not increment any counts.</li><li>The segment count is set to 1, independent on the number and type of the tokens.</li></ul>\n"
  syntax:
    content: public WordCounts(IList<Token> tokens, bool breakOnHyphen, bool breakOnDash, bool breakOnTag, bool breakOnApostrophe)
    parameters:
    - id: tokens
      type: System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token}
      description: The token collection
    - id: breakOnHyphen
      type: System.Boolean
      description: If false, 2 words separated by a hyphen count as 1
    - id: breakOnDash
      type: System.Boolean
      description: If false, 2 words separated by a dash count as 1
    - id: breakOnTag
      type: System.Boolean
      description: If false, 2 words separated by a formatting tag count as 1
    - id: breakOnApostrophe
      type: System.Boolean
      description: If false, 2 words separated by an apostrophe count as 1
    content.vb: Public Sub New(tokens As IList(Of Token), breakOnHyphen As Boolean, breakOnDash As Boolean, breakOnTag As Boolean, breakOnApostrophe As Boolean)
  overload: Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor*
  nameWithType.vb: WordCounts.WordCounts(IList(Of Token), Boolean, Boolean, Boolean, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.WordCounts.WordCounts(System.Collections.Generic.IList(Of Sdl.LanguagePlatform.Core.Tokenization.Token), System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  name.vb: WordCounts(IList(Of Token), Boolean, Boolean, Boolean, Boolean)
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token},Sdl.LanguagePlatform.TranslationMemory.WordCountsOptions,Sdl.Core.Globalization.CultureCode)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token},Sdl.LanguagePlatform.TranslationMemory.WordCountsOptions,Sdl.Core.Globalization.CultureCode)
  id: '#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token},Sdl.LanguagePlatform.TranslationMemory.WordCountsOptions,Sdl.Core.Globalization.CultureCode)'
  parent: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  langs:
  - csharp
  - vb
  name: WordCounts(IList<Token>, WordCountsOptions, CultureCode)
  nameWithType: WordCounts.WordCounts(IList<Token>, WordCountsOptions, CultureCode)
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.WordCounts(System.Collections.Generic.IList<Sdl.LanguagePlatform.Core.Tokenization.Token>, Sdl.LanguagePlatform.TranslationMemory.WordCountsOptions, Sdl.Core.Globalization.CultureCode)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\n\n"
  syntax:
    content: >-
      [Obsolete("Use WordCounter")]

      public WordCounts(IList<Token> tokens, WordCountsOptions options, CultureCode culture)
    parameters:
    - id: tokens
      type: System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token}
    - id: options
      type: Sdl.LanguagePlatform.TranslationMemory.WordCountsOptions
    - id: culture
      type: Sdl.Core.Globalization.CultureCode
    content.vb: >-
      <Obsolete("Use WordCounter")>

      Public Sub New(tokens As IList(Of Token), options As WordCountsOptions, culture As CultureCode)
  overload: Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use WordCounter
  nameWithType.vb: WordCounts.WordCounts(IList(Of Token), WordCountsOptions, CultureCode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.WordCounts.WordCounts(System.Collections.Generic.IList(Of Sdl.LanguagePlatform.Core.Tokenization.Token), Sdl.LanguagePlatform.TranslationMemory.WordCountsOptions, Sdl.Core.Globalization.CultureCode)
  name.vb: WordCounts(IList(Of Token), WordCountsOptions, CultureCode)
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.CreateWordCountsAsync(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token},Sdl.LanguagePlatform.TranslationMemory.WordCountsOptions,Sdl.Core.Globalization.CultureCode,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.WordCounts.CreateWordCountsAsync(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token},Sdl.LanguagePlatform.TranslationMemory.WordCountsOptions,Sdl.Core.Globalization.CultureCode,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  id: CreateWordCountsAsync(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token},Sdl.LanguagePlatform.TranslationMemory.WordCountsOptions,Sdl.Core.Globalization.CultureCode,Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  parent: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  langs:
  - csharp
  - vb
  name: CreateWordCountsAsync(IList<Token>, WordCountsOptions, CultureCode, ICultureMetadataManager)
  nameWithType: WordCounts.CreateWordCountsAsync(IList<Token>, WordCountsOptions, CultureCode, ICultureMetadataManager)
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.CreateWordCountsAsync(System.Collections.Generic.IList<Sdl.LanguagePlatform.Core.Tokenization.Token>, Sdl.LanguagePlatform.TranslationMemory.WordCountsOptions, Sdl.Core.Globalization.CultureCode, Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\n\n"
  syntax:
    content: >-
      [Obsolete("Use WordCounter")]

      public static Task<WordCounts> CreateWordCountsAsync(IList<Token> tokens, WordCountsOptions options, CultureCode cultureCode, ICultureMetadataManager cultureMetadataManager)
    parameters:
    - id: tokens
      type: System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token}
    - id: options
      type: Sdl.LanguagePlatform.TranslationMemory.WordCountsOptions
    - id: cultureCode
      type: Sdl.Core.Globalization.CultureCode
    - id: cultureMetadataManager
      type: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.WordCounts}
    content.vb: >-
      <Obsolete("Use WordCounter")>

      Public Shared Function CreateWordCountsAsync(tokens As IList(Of Token), options As WordCountsOptions, cultureCode As CultureCode, cultureMetadataManager As ICultureMetadataManager) As Task(Of WordCounts)
  overload: Sdl.LanguagePlatform.TranslationMemory.WordCounts.CreateWordCountsAsync*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use WordCounter
  nameWithType.vb: WordCounts.CreateWordCountsAsync(IList(Of Token), WordCountsOptions, CultureCode, ICultureMetadataManager)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.WordCounts.CreateWordCountsAsync(System.Collections.Generic.IList(Of Sdl.LanguagePlatform.Core.Tokenization.Token), Sdl.LanguagePlatform.TranslationMemory.WordCountsOptions, Sdl.Core.Globalization.CultureCode, Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  name.vb: CreateWordCountsAsync(IList(Of Token), WordCountsOptions, CultureCode, ICultureMetadataManager)
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Duplicate
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Duplicate
  id: Duplicate
  parent: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: WordCounts.Duplicate()
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Duplicate()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nCreates a new instance that is a deep copy of this instance.\n"
  syntax:
    content: public WordCounts Duplicate()
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.WordCounts
      description: A new instance that is a deep copy of this instance.
    content.vb: Public Function Duplicate As WordCounts
  overload: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Duplicate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Inc(Sdl.LanguagePlatform.TranslationMemory.WordCounts)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Inc(Sdl.LanguagePlatform.TranslationMemory.WordCounts)
  id: Inc(Sdl.LanguagePlatform.TranslationMemory.WordCounts)
  parent: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  langs:
  - csharp
  - vb
  name: Inc(WordCounts)
  nameWithType: WordCounts.Inc(WordCounts)
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Inc(Sdl.LanguagePlatform.TranslationMemory.WordCounts)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nIncrements the count values of this instance with the count values of another instance.\n"
  syntax:
    content: public void Inc(WordCounts other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.TranslationMemory.WordCounts
      description: The other instance
    content.vb: Public Sub Inc(other As WordCounts)
  overload: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Inc*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Assign(Sdl.LanguagePlatform.TranslationMemory.WordCounts)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Assign(Sdl.LanguagePlatform.TranslationMemory.WordCounts)
  id: Assign(Sdl.LanguagePlatform.TranslationMemory.WordCounts)
  parent: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  langs:
  - csharp
  - vb
  name: Assign(WordCounts)
  nameWithType: WordCounts.Assign(WordCounts)
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Assign(Sdl.LanguagePlatform.TranslationMemory.WordCounts)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nOverwrites the count values of this instance with the values of another instance.\n"
  syntax:
    content: public void Assign(WordCounts other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.TranslationMemory.WordCounts
      description: The instance which values to assign to this instance
    content.vb: Public Sub Assign(other As WordCounts)
  overload: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Assign*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Segments
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Segments
  id: Segments
  parent: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  langs:
  - csharp
  - vb
  name: Segments
  nameWithType: WordCounts.Segments
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Segments
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the segment count.\n"
  syntax:
    content: public int Segments { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Segments As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Segments*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Words
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Words
  id: Words
  parent: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  langs:
  - csharp
  - vb
  name: Words
  nameWithType: WordCounts.Words
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Words
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the word count.\n"
  syntax:
    content: public int Words { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Words As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Words*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Characters
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Characters
  id: Characters
  parent: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  langs:
  - csharp
  - vb
  name: Characters
  nameWithType: WordCounts.Characters
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Characters
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the character count.\n"
  syntax:
    content: public int Characters { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Characters As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Characters*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Placeables
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Placeables
  id: Placeables
  parent: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  langs:
  - csharp
  - vb
  name: Placeables
  nameWithType: WordCounts.Placeables
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Placeables
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the placeable count.\n"
  syntax:
    content: public int Placeables { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Placeables As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Placeables*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Tags
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Tags
  id: Tags
  parent: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: WordCounts.Tags
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Tags
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the tag count.\n"
  syntax:
    content: public int Tags { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Tags As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Tags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.IsZero
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.WordCounts.IsZero
  id: IsZero
  parent: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  langs:
  - csharp
  - vb
  name: IsZero
  nameWithType: WordCounts.IsZero
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.IsZero
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets a boolean value which indicates whether all count values are zero or not.\n"
  syntax:
    content: public bool IsZero { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsZero As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.WordCounts.IsZero*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor
  isExternal: true
  name: WordCounts
  nameWithType: WordCounts.WordCounts
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.WordCounts
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.WordCounts
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: WordCounts
  nameWithType: WordCounts
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts
- uid: System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token}
  commentId: T:System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Token>
  nameWithType: IList<Token>
  fullName: System.Collections.Generic.IList<Sdl.LanguagePlatform.Core.Tokenization.Token>
  nameWithType.vb: IList(Of Token)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.LanguagePlatform.Core.Tokenization.Token)
  name.vb: IList(Of Token)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token
    name: Token
    nameWithType: Token
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token
    name: Token
    nameWithType: Token
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCountsOptions
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.WordCountsOptions
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: WordCountsOptions
  nameWithType: WordCountsOptions
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCountsOptions
- uid: Sdl.Core.Globalization.CultureCode
  isExternal: true
  name: CultureCode
  nameWithType: CultureCode
  fullName: Sdl.Core.Globalization.CultureCode
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.CreateWordCountsAsync*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.WordCounts.CreateWordCountsAsync
  isExternal: true
  name: CreateWordCountsAsync
  nameWithType: WordCounts.CreateWordCountsAsync
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.CreateWordCountsAsync
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  isExternal: true
  name: ICultureMetadataManager
  nameWithType: ICultureMetadataManager
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
- uid: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.WordCounts}
  commentId: T:System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.WordCounts}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<WordCounts>
  nameWithType: Task<WordCounts>
  fullName: System.Threading.Tasks.Task<Sdl.LanguagePlatform.TranslationMemory.WordCounts>
  nameWithType.vb: Task(Of WordCounts)
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.LanguagePlatform.TranslationMemory.WordCounts)
  name.vb: Task(Of WordCounts)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts
    name: WordCounts
    nameWithType: WordCounts
    fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts
    name: WordCounts
    nameWithType: WordCounts
    fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Duplicate*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Duplicate
  isExternal: true
  name: Duplicate
  nameWithType: WordCounts.Duplicate
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Duplicate
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Inc*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Inc
  isExternal: true
  name: Inc
  nameWithType: WordCounts.Inc
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Inc
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Assign*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Assign
  isExternal: true
  name: Assign
  nameWithType: WordCounts.Assign
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Assign
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Segments*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Segments
  isExternal: true
  name: Segments
  nameWithType: WordCounts.Segments
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Segments
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Words*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Words
  isExternal: true
  name: Words
  nameWithType: WordCounts.Words
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Words
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Characters*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Characters
  isExternal: true
  name: Characters
  nameWithType: WordCounts.Characters
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Characters
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Placeables*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Placeables
  isExternal: true
  name: Placeables
  nameWithType: WordCounts.Placeables
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Placeables
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Tags*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Tags
  isExternal: true
  name: Tags
  nameWithType: WordCounts.Tags
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.Tags
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCounts.IsZero*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.WordCounts.IsZero
  isExternal: true
  name: IsZero
  nameWithType: WordCounts.IsZero
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCounts.IsZero
