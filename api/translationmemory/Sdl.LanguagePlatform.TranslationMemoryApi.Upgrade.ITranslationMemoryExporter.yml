### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter
  id: ITranslationMemoryExporter
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.BatchExported
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.BatchSize
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.Export
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.Filter
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.TmxFilePath
  langs:
  - csharp
  - vb
  name: ITranslationMemoryExporter
  nameWithType: ITranslationMemoryExporter
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter
  type: Interface
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nRepresents an engine which can be used to export translation memory data.\n"
  syntax:
    content: public interface ITranslationMemoryExporter
    content.vb: Public Interface ITranslationMemoryExporter
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.Export
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.Export
  id: Export
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter
  langs:
  - csharp
  - vb
  name: Export()
  nameWithType: ITranslationMemoryExporter.Export()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.Export()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nSynchronously starts the export process. To cancel the process, you should subscribe\nto the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.BatchExported\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  syntax:
    content: void Export()
    content.vb: Sub Export
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.Export*
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.BatchSize
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.BatchSize
  id: BatchSize
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter
  langs:
  - csharp
  - vb
  name: BatchSize
  nameWithType: ITranslationMemoryExporter.BatchSize
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.BatchSize
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the number of translation units to retrieve from the TM in one roundtrip.\n<remarks>TODO default, max?</remarks>\n"
  syntax:
    content: int BatchSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property BatchSize As Integer
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.BatchSize*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.Filter
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.Filter
  id: Filter
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: ITranslationMemoryExporter.Filter
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.Filter
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets a filter expression which can be used to export only those translation \nunits which satisfy the filter condition.\n"
  syntax:
    content: FilterExpression Filter { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
    content.vb: Property Filter As FilterExpression
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.Filter*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.TmxFilePath
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.TmxFilePath
  id: TmxFilePath
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter
  langs:
  - csharp
  - vb
  name: TmxFilePath
  nameWithType: ITranslationMemoryExporter.TmxFilePath
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.TmxFilePath
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nThe output path to write the exported data to. The data will be stored compressed if this\npath ends in a &quot;.gz&quot; extension.\n"
  syntax:
    content: string TmxFilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property TmxFilePath As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.TmxFilePath*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.BatchExported
  commentId: E:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.BatchExported
  id: BatchExported
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter
  langs:
  - csharp
  - vb
  name: BatchExported
  nameWithType: ITranslationMemoryExporter.BatchExported
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.BatchExported
  type: Event
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nAn event which can be subscribed to in order to get progress information or\nto cancel the export process.\n"
  syntax:
    content: event EventHandler<BatchExportedEventArgs> BatchExported
    return:
      type: System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs}
    content.vb: Event BatchExported As EventHandler(Of BatchExportedEventArgs)
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.Export*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.Export
  isExternal: true
  name: Export
  nameWithType: ITranslationMemoryExporter.Export
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.Export
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.BatchSize*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.BatchSize
  isExternal: true
  name: BatchSize
  nameWithType: ITranslationMemoryExporter.BatchSize
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.BatchSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.Filter*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.Filter
  isExternal: true
  name: Filter
  nameWithType: ITranslationMemoryExporter.Filter
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.Filter
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FilterExpression
  nameWithType: FilterExpression
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.TmxFilePath*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.TmxFilePath
  isExternal: true
  name: TmxFilePath
  nameWithType: ITranslationMemoryExporter.TmxFilePath
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemoryExporter.TmxFilePath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs}
  commentId: T:System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<BatchExportedEventArgs>
  nameWithType: EventHandler<BatchExportedEventArgs>
  fullName: System.EventHandler<Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs>
  nameWithType.vb: EventHandler(Of BatchExportedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs)
  name.vb: EventHandler(Of BatchExportedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs
    name: BatchExportedEventArgs
    nameWithType: BatchExportedEventArgs
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs
    name: BatchExportedEventArgs
    nameWithType: BatchExportedEventArgs
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<>
  nameWithType: EventHandler<>
  fullName: System.EventHandler<>
  nameWithType.vb: EventHandler(Of )
  fullName.vb: System.EventHandler(Of )
  name.vb: EventHandler(Of )
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
