### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  id: TranslationMemoryImporter
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.BatchImported
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.GetServerImportStatus
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.Import(System.String)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsSupportedByTmServiceImport(System.String)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryLanguageDirection
  langs:
  - csharp
  - vb
  name: TranslationMemoryImporter
  nameWithType: TranslationMemoryImporter
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nThis class exposes functionality to import a bilingual TMX file or a bilingual document into a translation memory.\n"
  syntax:
    content: 'public class TranslationMemoryImporter : Importer'
    content.vb: >-
      Public Class TranslationMemoryImporter
          Inherits Importer
  inheritance:
  - System.Object
  - Sdl.Core.TM.ImportExport.Importer
  inheritedMembers:
  - Sdl.Core.TM.ImportExport.Importer.DefaultTranslationUnitChunkSize
  - Sdl.Core.TM.ImportExport.Importer.MaxTranslationUnitChunkSize
  - Sdl.Core.TM.ImportExport.Importer.MinTranslationUnitChunkSize
  - Sdl.Core.TM.ImportExport.Importer.Buffer
  - Sdl.Core.TM.ImportExport.Importer.ErrorOutput
  - Sdl.Core.TM.ImportExport.Importer.BadTuCount
  - Sdl.Core.TM.ImportExport.Importer.Import(System.String,Sdl.Core.TM.ImportExport.IImportDestination)
  - Sdl.Core.TM.ImportExport.Importer.GetDefaultFileTypeManager
  - Sdl.Core.TM.ImportExport.Importer.Flush(Sdl.LanguagePlatform.TranslationMemory.ImportStatistics)
  - Sdl.Core.TM.ImportExport.Importer.OutputErrorTu(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,Sdl.LanguagePlatform.TranslationMemory.ImportResult)
  - Sdl.Core.TM.ImportExport.Importer.OnBatchImported(Sdl.LanguagePlatform.TranslationMemory.ImportResults,Sdl.LanguagePlatform.TranslationMemory.ImportStatistics)
  - Sdl.Core.TM.ImportExport.Importer.Statistics
  - Sdl.Core.TM.ImportExport.Importer.FileTypeManager
  - Sdl.Core.TM.ImportExport.Importer.CanChangeImportFile
  - Sdl.Core.TM.ImportExport.Importer.TranslationMemoryUserIdSetting
  - Sdl.Core.TM.ImportExport.Importer.ChunkSize
  - Sdl.Core.TM.ImportExport.Importer.Exclusive
  - Sdl.Core.TM.ImportExport.Importer.ImportSettings
  - Sdl.Core.TM.ImportExport.Importer.InvalidTranslationUnitsExportPath
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  langs:
  - csharp
  - vb
  name: TranslationMemoryImporter()
  nameWithType: TranslationMemoryImporter.TranslationMemoryImporter()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryImporter()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nInitializes a new instance of the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public TranslationMemoryImporter()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection)
  id: '#ctor(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection)'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  langs:
  - csharp
  - vb
  name: TranslationMemoryImporter(ITranslationMemoryLanguageDirection)
  nameWithType: TranslationMemoryImporter.TranslationMemoryImporter(ITranslationMemoryLanguageDirection)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryImporter(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nInitializes a new instance of the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public TranslationMemoryImporter(ITranslationMemoryLanguageDirection languageDirection)
    parameters:
    - id: languageDirection
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection
      description: The language direction.
    content.vb: Public Sub New(languageDirection As ITranslationMemoryLanguageDirection)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.Import(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.Import(System.String)
  id: Import(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  langs:
  - csharp
  - vb
  name: Import(String)
  nameWithType: TranslationMemoryImporter.Import(String)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.Import(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nStarts the import from the specified file.\n"
  syntax:
    content: public void Import(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: The file name.
    content.vb: Public Sub Import(fileName As String)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.Import*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.GetServerImportStatus
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.GetServerImportStatus
  id: GetServerImportStatus
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  langs:
  - csharp
  - vb
  name: GetServerImportStatus()
  nameWithType: TranslationMemoryImporter.GetServerImportStatus()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.GetServerImportStatus()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nChecks the server for the import status\n"
  syntax:
    content: public ServerImportStatus GetServerImportStatus()
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ServerImportStatus
    content.vb: Public Function GetServerImportStatus As ServerImportStatus
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.GetServerImportStatus*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsSupportedByTmServiceImport(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsSupportedByTmServiceImport(System.String)
  id: IsSupportedByTmServiceImport(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  langs:
  - csharp
  - vb
  name: IsSupportedByTmServiceImport(String)
  nameWithType: TranslationMemoryImporter.IsSupportedByTmServiceImport(String)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsSupportedByTmServiceImport(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCheck if the file is supported for TMService import\n"
  syntax:
    content: public static bool IsSupportedByTmServiceImport(string file)
    parameters:
    - id: file
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsSupportedByTmServiceImport(file As String) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsSupportedByTmServiceImport*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryLanguageDirection
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryLanguageDirection
  id: TranslationMemoryLanguageDirection
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  langs:
  - csharp
  - vb
  name: TranslationMemoryLanguageDirection
  nameWithType: TranslationMemoryImporter.TranslationMemoryLanguageDirection
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryLanguageDirection
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the translation memory language direction.\n"
  syntax:
    content: public ITranslationMemoryLanguageDirection TranslationMemoryLanguageDirection { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection
      description: The translation memory language direction.
    content.vb: Public ReadOnly Property TranslationMemoryLanguageDirection As ITranslationMemoryLanguageDirection
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryLanguageDirection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.BatchImported
  commentId: E:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.BatchImported
  id: BatchImported
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  langs:
  - csharp
  - vb
  name: BatchImported
  nameWithType: TranslationMemoryImporter.BatchImported
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.BatchImported
  type: Event
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nOccurs when a TU batch is imported\n"
  remarks: Hides the base class event (which our handler re-fires through this one) so that existing client code will see no namespace change after refactoring
  syntax:
    content: public event EventHandler<BatchImportedEventArgs> BatchImported
    return:
      type: System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs}
    content.vb: Public Event BatchImported As EventHandler(Of BatchImportedEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.Core.TM.ImportExport.Importer
  commentId: T:Sdl.Core.TM.ImportExport.Importer
  parent: Sdl.Core.TM.ImportExport
  isExternal: true
  name: Importer
  nameWithType: Importer
  fullName: Sdl.Core.TM.ImportExport.Importer
- uid: Sdl.Core.TM.ImportExport.Importer.DefaultTranslationUnitChunkSize
  commentId: F:Sdl.Core.TM.ImportExport.Importer.DefaultTranslationUnitChunkSize
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: DefaultTranslationUnitChunkSize
  nameWithType: Importer.DefaultTranslationUnitChunkSize
  fullName: Sdl.Core.TM.ImportExport.Importer.DefaultTranslationUnitChunkSize
- uid: Sdl.Core.TM.ImportExport.Importer.MaxTranslationUnitChunkSize
  commentId: F:Sdl.Core.TM.ImportExport.Importer.MaxTranslationUnitChunkSize
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: MaxTranslationUnitChunkSize
  nameWithType: Importer.MaxTranslationUnitChunkSize
  fullName: Sdl.Core.TM.ImportExport.Importer.MaxTranslationUnitChunkSize
- uid: Sdl.Core.TM.ImportExport.Importer.MinTranslationUnitChunkSize
  commentId: F:Sdl.Core.TM.ImportExport.Importer.MinTranslationUnitChunkSize
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: MinTranslationUnitChunkSize
  nameWithType: Importer.MinTranslationUnitChunkSize
  fullName: Sdl.Core.TM.ImportExport.Importer.MinTranslationUnitChunkSize
- uid: Sdl.Core.TM.ImportExport.Importer.Buffer
  commentId: F:Sdl.Core.TM.ImportExport.Importer.Buffer
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: Buffer
  nameWithType: Importer.Buffer
  fullName: Sdl.Core.TM.ImportExport.Importer.Buffer
- uid: Sdl.Core.TM.ImportExport.Importer.ErrorOutput
  commentId: F:Sdl.Core.TM.ImportExport.Importer.ErrorOutput
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: ErrorOutput
  nameWithType: Importer.ErrorOutput
  fullName: Sdl.Core.TM.ImportExport.Importer.ErrorOutput
- uid: Sdl.Core.TM.ImportExport.Importer.BadTuCount
  commentId: F:Sdl.Core.TM.ImportExport.Importer.BadTuCount
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: BadTuCount
  nameWithType: Importer.BadTuCount
  fullName: Sdl.Core.TM.ImportExport.Importer.BadTuCount
- uid: Sdl.Core.TM.ImportExport.Importer.Import(System.String,Sdl.Core.TM.ImportExport.IImportDestination)
  commentId: M:Sdl.Core.TM.ImportExport.Importer.Import(System.String,Sdl.Core.TM.ImportExport.IImportDestination)
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: Import(String, IImportDestination)
  nameWithType: Importer.Import(String, IImportDestination)
  fullName: Sdl.Core.TM.ImportExport.Importer.Import(System.String, Sdl.Core.TM.ImportExport.IImportDestination)
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.Importer.Import(System.String,Sdl.Core.TM.ImportExport.IImportDestination)
    name: Import
    nameWithType: Importer.Import
    fullName: Sdl.Core.TM.ImportExport.Importer.Import
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.Core.TM.ImportExport.IImportDestination
    name: IImportDestination
    nameWithType: IImportDestination
    fullName: Sdl.Core.TM.ImportExport.IImportDestination
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.Importer.Import(System.String,Sdl.Core.TM.ImportExport.IImportDestination)
    name: Import
    nameWithType: Importer.Import
    fullName: Sdl.Core.TM.ImportExport.Importer.Import
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.Core.TM.ImportExport.IImportDestination
    name: IImportDestination
    nameWithType: IImportDestination
    fullName: Sdl.Core.TM.ImportExport.IImportDestination
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.TM.ImportExport.Importer.GetDefaultFileTypeManager
  commentId: M:Sdl.Core.TM.ImportExport.Importer.GetDefaultFileTypeManager
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: GetDefaultFileTypeManager()
  nameWithType: Importer.GetDefaultFileTypeManager()
  fullName: Sdl.Core.TM.ImportExport.Importer.GetDefaultFileTypeManager()
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.Importer.GetDefaultFileTypeManager
    name: GetDefaultFileTypeManager
    nameWithType: Importer.GetDefaultFileTypeManager
    fullName: Sdl.Core.TM.ImportExport.Importer.GetDefaultFileTypeManager
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.Importer.GetDefaultFileTypeManager
    name: GetDefaultFileTypeManager
    nameWithType: Importer.GetDefaultFileTypeManager
    fullName: Sdl.Core.TM.ImportExport.Importer.GetDefaultFileTypeManager
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.TM.ImportExport.Importer.Flush(Sdl.LanguagePlatform.TranslationMemory.ImportStatistics)
  commentId: M:Sdl.Core.TM.ImportExport.Importer.Flush(Sdl.LanguagePlatform.TranslationMemory.ImportStatistics)
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: Flush(ImportStatistics)
  nameWithType: Importer.Flush(ImportStatistics)
  fullName: Sdl.Core.TM.ImportExport.Importer.Flush(Sdl.LanguagePlatform.TranslationMemory.ImportStatistics)
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.Importer.Flush(Sdl.LanguagePlatform.TranslationMemory.ImportStatistics)
    name: Flush
    nameWithType: Importer.Flush
    fullName: Sdl.Core.TM.ImportExport.Importer.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportStatistics
    name: ImportStatistics
    nameWithType: ImportStatistics
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportStatistics
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.Importer.Flush(Sdl.LanguagePlatform.TranslationMemory.ImportStatistics)
    name: Flush
    nameWithType: Importer.Flush
    fullName: Sdl.Core.TM.ImportExport.Importer.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportStatistics
    name: ImportStatistics
    nameWithType: ImportStatistics
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportStatistics
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.TM.ImportExport.Importer.OutputErrorTu(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,Sdl.LanguagePlatform.TranslationMemory.ImportResult)
  commentId: M:Sdl.Core.TM.ImportExport.Importer.OutputErrorTu(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,Sdl.LanguagePlatform.TranslationMemory.ImportResult)
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: OutputErrorTu(TranslationUnit, ImportResult)
  nameWithType: Importer.OutputErrorTu(TranslationUnit, ImportResult)
  fullName: Sdl.Core.TM.ImportExport.Importer.OutputErrorTu(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit, Sdl.LanguagePlatform.TranslationMemory.ImportResult)
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.Importer.OutputErrorTu(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,Sdl.LanguagePlatform.TranslationMemory.ImportResult)
    name: OutputErrorTu
    nameWithType: Importer.OutputErrorTu
    fullName: Sdl.Core.TM.ImportExport.Importer.OutputErrorTu
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    name: ImportResult
    nameWithType: ImportResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.Importer.OutputErrorTu(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,Sdl.LanguagePlatform.TranslationMemory.ImportResult)
    name: OutputErrorTu
    nameWithType: Importer.OutputErrorTu
    fullName: Sdl.Core.TM.ImportExport.Importer.OutputErrorTu
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    name: ImportResult
    nameWithType: ImportResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.TM.ImportExport.Importer.OnBatchImported(Sdl.LanguagePlatform.TranslationMemory.ImportResults,Sdl.LanguagePlatform.TranslationMemory.ImportStatistics)
  commentId: M:Sdl.Core.TM.ImportExport.Importer.OnBatchImported(Sdl.LanguagePlatform.TranslationMemory.ImportResults,Sdl.LanguagePlatform.TranslationMemory.ImportStatistics)
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: OnBatchImported(ImportResults, ImportStatistics)
  nameWithType: Importer.OnBatchImported(ImportResults, ImportStatistics)
  fullName: Sdl.Core.TM.ImportExport.Importer.OnBatchImported(Sdl.LanguagePlatform.TranslationMemory.ImportResults, Sdl.LanguagePlatform.TranslationMemory.ImportStatistics)
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.Importer.OnBatchImported(Sdl.LanguagePlatform.TranslationMemory.ImportResults,Sdl.LanguagePlatform.TranslationMemory.ImportStatistics)
    name: OnBatchImported
    nameWithType: Importer.OnBatchImported
    fullName: Sdl.Core.TM.ImportExport.Importer.OnBatchImported
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportResults
    name: ImportResults
    nameWithType: ImportResults
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResults
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportStatistics
    name: ImportStatistics
    nameWithType: ImportStatistics
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportStatistics
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.Importer.OnBatchImported(Sdl.LanguagePlatform.TranslationMemory.ImportResults,Sdl.LanguagePlatform.TranslationMemory.ImportStatistics)
    name: OnBatchImported
    nameWithType: Importer.OnBatchImported
    fullName: Sdl.Core.TM.ImportExport.Importer.OnBatchImported
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportResults
    name: ImportResults
    nameWithType: ImportResults
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResults
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportStatistics
    name: ImportStatistics
    nameWithType: ImportStatistics
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportStatistics
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.TM.ImportExport.Importer.Statistics
  commentId: P:Sdl.Core.TM.ImportExport.Importer.Statistics
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: Statistics
  nameWithType: Importer.Statistics
  fullName: Sdl.Core.TM.ImportExport.Importer.Statistics
- uid: Sdl.Core.TM.ImportExport.Importer.FileTypeManager
  commentId: P:Sdl.Core.TM.ImportExport.Importer.FileTypeManager
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: FileTypeManager
  nameWithType: Importer.FileTypeManager
  fullName: Sdl.Core.TM.ImportExport.Importer.FileTypeManager
- uid: Sdl.Core.TM.ImportExport.Importer.CanChangeImportFile
  commentId: P:Sdl.Core.TM.ImportExport.Importer.CanChangeImportFile
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: CanChangeImportFile
  nameWithType: Importer.CanChangeImportFile
  fullName: Sdl.Core.TM.ImportExport.Importer.CanChangeImportFile
- uid: Sdl.Core.TM.ImportExport.Importer.TranslationMemoryUserIdSetting
  commentId: P:Sdl.Core.TM.ImportExport.Importer.TranslationMemoryUserIdSetting
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: TranslationMemoryUserIdSetting
  nameWithType: Importer.TranslationMemoryUserIdSetting
  fullName: Sdl.Core.TM.ImportExport.Importer.TranslationMemoryUserIdSetting
- uid: Sdl.Core.TM.ImportExport.Importer.ChunkSize
  commentId: P:Sdl.Core.TM.ImportExport.Importer.ChunkSize
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: ChunkSize
  nameWithType: Importer.ChunkSize
  fullName: Sdl.Core.TM.ImportExport.Importer.ChunkSize
- uid: Sdl.Core.TM.ImportExport.Importer.Exclusive
  commentId: P:Sdl.Core.TM.ImportExport.Importer.Exclusive
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: Exclusive
  nameWithType: Importer.Exclusive
  fullName: Sdl.Core.TM.ImportExport.Importer.Exclusive
- uid: Sdl.Core.TM.ImportExport.Importer.ImportSettings
  commentId: P:Sdl.Core.TM.ImportExport.Importer.ImportSettings
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: ImportSettings
  nameWithType: Importer.ImportSettings
  fullName: Sdl.Core.TM.ImportExport.Importer.ImportSettings
- uid: Sdl.Core.TM.ImportExport.Importer.InvalidTranslationUnitsExportPath
  commentId: P:Sdl.Core.TM.ImportExport.Importer.InvalidTranslationUnitsExportPath
  parent: Sdl.Core.TM.ImportExport.Importer
  isExternal: true
  name: InvalidTranslationUnitsExportPath
  nameWithType: Importer.InvalidTranslationUnitsExportPath
  fullName: Sdl.Core.TM.ImportExport.Importer.InvalidTranslationUnitsExportPath
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.TM.ImportExport
  commentId: N:Sdl.Core.TM.ImportExport
  isExternal: true
  name: Sdl.Core.TM.ImportExport
  nameWithType: Sdl.Core.TM.ImportExport
  fullName: Sdl.Core.TM.ImportExport
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor
  isExternal: true
  name: TranslationMemoryImporter
  nameWithType: TranslationMemoryImporter.TranslationMemoryImporter
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryImporter
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: ITranslationMemoryLanguageDirection
  nameWithType: ITranslationMemoryLanguageDirection
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.Import*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.Import
  isExternal: true
  name: Import
  nameWithType: TranslationMemoryImporter.Import
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.Import
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.GetServerImportStatus*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.GetServerImportStatus
  isExternal: true
  name: GetServerImportStatus
  nameWithType: TranslationMemoryImporter.GetServerImportStatus
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.GetServerImportStatus
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ServerImportStatus
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ServerImportStatus
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: ServerImportStatus
  nameWithType: ServerImportStatus
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ServerImportStatus
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsSupportedByTmServiceImport*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsSupportedByTmServiceImport
  isExternal: true
  name: IsSupportedByTmServiceImport
  nameWithType: TranslationMemoryImporter.IsSupportedByTmServiceImport
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsSupportedByTmServiceImport
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryLanguageDirection*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryLanguageDirection
  isExternal: true
  name: TranslationMemoryLanguageDirection
  nameWithType: TranslationMemoryImporter.TranslationMemoryLanguageDirection
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryLanguageDirection
- uid: System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs}
  commentId: T:System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<BatchImportedEventArgs>
  nameWithType: EventHandler<BatchImportedEventArgs>
  fullName: System.EventHandler<Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs>
  nameWithType.vb: EventHandler(Of BatchImportedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs)
  name.vb: EventHandler(Of BatchImportedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs
    name: BatchImportedEventArgs
    nameWithType: BatchImportedEventArgs
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs
    name: BatchImportedEventArgs
    nameWithType: BatchImportedEventArgs
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<>
  nameWithType: EventHandler<>
  fullName: System.EventHandler<>
  nameWithType.vb: EventHandler(Of )
  fullName.vb: System.EventHandler(Of )
  name.vb: EventHandler(Of )
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
