### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  id: Cascade`1
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Boolean,System.Boolean,System.Globalization.CultureInfo,System.Globalization.CultureInfo)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Int32[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Int32[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Int32[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Int32[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.CascadeEntries
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.CascadeEntryIndexesUsed
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.GetTranslationProviderNames
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.GetWarningMessage(`0,Sdl.LanguagePlatform.TranslationMemory.SearchSettings)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.RemoveDuplicates
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegment(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegment(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment[])
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment[],System.Boolean[])
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment[],System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings,Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchCondition,Sdl.LanguagePlatform.Core.Segment[],System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchText(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,System.String)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchText(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,System.String,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[])
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings,Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchCondition,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Boolean[])
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SourceLanguage
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.StopSearchingWhenResultsFound
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SubsegmentSearchSegments(Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings,Sdl.LanguagePlatform.Core.Segment[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.TargetLanguage
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[])
  - Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  langs:
  - csharp
  - vb
  name: Cascade<T>
  nameWithType: Cascade<T>
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nA cascade is used to perform searches and updates across many \ndifferent translation provider language directions. Each translation provider language direction is\nrepresented by a cascade entry that contains other information with regards to how it should be treated\n- e.g. what penalties should be applied during searches. \n"
  syntax:
    content: >-
      public class Cascade<T>
          where T : CascadeEntry
    typeParameters:
    - id: T
      description: "\nT represents the cascade entry type. A simple cascade can just use <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.CascadeEntry\" data-throw-if-not-resolved=\"false\"></xref> but, for example, \nproject cascades need more information associated with each cascade entry and uses ProjectCascadeEntry.\n"
    content.vb: Public Class Cascade(Of T As CascadeEntry)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: Cascade(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T)
  name.vb: Cascade(Of T)
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Boolean,System.Boolean,System.Globalization.CultureInfo,System.Globalization.CultureInfo)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Boolean,System.Boolean,System.Globalization.CultureInfo,System.Globalization.CultureInfo)
  id: '#ctor(System.Collections.Generic.IEnumerable{`0},System.Boolean,System.Boolean,System.Globalization.CultureInfo,System.Globalization.CultureInfo)'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: Cascade(IEnumerable<T>, Boolean, Boolean, CultureInfo, CultureInfo)
  nameWithType: Cascade<T>.Cascade(IEnumerable<T>, Boolean, Boolean, CultureInfo, CultureInfo)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.Cascade(System.Collections.Generic.IEnumerable<T>, System.Boolean, System.Boolean, System.Globalization.CultureInfo, System.Globalization.CultureInfo)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nConstructor that takes the cascade entries, cascade search mode, remove duplicates, \nsource language, and target language.\n"
  syntax:
    content: public Cascade(IEnumerable<T> cascadeEntries, bool stopSearchingWhenResultsFound, bool removeDuplicates, CultureInfo sourceLanguage, CultureInfo targetLanguage)
    parameters:
    - id: cascadeEntries
      type: System.Collections.Generic.IEnumerable{{T}}
      description: cascade entries
    - id: stopSearchingWhenResultsFound
      type: System.Boolean
      description: whether to stop searching when results have been found
    - id: removeDuplicates
      type: System.Boolean
      description: remove duplicates
    - id: sourceLanguage
      type: System.Globalization.CultureInfo
      description: source language
    - id: targetLanguage
      type: System.Globalization.CultureInfo
      description: target language
    content.vb: Public Sub New(cascadeEntries As IEnumerable(Of T), stopSearchingWhenResultsFound As Boolean, removeDuplicates As Boolean, sourceLanguage As CultureInfo, targetLanguage As CultureInfo)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.#ctor*
  nameWithType.vb: Cascade(Of T).Cascade(IEnumerable(Of T), Boolean, Boolean, CultureInfo, CultureInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).Cascade(System.Collections.Generic.IEnumerable(Of T), System.Boolean, System.Boolean, System.Globalization.CultureInfo, System.Globalization.CultureInfo)
  name.vb: Cascade(IEnumerable(Of T), Boolean, Boolean, CultureInfo, CultureInfo)
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.GetTranslationProviderNames
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.GetTranslationProviderNames
  id: GetTranslationProviderNames
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: GetTranslationProviderNames()
  nameWithType: Cascade<T>.GetTranslationProviderNames()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.GetTranslationProviderNames()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a comma-delimited string of translation provider names.\n"
  syntax:
    content: public string GetTranslationProviderNames()
    return:
      type: System.String
      description: translation provider names
    content.vb: Public Function GetTranslationProviderNames As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.GetTranslationProviderNames*
  nameWithType.vb: Cascade(Of T).GetTranslationProviderNames()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).GetTranslationProviderNames()
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SubsegmentSearchSegments(Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings,Sdl.LanguagePlatform.Core.Segment[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SubsegmentSearchSegments(Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings,Sdl.LanguagePlatform.Core.Segment[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  id: SubsegmentSearchSegments(Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings,Sdl.LanguagePlatform.Core.Segment[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SubsegmentSearchSegments(SubsegmentSearchSettings, Segment[], out IEnumerable<CascadeMessage>)
  nameWithType: Cascade<T>.SubsegmentSearchSegments(SubsegmentSearchSettings, Segment[], out IEnumerable<CascadeMessage>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SubsegmentSearchSegments(Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings, Sdl.LanguagePlatform.Core.Segment[], out System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ISubsegmentTranslationMemoryLanguageDirection.SubsegmentSearchSegments(Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings%2cSdl.LanguagePlatform.Core.Segment%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider cascade.\n"
  syntax:
    content: public SubsegmentSearchResultsCollection[] SubsegmentSearchSegments(SubsegmentSearchSettings subsegmentSearchSettings, Segment[] segments, out IEnumerable<CascadeMessage> cascadeMessages)
    parameters:
    - id: subsegmentSearchSettings
      type: Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings
    - id: segments
      type: Sdl.LanguagePlatform.Core.Segment[]
    - id: cascadeMessages
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchResultsCollection[]
    content.vb: Public Function SubsegmentSearchSegments(subsegmentSearchSettings As SubsegmentSearchSettings, segments As Segment(), ByRef cascadeMessages As IEnumerable(Of CascadeMessage)) As SubsegmentSearchResultsCollection()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SubsegmentSearchSegments*
  nameWithType.vb: Cascade(Of T).SubsegmentSearchSegments(SubsegmentSearchSettings, Segment(), ByRef IEnumerable(Of CascadeMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SubsegmentSearchSegments(Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings, Sdl.LanguagePlatform.Core.Segment(), ByRef System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage))
  name.vb: SubsegmentSearchSegments(SubsegmentSearchSettings, Segment(), ByRef IEnumerable(Of CascadeMessage))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegment(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegment(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment)
  id: SearchSegment(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SearchSegment(SearchSettings, Segment)
  nameWithType: Cascade<T>.SearchSegment(SearchSettings, Segment)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchSegment(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.Core.Segment)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.SearchSegment(Sdl.LanguagePlatform.TranslationMemory.SearchSettings%2cSdl.LanguagePlatform.Core.Segment)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider cascade.\n"
  syntax:
    content: public SearchResults SearchSegment(SearchSettings settings, Segment segment)
    parameters:
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    - id: segment
      type: Sdl.LanguagePlatform.Core.Segment
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SearchResults
    content.vb: Public Function SearchSegment(settings As SearchSettings, segment As Segment) As SearchResults
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegment*
  nameWithType.vb: Cascade(Of T).SearchSegment(SearchSettings, Segment)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchSegment(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.Core.Segment)
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegment(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegment(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  id: SearchSegment(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SearchSegment(SearchSettings, Segment, out IEnumerable<CascadeMessage>)
  nameWithType: Cascade<T>.SearchSegment(SearchSettings, Segment, out IEnumerable<CascadeMessage>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchSegment(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.Core.Segment, out System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.SearchSegment(Sdl.LanguagePlatform.TranslationMemory.SearchSettings%2cSdl.LanguagePlatform.Core.Segment)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider cascade.\n"
  syntax:
    content: public SearchResults SearchSegment(SearchSettings settings, Segment segment, out IEnumerable<CascadeMessage> cascadeMessages)
    parameters:
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    - id: segment
      type: Sdl.LanguagePlatform.Core.Segment
    - id: cascadeMessages
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SearchResults
    content.vb: Public Function SearchSegment(settings As SearchSettings, segment As Segment, ByRef cascadeMessages As IEnumerable(Of CascadeMessage)) As SearchResults
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegment*
  nameWithType.vb: Cascade(Of T).SearchSegment(SearchSettings, Segment, ByRef IEnumerable(Of CascadeMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchSegment(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.Core.Segment, ByRef System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage))
  name.vb: SearchSegment(SearchSettings, Segment, ByRef IEnumerable(Of CascadeMessage))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchText(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchText(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,System.String)
  id: SearchText(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,System.String)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SearchText(SearchSettings, String)
  nameWithType: Cascade<T>.SearchText(SearchSettings, String)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchText(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.SearchText(Sdl.LanguagePlatform.TranslationMemory.SearchSettings%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider cascade.\n"
  syntax:
    content: public SearchResults SearchText(SearchSettings settings, string segment)
    parameters:
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    - id: segment
      type: System.String
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SearchResults
    content.vb: Public Function SearchText(settings As SearchSettings, segment As String) As SearchResults
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchText*
  nameWithType.vb: Cascade(Of T).SearchText(SearchSettings, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchText(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, System.String)
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchText(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,System.String,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchText(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,System.String,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  id: SearchText(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,System.String,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SearchText(SearchSettings, String, out IEnumerable<CascadeMessage>)
  nameWithType: Cascade<T>.SearchText(SearchSettings, String, out IEnumerable<CascadeMessage>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchText(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, System.String, out System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.SearchText(Sdl.LanguagePlatform.TranslationMemory.SearchSettings%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider cascade.\n"
  syntax:
    content: public SearchResults SearchText(SearchSettings settings, string segment, out IEnumerable<CascadeMessage> cascadeMessages)
    parameters:
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    - id: segment
      type: System.String
    - id: cascadeMessages
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SearchResults
    content.vb: Public Function SearchText(settings As SearchSettings, segment As String, ByRef cascadeMessages As IEnumerable(Of CascadeMessage)) As SearchResults
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchText*
  nameWithType.vb: Cascade(Of T).SearchText(SearchSettings, String, ByRef IEnumerable(Of CascadeMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchText(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, System.String, ByRef System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage))
  name.vb: SearchText(SearchSettings, String, ByRef IEnumerable(Of CascadeMessage))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  id: SearchTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SearchTranslationUnit(SearchSettings, TranslationUnit)
  nameWithType: Cascade<T>.SearchTranslationUnit(SearchSettings, TranslationUnit)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.SearchTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.SearchSettings%2cSdl.LanguagePlatform.TranslationMemory.TranslationUnit)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider cascade.\n"
  syntax:
    content: public SearchResults SearchTranslationUnit(SearchSettings settings, TranslationUnit translationUnit)
    parameters:
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    - id: translationUnit
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SearchResults
    content.vb: Public Function SearchTranslationUnit(settings As SearchSettings, translationUnit As TranslationUnit) As SearchResults
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnit*
  nameWithType.vb: Cascade(Of T).SearchTranslationUnit(SearchSettings, TranslationUnit)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  id: SearchTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SearchTranslationUnit(SearchSettings, TranslationUnit, out IEnumerable<CascadeMessage>)
  nameWithType: Cascade<T>.SearchTranslationUnit(SearchSettings, TranslationUnit, out IEnumerable<CascadeMessage>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.TranslationMemory.TranslationUnit, out System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.SearchTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.SearchSettings%2cSdl.LanguagePlatform.TranslationMemory.TranslationUnit)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider cascade.\n"
  syntax:
    content: public SearchResults SearchTranslationUnit(SearchSettings settings, TranslationUnit translationUnit, out IEnumerable<CascadeMessage> cascadeMessages)
    parameters:
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    - id: translationUnit
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    - id: cascadeMessages
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SearchResults
    content.vb: Public Function SearchTranslationUnit(settings As SearchSettings, translationUnit As TranslationUnit, ByRef cascadeMessages As IEnumerable(Of CascadeMessage)) As SearchResults
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnit*
  nameWithType.vb: Cascade(Of T).SearchTranslationUnit(SearchSettings, TranslationUnit, ByRef IEnumerable(Of CascadeMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.TranslationMemory.TranslationUnit, ByRef System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage))
  name.vb: SearchTranslationUnit(SearchSettings, TranslationUnit, ByRef IEnumerable(Of CascadeMessage))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment[])
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment[])
  id: SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment[])
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SearchSegments(SearchSettings, Segment[])
  nameWithType: Cascade<T>.SearchSegments(SearchSettings, Segment[])
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.Core.Segment[])
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings%2cSdl.LanguagePlatform.Core.Segment%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider cascade.\n"
  syntax:
    content: public SearchResults[] SearchSegments(SearchSettings settings, Segment[] segments)
    parameters:
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    - id: segments
      type: Sdl.LanguagePlatform.Core.Segment[]
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SearchResults[]
    content.vb: Public Function SearchSegments(settings As SearchSettings, segments As Segment()) As SearchResults()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegments*
  nameWithType.vb: Cascade(Of T).SearchSegments(SearchSettings, Segment())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.Core.Segment())
  name.vb: SearchSegments(SearchSettings, Segment())
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  id: SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SearchSegments(SearchSettings, Segment[], out IEnumerable<CascadeMessage>)
  nameWithType: Cascade<T>.SearchSegments(SearchSettings, Segment[], out IEnumerable<CascadeMessage>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.Core.Segment[], out System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings%2cSdl.LanguagePlatform.Core.Segment%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider cascade.\n"
  syntax:
    content: public SearchResults[] SearchSegments(SearchSettings settings, Segment[] segments, out IEnumerable<CascadeMessage> cascadeMessages)
    parameters:
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    - id: segments
      type: Sdl.LanguagePlatform.Core.Segment[]
    - id: cascadeMessages
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SearchResults[]
    content.vb: Public Function SearchSegments(settings As SearchSettings, segments As Segment(), ByRef cascadeMessages As IEnumerable(Of CascadeMessage)) As SearchResults()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegments*
  nameWithType.vb: Cascade(Of T).SearchSegments(SearchSettings, Segment(), ByRef IEnumerable(Of CascadeMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.Core.Segment(), ByRef System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage))
  name.vb: SearchSegments(SearchSettings, Segment(), ByRef IEnumerable(Of CascadeMessage))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment[],System.Boolean[])
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment[],System.Boolean[])
  id: SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment[],System.Boolean[])
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SearchSegmentsMasked(SearchSettings, Segment[], Boolean[])
  nameWithType: Cascade<T>.SearchSegmentsMasked(SearchSettings, Segment[], Boolean[])
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.Core.Segment[], System.Boolean[])
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings%2cSdl.LanguagePlatform.Core.Segment%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider cascade.\n"
  syntax:
    content: public SearchResults[] SearchSegmentsMasked(SearchSettings settings, Segment[] segments, bool[] mask)
    parameters:
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    - id: segments
      type: Sdl.LanguagePlatform.Core.Segment[]
    - id: mask
      type: System.Boolean[]
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SearchResults[]
    content.vb: Public Function SearchSegmentsMasked(settings As SearchSettings, segments As Segment(), mask As Boolean()) As SearchResults()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegmentsMasked*
  nameWithType.vb: Cascade(Of T).SearchSegmentsMasked(SearchSettings, Segment(), Boolean())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.Core.Segment(), System.Boolean())
  name.vb: SearchSegmentsMasked(SearchSettings, Segment(), Boolean())
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment[],System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment[],System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  id: SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.Core.Segment[],System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SearchSegmentsMasked(SearchSettings, Segment[], Boolean[], out IEnumerable<CascadeMessage>)
  nameWithType: Cascade<T>.SearchSegmentsMasked(SearchSettings, Segment[], Boolean[], out IEnumerable<CascadeMessage>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.Core.Segment[], System.Boolean[], out System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings%2cSdl.LanguagePlatform.Core.Segment%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider cascade.\n"
  syntax:
    content: public SearchResultsMerged[] SearchSegmentsMasked(SearchSettings settings, Segment[] segments, bool[] mask, out IEnumerable<CascadeMessage> cascadeMessages)
    parameters:
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    - id: segments
      type: Sdl.LanguagePlatform.Core.Segment[]
    - id: mask
      type: System.Boolean[]
    - id: cascadeMessages
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SearchResultsMerged[]
    content.vb: Public Function SearchSegmentsMasked(settings As SearchSettings, segments As Segment(), mask As Boolean(), ByRef cascadeMessages As IEnumerable(Of CascadeMessage)) As SearchResultsMerged()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegmentsMasked*
  nameWithType.vb: Cascade(Of T).SearchSegmentsMasked(SearchSettings, Segment(), Boolean(), ByRef IEnumerable(Of CascadeMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.Core.Segment(), System.Boolean(), ByRef System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage))
  name.vb: SearchSegmentsMasked(SearchSettings, Segment(), Boolean(), ByRef IEnumerable(Of CascadeMessage))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings,Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchCondition,Sdl.LanguagePlatform.Core.Segment[],System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings,Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchCondition,Sdl.LanguagePlatform.Core.Segment[],System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  id: SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings,Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchCondition,Sdl.LanguagePlatform.Core.Segment[],System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SearchSegmentsMasked(SearchSettings, SubsegmentSearchSettings, SubsegmentSearchCondition, Segment[], Boolean[], out IEnumerable<CascadeMessage>)
  nameWithType: Cascade<T>.SearchSegmentsMasked(SearchSettings, SubsegmentSearchSettings, SubsegmentSearchCondition, Segment[], Boolean[], out IEnumerable<CascadeMessage>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings, Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchCondition, Sdl.LanguagePlatform.Core.Segment[], System.Boolean[], out System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings%2cSdl.LanguagePlatform.Core.Segment%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider cascade.\n"
  syntax:
    content: public SegmentAndSubsegmentSearchResultsMerged[] SearchSegmentsMasked(SearchSettings settings, SubsegmentSearchSettings subsegmentSettings, SubsegmentSearchCondition subsegmentSearchCondition, Segment[] segments, bool[] mask, out IEnumerable<CascadeMessage> cascadeMessages)
    parameters:
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    - id: subsegmentSettings
      type: Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings
    - id: subsegmentSearchCondition
      type: Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchCondition
    - id: segments
      type: Sdl.LanguagePlatform.Core.Segment[]
    - id: mask
      type: System.Boolean[]
    - id: cascadeMessages
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SegmentAndSubsegmentSearchResultsMerged[]
    content.vb: Public Function SearchSegmentsMasked(settings As SearchSettings, subsegmentSettings As SubsegmentSearchSettings, subsegmentSearchCondition As SubsegmentSearchCondition, segments As Segment(), mask As Boolean(), ByRef cascadeMessages As IEnumerable(Of CascadeMessage)) As SegmentAndSubsegmentSearchResultsMerged()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegmentsMasked*
  nameWithType.vb: Cascade(Of T).SearchSegmentsMasked(SearchSettings, SubsegmentSearchSettings, SubsegmentSearchCondition, Segment(), Boolean(), ByRef IEnumerable(Of CascadeMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchSegmentsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings, Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchCondition, Sdl.LanguagePlatform.Core.Segment(), System.Boolean(), ByRef System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage))
  name.vb: SearchSegmentsMasked(SearchSettings, SubsegmentSearchSettings, SubsegmentSearchCondition, Segment(), Boolean(), ByRef IEnumerable(Of CascadeMessage))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[])
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[])
  id: SearchTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[])
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SearchTranslationUnits(SearchSettings, TranslationUnit[])
  nameWithType: Cascade<T>.SearchTranslationUnits(SearchSettings, TranslationUnit[])
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[])
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.SearchTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.SearchSettings%2cSdl.LanguagePlatform.TranslationMemory.TranslationUnit%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider cascade.\n"
  syntax:
    content: public SearchResults[] SearchTranslationUnits(SearchSettings settings, TranslationUnit[] tus)
    parameters:
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    - id: tus
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SearchResults[]
    content.vb: Public Function SearchTranslationUnits(settings As SearchSettings, tus As TranslationUnit()) As SearchResults()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnits*
  nameWithType.vb: Cascade(Of T).SearchTranslationUnits(SearchSettings, TranslationUnit())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.TranslationMemory.TranslationUnit())
  name.vb: SearchTranslationUnits(SearchSettings, TranslationUnit())
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  id: SearchTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SearchTranslationUnits(SearchSettings, TranslationUnit[], out IEnumerable<CascadeMessage>)
  nameWithType: Cascade<T>.SearchTranslationUnits(SearchSettings, TranslationUnit[], out IEnumerable<CascadeMessage>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], out System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.SearchTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.SearchSettings%2cSdl.LanguagePlatform.TranslationMemory.TranslationUnit%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider cascade.\n"
  syntax:
    content: public SearchResults[] SearchTranslationUnits(SearchSettings settings, TranslationUnit[] tus, out IEnumerable<CascadeMessage> cascadeMessages)
    parameters:
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    - id: tus
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: cascadeMessages
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SearchResults[]
    content.vb: Public Function SearchTranslationUnits(settings As SearchSettings, tus As TranslationUnit(), ByRef cascadeMessages As IEnumerable(Of CascadeMessage)) As SearchResults()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnits*
  nameWithType.vb: Cascade(Of T).SearchTranslationUnits(SearchSettings, TranslationUnit(), ByRef IEnumerable(Of CascadeMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), ByRef System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage))
  name.vb: SearchTranslationUnits(SearchSettings, TranslationUnit(), ByRef IEnumerable(Of CascadeMessage))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Boolean[])
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Boolean[])
  id: SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Boolean[])
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SearchTranslationUnitsMasked(SearchSettings, TranslationUnit[], Boolean[])
  nameWithType: Cascade<T>.SearchTranslationUnitsMasked(SearchSettings, TranslationUnit[], Boolean[])
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], System.Boolean[])
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings%2cSdl.LanguagePlatform.TranslationMemory.TranslationUnit%5b%5d%2cSystem.Boolean%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider cascade.\n"
  syntax:
    content: public SearchResults[] SearchTranslationUnitsMasked(SearchSettings settings, TranslationUnit[] translationUnits, bool[] mask)
    parameters:
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    - id: translationUnits
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: mask
      type: System.Boolean[]
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SearchResults[]
    content.vb: Public Function SearchTranslationUnitsMasked(settings As SearchSettings, translationUnits As TranslationUnit(), mask As Boolean()) As SearchResults()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnitsMasked*
  nameWithType.vb: Cascade(Of T).SearchTranslationUnitsMasked(SearchSettings, TranslationUnit(), Boolean())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), System.Boolean())
  name.vb: SearchTranslationUnitsMasked(SearchSettings, TranslationUnit(), Boolean())
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  id: SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SearchTranslationUnitsMasked(SearchSettings, TranslationUnit[], Boolean[], out IEnumerable<CascadeMessage>)
  nameWithType: Cascade<T>.SearchTranslationUnitsMasked(SearchSettings, TranslationUnit[], Boolean[], out IEnumerable<CascadeMessage>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], System.Boolean[], out System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings%2cSdl.LanguagePlatform.TranslationMemory.TranslationUnit%5b%5d%2cSystem.Boolean%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider cascade.\n"
  syntax:
    content: public SearchResultsMerged[] SearchTranslationUnitsMasked(SearchSettings settings, TranslationUnit[] translationUnits, bool[] mask, out IEnumerable<CascadeMessage> cascadeMessages)
    parameters:
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    - id: translationUnits
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: mask
      type: System.Boolean[]
    - id: cascadeMessages
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SearchResultsMerged[]
    content.vb: Public Function SearchTranslationUnitsMasked(settings As SearchSettings, translationUnits As TranslationUnit(), mask As Boolean(), ByRef cascadeMessages As IEnumerable(Of CascadeMessage)) As SearchResultsMerged()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnitsMasked*
  nameWithType.vb: Cascade(Of T).SearchTranslationUnitsMasked(SearchSettings, TranslationUnit(), Boolean(), ByRef IEnumerable(Of CascadeMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), System.Boolean(), ByRef System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage))
  name.vb: SearchTranslationUnitsMasked(SearchSettings, TranslationUnit(), Boolean(), ByRef IEnumerable(Of CascadeMessage))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings,Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchCondition,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings,Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchCondition,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  id: SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings,Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings,Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchCondition,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SearchTranslationUnitsMasked(SearchSettings, SubsegmentSearchSettings, SubsegmentSearchCondition, TranslationUnit[], Boolean[], out IEnumerable<CascadeMessage>)
  nameWithType: Cascade<T>.SearchTranslationUnitsMasked(SearchSettings, SubsegmentSearchSettings, SubsegmentSearchCondition, TranslationUnit[], Boolean[], out IEnumerable<CascadeMessage>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings, Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchCondition, Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], System.Boolean[], out System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.SearchSegments(Sdl.LanguagePlatform.TranslationMemory.SearchSettings%2cSdl.LanguagePlatform.Core.Segment%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider cascade.\n"
  syntax:
    content: public SegmentAndSubsegmentSearchResultsMerged[] SearchTranslationUnitsMasked(SearchSettings settings, SubsegmentSearchSettings subsegmentSettings, SubsegmentSearchCondition subsegmentSearchCondition, TranslationUnit[] translationUnits, bool[] mask, out IEnumerable<CascadeMessage> cascadeMessages)
    parameters:
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    - id: subsegmentSettings
      type: Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings
    - id: subsegmentSearchCondition
      type: Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchCondition
    - id: translationUnits
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: mask
      type: System.Boolean[]
    - id: cascadeMessages
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.SegmentAndSubsegmentSearchResultsMerged[]
    content.vb: Public Function SearchTranslationUnitsMasked(settings As SearchSettings, subsegmentSettings As SubsegmentSearchSettings, subsegmentSearchCondition As SubsegmentSearchCondition, translationUnits As TranslationUnit(), mask As Boolean(), ByRef cascadeMessages As IEnumerable(Of CascadeMessage)) As SegmentAndSubsegmentSearchResultsMerged()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnitsMasked*
  nameWithType.vb: Cascade(Of T).SearchTranslationUnitsMasked(SearchSettings, SubsegmentSearchSettings, SubsegmentSearchCondition, TranslationUnit(), Boolean(), ByRef IEnumerable(Of CascadeMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.SearchSettings, Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings, Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchCondition, Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), System.Boolean(), ByRef System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage))
  name.vb: SearchTranslationUnitsMasked(SearchSettings, SubsegmentSearchSettings, SubsegmentSearchCondition, TranslationUnit(), Boolean(), ByRef IEnumerable(Of CascadeMessage))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.GetWarningMessage(`0,Sdl.LanguagePlatform.TranslationMemory.SearchSettings)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.GetWarningMessage(`0,Sdl.LanguagePlatform.TranslationMemory.SearchSettings)
  id: GetWarningMessage(`0,Sdl.LanguagePlatform.TranslationMemory.SearchSettings)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: GetWarningMessage(T, SearchSettings)
  nameWithType: Cascade<T>.GetWarningMessage(T, SearchSettings)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.GetWarningMessage(T, Sdl.LanguagePlatform.TranslationMemory.SearchSettings)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGetting Warning messages for Upgrade requirement.\n"
  syntax:
    content: public IList<CascadeMessage> GetWarningMessage(T cascadeEntry, SearchSettings searchSettings)
    parameters:
    - id: cascadeEntry
      type: '{T}'
    - id: searchSettings
      type: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
    return:
      type: System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    content.vb: Public Function GetWarningMessage(cascadeEntry As T, searchSettings As SearchSettings) As IList(Of CascadeMessage)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.GetWarningMessage*
  nameWithType.vb: Cascade(Of T).GetWarningMessage(T, SearchSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).GetWarningMessage(T, Sdl.LanguagePlatform.TranslationMemory.SearchSettings)
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  id: AddTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: AddTranslationUnit(TranslationUnit, ImportSettings)
  nameWithType: Cascade<T>.AddTranslationUnit(TranslationUnit, ImportSettings)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.AddTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit, Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.AddTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit%2cSdl.LanguagePlatform.TranslationMemory.ImportSettings)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider.\n"
  syntax:
    content: public ImportResult AddTranslationUnit(TranslationUnit translationUnit, ImportSettings settings)
    parameters:
    - id: translationUnit
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    content.vb: Public Function AddTranslationUnit(translationUnit As TranslationUnit, settings As ImportSettings) As ImportResult
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnit*
  nameWithType.vb: Cascade(Of T).AddTranslationUnit(TranslationUnit, ImportSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).AddTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit, Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  id: AddTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: AddTranslationUnit(TranslationUnit, ImportSettings, out IEnumerable<CascadeMessage>)
  nameWithType: Cascade<T>.AddTranslationUnit(TranslationUnit, ImportSettings, out IEnumerable<CascadeMessage>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.AddTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit, Sdl.LanguagePlatform.TranslationMemory.ImportSettings, out System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.AddTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit%2cSdl.LanguagePlatform.TranslationMemory.ImportSettings)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider.\n"
  syntax:
    content: public ImportResult AddTranslationUnit(TranslationUnit translationUnit, ImportSettings settings, out IEnumerable<CascadeMessage> cascadeMessages)
    parameters:
    - id: translationUnit
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    - id: cascadeMessages
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    content.vb: Public Function AddTranslationUnit(translationUnit As TranslationUnit, settings As ImportSettings, ByRef cascadeMessages As IEnumerable(Of CascadeMessage)) As ImportResult
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnit*
  nameWithType.vb: Cascade(Of T).AddTranslationUnit(TranslationUnit, ImportSettings, ByRef IEnumerable(Of CascadeMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).AddTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit, Sdl.LanguagePlatform.TranslationMemory.ImportSettings, ByRef System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage))
  name.vb: AddTranslationUnit(TranslationUnit, ImportSettings, ByRef IEnumerable(Of CascadeMessage))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  id: UpdateTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: UpdateTranslationUnit(TranslationUnit)
  nameWithType: Cascade<T>.UpdateTranslationUnit(TranslationUnit)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.UpdateTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.UpdateTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider.\n"
  syntax:
    content: public ImportResult UpdateTranslationUnit(TranslationUnit translationUnit)
    parameters:
    - id: translationUnit
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    content.vb: Public Function UpdateTranslationUnit(translationUnit As TranslationUnit) As ImportResult
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnit*
  nameWithType.vb: Cascade(Of T).UpdateTranslationUnit(TranslationUnit)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).UpdateTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  id: UpdateTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: UpdateTranslationUnit(TranslationUnit, out IEnumerable<CascadeMessage>)
  nameWithType: Cascade<T>.UpdateTranslationUnit(TranslationUnit, out IEnumerable<CascadeMessage>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.UpdateTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit, out System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.UpdateTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider.\n"
  syntax:
    content: public ImportResult UpdateTranslationUnit(TranslationUnit translationUnit, out IEnumerable<CascadeMessage> cascadeMessages)
    parameters:
    - id: translationUnit
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    - id: cascadeMessages
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    content.vb: Public Function UpdateTranslationUnit(translationUnit As TranslationUnit, ByRef cascadeMessages As IEnumerable(Of CascadeMessage)) As ImportResult
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnit*
  nameWithType.vb: Cascade(Of T).UpdateTranslationUnit(TranslationUnit, ByRef IEnumerable(Of CascadeMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).UpdateTranslationUnit(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit, ByRef System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage))
  name.vb: UpdateTranslationUnit(TranslationUnit, ByRef IEnumerable(Of CascadeMessage))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Int32[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Int32[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  id: AddOrUpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Int32[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: AddOrUpdateTranslationUnits(TranslationUnit[], Int32[], ImportSettings)
  nameWithType: Cascade<T>.AddOrUpdateTranslationUnits(TranslationUnit[], Int32[], ImportSettings)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.AddOrUpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], System.Int32[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.AddOrUpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit%5b%5d%2cSystem.Int32%5b%5d%2cSdl.LanguagePlatform.TranslationMemory.ImportSettings)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider.\n"
  syntax:
    content: public ImportResult[] AddOrUpdateTranslationUnits(TranslationUnit[] translationUnits, int[] previousTranslationHashes, ImportSettings settings)
    parameters:
    - id: translationUnits
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: previousTranslationHashes
      type: System.Int32[]
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
    content.vb: Public Function AddOrUpdateTranslationUnits(translationUnits As TranslationUnit(), previousTranslationHashes As Integer(), settings As ImportSettings) As ImportResult()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnits*
  nameWithType.vb: Cascade(Of T).AddOrUpdateTranslationUnits(TranslationUnit(), Int32(), ImportSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).AddOrUpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), System.Int32(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  name.vb: AddOrUpdateTranslationUnits(TranslationUnit(), Int32(), ImportSettings)
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Int32[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Int32[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  id: AddOrUpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Int32[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: AddOrUpdateTranslationUnits(TranslationUnit[], Int32[], ImportSettings, out IEnumerable<CascadeMessage>)
  nameWithType: Cascade<T>.AddOrUpdateTranslationUnits(TranslationUnit[], Int32[], ImportSettings, out IEnumerable<CascadeMessage>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.AddOrUpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], System.Int32[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings, out System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.AddOrUpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit%5b%5d%2cSystem.Int32%5b%5d%2cSdl.LanguagePlatform.TranslationMemory.ImportSettings)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider.\n"
  syntax:
    content: public ImportResult[] AddOrUpdateTranslationUnits(TranslationUnit[] translationUnits, int[] previousTranslationHashes, ImportSettings settings, out IEnumerable<CascadeMessage> cascadeMessages)
    parameters:
    - id: translationUnits
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: previousTranslationHashes
      type: System.Int32[]
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    - id: cascadeMessages
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
    content.vb: Public Function AddOrUpdateTranslationUnits(translationUnits As TranslationUnit(), previousTranslationHashes As Integer(), settings As ImportSettings, ByRef cascadeMessages As IEnumerable(Of CascadeMessage)) As ImportResult()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnits*
  nameWithType.vb: Cascade(Of T).AddOrUpdateTranslationUnits(TranslationUnit(), Int32(), ImportSettings, ByRef IEnumerable(Of CascadeMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).AddOrUpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), System.Int32(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings, ByRef System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage))
  name.vb: AddOrUpdateTranslationUnits(TranslationUnit(), Int32(), ImportSettings, ByRef IEnumerable(Of CascadeMessage))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Int32[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Int32[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  id: AddOrUpdateTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Int32[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: AddOrUpdateTranslationUnitsMasked(TranslationUnit[], Int32[], ImportSettings, Boolean[])
  nameWithType: Cascade<T>.AddOrUpdateTranslationUnitsMasked(TranslationUnit[], Int32[], ImportSettings, Boolean[])
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.AddOrUpdateTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], System.Int32[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean[])
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.AddOrUpdateTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit%5b%5d%2cSystem.Int32%5b%5d%2cSdl.LanguagePlatform.TranslationMemory.ImportSettings%2cSystem.Boolean%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider.\n"
  syntax:
    content: public ImportResult[] AddOrUpdateTranslationUnitsMasked(TranslationUnit[] translationUnits, int[] previousTranslationHashes, ImportSettings settings, bool[] mask)
    parameters:
    - id: translationUnits
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: previousTranslationHashes
      type: System.Int32[]
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    - id: mask
      type: System.Boolean[]
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
    content.vb: Public Function AddOrUpdateTranslationUnitsMasked(translationUnits As TranslationUnit(), previousTranslationHashes As Integer(), settings As ImportSettings, mask As Boolean()) As ImportResult()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnitsMasked*
  nameWithType.vb: Cascade(Of T).AddOrUpdateTranslationUnitsMasked(TranslationUnit(), Int32(), ImportSettings, Boolean())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).AddOrUpdateTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), System.Int32(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean())
  name.vb: AddOrUpdateTranslationUnitsMasked(TranslationUnit(), Int32(), ImportSettings, Boolean())
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Int32[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Int32[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  id: AddOrUpdateTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Int32[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: AddOrUpdateTranslationUnitsMasked(TranslationUnit[], Int32[], ImportSettings, Boolean[], out IEnumerable<CascadeMessage>)
  nameWithType: Cascade<T>.AddOrUpdateTranslationUnitsMasked(TranslationUnit[], Int32[], ImportSettings, Boolean[], out IEnumerable<CascadeMessage>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.AddOrUpdateTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], System.Int32[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean[], out System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.AddOrUpdateTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit%5b%5d%2cSystem.Int32%5b%5d%2cSdl.LanguagePlatform.TranslationMemory.ImportSettings%2cSystem.Boolean%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider.\n"
  syntax:
    content: public ImportResult[] AddOrUpdateTranslationUnitsMasked(TranslationUnit[] translationUnits, int[] previousTranslationHashes, ImportSettings settings, bool[] mask, out IEnumerable<CascadeMessage> cascadeMessages)
    parameters:
    - id: translationUnits
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: previousTranslationHashes
      type: System.Int32[]
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    - id: mask
      type: System.Boolean[]
    - id: cascadeMessages
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
    content.vb: Public Function AddOrUpdateTranslationUnitsMasked(translationUnits As TranslationUnit(), previousTranslationHashes As Integer(), settings As ImportSettings, mask As Boolean(), ByRef cascadeMessages As IEnumerable(Of CascadeMessage)) As ImportResult()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnitsMasked*
  nameWithType.vb: Cascade(Of T).AddOrUpdateTranslationUnitsMasked(TranslationUnit(), Int32(), ImportSettings, Boolean(), ByRef IEnumerable(Of CascadeMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).AddOrUpdateTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), System.Int32(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean(), ByRef System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage))
  name.vb: AddOrUpdateTranslationUnitsMasked(TranslationUnit(), Int32(), ImportSettings, Boolean(), ByRef IEnumerable(Of CascadeMessage))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  id: AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: AddTranslationUnits(TranslationUnit[], ImportSettings)
  nameWithType: Cascade<T>.AddTranslationUnits(TranslationUnit[], ImportSettings)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit%5b%5d%2cSdl.LanguagePlatform.TranslationMemory.ImportSettings)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider.\n"
  syntax:
    content: public ImportResult[] AddTranslationUnits(TranslationUnit[] translationUnits, ImportSettings settings)
    parameters:
    - id: translationUnits
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
    content.vb: Public Function AddTranslationUnits(translationUnits As TranslationUnit(), settings As ImportSettings) As ImportResult()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnits*
  nameWithType.vb: Cascade(Of T).AddTranslationUnits(TranslationUnit(), ImportSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  name.vb: AddTranslationUnits(TranslationUnit(), ImportSettings)
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  id: AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: AddTranslationUnits(TranslationUnit[], ImportSettings, out IEnumerable<CascadeMessage>)
  nameWithType: Cascade<T>.AddTranslationUnits(TranslationUnit[], ImportSettings, out IEnumerable<CascadeMessage>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings, out System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit%5b%5d%2cSdl.LanguagePlatform.TranslationMemory.ImportSettings)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider.\n"
  syntax:
    content: public ImportResult[] AddTranslationUnits(TranslationUnit[] translationUnits, ImportSettings settings, out IEnumerable<CascadeMessage> cascadeMessages)
    parameters:
    - id: translationUnits
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    - id: cascadeMessages
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
    content.vb: Public Function AddTranslationUnits(translationUnits As TranslationUnit(), settings As ImportSettings, ByRef cascadeMessages As IEnumerable(Of CascadeMessage)) As ImportResult()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnits*
  nameWithType.vb: Cascade(Of T).AddTranslationUnits(TranslationUnit(), ImportSettings, ByRef IEnumerable(Of CascadeMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings, ByRef System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage))
  name.vb: AddTranslationUnits(TranslationUnit(), ImportSettings, ByRef IEnumerable(Of CascadeMessage))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  id: AddTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: AddTranslationUnitsMasked(TranslationUnit[], ImportSettings, Boolean[])
  nameWithType: Cascade<T>.AddTranslationUnitsMasked(TranslationUnit[], ImportSettings, Boolean[])
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.AddTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean[])
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.AddTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit%5b%5d%2cSdl.LanguagePlatform.TranslationMemory.ImportSettings%2cSystem.Boolean%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider.\n"
  syntax:
    content: public ImportResult[] AddTranslationUnitsMasked(TranslationUnit[] translationUnits, ImportSettings settings, bool[] mask)
    parameters:
    - id: translationUnits
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    - id: mask
      type: System.Boolean[]
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
    content.vb: Public Function AddTranslationUnitsMasked(translationUnits As TranslationUnit(), settings As ImportSettings, mask As Boolean()) As ImportResult()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnitsMasked*
  nameWithType.vb: Cascade(Of T).AddTranslationUnitsMasked(TranslationUnit(), ImportSettings, Boolean())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).AddTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean())
  name.vb: AddTranslationUnitsMasked(TranslationUnit(), ImportSettings, Boolean())
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  id: AddTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: AddTranslationUnitsMasked(TranslationUnit[], ImportSettings, Boolean[], out IEnumerable<CascadeMessage>)
  nameWithType: Cascade<T>.AddTranslationUnitsMasked(TranslationUnit[], ImportSettings, Boolean[], out IEnumerable<CascadeMessage>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.AddTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean[], out System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.AddTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit%5b%5d%2cSdl.LanguagePlatform.TranslationMemory.ImportSettings%2cSystem.Boolean%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider.\n"
  syntax:
    content: public ImportResult[] AddTranslationUnitsMasked(TranslationUnit[] translationUnits, ImportSettings settings, bool[] mask, out IEnumerable<CascadeMessage> cascadeMessages)
    parameters:
    - id: translationUnits
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    - id: mask
      type: System.Boolean[]
    - id: cascadeMessages
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
    content.vb: Public Function AddTranslationUnitsMasked(translationUnits As TranslationUnit(), settings As ImportSettings, mask As Boolean(), ByRef cascadeMessages As IEnumerable(Of CascadeMessage)) As ImportResult()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnitsMasked*
  nameWithType.vb: Cascade(Of T).AddTranslationUnitsMasked(TranslationUnit(), ImportSettings, Boolean(), ByRef IEnumerable(Of CascadeMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).AddTranslationUnitsMasked(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean(), ByRef System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage))
  name.vb: AddTranslationUnitsMasked(TranslationUnit(), ImportSettings, Boolean(), ByRef IEnumerable(Of CascadeMessage))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[])
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[])
  id: UpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[])
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: UpdateTranslationUnits(TranslationUnit[])
  nameWithType: Cascade<T>.UpdateTranslationUnits(TranslationUnit[])
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.UpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[])
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.UpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider.\n"
  syntax:
    content: public ImportResult[] UpdateTranslationUnits(TranslationUnit[] translationUnits)
    parameters:
    - id: translationUnits
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
    content.vb: Public Function UpdateTranslationUnits(translationUnits As TranslationUnit()) As ImportResult()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnits*
  nameWithType.vb: Cascade(Of T).UpdateTranslationUnits(TranslationUnit())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).UpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit())
  name.vb: UpdateTranslationUnits(TranslationUnit())
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  id: UpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}@)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: UpdateTranslationUnits(TranslationUnit[], out IEnumerable<CascadeMessage>)
  nameWithType: Cascade<T>.UpdateTranslationUnits(TranslationUnit[], out IEnumerable<CascadeMessage>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.UpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], out System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nExecutes <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection.UpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> on the current translation provider.\n"
  syntax:
    content: public ImportResult[] UpdateTranslationUnits(TranslationUnit[] translationUnits, out IEnumerable<CascadeMessage> cascadeMessages)
    parameters:
    - id: translationUnits
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: cascadeMessages
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
    content.vb: Public Function UpdateTranslationUnits(translationUnits As TranslationUnit(), ByRef cascadeMessages As IEnumerable(Of CascadeMessage)) As ImportResult()
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnits*
  nameWithType.vb: Cascade(Of T).UpdateTranslationUnits(TranslationUnit(), ByRef IEnumerable(Of CascadeMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).UpdateTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), ByRef System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage))
  name.vb: UpdateTranslationUnits(TranslationUnit(), ByRef IEnumerable(Of CascadeMessage))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.CascadeEntries
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.CascadeEntries
  id: CascadeEntries
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: CascadeEntries
  nameWithType: Cascade<T>.CascadeEntries
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.CascadeEntries
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets the cascade entries, which refer to a translation provider language direction and \nspecify and optional penalty to apply when perforing look-ups.\n"
  syntax:
    content: public ReadOnlyCollection<T> CascadeEntries { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
    content.vb: Public ReadOnly Property CascadeEntries As ReadOnlyCollection(Of T)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.CascadeEntries*
  nameWithType.vb: Cascade(Of T).CascadeEntries
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).CascadeEntries
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.StopSearchingWhenResultsFound
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.StopSearchingWhenResultsFound
  id: StopSearchingWhenResultsFound
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: StopSearchingWhenResultsFound
  nameWithType: Cascade<T>.StopSearchingWhenResultsFound
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.StopSearchingWhenResultsFound
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets whether to stop searching when results have been found.\n"
  remarks: "\n&quot;Stop searching&quot; means that the cascade will not search the next translation provider \nwhen results have been found in the current translation provider.\n"
  syntax:
    content: public bool StopSearchingWhenResultsFound { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property StopSearchingWhenResultsFound As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.StopSearchingWhenResultsFound*
  nameWithType.vb: Cascade(Of T).StopSearchingWhenResultsFound
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).StopSearchingWhenResultsFound
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.RemoveDuplicates
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.RemoveDuplicates
  id: RemoveDuplicates
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: RemoveDuplicates
  nameWithType: Cascade<T>.RemoveDuplicates
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.RemoveDuplicates
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets whether duplicates should be removed from search results.\n"
  syntax:
    content: public bool RemoveDuplicates { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property RemoveDuplicates As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.RemoveDuplicates*
  nameWithType.vb: Cascade(Of T).RemoveDuplicates
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).RemoveDuplicates
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SourceLanguage
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SourceLanguage
  id: SourceLanguage
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: SourceLanguage
  nameWithType: Cascade<T>.SourceLanguage
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SourceLanguage
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets the source language of this cascade.\n"
  syntax:
    content: public CultureInfo SourceLanguage { get; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
    content.vb: Public ReadOnly Property SourceLanguage As CultureInfo
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SourceLanguage*
  nameWithType.vb: Cascade(Of T).SourceLanguage
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SourceLanguage
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.TargetLanguage
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.TargetLanguage
  id: TargetLanguage
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: TargetLanguage
  nameWithType: Cascade<T>.TargetLanguage
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.TargetLanguage
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets the target language of this cascade.\n"
  syntax:
    content: public CultureInfo TargetLanguage { get; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
    content.vb: Public ReadOnly Property TargetLanguage As CultureInfo
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.TargetLanguage*
  nameWithType.vb: Cascade(Of T).TargetLanguage
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).TargetLanguage
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.CascadeEntryIndexesUsed
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.CascadeEntryIndexesUsed
  id: CascadeEntryIndexesUsed
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1
  langs:
  - csharp
  - vb
  name: CascadeEntryIndexesUsed
  nameWithType: Cascade<T>.CascadeEntryIndexesUsed
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.CascadeEntryIndexesUsed
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets the Cascade Entry Indexes that were used in the search.\n"
  syntax:
    content: public ConcurrentQueue<int> CascadeEntryIndexesUsed { get; }
    parameters: []
    return:
      type: System.Collections.Concurrent.ConcurrentQueue{System.Int32}
    content.vb: Public ReadOnly Property CascadeEntryIndexesUsed As ConcurrentQueue(Of Integer)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.CascadeEntryIndexesUsed*
  nameWithType.vb: Cascade(Of T).CascadeEntryIndexesUsed
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).CascadeEntryIndexesUsed
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.#ctor
  isExternal: true
  name: Cascade
  nameWithType: Cascade<T>.Cascade
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.Cascade
  nameWithType.vb: Cascade(Of T).Cascade
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).Cascade
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.GetTranslationProviderNames*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.GetTranslationProviderNames
  isExternal: true
  name: GetTranslationProviderNames
  nameWithType: Cascade<T>.GetTranslationProviderNames
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.GetTranslationProviderNames
  nameWithType.vb: Cascade(Of T).GetTranslationProviderNames
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).GetTranslationProviderNames
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SubsegmentSearchSegments*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SubsegmentSearchSegments
  isExternal: true
  name: SubsegmentSearchSegments
  nameWithType: Cascade<T>.SubsegmentSearchSegments
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SubsegmentSearchSegments
  nameWithType.vb: Cascade(Of T).SubsegmentSearchSegments
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SubsegmentSearchSegments
- uid: Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: SubsegmentSearchSettings
  nameWithType: SubsegmentSearchSettings
  fullName: Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchSettings
- uid: Sdl.LanguagePlatform.Core.Segment[]
  isExternal: true
  name: Segment[]
  nameWithType: Segment[]
  fullName: Sdl.LanguagePlatform.Core.Segment[]
  nameWithType.vb: Segment()
  fullName.vb: Sdl.LanguagePlatform.Core.Segment()
  name.vb: Segment()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Segment
    name: Segment
    nameWithType: Segment
    fullName: Sdl.LanguagePlatform.Core.Segment
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Segment
    name: Segment
    nameWithType: Segment
    fullName: Sdl.LanguagePlatform.Core.Segment
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CascadeMessage>
  nameWithType: IEnumerable<CascadeMessage>
  fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>
  nameWithType.vb: IEnumerable(Of CascadeMessage)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage)
  name.vb: IEnumerable(Of CascadeMessage)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage
    name: CascadeMessage
    nameWithType: CascadeMessage
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage
    name: CascadeMessage
    nameWithType: CascadeMessage
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchResultsCollection[]
  isExternal: true
  name: SubsegmentSearchResultsCollection[]
  nameWithType: SubsegmentSearchResultsCollection[]
  fullName: Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchResultsCollection[]
  nameWithType.vb: SubsegmentSearchResultsCollection()
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchResultsCollection()
  name.vb: SubsegmentSearchResultsCollection()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchResultsCollection
    name: SubsegmentSearchResultsCollection
    nameWithType: SubsegmentSearchResultsCollection
    fullName: Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchResultsCollection
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchResultsCollection
    name: SubsegmentSearchResultsCollection
    nameWithType: SubsegmentSearchResultsCollection
    fullName: Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchResultsCollection
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegment*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegment
  isExternal: true
  name: SearchSegment
  nameWithType: Cascade<T>.SearchSegment
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchSegment
  nameWithType.vb: Cascade(Of T).SearchSegment
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchSegment
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.SearchSettings
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: SearchSettings
  nameWithType: SearchSettings
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchSettings
- uid: Sdl.LanguagePlatform.Core.Segment
  commentId: T:Sdl.LanguagePlatform.Core.Segment
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: Segment
  nameWithType: Segment
  fullName: Sdl.LanguagePlatform.Core.Segment
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResults
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.SearchResults
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: SearchResults
  nameWithType: SearchResults
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResults
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchText*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchText
  isExternal: true
  name: SearchText
  nameWithType: Cascade<T>.SearchText
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchText
  nameWithType.vb: Cascade(Of T).SearchText
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchText
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnit*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnit
  isExternal: true
  name: SearchTranslationUnit
  nameWithType: Cascade<T>.SearchTranslationUnit
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchTranslationUnit
  nameWithType.vb: Cascade(Of T).SearchTranslationUnit
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchTranslationUnit
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: TranslationUnit
  nameWithType: TranslationUnit
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegments*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegments
  isExternal: true
  name: SearchSegments
  nameWithType: Cascade<T>.SearchSegments
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchSegments
  nameWithType.vb: Cascade(Of T).SearchSegments
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchSegments
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResults[]
  isExternal: true
  name: SearchResults[]
  nameWithType: SearchResults[]
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResults[]
  nameWithType.vb: SearchResults()
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.SearchResults()
  name.vb: SearchResults()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.SearchResults
    name: SearchResults
    nameWithType: SearchResults
    fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResults
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.SearchResults
    name: SearchResults
    nameWithType: SearchResults
    fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResults
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegmentsMasked*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchSegmentsMasked
  isExternal: true
  name: SearchSegmentsMasked
  nameWithType: Cascade<T>.SearchSegmentsMasked
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchSegmentsMasked
  nameWithType.vb: Cascade(Of T).SearchSegmentsMasked
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchSegmentsMasked
- uid: System.Boolean[]
  isExternal: true
  name: Boolean[]
  nameWithType: Boolean[]
  fullName: System.Boolean[]
  nameWithType.vb: Boolean()
  fullName.vb: System.Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResultsMerged[]
  isExternal: true
  name: SearchResultsMerged[]
  nameWithType: SearchResultsMerged[]
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResultsMerged[]
  nameWithType.vb: SearchResultsMerged()
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.SearchResultsMerged()
  name.vb: SearchResultsMerged()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.SearchResultsMerged
    name: SearchResultsMerged
    nameWithType: SearchResultsMerged
    fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResultsMerged
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.SearchResultsMerged
    name: SearchResultsMerged
    nameWithType: SearchResultsMerged
    fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResultsMerged
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchCondition
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchCondition
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: SubsegmentSearchCondition
  nameWithType: SubsegmentSearchCondition
  fullName: Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchCondition
- uid: Sdl.LanguagePlatform.TranslationMemory.SegmentAndSubsegmentSearchResultsMerged[]
  isExternal: true
  name: SegmentAndSubsegmentSearchResultsMerged[]
  nameWithType: SegmentAndSubsegmentSearchResultsMerged[]
  fullName: Sdl.LanguagePlatform.TranslationMemory.SegmentAndSubsegmentSearchResultsMerged[]
  nameWithType.vb: SegmentAndSubsegmentSearchResultsMerged()
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.SegmentAndSubsegmentSearchResultsMerged()
  name.vb: SegmentAndSubsegmentSearchResultsMerged()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.SegmentAndSubsegmentSearchResultsMerged
    name: SegmentAndSubsegmentSearchResultsMerged
    nameWithType: SegmentAndSubsegmentSearchResultsMerged
    fullName: Sdl.LanguagePlatform.TranslationMemory.SegmentAndSubsegmentSearchResultsMerged
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.SegmentAndSubsegmentSearchResultsMerged
    name: SegmentAndSubsegmentSearchResultsMerged
    nameWithType: SegmentAndSubsegmentSearchResultsMerged
    fullName: Sdl.LanguagePlatform.TranslationMemory.SegmentAndSubsegmentSearchResultsMerged
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnits*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnits
  isExternal: true
  name: SearchTranslationUnits
  nameWithType: Cascade<T>.SearchTranslationUnits
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchTranslationUnits
  nameWithType.vb: Cascade(Of T).SearchTranslationUnits
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchTranslationUnits
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
  isExternal: true
  name: TranslationUnit[]
  nameWithType: TranslationUnit[]
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
  nameWithType.vb: TranslationUnit()
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit()
  name.vb: TranslationUnit()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnitsMasked*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SearchTranslationUnitsMasked
  isExternal: true
  name: SearchTranslationUnitsMasked
  nameWithType: Cascade<T>.SearchTranslationUnitsMasked
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SearchTranslationUnitsMasked
  nameWithType.vb: Cascade(Of T).SearchTranslationUnitsMasked
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SearchTranslationUnitsMasked
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.GetWarningMessage*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.GetWarningMessage
  isExternal: true
  name: GetWarningMessage
  nameWithType: Cascade<T>.GetWarningMessage
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.GetWarningMessage
  nameWithType.vb: Cascade(Of T).GetWarningMessage
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).GetWarningMessage
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
  commentId: T:System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<CascadeMessage>
  nameWithType: IList<CascadeMessage>
  fullName: System.Collections.Generic.IList<Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage>
  nameWithType.vb: IList(Of CascadeMessage)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage)
  name.vb: IList(Of CascadeMessage)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage
    name: CascadeMessage
    nameWithType: CascadeMessage
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage
    name: CascadeMessage
    nameWithType: CascadeMessage
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.CascadeMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnit*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnit
  isExternal: true
  name: AddTranslationUnit
  nameWithType: Cascade<T>.AddTranslationUnit
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.AddTranslationUnit
  nameWithType.vb: Cascade(Of T).AddTranslationUnit
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).AddTranslationUnit
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: ImportSettings
  nameWithType: ImportSettings
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportResult
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ImportResult
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: ImportResult
  nameWithType: ImportResult
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResult
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnit*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnit
  isExternal: true
  name: UpdateTranslationUnit
  nameWithType: Cascade<T>.UpdateTranslationUnit
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.UpdateTranslationUnit
  nameWithType.vb: Cascade(Of T).UpdateTranslationUnit
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).UpdateTranslationUnit
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnits*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnits
  isExternal: true
  name: AddOrUpdateTranslationUnits
  nameWithType: Cascade<T>.AddOrUpdateTranslationUnits
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.AddOrUpdateTranslationUnits
  nameWithType.vb: Cascade(Of T).AddOrUpdateTranslationUnits
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).AddOrUpdateTranslationUnits
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
  isExternal: true
  name: ImportResult[]
  nameWithType: ImportResult[]
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
  nameWithType.vb: ImportResult()
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.ImportResult()
  name.vb: ImportResult()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    name: ImportResult
    nameWithType: ImportResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    name: ImportResult
    nameWithType: ImportResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnitsMasked*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddOrUpdateTranslationUnitsMasked
  isExternal: true
  name: AddOrUpdateTranslationUnitsMasked
  nameWithType: Cascade<T>.AddOrUpdateTranslationUnitsMasked
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.AddOrUpdateTranslationUnitsMasked
  nameWithType.vb: Cascade(Of T).AddOrUpdateTranslationUnitsMasked
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).AddOrUpdateTranslationUnitsMasked
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnits*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnits
  isExternal: true
  name: AddTranslationUnits
  nameWithType: Cascade<T>.AddTranslationUnits
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.AddTranslationUnits
  nameWithType.vb: Cascade(Of T).AddTranslationUnits
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).AddTranslationUnits
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnitsMasked*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.AddTranslationUnitsMasked
  isExternal: true
  name: AddTranslationUnitsMasked
  nameWithType: Cascade<T>.AddTranslationUnitsMasked
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.AddTranslationUnitsMasked
  nameWithType.vb: Cascade(Of T).AddTranslationUnitsMasked
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).AddTranslationUnitsMasked
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnits*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.UpdateTranslationUnits
  isExternal: true
  name: UpdateTranslationUnits
  nameWithType: Cascade<T>.UpdateTranslationUnits
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.UpdateTranslationUnits
  nameWithType.vb: Cascade(Of T).UpdateTranslationUnits
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).UpdateTranslationUnits
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.CascadeEntries*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.CascadeEntries
  isExternal: true
  name: CascadeEntries
  nameWithType: Cascade<T>.CascadeEntries
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.CascadeEntries
  nameWithType.vb: Cascade(Of T).CascadeEntries
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).CascadeEntries
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{`0}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.StopSearchingWhenResultsFound*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.StopSearchingWhenResultsFound
  isExternal: true
  name: StopSearchingWhenResultsFound
  nameWithType: Cascade<T>.StopSearchingWhenResultsFound
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.StopSearchingWhenResultsFound
  nameWithType.vb: Cascade(Of T).StopSearchingWhenResultsFound
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).StopSearchingWhenResultsFound
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.RemoveDuplicates*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.RemoveDuplicates
  isExternal: true
  name: RemoveDuplicates
  nameWithType: Cascade<T>.RemoveDuplicates
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.RemoveDuplicates
  nameWithType.vb: Cascade(Of T).RemoveDuplicates
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).RemoveDuplicates
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SourceLanguage*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.SourceLanguage
  isExternal: true
  name: SourceLanguage
  nameWithType: Cascade<T>.SourceLanguage
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.SourceLanguage
  nameWithType.vb: Cascade(Of T).SourceLanguage
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).SourceLanguage
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.TargetLanguage*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.TargetLanguage
  isExternal: true
  name: TargetLanguage
  nameWithType: Cascade<T>.TargetLanguage
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.TargetLanguage
  nameWithType.vb: Cascade(Of T).TargetLanguage
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).TargetLanguage
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.CascadeEntryIndexesUsed*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Cascade`1.CascadeEntryIndexesUsed
  isExternal: true
  name: CascadeEntryIndexesUsed
  nameWithType: Cascade<T>.CascadeEntryIndexesUsed
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade<T>.CascadeEntryIndexesUsed
  nameWithType.vb: Cascade(Of T).CascadeEntryIndexesUsed
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Cascade(Of T).CascadeEntryIndexesUsed
- uid: System.Collections.Concurrent.ConcurrentQueue{System.Int32}
  commentId: T:System.Collections.Concurrent.ConcurrentQueue{System.Int32}
  parent: System.Collections.Concurrent
  definition: System.Collections.Concurrent.ConcurrentQueue`1
  name: ConcurrentQueue<Int32>
  nameWithType: ConcurrentQueue<Int32>
  fullName: System.Collections.Concurrent.ConcurrentQueue<System.Int32>
  nameWithType.vb: ConcurrentQueue(Of Int32)
  fullName.vb: System.Collections.Concurrent.ConcurrentQueue(Of System.Int32)
  name.vb: ConcurrentQueue(Of Int32)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentQueue`1
    name: ConcurrentQueue
    nameWithType: ConcurrentQueue
    fullName: System.Collections.Concurrent.ConcurrentQueue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentQueue`1
    name: ConcurrentQueue
    nameWithType: ConcurrentQueue
    fullName: System.Collections.Concurrent.ConcurrentQueue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentQueue`1
  commentId: T:System.Collections.Concurrent.ConcurrentQueue`1
  isExternal: true
  name: ConcurrentQueue<T>
  nameWithType: ConcurrentQueue<T>
  fullName: System.Collections.Concurrent.ConcurrentQueue<T>
  nameWithType.vb: ConcurrentQueue(Of T)
  fullName.vb: System.Collections.Concurrent.ConcurrentQueue(Of T)
  name.vb: ConcurrentQueue(Of T)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentQueue`1
    name: ConcurrentQueue
    nameWithType: ConcurrentQueue
    fullName: System.Collections.Concurrent.ConcurrentQueue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentQueue`1
    name: ConcurrentQueue
    nameWithType: ConcurrentQueue
    fullName: System.Collections.Concurrent.ConcurrentQueue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent
  commentId: N:System.Collections.Concurrent
  isExternal: true
  name: System.Collections.Concurrent
  nameWithType: System.Collections.Concurrent
  fullName: System.Collections.Concurrent
