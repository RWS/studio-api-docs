### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  id: TokenBundle
  parent: Sdl.LanguagePlatform.Core.Tokenization
  children:
  - Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.#ctor(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Int32)
  - Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken})
  - Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  - Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Add(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Int32)
  - Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Add(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Int32,System.Boolean)
  - Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Contains(Sdl.LanguagePlatform.Core.Tokenization.Token)
  - Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Count
  - Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Duplicate
  - Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetBest
  - Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetEnumerator
  - Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetTokenType
  - Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.IsPlaceable
  - Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.IsSubstitutable
  - Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Item(System.Int32)
  - Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.SortByDecreasingPriority
  - Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: TokenBundle
  nameWithType: TokenBundle
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  type: Class
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nA special <xref href=\"Sdl.LanguagePlatform.Core.Tokenization.Token\" data-throw-if-not-resolved=\"false\"></xref> which represents a set of alternatives (i.e. an ambiguous\nanalysis) of other tokens which cover the exactly same input span. \n"
  syntax:
    content: 'public class TokenBundle : Token, IEnumerable<PrioritizedToken>, IEnumerable'
    content.vb: >-
      Public Class TokenBundle
          Inherits Token
          Implements IEnumerable(Of PrioritizedToken), IEnumerable
  inheritance:
  - System.Object
  - Sdl.LanguagePlatform.Core.SegmentElement
  - Sdl.LanguagePlatform.Core.Tokenization.Token
  implements:
  - System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken}
  - System.Collections.IEnumerable
  inheritedMembers:
  - Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
  - Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
  - Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
  - Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  - Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
  - Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Text
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Span
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Type
  - Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
  - Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
  - Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.#ctor(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Int32)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.#ctor(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Int32)
  id: '#ctor(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Int32)'
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  langs:
  - csharp
  - vb
  name: TokenBundle(Token, Int32)
  nameWithType: TokenBundle.TokenBundle(Token, Int32)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.TokenBundle(Sdl.LanguagePlatform.Core.Tokenization.Token, System.Int32)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nInitializes a new instance with the specified values.\n"
  syntax:
    content: public TokenBundle(Token t, int priority)
    parameters:
    - id: t
      type: Sdl.LanguagePlatform.Core.Tokenization.Token
      description: "The first token in the set of alternatives (must not be null). It \nis also used to set the <xref href=\"Sdl.LanguagePlatform.Core.Tokenization.Token.Text\" data-throw-if-not-resolved=\"false\"></xref> of the bundle."
    - id: priority
      type: System.Int32
      description: The priority to assign to the first token in the bundle
    content.vb: Public Sub New(t As Token, priority As Integer)
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken})
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken})
  id: '#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken})'
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  langs:
  - csharp
  - vb
  name: TokenBundle(IList<PrioritizedToken>)
  nameWithType: TokenBundle.TokenBundle(IList<PrioritizedToken>)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.TokenBundle(System.Collections.Generic.IList<Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken>)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nInitializes a new instance with a list of prioritized tokens.\n"
  syntax:
    content: public TokenBundle(IList<PrioritizedToken> items)
    parameters:
    - id: items
      type: System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken}
      description: The items to add to the list of alternatives. Only a shallow copy is made.
    content.vb: Public Sub New(items As IList(Of PrioritizedToken))
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.#ctor*
  nameWithType.vb: TokenBundle.TokenBundle(IList(Of PrioritizedToken))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.TokenBundle(System.Collections.Generic.IList(Of Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken))
  name.vb: TokenBundle(IList(Of PrioritizedToken))
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Add(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Int32)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Add(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Int32)
  id: Add(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Int32)
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  langs:
  - csharp
  - vb
  name: Add(Token, Int32)
  nameWithType: TokenBundle.Add(Token, Int32)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Add(Sdl.LanguagePlatform.Core.Tokenization.Token, System.Int32)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nAdds a new token to the set of alternatives. Potential duplicates are kept.\n"
  syntax:
    content: public void Add(Token t, int priority)
    parameters:
    - id: t
      type: Sdl.LanguagePlatform.Core.Tokenization.Token
      description: The token
    - id: priority
      type: System.Int32
      description: The priority assigned to the token
    content.vb: Public Sub Add(t As Token, priority As Integer)
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Add(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Int32,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Add(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Int32,System.Boolean)
  id: Add(Sdl.LanguagePlatform.Core.Tokenization.Token,System.Int32,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  langs:
  - csharp
  - vb
  name: Add(Token, Int32, Boolean)
  nameWithType: TokenBundle.Add(Token, Int32, Boolean)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Add(Sdl.LanguagePlatform.Core.Tokenization.Token, System.Int32, System.Boolean)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nAdds a new token to the set of alternatives.\n"
  syntax:
    content: public void Add(Token t, int priority, bool keepDuplicates)
    parameters:
    - id: t
      type: Sdl.LanguagePlatform.Core.Tokenization.Token
      description: The token
    - id: priority
      type: System.Int32
      description: The priority assigned to the token
    - id: keepDuplicates
      type: System.Boolean
      description: "If <code>true</code>, the token will always be added. If <code>false</code>, \nand the collection contains a token which Equals <code data-dev-comment-type=\"paramref\" class=\"paramref\">t</code>, only the one with the \nhigher priority will be kept."
    content.vb: Public Sub Add(t As Token, priority As Integer, keepDuplicates As Boolean)
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetEnumerator
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetEnumerator
  id: GetEnumerator
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: TokenBundle.GetEnumerator()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetEnumerator()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets an enumerator to iterate through the list of alternatives.\n"
  syntax:
    content: public IEnumerator<PrioritizedToken> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken}
      description: An enumerator
    content.vb: Public Function GetEnumerator As IEnumerator(Of PrioritizedToken)
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: TokenBundle.IEnumerable.GetEnumerator()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets an enumerator to iterate through the list of alternatives.\n"
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: An enumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: TokenBundle.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetBest
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetBest
  id: GetBest
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  langs:
  - csharp
  - vb
  name: GetBest()
  nameWithType: TokenBundle.GetBest()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetBest()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nObtains the token with the highest priority in the set of alternatives. If two tokens\nhave the same priority, the first one will be the winner.\n"
  syntax:
    content: public Token GetBest()
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.Token
      description: The token with the highest priority in the set of alternatives.
    content.vb: Public Function GetBest As Token
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetBest*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.SortByDecreasingPriority
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.SortByDecreasingPriority
  id: SortByDecreasingPriority
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  langs:
  - csharp
  - vb
  name: SortByDecreasingPriority()
  nameWithType: TokenBundle.SortByDecreasingPriority()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.SortByDecreasingPriority()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nSorts the set of alternatives by decreasing priority.\n"
  syntax:
    content: public void SortByDecreasingPriority()
    content.vb: Public Sub SortByDecreasingPriority
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.SortByDecreasingPriority*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Contains(Sdl.LanguagePlatform.Core.Tokenization.Token)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Contains(Sdl.LanguagePlatform.Core.Tokenization.Token)
  id: Contains(Sdl.LanguagePlatform.Core.Tokenization.Token)
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  langs:
  - csharp
  - vb
  name: Contains(Token)
  nameWithType: TokenBundle.Contains(Token)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Contains(Sdl.LanguagePlatform.Core.Tokenization.Token)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nDetermines whether the specified token is contained in the set of alternatives.\n"
  syntax:
    content: public bool Contains(Token t)
    parameters:
    - id: t
      type: Sdl.LanguagePlatform.Core.Tokenization.Token
      description: The token to search
    return:
      type: System.Boolean
      description: <code>true</code> if the token is equal to one of the alternatives, and <code>false</code> otherwise
    content.vb: Public Function Contains(t As Token) As Boolean
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetTokenType
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetTokenType
  id: GetTokenType
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  langs:
  - csharp
  - vb
  name: GetTokenType()
  nameWithType: TokenBundle.GetTokenType()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetTokenType()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\n<xref href=\"Sdl.LanguagePlatform.Core.Tokenization.Token.Type\" data-throw-if-not-resolved=\"false\"></xref>. Returns the token type of the first alternative in the collection. \nHowever, be aware that the alternatives may represent different token types.\n"
  syntax:
    content: protected override TokenType GetTokenType()
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    content.vb: Protected Overrides Function GetTokenType As TokenType
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetTokenType*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  id: AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  langs:
  - csharp
  - vb
  name: AcceptSegmentElementVisitor(ISegmentElementVisitor)
  nameWithType: TokenBundle.AcceptSegmentElementVisitor(ISegmentElementVisitor)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nInvalid for this class. Will throw a <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override void AcceptSegmentElementVisitor(ISegmentElementVisitor visitor)
    parameters:
    - id: visitor
      type: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
      description: (ignored)
    content.vb: Public Overrides Sub AcceptSegmentElementVisitor(visitor As ISegmentElementVisitor)
  overridden: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.AcceptSegmentElementVisitor*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Duplicate
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Duplicate
  id: Duplicate
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: TokenBundle.Duplicate()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Duplicate()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nInvalid for this class. Will throw a <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override SegmentElement Duplicate()
    return:
      type: Sdl.LanguagePlatform.Core.SegmentElement
    content.vb: Public Overrides Function Duplicate As SegmentElement
  overridden: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Duplicate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Count
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Count
  id: Count
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: TokenBundle.Count
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Count
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets the number of elements in the collection.\n"
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Item(System.Int32)
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Item(System.Int32)
  id: Item(System.Int32)
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: TokenBundle.Item[Int32]
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Item[System.Int32]
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\nGets the prioritized token at the specified index position. If the index position\nis invalid, an exception is thrown.\n"
  syntax:
    content: public PrioritizedToken this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: The index
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken
      description: The prioritized token at the index position
    content.vb: Public ReadOnly Property Item(index As Integer) As PrioritizedToken
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Item*
  nameWithType.vb: TokenBundle.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.IsPlaceable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.IsPlaceable
  id: IsPlaceable
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  langs:
  - csharp
  - vb
  name: IsPlaceable
  nameWithType: TokenBundle.IsPlaceable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.IsPlaceable
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\n<xref href=\"Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable\" data-throw-if-not-resolved=\"false\"></xref>. Is <code>true</code> if any of the alternatives\nis a placeable token.\n"
  syntax:
    content: public override bool IsPlaceable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsPlaceable As Boolean
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.IsPlaceable*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.IsSubstitutable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.IsSubstitutable
  id: IsSubstitutable
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle
  langs:
  - csharp
  - vb
  name: IsSubstitutable
  nameWithType: TokenBundle.IsSubstitutable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.IsSubstitutable
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: "\n<xref href=\"Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable\" data-throw-if-not-resolved=\"false\"></xref>. Is <code>true</code> if any of the alternatives\nis a substitutable token.\n"
  syntax:
    content: public override bool IsSubstitutable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsSubstitutable As Boolean
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.IsSubstitutable*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.Core.Tokenization
  commentId: N:Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Sdl.LanguagePlatform.Core.Tokenization
  nameWithType: Sdl.LanguagePlatform.Core.Tokenization
  fullName: Sdl.LanguagePlatform.Core.Tokenization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.LanguagePlatform.Core.SegmentElement
  commentId: T:Sdl.LanguagePlatform.Core.SegmentElement
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: SegmentElement
  nameWithType: SegmentElement
  fullName: Sdl.LanguagePlatform.Core.SegmentElement
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.Token
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Token
  nameWithType: Token
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token
- uid: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PrioritizedToken>
  nameWithType: IEnumerable<PrioritizedToken>
  fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken>
  nameWithType.vb: IEnumerable(Of PrioritizedToken)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken)
  name.vb: IEnumerable(Of PrioritizedToken)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken
    name: PrioritizedToken
    nameWithType: PrioritizedToken
    fullName: Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken
    name: PrioritizedToken
    nameWithType: PrioritizedToken
    fullName: Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: SetTokenType(TokenType)
  nameWithType: Token.SetTokenType(TokenType)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
    name: SetTokenType
    nameWithType: Token.SetTokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    name: TokenType
    nameWithType: TokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
    name: SetTokenType
    nameWithType: Token.SetTokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    name: TokenType
    nameWithType: TokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Equals(Object)
  nameWithType: Token.Equals(Object)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
    name: Equals
    nameWithType: Token.Equals
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
    name: Equals
    nameWithType: Token.Equals
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: GetHashCode()
  nameWithType: Token.GetHashCode()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
    name: GetHashCode
    nameWithType: Token.GetHashCode
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
    name: GetHashCode
    nameWithType: Token.GetHashCode
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: GetWeakHashCode()
  nameWithType: Token.GetWeakHashCode()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    name: GetWeakHashCode
    nameWithType: Token.GetWeakHashCode
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    name: GetWeakHashCode
    nameWithType: Token.GetWeakHashCode
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: GetBundleSimilarity(SegmentElement)
  nameWithType: Token.GetBundleSimilarity(SegmentElement)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetBundleSimilarity
    nameWithType: Token.GetBundleSimilarity
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetBundleSimilarity
    nameWithType: Token.GetBundleSimilarity
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: GetIdentityStringAsync()
  nameWithType: Token.GetIdentityStringAsync()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
    name: GetIdentityStringAsync
    nameWithType: Token.GetIdentityStringAsync
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
    name: GetIdentityStringAsync
    nameWithType: Token.GetIdentityStringAsync
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: TokenizationContext
  nameWithType: Token.TokenizationContext
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Text
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Text
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Text
  nameWithType: Token.Text
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Text
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Span
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Span
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Span
  nameWithType: Token.Span
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Span
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Type
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Type
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Type
  nameWithType: Token.Type
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Type
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsWord
  nameWithType: Token.IsWord
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsPunctuation
  nameWithType: Token.IsPunctuation
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsWhitespace
  nameWithType: Token.IsWhitespace
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Culture
  nameWithType: Token.Culture
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: GetSimilarity(SegmentElement)
  nameWithType: SegmentElement.GetSimilarity(SegmentElement)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: GetSimilarity(SegmentElement, Boolean)
  nameWithType: SegmentElement.GetSimilarity(SegmentElement, Boolean)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement, System.Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: GetSimilarityAsync(SegmentElement)
  nameWithType: SegmentElement.GetSimilarityAsync(SegmentElement)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarityAsync
    nameWithType: SegmentElement.GetSimilarityAsync
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarityAsync
    nameWithType: SegmentElement.GetSimilarityAsync
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: GetSimilarityAsync(SegmentElement, Boolean)
  nameWithType: SegmentElement.GetSimilarityAsync(SegmentElement, Boolean)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement, System.Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarityAsync
    nameWithType: SegmentElement.GetSimilarityAsync
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarityAsync
    nameWithType: SegmentElement.GetSimilarityAsync
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.#ctor
  isExternal: true
  name: TokenBundle
  nameWithType: TokenBundle.TokenBundle
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.TokenBundle
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken}
  commentId: T:System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PrioritizedToken>
  nameWithType: IList<PrioritizedToken>
  fullName: System.Collections.Generic.IList<Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken>
  nameWithType.vb: IList(Of PrioritizedToken)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken)
  name.vb: IList(Of PrioritizedToken)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken
    name: PrioritizedToken
    nameWithType: PrioritizedToken
    fullName: Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken
    name: PrioritizedToken
    nameWithType: PrioritizedToken
    fullName: Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Add*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Add
  isExternal: true
  name: Add
  nameWithType: TokenBundle.Add
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Add
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetEnumerator*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetEnumerator
  isExternal: true
  name: GetEnumerator
  nameWithType: TokenBundle.GetEnumerator
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<PrioritizedToken>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of PrioritizedToken).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<PrioritizedToken>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of PrioritizedToken).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken}
  commentId: T:System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<PrioritizedToken>
  nameWithType: IEnumerator<PrioritizedToken>
  fullName: System.Collections.Generic.IEnumerator<Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken>
  nameWithType.vb: IEnumerator(Of PrioritizedToken)
  fullName.vb: System.Collections.Generic.IEnumerator(Of Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken)
  name.vb: IEnumerator(Of PrioritizedToken)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken
    name: PrioritizedToken
    nameWithType: PrioritizedToken
    fullName: Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken
    name: PrioritizedToken
    nameWithType: PrioritizedToken
    fullName: Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator
  nameWithType: TokenBundle.IEnumerable.GetEnumerator
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: TokenBundle.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetBest*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetBest
  isExternal: true
  name: GetBest
  nameWithType: TokenBundle.GetBest
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetBest
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.SortByDecreasingPriority*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.SortByDecreasingPriority
  isExternal: true
  name: SortByDecreasingPriority
  nameWithType: TokenBundle.SortByDecreasingPriority
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.SortByDecreasingPriority
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Contains*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Contains
  isExternal: true
  name: Contains
  nameWithType: TokenBundle.Contains
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Contains
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: GetTokenType()
  nameWithType: Token.GetTokenType()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
    name: GetTokenType
    nameWithType: Token.GetTokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
    name: GetTokenType
    nameWithType: Token.GetTokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetTokenType*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetTokenType
  isExternal: true
  name: GetTokenType
  nameWithType: TokenBundle.GetTokenType
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.GetTokenType
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenType
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.TokenType
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: TokenType
  nameWithType: TokenType
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenType
- uid: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: AcceptSegmentElementVisitor(ISegmentElementVisitor)
  nameWithType: SegmentElement.AcceptSegmentElementVisitor(ISegmentElementVisitor)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
    name: AcceptSegmentElementVisitor
    nameWithType: SegmentElement.AcceptSegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    name: ISegmentElementVisitor
    nameWithType: ISegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
    name: AcceptSegmentElementVisitor
    nameWithType: SegmentElement.AcceptSegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    name: ISegmentElementVisitor
    nameWithType: ISegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.AcceptSegmentElementVisitor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.AcceptSegmentElementVisitor
  isExternal: true
  name: AcceptSegmentElementVisitor
  nameWithType: TokenBundle.AcceptSegmentElementVisitor
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.AcceptSegmentElementVisitor
- uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
  commentId: T:Sdl.LanguagePlatform.Core.ISegmentElementVisitor
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: ISegmentElementVisitor
  nameWithType: ISegmentElementVisitor
  fullName: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
- uid: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: Duplicate()
  nameWithType: SegmentElement.Duplicate()
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    name: Duplicate
    nameWithType: SegmentElement.Duplicate
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    name: Duplicate
    nameWithType: SegmentElement.Duplicate
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Duplicate*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Duplicate
  isExternal: true
  name: Duplicate
  nameWithType: TokenBundle.Duplicate
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Duplicate
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Count*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Count
  isExternal: true
  name: Count
  nameWithType: TokenBundle.Count
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Count
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Item*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Item
  isExternal: true
  name: Item
  nameWithType: TokenBundle.Item
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.Item
- uid: Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: PrioritizedToken
  nameWithType: PrioritizedToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.PrioritizedToken
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsPlaceable
  nameWithType: Token.IsPlaceable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.IsPlaceable*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.IsPlaceable
  isExternal: true
  name: IsPlaceable
  nameWithType: TokenBundle.IsPlaceable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.IsPlaceable
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsSubstitutable
  nameWithType: Token.IsSubstitutable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.IsSubstitutable*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.IsSubstitutable
  isExternal: true
  name: IsSubstitutable
  nameWithType: TokenBundle.IsSubstitutable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenBundle.IsSubstitutable
