### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.Field
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.Field
  id: Field
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.Field.#ctor
  - Sdl.LanguagePlatform.TranslationMemory.Field.#ctor(Sdl.LanguagePlatform.TranslationMemory.Field)
  - Sdl.LanguagePlatform.TranslationMemory.Field.#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  - Sdl.LanguagePlatform.TranslationMemory.Field.CheckName(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.Field.Clone
  - Sdl.LanguagePlatform.TranslationMemory.Field.CreateValue
  - Sdl.LanguagePlatform.TranslationMemory.Field.Duplicate
  - Sdl.LanguagePlatform.TranslationMemory.Field.Equals(System.Object)
  - Sdl.LanguagePlatform.TranslationMemory.Field.EqualsDeclaration(Sdl.LanguagePlatform.TranslationMemory.Field)
  - Sdl.LanguagePlatform.TranslationMemory.Field.FieldType
  - Sdl.LanguagePlatform.TranslationMemory.Field.GetFieldType(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.Field.GetHashCode
  - Sdl.LanguagePlatform.TranslationMemory.Field.IsPseudoFieldName(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.Field.IsReservedName(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemField
  - Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemFieldName(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.Field.IsValidName(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.Field.LookupSpecialField(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.Field.Name
  - Sdl.LanguagePlatform.TranslationMemory.Field.PicklistItemNames
  - Sdl.LanguagePlatform.TranslationMemory.Field.RemoveIllegalChars(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.Field.StructureContextFieldName
  - Sdl.LanguagePlatform.TranslationMemory.Field.TextContextFieldName
  - Sdl.LanguagePlatform.TranslationMemory.Field.ValueType
  langs:
  - csharp
  - vb
  name: Field
  nameWithType: Field
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: 'public class Field : PersistentObject, ICloneable, IField'
    content.vb: >-
      Public Class Field
          Inherits PersistentObject
          Implements ICloneable, IField
  inheritance:
  - System.Object
  - Sdl.LanguagePlatform.TranslationMemory.PersistentObject
  derivedClasses:
  - Sdl.LanguagePlatform.TranslationMemory.PicklistField
  implements:
  - System.ICloneable
  - Sdl.LanguagePlatform.TranslationMemory.IField
  inheritedMembers:
  - Sdl.LanguagePlatform.TranslationMemory.PersistentObject.ResourceId
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.StructureContextFieldName
  commentId: F:Sdl.LanguagePlatform.TranslationMemory.Field.StructureContextFieldName
  id: StructureContextFieldName
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: StructureContextFieldName
  nameWithType: Field.StructureContextFieldName
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.StructureContextFieldName
  type: Field
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public static readonly string StructureContextFieldName
    return:
      type: System.String
    content.vb: Public Shared ReadOnly StructureContextFieldName As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.TextContextFieldName
  commentId: F:Sdl.LanguagePlatform.TranslationMemory.Field.TextContextFieldName
  id: TextContextFieldName
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: TextContextFieldName
  nameWithType: Field.TextContextFieldName
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.TextContextFieldName
  type: Field
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public static readonly string TextContextFieldName
    return:
      type: System.String
    content.vb: Public Shared ReadOnly TextContextFieldName As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Field.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: Field()
  nameWithType: Field.Field()
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.Field()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public Field()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.#ctor(Sdl.LanguagePlatform.TranslationMemory.Field)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Field.#ctor(Sdl.LanguagePlatform.TranslationMemory.Field)
  id: '#ctor(Sdl.LanguagePlatform.TranslationMemory.Field)'
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: Field(Field)
  nameWithType: Field.Field(Field)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.Field(Sdl.LanguagePlatform.TranslationMemory.Field)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public Field(Field other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.TranslationMemory.Field
    content.vb: Public Sub New(other As Field)
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Field.#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  id: '#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)'
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: Field(String, FieldValueType)
  nameWithType: Field.Field(String, FieldValueType)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.Field(System.String, Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public Field(string name, FieldValueType valueType)
    parameters:
    - id: name
      type: System.String
    - id: valueType
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
    content.vb: Public Sub New(name As String, valueType As FieldValueType)
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.CheckName(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Field.CheckName(System.String)
  id: CheckName(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: CheckName(String)
  nameWithType: Field.CheckName(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.CheckName(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: protected virtual void CheckName(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Protected Overridable Sub CheckName(name As String)
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.CheckName*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.RemoveIllegalChars(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Field.RemoveIllegalChars(System.String)
  id: RemoveIllegalChars(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: RemoveIllegalChars(String)
  nameWithType: Field.RemoveIllegalChars(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.RemoveIllegalChars(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public static string RemoveIllegalChars(string val)
    parameters:
    - id: val
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function RemoveIllegalChars(val As String) As String
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.RemoveIllegalChars*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.IsValidName(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Field.IsValidName(System.String)
  id: IsValidName(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: IsValidName(String)
  nameWithType: Field.IsValidName(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.IsValidName(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public static bool IsValidName(string val)
    parameters:
    - id: val
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValidName(val As String) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.IsValidName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.LookupSpecialField(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Field.LookupSpecialField(System.String)
  id: LookupSpecialField(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: LookupSpecialField(String)
  nameWithType: Field.LookupSpecialField(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.LookupSpecialField(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public static Field LookupSpecialField(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.Field
    content.vb: Public Shared Function LookupSpecialField(name As String) As Field
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.LookupSpecialField*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemFieldName(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemFieldName(System.String)
  id: IsSystemFieldName(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: IsSystemFieldName(String)
  nameWithType: Field.IsSystemFieldName(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemFieldName(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public static bool IsSystemFieldName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsSystemFieldName(name As String) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemFieldName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.IsPseudoFieldName(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Field.IsPseudoFieldName(System.String)
  id: IsPseudoFieldName(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: IsPseudoFieldName(String)
  nameWithType: Field.IsPseudoFieldName(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.IsPseudoFieldName(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public static bool IsPseudoFieldName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsPseudoFieldName(name As String) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.IsPseudoFieldName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.IsReservedName(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Field.IsReservedName(System.String)
  id: IsReservedName(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: IsReservedName(String)
  nameWithType: Field.IsReservedName(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.IsReservedName(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public static bool IsReservedName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsReservedName(name As String) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.IsReservedName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.GetFieldType(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Field.GetFieldType(System.String)
  id: GetFieldType(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: GetFieldType(String)
  nameWithType: Field.GetFieldType(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.GetFieldType(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public static FieldType GetFieldType(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldType
    content.vb: Public Shared Function GetFieldType(name As String) As FieldType
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.GetFieldType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.Equals(System.Object)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Field.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Field.Equals(Object)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.Equals(System.Object)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.GetHashCode
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Field.GetHashCode
  id: GetHashCode
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Field.GetHashCode()
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.GetHashCode()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.EqualsDeclaration(Sdl.LanguagePlatform.TranslationMemory.Field)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Field.EqualsDeclaration(Sdl.LanguagePlatform.TranslationMemory.Field)
  id: EqualsDeclaration(Sdl.LanguagePlatform.TranslationMemory.Field)
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: EqualsDeclaration(Field)
  nameWithType: Field.EqualsDeclaration(Field)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.EqualsDeclaration(Sdl.LanguagePlatform.TranslationMemory.Field)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public bool EqualsDeclaration(Field other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.TranslationMemory.Field
    return:
      type: System.Boolean
    content.vb: Public Function EqualsDeclaration(other As Field) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.EqualsDeclaration*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.CreateValue
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Field.CreateValue
  id: CreateValue
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: CreateValue()
  nameWithType: Field.CreateValue()
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.CreateValue()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public FieldValue CreateValue()
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    content.vb: Public Function CreateValue As FieldValue
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.CreateValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.Clone
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Field.Clone
  id: Clone
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Field.Clone()
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.Clone()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public virtual object Clone()
    return:
      type: System.Object
    content.vb: Public Overridable Function Clone As Object
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.Duplicate
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Field.Duplicate
  id: Duplicate
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: Field.Duplicate()
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.Duplicate()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public virtual Field Duplicate()
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.Field
    content.vb: Public Overridable Function Duplicate As Field
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.Duplicate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.ValueType
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.Field.ValueType
  id: ValueType
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: ValueType
  nameWithType: Field.ValueType
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.ValueType
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public FieldValueType ValueType { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
    content.vb: Public Property ValueType As FieldValueType
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.ValueType*
  implements:
  - Sdl.LanguagePlatform.TranslationMemory.IField.ValueType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.PicklistItemNames
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.Field.PicklistItemNames
  id: PicklistItemNames
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: PicklistItemNames
  nameWithType: Field.PicklistItemNames
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.PicklistItemNames
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public virtual IList<string> PicklistItemNames { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Overridable ReadOnly Property PicklistItemNames As IList(Of String)
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.PicklistItemNames*
  implements:
  - Sdl.LanguagePlatform.TranslationMemory.IField.PicklistItemNames
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.Name
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.Field.Name
  id: Name
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Field.Name
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.Name
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.Name*
  implements:
  - Sdl.LanguagePlatform.TranslationMemory.IField.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.FieldType
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.Field.FieldType
  id: FieldType
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: FieldType
  nameWithType: Field.FieldType
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.FieldType
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public FieldType FieldType { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldType
    content.vb: Public Property FieldType As FieldType
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.FieldType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemField
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemField
  id: IsSystemField
  parent: Sdl.LanguagePlatform.TranslationMemory.Field
  langs:
  - csharp
  - vb
  name: IsSystemField
  nameWithType: Field.IsSystemField
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemField
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public bool IsSystemField { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSystemField As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemField*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.LanguagePlatform.TranslationMemory.PersistentObject
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.PersistentObject
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: PersistentObject
  nameWithType: PersistentObject
  fullName: Sdl.LanguagePlatform.TranslationMemory.PersistentObject
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: Sdl.LanguagePlatform.TranslationMemory.IField
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.IField
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: IField
  nameWithType: IField
  fullName: Sdl.LanguagePlatform.TranslationMemory.IField
- uid: Sdl.LanguagePlatform.TranslationMemory.PersistentObject.ResourceId
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.PersistentObject.ResourceId
  parent: Sdl.LanguagePlatform.TranslationMemory.PersistentObject
  isExternal: true
  name: ResourceId
  nameWithType: PersistentObject.ResourceId
  fullName: Sdl.LanguagePlatform.TranslationMemory.PersistentObject.ResourceId
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.#ctor
  isExternal: true
  name: Field
  nameWithType: Field.Field
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.Field
- uid: Sdl.LanguagePlatform.TranslationMemory.Field
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.Field
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Field
  nameWithType: Field
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldValueType
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldValueType
  nameWithType: FieldValueType
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.CheckName*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.CheckName
  isExternal: true
  name: CheckName
  nameWithType: Field.CheckName
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.CheckName
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.RemoveIllegalChars*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.RemoveIllegalChars
  isExternal: true
  name: RemoveIllegalChars
  nameWithType: Field.RemoveIllegalChars
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.RemoveIllegalChars
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.IsValidName*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.IsValidName
  isExternal: true
  name: IsValidName
  nameWithType: Field.IsValidName
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.IsValidName
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.LookupSpecialField*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.LookupSpecialField
  isExternal: true
  name: LookupSpecialField
  nameWithType: Field.LookupSpecialField
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.LookupSpecialField
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemFieldName*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemFieldName
  isExternal: true
  name: IsSystemFieldName
  nameWithType: Field.IsSystemFieldName
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemFieldName
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.IsPseudoFieldName*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.IsPseudoFieldName
  isExternal: true
  name: IsPseudoFieldName
  nameWithType: Field.IsPseudoFieldName
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.IsPseudoFieldName
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.IsReservedName*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.IsReservedName
  isExternal: true
  name: IsReservedName
  nameWithType: Field.IsReservedName
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.IsReservedName
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.GetFieldType*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.GetFieldType
  isExternal: true
  name: GetFieldType
  nameWithType: Field.GetFieldType
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.GetFieldType
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldType
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldType
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldType
  nameWithType: FieldType
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldType
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.Equals*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.Equals
  isExternal: true
  name: Equals
  nameWithType: Field.Equals
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.GetHashCode*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: Field.GetHashCode
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.EqualsDeclaration*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.EqualsDeclaration
  isExternal: true
  name: EqualsDeclaration
  nameWithType: Field.EqualsDeclaration
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.EqualsDeclaration
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.CreateValue*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.CreateValue
  isExternal: true
  name: CreateValue
  nameWithType: Field.CreateValue
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.CreateValue
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldValue
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldValue
  nameWithType: FieldValue
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.Clone*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.Clone
  isExternal: true
  name: Clone
  nameWithType: Field.Clone
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.Duplicate*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.Duplicate
  isExternal: true
  name: Duplicate
  nameWithType: Field.Duplicate
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.Duplicate
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.ValueType*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.ValueType
  isExternal: true
  name: ValueType
  nameWithType: Field.ValueType
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.ValueType
- uid: Sdl.LanguagePlatform.TranslationMemory.IField.ValueType
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.IField.ValueType
  parent: Sdl.LanguagePlatform.TranslationMemory.IField
  isExternal: true
  name: ValueType
  nameWithType: IField.ValueType
  fullName: Sdl.LanguagePlatform.TranslationMemory.IField.ValueType
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.PicklistItemNames*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.PicklistItemNames
  isExternal: true
  name: PicklistItemNames
  nameWithType: Field.PicklistItemNames
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.PicklistItemNames
- uid: Sdl.LanguagePlatform.TranslationMemory.IField.PicklistItemNames
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.IField.PicklistItemNames
  parent: Sdl.LanguagePlatform.TranslationMemory.IField
  isExternal: true
  name: PicklistItemNames
  nameWithType: IField.PicklistItemNames
  fullName: Sdl.LanguagePlatform.TranslationMemory.IField.PicklistItemNames
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.Name*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.Name
  isExternal: true
  name: Name
  nameWithType: Field.Name
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.Name
- uid: Sdl.LanguagePlatform.TranslationMemory.IField.Name
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.IField.Name
  parent: Sdl.LanguagePlatform.TranslationMemory.IField
  isExternal: true
  name: Name
  nameWithType: IField.Name
  fullName: Sdl.LanguagePlatform.TranslationMemory.IField.Name
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.FieldType*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.FieldType
  isExternal: true
  name: FieldType
  nameWithType: Field.FieldType
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.FieldType
- uid: Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemField*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemField
  isExternal: true
  name: IsSystemField
  nameWithType: Field.IsSystemField
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemField
