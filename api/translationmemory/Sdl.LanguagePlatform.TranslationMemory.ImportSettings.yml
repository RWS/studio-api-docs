### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  id: ImportSettings
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.#ctor
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AcronymsAutoSubstitution
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AlignmentQuality
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.CheckMatchingSublanguages
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ConfirmationLevels
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.DefaultTagCountLimit
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.EditScript
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ExistingFieldsUpdateMode
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ExistingTUsUpdateMode
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.FieldIdentifierMappings
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.Filter
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IncrementUsageCount
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.InvalidTranslationUnitsExportPath
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IsDocumentImport
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFields
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.OverrideTuUserIdWithCurrentContextUser
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.OverwriteExistingTUs
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.PlainText
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ProjectSettings
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.SegmentLengthLimit
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TagCountLimit
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TagNestingLimit
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TUProcessingMode
  - Sdl.LanguagePlatform.TranslationMemory.ImportSettings.UseTmUserIdFromBilingualFile
  langs:
  - csharp
  - vb
  name: ImportSettings
  nameWithType: ImportSettings
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nRepresents a group of settings which control the way the import is executed.\n"
  syntax:
    content: public class ImportSettings
    content.vb: Public Class ImportSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.DefaultTagCountLimit
  commentId: F:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.DefaultTagCountLimit
  id: DefaultTagCountLimit
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: DefaultTagCountLimit
  nameWithType: ImportSettings.DefaultTagCountLimit
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.DefaultTagCountLimit
  type: Field
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nThe default limit for the maximum number of tags a TU segment may contain.\n"
  syntax:
    content: public static readonly int DefaultTagCountLimit
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly DefaultTagCountLimit As Integer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: ImportSettings()
  nameWithType: ImportSettings.ImportSettings()
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ImportSettings()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance with default values.\n"
  syntax:
    content: public ImportSettings()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.OverrideTuUserIdWithCurrentContextUser
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.OverrideTuUserIdWithCurrentContextUser
  id: OverrideTuUserIdWithCurrentContextUser
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: OverrideTuUserIdWithCurrentContextUser
  nameWithType: ImportSettings.OverrideTuUserIdWithCurrentContextUser
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.OverrideTuUserIdWithCurrentContextUser
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the value that indicate if the TM importer will override the user id received from client.\n"
  syntax:
    content: public bool OverrideTuUserIdWithCurrentContextUser { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property OverrideTuUserIdWithCurrentContextUser As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.OverrideTuUserIdWithCurrentContextUser*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.SegmentLengthLimit
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.SegmentLengthLimit
  id: SegmentLengthLimit
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: SegmentLengthLimit
  nameWithType: ImportSettings.SegmentLengthLimit
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.SegmentLengthLimit
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the value that indicate if the TM importer will ignore TU with segments (Source or Target) with the length (number of characters) over specified limit.\n"
  syntax:
    content: public int? SegmentLengthLimit { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property SegmentLengthLimit As Integer?
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.SegmentLengthLimit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.UseTmUserIdFromBilingualFile
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.UseTmUserIdFromBilingualFile
  id: UseTmUserIdFromBilingualFile
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: UseTmUserIdFromBilingualFile
  nameWithType: ImportSettings.UseTmUserIdFromBilingualFile
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.UseTmUserIdFromBilingualFile
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the value indicating the location that is used for user id when importing TUs.\n"
  syntax:
    content: public bool UseTmUserIdFromBilingualFile { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseTmUserIdFromBilingualFile As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.UseTmUserIdFromBilingualFile*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFields
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFields
  id: NewFields
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: NewFields
  nameWithType: ImportSettings.NewFields
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFields
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the value indicating the new fields behavior.\n"
  syntax:
    content: public ImportSettings.NewFieldsOption NewFields { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFieldsOption
    content.vb: Public Property NewFields As ImportSettings.NewFieldsOption
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFields*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ExistingFieldsUpdateMode
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ExistingFieldsUpdateMode
  id: ExistingFieldsUpdateMode
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: ExistingFieldsUpdateMode
  nameWithType: ImportSettings.ExistingFieldsUpdateMode
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ExistingFieldsUpdateMode
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the value indicating how to handle values of existing fields.\n"
  syntax:
    content: public ImportSettings.FieldUpdateMode ExistingFieldsUpdateMode { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.FieldUpdateMode
    content.vb: Public Property ExistingFieldsUpdateMode As ImportSettings.FieldUpdateMode
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ExistingFieldsUpdateMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.OverwriteExistingTUs
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.OverwriteExistingTUs
  id: OverwriteExistingTUs
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: OverwriteExistingTUs
  nameWithType: ImportSettings.OverwriteExistingTUs
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.OverwriteExistingTUs
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets a flag indicating whether existing TUs (those with the same source\nsegment) should be deleted. Note that all such existing TUs will be deleted from\nthe TM before the new TU is being added. This effectively removes all potential\nduplicates in the target TM.\n"
  syntax:
    content: >-
      [Obsolete("OverwriteExistingTUS property is obsolete, please use ExistingTUsUpdateMode instead.")]

      public bool OverwriteExistingTUs { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("OverwriteExistingTUS property is obsolete, please use ExistingTUsUpdateMode instead.")>

      Public Property OverwriteExistingTUs As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.OverwriteExistingTUs*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OverwriteExistingTUS property is obsolete, please use ExistingTUsUpdateMode instead.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ExistingTUsUpdateMode
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ExistingTUsUpdateMode
  id: ExistingTUsUpdateMode
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: ExistingTUsUpdateMode
  nameWithType: ImportSettings.ExistingTUsUpdateMode
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ExistingTUsUpdateMode
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the value indicating how to update TU when a TU with the same source segment already exists in the TM\n"
  syntax:
    content: public ImportSettings.TUUpdateMode ExistingTUsUpdateMode { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TUUpdateMode
    content.vb: Public Property ExistingTUsUpdateMode As ImportSettings.TUUpdateMode
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ExistingTUsUpdateMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IsDocumentImport
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IsDocumentImport
  id: IsDocumentImport
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: IsDocumentImport
  nameWithType: ImportSettings.IsDocumentImport
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IsDocumentImport
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets whether this is a document import. If yes, contextual information will be saved into the translation memory.\n"
  syntax:
    content: public bool IsDocumentImport { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsDocumentImport As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IsDocumentImport*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.PlainText
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.PlainText
  id: PlainText
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: PlainText
  nameWithType: ImportSettings.PlainText
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.PlainText
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets whether the input is plain text or it may contains tags.\n"
  syntax:
    content: public bool PlainText { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PlainText As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.PlainText*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TagCountLimit
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TagCountLimit
  id: TagCountLimit
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: TagCountLimit
  nameWithType: ImportSettings.TagCountLimit
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TagCountLimit
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the limit for the number of tags any TU segment may contain in order to be \nimported. The default value is <xref href=\"Sdl.LanguagePlatform.TranslationMemory.ImportSettings.DefaultTagCountLimit\" data-throw-if-not-resolved=\"false\"></xref>. If the limit is\nexceeded, the TU will not be imported and an error will be generated.\n<p>If the value is 0, no limit will be applied.</p>\n"
  syntax:
    content: public int TagCountLimit { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TagCountLimit As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TagCountLimit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TagNestingLimit
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TagNestingLimit
  id: TagNestingLimit
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: TagNestingLimit
  nameWithType: ImportSettings.TagNestingLimit
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TagNestingLimit
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the limit for the number of nested tags any TU segment may contain in order to be \nimported. If the limit is exceeded, the TU will not be imported and an error will be generated.\n<p>If the value is null, no limit will be applied.</p>\n"
  syntax:
    content: public int? TagNestingLimit { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property TagNestingLimit As Integer?
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TagNestingLimit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IncrementUsageCount
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IncrementUsageCount
  id: IncrementUsageCount
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: IncrementUsageCount
  nameWithType: ImportSettings.IncrementUsageCount
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IncrementUsageCount
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets whether the usage count property of a translation unit should be modified upon use.\n"
  syntax:
    content: public bool IncrementUsageCount { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IncrementUsageCount As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IncrementUsageCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ProjectSettings
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ProjectSettings
  id: ProjectSettings
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: ProjectSettings
  nameWithType: ImportSettings.ProjectSettings
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ProjectSettings
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the project settings.\n"
  syntax:
    content: public FieldValues ProjectSettings { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValues
    content.vb: Public Property ProjectSettings As FieldValues
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ProjectSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.CheckMatchingSublanguages
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.CheckMatchingSublanguages
  id: CheckMatchingSublanguages
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: CheckMatchingSublanguages
  nameWithType: ImportSettings.CheckMatchingSublanguages
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.CheckMatchingSublanguages
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets whether the import should enforce that the sublanguages match.\n"
  syntax:
    content: public bool CheckMatchingSublanguages { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CheckMatchingSublanguages As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.CheckMatchingSublanguages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.Filter
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.Filter
  id: Filter
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: ImportSettings.Filter
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.Filter
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nAllows to access a filter to be used during import. If a filter is set, only matching translation units will be imported. \nNote that filters will not be evaluated during document imports.\n"
  syntax:
    content: public FilterExpression Filter { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
    content.vb: Public Property Filter As FilterExpression
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.Filter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.EditScript
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.EditScript
  id: EditScript
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: EditScript
  nameWithType: ImportSettings.EditScript
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.EditScript
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nAllows to perform edits during import. The edit script will be applied after the filter \nis applied (if present), but before the project settings are applied. \n"
  syntax:
    content: public EditScript EditScript { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript
    content.vb: Public Property EditScript As EditScript
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.EditScript*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.InvalidTranslationUnitsExportPath
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.InvalidTranslationUnitsExportPath
  id: InvalidTranslationUnitsExportPath
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: InvalidTranslationUnitsExportPath
  nameWithType: ImportSettings.InvalidTranslationUnitsExportPath
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.InvalidTranslationUnitsExportPath
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nIf non-null, invalid translation units (or those which produce import errors) \nwill be written to the specified output file.\n"
  syntax:
    content: public string InvalidTranslationUnitsExportPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InvalidTranslationUnitsExportPath As String
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.InvalidTranslationUnitsExportPath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ConfirmationLevels
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ConfirmationLevels
  id: ConfirmationLevels
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: ConfirmationLevels
  nameWithType: ImportSettings.ConfirmationLevels
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ConfirmationLevels
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the confirmation levels which TUs of a document import should have in order\nto be imported. When null or empty, all segments are imported. Note: TUs excluded\nby this also do not generate context for their neighbour(s) when the TM\ncontext type is <xref href=\"Sdl.LanguagePlatform.TranslationMemory.TextContextMatchType.PrecedingSourceAndTarget\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public ConfirmationLevel[] ConfirmationLevels { get; set; }
    parameters: []
    return:
      type: Sdl.Core.Globalization.ConfirmationLevel[]
    content.vb: Public Property ConfirmationLevels As ConfirmationLevel()
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ConfirmationLevels*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.FieldIdentifierMappings
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.FieldIdentifierMappings
  id: FieldIdentifierMappings
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: FieldIdentifierMappings
  nameWithType: ImportSettings.FieldIdentifierMappings
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.FieldIdentifierMappings
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the field identifier mappings; old field identifier, new field identifier. \nField identifier mapping immediately maps the field identifier read to another field identifier.\n"
  syntax:
    content: public IDictionary<FieldIdentifier, FieldIdentifier> FieldIdentifierMappings { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier,Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier}
    content.vb: Public Property FieldIdentifierMappings As IDictionary(Of FieldIdentifier, FieldIdentifier)
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.FieldIdentifierMappings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TUProcessingMode
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TUProcessingMode
  id: TUProcessingMode
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: TUProcessingMode
  nameWithType: ImportSettings.TUProcessingMode
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TUProcessingMode
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the TU Processing Mode to be applied to the import.\n"
  syntax:
    content: public ImportSettings.ImportTUProcessingMode TUProcessingMode { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ImportTUProcessingMode
    content.vb: Public Property TUProcessingMode As ImportSettings.ImportTUProcessingMode
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TUProcessingMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AcronymsAutoSubstitution
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AcronymsAutoSubstitution
  id: AcronymsAutoSubstitution
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: AcronymsAutoSubstitution
  nameWithType: ImportSettings.AcronymsAutoSubstitution
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AcronymsAutoSubstitution
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the TU Processing Mode to be applied to the import.\n"
  syntax:
    content: >-
      [Obsolete("This flag is now ignored. If Acronym recognizer is enabled for a TM, Acronym auto-substitution will always be enabled during import (just like other recognizers).")]

      public bool AcronymsAutoSubstitution { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("This flag is now ignored. If Acronym recognizer is enabled for a TM, Acronym auto-substitution will always be enabled during import (just like other recognizers).")>

      Public Property AcronymsAutoSubstitution As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AcronymsAutoSubstitution*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This flag is now ignored. If Acronym recognizer is enabled for a TM, Acronym auto-substitution will always be enabled during import (just like other recognizers).
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AlignmentQuality
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AlignmentQuality
  id: AlignmentQuality
  parent: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  langs:
  - csharp
  - vb
  name: AlignmentQuality
  nameWithType: ImportSettings.AlignmentQuality
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AlignmentQuality
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets/Sets the minimum import alignment quality value(default value: 70)\n"
  syntax:
    content: public int AlignmentQuality { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AlignmentQuality As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AlignmentQuality*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.#ctor
  isExternal: true
  name: ImportSettings
  nameWithType: ImportSettings.ImportSettings
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ImportSettings
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.OverrideTuUserIdWithCurrentContextUser*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.OverrideTuUserIdWithCurrentContextUser
  isExternal: true
  name: OverrideTuUserIdWithCurrentContextUser
  nameWithType: ImportSettings.OverrideTuUserIdWithCurrentContextUser
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.OverrideTuUserIdWithCurrentContextUser
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.SegmentLengthLimit*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.SegmentLengthLimit
  isExternal: true
  name: SegmentLengthLimit
  nameWithType: ImportSettings.SegmentLengthLimit
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.SegmentLengthLimit
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.UseTmUserIdFromBilingualFile*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.UseTmUserIdFromBilingualFile
  isExternal: true
  name: UseTmUserIdFromBilingualFile
  nameWithType: ImportSettings.UseTmUserIdFromBilingualFile
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.UseTmUserIdFromBilingualFile
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFields*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFields
  isExternal: true
  name: NewFields
  nameWithType: ImportSettings.NewFields
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFields
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFieldsOption
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFieldsOption
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: ImportSettings.NewFieldsOption
  nameWithType: ImportSettings.NewFieldsOption
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFieldsOption
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ExistingFieldsUpdateMode*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ExistingFieldsUpdateMode
  isExternal: true
  name: ExistingFieldsUpdateMode
  nameWithType: ImportSettings.ExistingFieldsUpdateMode
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ExistingFieldsUpdateMode
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.FieldUpdateMode
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.FieldUpdateMode
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: ImportSettings.FieldUpdateMode
  nameWithType: ImportSettings.FieldUpdateMode
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.FieldUpdateMode
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.OverwriteExistingTUs*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.OverwriteExistingTUs
  isExternal: true
  name: OverwriteExistingTUs
  nameWithType: ImportSettings.OverwriteExistingTUs
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.OverwriteExistingTUs
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ExistingTUsUpdateMode*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ExistingTUsUpdateMode
  isExternal: true
  name: ExistingTUsUpdateMode
  nameWithType: ImportSettings.ExistingTUsUpdateMode
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ExistingTUsUpdateMode
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TUUpdateMode
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TUUpdateMode
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: ImportSettings.TUUpdateMode
  nameWithType: ImportSettings.TUUpdateMode
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TUUpdateMode
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IsDocumentImport*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IsDocumentImport
  isExternal: true
  name: IsDocumentImport
  nameWithType: ImportSettings.IsDocumentImport
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IsDocumentImport
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.PlainText*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.PlainText
  isExternal: true
  name: PlainText
  nameWithType: ImportSettings.PlainText
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.PlainText
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TagCountLimit*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TagCountLimit
  isExternal: true
  name: TagCountLimit
  nameWithType: ImportSettings.TagCountLimit
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TagCountLimit
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TagNestingLimit*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TagNestingLimit
  isExternal: true
  name: TagNestingLimit
  nameWithType: ImportSettings.TagNestingLimit
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TagNestingLimit
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IncrementUsageCount*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IncrementUsageCount
  isExternal: true
  name: IncrementUsageCount
  nameWithType: ImportSettings.IncrementUsageCount
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IncrementUsageCount
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ProjectSettings*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ProjectSettings
  isExternal: true
  name: ProjectSettings
  nameWithType: ImportSettings.ProjectSettings
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ProjectSettings
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldValues
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldValues
  nameWithType: FieldValues
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.CheckMatchingSublanguages*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.CheckMatchingSublanguages
  isExternal: true
  name: CheckMatchingSublanguages
  nameWithType: ImportSettings.CheckMatchingSublanguages
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.CheckMatchingSublanguages
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.Filter*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.Filter
  isExternal: true
  name: Filter
  nameWithType: ImportSettings.Filter
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.Filter
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FilterExpression
  nameWithType: FilterExpression
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.EditScript*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.EditScript
  isExternal: true
  name: EditScript
  nameWithType: ImportSettings.EditScript
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.EditScript
- uid: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript
  parent: Sdl.LanguagePlatform.TranslationMemory.EditScripts
  isExternal: true
  name: EditScript
  nameWithType: EditScript
  fullName: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript
- uid: Sdl.LanguagePlatform.TranslationMemory.EditScripts
  commentId: N:Sdl.LanguagePlatform.TranslationMemory.EditScripts
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory.EditScripts
  nameWithType: Sdl.LanguagePlatform.TranslationMemory.EditScripts
  fullName: Sdl.LanguagePlatform.TranslationMemory.EditScripts
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.InvalidTranslationUnitsExportPath*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.InvalidTranslationUnitsExportPath
  isExternal: true
  name: InvalidTranslationUnitsExportPath
  nameWithType: ImportSettings.InvalidTranslationUnitsExportPath
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.InvalidTranslationUnitsExportPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ConfirmationLevels*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ConfirmationLevels
  isExternal: true
  name: ConfirmationLevels
  nameWithType: ImportSettings.ConfirmationLevels
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ConfirmationLevels
- uid: Sdl.Core.Globalization.ConfirmationLevel[]
  isExternal: true
  name: ConfirmationLevel[]
  nameWithType: ConfirmationLevel[]
  fullName: Sdl.Core.Globalization.ConfirmationLevel[]
  nameWithType.vb: ConfirmationLevel()
  fullName.vb: Sdl.Core.Globalization.ConfirmationLevel()
  name.vb: ConfirmationLevel()
  spec.csharp:
  - uid: Sdl.Core.Globalization.ConfirmationLevel
    name: ConfirmationLevel
    nameWithType: ConfirmationLevel
    fullName: Sdl.Core.Globalization.ConfirmationLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.Core.Globalization.ConfirmationLevel
    name: ConfirmationLevel
    nameWithType: ConfirmationLevel
    fullName: Sdl.Core.Globalization.ConfirmationLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.FieldIdentifierMappings*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.FieldIdentifierMappings
  isExternal: true
  name: FieldIdentifierMappings
  nameWithType: ImportSettings.FieldIdentifierMappings
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.FieldIdentifierMappings
- uid: System.Collections.Generic.IDictionary{Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier,Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier}
  commentId: T:System.Collections.Generic.IDictionary{Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier,Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<FieldIdentifier, FieldIdentifier>
  nameWithType: IDictionary<FieldIdentifier, FieldIdentifier>
  fullName: System.Collections.Generic.IDictionary<Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier, Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier>
  nameWithType.vb: IDictionary(Of FieldIdentifier, FieldIdentifier)
  fullName.vb: System.Collections.Generic.IDictionary(Of Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier, Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier)
  name.vb: IDictionary(Of FieldIdentifier, FieldIdentifier)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier
    name: FieldIdentifier
    nameWithType: FieldIdentifier
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier
    name: FieldIdentifier
    nameWithType: FieldIdentifier
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier
    name: FieldIdentifier
    nameWithType: FieldIdentifier
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier
    name: FieldIdentifier
    nameWithType: FieldIdentifier
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TUProcessingMode*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TUProcessingMode
  isExternal: true
  name: TUProcessingMode
  nameWithType: ImportSettings.TUProcessingMode
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TUProcessingMode
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ImportTUProcessingMode
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ImportTUProcessingMode
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: ImportSettings.ImportTUProcessingMode
  nameWithType: ImportSettings.ImportTUProcessingMode
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ImportTUProcessingMode
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AcronymsAutoSubstitution*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AcronymsAutoSubstitution
  isExternal: true
  name: AcronymsAutoSubstitution
  nameWithType: ImportSettings.AcronymsAutoSubstitution
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AcronymsAutoSubstitution
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AlignmentQuality*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AlignmentQuality
  isExternal: true
  name: AlignmentQuality
  nameWithType: ImportSettings.AlignmentQuality
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AlignmentQuality
