### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.Placeable
  id: Placeable
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor(Sdl.LanguagePlatform.TranslationMemory.PlaceableType,System.Int32,System.Int32)
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals(System.Object)
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.GetHashCode
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTag
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTagCompatible(Sdl.LanguagePlatform.Core.TagType)
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.SourceTokenIndex
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.TargetTokenIndex
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.Type
  langs:
  - csharp
  - vb
  name: Placeable
  nameWithType: Placeable
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable
  type: Class
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: >-
    A placeable is a combination of a source token index together with a target token index. Either

    index can be -1, indicating that no corresponding token pair exists (or no appropriate segment

    was available). Not both of the indices should be -1.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Placeable
    content.vb: >-
      <DataContract>

      Public Class Placeable
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: Placeable()
  nameWithType: Placeable.Placeable()
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.Placeable()
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: Initializes a new instance with default values.
  example: []
  syntax:
    content: public Placeable()
    content.vb: Public Sub New()
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor*
  nameWithType.vb: Placeable.New()
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.Placeable.New()
  name.vb: New()
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor(Sdl.LanguagePlatform.TranslationMemory.PlaceableType,System.Int32,System.Int32)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor(Sdl.LanguagePlatform.TranslationMemory.PlaceableType,System.Int32,System.Int32)
  id: '#ctor(Sdl.LanguagePlatform.TranslationMemory.PlaceableType,System.Int32,System.Int32)'
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: Placeable(PlaceableType, int, int)
  nameWithType: Placeable.Placeable(PlaceableType, int, int)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.Placeable(Sdl.LanguagePlatform.TranslationMemory.PlaceableType, int, int)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: Initializes a new instance with the specified parameters.
  example: []
  syntax:
    content: public Placeable(PlaceableType t, int sourceTokenIndex, int targetTokenIndex)
    parameters:
    - id: t
      type: Sdl.LanguagePlatform.TranslationMemory.PlaceableType
      description: The placeable type.
    - id: sourceTokenIndex
      type: System.Int32
      description: >-
        The index of the token in the source segment. <code>-1</code> indicates
                    that the token is not present in that segment.
    - id: targetTokenIndex
      type: System.Int32
      description: >-
        The index of the token in the target segment. <code>-1</code> indicates
                    that the token is not present in that segment
    content.vb: Public Sub New(t As PlaceableType, sourceTokenIndex As Integer, targetTokenIndex As Integer)
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor*
  nameWithType.vb: Placeable.New(PlaceableType, Integer, Integer)
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.Placeable.New(Sdl.LanguagePlatform.TranslationMemory.PlaceableType, Integer, Integer)
  name.vb: New(PlaceableType, Integer, Integer)
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals(System.Object)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Placeable.Equals(object)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals(object)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: <xref href="System.Object.Equals(object)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: >-
        true if the specified object is equal to the current object;
                    otherwise, false.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals*
  nameWithType.vb: Placeable.Equals(Object)
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals(Object)
  name.vb: Equals(Object)
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.GetHashCode
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Placeable.GetHashCode
  id: GetHashCode
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Placeable.GetHashCode()
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.GetHashCode()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: <xref href="System.Object.GetHashCode(object)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.GetHashCode*
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTagCompatible(Sdl.LanguagePlatform.Core.TagType)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTagCompatible(Sdl.LanguagePlatform.Core.TagType)
  id: IsTagCompatible(Sdl.LanguagePlatform.Core.TagType)
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: IsTagCompatible(TagType)
  nameWithType: Placeable.IsTagCompatible(TagType)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTagCompatible(Sdl.LanguagePlatform.Core.TagType)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: >-
    Determines whether the placeable's type is compatible with the specified tag type. The 

    result is always false for non-tag placeables.
  example: []
  syntax:
    content: public bool IsTagCompatible(TagType tagType)
    parameters:
    - id: tagType
      type: Sdl.LanguagePlatform.Core.TagType
      description: The type of the tag to check
    return:
      type: System.Boolean
      description: >-
        true if the placeable's type is compatible with the specified tag type, and
                    false otherwise.
    content.vb: Public Function IsTagCompatible(tagType As TagType) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTagCompatible*
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.SourceTokenIndex
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.Placeable.SourceTokenIndex
  id: SourceTokenIndex
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: SourceTokenIndex
  nameWithType: Placeable.SourceTokenIndex
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.SourceTokenIndex
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: >-
    Gets or sets the source-segment token index for the placeable. That index may be -1, 

    indicating that there is no source segment (rare) or no token in the source segment 

    is linked to the target token.
  example: []
  syntax:
    content: >-
      [DataMember]

      public int SourceTokenIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property SourceTokenIndex As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.SourceTokenIndex*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.TargetTokenIndex
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.Placeable.TargetTokenIndex
  id: TargetTokenIndex
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: TargetTokenIndex
  nameWithType: Placeable.TargetTokenIndex
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.TargetTokenIndex
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: >-
    Gets or sets the target-segment token index for the placeable. That index may be -1, 

    indicating that there is no target segment or no token in the target segment 

    is linked to the source token.
  example: []
  syntax:
    content: >-
      [DataMember]

      public int TargetTokenIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property TargetTokenIndex As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.TargetTokenIndex*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.Type
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.Placeable.Type
  id: Type
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Placeable.Type
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.Type
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: Gets or sets the placeable type.
  example: []
  syntax:
    content: >-
      [DataMember]

      public PlaceableType Type { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.PlaceableType
    content.vb: >-
      <DataMember>

      Public Property Type As PlaceableType
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.Type*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTag
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTag
  id: IsTag
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: IsTag
  nameWithType: Placeable.IsTag
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTag
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: Gets a flag which indicates whether this placeable is a tag.
  example: []
  syntax:
    content: public bool IsTag { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTag As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTag*
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  href: Sdl.html
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.TranslationMemory
    name: TranslationMemory
    isExternal: true
    href: Sdl.LanguagePlatform.TranslationMemory.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.TranslationMemory
    name: TranslationMemory
    isExternal: true
    href: Sdl.LanguagePlatform.TranslationMemory.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.Placeable.html#Sdl_LanguagePlatform_TranslationMemory_Placeable__ctor
  name: Placeable
  nameWithType: Placeable.Placeable
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.Placeable
  nameWithType.vb: Placeable.New
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.Placeable.New
  name.vb: New
- uid: Sdl.LanguagePlatform.TranslationMemory.PlaceableType
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.PlaceableType
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.PlaceableType.html
  name: PlaceableType
  nameWithType: PlaceableType
  fullName: Sdl.LanguagePlatform.TranslationMemory.PlaceableType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Object.Equals(object)
  commentId: M:System.Object.Equals(object)
  isExternal: true
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.Placeable.html#Sdl_LanguagePlatform_TranslationMemory_Placeable_Equals_System_Object_
  name: Equals
  nameWithType: Placeable.Equals
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Object.GetHashCode(object)
  commentId: M:System.Object.GetHashCode(object)
  isExternal: true
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.GetHashCode*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Placeable.GetHashCode
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.Placeable.html#Sdl_LanguagePlatform_TranslationMemory_Placeable_GetHashCode
  name: GetHashCode
  nameWithType: Placeable.GetHashCode
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.GetHashCode
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTagCompatible*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTagCompatible
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.Placeable.html#Sdl_LanguagePlatform_TranslationMemory_Placeable_IsTagCompatible_Sdl_LanguagePlatform_Core_TagType_
  name: IsTagCompatible
  nameWithType: Placeable.IsTagCompatible
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTagCompatible
- uid: Sdl.LanguagePlatform.Core.TagType
  commentId: T:Sdl.LanguagePlatform.Core.TagType
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  href: Sdl.LanguagePlatform.Core.TagType.html
  name: TagType
  nameWithType: TagType
  fullName: Sdl.LanguagePlatform.Core.TagType
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  href: Sdl.html
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.SourceTokenIndex*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Placeable.SourceTokenIndex
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.Placeable.html#Sdl_LanguagePlatform_TranslationMemory_Placeable_SourceTokenIndex
  name: SourceTokenIndex
  nameWithType: Placeable.SourceTokenIndex
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.SourceTokenIndex
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.TargetTokenIndex*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Placeable.TargetTokenIndex
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.Placeable.html#Sdl_LanguagePlatform_TranslationMemory_Placeable_TargetTokenIndex
  name: TargetTokenIndex
  nameWithType: Placeable.TargetTokenIndex
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.TargetTokenIndex
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.Type*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Placeable.Type
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.Placeable.html#Sdl_LanguagePlatform_TranslationMemory_Placeable_Type
  name: Type
  nameWithType: Placeable.Type
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.Type
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTag*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTag
  isExternal: true
  href: Sdl.LanguagePlatform.TranslationMemory.Placeable.html#Sdl_LanguagePlatform_TranslationMemory_Placeable_IsTag
  name: IsTag
  nameWithType: Placeable.IsTag
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTag
