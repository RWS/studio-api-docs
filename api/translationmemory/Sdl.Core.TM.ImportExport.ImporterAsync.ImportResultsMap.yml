### YamlMime:ManagedReference
items:
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap
  commentId: T:Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap
  id: ImporterAsync.ImportResultsMap
  parent: Sdl.Core.TM.ImportExport
  children:
  - Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.#ctor
  - Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.AddedTuIds
  - Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.MergedTuIds
  - Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.OverwrittenTuIds
  langs:
  - csharp
  - vb
  name: ImporterAsync.ImportResultsMap
  nameWithType: ImporterAsync.ImportResultsMap
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap
  type: Class
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: "\n\n"
  syntax:
    content: protected class ImportResultsMap
    content.vb: Protected Class ImportResultsMap
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.#ctor
  commentId: M:Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.#ctor
  id: '#ctor'
  parent: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap
  langs:
  - csharp
  - vb
  name: ImportResultsMap()
  nameWithType: ImporterAsync.ImportResultsMap.ImportResultsMap()
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.ImportResultsMap()
  type: Constructor
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public ImportResultsMap()
    content.vb: Public Sub New
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.MergedTuIds
  commentId: P:Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.MergedTuIds
  id: MergedTuIds
  parent: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap
  langs:
  - csharp
  - vb
  name: MergedTuIds
  nameWithType: ImporterAsync.ImportResultsMap.MergedTuIds
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.MergedTuIds
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: "\n\n"
  syntax:
    content: public HashSet<int> MergedTuIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.Int32}
    content.vb: Public Property MergedTuIds As HashSet(Of Integer)
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.MergedTuIds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.AddedTuIds
  commentId: P:Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.AddedTuIds
  id: AddedTuIds
  parent: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap
  langs:
  - csharp
  - vb
  name: AddedTuIds
  nameWithType: ImporterAsync.ImportResultsMap.AddedTuIds
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.AddedTuIds
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: "\n\n"
  syntax:
    content: public HashSet<int> AddedTuIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.Int32}
    content.vb: Public Property AddedTuIds As HashSet(Of Integer)
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.AddedTuIds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.OverwrittenTuIds
  commentId: P:Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.OverwrittenTuIds
  id: OverwrittenTuIds
  parent: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap
  langs:
  - csharp
  - vb
  name: OverwrittenTuIds
  nameWithType: ImporterAsync.ImportResultsMap.OverwrittenTuIds
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.OverwrittenTuIds
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: "\n\n"
  syntax:
    content: public HashSet<int> OverwrittenTuIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.Int32}
    content.vb: Public Property OverwrittenTuIds As HashSet(Of Integer)
  overload: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.OverwrittenTuIds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.Core.TM.ImportExport
  commentId: N:Sdl.Core.TM.ImportExport
  isExternal: true
  name: Sdl.Core.TM.ImportExport
  nameWithType: Sdl.Core.TM.ImportExport
  fullName: Sdl.Core.TM.ImportExport
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.#ctor*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.#ctor
  isExternal: true
  name: ImportResultsMap
  nameWithType: ImporterAsync.ImportResultsMap.ImportResultsMap
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.ImportResultsMap
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.MergedTuIds*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.MergedTuIds
  isExternal: true
  name: MergedTuIds
  nameWithType: ImporterAsync.ImportResultsMap.MergedTuIds
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.MergedTuIds
- uid: System.Collections.Generic.HashSet{System.Int32}
  commentId: '!:System.Collections.Generic.HashSet{System.Int32}'
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<Int32>
  nameWithType: HashSet<Int32>
  fullName: System.Collections.Generic.HashSet<System.Int32>
  nameWithType.vb: HashSet(Of Int32)
  fullName.vb: System.Collections.Generic.HashSet(Of System.Int32)
  name.vb: HashSet(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<>
  nameWithType: HashSet<>
  fullName: System.Collections.Generic.HashSet<>
  nameWithType.vb: HashSet(Of )
  fullName.vb: System.Collections.Generic.HashSet(Of )
  name.vb: HashSet(Of )
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.AddedTuIds*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.AddedTuIds
  isExternal: true
  name: AddedTuIds
  nameWithType: ImporterAsync.ImportResultsMap.AddedTuIds
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.AddedTuIds
- uid: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.OverwrittenTuIds*
  commentId: Overload:Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.OverwrittenTuIds
  isExternal: true
  name: OverwrittenTuIds
  nameWithType: ImporterAsync.ImportResultsMap.OverwrittenTuIds
  fullName: Sdl.Core.TM.ImportExport.ImporterAsync.ImportResultsMap.OverwrittenTuIds
