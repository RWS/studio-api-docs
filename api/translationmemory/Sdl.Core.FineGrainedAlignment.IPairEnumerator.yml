### YamlMime:ManagedReference
items:
- uid: Sdl.Core.FineGrainedAlignment.IPairEnumerator
  commentId: T:Sdl.Core.FineGrainedAlignment.IPairEnumerator
  id: IPairEnumerator
  parent: Sdl.Core.FineGrainedAlignment
  children:
  - Sdl.Core.FineGrainedAlignment.IPairEnumerator.Current
  - Sdl.Core.FineGrainedAlignment.IPairEnumerator.MoveNextAsync
  langs:
  - csharp
  - vb
  name: IPairEnumerator
  nameWithType: IPairEnumerator
  fullName: Sdl.Core.FineGrainedAlignment.IPairEnumerator
  type: Interface
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public interface IPairEnumerator
    content.vb: Public Interface IPairEnumerator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Core.FineGrainedAlignment.IPairEnumerator.MoveNextAsync
  commentId: M:Sdl.Core.FineGrainedAlignment.IPairEnumerator.MoveNextAsync
  id: MoveNextAsync
  parent: Sdl.Core.FineGrainedAlignment.IPairEnumerator
  langs:
  - csharp
  - vb
  name: MoveNextAsync()
  nameWithType: IPairEnumerator.MoveNextAsync()
  fullName: Sdl.Core.FineGrainedAlignment.IPairEnumerator.MoveNextAsync()
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: Task<bool> MoveNextAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function MoveNextAsync As Task(Of Boolean)
  overload: Sdl.Core.FineGrainedAlignment.IPairEnumerator.MoveNextAsync*
- uid: Sdl.Core.FineGrainedAlignment.IPairEnumerator.Current
  commentId: P:Sdl.Core.FineGrainedAlignment.IPairEnumerator.Current
  id: Current
  parent: Sdl.Core.FineGrainedAlignment.IPairEnumerator
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: IPairEnumerator.Current
  fullName: Sdl.Core.FineGrainedAlignment.IPairEnumerator.Current
  type: Property
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: IAlignableContentPair Current { get; }
    parameters: []
    return:
      type: Sdl.Core.FineGrainedAlignment.IAlignableContentPair
    content.vb: ReadOnly Property Current As IAlignableContentPair
  overload: Sdl.Core.FineGrainedAlignment.IPairEnumerator.Current*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.Core.FineGrainedAlignment
  commentId: N:Sdl.Core.FineGrainedAlignment
  isExternal: true
  name: Sdl.Core.FineGrainedAlignment
  nameWithType: Sdl.Core.FineGrainedAlignment
  fullName: Sdl.Core.FineGrainedAlignment
- uid: Sdl.Core.FineGrainedAlignment.IPairEnumerator.MoveNextAsync*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IPairEnumerator.MoveNextAsync
  isExternal: true
  name: MoveNextAsync
  nameWithType: IPairEnumerator.MoveNextAsync
  fullName: Sdl.Core.FineGrainedAlignment.IPairEnumerator.MoveNextAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Sdl.Core.FineGrainedAlignment.IPairEnumerator.Current*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IPairEnumerator.Current
  isExternal: true
  name: Current
  nameWithType: IPairEnumerator.Current
  fullName: Sdl.Core.FineGrainedAlignment.IPairEnumerator.Current
- uid: Sdl.Core.FineGrainedAlignment.IAlignableContentPair
  commentId: T:Sdl.Core.FineGrainedAlignment.IAlignableContentPair
  parent: Sdl.Core.FineGrainedAlignment
  isExternal: true
  name: IAlignableContentPair
  nameWithType: IAlignableContentPair
  fullName: Sdl.Core.FineGrainedAlignment.IAlignableContentPair
