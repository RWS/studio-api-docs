### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil
  id: TranslationMemoryUpgradeUtil
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.#ctor
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.FineGrainedAlignmentSupportRecommended(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresAlignment(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresModelRebuild(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresReindex(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgrade(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgradeOrFGASupportRecommended(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryWillRequireReindexAfterUpgrade(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryWithAsianLanguageRequiresUpgrade(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.UpgradeTranslationMemory(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.UseCharacterCounts(Sdl.Core.Globalization.CultureCode)
  langs:
  - csharp
  - vb
  name: TranslationMemoryUpgradeUtil
  nameWithType: TranslationMemoryUpgradeUtil
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nUtility class for upgrading file-based translation memories and \nchecking if they need maintenance\n"
  syntax:
    content: public class TranslationMemoryUpgradeUtil
    content.vb: Public Class TranslationMemoryUpgradeUtil
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresModelRebuild(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresModelRebuild(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  id: TranslationMemoryRequiresModelRebuild(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil
  langs:
  - csharp
  - vb
  name: TranslationMemoryRequiresModelRebuild(ITranslationProvider)
  nameWithType: TranslationMemoryUpgradeUtil.TranslationMemoryRequiresModelRebuild(ITranslationProvider)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresModelRebuild(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nDetermines if TM requires model rebuild\n"
  syntax:
    content: public static bool TranslationMemoryRequiresModelRebuild(ITranslationProvider translationMemory)
    parameters:
    - id: translationMemory
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
    return:
      type: System.Boolean
    content.vb: Public Shared Function TranslationMemoryRequiresModelRebuild(translationMemory As ITranslationProvider) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresModelRebuild*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresAlignment(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresAlignment(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  id: TranslationMemoryRequiresAlignment(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil
  langs:
  - csharp
  - vb
  name: TranslationMemoryRequiresAlignment(ITranslationProvider)
  nameWithType: TranslationMemoryUpgradeUtil.TranslationMemoryRequiresAlignment(ITranslationProvider)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresAlignment(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nDetermine if TM has content that should be aligned (FGA)\n"
  syntax:
    content: public static bool TranslationMemoryRequiresAlignment(ITranslationProvider translationMemory)
    parameters:
    - id: translationMemory
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
    return:
      type: System.Boolean
    content.vb: Public Shared Function TranslationMemoryRequiresAlignment(translationMemory As ITranslationProvider) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresAlignment*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresReindex(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresReindex(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  id: TranslationMemoryRequiresReindex(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil
  langs:
  - csharp
  - vb
  name: TranslationMemoryRequiresReindex(ITranslationProvider)
  nameWithType: TranslationMemoryUpgradeUtil.TranslationMemoryRequiresReindex(ITranslationProvider)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresReindex(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nDetermine if TM is indicating it has content that needs reindexing\n"
  syntax:
    content: public static bool TranslationMemoryRequiresReindex(ITranslationProvider translationMemory)
    parameters:
    - id: translationMemory
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
    return:
      type: System.Boolean
    content.vb: Public Shared Function TranslationMemoryRequiresReindex(translationMemory As ITranslationProvider) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresReindex*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgrade(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgrade(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  id: TranslationMemoryRequiresUpgrade(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil
  langs:
  - csharp
  - vb
  name: TranslationMemoryRequiresUpgrade(ITranslationProvider)
  nameWithType: TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgrade(ITranslationProvider)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgrade(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nDetermine if the TM requires upgrade\n"
  syntax:
    content: public static bool TranslationMemoryRequiresUpgrade(ITranslationProvider translationMemory)
    parameters:
    - id: translationMemory
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
    return:
      type: System.Boolean
    content.vb: Public Shared Function TranslationMemoryRequiresUpgrade(translationMemory As ITranslationProvider) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgrade*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryWillRequireReindexAfterUpgrade(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryWillRequireReindexAfterUpgrade(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  id: TranslationMemoryWillRequireReindexAfterUpgrade(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil
  langs:
  - csharp
  - vb
  name: TranslationMemoryWillRequireReindexAfterUpgrade(ITranslationMemory)
  nameWithType: TranslationMemoryUpgradeUtil.TranslationMemoryWillRequireReindexAfterUpgrade(ITranslationMemory)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryWillRequireReindexAfterUpgrade(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nDetermine if the TM will require a reindex after upgrade\n"
  syntax:
    content: public static bool TranslationMemoryWillRequireReindexAfterUpgrade(ITranslationMemory translationMemory)
    parameters:
    - id: translationMemory
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory
    return:
      type: System.Boolean
    content.vb: Public Shared Function TranslationMemoryWillRequireReindexAfterUpgrade(translationMemory As ITranslationMemory) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryWillRequireReindexAfterUpgrade*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryWithAsianLanguageRequiresUpgrade(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryWithAsianLanguageRequiresUpgrade(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  id: TranslationMemoryWithAsianLanguageRequiresUpgrade(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil
  langs:
  - csharp
  - vb
  name: TranslationMemoryWithAsianLanguageRequiresUpgrade(ITranslationMemory)
  nameWithType: TranslationMemoryUpgradeUtil.TranslationMemoryWithAsianLanguageRequiresUpgrade(ITranslationMemory)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryWithAsianLanguageRequiresUpgrade(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nDetermine if the TM requires an upgrade with an Asian source language\n"
  syntax:
    content: public static bool TranslationMemoryWithAsianLanguageRequiresUpgrade(ITranslationMemory translationMemory)
    parameters:
    - id: translationMemory
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory
    return:
      type: System.Boolean
    content.vb: Public Shared Function TranslationMemoryWithAsianLanguageRequiresUpgrade(translationMemory As ITranslationMemory) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryWithAsianLanguageRequiresUpgrade*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.UpgradeTranslationMemory(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.UpgradeTranslationMemory(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  id: UpgradeTranslationMemory(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil
  langs:
  - csharp
  - vb
  name: UpgradeTranslationMemory(ITranslationMemory)
  nameWithType: TranslationMemoryUpgradeUtil.UpgradeTranslationMemory(ITranslationMemory)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.UpgradeTranslationMemory(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nModifies the translation memory settings so as to prompt in-place upgrade when saved\n"
  syntax:
    content: public static void UpgradeTranslationMemory(ITranslationMemory translationMemory)
    parameters:
    - id: translationMemory
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory
    content.vb: Public Shared Sub UpgradeTranslationMemory(translationMemory As ITranslationMemory)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.UpgradeTranslationMemory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgradeOrFGASupportRecommended(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgradeOrFGASupportRecommended(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  id: TranslationMemoryRequiresUpgradeOrFGASupportRecommended(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil
  langs:
  - csharp
  - vb
  name: TranslationMemoryRequiresUpgradeOrFGASupportRecommended(ITranslationProvider)
  nameWithType: TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgradeOrFGASupportRecommended(ITranslationProvider)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgradeOrFGASupportRecommended(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nDetermine if the TM requires upgrade or FGA support is recommended\n"
  syntax:
    content: public static bool TranslationMemoryRequiresUpgradeOrFGASupportRecommended(ITranslationProvider translationMemory)
    parameters:
    - id: translationMemory
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
    return:
      type: System.Boolean
    content.vb: Public Shared Function TranslationMemoryRequiresUpgradeOrFGASupportRecommended(translationMemory As ITranslationProvider) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgradeOrFGASupportRecommended*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.FineGrainedAlignmentSupportRecommended(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.FineGrainedAlignmentSupportRecommended(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  id: FineGrainedAlignmentSupportRecommended(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil
  langs:
  - csharp
  - vb
  name: FineGrainedAlignmentSupportRecommended(ITranslationMemory)
  nameWithType: TranslationMemoryUpgradeUtil.FineGrainedAlignmentSupportRecommended(ITranslationMemory)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.FineGrainedAlignmentSupportRecommended(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nDetermine if file grained alingment (FGA) support is recommended\n"
  syntax:
    content: public static bool FineGrainedAlignmentSupportRecommended(ITranslationMemory translationMemory)
    parameters:
    - id: translationMemory
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory
    return:
      type: System.Boolean
    content.vb: Public Shared Function FineGrainedAlignmentSupportRecommended(translationMemory As ITranslationMemory) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.FineGrainedAlignmentSupportRecommended*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.UseCharacterCounts(Sdl.Core.Globalization.CultureCode)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.UseCharacterCounts(Sdl.Core.Globalization.CultureCode)
  id: UseCharacterCounts(Sdl.Core.Globalization.CultureCode)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil
  langs:
  - csharp
  - vb
  name: UseCharacterCounts(CultureCode)
  nameWithType: TranslationMemoryUpgradeUtil.UseCharacterCounts(CultureCode)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.UseCharacterCounts(Sdl.Core.Globalization.CultureCode)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nDiferentiate between Asian/non Asian source culture\n"
  syntax:
    content: public static bool UseCharacterCounts(CultureCode cultureCode)
    parameters:
    - id: cultureCode
      type: Sdl.Core.Globalization.CultureCode
    return:
      type: System.Boolean
    content.vb: Public Shared Function UseCharacterCounts(cultureCode As CultureCode) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.UseCharacterCounts*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil
  langs:
  - csharp
  - vb
  name: TranslationMemoryUpgradeUtil()
  nameWithType: TranslationMemoryUpgradeUtil.TranslationMemoryUpgradeUtil()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryUpgradeUtil()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  syntax:
    content: public TranslationMemoryUpgradeUtil()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresModelRebuild*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresModelRebuild
  isExternal: true
  name: TranslationMemoryRequiresModelRebuild
  nameWithType: TranslationMemoryUpgradeUtil.TranslationMemoryRequiresModelRebuild
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresModelRebuild
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: ITranslationProvider
  nameWithType: ITranslationProvider
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresAlignment*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresAlignment
  isExternal: true
  name: TranslationMemoryRequiresAlignment
  nameWithType: TranslationMemoryUpgradeUtil.TranslationMemoryRequiresAlignment
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresAlignment
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresReindex*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresReindex
  isExternal: true
  name: TranslationMemoryRequiresReindex
  nameWithType: TranslationMemoryUpgradeUtil.TranslationMemoryRequiresReindex
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresReindex
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgrade*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgrade
  isExternal: true
  name: TranslationMemoryRequiresUpgrade
  nameWithType: TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgrade
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgrade
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryWillRequireReindexAfterUpgrade*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryWillRequireReindexAfterUpgrade
  isExternal: true
  name: TranslationMemoryWillRequireReindexAfterUpgrade
  nameWithType: TranslationMemoryUpgradeUtil.TranslationMemoryWillRequireReindexAfterUpgrade
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryWillRequireReindexAfterUpgrade
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: ITranslationMemory
  nameWithType: ITranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryWithAsianLanguageRequiresUpgrade*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryWithAsianLanguageRequiresUpgrade
  isExternal: true
  name: TranslationMemoryWithAsianLanguageRequiresUpgrade
  nameWithType: TranslationMemoryUpgradeUtil.TranslationMemoryWithAsianLanguageRequiresUpgrade
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryWithAsianLanguageRequiresUpgrade
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.UpgradeTranslationMemory*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.UpgradeTranslationMemory
  isExternal: true
  name: UpgradeTranslationMemory
  nameWithType: TranslationMemoryUpgradeUtil.UpgradeTranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.UpgradeTranslationMemory
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgradeOrFGASupportRecommended*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgradeOrFGASupportRecommended
  isExternal: true
  name: TranslationMemoryRequiresUpgradeOrFGASupportRecommended
  nameWithType: TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgradeOrFGASupportRecommended
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryRequiresUpgradeOrFGASupportRecommended
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.FineGrainedAlignmentSupportRecommended*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.FineGrainedAlignmentSupportRecommended
  isExternal: true
  name: FineGrainedAlignmentSupportRecommended
  nameWithType: TranslationMemoryUpgradeUtil.FineGrainedAlignmentSupportRecommended
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.FineGrainedAlignmentSupportRecommended
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.UseCharacterCounts*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.UseCharacterCounts
  isExternal: true
  name: UseCharacterCounts
  nameWithType: TranslationMemoryUpgradeUtil.UseCharacterCounts
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.UseCharacterCounts
- uid: Sdl.Core.Globalization.CultureCode
  isExternal: true
  name: CultureCode
  nameWithType: CultureCode
  fullName: Sdl.Core.Globalization.CultureCode
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.#ctor
  isExternal: true
  name: TranslationMemoryUpgradeUtil
  nameWithType: TranslationMemoryUpgradeUtil.TranslationMemoryUpgradeUtil
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryUpgradeUtil.TranslationMemoryUpgradeUtil
