### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression
  id: ComposedExpression
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.#ctor(Sdl.LanguagePlatform.TranslationMemory.FilterExpression,Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Operator,Sdl.LanguagePlatform.TranslationMemory.FilterExpression)
  - Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Evaluate(Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer)
  - Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.LeftOperand
  - Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Op
  - Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.RightOperand
  - Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.ToString
  - Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)
  langs:
  - csharp
  - vb
  name: ComposedExpression
  nameWithType: ComposedExpression
  fullName: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nRepresents a boolean composed expression.\n<remarks>The operator can be AND, OR and NOT and the operands can be either atomic expressions or other composed expressions.</remarks>\n"
  syntax:
    content: 'public class ComposedExpression : FilterExpression'
    content.vb: >-
      Public Class ComposedExpression
          Inherits FilterExpression
  inheritance:
  - System.Object
  - Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.#ctor(Sdl.LanguagePlatform.TranslationMemory.FilterExpression,Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Operator,Sdl.LanguagePlatform.TranslationMemory.FilterExpression)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.#ctor(Sdl.LanguagePlatform.TranslationMemory.FilterExpression,Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Operator,Sdl.LanguagePlatform.TranslationMemory.FilterExpression)
  id: '#ctor(Sdl.LanguagePlatform.TranslationMemory.FilterExpression,Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Operator,Sdl.LanguagePlatform.TranslationMemory.FilterExpression)'
  parent: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression
  langs:
  - csharp
  - vb
  name: ComposedExpression(FilterExpression, ComposedExpression.Operator, FilterExpression)
  nameWithType: ComposedExpression.ComposedExpression(FilterExpression, ComposedExpression.Operator, FilterExpression)
  fullName: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.ComposedExpression(Sdl.LanguagePlatform.TranslationMemory.FilterExpression, Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Operator, Sdl.LanguagePlatform.TranslationMemory.FilterExpression)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance of the ComposedExpression class with the specified operator and left and right operands.\n"
  syntax:
    content: public ComposedExpression(FilterExpression leftOperand, ComposedExpression.Operator op, FilterExpression rightOperand)
    parameters:
    - id: leftOperand
      type: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
      description: The left operand.
    - id: op
      type: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Operator
      description: The operator.
    - id: rightOperand
      type: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
      description: The right operand.
    content.vb: Public Sub New(leftOperand As FilterExpression, op As ComposedExpression.Operator, rightOperand As FilterExpression)
  overload: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.ToString
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.ToString
  id: ToString
  parent: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ComposedExpression.ToString()
  fullName: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.ToString()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\n<xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representation of the object, for display purposes.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)
  id: Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)
  parent: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression
  langs:
  - csharp
  - vb
  name: Validate(IFieldDefinitions, Boolean)
  nameWithType: ComposedExpression.Validate(IFieldDefinitions, Boolean)
  fullName: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions, System.Boolean)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nSee <xref href=\"Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override bool Validate(IFieldDefinitions fields, bool throwIfInvalid)
    parameters:
    - id: fields
      type: Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
      description: The field definitions to validate against.
    - id: throwIfInvalid
      type: System.Boolean
      description: >-
        If true, an exception will be thrown if invalid field names

        are encountered. If false, the return value will be set to false without an exception

        being thrown.
    return:
      type: System.Boolean
      description: >-
        true if the filter expression is valid, given the provided field definitions. false

        otherwise.
    content.vb: Public Overrides Function Validate(fields As IFieldDefinitions, throwIfInvalid As Boolean) As Boolean
  overridden: Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)
  overload: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Evaluate(Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Evaluate(Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer)
  id: Evaluate(Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer)
  parent: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression
  langs:
  - csharp
  - vb
  name: Evaluate(ITypedKeyValueContainer)
  nameWithType: ComposedExpression.Evaluate(ITypedKeyValueContainer)
  fullName: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Evaluate(Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nSee <xref href=\"Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Evaluate(Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public override bool Evaluate(ITypedKeyValueContainer values)
    parameters:
    - id: values
      type: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer
      description: A set of field values.
    return:
      type: System.Boolean
      description: true if the field values satisfy the expression, false otherwise.
    content.vb: Public Overrides Function Evaluate(values As ITypedKeyValueContainer) As Boolean
  overridden: Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Evaluate(Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer)
  overload: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Evaluate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.LeftOperand
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.LeftOperand
  id: LeftOperand
  parent: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression
  langs:
  - csharp
  - vb
  name: LeftOperand
  nameWithType: ComposedExpression.LeftOperand
  fullName: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.LeftOperand
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the left operand of this composed expression.\n<remarks>Can only be null if the expression is used with the NOT operator.</remarks>\n"
  syntax:
    content: public FilterExpression LeftOperand { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
    content.vb: Public Property LeftOperand As FilterExpression
  overload: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.LeftOperand*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.RightOperand
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.RightOperand
  id: RightOperand
  parent: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression
  langs:
  - csharp
  - vb
  name: RightOperand
  nameWithType: ComposedExpression.RightOperand
  fullName: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.RightOperand
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the right operand of this composed expression.\n<remarks>Cannot be null.</remarks>\n"
  syntax:
    content: public FilterExpression RightOperand { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
    content.vb: Public Property RightOperand As FilterExpression
  overload: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.RightOperand*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Op
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Op
  id: Op
  parent: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression
  langs:
  - csharp
  - vb
  name: Op
  nameWithType: ComposedExpression.Op
  fullName: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Op
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the operator of this composed expression.\n"
  syntax:
    content: public ComposedExpression.Operator Op { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Operator
    content.vb: Public Property Op As ComposedExpression.Operator
  overload: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Op*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FilterExpression
  nameWithType: FilterExpression
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.#ctor
  isExternal: true
  name: ComposedExpression
  nameWithType: ComposedExpression.ComposedExpression
  fullName: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.ComposedExpression
- uid: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Operator
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Operator
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: ComposedExpression.Operator
  nameWithType: ComposedExpression.Operator
  fullName: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Operator
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.ToString*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.ToString
  isExternal: true
  name: ToString
  nameWithType: ComposedExpression.ToString
  fullName: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)
  parent: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  isExternal: true
  name: Validate(IFieldDefinitions, Boolean)
  nameWithType: FilterExpression.Validate(IFieldDefinitions, Boolean)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions, System.Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)
    name: Validate
    nameWithType: FilterExpression.Validate
    fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
    name: IFieldDefinitions
    nameWithType: IFieldDefinitions
    fullName: Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)
    name: Validate
    nameWithType: FilterExpression.Validate
    fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
    name: IFieldDefinitions
    nameWithType: IFieldDefinitions
    fullName: Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Validate*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Validate
  isExternal: true
  name: Validate
  nameWithType: ComposedExpression.Validate
  fullName: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Validate
- uid: Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: IFieldDefinitions
  nameWithType: IFieldDefinitions
  fullName: Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Evaluate(Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Evaluate(Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer)
  parent: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  isExternal: true
  name: Evaluate(ITypedKeyValueContainer)
  nameWithType: FilterExpression.Evaluate(ITypedKeyValueContainer)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Evaluate(Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Evaluate(Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer)
    name: Evaluate
    nameWithType: FilterExpression.Evaluate
    fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Evaluate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer
    name: ITypedKeyValueContainer
    nameWithType: ITypedKeyValueContainer
    fullName: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Evaluate(Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer)
    name: Evaluate
    nameWithType: FilterExpression.Evaluate
    fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Evaluate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer
    name: ITypedKeyValueContainer
    nameWithType: ITypedKeyValueContainer
    fullName: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Evaluate*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Evaluate
  isExternal: true
  name: Evaluate
  nameWithType: ComposedExpression.Evaluate
  fullName: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Evaluate
- uid: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: ITypedKeyValueContainer
  nameWithType: ITypedKeyValueContainer
  fullName: Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer
- uid: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.LeftOperand*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.LeftOperand
  isExternal: true
  name: LeftOperand
  nameWithType: ComposedExpression.LeftOperand
  fullName: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.LeftOperand
- uid: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.RightOperand*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.RightOperand
  isExternal: true
  name: RightOperand
  nameWithType: ComposedExpression.RightOperand
  fullName: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.RightOperand
- uid: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Op*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Op
  isExternal: true
  name: Op
  nameWithType: ComposedExpression.Op
  fullName: Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Op
