### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken
  id: GenericPlaceableToken
  parent: Sdl.LanguagePlatform.Core.Tokenization
  children:
  - Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.#ctor(Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken)
  - Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.#ctor(System.String,System.String,System.Boolean)
  - Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.Duplicate
  - Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.Equals(System.Object)
  - Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GetHashCode
  - Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  - Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.IsPlaceable
  - Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.IsSubstitutable
  - Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.TokenClass
  langs:
  - csharp
  - vb
  name: GenericPlaceableToken
  nameWithType: GenericPlaceableToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken
  type: Class
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: 'public class GenericPlaceableToken : SimpleToken'
    content.vb: >-
      Public Class GenericPlaceableToken
          Inherits SimpleToken
  inheritance:
  - System.Object
  - Sdl.LanguagePlatform.Core.SegmentElement
  - Sdl.LanguagePlatform.Core.Tokenization.Token
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  inheritedMembers:
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetTokenType
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.ToString
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Stem
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsStopword
  - Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
  - Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  - Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Text
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Span
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Type
  - Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
  - Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
  - Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.#ctor(System.String,System.String,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.#ctor(System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean)'
  parent: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken
  langs:
  - csharp
  - vb
  name: GenericPlaceableToken(String, String, Boolean)
  nameWithType: GenericPlaceableToken.GenericPlaceableToken(String, String, Boolean)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GenericPlaceableToken(System.String, System.String, System.Boolean)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public GenericPlaceableToken(string text, string tokenClass, bool isSubstitutable)
    parameters:
    - id: text
      type: System.String
    - id: tokenClass
      type: System.String
    - id: isSubstitutable
      type: System.Boolean
    content.vb: Public Sub New(text As String, tokenClass As String, isSubstitutable As Boolean)
  overload: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.#ctor(Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.#ctor(Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken)
  id: '#ctor(Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken)'
  parent: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken
  langs:
  - csharp
  - vb
  name: GenericPlaceableToken(GenericPlaceableToken)
  nameWithType: GenericPlaceableToken.GenericPlaceableToken(GenericPlaceableToken)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GenericPlaceableToken(Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public GenericPlaceableToken(GenericPlaceableToken other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken
    content.vb: Public Sub New(other As GenericPlaceableToken)
  overload: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.Duplicate
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.Duplicate
  id: Duplicate
  parent: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: GenericPlaceableToken.Duplicate()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.Duplicate()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public override SegmentElement Duplicate()
    return:
      type: Sdl.LanguagePlatform.Core.SegmentElement
    content.vb: Public Overrides Function Duplicate As SegmentElement
  overridden: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Duplicate
  overload: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.Duplicate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  id: GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  parent: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken
  langs:
  - csharp
  - vb
  name: GetSimilarity(SegmentElement)
  nameWithType: GenericPlaceableToken.GetSimilarity(SegmentElement)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public override SegmentElement.Similarity GetSimilarity(SegmentElement other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.SegmentElement
    return:
      type: Sdl.LanguagePlatform.Core.SegmentElement.Similarity
    content.vb: Public Overrides Function GetSimilarity(other As SegmentElement) As SegmentElement.Similarity
  overridden: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  overload: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GetSimilarity*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.Equals(System.Object)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: GenericPlaceableToken.Equals(Object)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.Equals(System.Object)
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Equals(System.Object)
  overload: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GetHashCode
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GetHashCode
  id: GetHashCode
  parent: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: GenericPlaceableToken.GetHashCode()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GetHashCode()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetHashCode
  overload: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.IsPlaceable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.IsPlaceable
  id: IsPlaceable
  parent: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken
  langs:
  - csharp
  - vb
  name: IsPlaceable
  nameWithType: GenericPlaceableToken.IsPlaceable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.IsPlaceable
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public override bool IsPlaceable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsPlaceable As Boolean
  overridden: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsPlaceable
  overload: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.IsPlaceable*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.IsSubstitutable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.IsSubstitutable
  id: IsSubstitutable
  parent: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken
  langs:
  - csharp
  - vb
  name: IsSubstitutable
  nameWithType: GenericPlaceableToken.IsSubstitutable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.IsSubstitutable
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public override bool IsSubstitutable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsSubstitutable As Boolean
  overridden: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsSubstitutable
  overload: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.IsSubstitutable*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.TokenClass
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.TokenClass
  id: TokenClass
  parent: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken
  langs:
  - csharp
  - vb
  name: TokenClass
  nameWithType: GenericPlaceableToken.TokenClass
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.TokenClass
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public string TokenClass { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TokenClass As String
  overload: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.TokenClass*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.Core.Tokenization
  commentId: N:Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Sdl.LanguagePlatform.Core.Tokenization
  nameWithType: Sdl.LanguagePlatform.Core.Tokenization
  fullName: Sdl.LanguagePlatform.Core.Tokenization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.LanguagePlatform.Core.SegmentElement
  commentId: T:Sdl.LanguagePlatform.Core.SegmentElement
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: SegmentElement
  nameWithType: SegmentElement
  fullName: Sdl.LanguagePlatform.Core.SegmentElement
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.Token
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Token
  nameWithType: Token
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: SimpleToken
  nameWithType: SimpleToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  isExternal: true
  name: SetTokenType(TokenType)
  nameWithType: SimpleToken.SetTokenType(TokenType)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
    name: SetTokenType
    nameWithType: SimpleToken.SetTokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SetTokenType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    name: TokenType
    nameWithType: TokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
    name: SetTokenType
    nameWithType: SimpleToken.SetTokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SetTokenType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    name: TokenType
    nameWithType: TokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetTokenType
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetTokenType
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  isExternal: true
  name: GetTokenType()
  nameWithType: SimpleToken.GetTokenType()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetTokenType()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetTokenType
    name: GetTokenType
    nameWithType: SimpleToken.GetTokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetTokenType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetTokenType
    name: GetTokenType
    nameWithType: SimpleToken.GetTokenType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetTokenType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.ToString
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.ToString
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  isExternal: true
  name: ToString()
  nameWithType: SimpleToken.ToString()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.ToString()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.ToString
    name: ToString
    nameWithType: SimpleToken.ToString
    fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.ToString
    name: ToString
    nameWithType: SimpleToken.ToString
    fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  isExternal: true
  name: AcceptSegmentElementVisitor(ISegmentElementVisitor)
  nameWithType: SimpleToken.AcceptSegmentElementVisitor(ISegmentElementVisitor)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
    name: AcceptSegmentElementVisitor
    nameWithType: SimpleToken.AcceptSegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.AcceptSegmentElementVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    name: ISegmentElementVisitor
    nameWithType: ISegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
    name: AcceptSegmentElementVisitor
    nameWithType: SimpleToken.AcceptSegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.AcceptSegmentElementVisitor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    name: ISegmentElementVisitor
    nameWithType: ISegmentElementVisitor
    fullName: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Stem
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Stem
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  isExternal: true
  name: Stem
  nameWithType: SimpleToken.Stem
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Stem
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsStopword
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsStopword
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  isExternal: true
  name: IsStopword
  nameWithType: SimpleToken.IsStopword
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsStopword
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: GetWeakHashCode()
  nameWithType: Token.GetWeakHashCode()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    name: GetWeakHashCode
    nameWithType: Token.GetWeakHashCode
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    name: GetWeakHashCode
    nameWithType: Token.GetWeakHashCode
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: GetBundleSimilarity(SegmentElement)
  nameWithType: Token.GetBundleSimilarity(SegmentElement)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetBundleSimilarity
    nameWithType: Token.GetBundleSimilarity
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetBundleSimilarity
    nameWithType: Token.GetBundleSimilarity
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: TokenizationContext
  nameWithType: Token.TokenizationContext
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Text
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Text
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Text
  nameWithType: Token.Text
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Text
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Span
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Span
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Span
  nameWithType: Token.Span
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Span
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Type
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Type
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Type
  nameWithType: Token.Type
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Type
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsWord
  nameWithType: Token.IsWord
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsPunctuation
  nameWithType: Token.IsPunctuation
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: IsWhitespace
  nameWithType: Token.IsWhitespace
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  name: Culture
  nameWithType: Token.Culture
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  name: GetSimilarity(SegmentElement, Boolean)
  nameWithType: SegmentElement.GetSimilarity(SegmentElement, Boolean)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement, System.Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarity
    nameWithType: SegmentElement.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.#ctor
  isExternal: true
  name: GenericPlaceableToken
  nameWithType: GenericPlaceableToken.GenericPlaceableToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GenericPlaceableToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: GenericPlaceableToken
  nameWithType: GenericPlaceableToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Duplicate
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Duplicate
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  isExternal: true
  name: Duplicate()
  nameWithType: SimpleToken.Duplicate()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Duplicate()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Duplicate
    name: Duplicate
    nameWithType: SimpleToken.Duplicate
    fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Duplicate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Duplicate
    name: Duplicate
    nameWithType: SimpleToken.Duplicate
    fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Duplicate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.Duplicate*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.Duplicate
  isExternal: true
  name: Duplicate
  nameWithType: GenericPlaceableToken.Duplicate
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.Duplicate
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  isExternal: true
  name: GetSimilarity(SegmentElement)
  nameWithType: SimpleToken.GetSimilarity(SegmentElement)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarity
    nameWithType: SimpleToken.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarity
    nameWithType: SimpleToken.GetSimilarity
    fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetSimilarity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    nameWithType: SegmentElement
    fullName: Sdl.LanguagePlatform.Core.SegmentElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GetSimilarity*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GetSimilarity
  isExternal: true
  name: GetSimilarity
  nameWithType: GenericPlaceableToken.GetSimilarity
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GetSimilarity
- uid: Sdl.LanguagePlatform.Core.SegmentElement.Similarity
  commentId: T:Sdl.LanguagePlatform.Core.SegmentElement.Similarity
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: SegmentElement.Similarity
  nameWithType: SegmentElement.Similarity
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.Similarity
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Equals(System.Object)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Equals(System.Object)
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  isExternal: true
  name: Equals(Object)
  nameWithType: SimpleToken.Equals(Object)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Equals(System.Object)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Equals(System.Object)
    name: Equals
    nameWithType: SimpleToken.Equals
    fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Equals(System.Object)
    name: Equals
    nameWithType: SimpleToken.Equals
    fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.Equals*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.Equals
  isExternal: true
  name: Equals
  nameWithType: GenericPlaceableToken.Equals
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.Equals
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetHashCode
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetHashCode
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  isExternal: true
  name: GetHashCode()
  nameWithType: SimpleToken.GetHashCode()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetHashCode()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetHashCode
    name: GetHashCode
    nameWithType: SimpleToken.GetHashCode
    fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetHashCode
    name: GetHashCode
    nameWithType: SimpleToken.GetHashCode
    fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GetHashCode*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: GenericPlaceableToken.GetHashCode
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsPlaceable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsPlaceable
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  isExternal: true
  name: IsPlaceable
  nameWithType: SimpleToken.IsPlaceable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsPlaceable
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.IsPlaceable*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.IsPlaceable
  isExternal: true
  name: IsPlaceable
  nameWithType: GenericPlaceableToken.IsPlaceable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.IsPlaceable
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsSubstitutable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsSubstitutable
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  isExternal: true
  name: IsSubstitutable
  nameWithType: SimpleToken.IsSubstitutable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsSubstitutable
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.IsSubstitutable*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.IsSubstitutable
  isExternal: true
  name: IsSubstitutable
  nameWithType: GenericPlaceableToken.IsSubstitutable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.IsSubstitutable
- uid: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.TokenClass*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.TokenClass
  isExternal: true
  name: TokenClass
  nameWithType: GenericPlaceableToken.TokenClass
  fullName: Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken.TokenClass
