### YamlMime:ManagedReference
items:
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  commentId: T:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  id: IFineGrainedAligner
  parent: Sdl.Core.FineGrainedAlignment
  children:
  - Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignAsync(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  - Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignAsync(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair},System.Threading.CancellationToken,System.IProgress{System.Int32})
  - Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignExAsync(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  - Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignExAsync(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair},System.Threading.CancellationToken,System.IProgress{System.Int32})
  - Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  - Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.GetBulkMode
  - Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetBulkModeAsync(System.Boolean)
  - Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger(System.Action{System.Exception,System.String})
  langs:
  - csharp
  - vb
  name: IFineGrainedAligner
  nameWithType: IFineGrainedAligner
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  type: Interface
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public interface IFineGrainedAligner
    content.vb: Public Interface IFineGrainedAligner
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.GetBulkMode
  commentId: M:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.GetBulkMode
  id: GetBulkMode
  parent: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  langs:
  - csharp
  - vb
  name: GetBulkMode()
  nameWithType: IFineGrainedAligner.GetBulkMode()
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.GetBulkMode()
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: bool GetBulkMode()
    return:
      type: System.Boolean
    content.vb: Function GetBulkMode As Boolean
  overload: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.GetBulkMode*
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetBulkModeAsync(System.Boolean)
  commentId: M:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetBulkModeAsync(System.Boolean)
  id: SetBulkModeAsync(System.Boolean)
  parent: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  langs:
  - csharp
  - vb
  name: SetBulkModeAsync(Boolean)
  nameWithType: IFineGrainedAligner.SetBulkModeAsync(Boolean)
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetBulkModeAsync(System.Boolean)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: Task SetBulkModeAsync(bool bulkMode)
    parameters:
    - id: bulkMode
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetBulkModeAsync(bulkMode As Boolean) As Task
  overload: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetBulkModeAsync*
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignAsync(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  commentId: M:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignAsync(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  id: AlignAsync(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  parent: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  langs:
  - csharp
  - vb
  name: AlignAsync(IEnumerable<IAlignableContentPair>)
  nameWithType: IFineGrainedAligner.AlignAsync(IEnumerable<IAlignableContentPair>)
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignAsync(System.Collections.Generic.IEnumerable<Sdl.Core.FineGrainedAlignment.IAlignableContentPair>)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: Task<bool> AlignAsync(IEnumerable<IAlignableContentPair> pairs)
    parameters:
    - id: pairs
      type: System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair}
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function AlignAsync(pairs As IEnumerable(Of IAlignableContentPair)) As Task(Of Boolean)
  overload: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignAsync*
  nameWithType.vb: IFineGrainedAligner.AlignAsync(IEnumerable(Of IAlignableContentPair))
  fullName.vb: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignAsync(System.Collections.Generic.IEnumerable(Of Sdl.Core.FineGrainedAlignment.IAlignableContentPair))
  name.vb: AlignAsync(IEnumerable(Of IAlignableContentPair))
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignAsync(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair},System.Threading.CancellationToken,System.IProgress{System.Int32})
  commentId: M:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignAsync(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair},System.Threading.CancellationToken,System.IProgress{System.Int32})
  id: AlignAsync(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair},System.Threading.CancellationToken,System.IProgress{System.Int32})
  parent: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  langs:
  - csharp
  - vb
  name: AlignAsync(IEnumerable<IAlignableContentPair>, CancellationToken, IProgress<Int32>)
  nameWithType: IFineGrainedAligner.AlignAsync(IEnumerable<IAlignableContentPair>, CancellationToken, IProgress<Int32>)
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignAsync(System.Collections.Generic.IEnumerable<Sdl.Core.FineGrainedAlignment.IAlignableContentPair>, System.Threading.CancellationToken, System.IProgress<System.Int32>)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: Task<bool> AlignAsync(IEnumerable<IAlignableContentPair> pairs, CancellationToken token, IProgress<int> progress)
    parameters:
    - id: pairs
      type: System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair}
    - id: token
      type: System.Threading.CancellationToken
    - id: progress
      type: System.IProgress{System.Int32}
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function AlignAsync(pairs As IEnumerable(Of IAlignableContentPair), token As CancellationToken, progress As IProgress(Of Integer)) As Task(Of Boolean)
  overload: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignAsync*
  nameWithType.vb: IFineGrainedAligner.AlignAsync(IEnumerable(Of IAlignableContentPair), CancellationToken, IProgress(Of Int32))
  fullName.vb: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignAsync(System.Collections.Generic.IEnumerable(Of Sdl.Core.FineGrainedAlignment.IAlignableContentPair), System.Threading.CancellationToken, System.IProgress(Of System.Int32))
  name.vb: AlignAsync(IEnumerable(Of IAlignableContentPair), CancellationToken, IProgress(Of Int32))
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignExAsync(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  commentId: M:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignExAsync(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  id: AlignExAsync(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  parent: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  langs:
  - csharp
  - vb
  name: AlignExAsync(IEnumerable<IAlignableContentPair>)
  nameWithType: IFineGrainedAligner.AlignExAsync(IEnumerable<IAlignableContentPair>)
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignExAsync(System.Collections.Generic.IEnumerable<Sdl.Core.FineGrainedAlignment.IAlignableContentPair>)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: Task<AlignResult[]> AlignExAsync(IEnumerable<IAlignableContentPair> pairs)
    parameters:
    - id: pairs
      type: System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair}
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.FineGrainedAlignment.AlignResult[]}
    content.vb: Function AlignExAsync(pairs As IEnumerable(Of IAlignableContentPair)) As Task(Of AlignResult())
  overload: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignExAsync*
  nameWithType.vb: IFineGrainedAligner.AlignExAsync(IEnumerable(Of IAlignableContentPair))
  fullName.vb: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignExAsync(System.Collections.Generic.IEnumerable(Of Sdl.Core.FineGrainedAlignment.IAlignableContentPair))
  name.vb: AlignExAsync(IEnumerable(Of IAlignableContentPair))
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignExAsync(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair},System.Threading.CancellationToken,System.IProgress{System.Int32})
  commentId: M:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignExAsync(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair},System.Threading.CancellationToken,System.IProgress{System.Int32})
  id: AlignExAsync(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair},System.Threading.CancellationToken,System.IProgress{System.Int32})
  parent: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  langs:
  - csharp
  - vb
  name: AlignExAsync(IEnumerable<IAlignableContentPair>, CancellationToken, IProgress<Int32>)
  nameWithType: IFineGrainedAligner.AlignExAsync(IEnumerable<IAlignableContentPair>, CancellationToken, IProgress<Int32>)
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignExAsync(System.Collections.Generic.IEnumerable<Sdl.Core.FineGrainedAlignment.IAlignableContentPair>, System.Threading.CancellationToken, System.IProgress<System.Int32>)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: Task<AlignResult[]> AlignExAsync(IEnumerable<IAlignableContentPair> pairs, CancellationToken token, IProgress<int> progress)
    parameters:
    - id: pairs
      type: System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair}
    - id: token
      type: System.Threading.CancellationToken
    - id: progress
      type: System.IProgress{System.Int32}
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.FineGrainedAlignment.AlignResult[]}
    content.vb: Function AlignExAsync(pairs As IEnumerable(Of IAlignableContentPair), token As CancellationToken, progress As IProgress(Of Integer)) As Task(Of AlignResult())
  overload: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignExAsync*
  nameWithType.vb: IFineGrainedAligner.AlignExAsync(IEnumerable(Of IAlignableContentPair), CancellationToken, IProgress(Of Int32))
  fullName.vb: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignExAsync(System.Collections.Generic.IEnumerable(Of Sdl.Core.FineGrainedAlignment.IAlignableContentPair), System.Threading.CancellationToken, System.IProgress(Of System.Int32))
  name.vb: AlignExAsync(IEnumerable(Of IAlignableContentPair), CancellationToken, IProgress(Of Int32))
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  commentId: M:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  id: CanAlign(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  parent: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  langs:
  - csharp
  - vb
  name: CanAlign(IEnumerable<IAlignableContentPair>)
  nameWithType: IFineGrainedAligner.CanAlign(IEnumerable<IAlignableContentPair>)
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign(System.Collections.Generic.IEnumerable<Sdl.Core.FineGrainedAlignment.IAlignableContentPair>)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: bool[] CanAlign(IEnumerable<IAlignableContentPair> pairs)
    parameters:
    - id: pairs
      type: System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair}
    return:
      type: System.Boolean[]
    content.vb: Function CanAlign(pairs As IEnumerable(Of IAlignableContentPair)) As Boolean()
  overload: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign*
  nameWithType.vb: IFineGrainedAligner.CanAlign(IEnumerable(Of IAlignableContentPair))
  fullName.vb: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign(System.Collections.Generic.IEnumerable(Of Sdl.Core.FineGrainedAlignment.IAlignableContentPair))
  name.vb: CanAlign(IEnumerable(Of IAlignableContentPair))
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger(System.Action{System.Exception,System.String})
  commentId: M:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger(System.Action{System.Exception,System.String})
  id: SetErrorLogger(System.Action{System.Exception,System.String})
  parent: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  langs:
  - csharp
  - vb
  name: SetErrorLogger(Action<Exception, String>)
  nameWithType: IFineGrainedAligner.SetErrorLogger(Action<Exception, String>)
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger(System.Action<System.Exception, System.String>)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: void SetErrorLogger(Action<Exception, string> logger)
    parameters:
    - id: logger
      type: System.Action{System.Exception,System.String}
    content.vb: Sub SetErrorLogger(logger As Action(Of Exception, String))
  overload: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger*
  nameWithType.vb: IFineGrainedAligner.SetErrorLogger(Action(Of Exception, String))
  fullName.vb: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger(System.Action(Of System.Exception, System.String))
  name.vb: SetErrorLogger(Action(Of Exception, String))
references:
- uid: Sdl.Core.FineGrainedAlignment
  commentId: N:Sdl.Core.FineGrainedAlignment
  isExternal: true
  name: Sdl.Core.FineGrainedAlignment
  nameWithType: Sdl.Core.FineGrainedAlignment
  fullName: Sdl.Core.FineGrainedAlignment
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.GetBulkMode*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.GetBulkMode
  isExternal: true
  name: GetBulkMode
  nameWithType: IFineGrainedAligner.GetBulkMode
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.GetBulkMode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetBulkModeAsync*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetBulkModeAsync
  isExternal: true
  name: SetBulkModeAsync
  nameWithType: IFineGrainedAligner.SetBulkModeAsync
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetBulkModeAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignAsync*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignAsync
  isExternal: true
  name: AlignAsync
  nameWithType: IFineGrainedAligner.AlignAsync
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignAsync
- uid: System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair}
  commentId: '!:System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IAlignableContentPair>
  nameWithType: IEnumerable<IAlignableContentPair>
  fullName: System.Collections.Generic.IEnumerable<Sdl.Core.FineGrainedAlignment.IAlignableContentPair>
  nameWithType.vb: IEnumerable(Of IAlignableContentPair)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.Core.FineGrainedAlignment.IAlignableContentPair)
  name.vb: IEnumerable(Of IAlignableContentPair)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Core.FineGrainedAlignment.IAlignableContentPair
    name: IAlignableContentPair
    nameWithType: IAlignableContentPair
    fullName: Sdl.Core.FineGrainedAlignment.IAlignableContentPair
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Core.FineGrainedAlignment.IAlignableContentPair
    name: IAlignableContentPair
    nameWithType: IAlignableContentPair
    fullName: Sdl.Core.FineGrainedAlignment.IAlignableContentPair
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.IProgress{System.Int32}
  commentId: '!:System.IProgress{System.Int32}'
  parent: System
  definition: System.IProgress`1
  name: IProgress<Int32>
  nameWithType: IProgress<Int32>
  fullName: System.IProgress<System.Int32>
  nameWithType.vb: IProgress(Of Int32)
  fullName.vb: System.IProgress(Of System.Int32)
  name.vb: IProgress(Of Int32)
  spec.csharp:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.IProgress`1
  commentId: T:System.IProgress`1
  isExternal: true
  name: IProgress<>
  nameWithType: IProgress<>
  fullName: System.IProgress<>
  nameWithType.vb: IProgress(Of )
  fullName.vb: System.IProgress(Of )
  name.vb: IProgress(Of )
  spec.csharp:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignExAsync*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignExAsync
  isExternal: true
  name: AlignExAsync
  nameWithType: IFineGrainedAligner.AlignExAsync
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignExAsync
- uid: System.Threading.Tasks.Task{Sdl.Core.FineGrainedAlignment.AlignResult[]}
  commentId: '!:System.Threading.Tasks.Task{Sdl.Core.FineGrainedAlignment.AlignResult[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AlignResult[]>
  nameWithType: Task<AlignResult[]>
  fullName: System.Threading.Tasks.Task<Sdl.Core.FineGrainedAlignment.AlignResult[]>
  nameWithType.vb: Task(Of AlignResult())
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.Core.FineGrainedAlignment.AlignResult())
  name.vb: Task(Of AlignResult())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Core.FineGrainedAlignment.AlignResult
    name: AlignResult
    nameWithType: AlignResult
    fullName: Sdl.Core.FineGrainedAlignment.AlignResult
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Core.FineGrainedAlignment.AlignResult
    name: AlignResult
    nameWithType: AlignResult
    fullName: Sdl.Core.FineGrainedAlignment.AlignResult
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign
  isExternal: true
  name: CanAlign
  nameWithType: IFineGrainedAligner.CanAlign
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign
- uid: System.Boolean[]
  isExternal: true
  name: Boolean[]
  nameWithType: Boolean[]
  fullName: System.Boolean[]
  nameWithType.vb: Boolean()
  fullName.vb: System.Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger
  isExternal: true
  name: SetErrorLogger
  nameWithType: IFineGrainedAligner.SetErrorLogger
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger
- uid: System.Action{System.Exception,System.String}
  commentId: '!:System.Action{System.Exception,System.String}'
  definition: System.Action`2
  name: Action<Exception, String>
  nameWithType: Action<Exception, String>
  fullName: System.Action<System.Exception, System.String>
  nameWithType.vb: Action(Of Exception, String)
  fullName.vb: System.Action(Of System.Exception, System.String)
  name.vb: Action(Of Exception, String)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  isExternal: true
  name: Action<, >
  nameWithType: Action<, >
  fullName: System.Action<, >
  nameWithType.vb: Action(Of , )
  fullName.vb: System.Action(Of , )
  name.vb: Action(Of , )
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
