### YamlMime:ManagedReference
items:
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport
  commentId: T:Sdl.Core.TM.ImportExport.TmApiImportExport
  id: TmApiImportExport
  parent: Sdl.Core.TM.ImportExport
  children:
  - Sdl.Core.TM.ImportExport.TmApiImportExport.#ctor(Sdl.LanguagePlatform.TranslationMemoryImpl.ITranslationMemoryServiceAsync,Sdl.LanguagePlatform.TranslationMemoryImpl.Container,Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken)
  - Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  - Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  - Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  - Sdl.Core.TM.ImportExport.TmApiImportExport.BuiltinRecognizers
  - Sdl.Core.TM.ImportExport.TmApiImportExport.CreationDate
  - Sdl.Core.TM.ImportExport.TmApiImportExport.CreationUserName
  - Sdl.Core.TM.ImportExport.TmApiImportExport.FieldDefinitions
  - Sdl.Core.TM.ImportExport.TmApiImportExport.GetFieldDefinitionsAsync
  - Sdl.Core.TM.ImportExport.TmApiImportExport.GetLanguageResourcesAsync
  - Sdl.Core.TM.ImportExport.TmApiImportExport.GetTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.RegularIterator@)
  - Sdl.Core.TM.ImportExport.TmApiImportExport.GetTranslationUnitsAsync(Sdl.LanguagePlatform.TranslationMemory.RegularIterator)
  - Sdl.Core.TM.ImportExport.TmApiImportExport.IncludesContextContent
  - Sdl.Core.TM.ImportExport.TmApiImportExport.LanguageResources
  - Sdl.Core.TM.ImportExport.TmApiImportExport.Name
  - Sdl.Core.TM.ImportExport.TmApiImportExport.SourceLanguage
  - Sdl.Core.TM.ImportExport.TmApiImportExport.TargetLanguage
  - Sdl.Core.TM.ImportExport.TmApiImportExport.TextContextMatchType
  - Sdl.Core.TM.ImportExport.TmApiImportExport.TokenizerFlags
  - Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  - Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateFieldDefinitionsAsync(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  - Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  - Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResourcesAsync(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  - Sdl.Core.TM.ImportExport.TmApiImportExport.UsesIdContextMatch
  - Sdl.Core.TM.ImportExport.TmApiImportExport.UsesLegacyHashes
  - Sdl.Core.TM.ImportExport.TmApiImportExport.WordCountFlags
  langs:
  - csharp
  - vb
  name: TmApiImportExport
  nameWithType: TmApiImportExport
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport
  type: Class
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: "\nProvides implementations of <xref href=\"Sdl.Core.TM.ImportExport.IImportDestination\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Sdl.Core.TM.ImportExport.IExportOrigin\" data-throw-if-not-resolved=\"false\"></xref> \nbased on the Core.TM container API\n"
  syntax:
    content: 'public class TmApiImportExport : IImportDestinationAsync, IImportDestination, IExportOriginAsync, IExportOrigin'
    content.vb: >-
      Public Class TmApiImportExport
          Implements IImportDestinationAsync, IImportDestination, IExportOriginAsync, IExportOrigin
  inheritance:
  - System.Object
  implements:
  - Sdl.Core.TM.ImportExport.IImportDestinationAsync
  - Sdl.Core.TM.ImportExport.IImportDestination
  - Sdl.Core.TM.ImportExport.IExportOriginAsync
  - Sdl.Core.TM.ImportExport.IExportOrigin
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.#ctor(Sdl.LanguagePlatform.TranslationMemoryImpl.ITranslationMemoryServiceAsync,Sdl.LanguagePlatform.TranslationMemoryImpl.Container,Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken)
  commentId: M:Sdl.Core.TM.ImportExport.TmApiImportExport.#ctor(Sdl.LanguagePlatform.TranslationMemoryImpl.ITranslationMemoryServiceAsync,Sdl.LanguagePlatform.TranslationMemoryImpl.Container,Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken)
  id: '#ctor(Sdl.LanguagePlatform.TranslationMemoryImpl.ITranslationMemoryServiceAsync,Sdl.LanguagePlatform.TranslationMemoryImpl.Container,Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken)'
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: TmApiImportExport(ITranslationMemoryServiceAsync, Container, PersistentObjectToken)
  nameWithType: TmApiImportExport.TmApiImportExport(ITranslationMemoryServiceAsync, Container, PersistentObjectToken)
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.TmApiImportExport(Sdl.LanguagePlatform.TranslationMemoryImpl.ITranslationMemoryServiceAsync, Sdl.LanguagePlatform.TranslationMemoryImpl.Container, Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken)
  type: Constructor
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  summary: "\n\n"
  syntax:
    content: public TmApiImportExport(ITranslationMemoryServiceAsync service, Container container, PersistentObjectToken tmId)
    parameters:
    - id: service
      type: Sdl.LanguagePlatform.TranslationMemoryImpl.ITranslationMemoryServiceAsync
    - id: container
      type: Sdl.LanguagePlatform.TranslationMemoryImpl.Container
    - id: tmId
      type: Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken
    content.vb: Public Sub New(service As ITranslationMemoryServiceAsync, container As Container, tmId As PersistentObjectToken)
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.GetFieldDefinitionsAsync
  commentId: M:Sdl.Core.TM.ImportExport.TmApiImportExport.GetFieldDefinitionsAsync
  id: GetFieldDefinitionsAsync
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: GetFieldDefinitionsAsync()
  nameWithType: TmApiImportExport.GetFieldDefinitionsAsync()
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.GetFieldDefinitionsAsync()
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public Task<FieldDefinitions> GetFieldDefinitionsAsync()
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions}
    content.vb: Public Function GetFieldDefinitionsAsync As Task(Of FieldDefinitions)
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.GetFieldDefinitionsAsync*
  implements:
  - Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetFieldDefinitionsAsync
  - Sdl.Core.TM.ImportExport.IExportOriginAsync.GetFieldDefinitionsAsync
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.GetLanguageResourcesAsync
  commentId: M:Sdl.Core.TM.ImportExport.TmApiImportExport.GetLanguageResourcesAsync
  id: GetLanguageResourcesAsync
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: GetLanguageResourcesAsync()
  nameWithType: TmApiImportExport.GetLanguageResourcesAsync()
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.GetLanguageResourcesAsync()
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public Task<LanguageResource[]> GetLanguageResourcesAsync()
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource[]}
    content.vb: Public Function GetLanguageResourcesAsync As Task(Of LanguageResource())
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.GetLanguageResourcesAsync*
  implements:
  - Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetLanguageResourcesAsync
  - Sdl.Core.TM.ImportExport.IExportOriginAsync.GetLanguageResourcesAsync
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  commentId: M:Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  id: AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: AddTranslationUnits(TranslationUnit[], ImportSettings)
  nameWithType: TmApiImportExport.AddTranslationUnits(TranslationUnit[], ImportSettings)
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public ImportResult[] AddTranslationUnits(TranslationUnit[] tus, ImportSettings settings)
    parameters:
    - id: tus
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
    content.vb: Public Function AddTranslationUnits(tus As TranslationUnit(), settings As ImportSettings) As ImportResult()
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnits*
  implements:
  - Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  nameWithType.vb: TmApiImportExport.AddTranslationUnits(TranslationUnit(), ImportSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  name.vb: AddTranslationUnits(TranslationUnit(), ImportSettings)
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  commentId: M:Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  id: AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: AddTranslationUnitsMask(TranslationUnit[], ImportSettings, Boolean[])
  nameWithType: TmApiImportExport.AddTranslationUnitsMask(TranslationUnit[], ImportSettings, Boolean[])
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean[])
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public ImportResult[] AddTranslationUnitsMask(TranslationUnit[] tus, ImportSettings settings, bool[] mask)
    parameters:
    - id: tus
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    - id: mask
      type: System.Boolean[]
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
    content.vb: Public Function AddTranslationUnitsMask(tus As TranslationUnit(), settings As ImportSettings, mask As Boolean()) As ImportResult()
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMask*
  implements:
  - Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  nameWithType.vb: TmApiImportExport.AddTranslationUnitsMask(TranslationUnit(), ImportSettings, Boolean())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean())
  name.vb: AddTranslationUnitsMask(TranslationUnit(), ImportSettings, Boolean())
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  commentId: M:Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  id: AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: AddTranslationUnitsMaskedAsync(TranslationUnit[], ImportSettings, Boolean[])
  nameWithType: TmApiImportExport.AddTranslationUnitsMaskedAsync(TranslationUnit[], ImportSettings, Boolean[])
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean[])
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public Task<ImportResult[]> AddTranslationUnitsMaskedAsync(TranslationUnit[] tus, ImportSettings settings, bool[] mask)
    parameters:
    - id: tus
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    - id: settings
      type: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    - id: mask
      type: System.Boolean[]
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.ImportResult[]}
    content.vb: Public Function AddTranslationUnitsMaskedAsync(tus As TranslationUnit(), settings As ImportSettings, mask As Boolean()) As Task(Of ImportResult())
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMaskedAsync*
  implements:
  - Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  nameWithType.vb: TmApiImportExport.AddTranslationUnitsMaskedAsync(TranslationUnit(), ImportSettings, Boolean())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean())
  name.vb: AddTranslationUnitsMaskedAsync(TranslationUnit(), ImportSettings, Boolean())
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.GetTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.RegularIterator@)
  commentId: M:Sdl.Core.TM.ImportExport.TmApiImportExport.GetTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.RegularIterator@)
  id: GetTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.RegularIterator@)
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: GetTranslationUnits(ref RegularIterator)
  nameWithType: TmApiImportExport.GetTranslationUnits(ref RegularIterator)
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.GetTranslationUnits(ref Sdl.LanguagePlatform.TranslationMemory.RegularIterator)
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public TranslationUnit[] GetTranslationUnits(ref RegularIterator iter)
    parameters:
    - id: iter
      type: Sdl.LanguagePlatform.TranslationMemory.RegularIterator
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
    content.vb: Public Function GetTranslationUnits(ByRef iter As RegularIterator) As TranslationUnit()
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.GetTranslationUnits*
  implements:
  - Sdl.Core.TM.ImportExport.IExportOrigin.GetTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.RegularIterator@)
  nameWithType.vb: TmApiImportExport.GetTranslationUnits(ByRef RegularIterator)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.Core.TM.ImportExport.TmApiImportExport.GetTranslationUnits(ByRef Sdl.LanguagePlatform.TranslationMemory.RegularIterator)
  name.vb: GetTranslationUnits(ByRef RegularIterator)
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.GetTranslationUnitsAsync(Sdl.LanguagePlatform.TranslationMemory.RegularIterator)
  commentId: M:Sdl.Core.TM.ImportExport.TmApiImportExport.GetTranslationUnitsAsync(Sdl.LanguagePlatform.TranslationMemory.RegularIterator)
  id: GetTranslationUnitsAsync(Sdl.LanguagePlatform.TranslationMemory.RegularIterator)
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: GetTranslationUnitsAsync(RegularIterator)
  nameWithType: TmApiImportExport.GetTranslationUnitsAsync(RegularIterator)
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.GetTranslationUnitsAsync(Sdl.LanguagePlatform.TranslationMemory.RegularIterator)
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public Task<TranslationUnit[]> GetTranslationUnitsAsync(RegularIterator iter)
    parameters:
    - id: iter
      type: Sdl.LanguagePlatform.TranslationMemory.RegularIterator
    return:
      type: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]}
    content.vb: Public Function GetTranslationUnitsAsync(iter As RegularIterator) As Task(Of TranslationUnit())
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.GetTranslationUnitsAsync*
  implements:
  - Sdl.Core.TM.ImportExport.IExportOriginAsync.GetTranslationUnitsAsync(Sdl.LanguagePlatform.TranslationMemory.RegularIterator)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  commentId: M:Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  id: UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: UpdateFieldDefinitions(FieldDefinitions)
  nameWithType: TmApiImportExport.UpdateFieldDefinitions(FieldDefinitions)
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public void UpdateFieldDefinitions(FieldDefinitions mergedFieldDefinitions)
    parameters:
    - id: mergedFieldDefinitions
      type: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    content.vb: Public Sub UpdateFieldDefinitions(mergedFieldDefinitions As FieldDefinitions)
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateFieldDefinitions*
  implements:
  - Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateFieldDefinitionsAsync(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  commentId: M:Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateFieldDefinitionsAsync(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  id: UpdateFieldDefinitionsAsync(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: UpdateFieldDefinitionsAsync(FieldDefinitions)
  nameWithType: TmApiImportExport.UpdateFieldDefinitionsAsync(FieldDefinitions)
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateFieldDefinitionsAsync(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public Task UpdateFieldDefinitionsAsync(FieldDefinitions mergedFieldDefinitions)
    parameters:
    - id: mergedFieldDefinitions
      type: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function UpdateFieldDefinitionsAsync(mergedFieldDefinitions As FieldDefinitions) As Task
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateFieldDefinitionsAsync*
  implements:
  - Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateFieldDefinitionsAsync(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  commentId: M:Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  id: UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: UpdateLanguageResources(List<LanguageResource>)
  nameWithType: TmApiImportExport.UpdateLanguageResources(List<LanguageResource>)
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResources(System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource>)
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public void UpdateLanguageResources(List<LanguageResource> mergedLanguageResources)
    parameters:
    - id: mergedLanguageResources
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource}
    content.vb: Public Sub UpdateLanguageResources(mergedLanguageResources As List(Of LanguageResource))
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResources*
  implements:
  - Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  nameWithType.vb: TmApiImportExport.UpdateLanguageResources(List(Of LanguageResource))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResources(System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource))
  name.vb: UpdateLanguageResources(List(Of LanguageResource))
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResourcesAsync(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  commentId: M:Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResourcesAsync(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  id: UpdateLanguageResourcesAsync(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: UpdateLanguageResourcesAsync(List<LanguageResource>)
  nameWithType: TmApiImportExport.UpdateLanguageResourcesAsync(List<LanguageResource>)
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResourcesAsync(System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource>)
  type: Method
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public Task UpdateLanguageResourcesAsync(List<LanguageResource> mergedLanguageResources)
    parameters:
    - id: mergedLanguageResources
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function UpdateLanguageResourcesAsync(mergedLanguageResources As List(Of LanguageResource)) As Task
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResourcesAsync*
  implements:
  - Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  nameWithType.vb: TmApiImportExport.UpdateLanguageResourcesAsync(List(Of LanguageResource))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResourcesAsync(System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource))
  name.vb: UpdateLanguageResourcesAsync(List(Of LanguageResource))
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.SourceLanguage
  commentId: P:Sdl.Core.TM.ImportExport.TmApiImportExport.SourceLanguage
  id: SourceLanguage
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: SourceLanguage
  nameWithType: TmApiImportExport.SourceLanguage
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.SourceLanguage
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public CultureInfo SourceLanguage { get; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
    content.vb: Public ReadOnly Property SourceLanguage As CultureInfo
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.SourceLanguage*
  implements:
  - Sdl.Core.TM.ImportExport.IImportDestination.SourceLanguage
  - Sdl.Core.TM.ImportExport.IExportOrigin.SourceLanguage
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.TargetLanguage
  commentId: P:Sdl.Core.TM.ImportExport.TmApiImportExport.TargetLanguage
  id: TargetLanguage
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: TargetLanguage
  nameWithType: TmApiImportExport.TargetLanguage
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.TargetLanguage
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public CultureInfo TargetLanguage { get; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
    content.vb: Public ReadOnly Property TargetLanguage As CultureInfo
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.TargetLanguage*
  implements:
  - Sdl.Core.TM.ImportExport.IImportDestination.TargetLanguage
  - Sdl.Core.TM.ImportExport.IExportOrigin.TargetLanguage
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.FieldDefinitions
  commentId: P:Sdl.Core.TM.ImportExport.TmApiImportExport.FieldDefinitions
  id: FieldDefinitions
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: FieldDefinitions
  nameWithType: TmApiImportExport.FieldDefinitions
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.FieldDefinitions
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public FieldDefinitions FieldDefinitions { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    content.vb: Public ReadOnly Property FieldDefinitions As FieldDefinitions
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.FieldDefinitions*
  implements:
  - Sdl.Core.TM.ImportExport.IImportDestination.FieldDefinitions
  - Sdl.Core.TM.ImportExport.IExportOrigin.FieldDefinitions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.UsesLegacyHashes
  commentId: P:Sdl.Core.TM.ImportExport.TmApiImportExport.UsesLegacyHashes
  id: UsesLegacyHashes
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: UsesLegacyHashes
  nameWithType: TmApiImportExport.UsesLegacyHashes
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.UsesLegacyHashes
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public bool UsesLegacyHashes { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property UsesLegacyHashes As Boolean
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.UsesLegacyHashes*
  implements:
  - Sdl.Core.TM.ImportExport.IImportDestination.UsesLegacyHashes
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.LanguageResources
  commentId: P:Sdl.Core.TM.ImportExport.TmApiImportExport.LanguageResources
  id: LanguageResources
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: LanguageResources
  nameWithType: TmApiImportExport.LanguageResources
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.LanguageResources
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public LanguageResource[] LanguageResources { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource[]
    content.vb: Public ReadOnly Property LanguageResources As LanguageResource()
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.LanguageResources*
  implements:
  - Sdl.Core.TM.ImportExport.IImportDestination.LanguageResources
  - Sdl.Core.TM.ImportExport.IExportOrigin.LanguageResources
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.Name
  commentId: P:Sdl.Core.TM.ImportExport.TmApiImportExport.Name
  id: Name
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TmApiImportExport.Name
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.Name
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.Name*
  implements:
  - Sdl.Core.TM.ImportExport.IExportOrigin.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.TokenizerFlags
  commentId: P:Sdl.Core.TM.ImportExport.TmApiImportExport.TokenizerFlags
  id: TokenizerFlags
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: TokenizerFlags
  nameWithType: TmApiImportExport.TokenizerFlags
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.TokenizerFlags
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public TokenizerFlags TokenizerFlags { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.TokenizerFlags
    content.vb: Public ReadOnly Property TokenizerFlags As TokenizerFlags
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.TokenizerFlags*
  implements:
  - Sdl.Core.TM.ImportExport.IExportOrigin.TokenizerFlags
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.WordCountFlags
  commentId: P:Sdl.Core.TM.ImportExport.TmApiImportExport.WordCountFlags
  id: WordCountFlags
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: WordCountFlags
  nameWithType: TmApiImportExport.WordCountFlags
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.WordCountFlags
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public WordCountFlags WordCountFlags { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.WordCountFlags
    content.vb: Public ReadOnly Property WordCountFlags As WordCountFlags
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.WordCountFlags*
  implements:
  - Sdl.Core.TM.ImportExport.IExportOrigin.WordCountFlags
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.TextContextMatchType
  commentId: P:Sdl.Core.TM.ImportExport.TmApiImportExport.TextContextMatchType
  id: TextContextMatchType
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: TextContextMatchType
  nameWithType: TmApiImportExport.TextContextMatchType
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.TextContextMatchType
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public TextContextMatchType TextContextMatchType { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.TextContextMatchType
    content.vb: Public ReadOnly Property TextContextMatchType As TextContextMatchType
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.TextContextMatchType*
  implements:
  - Sdl.Core.TM.ImportExport.IExportOrigin.TextContextMatchType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.UsesIdContextMatch
  commentId: P:Sdl.Core.TM.ImportExport.TmApiImportExport.UsesIdContextMatch
  id: UsesIdContextMatch
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: UsesIdContextMatch
  nameWithType: TmApiImportExport.UsesIdContextMatch
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.UsesIdContextMatch
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public bool UsesIdContextMatch { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property UsesIdContextMatch As Boolean
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.UsesIdContextMatch*
  implements:
  - Sdl.Core.TM.ImportExport.IExportOrigin.UsesIdContextMatch
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.IncludesContextContent
  commentId: P:Sdl.Core.TM.ImportExport.TmApiImportExport.IncludesContextContent
  id: IncludesContextContent
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: IncludesContextContent
  nameWithType: TmApiImportExport.IncludesContextContent
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.IncludesContextContent
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public virtual bool IncludesContextContent { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IncludesContextContent As Boolean
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.IncludesContextContent*
  implements:
  - Sdl.Core.TM.ImportExport.IExportOrigin.IncludesContextContent
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.CreationDate
  commentId: P:Sdl.Core.TM.ImportExport.TmApiImportExport.CreationDate
  id: CreationDate
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: CreationDate
  nameWithType: TmApiImportExport.CreationDate
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.CreationDate
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public DateTime CreationDate { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property CreationDate As Date
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.CreationDate*
  implements:
  - Sdl.Core.TM.ImportExport.IExportOrigin.CreationDate
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.CreationUserName
  commentId: P:Sdl.Core.TM.ImportExport.TmApiImportExport.CreationUserName
  id: CreationUserName
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: CreationUserName
  nameWithType: TmApiImportExport.CreationUserName
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.CreationUserName
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public string CreationUserName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property CreationUserName As String
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.CreationUserName*
  implements:
  - Sdl.Core.TM.ImportExport.IExportOrigin.CreationUserName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.BuiltinRecognizers
  commentId: P:Sdl.Core.TM.ImportExport.TmApiImportExport.BuiltinRecognizers
  id: BuiltinRecognizers
  parent: Sdl.Core.TM.ImportExport.TmApiImportExport
  langs:
  - csharp
  - vb
  name: BuiltinRecognizers
  nameWithType: TmApiImportExport.BuiltinRecognizers
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.BuiltinRecognizers
  type: Property
  source:
    path: Sdl.Core.TM.ImportExport
    isExternal: true
  assemblies:
  - Sdl.Core.TM.ImportExport
  namespace: Sdl.Core.TM.ImportExport
  syntax:
    content: public BuiltinRecognizers BuiltinRecognizers { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.BuiltinRecognizers
    content.vb: Public ReadOnly Property BuiltinRecognizers As BuiltinRecognizers
  overload: Sdl.Core.TM.ImportExport.TmApiImportExport.BuiltinRecognizers*
  implements:
  - Sdl.Core.TM.ImportExport.IExportOrigin.BuiltinRecognizers
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.Core.TM.ImportExport
  commentId: N:Sdl.Core.TM.ImportExport
  isExternal: true
  name: Sdl.Core.TM.ImportExport
  nameWithType: Sdl.Core.TM.ImportExport
  fullName: Sdl.Core.TM.ImportExport
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync
  commentId: T:Sdl.Core.TM.ImportExport.IImportDestinationAsync
  parent: Sdl.Core.TM.ImportExport
  isExternal: true
  name: IImportDestinationAsync
  nameWithType: IImportDestinationAsync
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync
- uid: Sdl.Core.TM.ImportExport.IImportDestination
  commentId: T:Sdl.Core.TM.ImportExport.IImportDestination
  parent: Sdl.Core.TM.ImportExport
  isExternal: true
  name: IImportDestination
  nameWithType: IImportDestination
  fullName: Sdl.Core.TM.ImportExport.IImportDestination
- uid: Sdl.Core.TM.ImportExport.IExportOriginAsync
  commentId: T:Sdl.Core.TM.ImportExport.IExportOriginAsync
  parent: Sdl.Core.TM.ImportExport
  isExternal: true
  name: IExportOriginAsync
  nameWithType: IExportOriginAsync
  fullName: Sdl.Core.TM.ImportExport.IExportOriginAsync
- uid: Sdl.Core.TM.ImportExport.IExportOrigin
  commentId: T:Sdl.Core.TM.ImportExport.IExportOrigin
  parent: Sdl.Core.TM.ImportExport
  isExternal: true
  name: IExportOrigin
  nameWithType: IExportOrigin
  fullName: Sdl.Core.TM.ImportExport.IExportOrigin
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.#ctor*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.#ctor
  isExternal: true
  name: TmApiImportExport
  nameWithType: TmApiImportExport.TmApiImportExport
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.TmApiImportExport
- uid: Sdl.LanguagePlatform.TranslationMemoryImpl.ITranslationMemoryServiceAsync
  commentId: '!:Sdl.LanguagePlatform.TranslationMemoryImpl.ITranslationMemoryServiceAsync'
  isExternal: true
  name: ITranslationMemoryServiceAsync
  nameWithType: ITranslationMemoryServiceAsync
  fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.ITranslationMemoryServiceAsync
- uid: Sdl.LanguagePlatform.TranslationMemoryImpl.Container
  commentId: '!:Sdl.LanguagePlatform.TranslationMemoryImpl.Container'
  isExternal: true
  name: Container
  nameWithType: Container
  fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.Container
- uid: Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: PersistentObjectToken
  nameWithType: PersistentObjectToken
  fullName: Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.GetFieldDefinitionsAsync*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.GetFieldDefinitionsAsync
  isExternal: true
  name: GetFieldDefinitionsAsync
  nameWithType: TmApiImportExport.GetFieldDefinitionsAsync
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.GetFieldDefinitionsAsync
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetFieldDefinitionsAsync
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetFieldDefinitionsAsync
  parent: Sdl.Core.TM.ImportExport.IImportDestinationAsync
  isExternal: true
  name: GetFieldDefinitionsAsync()
  nameWithType: IImportDestinationAsync.GetFieldDefinitionsAsync()
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetFieldDefinitionsAsync()
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetFieldDefinitionsAsync
    name: GetFieldDefinitionsAsync
    nameWithType: IImportDestinationAsync.GetFieldDefinitionsAsync
    fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetFieldDefinitionsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetFieldDefinitionsAsync
    name: GetFieldDefinitionsAsync
    nameWithType: IImportDestinationAsync.GetFieldDefinitionsAsync
    fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetFieldDefinitionsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetFieldDefinitionsAsync
  commentId: M:Sdl.Core.TM.ImportExport.IExportOriginAsync.GetFieldDefinitionsAsync
  parent: Sdl.Core.TM.ImportExport.IExportOriginAsync
  isExternal: true
  name: GetFieldDefinitionsAsync()
  nameWithType: IExportOriginAsync.GetFieldDefinitionsAsync()
  fullName: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetFieldDefinitionsAsync()
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetFieldDefinitionsAsync
    name: GetFieldDefinitionsAsync
    nameWithType: IExportOriginAsync.GetFieldDefinitionsAsync
    fullName: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetFieldDefinitionsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetFieldDefinitionsAsync
    name: GetFieldDefinitionsAsync
    nameWithType: IExportOriginAsync.GetFieldDefinitionsAsync
    fullName: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetFieldDefinitionsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions}
  commentId: T:System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FieldDefinitions>
  nameWithType: Task<FieldDefinitions>
  fullName: System.Threading.Tasks.Task<Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions>
  nameWithType.vb: Task(Of FieldDefinitions)
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  name.vb: Task(Of FieldDefinitions)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    name: FieldDefinitions
    nameWithType: FieldDefinitions
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    name: FieldDefinitions
    nameWithType: FieldDefinitions
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.GetLanguageResourcesAsync*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.GetLanguageResourcesAsync
  isExternal: true
  name: GetLanguageResourcesAsync
  nameWithType: TmApiImportExport.GetLanguageResourcesAsync
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.GetLanguageResourcesAsync
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetLanguageResourcesAsync
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetLanguageResourcesAsync
  parent: Sdl.Core.TM.ImportExport.IImportDestinationAsync
  isExternal: true
  name: GetLanguageResourcesAsync()
  nameWithType: IImportDestinationAsync.GetLanguageResourcesAsync()
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetLanguageResourcesAsync()
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetLanguageResourcesAsync
    name: GetLanguageResourcesAsync
    nameWithType: IImportDestinationAsync.GetLanguageResourcesAsync
    fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetLanguageResourcesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetLanguageResourcesAsync
    name: GetLanguageResourcesAsync
    nameWithType: IImportDestinationAsync.GetLanguageResourcesAsync
    fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.GetLanguageResourcesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetLanguageResourcesAsync
  commentId: M:Sdl.Core.TM.ImportExport.IExportOriginAsync.GetLanguageResourcesAsync
  parent: Sdl.Core.TM.ImportExport.IExportOriginAsync
  isExternal: true
  name: GetLanguageResourcesAsync()
  nameWithType: IExportOriginAsync.GetLanguageResourcesAsync()
  fullName: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetLanguageResourcesAsync()
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetLanguageResourcesAsync
    name: GetLanguageResourcesAsync
    nameWithType: IExportOriginAsync.GetLanguageResourcesAsync
    fullName: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetLanguageResourcesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetLanguageResourcesAsync
    name: GetLanguageResourcesAsync
    nameWithType: IExportOriginAsync.GetLanguageResourcesAsync
    fullName: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetLanguageResourcesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource[]}
  commentId: T:System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LanguageResource[]>
  nameWithType: Task<LanguageResource[]>
  fullName: System.Threading.Tasks.Task<Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource[]>
  nameWithType.vb: Task(Of LanguageResource())
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource())
  name.vb: Task(Of LanguageResource())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnits*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnits
  isExternal: true
  name: AddTranslationUnits
  nameWithType: TmApiImportExport.AddTranslationUnits
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnits
- uid: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: AddTranslationUnits(TranslationUnit[], ImportSettings)
  nameWithType: IImportDestination.AddTranslationUnits(TranslationUnit[], ImportSettings)
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  nameWithType.vb: IImportDestination.AddTranslationUnits(TranslationUnit(), ImportSettings)
  fullName.vb: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
  name.vb: AddTranslationUnits(TranslationUnit(), ImportSettings)
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
    name: AddTranslationUnits
    nameWithType: IImportDestination.AddTranslationUnits
    fullName: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    name: ImportSettings
    nameWithType: ImportSettings
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings)
    name: AddTranslationUnits
    nameWithType: IImportDestination.AddTranslationUnits
    fullName: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnits
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    name: ImportSettings
    nameWithType: ImportSettings
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
  isExternal: true
  name: TranslationUnit[]
  nameWithType: TranslationUnit[]
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]
  nameWithType.vb: TranslationUnit()
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit()
  name.vb: TranslationUnit()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ImportSettings
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: ImportSettings
  nameWithType: ImportSettings
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
- uid: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
  isExternal: true
  name: ImportResult[]
  nameWithType: ImportResult[]
  fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResult[]
  nameWithType.vb: ImportResult()
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.ImportResult()
  name.vb: ImportResult()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    name: ImportResult
    nameWithType: ImportResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    name: ImportResult
    nameWithType: ImportResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMask*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMask
  isExternal: true
  name: AddTranslationUnitsMask
  nameWithType: TmApiImportExport.AddTranslationUnitsMask
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMask
- uid: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: AddTranslationUnitsMask(TranslationUnit[], ImportSettings, Boolean[])
  nameWithType: IImportDestination.AddTranslationUnitsMask(TranslationUnit[], ImportSettings, Boolean[])
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean[])
  nameWithType.vb: IImportDestination.AddTranslationUnitsMask(TranslationUnit(), ImportSettings, Boolean())
  fullName.vb: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean())
  name.vb: AddTranslationUnitsMask(TranslationUnit(), ImportSettings, Boolean())
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
    name: AddTranslationUnitsMask
    nameWithType: IImportDestination.AddTranslationUnitsMask
    fullName: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    name: ImportSettings
    nameWithType: ImportSettings
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
    name: AddTranslationUnitsMask
    nameWithType: IImportDestination.AddTranslationUnitsMask
    fullName: Sdl.Core.TM.ImportExport.IImportDestination.AddTranslationUnitsMask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    name: ImportSettings
    nameWithType: ImportSettings
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean[]
  isExternal: true
  name: Boolean[]
  nameWithType: Boolean[]
  fullName: System.Boolean[]
  nameWithType.vb: Boolean()
  fullName.vb: System.Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMaskedAsync*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMaskedAsync
  isExternal: true
  name: AddTranslationUnitsMaskedAsync
  nameWithType: TmApiImportExport.AddTranslationUnitsMaskedAsync
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.AddTranslationUnitsMaskedAsync
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
  parent: Sdl.Core.TM.ImportExport.IImportDestinationAsync
  isExternal: true
  name: AddTranslationUnitsMaskedAsync(TranslationUnit[], ImportSettings, Boolean[])
  nameWithType: IImportDestinationAsync.AddTranslationUnitsMaskedAsync(TranslationUnit[], ImportSettings, Boolean[])
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[], Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean[])
  nameWithType.vb: IImportDestinationAsync.AddTranslationUnitsMaskedAsync(TranslationUnit(), ImportSettings, Boolean())
  fullName.vb: Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit(), Sdl.LanguagePlatform.TranslationMemory.ImportSettings, System.Boolean())
  name.vb: AddTranslationUnitsMaskedAsync(TranslationUnit(), ImportSettings, Boolean())
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
    name: AddTranslationUnitsMaskedAsync
    nameWithType: IImportDestinationAsync.AddTranslationUnitsMaskedAsync
    fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    name: ImportSettings
    nameWithType: ImportSettings
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[],Sdl.LanguagePlatform.TranslationMemory.ImportSettings,System.Boolean[])
    name: AddTranslationUnitsMaskedAsync
    nameWithType: IImportDestinationAsync.AddTranslationUnitsMaskedAsync
    fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.AddTranslationUnitsMaskedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    name: ImportSettings
    nameWithType: ImportSettings
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportSettings
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.ImportResult[]}
  commentId: T:System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.ImportResult[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ImportResult[]>
  nameWithType: Task<ImportResult[]>
  fullName: System.Threading.Tasks.Task<Sdl.LanguagePlatform.TranslationMemory.ImportResult[]>
  nameWithType.vb: Task(Of ImportResult())
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.LanguagePlatform.TranslationMemory.ImportResult())
  name.vb: Task(Of ImportResult())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    name: ImportResult
    nameWithType: ImportResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    name: ImportResult
    nameWithType: ImportResult
    fullName: Sdl.LanguagePlatform.TranslationMemory.ImportResult
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.GetTranslationUnits*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.GetTranslationUnits
  isExternal: true
  name: GetTranslationUnits
  nameWithType: TmApiImportExport.GetTranslationUnits
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.GetTranslationUnits
- uid: Sdl.Core.TM.ImportExport.IExportOrigin.GetTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.RegularIterator@)
  commentId: M:Sdl.Core.TM.ImportExport.IExportOrigin.GetTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.RegularIterator@)
  parent: Sdl.Core.TM.ImportExport.IExportOrigin
  isExternal: true
  name: GetTranslationUnits(RegularIterator)
  nameWithType: IExportOrigin.GetTranslationUnits(RegularIterator)
  fullName: Sdl.Core.TM.ImportExport.IExportOrigin.GetTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.RegularIterator)
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.IExportOrigin.GetTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.RegularIterator@)
    name: GetTranslationUnits
    nameWithType: IExportOrigin.GetTranslationUnits
    fullName: Sdl.Core.TM.ImportExport.IExportOrigin.GetTranslationUnits
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.RegularIterator
    name: RegularIterator
    nameWithType: RegularIterator
    fullName: Sdl.LanguagePlatform.TranslationMemory.RegularIterator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.IExportOrigin.GetTranslationUnits(Sdl.LanguagePlatform.TranslationMemory.RegularIterator@)
    name: GetTranslationUnits
    nameWithType: IExportOrigin.GetTranslationUnits
    fullName: Sdl.Core.TM.ImportExport.IExportOrigin.GetTranslationUnits
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.RegularIterator
    name: RegularIterator
    nameWithType: RegularIterator
    fullName: Sdl.LanguagePlatform.TranslationMemory.RegularIterator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.RegularIterator
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.RegularIterator
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: RegularIterator
  nameWithType: RegularIterator
  fullName: Sdl.LanguagePlatform.TranslationMemory.RegularIterator
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.GetTranslationUnitsAsync*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.GetTranslationUnitsAsync
  isExternal: true
  name: GetTranslationUnitsAsync
  nameWithType: TmApiImportExport.GetTranslationUnitsAsync
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.GetTranslationUnitsAsync
- uid: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetTranslationUnitsAsync(Sdl.LanguagePlatform.TranslationMemory.RegularIterator)
  commentId: M:Sdl.Core.TM.ImportExport.IExportOriginAsync.GetTranslationUnitsAsync(Sdl.LanguagePlatform.TranslationMemory.RegularIterator)
  parent: Sdl.Core.TM.ImportExport.IExportOriginAsync
  isExternal: true
  name: GetTranslationUnitsAsync(RegularIterator)
  nameWithType: IExportOriginAsync.GetTranslationUnitsAsync(RegularIterator)
  fullName: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetTranslationUnitsAsync(Sdl.LanguagePlatform.TranslationMemory.RegularIterator)
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetTranslationUnitsAsync(Sdl.LanguagePlatform.TranslationMemory.RegularIterator)
    name: GetTranslationUnitsAsync
    nameWithType: IExportOriginAsync.GetTranslationUnitsAsync
    fullName: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetTranslationUnitsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.RegularIterator
    name: RegularIterator
    nameWithType: RegularIterator
    fullName: Sdl.LanguagePlatform.TranslationMemory.RegularIterator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetTranslationUnitsAsync(Sdl.LanguagePlatform.TranslationMemory.RegularIterator)
    name: GetTranslationUnitsAsync
    nameWithType: IExportOriginAsync.GetTranslationUnitsAsync
    fullName: Sdl.Core.TM.ImportExport.IExportOriginAsync.GetTranslationUnitsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.RegularIterator
    name: RegularIterator
    nameWithType: RegularIterator
    fullName: Sdl.LanguagePlatform.TranslationMemory.RegularIterator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]}
  commentId: T:System.Threading.Tasks.Task{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TranslationUnit[]>
  nameWithType: Task<TranslationUnit[]>
  fullName: System.Threading.Tasks.Task<Sdl.LanguagePlatform.TranslationMemory.TranslationUnit[]>
  nameWithType.vb: Task(Of TranslationUnit())
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.LanguagePlatform.TranslationMemory.TranslationUnit())
  name.vb: Task(Of TranslationUnit())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateFieldDefinitions*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateFieldDefinitions
  isExternal: true
  name: UpdateFieldDefinitions
  nameWithType: TmApiImportExport.UpdateFieldDefinitions
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateFieldDefinitions
- uid: Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: UpdateFieldDefinitions(FieldDefinitions)
  nameWithType: IImportDestination.UpdateFieldDefinitions(FieldDefinitions)
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
    name: UpdateFieldDefinitions
    nameWithType: IImportDestination.UpdateFieldDefinitions
    fullName: Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    name: FieldDefinitions
    nameWithType: FieldDefinitions
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
    name: UpdateFieldDefinitions
    nameWithType: IImportDestination.UpdateFieldDefinitions
    fullName: Sdl.Core.TM.ImportExport.IImportDestination.UpdateFieldDefinitions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    name: FieldDefinitions
    nameWithType: FieldDefinitions
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldDefinitions
  nameWithType: FieldDefinitions
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateFieldDefinitionsAsync*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateFieldDefinitionsAsync
  isExternal: true
  name: UpdateFieldDefinitionsAsync
  nameWithType: TmApiImportExport.UpdateFieldDefinitionsAsync
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateFieldDefinitionsAsync
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateFieldDefinitionsAsync(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateFieldDefinitionsAsync(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  parent: Sdl.Core.TM.ImportExport.IImportDestinationAsync
  isExternal: true
  name: UpdateFieldDefinitionsAsync(FieldDefinitions)
  nameWithType: IImportDestinationAsync.UpdateFieldDefinitionsAsync(FieldDefinitions)
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateFieldDefinitionsAsync(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateFieldDefinitionsAsync(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
    name: UpdateFieldDefinitionsAsync
    nameWithType: IImportDestinationAsync.UpdateFieldDefinitionsAsync
    fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateFieldDefinitionsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    name: FieldDefinitions
    nameWithType: FieldDefinitions
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateFieldDefinitionsAsync(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)
    name: UpdateFieldDefinitionsAsync
    nameWithType: IImportDestinationAsync.UpdateFieldDefinitionsAsync
    fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateFieldDefinitionsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    name: FieldDefinitions
    nameWithType: FieldDefinitions
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResources*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResources
  isExternal: true
  name: UpdateLanguageResources
  nameWithType: TmApiImportExport.UpdateLanguageResources
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResources
- uid: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: UpdateLanguageResources(List<LanguageResource>)
  nameWithType: IImportDestination.UpdateLanguageResources(List<LanguageResource>)
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource>)
  nameWithType.vb: IImportDestination.UpdateLanguageResources(List(Of LanguageResource))
  fullName.vb: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource))
  name.vb: UpdateLanguageResources(List(Of LanguageResource))
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
    name: UpdateLanguageResources
    nameWithType: IImportDestination.UpdateLanguageResources
    fullName: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
    name: UpdateLanguageResources
    nameWithType: IImportDestination.UpdateLanguageResources
    fullName: Sdl.Core.TM.ImportExport.IImportDestination.UpdateLanguageResources
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<LanguageResource>
  nameWithType: List<LanguageResource>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource>
  nameWithType.vb: List(Of LanguageResource)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource)
  name.vb: List(Of LanguageResource)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResourcesAsync*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResourcesAsync
  isExternal: true
  name: UpdateLanguageResourcesAsync
  nameWithType: TmApiImportExport.UpdateLanguageResourcesAsync
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.UpdateLanguageResourcesAsync
- uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  commentId: M:Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
  parent: Sdl.Core.TM.ImportExport.IImportDestinationAsync
  isExternal: true
  name: UpdateLanguageResourcesAsync(List<LanguageResource>)
  nameWithType: IImportDestinationAsync.UpdateLanguageResourcesAsync(List<LanguageResource>)
  fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync(System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource>)
  nameWithType.vb: IImportDestinationAsync.UpdateLanguageResourcesAsync(List(Of LanguageResource))
  fullName.vb: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync(System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource))
  name.vb: UpdateLanguageResourcesAsync(List(Of LanguageResource))
  spec.csharp:
  - uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
    name: UpdateLanguageResourcesAsync
    nameWithType: IImportDestinationAsync.UpdateLanguageResourcesAsync
    fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource})
    name: UpdateLanguageResourcesAsync
    nameWithType: IImportDestinationAsync.UpdateLanguageResourcesAsync
    fullName: Sdl.Core.TM.ImportExport.IImportDestinationAsync.UpdateLanguageResourcesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.SourceLanguage*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.SourceLanguage
  isExternal: true
  name: SourceLanguage
  nameWithType: TmApiImportExport.SourceLanguage
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.SourceLanguage
- uid: Sdl.Core.TM.ImportExport.IImportDestination.SourceLanguage
  commentId: P:Sdl.Core.TM.ImportExport.IImportDestination.SourceLanguage
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: SourceLanguage
  nameWithType: IImportDestination.SourceLanguage
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.SourceLanguage
- uid: Sdl.Core.TM.ImportExport.IExportOrigin.SourceLanguage
  commentId: P:Sdl.Core.TM.ImportExport.IExportOrigin.SourceLanguage
  parent: Sdl.Core.TM.ImportExport.IExportOrigin
  isExternal: true
  name: SourceLanguage
  nameWithType: IExportOrigin.SourceLanguage
  fullName: Sdl.Core.TM.ImportExport.IExportOrigin.SourceLanguage
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.TargetLanguage*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.TargetLanguage
  isExternal: true
  name: TargetLanguage
  nameWithType: TmApiImportExport.TargetLanguage
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.TargetLanguage
- uid: Sdl.Core.TM.ImportExport.IImportDestination.TargetLanguage
  commentId: P:Sdl.Core.TM.ImportExport.IImportDestination.TargetLanguage
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: TargetLanguage
  nameWithType: IImportDestination.TargetLanguage
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.TargetLanguage
- uid: Sdl.Core.TM.ImportExport.IExportOrigin.TargetLanguage
  commentId: P:Sdl.Core.TM.ImportExport.IExportOrigin.TargetLanguage
  parent: Sdl.Core.TM.ImportExport.IExportOrigin
  isExternal: true
  name: TargetLanguage
  nameWithType: IExportOrigin.TargetLanguage
  fullName: Sdl.Core.TM.ImportExport.IExportOrigin.TargetLanguage
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.FieldDefinitions*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.FieldDefinitions
  isExternal: true
  name: FieldDefinitions
  nameWithType: TmApiImportExport.FieldDefinitions
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.FieldDefinitions
- uid: Sdl.Core.TM.ImportExport.IImportDestination.FieldDefinitions
  commentId: P:Sdl.Core.TM.ImportExport.IImportDestination.FieldDefinitions
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: FieldDefinitions
  nameWithType: IImportDestination.FieldDefinitions
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.FieldDefinitions
- uid: Sdl.Core.TM.ImportExport.IExportOrigin.FieldDefinitions
  commentId: P:Sdl.Core.TM.ImportExport.IExportOrigin.FieldDefinitions
  parent: Sdl.Core.TM.ImportExport.IExportOrigin
  isExternal: true
  name: FieldDefinitions
  nameWithType: IExportOrigin.FieldDefinitions
  fullName: Sdl.Core.TM.ImportExport.IExportOrigin.FieldDefinitions
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.UsesLegacyHashes*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.UsesLegacyHashes
  isExternal: true
  name: UsesLegacyHashes
  nameWithType: TmApiImportExport.UsesLegacyHashes
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.UsesLegacyHashes
- uid: Sdl.Core.TM.ImportExport.IImportDestination.UsesLegacyHashes
  commentId: P:Sdl.Core.TM.ImportExport.IImportDestination.UsesLegacyHashes
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: UsesLegacyHashes
  nameWithType: IImportDestination.UsesLegacyHashes
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.UsesLegacyHashes
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.LanguageResources*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.LanguageResources
  isExternal: true
  name: LanguageResources
  nameWithType: TmApiImportExport.LanguageResources
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.LanguageResources
- uid: Sdl.Core.TM.ImportExport.IImportDestination.LanguageResources
  commentId: P:Sdl.Core.TM.ImportExport.IImportDestination.LanguageResources
  parent: Sdl.Core.TM.ImportExport.IImportDestination
  isExternal: true
  name: LanguageResources
  nameWithType: IImportDestination.LanguageResources
  fullName: Sdl.Core.TM.ImportExport.IImportDestination.LanguageResources
- uid: Sdl.Core.TM.ImportExport.IExportOrigin.LanguageResources
  commentId: P:Sdl.Core.TM.ImportExport.IExportOrigin.LanguageResources
  parent: Sdl.Core.TM.ImportExport.IExportOrigin
  isExternal: true
  name: LanguageResources
  nameWithType: IExportOrigin.LanguageResources
  fullName: Sdl.Core.TM.ImportExport.IExportOrigin.LanguageResources
- uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource[]
  isExternal: true
  name: LanguageResource[]
  nameWithType: LanguageResource[]
  fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource[]
  nameWithType.vb: LanguageResource()
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource()
  name.vb: LanguageResource()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    name: LanguageResource
    nameWithType: LanguageResource
    fullName: Sdl.LanguagePlatform.TranslationMemoryImpl.LanguageResource
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.Name*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.Name
  isExternal: true
  name: Name
  nameWithType: TmApiImportExport.Name
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.Name
- uid: Sdl.Core.TM.ImportExport.IExportOrigin.Name
  commentId: P:Sdl.Core.TM.ImportExport.IExportOrigin.Name
  parent: Sdl.Core.TM.ImportExport.IExportOrigin
  isExternal: true
  name: Name
  nameWithType: IExportOrigin.Name
  fullName: Sdl.Core.TM.ImportExport.IExportOrigin.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.TokenizerFlags*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.TokenizerFlags
  isExternal: true
  name: TokenizerFlags
  nameWithType: TmApiImportExport.TokenizerFlags
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.TokenizerFlags
- uid: Sdl.Core.TM.ImportExport.IExportOrigin.TokenizerFlags
  commentId: P:Sdl.Core.TM.ImportExport.IExportOrigin.TokenizerFlags
  parent: Sdl.Core.TM.ImportExport.IExportOrigin
  isExternal: true
  name: TokenizerFlags
  nameWithType: IExportOrigin.TokenizerFlags
  fullName: Sdl.Core.TM.ImportExport.IExportOrigin.TokenizerFlags
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenizerFlags
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.TokenizerFlags
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: TokenizerFlags
  nameWithType: TokenizerFlags
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenizerFlags
- uid: Sdl.LanguagePlatform.Core.Tokenization
  commentId: N:Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Sdl.LanguagePlatform.Core.Tokenization
  nameWithType: Sdl.LanguagePlatform.Core.Tokenization
  fullName: Sdl.LanguagePlatform.Core.Tokenization
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.WordCountFlags*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.WordCountFlags
  isExternal: true
  name: WordCountFlags
  nameWithType: TmApiImportExport.WordCountFlags
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.WordCountFlags
- uid: Sdl.Core.TM.ImportExport.IExportOrigin.WordCountFlags
  commentId: P:Sdl.Core.TM.ImportExport.IExportOrigin.WordCountFlags
  parent: Sdl.Core.TM.ImportExport.IExportOrigin
  isExternal: true
  name: WordCountFlags
  nameWithType: IExportOrigin.WordCountFlags
  fullName: Sdl.Core.TM.ImportExport.IExportOrigin.WordCountFlags
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCountFlags
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.WordCountFlags
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: WordCountFlags
  nameWithType: WordCountFlags
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCountFlags
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.TextContextMatchType*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.TextContextMatchType
  isExternal: true
  name: TextContextMatchType
  nameWithType: TmApiImportExport.TextContextMatchType
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.TextContextMatchType
- uid: Sdl.Core.TM.ImportExport.IExportOrigin.TextContextMatchType
  commentId: P:Sdl.Core.TM.ImportExport.IExportOrigin.TextContextMatchType
  parent: Sdl.Core.TM.ImportExport.IExportOrigin
  isExternal: true
  name: TextContextMatchType
  nameWithType: IExportOrigin.TextContextMatchType
  fullName: Sdl.Core.TM.ImportExport.IExportOrigin.TextContextMatchType
- uid: Sdl.LanguagePlatform.TranslationMemory.TextContextMatchType
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TextContextMatchType
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: TextContextMatchType
  nameWithType: TextContextMatchType
  fullName: Sdl.LanguagePlatform.TranslationMemory.TextContextMatchType
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.UsesIdContextMatch*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.UsesIdContextMatch
  isExternal: true
  name: UsesIdContextMatch
  nameWithType: TmApiImportExport.UsesIdContextMatch
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.UsesIdContextMatch
- uid: Sdl.Core.TM.ImportExport.IExportOrigin.UsesIdContextMatch
  commentId: P:Sdl.Core.TM.ImportExport.IExportOrigin.UsesIdContextMatch
  parent: Sdl.Core.TM.ImportExport.IExportOrigin
  isExternal: true
  name: UsesIdContextMatch
  nameWithType: IExportOrigin.UsesIdContextMatch
  fullName: Sdl.Core.TM.ImportExport.IExportOrigin.UsesIdContextMatch
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.IncludesContextContent*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.IncludesContextContent
  isExternal: true
  name: IncludesContextContent
  nameWithType: TmApiImportExport.IncludesContextContent
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.IncludesContextContent
- uid: Sdl.Core.TM.ImportExport.IExportOrigin.IncludesContextContent
  commentId: P:Sdl.Core.TM.ImportExport.IExportOrigin.IncludesContextContent
  parent: Sdl.Core.TM.ImportExport.IExportOrigin
  isExternal: true
  name: IncludesContextContent
  nameWithType: IExportOrigin.IncludesContextContent
  fullName: Sdl.Core.TM.ImportExport.IExportOrigin.IncludesContextContent
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.CreationDate*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.CreationDate
  isExternal: true
  name: CreationDate
  nameWithType: TmApiImportExport.CreationDate
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.CreationDate
- uid: Sdl.Core.TM.ImportExport.IExportOrigin.CreationDate
  commentId: P:Sdl.Core.TM.ImportExport.IExportOrigin.CreationDate
  parent: Sdl.Core.TM.ImportExport.IExportOrigin
  isExternal: true
  name: CreationDate
  nameWithType: IExportOrigin.CreationDate
  fullName: Sdl.Core.TM.ImportExport.IExportOrigin.CreationDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.CreationUserName*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.CreationUserName
  isExternal: true
  name: CreationUserName
  nameWithType: TmApiImportExport.CreationUserName
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.CreationUserName
- uid: Sdl.Core.TM.ImportExport.IExportOrigin.CreationUserName
  commentId: P:Sdl.Core.TM.ImportExport.IExportOrigin.CreationUserName
  parent: Sdl.Core.TM.ImportExport.IExportOrigin
  isExternal: true
  name: CreationUserName
  nameWithType: IExportOrigin.CreationUserName
  fullName: Sdl.Core.TM.ImportExport.IExportOrigin.CreationUserName
- uid: Sdl.Core.TM.ImportExport.TmApiImportExport.BuiltinRecognizers*
  commentId: Overload:Sdl.Core.TM.ImportExport.TmApiImportExport.BuiltinRecognizers
  isExternal: true
  name: BuiltinRecognizers
  nameWithType: TmApiImportExport.BuiltinRecognizers
  fullName: Sdl.Core.TM.ImportExport.TmApiImportExport.BuiltinRecognizers
- uid: Sdl.Core.TM.ImportExport.IExportOrigin.BuiltinRecognizers
  commentId: P:Sdl.Core.TM.ImportExport.IExportOrigin.BuiltinRecognizers
  parent: Sdl.Core.TM.ImportExport.IExportOrigin
  isExternal: true
  name: BuiltinRecognizers
  nameWithType: IExportOrigin.BuiltinRecognizers
  fullName: Sdl.Core.TM.ImportExport.IExportOrigin.BuiltinRecognizers
- uid: Sdl.LanguagePlatform.Core.Tokenization.BuiltinRecognizers
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.BuiltinRecognizers
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: BuiltinRecognizers
  nameWithType: BuiltinRecognizers
  fullName: Sdl.LanguagePlatform.Core.Tokenization.BuiltinRecognizers
