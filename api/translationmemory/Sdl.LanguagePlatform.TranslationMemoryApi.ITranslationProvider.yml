### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  id: ITranslationProvider
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.GetLanguageDirection(Sdl.LanguagePlatform.Core.LanguagePair)
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.IsReadOnly
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.LoadState(System.String)
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.Name
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.RefreshStatusInfo
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SerializeState
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.StatusInfo
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsConcordanceSearch
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsDocumentSearches
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsFilters
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsFuzzySearch
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsLanguageDirection(Sdl.LanguagePlatform.Core.LanguagePair)
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsMultipleResults
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsPenalties
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsPlaceables
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsScoring
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsSearchForTranslationUnits
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsSourceConcordanceSearch
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsStructureContext
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTaggedInput
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTargetConcordanceSearch
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTranslation
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsUpdate
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsWordCounts
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.TranslationMethod
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.Uri
  langs:
  - csharp
  - vb
  name: ITranslationProvider
  nameWithType: ITranslationProvider
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  type: Interface
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nRepresents a multi-lingual translation engine. This can for instance be a translation memory or machine translation engine. \n"
  syntax:
    content: public interface ITranslationProvider
    content.vb: Public Interface ITranslationProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsLanguageDirection(Sdl.LanguagePlatform.Core.LanguagePair)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsLanguageDirection(Sdl.LanguagePlatform.Core.LanguagePair)
  id: SupportsLanguageDirection(Sdl.LanguagePlatform.Core.LanguagePair)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SupportsLanguageDirection(LanguagePair)
  nameWithType: ITranslationProvider.SupportsLanguageDirection(LanguagePair)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsLanguageDirection(Sdl.LanguagePlatform.Core.LanguagePair)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nChecks whether this translation provider supports the specified language direction.\n"
  syntax:
    content: bool SupportsLanguageDirection(LanguagePair languageDirection)
    parameters:
    - id: languageDirection
      type: Sdl.LanguagePlatform.Core.LanguagePair
      description: The language direction.
    return:
      type: System.Boolean
      description: True if the specified language direction is supported.
    content.vb: Function SupportsLanguageDirection(languageDirection As LanguagePair) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsLanguageDirection*
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.GetLanguageDirection(Sdl.LanguagePlatform.Core.LanguagePair)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.GetLanguageDirection(Sdl.LanguagePlatform.Core.LanguagePair)
  id: GetLanguageDirection(Sdl.LanguagePlatform.Core.LanguagePair)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: GetLanguageDirection(LanguagePair)
  nameWithType: ITranslationProvider.GetLanguageDirection(LanguagePair)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.GetLanguageDirection(Sdl.LanguagePlatform.Core.LanguagePair)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a translation provider for the specified language direction.\n"
  syntax:
    content: ITranslationProviderLanguageDirection GetLanguageDirection(LanguagePair languageDirection)
    parameters:
    - id: languageDirection
      type: Sdl.LanguagePlatform.Core.LanguagePair
      description: The language direction.
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection
      description: The language direction matching the given source and target language.
    content.vb: Function GetLanguageDirection(languageDirection As LanguagePair) As ITranslationProviderLanguageDirection
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.GetLanguageDirection*
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.RefreshStatusInfo
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.RefreshStatusInfo
  id: RefreshStatusInfo
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: RefreshStatusInfo()
  nameWithType: ITranslationProvider.RefreshStatusInfo()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.RefreshStatusInfo()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nEnsures that the provider&apos;s status information (<xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.StatusInfo\" data-throw-if-not-resolved=\"false\"></xref>) is refreshed, \nin case it is cached.\n"
  syntax:
    content: void RefreshStatusInfo()
    content.vb: Sub RefreshStatusInfo
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.RefreshStatusInfo*
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SerializeState
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SerializeState
  id: SerializeState
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SerializeState()
  nameWithType: ITranslationProvider.SerializeState()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SerializeState()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nSerializes any meaningful state information for this translation provider that can be stored in projects \nand sent around the supply chain.\n"
  remarks: The format of this string can be decided upon by the translation provider implementation.
  syntax:
    content: string SerializeState()
    return:
      type: System.String
      description: "A string representing the state of this translation provider that can later be passed into \nthe <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.LoadState(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method to restore the state after creating a new translation provider."
    content.vb: Function SerializeState As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SerializeState*
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.LoadState(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.LoadState(System.String)
  id: LoadState(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: LoadState(String)
  nameWithType: ITranslationProvider.LoadState(String)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.LoadState(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nLoads previously serialized state information into this translation provider instance.\n"
  remarks: The format of this string can be decided upon by the translation provider implementation.
  syntax:
    content: void LoadState(string translationProviderState)
    parameters:
    - id: translationProviderState
      type: System.String
      description: >-
        A string representing the state of translation provider that was previously saved

        using <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SerializeState" data-throw-if-not-resolved="false"></xref>.
    content.vb: Sub LoadState(translationProviderState As String)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.LoadState*
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.StatusInfo
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.StatusInfo
  id: StatusInfo
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: StatusInfo
  nameWithType: ITranslationProvider.StatusInfo
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.StatusInfo
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets the status info for the provider.\n"
  syntax:
    content: ProviderStatusInfo StatusInfo { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ProviderStatusInfo
    content.vb: ReadOnly Property StatusInfo As ProviderStatusInfo
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.StatusInfo*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.Uri
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.Uri
  id: Uri
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: ITranslationProvider.Uri
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.Uri
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a URI which uniquely identifies this translation provider.\n"
  syntax:
    content: Uri Uri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: ReadOnly Property Uri As Uri
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.Uri*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.Name
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.Name
  id: Name
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ITranslationProvider.Name
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.Name
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets the user-friendly name of this provider. It is not necessarily unique across the system.\n"
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTaggedInput
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTaggedInput
  id: SupportsTaggedInput
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SupportsTaggedInput
  nameWithType: ITranslationProvider.SupportsTaggedInput
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTaggedInput
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a flag which indicates whether or not the translation provider engine supports \nprocessing of tagged input and will return input tags in the translation proposals. \nIf false, the engine may drop all tags from search segments, and may not return tags\nin the output.\n"
  syntax:
    content: bool SupportsTaggedInput { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsTaggedInput As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTaggedInput*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsScoring
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsScoring
  id: SupportsScoring
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SupportsScoring
  nameWithType: ITranslationProvider.SupportsScoring
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsScoring
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a flag which indicates whether the translation provider produces scored results \nin the rank between [minScore, 100]. If false, no scores will be computed.\n"
  syntax:
    content: bool SupportsScoring { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsScoring As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsScoring*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsSearchForTranslationUnits
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsSearchForTranslationUnits
  id: SupportsSearchForTranslationUnits
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SupportsSearchForTranslationUnits
  nameWithType: ITranslationProvider.SupportsSearchForTranslationUnits
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsSearchForTranslationUnits
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a flag which indicates whether the translation provider supports searching \nfor bilingual input TUs (i.e. the SearchTranslationUnit\nmethod group). If false, the service only supports searching for simple (monolingual) \nsegments.\n"
  syntax:
    content: bool SupportsSearchForTranslationUnits { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsSearchForTranslationUnits As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsSearchForTranslationUnits*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsMultipleResults
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsMultipleResults
  id: SupportsMultipleResults
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SupportsMultipleResults
  nameWithType: ITranslationProvider.SupportsMultipleResults
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsMultipleResults
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a flag which indicates whether the engine may return multiple results for a search. \nIf false, at most one result (and translation proposal) will be computed.\n"
  syntax:
    content: bool SupportsMultipleResults { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsMultipleResults As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsMultipleResults*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsFilters
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsFilters
  id: SupportsFilters
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SupportsFilters
  nameWithType: ITranslationProvider.SupportsFilters
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsFilters
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a flag which indicates whether the translation provider supports filters for \ntext and attribute fields. If false, filters supplied in the search settings \nwill be ignored.\n"
  syntax:
    content: bool SupportsFilters { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsFilters As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsFilters*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsPenalties
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsPenalties
  id: SupportsPenalties
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SupportsPenalties
  nameWithType: ITranslationProvider.SupportsPenalties
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsPenalties
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a flag which indicates whether the translation provider supports penalties \nof various types. If false, all penalties supplied in the search settings will be ignored.\n"
  syntax:
    content: bool SupportsPenalties { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsPenalties As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsPenalties*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsStructureContext
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsStructureContext
  id: SupportsStructureContext
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SupportsStructureContext
  nameWithType: ITranslationProvider.SupportsStructureContext
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsStructureContext
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a flag which indicates whether the translation provider supports a structure \ncontext specification and will consider it for searches. If false, the structure \ncontext will be ignored.\n"
  syntax:
    content: bool SupportsStructureContext { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsStructureContext As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsStructureContext*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsDocumentSearches
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsDocumentSearches
  id: SupportsDocumentSearches
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SupportsDocumentSearches
  nameWithType: ITranslationProvider.SupportsDocumentSearches
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsDocumentSearches
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a flag which indicates whether the translation provider supports document searches \nand will take document (textual) context into account.\n"
  syntax:
    content: bool SupportsDocumentSearches { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsDocumentSearches As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsDocumentSearches*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsUpdate
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsUpdate
  id: SupportsUpdate
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SupportsUpdate
  nameWithType: ITranslationProvider.SupportsUpdate
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsUpdate
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a flag which indicates whether the translation provider supports updating/adding \nof translation units. If false, all update/add methods will return without effect. Note \nthat implementations should not throw exceptions for unsupported methods.\n"
  syntax:
    content: bool SupportsUpdate { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsUpdate As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsUpdate*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsPlaceables
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsPlaceables
  id: SupportsPlaceables
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SupportsPlaceables
  nameWithType: ITranslationProvider.SupportsPlaceables
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsPlaceables
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a flag which indicates whether the translation provider supports the detection \nand handling of placeables, and will return them as part of the search result.\n"
  syntax:
    content: bool SupportsPlaceables { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsPlaceables As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsPlaceables*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTranslation
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTranslation
  id: SupportsTranslation
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SupportsTranslation
  nameWithType: ITranslationProvider.SupportsTranslation
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTranslation
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a flag which indicates whether the translation provider supports translation \nsearch (exact and/or fuzzy search) and the generation of translation proposals. In most \ncases this flag will be <code>true</code>. If this \nvalue is <code>false</code>, the translation provider can not be used to request translations, \nbut can still be used to search for concordance matches, if <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsConcordanceSearch\" data-throw-if-not-resolved=\"false\"></xref>\nis <code>true</code>. \n"
  syntax:
    content: bool SupportsTranslation { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsTranslation As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTranslation*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsFuzzySearch
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsFuzzySearch
  id: SupportsFuzzySearch
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SupportsFuzzySearch
  nameWithType: ITranslationProvider.SupportsFuzzySearch
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsFuzzySearch
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a flag which indicates whether the translation provider supports fuzzy search. \nThis value should be <code>false</code> if <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTranslation\" data-throw-if-not-resolved=\"false\"></xref> is <code>false</code>.\n"
  syntax:
    content: bool SupportsFuzzySearch { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsFuzzySearch As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsFuzzySearch*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsConcordanceSearch
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsConcordanceSearch
  id: SupportsConcordanceSearch
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SupportsConcordanceSearch
  nameWithType: ITranslationProvider.SupportsConcordanceSearch
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsConcordanceSearch
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a flag which indicates whether the translation provider supports concordance \nsearch in the source or the target language. For more detailed information, \nsee <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsSourceConcordanceSearch\" data-throw-if-not-resolved=\"false\"></xref> \nand <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTargetConcordanceSearch\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: bool SupportsConcordanceSearch { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsConcordanceSearch As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsConcordanceSearch*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsSourceConcordanceSearch
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsSourceConcordanceSearch
  id: SupportsSourceConcordanceSearch
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SupportsSourceConcordanceSearch
  nameWithType: ITranslationProvider.SupportsSourceConcordanceSearch
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsSourceConcordanceSearch
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a flag which indicates whether the translation provider supports concordance \nsearch in the source language.\n"
  syntax:
    content: bool SupportsSourceConcordanceSearch { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsSourceConcordanceSearch As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsSourceConcordanceSearch*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTargetConcordanceSearch
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTargetConcordanceSearch
  id: SupportsTargetConcordanceSearch
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SupportsTargetConcordanceSearch
  nameWithType: ITranslationProvider.SupportsTargetConcordanceSearch
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTargetConcordanceSearch
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a flag which indicates whether the translation provider supports concordance \nsearch in the target language.\n"
  syntax:
    content: bool SupportsTargetConcordanceSearch { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsTargetConcordanceSearch As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTargetConcordanceSearch*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsWordCounts
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsWordCounts
  id: SupportsWordCounts
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: SupportsWordCounts
  nameWithType: ITranslationProvider.SupportsWordCounts
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsWordCounts
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a flag which indicates whether the translation provider will compute and return \nword counts in searches.\n"
  syntax:
    content: bool SupportsWordCounts { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property SupportsWordCounts As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsWordCounts*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.TranslationMethod
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.TranslationMethod
  id: TranslationMethod
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: TranslationMethod
  nameWithType: ITranslationProvider.TranslationMethod
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.TranslationMethod
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets the primary method how the translation provider generates translations.\n"
  syntax:
    content: TranslationMethod TranslationMethod { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMethod
    content.vb: ReadOnly Property TranslationMethod As TranslationMethod
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.TranslationMethod*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.IsReadOnly
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.IsReadOnly
  id: IsReadOnly
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ITranslationProvider.IsReadOnly
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.IsReadOnly
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a flag which indicates whether the translation provider or its underlying storage \nare read-only. If this flag is <code>true</code>, no data can be deleted, updated, or \nadded.\n"
  syntax:
    content: bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsReadOnly As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.IsReadOnly*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsLanguageDirection*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsLanguageDirection
  isExternal: true
  name: SupportsLanguageDirection
  nameWithType: ITranslationProvider.SupportsLanguageDirection
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsLanguageDirection
- uid: Sdl.LanguagePlatform.Core.LanguagePair
  commentId: T:Sdl.LanguagePlatform.Core.LanguagePair
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: LanguagePair
  nameWithType: LanguagePair
  fullName: Sdl.LanguagePlatform.Core.LanguagePair
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.GetLanguageDirection*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.GetLanguageDirection
  isExternal: true
  name: GetLanguageDirection
  nameWithType: ITranslationProvider.GetLanguageDirection
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.GetLanguageDirection
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: ITranslationProviderLanguageDirection
  nameWithType: ITranslationProviderLanguageDirection
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderLanguageDirection
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.RefreshStatusInfo*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.RefreshStatusInfo
  isExternal: true
  name: RefreshStatusInfo
  nameWithType: ITranslationProvider.RefreshStatusInfo
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.RefreshStatusInfo
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SerializeState*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SerializeState
  isExternal: true
  name: SerializeState
  nameWithType: ITranslationProvider.SerializeState
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SerializeState
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.LoadState*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.LoadState
  isExternal: true
  name: LoadState
  nameWithType: ITranslationProvider.LoadState
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.LoadState
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.StatusInfo*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.StatusInfo
  isExternal: true
  name: StatusInfo
  nameWithType: ITranslationProvider.StatusInfo
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.StatusInfo
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ProviderStatusInfo
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ProviderStatusInfo
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: ProviderStatusInfo
  nameWithType: ProviderStatusInfo
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ProviderStatusInfo
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.Uri*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.Uri
  isExternal: true
  name: Uri
  nameWithType: ITranslationProvider.Uri
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.Uri
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.Name*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.Name
  isExternal: true
  name: Name
  nameWithType: ITranslationProvider.Name
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.Name
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTaggedInput*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTaggedInput
  isExternal: true
  name: SupportsTaggedInput
  nameWithType: ITranslationProvider.SupportsTaggedInput
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTaggedInput
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsScoring*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsScoring
  isExternal: true
  name: SupportsScoring
  nameWithType: ITranslationProvider.SupportsScoring
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsScoring
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsSearchForTranslationUnits*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsSearchForTranslationUnits
  isExternal: true
  name: SupportsSearchForTranslationUnits
  nameWithType: ITranslationProvider.SupportsSearchForTranslationUnits
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsSearchForTranslationUnits
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsMultipleResults*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsMultipleResults
  isExternal: true
  name: SupportsMultipleResults
  nameWithType: ITranslationProvider.SupportsMultipleResults
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsMultipleResults
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsFilters*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsFilters
  isExternal: true
  name: SupportsFilters
  nameWithType: ITranslationProvider.SupportsFilters
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsFilters
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsPenalties*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsPenalties
  isExternal: true
  name: SupportsPenalties
  nameWithType: ITranslationProvider.SupportsPenalties
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsPenalties
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsStructureContext*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsStructureContext
  isExternal: true
  name: SupportsStructureContext
  nameWithType: ITranslationProvider.SupportsStructureContext
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsStructureContext
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsDocumentSearches*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsDocumentSearches
  isExternal: true
  name: SupportsDocumentSearches
  nameWithType: ITranslationProvider.SupportsDocumentSearches
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsDocumentSearches
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsUpdate*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsUpdate
  isExternal: true
  name: SupportsUpdate
  nameWithType: ITranslationProvider.SupportsUpdate
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsUpdate
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsPlaceables*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsPlaceables
  isExternal: true
  name: SupportsPlaceables
  nameWithType: ITranslationProvider.SupportsPlaceables
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsPlaceables
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTranslation*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTranslation
  isExternal: true
  name: SupportsTranslation
  nameWithType: ITranslationProvider.SupportsTranslation
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTranslation
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsFuzzySearch*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsFuzzySearch
  isExternal: true
  name: SupportsFuzzySearch
  nameWithType: ITranslationProvider.SupportsFuzzySearch
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsFuzzySearch
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsConcordanceSearch*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsConcordanceSearch
  isExternal: true
  name: SupportsConcordanceSearch
  nameWithType: ITranslationProvider.SupportsConcordanceSearch
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsConcordanceSearch
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsSourceConcordanceSearch*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsSourceConcordanceSearch
  isExternal: true
  name: SupportsSourceConcordanceSearch
  nameWithType: ITranslationProvider.SupportsSourceConcordanceSearch
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsSourceConcordanceSearch
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTargetConcordanceSearch*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTargetConcordanceSearch
  isExternal: true
  name: SupportsTargetConcordanceSearch
  nameWithType: ITranslationProvider.SupportsTargetConcordanceSearch
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsTargetConcordanceSearch
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsWordCounts*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsWordCounts
  isExternal: true
  name: SupportsWordCounts
  nameWithType: ITranslationProvider.SupportsWordCounts
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SupportsWordCounts
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.TranslationMethod*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.TranslationMethod
  isExternal: true
  name: TranslationMethod
  nameWithType: ITranslationProvider.TranslationMethod
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.TranslationMethod
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMethod
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMethod
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: TranslationMethod
  nameWithType: TranslationMethod
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMethod
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.IsReadOnly*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ITranslationProvider.IsReadOnly
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.IsReadOnly
