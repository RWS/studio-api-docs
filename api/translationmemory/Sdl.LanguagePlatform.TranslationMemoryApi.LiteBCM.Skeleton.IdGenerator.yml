### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator
  id: IdGenerator
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.#ctor
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.GetNext``1
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.Update``1(``0)
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.UpdateFrom(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.FileSkeleton)
  - Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.UpdateFrom``1(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection{``0})
  langs:
  - csharp
  - vb
  name: IdGenerator
  nameWithType: IdGenerator
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  summary: "\nCreates unique numeric IDs for all the elements in different <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.FileSkeleton\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  syntax:
    content: public class IdGenerator
    content.vb: Public Class IdGenerator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.GetNext``1
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.GetNext``1
  id: GetNext``1
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator
  langs:
  - csharp
  - vb
  name: GetNext<T>()
  nameWithType: IdGenerator.GetNext<T>()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.GetNext<T>()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  summary: "\nGets the next ID.\n"
  syntax:
    content: >-
      public int GetNext<T>()
          where T : SkeletonItem
    typeParameters:
    - id: T
    return:
      type: System.Int32
      description: The next ID in the sequence.
    content.vb: Public Function GetNext(Of T As SkeletonItem) As Integer
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.GetNext*
  nameWithType.vb: IdGenerator.GetNext(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.GetNext(Of T)()
  name.vb: GetNext(Of T)()
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.Update``1(``0)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.Update``1(``0)
  id: Update``1(``0)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator
  langs:
  - csharp
  - vb
  name: Update<T>(T)
  nameWithType: IdGenerator.Update<T>(T)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.Update<T>(T)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  summary: "\nUpdates the ID sequence with the ID of the specified item.\n"
  syntax:
    content: >-
      public void Update<T>(T item)
          where T : SkeletonItem
    parameters:
    - id: item
      type: '{T}'
      description: The item.
    typeParameters:
    - id: T
    content.vb: Public Sub Update(Of T As SkeletonItem)(item As T)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.Update*
  nameWithType.vb: IdGenerator.Update(Of T)(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.Update(Of T)(T)
  name.vb: Update(Of T)(T)
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.UpdateFrom(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.FileSkeleton)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.UpdateFrom(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.FileSkeleton)
  id: UpdateFrom(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.FileSkeleton)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator
  langs:
  - csharp
  - vb
  name: UpdateFrom(FileSkeleton)
  nameWithType: IdGenerator.UpdateFrom(FileSkeleton)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.UpdateFrom(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.FileSkeleton)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  summary: "\nUpdates the ID sequence with the values from the specified <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.FileSkeleton\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public void UpdateFrom(FileSkeleton skeleton)
    parameters:
    - id: skeleton
      type: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.FileSkeleton
      description: The <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.FileSkeleton" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub UpdateFrom(skeleton As FileSkeleton)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.UpdateFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.UpdateFrom``1(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection{``0})
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.UpdateFrom``1(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection{``0})
  id: UpdateFrom``1(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection{``0})
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator
  langs:
  - csharp
  - vb
  name: UpdateFrom<T>(SkeletonCollection<T>)
  nameWithType: IdGenerator.UpdateFrom<T>(SkeletonCollection<T>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.UpdateFrom<T>(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection<T>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  summary: "\nUpdates the ID sequence with the values from the specified SkeletonCollection\n"
  syntax:
    content: >-
      public void UpdateFrom<T>(SkeletonCollection<T> skeletonCollection)
          where T : SkeletonItem
    parameters:
    - id: skeletonCollection
      type: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection{{T}}
    typeParameters:
    - id: T
    content.vb: Public Sub UpdateFrom(Of T As SkeletonItem)(skeletonCollection As SkeletonCollection(Of T))
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.UpdateFrom*
  nameWithType.vb: IdGenerator.UpdateFrom(Of T)(SkeletonCollection(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.UpdateFrom(Of T)(Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection(Of T))
  name.vb: UpdateFrom(Of T)(SkeletonCollection(Of T))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator
  langs:
  - csharp
  - vb
  name: IdGenerator()
  nameWithType: IdGenerator.IdGenerator()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.IdGenerator()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  syntax:
    content: public IdGenerator()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.GetNext*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.GetNext
  isExternal: true
  name: GetNext
  nameWithType: IdGenerator.GetNext
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.GetNext
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.Update*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.Update
  isExternal: true
  name: Update
  nameWithType: IdGenerator.Update
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.Update
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.UpdateFrom*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.UpdateFrom
  isExternal: true
  name: UpdateFrom
  nameWithType: IdGenerator.UpdateFrom
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.UpdateFrom
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.FileSkeleton
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.FileSkeleton
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  isExternal: true
  name: FileSkeleton
  nameWithType: FileSkeleton
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.FileSkeleton
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection{{T}}
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection{``0}
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton
  definition: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection`1
  name: SkeletonCollection<T>
  nameWithType: SkeletonCollection<T>
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection<T>
  nameWithType.vb: SkeletonCollection(Of T)
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection(Of T)
  name.vb: SkeletonCollection(Of T)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection`1
    name: SkeletonCollection
    nameWithType: SkeletonCollection
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection`1
    name: SkeletonCollection
    nameWithType: SkeletonCollection
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection`1
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection`1
  isExternal: true
  name: SkeletonCollection<T>
  nameWithType: SkeletonCollection<T>
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection<T>
  nameWithType.vb: SkeletonCollection(Of T)
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection(Of T)
  name.vb: SkeletonCollection(Of T)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection`1
    name: SkeletonCollection
    nameWithType: SkeletonCollection
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection`1
    name: SkeletonCollection
    nameWithType: SkeletonCollection
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.SkeletonCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.#ctor
  isExternal: true
  name: IdGenerator
  nameWithType: IdGenerator.IdGenerator
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.LiteBCM.Skeleton.IdGenerator.IdGenerator
