### YamlMime:ManagedReference
items:
- uid: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3
  commentId: T:Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3
  id: BilingualChiSquareComputer3
  parent: Sdl.Core.FineGrainedAlignment
  children:
  - Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.#ctor(Sdl.LanguagePlatform.Stat.DataLocation2,System.Func{System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Pair{Sdl.LanguagePlatform.Stat.IntSegment}}})
  - Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Progress
  langs:
  - csharp
  - vb
  name: BilingualChiSquareComputer3
  nameWithType: BilingualChiSquareComputer3
  fullName: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3
  type: Class
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public class BilingualChiSquareComputer3
    content.vb: Public Class BilingualChiSquareComputer3
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Progress
  commentId: F:Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Progress
  id: Progress
  parent: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: BilingualChiSquareComputer3.Progress
  fullName: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.Progress
  type: Field
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public EventHandler<TranslationModelProgressEventArgs> Progress
    return:
      type: System.EventHandler{Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs}
    content.vb: Public Progress As EventHandler(Of TranslationModelProgressEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.#ctor(Sdl.LanguagePlatform.Stat.DataLocation2,System.Func{System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Pair{Sdl.LanguagePlatform.Stat.IntSegment}}})
  commentId: M:Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.#ctor(Sdl.LanguagePlatform.Stat.DataLocation2,System.Func{System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Pair{Sdl.LanguagePlatform.Stat.IntSegment}}})
  id: '#ctor(Sdl.LanguagePlatform.Stat.DataLocation2,System.Func{System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Pair{Sdl.LanguagePlatform.Stat.IntSegment}}})'
  parent: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3
  langs:
  - csharp
  - vb
  name: BilingualChiSquareComputer3(DataLocation2, Func<Task<Pair<IntSegment>>>)
  nameWithType: BilingualChiSquareComputer3.BilingualChiSquareComputer3(DataLocation2, Func<Task<Pair<IntSegment>>>)
  fullName: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.BilingualChiSquareComputer3(Sdl.LanguagePlatform.Stat.DataLocation2, System.Func<System.Threading.Tasks.Task<Sdl.LanguagePlatform.Core.Pair<Sdl.LanguagePlatform.Stat.IntSegment>>>)
  type: Constructor
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public BilingualChiSquareComputer3(DataLocation2 location, Func<Task<Pair<IntSegment>>> getSegmentFunc)
    parameters:
    - id: location
      type: Sdl.LanguagePlatform.Stat.DataLocation2
    - id: getSegmentFunc
      type: System.Func{System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Pair{Sdl.LanguagePlatform.Stat.IntSegment}}}
    content.vb: Public Sub New(location As DataLocation2, getSegmentFunc As Func(Of Task(Of Pair(Of IntSegment))))
  overload: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.#ctor*
  nameWithType.vb: BilingualChiSquareComputer3.BilingualChiSquareComputer3(DataLocation2, Func(Of Task(Of Pair(Of IntSegment))))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.BilingualChiSquareComputer3(Sdl.LanguagePlatform.Stat.DataLocation2, System.Func(Of System.Threading.Tasks.Task(Of Sdl.LanguagePlatform.Core.Pair(Of Sdl.LanguagePlatform.Stat.IntSegment))))
  name.vb: BilingualChiSquareComputer3(DataLocation2, Func(Of Task(Of Pair(Of IntSegment))))
references:
- uid: Sdl.Core.FineGrainedAlignment
  commentId: N:Sdl.Core.FineGrainedAlignment
  isExternal: true
  name: Sdl.Core.FineGrainedAlignment
  nameWithType: Sdl.Core.FineGrainedAlignment
  fullName: Sdl.Core.FineGrainedAlignment
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs}
  commentId: T:System.EventHandler{Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<TranslationModelProgressEventArgs>
  nameWithType: EventHandler<TranslationModelProgressEventArgs>
  fullName: System.EventHandler<Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs>
  nameWithType.vb: EventHandler(Of TranslationModelProgressEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs)
  name.vb: EventHandler(Of TranslationModelProgressEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs
    name: TranslationModelProgressEventArgs
    nameWithType: TranslationModelProgressEventArgs
    fullName: Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs
    name: TranslationModelProgressEventArgs
    nameWithType: TranslationModelProgressEventArgs
    fullName: Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.#ctor*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.#ctor
  isExternal: true
  name: BilingualChiSquareComputer3
  nameWithType: BilingualChiSquareComputer3.BilingualChiSquareComputer3
  fullName: Sdl.Core.FineGrainedAlignment.BilingualChiSquareComputer3.BilingualChiSquareComputer3
- uid: Sdl.LanguagePlatform.Stat.DataLocation2
  commentId: '!:Sdl.LanguagePlatform.Stat.DataLocation2'
  isExternal: true
  name: DataLocation2
  nameWithType: DataLocation2
  fullName: Sdl.LanguagePlatform.Stat.DataLocation2
- uid: System.Func{System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Pair{Sdl.LanguagePlatform.Stat.IntSegment}}}
  commentId: T:System.Func{System.Threading.Tasks.Task{Sdl.LanguagePlatform.Core.Pair{Sdl.LanguagePlatform.Stat.IntSegment}}}
  parent: System
  definition: System.Func`1
  name: Func<Task<Pair<IntSegment>>>
  nameWithType: Func<Task<Pair<IntSegment>>>
  fullName: System.Func<System.Threading.Tasks.Task<Sdl.LanguagePlatform.Core.Pair<Sdl.LanguagePlatform.Stat.IntSegment>>>
  nameWithType.vb: Func(Of Task(Of Pair(Of IntSegment)))
  fullName.vb: System.Func(Of System.Threading.Tasks.Task(Of Sdl.LanguagePlatform.Core.Pair(Of Sdl.LanguagePlatform.Stat.IntSegment)))
  name.vb: Func(Of Task(Of Pair(Of IntSegment)))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.Pair`1
    name: Pair
    nameWithType: Pair
    fullName: Sdl.LanguagePlatform.Core.Pair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Stat.IntSegment
    name: IntSegment
    nameWithType: IntSegment
    fullName: Sdl.LanguagePlatform.Stat.IntSegment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.Pair`1
    name: Pair
    nameWithType: Pair
    fullName: Sdl.LanguagePlatform.Core.Pair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Stat.IntSegment
    name: IntSegment
    nameWithType: IntSegment
    fullName: Sdl.LanguagePlatform.Stat.IntSegment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
