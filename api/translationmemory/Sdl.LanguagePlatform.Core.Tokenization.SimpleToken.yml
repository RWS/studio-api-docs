### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  id: SimpleToken
  parent: Sdl.LanguagePlatform.Core.Tokenization
  children:
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor(Sdl.LanguagePlatform.Core.Tokenization.SimpleToken)
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor(System.String)
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor(System.String,Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Duplicate
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Equals(System.Object)
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetHashCode
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetTokenType
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsPlaceable
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsStopword
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsSubstitutable
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Stem
  - Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.ToString
  langs:
  - csharp
  - vb
  name: SimpleToken
  nameWithType: SimpleToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  type: Class
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: >-
    Represents a generic, abstract token, which is a sequence of characters in the input. A

    token is identified using a tokenizer, which breaks up the sequence of characters in the 

    input into a sequence of tokens. That token sequence is non-overlapping, but not necessarily

    contiguous.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class SimpleToken : Token
    content.vb: >-
      <DataContract>

      Public Class SimpleToken Inherits Token
  inheritance:
  - System.Object
  - Sdl.LanguagePlatform.Core.SegmentElement
  - Sdl.LanguagePlatform.Core.Tokenization.Token
  derivedClasses:
  - Sdl.LanguagePlatform.Core.Tokenization.GenericPlaceableToken
  inheritedMembers:
  - Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
  - Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  - Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
  - Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Text
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Span
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Type
  - Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
  - Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
  - Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
  - Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
  - Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  langs:
  - csharp
  - vb
  name: SimpleToken()
  nameWithType: SimpleToken.SimpleToken()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SimpleToken()
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: Initializes a new instance with default values.
  example: []
  syntax:
    content: public SimpleToken()
    content.vb: Public Sub New()
  overload: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor*
  nameWithType.vb: SimpleToken.New()
  fullName.vb: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.New()
  name.vb: New()
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor(System.String)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  langs:
  - csharp
  - vb
  name: SimpleToken(string)
  nameWithType: SimpleToken.SimpleToken(string)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SimpleToken(string)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: >-
    Initializes a new instance with the specified token text, and a token type 

    of <xref href="Sdl.LanguagePlatform.Core.Tokenization.TokenType.Word" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public SimpleToken(string text)
    parameters:
    - id: text
      type: System.String
      description: ''
    content.vb: Public Sub New(text As String)
  overload: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor*
  nameWithType.vb: SimpleToken.New(String)
  fullName.vb: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.New(String)
  name.vb: New(String)
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor(Sdl.LanguagePlatform.Core.Tokenization.SimpleToken)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor(Sdl.LanguagePlatform.Core.Tokenization.SimpleToken)
  id: '#ctor(Sdl.LanguagePlatform.Core.Tokenization.SimpleToken)'
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  langs:
  - csharp
  - vb
  name: SimpleToken(SimpleToken)
  nameWithType: SimpleToken.SimpleToken(SimpleToken)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SimpleToken(Sdl.LanguagePlatform.Core.Tokenization.SimpleToken)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: Initializes a new instance with the values from another instance, creating a deep copy.
  example: []
  syntax:
    content: public SimpleToken(SimpleToken other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
      description: The instance to create a copy for
    content.vb: Public Sub New(other As SimpleToken)
  overload: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor*
  nameWithType.vb: SimpleToken.New(SimpleToken)
  fullName.vb: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.New(Sdl.LanguagePlatform.Core.Tokenization.SimpleToken)
  name.vb: New(SimpleToken)
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor(System.String,Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor(System.String,Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  id: '#ctor(System.String,Sdl.LanguagePlatform.Core.Tokenization.TokenType)'
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  langs:
  - csharp
  - vb
  name: SimpleToken(string, TokenType)
  nameWithType: SimpleToken.SimpleToken(string, TokenType)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SimpleToken(string, Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: Initializes a new instance with the specified values.
  example: []
  syntax:
    content: public SimpleToken(string text, TokenType t)
    parameters:
    - id: text
      type: System.String
      description: The token text
    - id: t
      type: Sdl.LanguagePlatform.Core.Tokenization.TokenType
      description: The token type
    content.vb: Public Sub New(text As String, t As TokenType)
  overload: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor*
  nameWithType.vb: SimpleToken.New(String, TokenType)
  fullName.vb: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.New(String, Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  name.vb: New(String, TokenType)
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Duplicate
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Duplicate
  id: Duplicate
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: SimpleToken.Duplicate()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Duplicate()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: See <xref href="Sdl.LanguagePlatform.Core.SegmentElement.Duplicate" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public override SegmentElement Duplicate()
    return:
      type: Sdl.LanguagePlatform.Core.SegmentElement
      description: A new instance that is a deep copy of this instance.
    content.vb: Public Overrides Function Duplicate() As SegmentElement
  overridden: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
  overload: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Duplicate*
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  id: SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  langs:
  - csharp
  - vb
  name: SetTokenType(TokenType)
  nameWithType: SimpleToken.SetTokenType(TokenType)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: >-
    Overwrites the token type. This should only be done with caution, and to reclassify 

    exchangeable token types (acronyms, words, abbreviations). In particular, do not set

    the token type to one of the special (localizable) token types.
  example: []
  syntax:
    content: protected override void SetTokenType(TokenType tokenType)
    parameters:
    - id: tokenType
      type: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    content.vb: Protected Overrides Sub SetTokenType(tokenType As TokenType)
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  overload: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SetTokenType*
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetTokenType
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetTokenType
  id: GetTokenType
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  langs:
  - csharp
  - vb
  name: GetTokenType()
  nameWithType: SimpleToken.GetTokenType()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetTokenType()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: <xref href="Sdl.LanguagePlatform.Core.Tokenization.Token.Type" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: protected override TokenType GetTokenType()
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    content.vb: Protected Overrides Function GetTokenType() As TokenType
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
  overload: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetTokenType*
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Equals(System.Object)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: SimpleToken.Equals(object)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Equals(object)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: <xref href="System.Object.Equals(object)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: >-
        true if the specified object is equal to the current object;
                    otherwise, false.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
  overload: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Equals*
  nameWithType.vb: SimpleToken.Equals(Object)
  fullName.vb: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Equals(Object)
  name.vb: Equals(Object)
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetHashCode
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetHashCode
  id: GetHashCode
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SimpleToken.GetHashCode()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetHashCode()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: <xref href="System.Object.GetHashCode(object)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
  overload: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetHashCode*
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.ToString
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.ToString
  id: ToString
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SimpleToken.ToString()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.ToString()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: <xref href="System.Object.ToString" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representation of the object, for display purposes.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.ToString*
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  id: AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  langs:
  - csharp
  - vb
  name: AcceptSegmentElementVisitor(ISegmentElementVisitor)
  nameWithType: SimpleToken.AcceptSegmentElementVisitor(ISegmentElementVisitor)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: Visitor pattern implementation. Calls <xref href="Sdl.LanguagePlatform.Core.ISegmentElementVisitor.VisitSimpleToken(Sdl.LanguagePlatform.Core.Tokenization.SimpleToken)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override void AcceptSegmentElementVisitor(ISegmentElementVisitor visitor)
    parameters:
    - id: visitor
      type: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
      description: The visitor instance
    content.vb: Public Overrides Sub AcceptSegmentElementVisitor(visitor As ISegmentElementVisitor)
  overridden: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  overload: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.AcceptSegmentElementVisitor*
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsPlaceable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsPlaceable
  id: IsPlaceable
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  langs:
  - csharp
  - vb
  name: IsPlaceable
  nameWithType: SimpleToken.IsPlaceable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsPlaceable
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: >-
    <xref href="Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable" data-throw-if-not-resolved="false"></xref>. Returns <code>true</code> if the token represents

    an acronym, a variable, a URI, or a generic text placeable.
  example: []
  syntax:
    content: public override bool IsPlaceable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsPlaceable As Boolean
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable
  overload: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsPlaceable*
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsSubstitutable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsSubstitutable
  id: IsSubstitutable
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  langs:
  - csharp
  - vb
  name: IsSubstitutable
  nameWithType: SimpleToken.IsSubstitutable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsSubstitutable
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: >-
    <xref href="Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable" data-throw-if-not-resolved="false"></xref>. Returns <code>true</code> if this token represents

    a variable.
  example: []
  syntax:
    content: public override bool IsSubstitutable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsSubstitutable As Boolean
  overridden: Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable
  overload: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsSubstitutable*
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Stem
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Stem
  id: Stem
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  langs:
  - csharp
  - vb
  name: Stem
  nameWithType: SimpleToken.Stem
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Stem
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: An optional stem to assign to this token. Stems are used for TM search and scoring.
  example: []
  syntax:
    content: >-
      [DataMember]

      public string Stem { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public Property Stem As String
  overload: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Stem*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsStopword
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsStopword
  id: IsStopword
  parent: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  langs:
  - csharp
  - vb
  name: IsStopword
  nameWithType: SimpleToken.IsStopword
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsStopword
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  summary: Gets or sets whether this token is a stop word
  example: []
  syntax:
    content: public bool IsStopword { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsStopword As Boolean
  overload: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsStopword*
references:
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.Token
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html
  name: Token
  nameWithType: Token
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token
- uid: Sdl.LanguagePlatform.Core.Tokenization
  commentId: N:Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  href: Sdl.html
  name: Sdl.LanguagePlatform.Core.Tokenization
  nameWithType: Sdl.LanguagePlatform.Core.Tokenization
  fullName: Sdl.LanguagePlatform.Core.Tokenization
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core.Tokenization
    name: Tokenization
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core.Tokenization
    name: Tokenization
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Sdl.LanguagePlatform.Core.SegmentElement
  commentId: T:Sdl.LanguagePlatform.Core.SegmentElement
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentElement.html
  name: SegmentElement
  nameWithType: SegmentElement
  fullName: Sdl.LanguagePlatform.Core.SegmentElement
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_GetWeakHashCode
  name: GetWeakHashCode()
  nameWithType: Token.GetWeakHashCode()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    name: GetWeakHashCode
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_GetWeakHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetWeakHashCode
    name: GetWeakHashCode
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_GetWeakHashCode
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_GetBundleSimilarity_Sdl_LanguagePlatform_Core_SegmentElement_
  name: GetBundleSimilarity(SegmentElement)
  nameWithType: Token.GetBundleSimilarity(SegmentElement)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetBundleSimilarity
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_GetBundleSimilarity_Sdl_LanguagePlatform_Core_SegmentElement_
  - name: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetBundleSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetBundleSimilarity
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_GetBundleSimilarity_Sdl_LanguagePlatform_Core_SegmentElement_
  - name: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html
  - name: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_GetIdentityStringAsync
  name: GetIdentityStringAsync()
  nameWithType: Token.GetIdentityStringAsync()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
    name: GetIdentityStringAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_GetIdentityStringAsync
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetIdentityStringAsync
    name: GetIdentityStringAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_GetIdentityStringAsync
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_TokenizationContext
  name: TokenizationContext
  nameWithType: Token.TokenizationContext
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.TokenizationContext
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Text
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Text
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_Text
  name: Text
  nameWithType: Token.Text
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Text
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Span
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Span
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_Span
  name: Span
  nameWithType: Token.Span
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Span
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Type
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Type
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_Type
  name: Type
  nameWithType: Token.Type
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Type
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_IsWord
  name: IsWord
  nameWithType: Token.IsWord
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWord
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_IsPunctuation
  name: IsPunctuation
  nameWithType: Token.IsPunctuation
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPunctuation
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_IsWhitespace
  name: IsWhitespace
  nameWithType: Token.IsWhitespace
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsWhitespace
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_Culture
  name: Culture
  nameWithType: Token.Culture
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Culture
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_GetSimilarity_Sdl_LanguagePlatform_Core_SegmentElement_
  name: GetSimilarity(SegmentElement)
  nameWithType: SegmentElement.GetSimilarity(SegmentElement)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarity
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_GetSimilarity_Sdl_LanguagePlatform_Core_SegmentElement_
  - name: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarity
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_GetSimilarity_Sdl_LanguagePlatform_Core_SegmentElement_
  - name: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html
  - name: )
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_GetSimilarity_Sdl_LanguagePlatform_Core_SegmentElement_System_Boolean_
  name: GetSimilarity(SegmentElement, bool)
  nameWithType: SegmentElement.GetSimilarity(SegmentElement, bool)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement, bool)
  nameWithType.vb: SegmentElement.GetSimilarity(SegmentElement, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement, Boolean)
  name.vb: GetSimilarity(SegmentElement, Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarity
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_GetSimilarity_Sdl_LanguagePlatform_Core_SegmentElement_System_Boolean_
  - name: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarity(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarity
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_GetSimilarity_Sdl_LanguagePlatform_Core_SegmentElement_System_Boolean_
  - name: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_GetSimilarityAsync_Sdl_LanguagePlatform_Core_SegmentElement_
  name: GetSimilarityAsync(SegmentElement)
  nameWithType: SegmentElement.GetSimilarityAsync(SegmentElement)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarityAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_GetSimilarityAsync_Sdl_LanguagePlatform_Core_SegmentElement_
  - name: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement)
    name: GetSimilarityAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_GetSimilarityAsync_Sdl_LanguagePlatform_Core_SegmentElement_
  - name: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html
  - name: )
- uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_GetSimilarityAsync_Sdl_LanguagePlatform_Core_SegmentElement_System_Boolean_
  name: GetSimilarityAsync(SegmentElement, bool)
  nameWithType: SegmentElement.GetSimilarityAsync(SegmentElement, bool)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement, bool)
  nameWithType.vb: SegmentElement.GetSimilarityAsync(SegmentElement, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement, Boolean)
  name.vb: GetSimilarityAsync(SegmentElement, Boolean)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarityAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_GetSimilarityAsync_Sdl_LanguagePlatform_Core_SegmentElement_System_Boolean_
  - name: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.GetSimilarityAsync(Sdl.LanguagePlatform.Core.SegmentElement,System.Boolean)
    name: GetSimilarityAsync
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_GetSimilarityAsync_Sdl_LanguagePlatform_Core_SegmentElement_System_Boolean_
  - name: (
  - uid: Sdl.LanguagePlatform.Core.SegmentElement
    name: SegmentElement
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  href: Sdl.html
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.#ctor
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.html#Sdl_LanguagePlatform_Core_Tokenization_SimpleToken__ctor
  name: SimpleToken
  nameWithType: SimpleToken.SimpleToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SimpleToken
  nameWithType.vb: SimpleToken.New
  fullName.vb: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.New
  name.vb: New
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenType.Word
  commentId: F:Sdl.LanguagePlatform.Core.Tokenization.TokenType.Word
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.TokenType.html#Sdl_LanguagePlatform_Core_Tokenization_TokenType_Word
  name: Word
  nameWithType: TokenType.Word
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenType.Word
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.html
  name: SimpleToken
  nameWithType: SimpleToken
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenType
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.TokenType
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.TokenType.html
  name: TokenType
  nameWithType: TokenType
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenType
- uid: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_Duplicate
  name: Duplicate()
  nameWithType: SegmentElement.Duplicate()
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    name: Duplicate
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_Duplicate
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.Duplicate
    name: Duplicate
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_Duplicate
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Duplicate*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Duplicate
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.html#Sdl_LanguagePlatform_Core_Tokenization_SimpleToken_Duplicate
  name: Duplicate
  nameWithType: SimpleToken.Duplicate
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Duplicate
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_SetTokenType_Sdl_LanguagePlatform_Core_Tokenization_TokenType_
  name: SetTokenType(TokenType)
  nameWithType: Token.SetTokenType(TokenType)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
    name: SetTokenType
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_SetTokenType_Sdl_LanguagePlatform_Core_Tokenization_TokenType_
  - name: (
  - uid: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    name: TokenType
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.TokenType.html
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.SetTokenType(Sdl.LanguagePlatform.Core.Tokenization.TokenType)
    name: SetTokenType
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_SetTokenType_Sdl_LanguagePlatform_Core_Tokenization_TokenType_
  - name: (
  - uid: Sdl.LanguagePlatform.Core.Tokenization.TokenType
    name: TokenType
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.TokenType.html
  - name: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SetTokenType*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SetTokenType
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.html#Sdl_LanguagePlatform_Core_Tokenization_SimpleToken_SetTokenType_Sdl_LanguagePlatform_Core_Tokenization_TokenType_
  name: SetTokenType
  nameWithType: SimpleToken.SetTokenType
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.SetTokenType
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_GetTokenType
  name: GetTokenType()
  nameWithType: Token.GetTokenType()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
    name: GetTokenType
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_GetTokenType
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetTokenType
    name: GetTokenType
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_GetTokenType
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetTokenType*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetTokenType
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.html#Sdl_LanguagePlatform_Core_Tokenization_SimpleToken_GetTokenType
  name: GetTokenType
  nameWithType: SimpleToken.GetTokenType
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetTokenType
- uid: System.Object.Equals(object)
  commentId: M:System.Object.Equals(object)
  isExternal: true
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_Equals_System_Object_
  name: Equals(object)
  nameWithType: Token.Equals(object)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(object)
  nameWithType.vb: Token.Equals(Object)
  fullName.vb: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
    name: Equals
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.Equals(System.Object)
    name: Equals
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Equals*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Equals
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.html#Sdl_LanguagePlatform_Core_Tokenization_SimpleToken_Equals_System_Object_
  name: Equals
  nameWithType: SimpleToken.Equals
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Object.GetHashCode(object)
  commentId: M:System.Object.GetHashCode(object)
  isExternal: true
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_GetHashCode
  name: GetHashCode()
  nameWithType: Token.GetHashCode()
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode()
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
    name: GetHashCode
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token.GetHashCode
    name: GetHashCode
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_GetHashCode
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetHashCode*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetHashCode
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.html#Sdl_LanguagePlatform_Core_Tokenization_SimpleToken_GetHashCode
  name: GetHashCode
  nameWithType: SimpleToken.GetHashCode
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.ToString*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.ToString
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.html#Sdl_LanguagePlatform_Core_Tokenization_SimpleToken_ToString
  name: ToString
  nameWithType: SimpleToken.ToString
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.ToString
- uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor.VisitSimpleToken(Sdl.LanguagePlatform.Core.Tokenization.SimpleToken)
  commentId: M:Sdl.LanguagePlatform.Core.ISegmentElementVisitor.VisitSimpleToken(Sdl.LanguagePlatform.Core.Tokenization.SimpleToken)
  isExternal: true
  href: Sdl.LanguagePlatform.Core.ISegmentElementVisitor.html#Sdl_LanguagePlatform_Core_ISegmentElementVisitor_VisitSimpleToken_Sdl_LanguagePlatform_Core_Tokenization_SimpleToken_
  name: VisitSimpleToken(SimpleToken)
  nameWithType: ISegmentElementVisitor.VisitSimpleToken(SimpleToken)
  fullName: Sdl.LanguagePlatform.Core.ISegmentElementVisitor.VisitSimpleToken(Sdl.LanguagePlatform.Core.Tokenization.SimpleToken)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor.VisitSimpleToken(Sdl.LanguagePlatform.Core.Tokenization.SimpleToken)
    name: VisitSimpleToken
    isExternal: true
    href: Sdl.LanguagePlatform.Core.ISegmentElementVisitor.html#Sdl_LanguagePlatform_Core_ISegmentElementVisitor_VisitSimpleToken_Sdl_LanguagePlatform_Core_Tokenization_SimpleToken_
  - name: (
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
    name: SimpleToken
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.html
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor.VisitSimpleToken(Sdl.LanguagePlatform.Core.Tokenization.SimpleToken)
    name: VisitSimpleToken
    isExternal: true
    href: Sdl.LanguagePlatform.Core.ISegmentElementVisitor.html#Sdl_LanguagePlatform_Core_ISegmentElementVisitor_VisitSimpleToken_Sdl_LanguagePlatform_Core_Tokenization_SimpleToken_
  - name: (
  - uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken
    name: SimpleToken
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.html
  - name: )
- uid: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  parent: Sdl.LanguagePlatform.Core.SegmentElement
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_AcceptSegmentElementVisitor_Sdl_LanguagePlatform_Core_ISegmentElementVisitor_
  name: AcceptSegmentElementVisitor(ISegmentElementVisitor)
  nameWithType: SegmentElement.AcceptSegmentElementVisitor(ISegmentElementVisitor)
  fullName: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
  spec.csharp:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
    name: AcceptSegmentElementVisitor
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_AcceptSegmentElementVisitor_Sdl_LanguagePlatform_Core_ISegmentElementVisitor_
  - name: (
  - uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    name: ISegmentElementVisitor
    isExternal: true
    href: Sdl.LanguagePlatform.Core.ISegmentElementVisitor.html
  - name: )
  spec.vb:
  - uid: Sdl.LanguagePlatform.Core.SegmentElement.AcceptSegmentElementVisitor(Sdl.LanguagePlatform.Core.ISegmentElementVisitor)
    name: AcceptSegmentElementVisitor
    isExternal: true
    href: Sdl.LanguagePlatform.Core.SegmentElement.html#Sdl_LanguagePlatform_Core_SegmentElement_AcceptSegmentElementVisitor_Sdl_LanguagePlatform_Core_ISegmentElementVisitor_
  - name: (
  - uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
    name: ISegmentElementVisitor
    isExternal: true
    href: Sdl.LanguagePlatform.Core.ISegmentElementVisitor.html
  - name: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.AcceptSegmentElementVisitor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.AcceptSegmentElementVisitor
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.html#Sdl_LanguagePlatform_Core_Tokenization_SimpleToken_AcceptSegmentElementVisitor_Sdl_LanguagePlatform_Core_ISegmentElementVisitor_
  name: AcceptSegmentElementVisitor
  nameWithType: SimpleToken.AcceptSegmentElementVisitor
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.AcceptSegmentElementVisitor
- uid: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
  commentId: T:Sdl.LanguagePlatform.Core.ISegmentElementVisitor
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  href: Sdl.LanguagePlatform.Core.ISegmentElementVisitor.html
  name: ISegmentElementVisitor
  nameWithType: ISegmentElementVisitor
  fullName: Sdl.LanguagePlatform.Core.ISegmentElementVisitor
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_IsPlaceable
  name: IsPlaceable
  nameWithType: Token.IsPlaceable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsPlaceable
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsPlaceable*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsPlaceable
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.html#Sdl_LanguagePlatform_Core_Tokenization_SimpleToken_IsPlaceable
  name: IsPlaceable
  nameWithType: SimpleToken.IsPlaceable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsPlaceable
- uid: Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable
  parent: Sdl.LanguagePlatform.Core.Tokenization.Token
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.Token.html#Sdl_LanguagePlatform_Core_Tokenization_Token_IsSubstitutable
  name: IsSubstitutable
  nameWithType: Token.IsSubstitutable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.Token.IsSubstitutable
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsSubstitutable*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsSubstitutable
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.html#Sdl_LanguagePlatform_Core_Tokenization_SimpleToken_IsSubstitutable
  name: IsSubstitutable
  nameWithType: SimpleToken.IsSubstitutable
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsSubstitutable
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Stem*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Stem
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.html#Sdl_LanguagePlatform_Core_Tokenization_SimpleToken_Stem
  name: Stem
  nameWithType: SimpleToken.Stem
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.Stem
- uid: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsStopword*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsStopword
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.html#Sdl_LanguagePlatform_Core_Tokenization_SimpleToken_IsStopword
  name: IsStopword
  nameWithType: SimpleToken.IsStopword
  fullName: Sdl.LanguagePlatform.Core.Tokenization.SimpleToken.IsStopword
