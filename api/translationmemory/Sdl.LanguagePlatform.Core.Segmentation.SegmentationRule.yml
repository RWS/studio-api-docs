### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  commentId: T:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  id: SegmentationRule
  parent: Sdl.LanguagePlatform.Core.Segmentation
  children:
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor(System.String,Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor(System.String,Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext})
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.AddException(Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Clone
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Description
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Exceptions
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindAllMatches(System.String,System.Int32,System.Boolean,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindFirstMatch(System.String,System.Int32,System.Boolean,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.IsEnabled
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MatchesAt(System.String,System.Int32,System.Boolean,System.Boolean)
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MatchingContext
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MinimumChars
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MinimumWords
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Origin
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.ToString
  - Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Type
  langs:
  - csharp
  - vb
  name: SegmentationRule
  nameWithType: SegmentationRule
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  type: Class
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    <p>

    A segmentation rule consist of at least one "positive" SegmentationContext (the matching

    context) and a possibly empty set of exceptions. 

    </p>

    <p>

    A segmentation rule "fires" if the matching context matches a specified position, and either

    the exception list is empty or none of the exceptions matches the same position in the input.

    </p>
  example: []
  syntax:
    content: >-
      [DataContract]

      public class SegmentationRule : ICloneable
    content.vb: >-
      <DataContract>

      Public Class SegmentationRule Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: SegmentationRule()
  nameWithType: SegmentationRule.SegmentationRule()
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.SegmentationRule()
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Initializes a new instance with default values. This constructor is required for

    XML deserialization and should not be used directly.
  example: []
  syntax:
    content: public SegmentationRule()
    content.vb: Public Sub New()
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor*
  nameWithType.vb: SegmentationRule.New()
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.New()
  name.vb: New()
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule)
  id: '#ctor(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule)'
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: SegmentationRule(SegmentationRule)
  nameWithType: SegmentationRule.SegmentationRule(SegmentationRule)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.SegmentationRule(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Initializes a new instance with the values of another instance, creating a deep copy.
  example: []
  syntax:
    content: public SegmentationRule(SegmentationRule other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
      description: The other instance
    content.vb: Public Sub New(other As SegmentationRule)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor*
  nameWithType.vb: SegmentationRule.New(SegmentationRule)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.New(Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule)
  name.vb: New(SegmentationRule)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor(System.String,Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor(System.String,Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext)
  id: '#ctor(System.String,Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext)'
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: SegmentationRule(string, SegmentationContext)
  nameWithType: SegmentationRule.SegmentationRule(string, SegmentationContext)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.SegmentationRule(string, Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Initializes a new instance with the specified values.
  example: []
  syntax:
    content: public SegmentationRule(string description, SegmentationContext matchingContext)
    parameters:
    - id: description
      type: System.String
      description: A description of the rule, for display purposes.
    - id: matchingContext
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext
      description: The matching context for this segmentation rule.
    content.vb: Public Sub New(description As String, matchingContext As SegmentationContext)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor*
  nameWithType.vb: SegmentationRule.New(String, SegmentationContext)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.New(String, Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext)
  name.vb: New(String, SegmentationContext)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor(System.String,Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext})
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor(System.String,Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext})
  id: '#ctor(System.String,Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext})'
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: SegmentationRule(string, SegmentationContext, List<SegmentationContext>)
  nameWithType: SegmentationRule.SegmentationRule(string, SegmentationContext, List<SegmentationContext>)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.SegmentationRule(string, Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext, System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext>)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Initializes a new instance with the specified values.
  example: []
  syntax:
    content: public SegmentationRule(string description, SegmentationContext matchingContext, List<SegmentationContext> exceptions)
    parameters:
    - id: description
      type: System.String
      description: A description of the rule, for display purposes.
    - id: matchingContext
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext
      description: The matching context for this segmentation rule.
    - id: exceptions
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext}
      description: A list of exceptions to attach to the matching context (optional)
    content.vb: Public Sub New(description As String, matchingContext As SegmentationContext, exceptions As List(Of SegmentationContext))
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor*
  nameWithType.vb: SegmentationRule.New(String, SegmentationContext, List(Of SegmentationContext))
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.New(String, Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext, System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext))
  name.vb: New(String, SegmentationContext, List(Of SegmentationContext))
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.ToString
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.ToString
  id: ToString
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SegmentationRule.ToString()
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.ToString()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: <xref href="System.Object.ToString" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representation of the object, for display purposes.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.ToString*
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.AddException(Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.AddException(Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext)
  id: AddException(Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: AddException(SegmentationContext)
  nameWithType: SegmentationRule.AddException(SegmentationContext)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.AddException(Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Adds the provided exception to the list of exceptions.
  example: []
  syntax:
    content: public void AddException(SegmentationContext context)
    parameters:
    - id: context
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext
      description: The exception to add to the rule (non-null)
    content.vb: Public Sub AddException(context As SegmentationContext)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.AddException*
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MatchesAt(System.String,System.Int32,System.Boolean,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MatchesAt(System.String,System.Int32,System.Boolean,System.Boolean)
  id: MatchesAt(System.String,System.Int32,System.Boolean,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: MatchesAt(string, int, bool, bool)
  nameWithType: SegmentationRule.MatchesAt(string, int, bool, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MatchesAt(string, int, bool, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Tests whether the context matches at the specified position. The preceding context, if specified,

    must match up to the position (not including), and the following context must match from that 

    position onwards. If true, a match is postulated directly before position.
  example: []
  syntax:
    content: public bool MatchesAt(string input, int position, bool assumeEof, bool followedByWordBreak)
    parameters:
    - id: input
      type: System.String
      description: The input string to test
    - id: position
      type: System.Int32
      description: The position in the input to test for a match
    - id: assumeEof
      type: System.Boolean
      description: >-
        If true, it is assumed that the end of input has been reached, and 
                    end-of-input constraints will match. If false, any end-of-input constraints will not match.
    - id: followedByWordBreak
      type: System.Boolean
      description: >-
        If true, any end-of-word constraints will match. If false,
                    no end-of-word constraints will match.
    return:
      type: System.Boolean
      description: >-
        true iff the preceding context matches up to the specified position (non-inclusive), 
                    and the following context matches from that position onwards.
    content.vb: Public Function MatchesAt(input As String, position As Integer, assumeEof As Boolean, followedByWordBreak As Boolean) As Boolean
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MatchesAt*
  nameWithType.vb: SegmentationRule.MatchesAt(String, Integer, Boolean, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MatchesAt(String, Integer, Boolean, Boolean)
  name.vb: MatchesAt(String, Integer, Boolean, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindFirstMatch(System.String,System.Int32,System.Boolean,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindFirstMatch(System.String,System.Int32,System.Boolean,System.Boolean)
  id: FindFirstMatch(System.String,System.Int32,System.Boolean,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: FindFirstMatch(string, int, bool, bool)
  nameWithType: SegmentationRule.FindFirstMatch(string, int, bool, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindFirstMatch(string, int, bool, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Finds the first matche of the rule in the input string, starting at the specified position.
  example: []
  syntax:
    content: public int FindFirstMatch(string input, int startOffset, bool assumeEof, bool followedByWordBreak)
    parameters:
    - id: input
      type: System.String
      description: The input string to test
    - id: startOffset
      type: System.Int32
      description: The zero-based position in the input to start the match process from
    - id: assumeEof
      type: System.Boolean
      description: >-
        If true, it is assumed that the end of input has been reached, and 
                    end-of-input constraints will match at the end of the input string. If false, any end-of-input constraints will not match.
    - id: followedByWordBreak
      type: System.Boolean
      description: >-
        If true, any end-of-word constraints will match at the end of the input string. If false,
                    no end-of-word constraints will match.
    return:
      type: System.Int32
      description: The first position in the input where the rule matches, or <code>-1</code> if no match was found.
    content.vb: Public Function FindFirstMatch(input As String, startOffset As Integer, assumeEof As Boolean, followedByWordBreak As Boolean) As Integer
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindFirstMatch*
  nameWithType.vb: SegmentationRule.FindFirstMatch(String, Integer, Boolean, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindFirstMatch(String, Integer, Boolean, Boolean)
  name.vb: FindFirstMatch(String, Integer, Boolean, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindAllMatches(System.String,System.Int32,System.Boolean,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindAllMatches(System.String,System.Int32,System.Boolean,System.Boolean)
  id: FindAllMatches(System.String,System.Int32,System.Boolean,System.Boolean)
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: FindAllMatches(string, int, bool, bool)
  nameWithType: SegmentationRule.FindAllMatches(string, int, bool, bool)
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindAllMatches(string, int, bool, bool)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  syntax:
    content: public List<int> FindAllMatches(string input, int startOffset, bool assumeEof, bool followedByWordBreak)
    parameters:
    - id: input
      type: System.String
    - id: startOffset
      type: System.Int32
    - id: assumeEof
      type: System.Boolean
    - id: followedByWordBreak
      type: System.Boolean
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public Function FindAllMatches(input As String, startOffset As Integer, assumeEof As Boolean, followedByWordBreak As Boolean) As List(Of Integer)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindAllMatches*
  nameWithType.vb: SegmentationRule.FindAllMatches(String, Integer, Boolean, Boolean)
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindAllMatches(String, Integer, Boolean, Boolean)
  name.vb: FindAllMatches(String, Integer, Boolean, Boolean)
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Clone
  commentId: M:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Clone
  id: Clone
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SegmentationRule.Clone()
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Clone()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: <xref href="System.ICloneable.Clone" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public object Clone()
    return:
      type: System.Object
      description: A new object that is a deep copy of this instance.
    content.vb: Public Function Clone() As Object
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Clone*
  implements:
  - System.ICloneable.Clone
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.IsEnabled
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.IsEnabled
  id: IsEnabled
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: IsEnabled
  nameWithType: SegmentationRule.IsEnabled
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.IsEnabled
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Gets or sets a flag to control whether this rule is currently enabled. Note that not

    all clients evaluate this flag yet, and all rules (whether enabled or not) may be used

    during segmentation.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool IsEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property IsEnabled As Boolean
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.IsEnabled*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MinimumChars
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MinimumChars
  id: MinimumChars
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: MinimumChars
  nameWithType: SegmentationRule.MinimumChars
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MinimumChars
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    The minimum number of chars a segment must have. 

    <p>Currently not yet supported</p>
  example: []
  syntax:
    content: >-
      [DataMember]

      public int MinimumChars { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property MinimumChars As Integer
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MinimumChars*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MinimumWords
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MinimumWords
  id: MinimumWords
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: MinimumWords
  nameWithType: SegmentationRule.MinimumWords
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MinimumWords
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    The minimum number of words a segment must have. 

    <p>Currently not yet supported</p>
  example: []
  syntax:
    content: >-
      [DataMember]

      public int MinimumWords { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property MinimumWords As Integer
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MinimumWords*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Type
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Type
  id: Type
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: SegmentationRule.Type
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Type
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Gets or sets the rule type, which is used for display purposes. This value must match

    the rule's break character and should not be modified after a rule has been created or

    obtained.
  example: []
  syntax:
    content: >-
      [DataMember]

      public RuleType Type { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.RuleType
    content.vb: >-
      <DataMember>

      Public Property Type As RuleType
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Type*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Origin
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Origin
  id: Origin
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: SegmentationRule.Origin
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Origin
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: >-
    Gets or sets the origin of this rule. This is used for display and system purposes. The

    value should not be modified after a rule has been created or obtained.
  example: []
  syntax:
    content: >-
      [DataMember]

      public RuleOrigin Origin { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.RuleOrigin
    content.vb: >-
      <DataMember>

      Public Property Origin As RuleOrigin
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Origin*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Description
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Description
  id: Description
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: SegmentationRule.Description
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Description
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Gets or sets the description of this rule.
  example: []
  syntax:
    content: >-
      [DataMember]

      public LocalizedString Description { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
    content.vb: >-
      <DataMember>

      Public Property Description As LocalizedString
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Description*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MatchingContext
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MatchingContext
  id: MatchingContext
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: MatchingContext
  nameWithType: SegmentationRule.MatchingContext
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MatchingContext
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Gets or sets the matching context for this rule (non-null).
  example: []
  syntax:
    content: >-
      [DataMember]

      public SegmentationContext MatchingContext { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext
    content.vb: >-
      <DataMember>

      Public Property MatchingContext As SegmentationContext
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MatchingContext*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Exceptions
  commentId: P:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Exceptions
  id: Exceptions
  parent: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  langs:
  - csharp
  - vb
  name: Exceptions
  nameWithType: SegmentationRule.Exceptions
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Exceptions
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Segmentation
  summary: Gets or sets the exceptions for this rule.
  example: []
  syntax:
    content: >-
      [DataMember]

      public List<SegmentationContext> Exceptions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext}
    content.vb: >-
      <DataMember>

      Public Property Exceptions As List(Of SegmentationContext)
  overload: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Exceptions*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
references:
- uid: Sdl.LanguagePlatform.Core.Segmentation
  commentId: N:Sdl.LanguagePlatform.Core.Segmentation
  isExternal: true
  href: Sdl.html
  name: Sdl.LanguagePlatform.Core.Segmentation
  nameWithType: Sdl.LanguagePlatform.Core.Segmentation
  fullName: Sdl.LanguagePlatform.Core.Segmentation
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core.Segmentation
    name: Segmentation
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core.Segmentation
    name: Segmentation
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.#ctor
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRule__ctor
  name: SegmentationRule
  nameWithType: SegmentationRule.SegmentationRule
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.SegmentationRule
  nameWithType.vb: SegmentationRule.New
  fullName.vb: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.New
  name.vb: New
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  commentId: T:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
  parent: Sdl.LanguagePlatform.Core.Segmentation
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html
  name: SegmentationRule
  nameWithType: SegmentationRule
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext
  commentId: T:Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext
  parent: Sdl.LanguagePlatform.Core.Segmentation
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext.html
  name: SegmentationContext
  nameWithType: SegmentationContext
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<SegmentationContext>
  nameWithType: List<SegmentationContext>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext>
  nameWithType.vb: List(Of SegmentationContext)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext)
  name.vb: List(Of SegmentationContext)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext
    name: SegmentationContext
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext
    name: SegmentationContext
    isExternal: true
    href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationContext.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.ToString*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.ToString
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRule_ToString
  name: ToString
  nameWithType: SegmentationRule.ToString
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.ToString
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.AddException*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.AddException
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRule_AddException_Sdl_LanguagePlatform_Core_Segmentation_SegmentationContext_
  name: AddException
  nameWithType: SegmentationRule.AddException
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.AddException
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MatchesAt*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MatchesAt
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRule_MatchesAt_System_String_System_Int32_System_Boolean_System_Boolean_
  name: MatchesAt
  nameWithType: SegmentationRule.MatchesAt
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MatchesAt
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindFirstMatch*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindFirstMatch
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRule_FindFirstMatch_System_String_System_Int32_System_Boolean_System_Boolean_
  name: FindFirstMatch
  nameWithType: SegmentationRule.FindFirstMatch
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindFirstMatch
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindAllMatches*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindAllMatches
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRule_FindAllMatches_System_String_System_Int32_System_Boolean_System_Boolean_
  name: FindAllMatches
  nameWithType: SegmentationRule.FindAllMatches
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.FindAllMatches
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<int>
  nameWithType: List<int>
  fullName: System.Collections.Generic.List<int>
  nameWithType.vb: List(Of Integer)
  fullName.vb: System.Collections.Generic.List(Of Integer)
  name.vb: List(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Clone*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Clone
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRule_Clone
  name: Clone
  nameWithType: SegmentationRule.Clone
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Clone
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.IsEnabled*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.IsEnabled
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRule_IsEnabled
  name: IsEnabled
  nameWithType: SegmentationRule.IsEnabled
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.IsEnabled
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MinimumChars*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MinimumChars
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRule_MinimumChars
  name: MinimumChars
  nameWithType: SegmentationRule.MinimumChars
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MinimumChars
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MinimumWords*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MinimumWords
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRule_MinimumWords
  name: MinimumWords
  nameWithType: SegmentationRule.MinimumWords
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MinimumWords
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Type*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Type
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRule_Type
  name: Type
  nameWithType: SegmentationRule.Type
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Type
- uid: Sdl.LanguagePlatform.Core.Segmentation.RuleType
  commentId: T:Sdl.LanguagePlatform.Core.Segmentation.RuleType
  parent: Sdl.LanguagePlatform.Core.Segmentation
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.RuleType.html
  name: RuleType
  nameWithType: RuleType
  fullName: Sdl.LanguagePlatform.Core.Segmentation.RuleType
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Origin*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Origin
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRule_Origin
  name: Origin
  nameWithType: SegmentationRule.Origin
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Origin
- uid: Sdl.LanguagePlatform.Core.Segmentation.RuleOrigin
  commentId: T:Sdl.LanguagePlatform.Core.Segmentation.RuleOrigin
  parent: Sdl.LanguagePlatform.Core.Segmentation
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.RuleOrigin.html
  name: RuleOrigin
  nameWithType: RuleOrigin
  fullName: Sdl.LanguagePlatform.Core.Segmentation.RuleOrigin
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Description*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Description
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRule_Description
  name: Description
  nameWithType: SegmentationRule.Description
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Description
- uid: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  commentId: T:Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
  parent: Sdl.LanguagePlatform.Core.Segmentation
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString.html
  name: LocalizedString
  nameWithType: LocalizedString
  fullName: Sdl.LanguagePlatform.Core.Segmentation.LocalizedString
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MatchingContext*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MatchingContext
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRule_MatchingContext
  name: MatchingContext
  nameWithType: SegmentationRule.MatchingContext
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.MatchingContext
- uid: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Exceptions*
  commentId: Overload:Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Exceptions
  isExternal: true
  href: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.html#Sdl_LanguagePlatform_Core_Segmentation_SegmentationRule_Exceptions
  name: Exceptions
  nameWithType: SegmentationRule.Exceptions
  fullName: Sdl.LanguagePlatform.Core.Segmentation.SegmentationRule.Exceptions
