### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.SearchResult
  id: SearchResult
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.SearchResult.#ctor(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  - Sdl.LanguagePlatform.TranslationMemory.SearchResult.CascadeEntryIndex
  - Sdl.LanguagePlatform.TranslationMemory.SearchResult.ContextData
  - Sdl.LanguagePlatform.TranslationMemory.SearchResult.MatchingPlaceholderTokens
  - Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryPlaceables
  - Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryTranslationUnit
  - Sdl.LanguagePlatform.TranslationMemory.SearchResult.MetaData
  - Sdl.LanguagePlatform.TranslationMemory.SearchResult.PlaceableAssociations
  - Sdl.LanguagePlatform.TranslationMemory.SearchResult.ScoringResult
  - Sdl.LanguagePlatform.TranslationMemory.SearchResult.TranslationProposal
  langs:
  - csharp
  - vb
  name: SearchResult
  nameWithType: SearchResult
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nEncapsulates the result of a search operation, a memory translation unit, \npossiby annotated with score, placeables and context information.\n"
  syntax:
    content: public class SearchResult
    content.vb: Public Class SearchResult
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.LanguagePlatform.TranslationMemory.SubsegmentSearchResult
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.#ctor(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.SearchResult.#ctor(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  id: '#ctor(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)'
  parent: Sdl.LanguagePlatform.TranslationMemory.SearchResult
  langs:
  - csharp
  - vb
  name: SearchResult(TranslationUnit)
  nameWithType: SearchResult.SearchResult(TranslationUnit)
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.SearchResult(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nInitializes a new instance of the SearchResult class.\n"
  syntax:
    content: public SearchResult(TranslationUnit tmTu)
    parameters:
    - id: tmTu
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
      description: The translation unit found by the search operation.
    content.vb: Public Sub New(tmTu As TranslationUnit)
  overload: Sdl.LanguagePlatform.TranslationMemory.SearchResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.ScoringResult
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.SearchResult.ScoringResult
  id: ScoringResult
  parent: Sdl.LanguagePlatform.TranslationMemory.SearchResult
  langs:
  - csharp
  - vb
  name: ScoringResult
  nameWithType: SearchResult.ScoringResult
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.ScoringResult
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the scoring for this result.\n"
  syntax:
    content: public ScoringResult ScoringResult { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.ScoringResult
    content.vb: Public Property ScoringResult As ScoringResult
  overload: Sdl.LanguagePlatform.TranslationMemory.SearchResult.ScoringResult*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryPlaceables
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryPlaceables
  id: MemoryPlaceables
  parent: Sdl.LanguagePlatform.TranslationMemory.SearchResult
  langs:
  - csharp
  - vb
  name: MemoryPlaceables
  nameWithType: SearchResult.MemoryPlaceables
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryPlaceables
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the list of placeables which are found in the memory segment.\n"
  syntax:
    content: public List<Placeable> MemoryPlaceables { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable}
    content.vb: Public Property MemoryPlaceables As List(Of Placeable)
  overload: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryPlaceables*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.PlaceableAssociations
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.SearchResult.PlaceableAssociations
  id: PlaceableAssociations
  parent: Sdl.LanguagePlatform.TranslationMemory.SearchResult
  langs:
  - csharp
  - vb
  name: PlaceableAssociations
  nameWithType: SearchResult.PlaceableAssociations
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.PlaceableAssociations
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the list of placeables which are found in the memory segment.\n"
  syntax:
    content: public List<PlaceableAssociation> PlaceableAssociations { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.PlaceableAssociation}
    content.vb: Public Property PlaceableAssociations As List(Of PlaceableAssociation)
  overload: Sdl.LanguagePlatform.TranslationMemory.SearchResult.PlaceableAssociations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryTranslationUnit
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryTranslationUnit
  id: MemoryTranslationUnit
  parent: Sdl.LanguagePlatform.TranslationMemory.SearchResult
  langs:
  - csharp
  - vb
  name: MemoryTranslationUnit
  nameWithType: SearchResult.MemoryTranslationUnit
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryTranslationUnit
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nThe translation unit found by the search, used to compute the translation proposal.\n"
  syntax:
    content: public TranslationUnit MemoryTranslationUnit { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    content.vb: Public Property MemoryTranslationUnit As TranslationUnit
  overload: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryTranslationUnit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.TranslationProposal
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.SearchResult.TranslationProposal
  id: TranslationProposal
  parent: Sdl.LanguagePlatform.TranslationMemory.SearchResult
  langs:
  - csharp
  - vb
  name: TranslationProposal
  nameWithType: SearchResult.TranslationProposal
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.TranslationProposal
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the translation proposal TU, which is a copy of the memory\ntranslation unit in which all placeables have been resolved.\n"
  syntax:
    content: public TranslationUnit TranslationProposal { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    content.vb: Public Property TranslationProposal As TranslationUnit
  overload: Sdl.LanguagePlatform.TranslationMemory.SearchResult.TranslationProposal*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.ContextData
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.SearchResult.ContextData
  id: ContextData
  parent: Sdl.LanguagePlatform.TranslationMemory.SearchResult
  langs:
  - csharp
  - vb
  name: ContextData
  nameWithType: SearchResult.ContextData
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.ContextData
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the context information for this translation unit.\n"
  syntax:
    content: public TuContext ContextData { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.TuContext
    content.vb: Public Property ContextData As TuContext
  overload: Sdl.LanguagePlatform.TranslationMemory.SearchResult.ContextData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.CascadeEntryIndex
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.SearchResult.CascadeEntryIndex
  id: CascadeEntryIndex
  parent: Sdl.LanguagePlatform.TranslationMemory.SearchResult
  langs:
  - csharp
  - vb
  name: CascadeEntryIndex
  nameWithType: SearchResult.CascadeEntryIndex
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.CascadeEntryIndex
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the cascade entry index.\n"
  remarks: "\nThe cascade entry index corresponds to a position in the cascade&apos;s cascade entries list (Cascade.CascadeEntries).\nIf the cascade entry index is -1 then the search result was not created in a cascade.\n"
  syntax:
    content: public int CascadeEntryIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CascadeEntryIndex As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.SearchResult.CascadeEntryIndex*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MatchingPlaceholderTokens
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.SearchResult.MatchingPlaceholderTokens
  id: MatchingPlaceholderTokens
  parent: Sdl.LanguagePlatform.TranslationMemory.SearchResult
  langs:
  - csharp
  - vb
  name: MatchingPlaceholderTokens
  nameWithType: SearchResult.MatchingPlaceholderTokens
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MatchingPlaceholderTokens
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nGets or sets the matching tokens.\nMatchingPlaceholderTokens attribute counts the number of placeholders that match by value. \nUpon comparing two segments, if the placeholders value is different, \nthe Scorer will still give 100% match, even if the placeholders value is different\nfor example: \n- first segment:  {Birth}{&apos; &apos;}{year}{&apos; &apos;}{is}{&apos; &apos;}{NumberToken(1980)}\n- second segment: {Birth}{&apos; &apos;}{year}{&apos; &apos;}{is}{&apos; &apos;}{NumberToken(1985)}\nThe above segments will be considerred equal, even if they are not. \nThis info is used upon ordering of TM entries so that on the first position\nto appear the segment that match by token value too\n"
  remarks: "\nThis field is used internally upon ordering of TM entries so that on the first position\nto appear the segment that match by token value too.\n"
  syntax:
    content: public int MatchingPlaceholderTokens { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MatchingPlaceholderTokens As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MatchingPlaceholderTokens*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MetaData
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.SearchResult.MetaData
  id: MetaData
  parent: Sdl.LanguagePlatform.TranslationMemory.SearchResult
  langs:
  - csharp
  - vb
  name: MetaData
  nameWithType: SearchResult.MetaData
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MetaData
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  summary: "\nUsed in various flows to hold data related to SearchResult\n"
  syntax:
    content: public Dictionary<string, object> MetaData { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public Property MetaData As Dictionary(Of String, Object)
  overload: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MetaData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.SearchResult.#ctor
  isExternal: true
  name: SearchResult
  nameWithType: SearchResult.SearchResult
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.SearchResult
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: TranslationUnit
  nameWithType: TranslationUnit
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.ScoringResult*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.SearchResult.ScoringResult
  isExternal: true
  name: ScoringResult
  nameWithType: SearchResult.ScoringResult
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.ScoringResult
- uid: Sdl.LanguagePlatform.TranslationMemory.ScoringResult
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.ScoringResult
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: ScoringResult
  nameWithType: ScoringResult
  fullName: Sdl.LanguagePlatform.TranslationMemory.ScoringResult
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryPlaceables*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryPlaceables
  isExternal: true
  name: MemoryPlaceables
  nameWithType: SearchResult.MemoryPlaceables
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryPlaceables
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Placeable>
  nameWithType: List<Placeable>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemory.Placeable>
  nameWithType.vb: List(Of Placeable)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemory.Placeable)
  name.vb: List(Of Placeable)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.Placeable
    name: Placeable
    nameWithType: Placeable
    fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.Placeable
    name: Placeable
    nameWithType: Placeable
    fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.PlaceableAssociations*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.SearchResult.PlaceableAssociations
  isExternal: true
  name: PlaceableAssociations
  nameWithType: SearchResult.PlaceableAssociations
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.PlaceableAssociations
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.PlaceableAssociation}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.PlaceableAssociation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<PlaceableAssociation>
  nameWithType: List<PlaceableAssociation>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemory.PlaceableAssociation>
  nameWithType.vb: List(Of PlaceableAssociation)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemory.PlaceableAssociation)
  name.vb: List(Of PlaceableAssociation)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.PlaceableAssociation
    name: PlaceableAssociation
    nameWithType: PlaceableAssociation
    fullName: Sdl.LanguagePlatform.TranslationMemory.PlaceableAssociation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.PlaceableAssociation
    name: PlaceableAssociation
    nameWithType: PlaceableAssociation
    fullName: Sdl.LanguagePlatform.TranslationMemory.PlaceableAssociation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryTranslationUnit*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryTranslationUnit
  isExternal: true
  name: MemoryTranslationUnit
  nameWithType: SearchResult.MemoryTranslationUnit
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryTranslationUnit
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.TranslationProposal*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.SearchResult.TranslationProposal
  isExternal: true
  name: TranslationProposal
  nameWithType: SearchResult.TranslationProposal
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.TranslationProposal
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.ContextData*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.SearchResult.ContextData
  isExternal: true
  name: ContextData
  nameWithType: SearchResult.ContextData
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.ContextData
- uid: Sdl.LanguagePlatform.TranslationMemory.TuContext
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TuContext
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: TuContext
  nameWithType: TuContext
  fullName: Sdl.LanguagePlatform.TranslationMemory.TuContext
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.CascadeEntryIndex*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.SearchResult.CascadeEntryIndex
  isExternal: true
  name: CascadeEntryIndex
  nameWithType: SearchResult.CascadeEntryIndex
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.CascadeEntryIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MatchingPlaceholderTokens*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.SearchResult.MatchingPlaceholderTokens
  isExternal: true
  name: MatchingPlaceholderTokens
  nameWithType: SearchResult.MatchingPlaceholderTokens
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MatchingPlaceholderTokens
- uid: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MetaData*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.SearchResult.MetaData
  isExternal: true
  name: MetaData
  nameWithType: SearchResult.MetaData
  fullName: Sdl.LanguagePlatform.TranslationMemory.SearchResult.MetaData
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: System.Collections.Generic.Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: System.Collections.Generic.Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
