### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.SegmentRange
  commentId: T:Sdl.LanguagePlatform.Core.SegmentRange
  id: SegmentRange
  parent: Sdl.LanguagePlatform.Core
  children:
  - Sdl.LanguagePlatform.Core.SegmentRange.#ctor
  - Sdl.LanguagePlatform.Core.SegmentRange.#ctor(Sdl.LanguagePlatform.Core.SegmentPosition,Sdl.LanguagePlatform.Core.SegmentPosition)
  - Sdl.LanguagePlatform.Core.SegmentRange.#ctor(System.Int32,System.Int32,System.Int32)
  - Sdl.LanguagePlatform.Core.SegmentRange.Compare(Sdl.LanguagePlatform.Core.SegmentRange,Sdl.LanguagePlatform.Core.SegmentRange)
  - Sdl.LanguagePlatform.Core.SegmentRange.Contains(Sdl.LanguagePlatform.Core.SegmentRange)
  - Sdl.LanguagePlatform.Core.SegmentRange.Duplicate
  - Sdl.LanguagePlatform.Core.SegmentRange.Equals(Sdl.LanguagePlatform.Core.SegmentRange)
  - Sdl.LanguagePlatform.Core.SegmentRange.Equals(System.Object)
  - Sdl.LanguagePlatform.Core.SegmentRange.From
  - Sdl.LanguagePlatform.Core.SegmentRange.GetHashCode
  - Sdl.LanguagePlatform.Core.SegmentRange.Into
  - Sdl.LanguagePlatform.Core.SegmentRange.IsInside(Sdl.LanguagePlatform.Core.SegmentPosition)
  - Sdl.LanguagePlatform.Core.SegmentRange.Length
  - Sdl.LanguagePlatform.Core.SegmentRange.OverlapsWith(Sdl.LanguagePlatform.Core.SegmentRange)
  - Sdl.LanguagePlatform.Core.SegmentRange.ToString
  langs:
  - csharp
  - vb
  name: SegmentRange
  nameWithType: SegmentRange
  fullName: Sdl.LanguagePlatform.Core.SegmentRange
  type: Class
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Represents the range of a segment, indicated by two specified positions. The 

    segment positions are inclusive ("into" semantics).
  example: []
  syntax:
    content: >-
      [DataContract]

      public class SegmentRange
    content.vb: >-
      <DataContract>

      Public Class SegmentRange
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.Core.SegmentRange.#ctor
  commentId: M:Sdl.LanguagePlatform.Core.SegmentRange.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.Core.SegmentRange
  langs:
  - csharp
  - vb
  name: SegmentRange()
  nameWithType: SegmentRange.SegmentRange()
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.SegmentRange()
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Initializes a new instance with default values.
  example: []
  syntax:
    content: public SegmentRange()
    content.vb: Public Sub New()
  overload: Sdl.LanguagePlatform.Core.SegmentRange.#ctor*
  nameWithType.vb: SegmentRange.New()
  fullName.vb: Sdl.LanguagePlatform.Core.SegmentRange.New()
  name.vb: New()
- uid: Sdl.LanguagePlatform.Core.SegmentRange.#ctor(Sdl.LanguagePlatform.Core.SegmentPosition,Sdl.LanguagePlatform.Core.SegmentPosition)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentRange.#ctor(Sdl.LanguagePlatform.Core.SegmentPosition,Sdl.LanguagePlatform.Core.SegmentPosition)
  id: '#ctor(Sdl.LanguagePlatform.Core.SegmentPosition,Sdl.LanguagePlatform.Core.SegmentPosition)'
  parent: Sdl.LanguagePlatform.Core.SegmentRange
  langs:
  - csharp
  - vb
  name: SegmentRange(SegmentPosition, SegmentPosition)
  nameWithType: SegmentRange.SegmentRange(SegmentPosition, SegmentPosition)
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.SegmentRange(Sdl.LanguagePlatform.Core.SegmentPosition, Sdl.LanguagePlatform.Core.SegmentPosition)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Initializes a new instance with the provided positions. No checks are performed

    to verify that the start position precedes the end position.
  example: []
  syntax:
    content: public SegmentRange(SegmentPosition from, SegmentPosition into)
    parameters:
    - id: from
      type: Sdl.LanguagePlatform.Core.SegmentPosition
      description: The start position.
    - id: into
      type: Sdl.LanguagePlatform.Core.SegmentPosition
      description: The end position.
    content.vb: Public Sub New(from As SegmentPosition, into As SegmentPosition)
  overload: Sdl.LanguagePlatform.Core.SegmentRange.#ctor*
  nameWithType.vb: SegmentRange.New(SegmentPosition, SegmentPosition)
  fullName.vb: Sdl.LanguagePlatform.Core.SegmentRange.New(Sdl.LanguagePlatform.Core.SegmentPosition, Sdl.LanguagePlatform.Core.SegmentPosition)
  name.vb: New(SegmentPosition, SegmentPosition)
- uid: Sdl.LanguagePlatform.Core.SegmentRange.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentRange.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: Sdl.LanguagePlatform.Core.SegmentRange
  langs:
  - csharp
  - vb
  name: SegmentRange(int, int, int)
  nameWithType: SegmentRange.SegmentRange(int, int, int)
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.SegmentRange(int, int, int)
  type: Constructor
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Initializes a new instance of with the given parameters.
  example: []
  syntax:
    content: public SegmentRange(int run, int from, int into)
    parameters:
    - id: run
      type: System.Int32
      description: The segment element index (run) of the range.
    - id: from
      type: System.Int32
      description: The start position in the run.
    - id: into
      type: System.Int32
      description: The end position (inclusive) in the run.
    content.vb: Public Sub New(run As Integer, from As Integer, into As Integer)
  overload: Sdl.LanguagePlatform.Core.SegmentRange.#ctor*
  nameWithType.vb: SegmentRange.New(Integer, Integer, Integer)
  fullName.vb: Sdl.LanguagePlatform.Core.SegmentRange.New(Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer)
- uid: Sdl.LanguagePlatform.Core.SegmentRange.Duplicate
  commentId: M:Sdl.LanguagePlatform.Core.SegmentRange.Duplicate
  id: Duplicate
  parent: Sdl.LanguagePlatform.Core.SegmentRange
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: SegmentRange.Duplicate()
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.Duplicate()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Creates a new instance that is a deep copy of this instance.
  example: []
  syntax:
    content: public SegmentRange Duplicate()
    return:
      type: Sdl.LanguagePlatform.Core.SegmentRange
      description: A new instance that is a deep copy of this instance.
    content.vb: Public Function Duplicate() As SegmentRange
  overload: Sdl.LanguagePlatform.Core.SegmentRange.Duplicate*
- uid: Sdl.LanguagePlatform.Core.SegmentRange.OverlapsWith(Sdl.LanguagePlatform.Core.SegmentRange)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentRange.OverlapsWith(Sdl.LanguagePlatform.Core.SegmentRange)
  id: OverlapsWith(Sdl.LanguagePlatform.Core.SegmentRange)
  parent: Sdl.LanguagePlatform.Core.SegmentRange
  langs:
  - csharp
  - vb
  name: OverlapsWith(SegmentRange)
  nameWithType: SegmentRange.OverlapsWith(SegmentRange)
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.OverlapsWith(Sdl.LanguagePlatform.Core.SegmentRange)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Tests whether this segment range overlaps with another range.
  example: []
  syntax:
    content: public bool OverlapsWith(SegmentRange other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.SegmentRange
    return:
      type: System.Boolean
      description: true if the two ranges overlap, and false otherwise.
    content.vb: Public Function OverlapsWith(other As SegmentRange) As Boolean
  overload: Sdl.LanguagePlatform.Core.SegmentRange.OverlapsWith*
- uid: Sdl.LanguagePlatform.Core.SegmentRange.Contains(Sdl.LanguagePlatform.Core.SegmentRange)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentRange.Contains(Sdl.LanguagePlatform.Core.SegmentRange)
  id: Contains(Sdl.LanguagePlatform.Core.SegmentRange)
  parent: Sdl.LanguagePlatform.Core.SegmentRange
  langs:
  - csharp
  - vb
  name: Contains(SegmentRange)
  nameWithType: SegmentRange.Contains(SegmentRange)
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.Contains(Sdl.LanguagePlatform.Core.SegmentRange)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Tests whether the other range is entirely included in this range (peripheral positions may be identical).
  example: []
  syntax:
    content: public bool Contains(SegmentRange other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.SegmentRange
    return:
      type: System.Boolean
      description: true if <code class="paramref">other</code> is entirely "within" this segment range, and false otherwise.
    content.vb: Public Function Contains(other As SegmentRange) As Boolean
  overload: Sdl.LanguagePlatform.Core.SegmentRange.Contains*
- uid: Sdl.LanguagePlatform.Core.SegmentRange.IsInside(Sdl.LanguagePlatform.Core.SegmentPosition)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentRange.IsInside(Sdl.LanguagePlatform.Core.SegmentPosition)
  id: IsInside(Sdl.LanguagePlatform.Core.SegmentPosition)
  parent: Sdl.LanguagePlatform.Core.SegmentRange
  langs:
  - csharp
  - vb
  name: IsInside(SegmentPosition)
  nameWithType: SegmentRange.IsInside(SegmentPosition)
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.IsInside(Sdl.LanguagePlatform.Core.SegmentPosition)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Tests whether the segment position <code class="paramref">p</code> is inside this range.
  example: []
  syntax:
    content: public bool IsInside(SegmentPosition p)
    parameters:
    - id: p
      type: Sdl.LanguagePlatform.Core.SegmentPosition
      description: The segment position to test
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if <code class="paramref">p</code> is "inside" this range, and false
                    otherwise.
    content.vb: Public Function IsInside(p As SegmentPosition) As Boolean
  overload: Sdl.LanguagePlatform.Core.SegmentRange.IsInside*
- uid: Sdl.LanguagePlatform.Core.SegmentRange.Compare(Sdl.LanguagePlatform.Core.SegmentRange,Sdl.LanguagePlatform.Core.SegmentRange)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentRange.Compare(Sdl.LanguagePlatform.Core.SegmentRange,Sdl.LanguagePlatform.Core.SegmentRange)
  id: Compare(Sdl.LanguagePlatform.Core.SegmentRange,Sdl.LanguagePlatform.Core.SegmentRange)
  parent: Sdl.LanguagePlatform.Core.SegmentRange
  langs:
  - csharp
  - vb
  name: Compare(SegmentRange, SegmentRange)
  nameWithType: SegmentRange.Compare(SegmentRange, SegmentRange)
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.Compare(Sdl.LanguagePlatform.Core.SegmentRange, Sdl.LanguagePlatform.Core.SegmentRange)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Compares two segment ranges and returns a value indicating their order.
  example: []
  syntax:
    content: public static int Compare(SegmentRange a, SegmentRange b)
    parameters:
    - id: a
      type: Sdl.LanguagePlatform.Core.SegmentRange
      description: The first of the two items to compare.
    - id: b
      type: Sdl.LanguagePlatform.Core.SegmentRange
      description: The second of the two items to compare.
    return:
      type: System.Int32
      description: >-
        An integer value less than zero if a precedes b, zero if a and b are in the same range, 
                    and a value greater than zero if a follows b. Only the start positions are compared.
    content.vb: Public Shared Function Compare(a As SegmentRange, b As SegmentRange) As Integer
  overload: Sdl.LanguagePlatform.Core.SegmentRange.Compare*
- uid: Sdl.LanguagePlatform.Core.SegmentRange.ToString
  commentId: M:Sdl.LanguagePlatform.Core.SegmentRange.ToString
  id: ToString
  parent: Sdl.LanguagePlatform.Core.SegmentRange
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SegmentRange.ToString()
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.ToString()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: <xref href="System.Object.ToString" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representation of the object, for display purposes.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Sdl.LanguagePlatform.Core.SegmentRange.ToString*
- uid: Sdl.LanguagePlatform.Core.SegmentRange.Equals(Sdl.LanguagePlatform.Core.SegmentRange)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentRange.Equals(Sdl.LanguagePlatform.Core.SegmentRange)
  id: Equals(Sdl.LanguagePlatform.Core.SegmentRange)
  parent: Sdl.LanguagePlatform.Core.SegmentRange
  langs:
  - csharp
  - vb
  name: Equals(SegmentRange)
  nameWithType: SegmentRange.Equals(SegmentRange)
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.Equals(Sdl.LanguagePlatform.Core.SegmentRange)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Compares the current range to another segment range.
  example: []
  syntax:
    content: public bool Equals(SegmentRange other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.SegmentRange
      description: The range to compare with.
    return:
      type: System.Boolean
      description: true if both ranges are identical.
    content.vb: Public Function Equals(other As SegmentRange) As Boolean
  overload: Sdl.LanguagePlatform.Core.SegmentRange.Equals*
- uid: Sdl.LanguagePlatform.Core.SegmentRange.Equals(System.Object)
  commentId: M:Sdl.LanguagePlatform.Core.SegmentRange.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.LanguagePlatform.Core.SegmentRange
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: SegmentRange.Equals(object)
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.Equals(object)
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: <xref href="System.Object.Equals(object)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: >-
        true if the specified object is equal to the current object;
                    otherwise, false.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.LanguagePlatform.Core.SegmentRange.Equals*
  nameWithType.vb: SegmentRange.Equals(Object)
  fullName.vb: Sdl.LanguagePlatform.Core.SegmentRange.Equals(Object)
  name.vb: Equals(Object)
- uid: Sdl.LanguagePlatform.Core.SegmentRange.GetHashCode
  commentId: M:Sdl.LanguagePlatform.Core.SegmentRange.GetHashCode
  id: GetHashCode
  parent: Sdl.LanguagePlatform.Core.SegmentRange
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SegmentRange.GetHashCode()
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.GetHashCode()
  type: Method
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.LanguagePlatform.Core.SegmentRange.GetHashCode*
- uid: Sdl.LanguagePlatform.Core.SegmentRange.From
  commentId: P:Sdl.LanguagePlatform.Core.SegmentRange.From
  id: From
  parent: Sdl.LanguagePlatform.Core.SegmentRange
  langs:
  - csharp
  - vb
  name: From
  nameWithType: SegmentRange.From
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.From
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Gets or sets the start position.
  example: []
  syntax:
    content: >-
      [DataMember]

      public SegmentPosition From { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.SegmentPosition
    content.vb: >-
      <DataMember>

      Public Property From As SegmentPosition
  overload: Sdl.LanguagePlatform.Core.SegmentRange.From*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.Core.SegmentRange.Into
  commentId: P:Sdl.LanguagePlatform.Core.SegmentRange.Into
  id: Into
  parent: Sdl.LanguagePlatform.Core.SegmentRange
  langs:
  - csharp
  - vb
  name: Into
  nameWithType: SegmentRange.Into
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.Into
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: Gets or sets the end position.
  example: []
  syntax:
    content: >-
      [DataMember]

      public SegmentPosition Into { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.SegmentPosition
    content.vb: >-
      <DataMember>

      Public Property Into As SegmentPosition
  overload: Sdl.LanguagePlatform.Core.SegmentRange.Into*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: Sdl.LanguagePlatform.Core.SegmentRange.Length
  commentId: P:Sdl.LanguagePlatform.Core.SegmentRange.Length
  id: Length
  parent: Sdl.LanguagePlatform.Core.SegmentRange
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: SegmentRange.Length
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.Length
  type: Property
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  summary: >-
    Gets the length of this range if start and end positions are in the same text run, 

    and <code>-1</code> otherwise.
  example: []
  syntax:
    content: public int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Length As Integer
  overload: Sdl.LanguagePlatform.Core.SegmentRange.Length*
references:
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  href: Sdl.html
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.LanguagePlatform
    name: LanguagePlatform
    isExternal: true
    href: Sdl.LanguagePlatform.html
  - name: .
  - uid: Sdl.LanguagePlatform.Core
    name: Core
    isExternal: true
    href: Sdl.LanguagePlatform.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core.SegmentRange.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentRange.#ctor
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentRange.html#Sdl_LanguagePlatform_Core_SegmentRange__ctor
  name: SegmentRange
  nameWithType: SegmentRange.SegmentRange
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.SegmentRange
  nameWithType.vb: SegmentRange.New
  fullName.vb: Sdl.LanguagePlatform.Core.SegmentRange.New
  name.vb: New
- uid: Sdl.LanguagePlatform.Core.SegmentPosition
  commentId: T:Sdl.LanguagePlatform.Core.SegmentPosition
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentPosition.html
  name: SegmentPosition
  nameWithType: SegmentPosition
  fullName: Sdl.LanguagePlatform.Core.SegmentPosition
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Sdl.LanguagePlatform.Core.SegmentRange.Duplicate*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentRange.Duplicate
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentRange.html#Sdl_LanguagePlatform_Core_SegmentRange_Duplicate
  name: Duplicate
  nameWithType: SegmentRange.Duplicate
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.Duplicate
- uid: Sdl.LanguagePlatform.Core.SegmentRange
  commentId: T:Sdl.LanguagePlatform.Core.SegmentRange
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentRange.html
  name: SegmentRange
  nameWithType: SegmentRange
  fullName: Sdl.LanguagePlatform.Core.SegmentRange
- uid: Sdl.LanguagePlatform.Core.SegmentRange.OverlapsWith*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentRange.OverlapsWith
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentRange.html#Sdl_LanguagePlatform_Core_SegmentRange_OverlapsWith_Sdl_LanguagePlatform_Core_SegmentRange_
  name: OverlapsWith
  nameWithType: SegmentRange.OverlapsWith
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.OverlapsWith
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.LanguagePlatform.Core.SegmentRange.Contains*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentRange.Contains
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentRange.html#Sdl_LanguagePlatform_Core_SegmentRange_Contains_Sdl_LanguagePlatform_Core_SegmentRange_
  name: Contains
  nameWithType: SegmentRange.Contains
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.Contains
- uid: Sdl.LanguagePlatform.Core.SegmentRange.IsInside*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentRange.IsInside
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentRange.html#Sdl_LanguagePlatform_Core_SegmentRange_IsInside_Sdl_LanguagePlatform_Core_SegmentPosition_
  name: IsInside
  nameWithType: SegmentRange.IsInside
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.IsInside
- uid: Sdl.LanguagePlatform.Core.SegmentRange.Compare*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentRange.Compare
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentRange.html#Sdl_LanguagePlatform_Core_SegmentRange_Compare_Sdl_LanguagePlatform_Core_SegmentRange_Sdl_LanguagePlatform_Core_SegmentRange_
  name: Compare
  nameWithType: SegmentRange.Compare
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.Compare
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.Core.SegmentRange.ToString*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentRange.ToString
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentRange.html#Sdl_LanguagePlatform_Core_SegmentRange_ToString
  name: ToString
  nameWithType: SegmentRange.ToString
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Sdl.LanguagePlatform.Core.SegmentRange.Equals*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentRange.Equals
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentRange.html#Sdl_LanguagePlatform_Core_SegmentRange_Equals_Sdl_LanguagePlatform_Core_SegmentRange_
  name: Equals
  nameWithType: SegmentRange.Equals
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.Equals
- uid: System.Object.Equals(object)
  commentId: M:System.Object.Equals(object)
  isExternal: true
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: Sdl.LanguagePlatform.Core.SegmentRange.GetHashCode*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentRange.GetHashCode
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentRange.html#Sdl_LanguagePlatform_Core_SegmentRange_GetHashCode
  name: GetHashCode
  nameWithType: SegmentRange.GetHashCode
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.GetHashCode
- uid: Sdl.LanguagePlatform.Core.SegmentRange.From*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentRange.From
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentRange.html#Sdl_LanguagePlatform_Core_SegmentRange_From
  name: From
  nameWithType: SegmentRange.From
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.From
- uid: Sdl.LanguagePlatform.Core.SegmentRange.Into*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentRange.Into
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentRange.html#Sdl_LanguagePlatform_Core_SegmentRange_Into
  name: Into
  nameWithType: SegmentRange.Into
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.Into
- uid: Sdl.LanguagePlatform.Core.SegmentRange.Length*
  commentId: Overload:Sdl.LanguagePlatform.Core.SegmentRange.Length
  isExternal: true
  href: Sdl.LanguagePlatform.Core.SegmentRange.html#Sdl_LanguagePlatform_Core_SegmentRange_Length
  name: Length
  nameWithType: SegmentRange.Length
  fullName: Sdl.LanguagePlatform.Core.SegmentRange.Length
