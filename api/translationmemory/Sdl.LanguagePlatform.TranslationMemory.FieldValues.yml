### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldValues
  id: FieldValues
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.#ctor
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.#ctor(Sdl.LanguagePlatform.TranslationMemory.FieldValues)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.Assign(Sdl.LanguagePlatform.TranslationMemory.FieldValues)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.Clear
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.Count
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.Exists(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.GetEnumerator
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.Insert(System.Int32,Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.Item(System.Int32)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.Item(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.Lookup(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.Lookup(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.LookupOrCreate(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValues)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.Remove(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.Remove(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.RemoveAt(System.Int32)
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.System#Collections#IEnumerable#GetEnumerator
  - Sdl.LanguagePlatform.TranslationMemory.FieldValues.Values
  langs:
  - csharp
  - vb
  name: FieldValues
  nameWithType: FieldValues
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: 'public class FieldValues : IEnumerable<FieldValue>, IEnumerable'
    content.vb: >-
      Public Class FieldValues
          Implements IEnumerable(Of FieldValue), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemory.FieldValue}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: FieldValues()
  nameWithType: FieldValues.FieldValues()
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.FieldValues()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public FieldValues()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.#ctor(Sdl.LanguagePlatform.TranslationMemory.FieldValues)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.#ctor(Sdl.LanguagePlatform.TranslationMemory.FieldValues)
  id: '#ctor(Sdl.LanguagePlatform.TranslationMemory.FieldValues)'
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: FieldValues(FieldValues)
  nameWithType: FieldValues.FieldValues(FieldValues)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.FieldValues(Sdl.LanguagePlatform.TranslationMemory.FieldValues)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public FieldValues(FieldValues other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValues
    content.vb: Public Sub New(other As FieldValues)
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  id: Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: Add(FieldValue)
  nameWithType: FieldValues.Add(FieldValue)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public void Add(FieldValue fv)
    parameters:
    - id: fv
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    content.vb: Public Sub Add(fv As FieldValue)
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Insert(System.Int32,Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Insert(System.Int32,Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  id: Insert(System.Int32,Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: Insert(Int32, FieldValue)
  nameWithType: FieldValues.Insert(Int32, FieldValue)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Insert(System.Int32, Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public void Insert(int index, FieldValue fv)
    parameters:
    - id: index
      type: System.Int32
    - id: fv
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    content.vb: Public Sub Insert(index As Integer, fv As FieldValue)
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Insert*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Clear
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Clear
  id: Clear
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: FieldValues.Clear()
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Clear()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValues)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValues)
  id: Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValues)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: Merge(FieldValues)
  nameWithType: FieldValues.Merge(FieldValues)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValues)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public bool Merge(FieldValues values)
    parameters:
    - id: values
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValues
    return:
      type: System.Boolean
    content.vb: Public Function Merge(values As FieldValues) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Merge*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Assign(Sdl.LanguagePlatform.TranslationMemory.FieldValues)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Assign(Sdl.LanguagePlatform.TranslationMemory.FieldValues)
  id: Assign(Sdl.LanguagePlatform.TranslationMemory.FieldValues)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: Assign(FieldValues)
  nameWithType: FieldValues.Assign(FieldValues)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Assign(Sdl.LanguagePlatform.TranslationMemory.FieldValues)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public bool Assign(FieldValues values)
    parameters:
    - id: values
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValues
    return:
      type: System.Boolean
    content.vb: Public Function Assign(values As FieldValues) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Assign*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Lookup(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Lookup(System.String)
  id: Lookup(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: Lookup(String)
  nameWithType: FieldValues.Lookup(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Lookup(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public FieldValue Lookup(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    content.vb: Public Function Lookup(name As String) As FieldValue
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Lookup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Lookup(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Lookup(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  id: Lookup(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: Lookup(String, FieldValueType)
  nameWithType: FieldValues.Lookup(String, FieldValueType)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Lookup(System.String, Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public FieldValue Lookup(string name, FieldValueType expectedValueType)
    parameters:
    - id: name
      type: System.String
    - id: expectedValueType
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    content.vb: Public Function Lookup(name As String, expectedValueType As FieldValueType) As FieldValue
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Lookup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.LookupOrCreate(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.LookupOrCreate(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  id: LookupOrCreate(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: LookupOrCreate(String, FieldValueType)
  nameWithType: FieldValues.LookupOrCreate(String, FieldValueType)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.LookupOrCreate(System.String, Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public FieldValue LookupOrCreate(string name, FieldValueType valueType)
    parameters:
    - id: name
      type: System.String
    - id: valueType
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    content.vb: Public Function LookupOrCreate(name As String, valueType As FieldValueType) As FieldValue
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.LookupOrCreate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Exists(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Exists(System.String)
  id: Exists(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: Exists(String)
  nameWithType: FieldValues.Exists(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Exists(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public bool Exists(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function Exists(name As String) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Exists*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Remove(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Remove(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  id: Remove(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: Remove(FieldValue)
  nameWithType: FieldValues.Remove(FieldValue)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Remove(Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public bool Remove(FieldValue item)
    parameters:
    - id: item
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    return:
      type: System.Boolean
    content.vb: Public Function Remove(item As FieldValue) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Remove(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Remove(System.String)
  id: Remove(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: Remove(String)
  nameWithType: FieldValues.Remove(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Remove(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public bool Remove(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function Remove(name As String) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.RemoveAt(System.Int32)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: FieldValues.RemoveAt(Int32)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.RemoveAt(System.Int32)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.RemoveAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: FieldValues.IEnumerable.GetEnumerator()
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: FieldValues.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.GetEnumerator
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.GetEnumerator
  id: GetEnumerator
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: FieldValues.GetEnumerator()
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.GetEnumerator()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public IEnumerator<FieldValue> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.TranslationMemory.FieldValue}
    content.vb: Public Function GetEnumerator As IEnumerator(Of FieldValue)
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemory.FieldValue}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Values
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Values
  id: Values
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: FieldValues.Values
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Values
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public List<FieldValue> Values { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.FieldValue}
    content.vb: Public ReadOnly Property Values As List(Of FieldValue)
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Values*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Count
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Count
  id: Count
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: FieldValues.Count
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Count
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Item(System.String)
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Item(System.String)
  id: Item(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: FieldValues.Item[String]
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Item[System.String]
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public FieldValue this[string name] { get; }
    parameters:
    - id: name
      type: System.String
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    content.vb: Public ReadOnly Property Item(name As String) As FieldValue
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Item*
  nameWithType.vb: FieldValues.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Item(System.String)
  name.vb: Item(String)
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Item(System.Int32)
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Item(System.Int32)
  id: Item(System.Int32)
  parent: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: FieldValues.Item[Int32]
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Item[System.Int32]
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public FieldValue this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    content.vb: Public ReadOnly Property Item(index As Integer) As FieldValue
  overload: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Item*
  nameWithType.vb: FieldValues.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Item(System.Int32)
  name.vb: Item(Int32)
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemory.FieldValue}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemory.FieldValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FieldValue>
  nameWithType: IEnumerable<FieldValue>
  fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemory.FieldValue>
  nameWithType.vb: IEnumerable(Of FieldValue)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  name.vb: IEnumerable(Of FieldValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    name: FieldValue
    nameWithType: FieldValue
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    name: FieldValue
    nameWithType: FieldValue
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValues.#ctor
  isExternal: true
  name: FieldValues
  nameWithType: FieldValues.FieldValues
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.FieldValues
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldValues
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldValues
  nameWithType: FieldValues
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Add*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Add
  isExternal: true
  name: Add
  nameWithType: FieldValues.Add
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Add
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldValue
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldValue
  nameWithType: FieldValue
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Insert*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Insert
  isExternal: true
  name: Insert
  nameWithType: FieldValues.Insert
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Insert
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Clear*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Clear
  isExternal: true
  name: Clear
  nameWithType: FieldValues.Clear
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Clear
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Merge*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Merge
  isExternal: true
  name: Merge
  nameWithType: FieldValues.Merge
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Merge
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Assign*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Assign
  isExternal: true
  name: Assign
  nameWithType: FieldValues.Assign
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Assign
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Lookup*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Lookup
  isExternal: true
  name: Lookup
  nameWithType: FieldValues.Lookup
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Lookup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldValueType
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldValueType
  nameWithType: FieldValueType
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.LookupOrCreate*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValues.LookupOrCreate
  isExternal: true
  name: LookupOrCreate
  nameWithType: FieldValues.LookupOrCreate
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.LookupOrCreate
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Exists*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Exists
  isExternal: true
  name: Exists
  nameWithType: FieldValues.Exists
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Exists
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Remove*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Remove
  isExternal: true
  name: Remove
  nameWithType: FieldValues.Remove
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Remove
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.RemoveAt*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValues.RemoveAt
  isExternal: true
  name: RemoveAt
  nameWithType: FieldValues.RemoveAt
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.RemoveAt
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValues.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator
  nameWithType: FieldValues.IEnumerable.GetEnumerator
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: FieldValues.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.GetEnumerator*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValues.GetEnumerator
  isExternal: true
  name: GetEnumerator
  nameWithType: FieldValues.GetEnumerator
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemory.FieldValue}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemory.FieldValue}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemory.FieldValue}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<FieldValue>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemory.FieldValue>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of FieldValue).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemory.FieldValue).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<FieldValue>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.TranslationMemory.FieldValue>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of FieldValue).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.TranslationMemory.FieldValue).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.TranslationMemory.FieldValue}
  commentId: T:System.Collections.Generic.IEnumerator{Sdl.LanguagePlatform.TranslationMemory.FieldValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<FieldValue>
  nameWithType: IEnumerator<FieldValue>
  fullName: System.Collections.Generic.IEnumerator<Sdl.LanguagePlatform.TranslationMemory.FieldValue>
  nameWithType.vb: IEnumerator(Of FieldValue)
  fullName.vb: System.Collections.Generic.IEnumerator(Of Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  name.vb: IEnumerator(Of FieldValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    name: FieldValue
    nameWithType: FieldValue
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    name: FieldValue
    nameWithType: FieldValue
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Values*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Values
  isExternal: true
  name: Values
  nameWithType: FieldValues.Values
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Values
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.FieldValue}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.FieldValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<FieldValue>
  nameWithType: List<FieldValue>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemory.FieldValue>
  nameWithType.vb: List(Of FieldValue)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemory.FieldValue)
  name.vb: List(Of FieldValue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    name: FieldValue
    nameWithType: FieldValue
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    name: FieldValue
    nameWithType: FieldValue
    fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Count*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Count
  isExternal: true
  name: Count
  nameWithType: FieldValues.Count
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Count
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Item*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Item
  isExternal: true
  name: Item
  nameWithType: FieldValues.Item
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValues.Item
