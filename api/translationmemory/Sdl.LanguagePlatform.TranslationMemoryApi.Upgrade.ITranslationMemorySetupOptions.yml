### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  id: ITranslationMemorySetupOptions
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Copyright
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Description
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.ExpirationDate
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.FGASupport
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Fields
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.FuzzyIndexes
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.InputFieldIdentifierMappings
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.LanguageDirections
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.LanguageResources
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Name
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Recognizers
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.TextContextMatchType
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.TokenizerFlags
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.UsesIdContextMatch
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.UsesLegacyHashes
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.WordCountFlags
  langs:
  - csharp
  - vb
  name: ITranslationMemorySetupOptions
  nameWithType: ITranslationMemorySetupOptions
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  type: Interface
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nRepresents the setup information that will be used to create an output translation memory (see <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemory.Setup\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  syntax:
    content: public interface ITranslationMemorySetupOptions
    content.vb: Public Interface ITranslationMemorySetupOptions
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Name
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Name
  id: Name
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ITranslationMemorySetupOptions.Name
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Name
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the name of the translation memory.\n"
  syntax:
    content: string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Name As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Name*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Description
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Description
  id: Description
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ITranslationMemorySetupOptions.Description
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Description
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the dsecription of the translation memory. Can be null.\n"
  syntax:
    content: string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Description As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Description*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Copyright
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Copyright
  id: Copyright
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  langs:
  - csharp
  - vb
  name: Copyright
  nameWithType: ITranslationMemorySetupOptions.Copyright
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Copyright
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the copyright string of the translation memory. Can be null.\n"
  syntax:
    content: string Copyright { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Copyright As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Copyright*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.ExpirationDate
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.ExpirationDate
  id: ExpirationDate
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  langs:
  - csharp
  - vb
  name: ExpirationDate
  nameWithType: ITranslationMemorySetupOptions.ExpirationDate
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.ExpirationDate
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the expiration date of the translation memory. Can be null.\n"
  syntax:
    content: DateTime? ExpirationDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Property ExpirationDate As Date?
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.ExpirationDate*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.LanguageDirections
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.LanguageDirections
  id: LanguageDirections
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  langs:
  - csharp
  - vb
  name: LanguageDirections
  nameWithType: ITranslationMemorySetupOptions.LanguageDirections
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.LanguageDirections
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the language direction of this translation memory.\n"
  syntax:
    content: ICollection<LanguagePair> LanguageDirections { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Sdl.LanguagePlatform.Core.LanguagePair}
    content.vb: ReadOnly Property LanguageDirections As ICollection(Of LanguagePair)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.LanguageDirections*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.FuzzyIndexes
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.FuzzyIndexes
  id: FuzzyIndexes
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  langs:
  - csharp
  - vb
  name: FuzzyIndexes
  nameWithType: ITranslationMemorySetupOptions.FuzzyIndexes
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.FuzzyIndexes
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the fuzzy indexes that will be created in the translation memory.\n"
  syntax:
    content: FuzzyIndexes FuzzyIndexes { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexes
    content.vb: Property FuzzyIndexes As FuzzyIndexes
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.FuzzyIndexes*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Recognizers
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Recognizers
  id: Recognizers
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  langs:
  - csharp
  - vb
  name: Recognizers
  nameWithType: ITranslationMemorySetupOptions.Recognizers
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Recognizers
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets which entities should be recognized by the translation memory.\n"
  syntax:
    content: BuiltinRecognizers Recognizers { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.BuiltinRecognizers
    content.vb: Property Recognizers As BuiltinRecognizers
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Recognizers*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.TokenizerFlags
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.TokenizerFlags
  id: TokenizerFlags
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  langs:
  - csharp
  - vb
  name: TokenizerFlags
  nameWithType: ITranslationMemorySetupOptions.TokenizerFlags
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.TokenizerFlags
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the flags affecting tokenizer behaviour for this TM.\n<remarks>Note that changing tokenizer flags may require reindexing.</remarks>\n"
  syntax:
    content: TokenizerFlags TokenizerFlags { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.Core.Tokenization.TokenizerFlags
    content.vb: Property TokenizerFlags As TokenizerFlags
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.TokenizerFlags*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.WordCountFlags
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.WordCountFlags
  id: WordCountFlags
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  langs:
  - csharp
  - vb
  name: WordCountFlags
  nameWithType: ITranslationMemorySetupOptions.WordCountFlags
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.WordCountFlags
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the flags affecting word count behaviour for this TM.\n"
  syntax:
    content: WordCountFlags WordCountFlags { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.WordCountFlags
    content.vb: Property WordCountFlags As WordCountFlags
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.WordCountFlags*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.FGASupport
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.FGASupport
  id: FGASupport
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  langs:
  - csharp
  - vb
  name: FGASupport
  nameWithType: ITranslationMemorySetupOptions.FGASupport
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.FGASupport
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the fine-grained alignment support for this TM.\n"
  syntax:
    content: FGASupport FGASupport { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FGASupport
    content.vb: Property FGASupport As FGASupport
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.FGASupport*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Fields
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Fields
  id: Fields
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: ITranslationMemorySetupOptions.Fields
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Fields
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the list of fields for this translation memory. When using an automatic method of generating the setup information,\nthis list can contain multiple fields with the same name but of different types. These differences must be resolved before\nstarting the migration process or will result in an exception being thrown.\n"
  syntax:
    content: IList<FieldDefinition> Fields { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition}
    content.vb: Property Fields As IList(Of FieldDefinition)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Fields*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.InputFieldIdentifierMappings
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.InputFieldIdentifierMappings
  id: InputFieldIdentifierMappings
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  langs:
  - csharp
  - vb
  name: InputFieldIdentifierMappings
  nameWithType: ITranslationMemorySetupOptions.InputFieldIdentifierMappings
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.InputFieldIdentifierMappings
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the field identifier mappings, which map field names and types from the \ninput (legacy) field definitions to the output field definitions.\n"
  syntax:
    content: IFieldIdentifierMappingsCollection InputFieldIdentifierMappings { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IFieldIdentifierMappingsCollection
    content.vb: Property InputFieldIdentifierMappings As IFieldIdentifierMappingsCollection
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.InputFieldIdentifierMappings*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.LanguageResources
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.LanguageResources
  id: LanguageResources
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  langs:
  - csharp
  - vb
  name: LanguageResources
  nameWithType: ITranslationMemorySetupOptions.LanguageResources
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.LanguageResources
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the language resources to use for this translation memory. Can be null, \nin which case the default resources will be used.\n"
  syntax:
    content: IDictionary<CultureInfo, ILegacyLanguageResources> LanguageResources { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Globalization.CultureInfo,Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageResources}
    content.vb: Property LanguageResources As IDictionary(Of CultureInfo, ILegacyLanguageResources)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.LanguageResources*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.TextContextMatchType
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.TextContextMatchType
  id: TextContextMatchType
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  langs:
  - csharp
  - vb
  name: TextContextMatchType
  nameWithType: ITranslationMemorySetupOptions.TextContextMatchType
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.TextContextMatchType
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nReturns the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.TextContextMatchType\" data-throw-if-not-resolved=\"false\"></xref> specified for this TM when it was created.\n"
  syntax:
    content: TextContextMatchType TextContextMatchType { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.TextContextMatchType
    content.vb: Property TextContextMatchType As TextContextMatchType
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.TextContextMatchType*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.UsesIdContextMatch
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.UsesIdContextMatch
  id: UsesIdContextMatch
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  langs:
  - csharp
  - vb
  name: UsesIdContextMatch
  nameWithType: ITranslationMemorySetupOptions.UsesIdContextMatch
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.UsesIdContextMatch
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nIndicates whether this TM was created with IdContextMatch support\n"
  syntax:
    content: bool UsesIdContextMatch { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property UsesIdContextMatch As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.UsesIdContextMatch*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.UsesLegacyHashes
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.UsesLegacyHashes
  id: UsesLegacyHashes
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions
  langs:
  - csharp
  - vb
  name: UsesLegacyHashes
  nameWithType: ITranslationMemorySetupOptions.UsesLegacyHashes
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.UsesLegacyHashes
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nIndicates whether this TM uses legacy hashes\n"
  syntax:
    content: bool UsesLegacyHashes { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property UsesLegacyHashes As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.UsesLegacyHashes*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Name*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Name
  isExternal: true
  name: Name
  nameWithType: ITranslationMemorySetupOptions.Name
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Description*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Description
  isExternal: true
  name: Description
  nameWithType: ITranslationMemorySetupOptions.Description
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Description
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Copyright*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Copyright
  isExternal: true
  name: Copyright
  nameWithType: ITranslationMemorySetupOptions.Copyright
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Copyright
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.ExpirationDate*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.ExpirationDate
  isExternal: true
  name: ExpirationDate
  nameWithType: ITranslationMemorySetupOptions.ExpirationDate
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.ExpirationDate
- uid: System.Nullable{System.DateTime}
  commentId: '!:System.Nullable{System.DateTime}'
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.LanguageDirections*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.LanguageDirections
  isExternal: true
  name: LanguageDirections
  nameWithType: ITranslationMemorySetupOptions.LanguageDirections
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.LanguageDirections
- uid: System.Collections.Generic.ICollection{Sdl.LanguagePlatform.Core.LanguagePair}
  commentId: T:System.Collections.Generic.ICollection{Sdl.LanguagePlatform.Core.LanguagePair}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<LanguagePair>
  nameWithType: ICollection<LanguagePair>
  fullName: System.Collections.Generic.ICollection<Sdl.LanguagePlatform.Core.LanguagePair>
  nameWithType.vb: ICollection(Of LanguagePair)
  fullName.vb: System.Collections.Generic.ICollection(Of Sdl.LanguagePlatform.Core.LanguagePair)
  name.vb: ICollection(Of LanguagePair)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.LanguagePair
    name: LanguagePair
    nameWithType: LanguagePair
    fullName: Sdl.LanguagePlatform.Core.LanguagePair
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.LanguagePair
    name: LanguagePair
    nameWithType: LanguagePair
    fullName: Sdl.LanguagePlatform.Core.LanguagePair
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.FuzzyIndexes*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.FuzzyIndexes
  isExternal: true
  name: FuzzyIndexes
  nameWithType: ITranslationMemorySetupOptions.FuzzyIndexes
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.FuzzyIndexes
- uid: Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexes
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexes
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FuzzyIndexes
  nameWithType: FuzzyIndexes
  fullName: Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexes
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Recognizers*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Recognizers
  isExternal: true
  name: Recognizers
  nameWithType: ITranslationMemorySetupOptions.Recognizers
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Recognizers
- uid: Sdl.LanguagePlatform.Core.Tokenization.BuiltinRecognizers
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.BuiltinRecognizers
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: BuiltinRecognizers
  nameWithType: BuiltinRecognizers
  fullName: Sdl.LanguagePlatform.Core.Tokenization.BuiltinRecognizers
- uid: Sdl.LanguagePlatform.Core.Tokenization
  commentId: N:Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Sdl.LanguagePlatform.Core.Tokenization
  nameWithType: Sdl.LanguagePlatform.Core.Tokenization
  fullName: Sdl.LanguagePlatform.Core.Tokenization
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.TokenizerFlags*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.TokenizerFlags
  isExternal: true
  name: TokenizerFlags
  nameWithType: ITranslationMemorySetupOptions.TokenizerFlags
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.TokenizerFlags
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenizerFlags
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.TokenizerFlags
  parent: Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: TokenizerFlags
  nameWithType: TokenizerFlags
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenizerFlags
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.WordCountFlags*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.WordCountFlags
  isExternal: true
  name: WordCountFlags
  nameWithType: ITranslationMemorySetupOptions.WordCountFlags
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.WordCountFlags
- uid: Sdl.LanguagePlatform.TranslationMemory.WordCountFlags
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.WordCountFlags
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: WordCountFlags
  nameWithType: WordCountFlags
  fullName: Sdl.LanguagePlatform.TranslationMemory.WordCountFlags
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.FGASupport*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.FGASupport
  isExternal: true
  name: FGASupport
  nameWithType: ITranslationMemorySetupOptions.FGASupport
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.FGASupport
- uid: Sdl.LanguagePlatform.TranslationMemory.FGASupport
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FGASupport
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FGASupport
  nameWithType: FGASupport
  fullName: Sdl.LanguagePlatform.TranslationMemory.FGASupport
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Fields*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Fields
  isExternal: true
  name: Fields
  nameWithType: ITranslationMemorySetupOptions.Fields
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.Fields
- uid: System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition}
  commentId: T:System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<FieldDefinition>
  nameWithType: IList<FieldDefinition>
  fullName: System.Collections.Generic.IList<Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition>
  nameWithType.vb: IList(Of FieldDefinition)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition)
  name.vb: IList(Of FieldDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
    name: FieldDefinition
    nameWithType: FieldDefinition
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
    name: FieldDefinition
    nameWithType: FieldDefinition
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.InputFieldIdentifierMappings*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.InputFieldIdentifierMappings
  isExternal: true
  name: InputFieldIdentifierMappings
  nameWithType: ITranslationMemorySetupOptions.InputFieldIdentifierMappings
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.InputFieldIdentifierMappings
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IFieldIdentifierMappingsCollection
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IFieldIdentifierMappingsCollection
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: IFieldIdentifierMappingsCollection
  nameWithType: IFieldIdentifierMappingsCollection
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IFieldIdentifierMappingsCollection
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.LanguageResources*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.LanguageResources
  isExternal: true
  name: LanguageResources
  nameWithType: ITranslationMemorySetupOptions.LanguageResources
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.LanguageResources
- uid: System.Collections.Generic.IDictionary{System.Globalization.CultureInfo,Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageResources}
  commentId: T:System.Collections.Generic.IDictionary{System.Globalization.CultureInfo,Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageResources}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<CultureInfo, ILegacyLanguageResources>
  nameWithType: IDictionary<CultureInfo, ILegacyLanguageResources>
  fullName: System.Collections.Generic.IDictionary<System.Globalization.CultureInfo, Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageResources>
  nameWithType.vb: IDictionary(Of CultureInfo, ILegacyLanguageResources)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Globalization.CultureInfo, Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageResources)
  name.vb: IDictionary(Of CultureInfo, ILegacyLanguageResources)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageResources
    name: ILegacyLanguageResources
    nameWithType: ILegacyLanguageResources
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageResources
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageResources
    name: ILegacyLanguageResources
    nameWithType: ILegacyLanguageResources
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyLanguageResources
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.TextContextMatchType*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.TextContextMatchType
  isExternal: true
  name: TextContextMatchType
  nameWithType: ITranslationMemorySetupOptions.TextContextMatchType
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.TextContextMatchType
- uid: Sdl.LanguagePlatform.TranslationMemory.TextContextMatchType
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TextContextMatchType
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: TextContextMatchType
  nameWithType: TextContextMatchType
  fullName: Sdl.LanguagePlatform.TranslationMemory.TextContextMatchType
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.UsesIdContextMatch*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.UsesIdContextMatch
  isExternal: true
  name: UsesIdContextMatch
  nameWithType: ITranslationMemorySetupOptions.UsesIdContextMatch
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.UsesIdContextMatch
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.UsesLegacyHashes*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.UsesLegacyHashes
  isExternal: true
  name: UsesLegacyHashes
  nameWithType: ITranslationMemorySetupOptions.UsesLegacyHashes
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITranslationMemorySetupOptions.UsesLegacyHashes
