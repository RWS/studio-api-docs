### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask
  commentId: T:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask
  id: AbstractFileLevelAutomaticTask
  parent: Sdl.ProjectAutomation.AutomaticTasks
  children:
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.#ctor
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Cancel(System.Boolean)
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Execute
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.IsCancelRequested
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.OnFileProgress(Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs)
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.OnInitializeTask
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.ProcessFile(Sdl.ProjectAutomation.Core.ProjectFile)
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Progress
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Project
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.ShouldAddNewFileVersion
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.TaskComplete
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.TaskFiles
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.UploadFile(Sdl.ProjectAutomation.Core.ProjectFile,System.String)
  langs:
  - csharp
  - vb
  name: AbstractFileLevelAutomaticTask
  nameWithType: AbstractFileLevelAutomaticTask
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask
  type: Class
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  summary: Base class for file level automatic task.
  example: []
  syntax:
    content: public abstract class AbstractFileLevelAutomaticTask
    content.vb: Public MustInherit Class AbstractFileLevelAutomaticTask
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.OnInitializeTask
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.OnInitializeTask
  id: OnInitializeTask
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask
  langs:
  - csharp
  - vb
  name: OnInitializeTask()
  nameWithType: AbstractFileLevelAutomaticTask.OnInitializeTask()
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.OnInitializeTask()
  type: Method
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  summary: Called when the task is initialized. Overwrite this function where further initialization is required.
  example: []
  syntax:
    content: protected virtual void OnInitializeTask()
    content.vb: Protected Overridable Sub OnInitializeTask()
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.OnInitializeTask*
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.TaskComplete
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.TaskComplete
  id: TaskComplete
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask
  langs:
  - csharp
  - vb
  name: TaskComplete()
  nameWithType: AbstractFileLevelAutomaticTask.TaskComplete()
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.TaskComplete()
  type: Method
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  summary: Called when the task is completed. Overwrite this function when further operation is required.
  example: []
  syntax:
    content: public virtual void TaskComplete()
    content.vb: Public Overridable Sub TaskComplete()
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.TaskComplete*
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Cancel(System.Boolean)
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Cancel(System.Boolean)
  id: Cancel(System.Boolean)
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask
  langs:
  - csharp
  - vb
  name: Cancel(bool)
  nameWithType: AbstractFileLevelAutomaticTask.Cancel(bool)
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Cancel(bool)
  type: Method
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  summary: Called when the task execution is request to cancel.
  example: []
  syntax:
    content: public virtual void Cancel(bool doRollback)
    parameters:
    - id: doRollback
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Sub Cancel(doRollback As Boolean)
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Cancel*
  nameWithType.vb: AbstractFileLevelAutomaticTask.Cancel(Boolean)
  fullName.vb: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Cancel(Boolean)
  name.vb: Cancel(Boolean)
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Execute
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Execute
  id: Execute
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: AbstractFileLevelAutomaticTask.Execute()
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Execute()
  type: Method
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  summary: >-
    Executes the task. This function does the default implementation: ensure the files ready for the task, calls ProcessFile for each files and then populate 

    the files if the files are updated.
  example: []
  syntax:
    content: public virtual void Execute()
    content.vb: Public Overridable Sub Execute()
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Execute*
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.UploadFile(Sdl.ProjectAutomation.Core.ProjectFile,System.String)
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.UploadFile(Sdl.ProjectAutomation.Core.ProjectFile,System.String)
  id: UploadFile(Sdl.ProjectAutomation.Core.ProjectFile,System.String)
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask
  langs:
  - csharp
  - vb
  name: UploadFile(ProjectFile, string)
  nameWithType: AbstractFileLevelAutomaticTask.UploadFile(ProjectFile, string)
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.UploadFile(Sdl.ProjectAutomation.Core.ProjectFile, string)
  type: Method
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  summary: Uploads the file for the new version generated.
  example: []
  syntax:
    content: protected virtual void UploadFile(ProjectFile projectFile, string localFilePath)
    parameters:
    - id: projectFile
      type: Sdl.ProjectAutomation.Core.ProjectFile
      description: The file to update
    - id: localFilePath
      type: System.String
      description: The local path of the file.
    content.vb: Protected Overridable Sub UploadFile(projectFile As ProjectFile, localFilePath As String)
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.UploadFile*
  nameWithType.vb: AbstractFileLevelAutomaticTask.UploadFile(ProjectFile, String)
  fullName.vb: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.UploadFile(Sdl.ProjectAutomation.Core.ProjectFile, String)
  name.vb: UploadFile(ProjectFile, String)
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.ProcessFile(Sdl.ProjectAutomation.Core.ProjectFile)
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.ProcessFile(Sdl.ProjectAutomation.Core.ProjectFile)
  id: ProcessFile(Sdl.ProjectAutomation.Core.ProjectFile)
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask
  langs:
  - csharp
  - vb
  name: ProcessFile(ProjectFile)
  nameWithType: AbstractFileLevelAutomaticTask.ProcessFile(ProjectFile)
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.ProcessFile(Sdl.ProjectAutomation.Core.ProjectFile)
  type: Method
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  summary: Processes the file. It is implemented in the derived class.
  example: []
  syntax:
    content: protected abstract void ProcessFile(ProjectFile projectFile)
    parameters:
    - id: projectFile
      type: Sdl.ProjectAutomation.Core.ProjectFile
      description: the file to process
    content.vb: Protected MustOverride Sub ProcessFile(projectFile As ProjectFile)
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.ProcessFile*
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.OnFileProgress(Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs)
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.OnFileProgress(Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs)
  id: OnFileProgress(Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs)
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask
  langs:
  - csharp
  - vb
  name: OnFileProgress(TaskProgressEventArgs)
  nameWithType: AbstractFileLevelAutomaticTask.OnFileProgress(TaskProgressEventArgs)
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.OnFileProgress(Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs)
  type: Method
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  summary: Reports the progress of this task.
  example: []
  syntax:
    content: protected virtual void OnFileProgress(TaskProgressEventArgs e)
    parameters:
    - id: e
      type: Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs
      description: The task progress event args
    content.vb: Protected Overridable Sub OnFileProgress(e As TaskProgressEventArgs)
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.OnFileProgress*
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.#ctor
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.#ctor
  id: '#ctor'
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask
  langs:
  - csharp
  - vb
  name: AbstractFileLevelAutomaticTask()
  nameWithType: AbstractFileLevelAutomaticTask.AbstractFileLevelAutomaticTask()
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.AbstractFileLevelAutomaticTask()
  type: Constructor
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  syntax:
    content: protected AbstractFileLevelAutomaticTask()
    content.vb: Protected Sub New()
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.#ctor*
  nameWithType.vb: AbstractFileLevelAutomaticTask.New()
  fullName.vb: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.New()
  name.vb: New()
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.ShouldAddNewFileVersion
  commentId: P:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.ShouldAddNewFileVersion
  id: ShouldAddNewFileVersion
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask
  langs:
  - csharp
  - vb
  name: ShouldAddNewFileVersion
  nameWithType: AbstractFileLevelAutomaticTask.ShouldAddNewFileVersion
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.ShouldAddNewFileVersion
  type: Property
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  summary: >-
    Gets/Sets if this task should add a new version of the files. If the task updates the task files, 

    it should be set to true so the updated files will be preserved.
  example: []
  syntax:
    content: public bool ShouldAddNewFileVersion { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ShouldAddNewFileVersion As Boolean
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.ShouldAddNewFileVersion*
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.IsCancelRequested
  commentId: P:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.IsCancelRequested
  id: IsCancelRequested
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask
  langs:
  - csharp
  - vb
  name: IsCancelRequested
  nameWithType: AbstractFileLevelAutomaticTask.IsCancelRequested
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.IsCancelRequested
  type: Property
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  summary: Checks if the task is requested to be cancelled.
  example: []
  syntax:
    content: public bool IsCancelRequested { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCancelRequested As Boolean
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.IsCancelRequested*
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Project
  commentId: P:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Project
  id: Project
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask
  langs:
  - csharp
  - vb
  name: Project
  nameWithType: AbstractFileLevelAutomaticTask.Project
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Project
  type: Property
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  summary: Gets the project for this task.
  example: []
  syntax:
    content: public IProject Project { get; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.Core.IProject
    content.vb: Public ReadOnly Property Project As IProject
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Project*
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.TaskFiles
  commentId: P:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.TaskFiles
  id: TaskFiles
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask
  langs:
  - csharp
  - vb
  name: TaskFiles
  nameWithType: AbstractFileLevelAutomaticTask.TaskFiles
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.TaskFiles
  type: Property
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  summary: Gets the files for this task.
  example: []
  syntax:
    content: public ProjectFile[] TaskFiles { get; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile[]
    content.vb: Public ReadOnly Property TaskFiles As ProjectFile()
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.TaskFiles*
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Progress
  commentId: E:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Progress
  id: Progress
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: AbstractFileLevelAutomaticTask.Progress
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Progress
  type: Event
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  summary: The task progress event.
  example: []
  syntax:
    content: public event EventHandler<TaskProgressEventArgs> Progress
    return:
      type: System.EventHandler{Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs}
    content.vb: Public Event Progress As EventHandler(Of TaskProgressEventArgs)
references:
- uid: Sdl.ProjectAutomation.AutomaticTasks
  commentId: N:Sdl.ProjectAutomation.AutomaticTasks
  isExternal: true
  href: Sdl.html
  name: Sdl.ProjectAutomation.AutomaticTasks
  nameWithType: Sdl.ProjectAutomation.AutomaticTasks
  fullName: Sdl.ProjectAutomation.AutomaticTasks
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.ProjectAutomation
    name: ProjectAutomation
    isExternal: true
    href: Sdl.ProjectAutomation.html
  - name: .
  - uid: Sdl.ProjectAutomation.AutomaticTasks
    name: AutomaticTasks
    isExternal: true
    href: Sdl.ProjectAutomation.AutomaticTasks.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.ProjectAutomation
    name: ProjectAutomation
    isExternal: true
    href: Sdl.ProjectAutomation.html
  - name: .
  - uid: Sdl.ProjectAutomation.AutomaticTasks
    name: AutomaticTasks
    isExternal: true
    href: Sdl.ProjectAutomation.AutomaticTasks.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.OnInitializeTask*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.OnInitializeTask
  isExternal: true
  href: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.html#Sdl_ProjectAutomation_AutomaticTasks_AbstractFileLevelAutomaticTask_OnInitializeTask
  name: OnInitializeTask
  nameWithType: AbstractFileLevelAutomaticTask.OnInitializeTask
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.OnInitializeTask
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.TaskComplete*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.TaskComplete
  isExternal: true
  href: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.html#Sdl_ProjectAutomation_AutomaticTasks_AbstractFileLevelAutomaticTask_TaskComplete
  name: TaskComplete
  nameWithType: AbstractFileLevelAutomaticTask.TaskComplete
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.TaskComplete
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Cancel*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Cancel
  isExternal: true
  href: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.html#Sdl_ProjectAutomation_AutomaticTasks_AbstractFileLevelAutomaticTask_Cancel_System_Boolean_
  name: Cancel
  nameWithType: AbstractFileLevelAutomaticTask.Cancel
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Cancel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Execute*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Execute
  isExternal: true
  href: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.html#Sdl_ProjectAutomation_AutomaticTasks_AbstractFileLevelAutomaticTask_Execute
  name: Execute
  nameWithType: AbstractFileLevelAutomaticTask.Execute
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Execute
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.UploadFile*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.UploadFile
  isExternal: true
  href: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.html#Sdl_ProjectAutomation_AutomaticTasks_AbstractFileLevelAutomaticTask_UploadFile_Sdl_ProjectAutomation_Core_ProjectFile_System_String_
  name: UploadFile
  nameWithType: AbstractFileLevelAutomaticTask.UploadFile
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.UploadFile
- uid: Sdl.ProjectAutomation.Core.ProjectFile
  commentId: T:Sdl.ProjectAutomation.Core.ProjectFile
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: ProjectFile
  nameWithType: ProjectFile
  fullName: Sdl.ProjectAutomation.Core.ProjectFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Sdl.ProjectAutomation.Core
  commentId: N:Sdl.ProjectAutomation.Core
  isExternal: true
  name: Sdl.ProjectAutomation.Core
  nameWithType: Sdl.ProjectAutomation.Core
  fullName: Sdl.ProjectAutomation.Core
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.ProjectAutomation
    name: ProjectAutomation
    isExternal: true
  - name: .
  - uid: Sdl.ProjectAutomation.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
  - name: .
  - uid: Sdl.ProjectAutomation
    name: ProjectAutomation
    isExternal: true
  - name: .
  - uid: Sdl.ProjectAutomation.Core
    name: Core
    isExternal: true
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.ProcessFile*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.ProcessFile
  isExternal: true
  href: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.html#Sdl_ProjectAutomation_AutomaticTasks_AbstractFileLevelAutomaticTask_ProcessFile_Sdl_ProjectAutomation_Core_ProjectFile_
  name: ProcessFile
  nameWithType: AbstractFileLevelAutomaticTask.ProcessFile
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.ProcessFile
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.OnFileProgress*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.OnFileProgress
  isExternal: true
  href: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.html#Sdl_ProjectAutomation_AutomaticTasks_AbstractFileLevelAutomaticTask_OnFileProgress_Sdl_ProjectAutomation_AutomaticTasks_TaskProgressEventArgs_
  name: OnFileProgress
  nameWithType: AbstractFileLevelAutomaticTask.OnFileProgress
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.OnFileProgress
- uid: Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs
  commentId: T:Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs
  parent: Sdl.ProjectAutomation.AutomaticTasks
  isExternal: true
  href: Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs.html
  name: TaskProgressEventArgs
  nameWithType: TaskProgressEventArgs
  fullName: Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.#ctor
  isExternal: true
  href: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.html#Sdl_ProjectAutomation_AutomaticTasks_AbstractFileLevelAutomaticTask__ctor
  name: AbstractFileLevelAutomaticTask
  nameWithType: AbstractFileLevelAutomaticTask.AbstractFileLevelAutomaticTask
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.AbstractFileLevelAutomaticTask
  nameWithType.vb: AbstractFileLevelAutomaticTask.New
  fullName.vb: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.New
  name.vb: New
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.ShouldAddNewFileVersion*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.ShouldAddNewFileVersion
  isExternal: true
  href: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.html#Sdl_ProjectAutomation_AutomaticTasks_AbstractFileLevelAutomaticTask_ShouldAddNewFileVersion
  name: ShouldAddNewFileVersion
  nameWithType: AbstractFileLevelAutomaticTask.ShouldAddNewFileVersion
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.ShouldAddNewFileVersion
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.IsCancelRequested*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.IsCancelRequested
  isExternal: true
  href: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.html#Sdl_ProjectAutomation_AutomaticTasks_AbstractFileLevelAutomaticTask_IsCancelRequested
  name: IsCancelRequested
  nameWithType: AbstractFileLevelAutomaticTask.IsCancelRequested
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.IsCancelRequested
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Project*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Project
  isExternal: true
  href: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.html#Sdl_ProjectAutomation_AutomaticTasks_AbstractFileLevelAutomaticTask_Project
  name: Project
  nameWithType: AbstractFileLevelAutomaticTask.Project
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.Project
- uid: Sdl.ProjectAutomation.Core.IProject
  commentId: T:Sdl.ProjectAutomation.Core.IProject
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: IProject
  nameWithType: IProject
  fullName: Sdl.ProjectAutomation.Core.IProject
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.TaskFiles*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.TaskFiles
  isExternal: true
  href: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.html#Sdl_ProjectAutomation_AutomaticTasks_AbstractFileLevelAutomaticTask_TaskFiles
  name: TaskFiles
  nameWithType: AbstractFileLevelAutomaticTask.TaskFiles
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileLevelAutomaticTask.TaskFiles
- uid: Sdl.ProjectAutomation.Core.ProjectFile[]
  isExternal: true
  name: ProjectFile[]
  nameWithType: ProjectFile[]
  fullName: Sdl.ProjectAutomation.Core.ProjectFile[]
  nameWithType.vb: ProjectFile()
  fullName.vb: Sdl.ProjectAutomation.Core.ProjectFile()
  name.vb: ProjectFile()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.ProjectFile
    name: ProjectFile
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.ProjectFile
    name: ProjectFile
    isExternal: true
  - name: (
  - name: )
- uid: System.EventHandler{Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs}
  commentId: T:System.EventHandler{Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TaskProgressEventArgs>
  nameWithType: EventHandler<TaskProgressEventArgs>
  fullName: System.EventHandler<Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs>
  nameWithType.vb: EventHandler(Of TaskProgressEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs)
  name.vb: EventHandler(Of TaskProgressEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs
    name: TaskProgressEventArgs
    isExternal: true
    href: Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs
    name: TaskProgressEventArgs
    isExternal: true
    href: Sdl.ProjectAutomation.AutomaticTasks.TaskProgressEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
