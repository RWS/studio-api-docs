### YamlMime:ManagedReference
items:
- uid: Sdl.Core.Globalization.LegacyTradosLanguage
  commentId: T:Sdl.Core.Globalization.LegacyTradosLanguage
  id: LegacyTradosLanguage
  parent: Sdl.Core.Globalization
  children:
  - Sdl.Core.Globalization.LegacyTradosLanguage.#ctor(System.Int32)
  - Sdl.Core.Globalization.LegacyTradosLanguage.#ctor(System.String)
  - Sdl.Core.Globalization.LegacyTradosLanguage.Equals(System.Object)
  - Sdl.Core.Globalization.LegacyTradosLanguage.GetAllLcids
  - Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishLanguageNameFromLcid
  - Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishLanguageNameFromLcid(System.Int32)
  - Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishNameFromLcid(System.Int32)
  - Sdl.Core.Globalization.LegacyTradosLanguage.GetHashCode
  - Sdl.Core.Globalization.LegacyTradosLanguage.GetIsoCodeFromLcid(System.Int32,System.Boolean)
  - Sdl.Core.Globalization.LegacyTradosLanguage.GetLanguageCode(System.Int32)
  - Sdl.Core.Globalization.LegacyTradosLanguage.GetLcidFromIsoCode(System.String)
  - Sdl.Core.Globalization.LegacyTradosLanguage.GetLcids(System.Int32)
  - Sdl.Core.Globalization.LegacyTradosLanguage.GetLocaleInfo(Sdl.Core.Globalization.LanguageFormat,System.Boolean)
  - Sdl.Core.Globalization.LegacyTradosLanguage.GetLocaleInfo(System.Int32,Sdl.Core.Globalization.LanguageFormat,System.Boolean)
  - Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeLanguageNameFromLcid
  - Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeLanguageNameFromLcid(System.Int32)
  - Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeNameFromLcid(System.Int32)
  - Sdl.Core.Globalization.LegacyTradosLanguage.GetSchema
  - Sdl.Core.Globalization.LegacyTradosLanguage.IsDefaultForCountry(System.Int32)
  - Sdl.Core.Globalization.LegacyTradosLanguage.IsInstalled
  - Sdl.Core.Globalization.LegacyTradosLanguage.IsInstalledLcid(System.Int32)
  - Sdl.Core.Globalization.LegacyTradosLanguage.IsoCode
  - Sdl.Core.Globalization.LegacyTradosLanguage.IsProprietary
  - Sdl.Core.Globalization.LegacyTradosLanguage.IsProprietaryLcid(System.Int32)
  - Sdl.Core.Globalization.LegacyTradosLanguage.IsValid
  - Sdl.Core.Globalization.LegacyTradosLanguage.Lcid
  - Sdl.Core.Globalization.LegacyTradosLanguage.ReadXml(System.Xml.XmlReader)
  - Sdl.Core.Globalization.LegacyTradosLanguage.ToString
  - Sdl.Core.Globalization.LegacyTradosLanguage.UsesCharacterCounts
  - Sdl.Core.Globalization.LegacyTradosLanguage.UsesCharacterCounts(System.Int32)
  - Sdl.Core.Globalization.LegacyTradosLanguage.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: LegacyTradosLanguage
  nameWithType: LegacyTradosLanguage
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage
  type: Struct
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nRepresents a project language in the client object model\n"
  syntax:
    content: public struct LegacyTradosLanguage
    content.vb: Public Structure LegacyTradosLanguage
  implements:
  - System.Xml.Serialization.IXmlSerializable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.IsInstalledLcid(System.Int32)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.IsInstalledLcid(System.Int32)
  id: IsInstalledLcid(System.Int32)
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: IsInstalledLcid(Int32)
  nameWithType: LegacyTradosLanguage.IsInstalledLcid(Int32)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.IsInstalledLcid(System.Int32)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\n<code>true</code> if the specified LCID is supported by this operating system installation.\n"
  remarks: "\n<p>\nThe implementation calls <code>IsValidLocale</code> on the Win32 API.\n</p>\n<p>\nNote that this returns <code>false</code> for proprietary TRADOS &quot;LCID&quot; values.\n</p>\n"
  syntax:
    content: public static bool IsInstalledLcid(int lcid)
    parameters:
    - id: lcid
      type: System.Int32
      description: Locale identifier of the locale to validate
    return:
      type: System.Boolean
      description: <code>true</code> if the specified LCID is supported by this operating system installation.
    content.vb: Public Shared Function IsInstalledLcid(lcid As Integer) As Boolean
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.IsInstalledLcid*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.IsProprietaryLcid(System.Int32)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.IsProprietaryLcid(System.Int32)
  id: IsProprietaryLcid(System.Int32)
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: IsProprietaryLcid(Int32)
  nameWithType: LegacyTradosLanguage.IsProprietaryLcid(Int32)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.IsProprietaryLcid(System.Int32)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\n<code>true</code> if the LCID is one of the TRADOS proprietary &quot;LCID&quot; values.\n"
  syntax:
    content: public static bool IsProprietaryLcid(int lcid)
    parameters:
    - id: lcid
      type: System.Int32
      description: Locale identifier of the locale to validate
    return:
      type: System.Boolean
      description: <code>true</code> if the LCID is one of the TRADOS proprietary &quot;LCID&quot; values.
    content.vb: Public Shared Function IsProprietaryLcid(lcid As Integer) As Boolean
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.IsProprietaryLcid*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.#ctor(System.String)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: LegacyTradosLanguage(String)
  nameWithType: LegacyTradosLanguage.LegacyTradosLanguage(String)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.LegacyTradosLanguage(System.String)
  type: Constructor
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nConstruction from a 2 or 5 letter ISO code (i.e. with or without sublanguage/region).\nThe 2 letter language code should be separated from the 2 letter country code with a dash.\nExamples:\nEN-US, DE-DE, SW-SE, JP\n"
  syntax:
    content: public LegacyTradosLanguage(string isoCode)
    parameters:
    - id: isoCode
      type: System.String
      description: the isoCode (e.g. en-us, de-de etc)
    content.vb: Public Sub New(isoCode As String)
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.#ctor(System.Int32)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: LegacyTradosLanguage(Int32)
  nameWithType: LegacyTradosLanguage.LegacyTradosLanguage(Int32)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.LegacyTradosLanguage(System.Int32)
  type: Constructor
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nConstruction from an LCID value. The LCID can be a valid\nWindows/.NET supported LCID, or a TRADOS defined &quot;LCID&quot;, such as 2108 for Gaelic (Scotland).\n"
  syntax:
    content: public LegacyTradosLanguage(int lcid)
    parameters:
    - id: lcid
      type: System.Int32
      description: Locale identifier of the locale to validate
    content.vb: Public Sub New(lcid As Integer)
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.Equals(System.Object)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: LegacyTradosLanguage.Equals(Object)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.Equals(System.Object)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nCompares two Language objects.\nIf they are both valid and have the same LCID they are considered equal.\nIf they are not valid they are considered equal if they have the same &quot;ISO code&quot;.\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: the object to compare to
    return:
      type: System.Boolean
      description: true if they are both of type LegacyTradosLanguage with the same Lcid and IsoCode
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetHashCode
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.GetHashCode
  id: GetHashCode
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: LegacyTradosLanguage.GetHashCode()
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetHashCode()
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nReturns a hash code value for the Language object.\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code value for the Language object.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.ToString
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.ToString
  id: ToString
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: LegacyTradosLanguage.ToString()
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.ToString()
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representing the Language object.\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> representing the Language object.
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetLocaleInfo(Sdl.Core.Globalization.LanguageFormat,System.Boolean)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.GetLocaleInfo(Sdl.Core.Globalization.LanguageFormat,System.Boolean)
  id: GetLocaleInfo(Sdl.Core.Globalization.LanguageFormat,System.Boolean)
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: GetLocaleInfo(LanguageFormat, Boolean)
  nameWithType: LegacyTradosLanguage.GetLocaleInfo(LanguageFormat, Boolean)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetLocaleInfo(Sdl.Core.Globalization.LanguageFormat, System.Boolean)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nRetrieves the locale info.\n"
  syntax:
    content: public string GetLocaleInfo(LanguageFormat languageFormat, bool includeCountry)
    parameters:
    - id: languageFormat
      type: Sdl.Core.Globalization.LanguageFormat
      description: An enum specifying whether to return the language info as English, Native or ISO form.
    - id: includeCountry
      type: System.Boolean
      description: A boolean specifying whether to mention the region in the return string.
    return:
      type: System.String
      description: A string describing the Locale id.
    content.vb: Public Function GetLocaleInfo(languageFormat As LanguageFormat, includeCountry As Boolean) As String
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.GetLocaleInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetLocaleInfo(System.Int32,Sdl.Core.Globalization.LanguageFormat,System.Boolean)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.GetLocaleInfo(System.Int32,Sdl.Core.Globalization.LanguageFormat,System.Boolean)
  id: GetLocaleInfo(System.Int32,Sdl.Core.Globalization.LanguageFormat,System.Boolean)
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: GetLocaleInfo(Int32, LanguageFormat, Boolean)
  nameWithType: LegacyTradosLanguage.GetLocaleInfo(Int32, LanguageFormat, Boolean)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetLocaleInfo(System.Int32, Sdl.Core.Globalization.LanguageFormat, System.Boolean)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nRetrieves the locale info.\n"
  syntax:
    content: public static string GetLocaleInfo(int lcid, LanguageFormat languageFormat, bool includeCountry)
    parameters:
    - id: lcid
      type: System.Int32
      description: A Windows locale ID.
    - id: languageFormat
      type: Sdl.Core.Globalization.LanguageFormat
      description: An enum specifying whether to return the language info as English, Native or ISO form.
    - id: includeCountry
      type: System.Boolean
      description: A boolean specifying whether to mention the region in the return string.
    return:
      type: System.String
      description: A string describing the Locale id.
    content.vb: Public Shared Function GetLocaleInfo(lcid As Integer, languageFormat As LanguageFormat, includeCountry As Boolean) As String
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.GetLocaleInfo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetAllLcids
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.GetAllLcids
  id: GetAllLcids
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: GetAllLcids()
  nameWithType: LegacyTradosLanguage.GetAllLcids()
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetAllLcids()
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nGet all the possible Trados LCIDs from languages/locations known to TRADOS.\n"
  syntax:
    content: public static int[] GetAllLcids()
    return:
      type: System.Int32[]
      description: An array of LCIDs
    content.vb: Public Shared Function GetAllLcids As Integer()
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.GetAllLcids*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetLcidFromIsoCode(System.String)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.GetLcidFromIsoCode(System.String)
  id: GetLcidFromIsoCode(System.String)
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: GetLcidFromIsoCode(String)
  nameWithType: LegacyTradosLanguage.GetLcidFromIsoCode(String)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetLcidFromIsoCode(System.String)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nConverts an ISO code to an LCID, taking TRADOS specific values into account.\n"
  syntax:
    content: public static int GetLcidFromIsoCode(string isoCode)
    parameters:
    - id: isoCode
      type: System.String
      description: The ISO code
    return:
      type: System.Int32
      description: The LCID corresponding to <code data-dev-comment-type="paramref" class="paramref">isoCode</code>
    content.vb: Public Shared Function GetLcidFromIsoCode(isoCode As String) As Integer
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.GetLcidFromIsoCode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetIsoCodeFromLcid(System.Int32,System.Boolean)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.GetIsoCodeFromLcid(System.Int32,System.Boolean)
  id: GetIsoCodeFromLcid(System.Int32,System.Boolean)
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: GetIsoCodeFromLcid(Int32, Boolean)
  nameWithType: LegacyTradosLanguage.GetIsoCodeFromLcid(Int32, Boolean)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetIsoCodeFromLcid(System.Int32, System.Boolean)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nConverts between LCID and ISO language codes.\n"
  remarks: "\nThis method also supports the TRADOS specific locales that are not otherwise supported by Windows and .NET.\n"
  syntax:
    content: public static string GetIsoCodeFromLcid(int lcid, bool includeCountry)
    parameters:
    - id: lcid
      type: System.Int32
      description: An LCID identifier
    - id: includeCountry
      type: System.Boolean
      description: >-
        if <code>true</code> the returned ISO language code includes the ISO country code separated

        from the language code with a dash (e.g. en-US).

        If false only the 2 character ISO language code will be returned.
    return:
      type: System.String
      description: The ISO code corresponding to <code data-dev-comment-type="paramref" class="paramref">lcid</code>
    content.vb: Public Shared Function GetIsoCodeFromLcid(lcid As Integer, includeCountry As Boolean) As String
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.GetIsoCodeFromLcid*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.IsDefaultForCountry(System.Int32)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.IsDefaultForCountry(System.Int32)
  id: IsDefaultForCountry(System.Int32)
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: IsDefaultForCountry(Int32)
  nameWithType: LegacyTradosLanguage.IsDefaultForCountry(Int32)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.IsDefaultForCountry(System.Int32)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nDetermines whether this is the default LCID for the country\n"
  syntax:
    content: public static bool IsDefaultForCountry(int lcid)
    parameters:
    - id: lcid
      type: System.Int32
      description: An LCID identifier
    return:
      type: System.Boolean
      description: Whether this is the default LCID for the country
    content.vb: Public Shared Function IsDefaultForCountry(lcid As Integer) As Boolean
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.IsDefaultForCountry*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishLanguageNameFromLcid
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishLanguageNameFromLcid
  id: GetEnglishLanguageNameFromLcid
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: GetEnglishLanguageNameFromLcid()
  nameWithType: LegacyTradosLanguage.GetEnglishLanguageNameFromLcid()
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishLanguageNameFromLcid()
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nReturns the English language name of the locale.\n"
  remarks: "\nThis method also supports the TRADOS specific locales that are not otherwise supported by Windows and .NET.\n"
  syntax:
    content: public string GetEnglishLanguageNameFromLcid()
    return:
      type: System.String
      description: The English language name of the locale specified by <xref href="Sdl.Core.Globalization.LegacyTradosLanguage.Lcid" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function GetEnglishLanguageNameFromLcid As String
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishLanguageNameFromLcid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishLanguageNameFromLcid(System.Int32)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishLanguageNameFromLcid(System.Int32)
  id: GetEnglishLanguageNameFromLcid(System.Int32)
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: GetEnglishLanguageNameFromLcid(Int32)
  nameWithType: LegacyTradosLanguage.GetEnglishLanguageNameFromLcid(Int32)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishLanguageNameFromLcid(System.Int32)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nReturns the English language name of the locale specified by <code data-dev-comment-type=\"paramref\" class=\"paramref\">lcid</code>.\n"
  remarks: "\nThis method also supports the TRADOS specific locales that are not otherwise supported by Windows and .NET.\n"
  syntax:
    content: public static string GetEnglishLanguageNameFromLcid(int lcid)
    parameters:
    - id: lcid
      type: System.Int32
      description: An LCID
    return:
      type: System.String
      description: The English language name of the locale specified by <code data-dev-comment-type="paramref" class="paramref">lcid</code>
    content.vb: Public Shared Function GetEnglishLanguageNameFromLcid(lcid As Integer) As String
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishLanguageNameFromLcid*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishNameFromLcid(System.Int32)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishNameFromLcid(System.Int32)
  id: GetEnglishNameFromLcid(System.Int32)
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: GetEnglishNameFromLcid(Int32)
  nameWithType: LegacyTradosLanguage.GetEnglishNameFromLcid(Int32)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishNameFromLcid(System.Int32)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nReturns the English language and region name of the locale specified by <code data-dev-comment-type=\"paramref\" class=\"paramref\">lcid</code>.\n"
  remarks: "\nThis method also supports the TRADOS specific locales that are not otherwise supported by Windows and .NET.\n"
  syntax:
    content: public static string GetEnglishNameFromLcid(int lcid)
    parameters:
    - id: lcid
      type: System.Int32
      description: An LCID
    return:
      type: System.String
      description: The English language and region name of the locale specified by <code data-dev-comment-type="paramref" class="paramref">lcid</code>
    content.vb: Public Shared Function GetEnglishNameFromLcid(lcid As Integer) As String
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishNameFromLcid*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeLanguageNameFromLcid
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeLanguageNameFromLcid
  id: GetNativeLanguageNameFromLcid
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: GetNativeLanguageNameFromLcid()
  nameWithType: LegacyTradosLanguage.GetNativeLanguageNameFromLcid()
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeLanguageNameFromLcid()
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nReturns the language name in native format (script, spelling and form)\n"
  syntax:
    content: public string GetNativeLanguageNameFromLcid()
    return:
      type: System.String
      description: The language name in native format (script, spelling and form).
    content.vb: Public Function GetNativeLanguageNameFromLcid As String
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeLanguageNameFromLcid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeLanguageNameFromLcid(System.Int32)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeLanguageNameFromLcid(System.Int32)
  id: GetNativeLanguageNameFromLcid(System.Int32)
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: GetNativeLanguageNameFromLcid(Int32)
  nameWithType: LegacyTradosLanguage.GetNativeLanguageNameFromLcid(Int32)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeLanguageNameFromLcid(System.Int32)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nReturns the language name in native format (script, spelling and form)\n"
  syntax:
    content: public static string GetNativeLanguageNameFromLcid(int lcid)
    parameters:
    - id: lcid
      type: System.Int32
      description: An LCID.
    return:
      type: System.String
      description: The native language name of the locale specified by <code data-dev-comment-type="paramref" class="paramref">lcid</code>.
    content.vb: Public Shared Function GetNativeLanguageNameFromLcid(lcid As Integer) As String
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeLanguageNameFromLcid*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeNameFromLcid(System.Int32)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeNameFromLcid(System.Int32)
  id: GetNativeNameFromLcid(System.Int32)
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: GetNativeNameFromLcid(Int32)
  nameWithType: LegacyTradosLanguage.GetNativeNameFromLcid(Int32)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeNameFromLcid(System.Int32)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nReturns the language name and region name in native format (script, spelling and form)\n"
  syntax:
    content: public static string GetNativeNameFromLcid(int lcid)
    parameters:
    - id: lcid
      type: System.Int32
      description: An LCID.
    return:
      type: System.String
      description: The native language and region name of the locale specified by <code data-dev-comment-type="paramref" class="paramref">lcid</code>.
    content.vb: Public Shared Function GetNativeNameFromLcid(lcid As Integer) As String
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeNameFromLcid*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetLanguageCode(System.Int32)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.GetLanguageCode(System.Int32)
  id: GetLanguageCode(System.Int32)
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: GetLanguageCode(Int32)
  nameWithType: LegacyTradosLanguage.GetLanguageCode(Int32)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetLanguageCode(System.Int32)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nConvert a TRADOS primary language code to a TRADOS language code string.\n"
  syntax:
    content: public static string GetLanguageCode(int primaryLanguageCode)
    parameters:
    - id: primaryLanguageCode
      type: System.Int32
      description: the primary language code
    return:
      type: System.String
      description: the converted string
    content.vb: Public Shared Function GetLanguageCode(primaryLanguageCode As Integer) As String
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.GetLanguageCode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetLcids(System.Int32)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.GetLcids(System.Int32)
  id: GetLcids(System.Int32)
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: GetLcids(Int32)
  nameWithType: LegacyTradosLanguage.GetLcids(Int32)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetLcids(System.Int32)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nReturns all possible LCID values for the specified TRADOS primary language code.\n"
  syntax:
    content: public static int[] GetLcids(int primaryLanguageCode)
    parameters:
    - id: primaryLanguageCode
      type: System.Int32
      description: the primary language code
    return:
      type: System.Int32[]
      description: All possible LCID values for the specified TRADOS primary language code.
    content.vb: Public Shared Function GetLcids(primaryLanguageCode As Integer) As Integer()
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.GetLcids*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.UsesCharacterCounts
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.UsesCharacterCounts
  id: UsesCharacterCounts
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: UsesCharacterCounts()
  nameWithType: LegacyTradosLanguage.UsesCharacterCounts()
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.UsesCharacterCounts()
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nReturns <code>true</code> if the language uses character counts.\n"
  syntax:
    content: public bool UsesCharacterCounts()
    return:
      type: System.Boolean
      description: <code>true</code> if the language uses character counts.
    content.vb: Public Function UsesCharacterCounts As Boolean
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.UsesCharacterCounts*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.UsesCharacterCounts(System.Int32)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.UsesCharacterCounts(System.Int32)
  id: UsesCharacterCounts(System.Int32)
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: UsesCharacterCounts(Int32)
  nameWithType: LegacyTradosLanguage.UsesCharacterCounts(Int32)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.UsesCharacterCounts(System.Int32)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nReturns <code>true</code> if the language (LCID) uses character counts.\n"
  syntax:
    content: public static bool UsesCharacterCounts(int lcid)
    parameters:
    - id: lcid
      type: System.Int32
      description: The LCID of the language.
    return:
      type: System.Boolean
      description: <code>true</code> if the language (LCID) uses character counts.
    content.vb: Public Shared Function UsesCharacterCounts(lcid As Integer) As Boolean
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.UsesCharacterCounts*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetSchema
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.GetSchema
  id: GetSchema
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: LegacyTradosLanguage.GetSchema()
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetSchema()
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nAlways returns <code>null</code>.\n"
  syntax:
    content: public XmlSchema GetSchema()
    return:
      type: System.Xml.Schema.XmlSchema
      description: Always returns <code>null</code>.
    content.vb: Public Function GetSchema As XmlSchema
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.GetSchema*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.ReadXml(System.Xml.XmlReader)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: LegacyTradosLanguage.ReadXml(XmlReader)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nReads the 5-letter (TRADOS) ISO code from a &lt;Language> element.\n"
  syntax:
    content: public void ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: the XmlReader to use
    content.vb: Public Sub ReadXml(reader As XmlReader)
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.ReadXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.WriteXml(System.Xml.XmlWriter)
  commentId: M:Sdl.Core.Globalization.LegacyTradosLanguage.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: LegacyTradosLanguage.WriteXml(XmlWriter)
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nWrites the 5-letter (TRADOS) ISO code to a &lt;Language> element.\n"
  syntax:
    content: public void WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: the XmlWriter to use
    content.vb: Public Sub WriteXml(writer As XmlWriter)
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.WriteXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.IsValid
  commentId: P:Sdl.Core.Globalization.LegacyTradosLanguage.IsValid
  id: IsValid
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: LegacyTradosLanguage.IsValid
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.IsValid
  type: Property
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\n<code>true</code> if the language is a valid LCID and ISO language code.\n"
  syntax:
    content: public readonly bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValid As Boolean
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.IsValid*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.IsInstalled
  commentId: P:Sdl.Core.Globalization.LegacyTradosLanguage.IsInstalled
  id: IsInstalled
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: IsInstalled
  nameWithType: LegacyTradosLanguage.IsInstalled
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.IsInstalled
  type: Property
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\n<code>true</code> if the language with this LCID is supported directly by the operating system.\n"
  syntax:
    content: public readonly bool IsInstalled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInstalled As Boolean
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.IsInstalled*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.IsProprietary
  commentId: P:Sdl.Core.Globalization.LegacyTradosLanguage.IsProprietary
  id: IsProprietary
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: IsProprietary
  nameWithType: LegacyTradosLanguage.IsProprietary
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.IsProprietary
  type: Property
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\n<code>true</code> if this LCID is a proprietary TRADOS &quot;LCID&quot;.\n"
  syntax:
    content: public readonly bool IsProprietary { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsProprietary As Boolean
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.IsProprietary*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.IsoCode
  commentId: P:Sdl.Core.Globalization.LegacyTradosLanguage.IsoCode
  id: IsoCode
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: IsoCode
  nameWithType: LegacyTradosLanguage.IsoCode
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.IsoCode
  type: Property
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nThe 5 letter ISO code corresponding to this language, in this format:\nEN-US, JP-JP, etc.\n\nMay be empty if IsValid is false.\n"
  syntax:
    content: public readonly string IsoCode { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property IsoCode As String
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.IsoCode*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.Lcid
  commentId: P:Sdl.Core.Globalization.LegacyTradosLanguage.Lcid
  id: Lcid
  parent: Sdl.Core.Globalization.LegacyTradosLanguage
  langs:
  - csharp
  - vb
  name: Lcid
  nameWithType: LegacyTradosLanguage.Lcid
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.Lcid
  type: Property
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization
  summary: "\nThe Windows/.NET LCID for the language.\n\nMay be 0 if <xref href=\"Sdl.Core.Globalization.LegacyTradosLanguage.IsValid\" data-throw-if-not-resolved=\"false\"></xref> is <code>false</code>.\n"
  syntax:
    content: public readonly int Lcid { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Lcid As Integer
  overload: Sdl.Core.Globalization.LegacyTradosLanguage.Lcid*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.Core.Globalization
  commentId: N:Sdl.Core.Globalization
  isExternal: true
  name: Sdl.Core.Globalization
  nameWithType: Sdl.Core.Globalization
  fullName: Sdl.Core.Globalization
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: '!:System.Xml.Serialization.IXmlSerializable'
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.IsInstalledLcid*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.IsInstalledLcid
  isExternal: true
  name: IsInstalledLcid
  nameWithType: LegacyTradosLanguage.IsInstalledLcid
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.IsInstalledLcid
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.IsProprietaryLcid*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.IsProprietaryLcid
  isExternal: true
  name: IsProprietaryLcid
  nameWithType: LegacyTradosLanguage.IsProprietaryLcid
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.IsProprietaryLcid
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.#ctor*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.#ctor
  isExternal: true
  name: LegacyTradosLanguage
  nameWithType: LegacyTradosLanguage.LegacyTradosLanguage
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.LegacyTradosLanguage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.Equals*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.Equals
  isExternal: true
  name: Equals
  nameWithType: LegacyTradosLanguage.Equals
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.Equals
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetHashCode*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: LegacyTradosLanguage.GetHashCode
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetHashCode
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.ToString*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.ToString
  isExternal: true
  name: ToString
  nameWithType: LegacyTradosLanguage.ToString
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.ToString
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetLocaleInfo*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.GetLocaleInfo
  isExternal: true
  name: GetLocaleInfo
  nameWithType: LegacyTradosLanguage.GetLocaleInfo
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetLocaleInfo
- uid: Sdl.Core.Globalization.LanguageFormat
  commentId: T:Sdl.Core.Globalization.LanguageFormat
  parent: Sdl.Core.Globalization
  isExternal: true
  name: LanguageFormat
  nameWithType: LanguageFormat
  fullName: Sdl.Core.Globalization.LanguageFormat
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetAllLcids*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.GetAllLcids
  isExternal: true
  name: GetAllLcids
  nameWithType: LegacyTradosLanguage.GetAllLcids
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetAllLcids
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetLcidFromIsoCode*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.GetLcidFromIsoCode
  isExternal: true
  name: GetLcidFromIsoCode
  nameWithType: LegacyTradosLanguage.GetLcidFromIsoCode
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetLcidFromIsoCode
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetIsoCodeFromLcid*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.GetIsoCodeFromLcid
  isExternal: true
  name: GetIsoCodeFromLcid
  nameWithType: LegacyTradosLanguage.GetIsoCodeFromLcid
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetIsoCodeFromLcid
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.IsDefaultForCountry*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.IsDefaultForCountry
  isExternal: true
  name: IsDefaultForCountry
  nameWithType: LegacyTradosLanguage.IsDefaultForCountry
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.IsDefaultForCountry
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishLanguageNameFromLcid*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishLanguageNameFromLcid
  isExternal: true
  name: GetEnglishLanguageNameFromLcid
  nameWithType: LegacyTradosLanguage.GetEnglishLanguageNameFromLcid
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishLanguageNameFromLcid
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishNameFromLcid*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishNameFromLcid
  isExternal: true
  name: GetEnglishNameFromLcid
  nameWithType: LegacyTradosLanguage.GetEnglishNameFromLcid
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetEnglishNameFromLcid
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeLanguageNameFromLcid*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeLanguageNameFromLcid
  isExternal: true
  name: GetNativeLanguageNameFromLcid
  nameWithType: LegacyTradosLanguage.GetNativeLanguageNameFromLcid
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeLanguageNameFromLcid
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeNameFromLcid*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeNameFromLcid
  isExternal: true
  name: GetNativeNameFromLcid
  nameWithType: LegacyTradosLanguage.GetNativeNameFromLcid
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetNativeNameFromLcid
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetLanguageCode*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.GetLanguageCode
  isExternal: true
  name: GetLanguageCode
  nameWithType: LegacyTradosLanguage.GetLanguageCode
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetLanguageCode
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetLcids*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.GetLcids
  isExternal: true
  name: GetLcids
  nameWithType: LegacyTradosLanguage.GetLcids
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetLcids
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.UsesCharacterCounts*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.UsesCharacterCounts
  isExternal: true
  name: UsesCharacterCounts
  nameWithType: LegacyTradosLanguage.UsesCharacterCounts
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.UsesCharacterCounts
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.GetSchema*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.GetSchema
  isExternal: true
  name: GetSchema
  nameWithType: LegacyTradosLanguage.GetSchema
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.GetSchema
- uid: System.Xml.Schema.XmlSchema
  commentId: '!:System.Xml.Schema.XmlSchema'
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.ReadXml*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.ReadXml
  isExternal: true
  name: ReadXml
  nameWithType: LegacyTradosLanguage.ReadXml
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.ReadXml
- uid: System.Xml.XmlReader
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.WriteXml*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.WriteXml
  isExternal: true
  name: WriteXml
  nameWithType: LegacyTradosLanguage.WriteXml
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.WriteXml
- uid: System.Xml.XmlWriter
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.IsValid*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.IsValid
  isExternal: true
  name: IsValid
  nameWithType: LegacyTradosLanguage.IsValid
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.IsValid
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.IsInstalled*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.IsInstalled
  isExternal: true
  name: IsInstalled
  nameWithType: LegacyTradosLanguage.IsInstalled
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.IsInstalled
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.IsProprietary*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.IsProprietary
  isExternal: true
  name: IsProprietary
  nameWithType: LegacyTradosLanguage.IsProprietary
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.IsProprietary
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.IsoCode*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.IsoCode
  isExternal: true
  name: IsoCode
  nameWithType: LegacyTradosLanguage.IsoCode
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.IsoCode
- uid: Sdl.Core.Globalization.LegacyTradosLanguage.Lcid*
  commentId: Overload:Sdl.Core.Globalization.LegacyTradosLanguage.Lcid
  isExternal: true
  name: Lcid
  nameWithType: LegacyTradosLanguage.Lcid
  fullName: Sdl.Core.Globalization.LegacyTradosLanguage.Lcid
