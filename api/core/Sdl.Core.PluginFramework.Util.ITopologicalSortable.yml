### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.Util.ITopologicalSortable
  commentId: T:Sdl.Core.PluginFramework.Util.ITopologicalSortable
  id: ITopologicalSortable
  parent: Sdl.Core.PluginFramework.Util
  children:
  - Sdl.Core.PluginFramework.Util.ITopologicalSortable.Id
  - Sdl.Core.PluginFramework.Util.ITopologicalSortable.InsertAfter
  - Sdl.Core.PluginFramework.Util.ITopologicalSortable.InsertBefore
  - Sdl.Core.PluginFramework.Util.ITopologicalSortable.Priority
  langs:
  - csharp
  - vb
  name: ITopologicalSortable
  nameWithType: ITopologicalSortable
  fullName: Sdl.Core.PluginFramework.Util.ITopologicalSortable
  type: Interface
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Util
  summary: Interface to be implemented by classes that need to support sorting topologically using the <xref href="Sdl.Core.PluginFramework.Util.TopologicalSort%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public interface ITopologicalSortable
    content.vb: Public Interface ITopologicalSortable
  seealso:
  - linkId: Sdl.Core.PluginFramework.Util.TopologicalSort`1
    commentId: T:Sdl.Core.PluginFramework.Util.TopologicalSort`1
- uid: Sdl.Core.PluginFramework.Util.ITopologicalSortable.Id
  commentId: P:Sdl.Core.PluginFramework.Util.ITopologicalSortable.Id
  id: Id
  parent: Sdl.Core.PluginFramework.Util.ITopologicalSortable
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ITopologicalSortable.Id
  fullName: Sdl.Core.PluginFramework.Util.ITopologicalSortable.Id
  type: Property
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Util
  summary: Gets the id of the item.
  example: []
  syntax:
    content: string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Id As String
  overload: Sdl.Core.PluginFramework.Util.ITopologicalSortable.Id*
- uid: Sdl.Core.PluginFramework.Util.ITopologicalSortable.InsertBefore
  commentId: P:Sdl.Core.PluginFramework.Util.ITopologicalSortable.InsertBefore
  id: InsertBefore
  parent: Sdl.Core.PluginFramework.Util.ITopologicalSortable
  langs:
  - csharp
  - vb
  name: InsertBefore
  nameWithType: ITopologicalSortable.InsertBefore
  fullName: Sdl.Core.PluginFramework.Util.ITopologicalSortable.InsertBefore
  type: Property
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Util
  summary: Returns the id of the item before which this item needs to appear. Can be null.
  example: []
  syntax:
    content: string InsertBefore { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property InsertBefore As String
  overload: Sdl.Core.PluginFramework.Util.ITopologicalSortable.InsertBefore*
- uid: Sdl.Core.PluginFramework.Util.ITopologicalSortable.InsertAfter
  commentId: P:Sdl.Core.PluginFramework.Util.ITopologicalSortable.InsertAfter
  id: InsertAfter
  parent: Sdl.Core.PluginFramework.Util.ITopologicalSortable
  langs:
  - csharp
  - vb
  name: InsertAfter
  nameWithType: ITopologicalSortable.InsertAfter
  fullName: Sdl.Core.PluginFramework.Util.ITopologicalSortable.InsertAfter
  type: Property
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Util
  summary: Returns the id of the item after which this item needs to appear. Can be null.
  example: []
  syntax:
    content: string InsertAfter { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property InsertAfter As String
  overload: Sdl.Core.PluginFramework.Util.ITopologicalSortable.InsertAfter*
- uid: Sdl.Core.PluginFramework.Util.ITopologicalSortable.Priority
  commentId: P:Sdl.Core.PluginFramework.Util.ITopologicalSortable.Priority
  id: Priority
  parent: Sdl.Core.PluginFramework.Util.ITopologicalSortable
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: ITopologicalSortable.Priority
  fullName: Sdl.Core.PluginFramework.Util.ITopologicalSortable.Priority
  type: Property
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Util
  summary: Returns the sorting priority of this item.
  remarks: >-
    When two items specify the same criteria, for example InsertBefore=x, then the item with the highest priority, will be inserted
                right before x, followed by the item with the lower priority.
  example: []
  syntax:
    content: int Priority { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Priority As Integer
  overload: Sdl.Core.PluginFramework.Util.ITopologicalSortable.Priority*
references:
- uid: Sdl.Core.PluginFramework.Util.TopologicalSort`1
  commentId: T:Sdl.Core.PluginFramework.Util.TopologicalSort`1
  isExternal: true
  href: Sdl.Core.PluginFramework.Util.TopologicalSort-1.html
  name: TopologicalSort<T>
  nameWithType: TopologicalSort<T>
  fullName: Sdl.Core.PluginFramework.Util.TopologicalSort<T>
  nameWithType.vb: TopologicalSort(Of T)
  fullName.vb: Sdl.Core.PluginFramework.Util.TopologicalSort(Of T)
  name.vb: TopologicalSort(Of T)
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.Util.TopologicalSort`1
    name: TopologicalSort
    isExternal: true
    href: Sdl.Core.PluginFramework.Util.TopologicalSort-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Sdl.Core.PluginFramework.Util.TopologicalSort`1
    name: TopologicalSort
    isExternal: true
    href: Sdl.Core.PluginFramework.Util.TopologicalSort-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Sdl.Core.PluginFramework.Util
  commentId: N:Sdl.Core.PluginFramework.Util
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.PluginFramework.Util
  nameWithType: Sdl.Core.PluginFramework.Util
  fullName: Sdl.Core.PluginFramework.Util
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
  - name: .
  - uid: Sdl.Core.PluginFramework.Util
    name: Util
    isExternal: true
    href: Sdl.Core.PluginFramework.Util.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
  - name: .
  - uid: Sdl.Core.PluginFramework.Util
    name: Util
    isExternal: true
    href: Sdl.Core.PluginFramework.Util.html
- uid: Sdl.Core.PluginFramework.Util.ITopologicalSortable.Id*
  commentId: Overload:Sdl.Core.PluginFramework.Util.ITopologicalSortable.Id
  isExternal: true
  href: Sdl.Core.PluginFramework.Util.ITopologicalSortable.html#Sdl_Core_PluginFramework_Util_ITopologicalSortable_Id
  name: Id
  nameWithType: ITopologicalSortable.Id
  fullName: Sdl.Core.PluginFramework.Util.ITopologicalSortable.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.Util.ITopologicalSortable.InsertBefore*
  commentId: Overload:Sdl.Core.PluginFramework.Util.ITopologicalSortable.InsertBefore
  isExternal: true
  href: Sdl.Core.PluginFramework.Util.ITopologicalSortable.html#Sdl_Core_PluginFramework_Util_ITopologicalSortable_InsertBefore
  name: InsertBefore
  nameWithType: ITopologicalSortable.InsertBefore
  fullName: Sdl.Core.PluginFramework.Util.ITopologicalSortable.InsertBefore
- uid: Sdl.Core.PluginFramework.Util.ITopologicalSortable.InsertAfter*
  commentId: Overload:Sdl.Core.PluginFramework.Util.ITopologicalSortable.InsertAfter
  isExternal: true
  href: Sdl.Core.PluginFramework.Util.ITopologicalSortable.html#Sdl_Core_PluginFramework_Util_ITopologicalSortable_InsertAfter
  name: InsertAfter
  nameWithType: ITopologicalSortable.InsertAfter
  fullName: Sdl.Core.PluginFramework.Util.ITopologicalSortable.InsertAfter
- uid: Sdl.Core.PluginFramework.Util.ITopologicalSortable.Priority*
  commentId: Overload:Sdl.Core.PluginFramework.Util.ITopologicalSortable.Priority
  isExternal: true
  href: Sdl.Core.PluginFramework.Util.ITopologicalSortable.html#Sdl_Core_PluginFramework_Util_ITopologicalSortable_Priority
  name: Priority
  nameWithType: ITopologicalSortable.Priority
  fullName: Sdl.Core.PluginFramework.Util.ITopologicalSortable.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
