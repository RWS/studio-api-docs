### YamlMime:ManagedReference
items:
- uid: Sdl.Core.Settings.ISettingsBundle
  commentId: T:Sdl.Core.Settings.ISettingsBundle
  id: ISettingsBundle
  parent: Sdl.Core.Settings
  children:
  - Sdl.Core.Settings.ISettingsBundle.AddSettingsGroup(Sdl.Core.Settings.ISettingsGroup)
  - Sdl.Core.Settings.ISettingsBundle.Assign(Sdl.Core.Settings.ISettingsBundle)
  - Sdl.Core.Settings.ISettingsBundle.ContainsSettingsGroup(System.String)
  - Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup(System.String)
  - Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup``1
  - Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup``1(System.String)
  - Sdl.Core.Settings.ISettingsBundle.GetSettingsGroupIds
  - Sdl.Core.Settings.ISettingsBundle.IsDefault
  - Sdl.Core.Settings.ISettingsBundle.IsEmpty
  - Sdl.Core.Settings.ISettingsBundle.Parent
  - Sdl.Core.Settings.ISettingsBundle.RemoveSettingsGroup(System.String)
  - Sdl.Core.Settings.ISettingsBundle.Reset
  langs:
  - csharp
  - vb
  name: ISettingsBundle
  nameWithType: ISettingsBundle
  fullName: Sdl.Core.Settings.ISettingsBundle
  type: Interface
  source:
    path: Sdl.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.Core.Settings
  namespace: Sdl.Core.Settings
  syntax:
    content: public interface ISettingsBundle
    content.vb: Public Interface ISettingsBundle
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup``1(System.String)
  commentId: M:Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup``1(System.String)
  id: GetSettingsGroup``1(System.String)
  parent: Sdl.Core.Settings.ISettingsBundle
  langs:
  - csharp
  - vb
  name: GetSettingsGroup<T>(String)
  nameWithType: ISettingsBundle.GetSettingsGroup<T>(String)
  fullName: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup<T>(System.String)
  type: Method
  source:
    path: Sdl.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.Core.Settings
  namespace: Sdl.Core.Settings
  syntax:
    content: >-
      T GetSettingsGroup<T>(string id)

          where T : ISettingsGroup, new()
    parameters:
    - id: id
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Function GetSettingsGroup(Of T As {ISettingsGroup, New})(id As String) As T
  overload: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup*
  nameWithType.vb: ISettingsBundle.GetSettingsGroup(Of T)(String)
  fullName.vb: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup(Of T)(System.String)
  name.vb: GetSettingsGroup(Of T)(String)
- uid: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup``1
  commentId: M:Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup``1
  id: GetSettingsGroup``1
  parent: Sdl.Core.Settings.ISettingsBundle
  langs:
  - csharp
  - vb
  name: GetSettingsGroup<T>()
  nameWithType: ISettingsBundle.GetSettingsGroup<T>()
  fullName: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup<T>()
  type: Method
  source:
    path: Sdl.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.Core.Settings
  namespace: Sdl.Core.Settings
  syntax:
    content: >-
      T GetSettingsGroup<T>()

          where T : ISettingsGroup, new()
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Function GetSettingsGroup(Of T As {ISettingsGroup, New}) As T
  overload: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup*
  nameWithType.vb: ISettingsBundle.GetSettingsGroup(Of T)()
  fullName.vb: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup(Of T)()
  name.vb: GetSettingsGroup(Of T)()
- uid: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup(System.String)
  commentId: M:Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup(System.String)
  id: GetSettingsGroup(System.String)
  parent: Sdl.Core.Settings.ISettingsBundle
  langs:
  - csharp
  - vb
  name: GetSettingsGroup(String)
  nameWithType: ISettingsBundle.GetSettingsGroup(String)
  fullName: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup(System.String)
  type: Method
  source:
    path: Sdl.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.Core.Settings
  namespace: Sdl.Core.Settings
  syntax:
    content: ISettingsGroup GetSettingsGroup(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: Sdl.Core.Settings.ISettingsGroup
    content.vb: Function GetSettingsGroup(id As String) As ISettingsGroup
  overload: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup*
- uid: Sdl.Core.Settings.ISettingsBundle.AddSettingsGroup(Sdl.Core.Settings.ISettingsGroup)
  commentId: M:Sdl.Core.Settings.ISettingsBundle.AddSettingsGroup(Sdl.Core.Settings.ISettingsGroup)
  id: AddSettingsGroup(Sdl.Core.Settings.ISettingsGroup)
  parent: Sdl.Core.Settings.ISettingsBundle
  langs:
  - csharp
  - vb
  name: AddSettingsGroup(ISettingsGroup)
  nameWithType: ISettingsBundle.AddSettingsGroup(ISettingsGroup)
  fullName: Sdl.Core.Settings.ISettingsBundle.AddSettingsGroup(Sdl.Core.Settings.ISettingsGroup)
  type: Method
  source:
    path: Sdl.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.Core.Settings
  namespace: Sdl.Core.Settings
  syntax:
    content: bool AddSettingsGroup(ISettingsGroup settingsGroup)
    parameters:
    - id: settingsGroup
      type: Sdl.Core.Settings.ISettingsGroup
    return:
      type: System.Boolean
    content.vb: Function AddSettingsGroup(settingsGroup As ISettingsGroup) As Boolean
  overload: Sdl.Core.Settings.ISettingsBundle.AddSettingsGroup*
- uid: Sdl.Core.Settings.ISettingsBundle.RemoveSettingsGroup(System.String)
  commentId: M:Sdl.Core.Settings.ISettingsBundle.RemoveSettingsGroup(System.String)
  id: RemoveSettingsGroup(System.String)
  parent: Sdl.Core.Settings.ISettingsBundle
  langs:
  - csharp
  - vb
  name: RemoveSettingsGroup(String)
  nameWithType: ISettingsBundle.RemoveSettingsGroup(String)
  fullName: Sdl.Core.Settings.ISettingsBundle.RemoveSettingsGroup(System.String)
  type: Method
  source:
    path: Sdl.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.Core.Settings
  namespace: Sdl.Core.Settings
  syntax:
    content: void RemoveSettingsGroup(string id)
    parameters:
    - id: id
      type: System.String
    content.vb: Sub RemoveSettingsGroup(id As String)
  overload: Sdl.Core.Settings.ISettingsBundle.RemoveSettingsGroup*
- uid: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroupIds
  commentId: M:Sdl.Core.Settings.ISettingsBundle.GetSettingsGroupIds
  id: GetSettingsGroupIds
  parent: Sdl.Core.Settings.ISettingsBundle
  langs:
  - csharp
  - vb
  name: GetSettingsGroupIds()
  nameWithType: ISettingsBundle.GetSettingsGroupIds()
  fullName: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroupIds()
  type: Method
  source:
    path: Sdl.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.Core.Settings
  namespace: Sdl.Core.Settings
  syntax:
    content: IEnumerable<string> GetSettingsGroupIds()
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function GetSettingsGroupIds As IEnumerable(Of String)
  overload: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroupIds*
- uid: Sdl.Core.Settings.ISettingsBundle.ContainsSettingsGroup(System.String)
  commentId: M:Sdl.Core.Settings.ISettingsBundle.ContainsSettingsGroup(System.String)
  id: ContainsSettingsGroup(System.String)
  parent: Sdl.Core.Settings.ISettingsBundle
  langs:
  - csharp
  - vb
  name: ContainsSettingsGroup(String)
  nameWithType: ISettingsBundle.ContainsSettingsGroup(String)
  fullName: Sdl.Core.Settings.ISettingsBundle.ContainsSettingsGroup(System.String)
  type: Method
  source:
    path: Sdl.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.Core.Settings
  namespace: Sdl.Core.Settings
  syntax:
    content: bool ContainsSettingsGroup(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function ContainsSettingsGroup(id As String) As Boolean
  overload: Sdl.Core.Settings.ISettingsBundle.ContainsSettingsGroup*
- uid: Sdl.Core.Settings.ISettingsBundle.Reset
  commentId: M:Sdl.Core.Settings.ISettingsBundle.Reset
  id: Reset
  parent: Sdl.Core.Settings.ISettingsBundle
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: ISettingsBundle.Reset()
  fullName: Sdl.Core.Settings.ISettingsBundle.Reset()
  type: Method
  source:
    path: Sdl.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.Core.Settings
  namespace: Sdl.Core.Settings
  syntax:
    content: void Reset()
    content.vb: Sub Reset
  overload: Sdl.Core.Settings.ISettingsBundle.Reset*
- uid: Sdl.Core.Settings.ISettingsBundle.Assign(Sdl.Core.Settings.ISettingsBundle)
  commentId: M:Sdl.Core.Settings.ISettingsBundle.Assign(Sdl.Core.Settings.ISettingsBundle)
  id: Assign(Sdl.Core.Settings.ISettingsBundle)
  parent: Sdl.Core.Settings.ISettingsBundle
  langs:
  - csharp
  - vb
  name: Assign(ISettingsBundle)
  nameWithType: ISettingsBundle.Assign(ISettingsBundle)
  fullName: Sdl.Core.Settings.ISettingsBundle.Assign(Sdl.Core.Settings.ISettingsBundle)
  type: Method
  source:
    path: Sdl.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.Core.Settings
  namespace: Sdl.Core.Settings
  syntax:
    content: void Assign(ISettingsBundle settings)
    parameters:
    - id: settings
      type: Sdl.Core.Settings.ISettingsBundle
    content.vb: Sub Assign(settings As ISettingsBundle)
  overload: Sdl.Core.Settings.ISettingsBundle.Assign*
- uid: Sdl.Core.Settings.ISettingsBundle.IsDefault
  commentId: P:Sdl.Core.Settings.ISettingsBundle.IsDefault
  id: IsDefault
  parent: Sdl.Core.Settings.ISettingsBundle
  langs:
  - csharp
  - vb
  name: IsDefault
  nameWithType: ISettingsBundle.IsDefault
  fullName: Sdl.Core.Settings.ISettingsBundle.IsDefault
  type: Property
  source:
    path: Sdl.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.Core.Settings
  namespace: Sdl.Core.Settings
  syntax:
    content: bool IsDefault { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsDefault As Boolean
  overload: Sdl.Core.Settings.ISettingsBundle.IsDefault*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Core.Settings.ISettingsBundle.Parent
  commentId: P:Sdl.Core.Settings.ISettingsBundle.Parent
  id: Parent
  parent: Sdl.Core.Settings.ISettingsBundle
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: ISettingsBundle.Parent
  fullName: Sdl.Core.Settings.ISettingsBundle.Parent
  type: Property
  source:
    path: Sdl.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.Core.Settings
  namespace: Sdl.Core.Settings
  syntax:
    content: ISettingsBundle Parent { get; set; }
    parameters: []
    return:
      type: Sdl.Core.Settings.ISettingsBundle
    content.vb: Property Parent As ISettingsBundle
  overload: Sdl.Core.Settings.ISettingsBundle.Parent*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.Core.Settings.ISettingsBundle.IsEmpty
  commentId: P:Sdl.Core.Settings.ISettingsBundle.IsEmpty
  id: IsEmpty
  parent: Sdl.Core.Settings.ISettingsBundle
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: ISettingsBundle.IsEmpty
  fullName: Sdl.Core.Settings.ISettingsBundle.IsEmpty
  type: Property
  source:
    path: Sdl.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.Core.Settings
  namespace: Sdl.Core.Settings
  syntax:
    content: bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsEmpty As Boolean
  overload: Sdl.Core.Settings.ISettingsBundle.IsEmpty*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.Core.Settings
  commentId: N:Sdl.Core.Settings
  isExternal: true
  name: Sdl.Core.Settings
  nameWithType: Sdl.Core.Settings
  fullName: Sdl.Core.Settings
- uid: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup*
  commentId: Overload:Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup
  isExternal: true
  name: GetSettingsGroup
  nameWithType: ISettingsBundle.GetSettingsGroup
  fullName: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Sdl.Core.Settings.ISettingsGroup
  commentId: T:Sdl.Core.Settings.ISettingsGroup
  parent: Sdl.Core.Settings
  isExternal: true
  name: ISettingsGroup
  nameWithType: ISettingsGroup
  fullName: Sdl.Core.Settings.ISettingsGroup
- uid: Sdl.Core.Settings.ISettingsBundle.AddSettingsGroup*
  commentId: Overload:Sdl.Core.Settings.ISettingsBundle.AddSettingsGroup
  isExternal: true
  name: AddSettingsGroup
  nameWithType: ISettingsBundle.AddSettingsGroup
  fullName: Sdl.Core.Settings.ISettingsBundle.AddSettingsGroup
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.Core.Settings.ISettingsBundle.RemoveSettingsGroup*
  commentId: Overload:Sdl.Core.Settings.ISettingsBundle.RemoveSettingsGroup
  isExternal: true
  name: RemoveSettingsGroup
  nameWithType: ISettingsBundle.RemoveSettingsGroup
  fullName: Sdl.Core.Settings.ISettingsBundle.RemoveSettingsGroup
- uid: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroupIds*
  commentId: Overload:Sdl.Core.Settings.ISettingsBundle.GetSettingsGroupIds
  isExternal: true
  name: GetSettingsGroupIds
  nameWithType: ISettingsBundle.GetSettingsGroupIds
  fullName: Sdl.Core.Settings.ISettingsBundle.GetSettingsGroupIds
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.Core.Settings.ISettingsBundle.ContainsSettingsGroup*
  commentId: Overload:Sdl.Core.Settings.ISettingsBundle.ContainsSettingsGroup
  isExternal: true
  name: ContainsSettingsGroup
  nameWithType: ISettingsBundle.ContainsSettingsGroup
  fullName: Sdl.Core.Settings.ISettingsBundle.ContainsSettingsGroup
- uid: Sdl.Core.Settings.ISettingsBundle.Reset*
  commentId: Overload:Sdl.Core.Settings.ISettingsBundle.Reset
  isExternal: true
  name: Reset
  nameWithType: ISettingsBundle.Reset
  fullName: Sdl.Core.Settings.ISettingsBundle.Reset
- uid: Sdl.Core.Settings.ISettingsBundle.Assign*
  commentId: Overload:Sdl.Core.Settings.ISettingsBundle.Assign
  isExternal: true
  name: Assign
  nameWithType: ISettingsBundle.Assign
  fullName: Sdl.Core.Settings.ISettingsBundle.Assign
- uid: Sdl.Core.Settings.ISettingsBundle
  commentId: T:Sdl.Core.Settings.ISettingsBundle
  parent: Sdl.Core.Settings
  isExternal: true
  name: ISettingsBundle
  nameWithType: ISettingsBundle
  fullName: Sdl.Core.Settings.ISettingsBundle
- uid: Sdl.Core.Settings.ISettingsBundle.IsDefault*
  commentId: Overload:Sdl.Core.Settings.ISettingsBundle.IsDefault
  isExternal: true
  name: IsDefault
  nameWithType: ISettingsBundle.IsDefault
  fullName: Sdl.Core.Settings.ISettingsBundle.IsDefault
- uid: Sdl.Core.Settings.ISettingsBundle.Parent*
  commentId: Overload:Sdl.Core.Settings.ISettingsBundle.Parent
  isExternal: true
  name: Parent
  nameWithType: ISettingsBundle.Parent
  fullName: Sdl.Core.Settings.ISettingsBundle.Parent
- uid: Sdl.Core.Settings.ISettingsBundle.IsEmpty*
  commentId: Overload:Sdl.Core.Settings.ISettingsBundle.IsEmpty
  isExternal: true
  name: IsEmpty
  nameWithType: ISettingsBundle.IsEmpty
  fullName: Sdl.Core.Settings.ISettingsBundle.IsEmpty
