### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.ObjectFactory
  commentId: T:Sdl.Core.PluginFramework.ObjectFactory
  id: ObjectFactory
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.ObjectFactory.#ctor
  - Sdl.Core.PluginFramework.ObjectFactory.CreateObject``1(System.String)
  langs:
  - csharp
  - vb
  name: ObjectFactory
  nameWithType: ObjectFactory
  fullName: Sdl.Core.PluginFramework.ObjectFactory
  type: Class
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nHelper class for dynamically creating objects.\n"
  syntax:
    content: 'public class ObjectFactory : Object'
    content.vb: >-
      Public Class ObjectFactory

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.PluginFramework.ObjectFactory.CreateObject``1(System.String)
  commentId: M:Sdl.Core.PluginFramework.ObjectFactory.CreateObject``1(System.String)
  id: CreateObject``1(System.String)
  parent: Sdl.Core.PluginFramework.ObjectFactory
  langs:
  - csharp
  - vb
  name: CreateObject<T>(String)
  nameWithType: ObjectFactory.CreateObject<T>(String)
  fullName: Sdl.Core.PluginFramework.ObjectFactory.CreateObject<T>(System.String)
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nCreates an oject of the specified type.\n"
  syntax:
    content: >-
      public static T CreateObject<T>(string typeName)

          where T : class
    parameters:
    - id: typeName
      type: System.String
      description: The name of the type to instantiate.
    typeParameters:
    - id: T
      description: The requested object type.
    return:
      type: '{T}'
      description: The newly created object.
    content.vb: Public Shared Function CreateObject(Of T As Class)(typeName As String) As T
  overload: Sdl.Core.PluginFramework.ObjectFactory.CreateObject*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: When the newly created object is not of the requested type T.
  nameWithType.vb: ObjectFactory.CreateObject(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.Core.PluginFramework.ObjectFactory.CreateObject(Of T)(System.String)
  name.vb: CreateObject(Of T)(String)
- uid: Sdl.Core.PluginFramework.ObjectFactory.#ctor
  commentId: M:Sdl.Core.PluginFramework.ObjectFactory.#ctor
  id: '#ctor'
  parent: Sdl.Core.PluginFramework.ObjectFactory
  langs:
  - csharp
  - vb
  name: ObjectFactory()
  nameWithType: ObjectFactory.ObjectFactory()
  fullName: Sdl.Core.PluginFramework.ObjectFactory.ObjectFactory()
  type: Constructor
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public ObjectFactory()
    content.vb: Public Sub New
  overload: Sdl.Core.PluginFramework.ObjectFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.ObjectFactory.CreateObject*
  commentId: Overload:Sdl.Core.PluginFramework.ObjectFactory.CreateObject
  isExternal: true
  name: CreateObject
  nameWithType: ObjectFactory.CreateObject
  fullName: Sdl.Core.PluginFramework.ObjectFactory.CreateObject
- uid: System.InvalidCastException
  commentId: T:System.InvalidCastException
  isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Sdl.Core.PluginFramework.ObjectFactory.#ctor*
  commentId: Overload:Sdl.Core.PluginFramework.ObjectFactory.#ctor
  isExternal: true
  name: ObjectFactory
  nameWithType: ObjectFactory.ObjectFactory
  fullName: Sdl.Core.PluginFramework.ObjectFactory.ObjectFactory
