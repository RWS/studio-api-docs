### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.IPluginFilter
  commentId: T:Sdl.Core.PluginFramework.IPluginFilter
  id: IPluginFilter
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadExtension(Sdl.Core.PluginFramework.IPlugin,System.String)
  - Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadPlugin(System.String)
  langs:
  - csharp
  - vb
  name: IPluginFilter
  nameWithType: IPluginFilter
  fullName: Sdl.Core.PluginFramework.IPluginFilter
  type: Interface
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Provides control over whether certain plug-ins or individual extensions are loaded.
  example: []
  syntax:
    content: public interface IPluginFilter
    content.vb: Public Interface IPluginFilter
- uid: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadPlugin(System.String)
  commentId: M:Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadPlugin(System.String)
  id: ShouldLoadPlugin(System.String)
  parent: Sdl.Core.PluginFramework.IPluginFilter
  langs:
  - csharp
  - vb
  name: ShouldLoadPlugin(string)
  nameWithType: IPluginFilter.ShouldLoadPlugin(string)
  fullName: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadPlugin(string)
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Determines whether the specified plug-in should be loaded.
  example: []
  syntax:
    content: bool ShouldLoadPlugin(string pluginName)
    parameters:
    - id: pluginName
      type: System.String
      description: Name of the plugin.
    return:
      type: System.Boolean
      description: ''
    content.vb: Function ShouldLoadPlugin(pluginName As String) As Boolean
  overload: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadPlugin*
  nameWithType.vb: IPluginFilter.ShouldLoadPlugin(String)
  fullName.vb: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadPlugin(String)
  name.vb: ShouldLoadPlugin(String)
- uid: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadExtension(Sdl.Core.PluginFramework.IPlugin,System.String)
  commentId: M:Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadExtension(Sdl.Core.PluginFramework.IPlugin,System.String)
  id: ShouldLoadExtension(Sdl.Core.PluginFramework.IPlugin,System.String)
  parent: Sdl.Core.PluginFramework.IPluginFilter
  langs:
  - csharp
  - vb
  name: ShouldLoadExtension(IPlugin, string)
  nameWithType: IPluginFilter.ShouldLoadExtension(IPlugin, string)
  fullName: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadExtension(Sdl.Core.PluginFramework.IPlugin, string)
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Determines whether the specified extension should be loaded.
  example: []
  syntax:
    content: bool ShouldLoadExtension(IPlugin plugin, string extensionId)
    parameters:
    - id: plugin
      type: Sdl.Core.PluginFramework.IPlugin
      description: The plugin.
    - id: extensionId
      type: System.String
      description: The extension id.
    return:
      type: System.Boolean
      description: ''
    content.vb: Function ShouldLoadExtension(plugin As IPlugin, extensionId As String) As Boolean
  overload: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadExtension*
  nameWithType.vb: IPluginFilter.ShouldLoadExtension(IPlugin, String)
  fullName.vb: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadExtension(Sdl.Core.PluginFramework.IPlugin, String)
  name.vb: ShouldLoadExtension(IPlugin, String)
references:
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
- uid: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadPlugin*
  commentId: Overload:Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadPlugin
  isExternal: true
  href: Sdl.Core.PluginFramework.IPluginFilter.html#Sdl_Core_PluginFramework_IPluginFilter_ShouldLoadPlugin_System_String_
  name: ShouldLoadPlugin
  nameWithType: IPluginFilter.ShouldLoadPlugin
  fullName: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadPlugin
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadExtension*
  commentId: Overload:Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadExtension
  isExternal: true
  href: Sdl.Core.PluginFramework.IPluginFilter.html#Sdl_Core_PluginFramework_IPluginFilter_ShouldLoadExtension_Sdl_Core_PluginFramework_IPlugin_System_String_
  name: ShouldLoadExtension
  nameWithType: IPluginFilter.ShouldLoadExtension
  fullName: Sdl.Core.PluginFramework.IPluginFilter.ShouldLoadExtension
- uid: Sdl.Core.PluginFramework.IPlugin
  commentId: T:Sdl.Core.PluginFramework.IPlugin
  parent: Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.Core.PluginFramework.IPlugin.html
  name: IPlugin
  nameWithType: IPlugin
  fullName: Sdl.Core.PluginFramework.IPlugin
