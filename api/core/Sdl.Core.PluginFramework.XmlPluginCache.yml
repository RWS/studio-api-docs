### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.XmlPluginCache
  commentId: T:Sdl.Core.PluginFramework.XmlPluginCache
  id: XmlPluginCache
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.XmlPluginCache.#ctor(System.String)
  - Sdl.Core.PluginFramework.XmlPluginCache.GetPluginState(System.String)
  - Sdl.Core.PluginFramework.XmlPluginCache.PluginCacheFilePath
  - Sdl.Core.PluginFramework.XmlPluginCache.Save
  - Sdl.Core.PluginFramework.XmlPluginCache.StorePluginState(Sdl.Core.PluginFramework.IPlugin)
  langs:
  - csharp
  - vb
  name: XmlPluginCache
  nameWithType: XmlPluginCache
  fullName: Sdl.Core.PluginFramework.XmlPluginCache
  type: Class
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nDefault implementation of the plug-in cache interface (see <xref href=\"Sdl.Core.PluginFramework.IPluginCache\" data-throw-if-not-resolved=\"false\"></xref>) that stores plug-in state \ninto an xml file.\n"
  syntax:
    content: 'public class XmlPluginCache : Object, IPluginCache'
    content.vb: >-
      Public Class XmlPluginCache

          Inherits Object

          Implements IPluginCache
  inheritance:
  - System.Object
  implements:
  - Sdl.Core.PluginFramework.IPluginCache
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.PluginFramework.XmlPluginCache.#ctor(System.String)
  commentId: M:Sdl.Core.PluginFramework.XmlPluginCache.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.Core.PluginFramework.XmlPluginCache
  langs:
  - csharp
  - vb
  name: XmlPluginCache(String)
  nameWithType: XmlPluginCache.XmlPluginCache(String)
  fullName: Sdl.Core.PluginFramework.XmlPluginCache.XmlPluginCache(System.String)
  type: Constructor
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nConstructs a plug-in cache using the specified path for persisting plug-in state.\n"
  syntax:
    content: public XmlPluginCache(string pluginCacheFilePath)
    parameters:
    - id: pluginCacheFilePath
      type: System.String
      description: The path to a plug-in cache xml file. A new file is created if it does not exist yet.
    content.vb: Public Sub New(pluginCacheFilePath As String)
  overload: Sdl.Core.PluginFramework.XmlPluginCache.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.XmlPluginCache.GetPluginState(System.String)
  commentId: M:Sdl.Core.PluginFramework.XmlPluginCache.GetPluginState(System.String)
  id: GetPluginState(System.String)
  parent: Sdl.Core.PluginFramework.XmlPluginCache
  langs:
  - csharp
  - vb
  name: GetPluginState(String)
  nameWithType: XmlPluginCache.GetPluginState(String)
  fullName: Sdl.Core.PluginFramework.XmlPluginCache.GetPluginState(System.String)
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nGets the plug-in state of the plug-in with the specified id.\n"
  syntax:
    content: public PluginState GetPluginState(string pluginId)
    parameters:
    - id: pluginId
      type: System.String
      description: The id of the plug-in for which to get the state.
    return:
      type: Sdl.Core.PluginFramework.PluginState
      description: "A <xref href=\"Sdl.Core.PluginFramework.PluginState\" data-throw-if-not-resolved=\"false\"></xref> object containing the plug-in&apos;s state information. If no state \ninformation is found, a default state object is created."
    content.vb: Public Function GetPluginState(pluginId As String) As PluginState
  overload: Sdl.Core.PluginFramework.XmlPluginCache.GetPluginState*
  implements:
  - Sdl.Core.PluginFramework.IPluginCache.GetPluginState(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.XmlPluginCache.StorePluginState(Sdl.Core.PluginFramework.IPlugin)
  commentId: M:Sdl.Core.PluginFramework.XmlPluginCache.StorePluginState(Sdl.Core.PluginFramework.IPlugin)
  id: StorePluginState(Sdl.Core.PluginFramework.IPlugin)
  parent: Sdl.Core.PluginFramework.XmlPluginCache
  langs:
  - csharp
  - vb
  name: StorePluginState(IPlugin)
  nameWithType: XmlPluginCache.StorePluginState(IPlugin)
  fullName: Sdl.Core.PluginFramework.XmlPluginCache.StorePluginState(Sdl.Core.PluginFramework.IPlugin)
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nStores the state of the specified plug-in in the plug-in cache.\n"
  syntax:
    content: public void StorePluginState(IPlugin plugin)
    parameters:
    - id: plugin
      type: Sdl.Core.PluginFramework.IPlugin
      description: The plug-in for which to store the state.
    content.vb: Public Sub StorePluginState(plugin As IPlugin)
  overload: Sdl.Core.PluginFramework.XmlPluginCache.StorePluginState*
  implements:
  - Sdl.Core.PluginFramework.IPluginCache.StorePluginState(Sdl.Core.PluginFramework.IPlugin)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.XmlPluginCache.Save
  commentId: M:Sdl.Core.PluginFramework.XmlPluginCache.Save
  id: Save
  parent: Sdl.Core.PluginFramework.XmlPluginCache
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: XmlPluginCache.Save()
  fullName: Sdl.Core.PluginFramework.XmlPluginCache.Save()
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nSaves the plug-in cache to the plug-in cache xml file.\n"
  syntax:
    content: public void Save()
    content.vb: Public Sub Save
  overload: Sdl.Core.PluginFramework.XmlPluginCache.Save*
  implements:
  - Sdl.Core.PluginFramework.IPluginCache.Save
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.XmlPluginCache.PluginCacheFilePath
  commentId: P:Sdl.Core.PluginFramework.XmlPluginCache.PluginCacheFilePath
  id: PluginCacheFilePath
  parent: Sdl.Core.PluginFramework.XmlPluginCache
  langs:
  - csharp
  - vb
  name: PluginCacheFilePath
  nameWithType: XmlPluginCache.PluginCacheFilePath
  fullName: Sdl.Core.PluginFramework.XmlPluginCache.PluginCacheFilePath
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nGets the file path of the plug-in cache xml file.\n"
  syntax:
    content: public string PluginCacheFilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PluginCacheFilePath As String
  overload: Sdl.Core.PluginFramework.XmlPluginCache.PluginCacheFilePath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.Core.PluginFramework.IPluginCache
  commentId: T:Sdl.Core.PluginFramework.IPluginCache
  parent: Sdl.Core.PluginFramework
  isExternal: true
  name: IPluginCache
  nameWithType: IPluginCache
  fullName: Sdl.Core.PluginFramework.IPluginCache
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.XmlPluginCache.#ctor*
  commentId: Overload:Sdl.Core.PluginFramework.XmlPluginCache.#ctor
  isExternal: true
  name: XmlPluginCache
  nameWithType: XmlPluginCache.XmlPluginCache
  fullName: Sdl.Core.PluginFramework.XmlPluginCache.XmlPluginCache
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Core.PluginFramework.XmlPluginCache.GetPluginState*
  commentId: Overload:Sdl.Core.PluginFramework.XmlPluginCache.GetPluginState
  isExternal: true
  name: GetPluginState
  nameWithType: XmlPluginCache.GetPluginState
  fullName: Sdl.Core.PluginFramework.XmlPluginCache.GetPluginState
- uid: Sdl.Core.PluginFramework.IPluginCache.GetPluginState(System.String)
  commentId: M:Sdl.Core.PluginFramework.IPluginCache.GetPluginState(System.String)
  parent: Sdl.Core.PluginFramework.IPluginCache
  isExternal: true
  name: GetPluginState(String)
  nameWithType: IPluginCache.GetPluginState(String)
  fullName: Sdl.Core.PluginFramework.IPluginCache.GetPluginState(System.String)
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.IPluginCache.GetPluginState(System.String)
    name: GetPluginState
    nameWithType: IPluginCache.GetPluginState
    fullName: Sdl.Core.PluginFramework.IPluginCache.GetPluginState
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.PluginFramework.IPluginCache.GetPluginState(System.String)
    name: GetPluginState
    nameWithType: IPluginCache.GetPluginState
    fullName: Sdl.Core.PluginFramework.IPluginCache.GetPluginState
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.PluginFramework.PluginState
  commentId: T:Sdl.Core.PluginFramework.PluginState
  parent: Sdl.Core.PluginFramework
  isExternal: true
  name: PluginState
  nameWithType: PluginState
  fullName: Sdl.Core.PluginFramework.PluginState
- uid: Sdl.Core.PluginFramework.XmlPluginCache.StorePluginState*
  commentId: Overload:Sdl.Core.PluginFramework.XmlPluginCache.StorePluginState
  isExternal: true
  name: StorePluginState
  nameWithType: XmlPluginCache.StorePluginState
  fullName: Sdl.Core.PluginFramework.XmlPluginCache.StorePluginState
- uid: Sdl.Core.PluginFramework.IPluginCache.StorePluginState(Sdl.Core.PluginFramework.IPlugin)
  commentId: M:Sdl.Core.PluginFramework.IPluginCache.StorePluginState(Sdl.Core.PluginFramework.IPlugin)
  parent: Sdl.Core.PluginFramework.IPluginCache
  isExternal: true
  name: StorePluginState(IPlugin)
  nameWithType: IPluginCache.StorePluginState(IPlugin)
  fullName: Sdl.Core.PluginFramework.IPluginCache.StorePluginState(Sdl.Core.PluginFramework.IPlugin)
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.IPluginCache.StorePluginState(Sdl.Core.PluginFramework.IPlugin)
    name: StorePluginState
    nameWithType: IPluginCache.StorePluginState
    fullName: Sdl.Core.PluginFramework.IPluginCache.StorePluginState
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.PluginFramework.IPlugin
    name: IPlugin
    nameWithType: IPlugin
    fullName: Sdl.Core.PluginFramework.IPlugin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.PluginFramework.IPluginCache.StorePluginState(Sdl.Core.PluginFramework.IPlugin)
    name: StorePluginState
    nameWithType: IPluginCache.StorePluginState
    fullName: Sdl.Core.PluginFramework.IPluginCache.StorePluginState
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.PluginFramework.IPlugin
    name: IPlugin
    nameWithType: IPlugin
    fullName: Sdl.Core.PluginFramework.IPlugin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.PluginFramework.IPlugin
  commentId: T:Sdl.Core.PluginFramework.IPlugin
  parent: Sdl.Core.PluginFramework
  isExternal: true
  name: IPlugin
  nameWithType: IPlugin
  fullName: Sdl.Core.PluginFramework.IPlugin
- uid: Sdl.Core.PluginFramework.XmlPluginCache.Save*
  commentId: Overload:Sdl.Core.PluginFramework.XmlPluginCache.Save
  isExternal: true
  name: Save
  nameWithType: XmlPluginCache.Save
  fullName: Sdl.Core.PluginFramework.XmlPluginCache.Save
- uid: Sdl.Core.PluginFramework.IPluginCache.Save
  commentId: M:Sdl.Core.PluginFramework.IPluginCache.Save
  parent: Sdl.Core.PluginFramework.IPluginCache
  isExternal: true
  name: Save()
  nameWithType: IPluginCache.Save()
  fullName: Sdl.Core.PluginFramework.IPluginCache.Save()
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.IPluginCache.Save
    name: Save
    nameWithType: IPluginCache.Save
    fullName: Sdl.Core.PluginFramework.IPluginCache.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.PluginFramework.IPluginCache.Save
    name: Save
    nameWithType: IPluginCache.Save
    fullName: Sdl.Core.PluginFramework.IPluginCache.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.PluginFramework.XmlPluginCache.PluginCacheFilePath*
  commentId: Overload:Sdl.Core.PluginFramework.XmlPluginCache.PluginCacheFilePath
  isExternal: true
  name: PluginCacheFilePath
  nameWithType: XmlPluginCache.PluginCacheFilePath
  fullName: Sdl.Core.PluginFramework.XmlPluginCache.PluginCacheFilePath
