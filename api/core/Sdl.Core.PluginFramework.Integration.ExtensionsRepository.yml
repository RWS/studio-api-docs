### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsRepository
  commentId: T:Sdl.Core.PluginFramework.Integration.ExtensionsRepository
  id: ExtensionsRepository
  parent: Sdl.Core.PluginFramework.Integration
  children:
  - Sdl.Core.PluginFramework.Integration.ExtensionsRepository.AddExtension``1(Sdl.Core.PluginFramework.IExtension,Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Func{Sdl.Core.PluginFramework.IExtension,System.Object,Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Object})
  - Sdl.Core.PluginFramework.Integration.ExtensionsRepository.FirstOrDefault(System.Func{Sdl.Core.PluginFramework.Integration.ExtensionStoreItem,System.Boolean})
  - Sdl.Core.PluginFramework.Integration.ExtensionsRepository.FirstOrDefault(System.Object)
  - Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault``1(Sdl.Core.PluginFramework.IExtension)
  - Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault``1(System.Type,System.Type)
  - Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault``3
  - Sdl.Core.PluginFramework.Integration.ExtensionsRepository.Instance
  langs:
  - csharp
  - vb
  name: ExtensionsRepository
  nameWithType: ExtensionsRepository
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsRepository
  type: Class
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: Implements an extensions repository which stores singleton instances of the extensions
  example: []
  syntax:
    content: public sealed class ExtensionsRepository
    content.vb: Public NotInheritable Class ExtensionsRepository
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.FirstOrDefault(System.Func{Sdl.Core.PluginFramework.Integration.ExtensionStoreItem,System.Boolean})
  commentId: M:Sdl.Core.PluginFramework.Integration.ExtensionsRepository.FirstOrDefault(System.Func{Sdl.Core.PluginFramework.Integration.ExtensionStoreItem,System.Boolean})
  id: FirstOrDefault(System.Func{Sdl.Core.PluginFramework.Integration.ExtensionStoreItem,System.Boolean})
  parent: Sdl.Core.PluginFramework.Integration.ExtensionsRepository
  langs:
  - csharp
  - vb
  name: FirstOrDefault(Func<ExtensionStoreItem, bool>)
  nameWithType: ExtensionsRepository.FirstOrDefault(Func<ExtensionStoreItem, bool>)
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.FirstOrDefault(System.Func<Sdl.Core.PluginFramework.Integration.ExtensionStoreItem, bool>)
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: Returns the first element stored in the repository that satisfies a condition or a default value if no such element found.
  example: []
  syntax:
    content: public ExtensionStoreItem FirstOrDefault(Func<ExtensionStoreItem, bool> predicate)
    parameters:
    - id: predicate
      type: System.Func{Sdl.Core.PluginFramework.Integration.ExtensionStoreItem,System.Boolean}
      description: The predicate used for the searching inside the repository.
    return:
      type: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem
      description: Returns the first element stored in the repository that contains the instance reference.
    content.vb: Public Function FirstOrDefault(predicate As Func(Of ExtensionStoreItem, Boolean)) As ExtensionStoreItem
  overload: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.FirstOrDefault*
  nameWithType.vb: ExtensionsRepository.FirstOrDefault(Func(Of ExtensionStoreItem, Boolean))
  fullName.vb: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.FirstOrDefault(System.Func(Of Sdl.Core.PluginFramework.Integration.ExtensionStoreItem, Boolean))
  name.vb: FirstOrDefault(Func(Of ExtensionStoreItem, Boolean))
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.FirstOrDefault(System.Object)
  commentId: M:Sdl.Core.PluginFramework.Integration.ExtensionsRepository.FirstOrDefault(System.Object)
  id: FirstOrDefault(System.Object)
  parent: Sdl.Core.PluginFramework.Integration.ExtensionsRepository
  langs:
  - csharp
  - vb
  name: FirstOrDefault(object)
  nameWithType: ExtensionsRepository.FirstOrDefault(object)
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.FirstOrDefault(object)
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: Returns the first element stored in the repository that contains the extension instance reference.
  example: []
  syntax:
    content: public ExtensionStoreItem FirstOrDefault(object extensionInstanceReference)
    parameters:
    - id: extensionInstanceReference
      type: System.Object
      description: The extension instance reference which is searched in the repository
    return:
      type: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem
      description: Returns the first element stored in the repository that contains the instance reference.
    content.vb: Public Function FirstOrDefault(extensionInstanceReference As Object) As ExtensionStoreItem
  overload: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.FirstOrDefault*
  nameWithType.vb: ExtensionsRepository.FirstOrDefault(Object)
  fullName.vb: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.FirstOrDefault(Object)
  name.vb: FirstOrDefault(Object)
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault``1(System.Type,System.Type)
  commentId: M:Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault``1(System.Type,System.Type)
  id: GetAssignableInstanceOrDefault``1(System.Type,System.Type)
  parent: Sdl.Core.PluginFramework.Integration.ExtensionsRepository
  langs:
  - csharp
  - vb
  name: GetAssignableInstanceOrDefault<TResult>(Type, Type)
  nameWithType: ExtensionsRepository.GetAssignableInstanceOrDefault<TResult>(Type, Type)
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault<TResult>(System.Type, System.Type)
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: Returns an extension instance from the repository which can be assigned to a specified TResult type or null if none was found.
  example: []
  syntax:
    content: 'public TResult GetAssignableInstanceOrDefault<TResult>(Type extensionAttributeType, Type extensionType) where TResult : class'
    parameters:
    - id: extensionAttributeType
      type: System.Type
      description: The type for an attribute decorating the extension for which the search is done.
    - id: extensionType
      type: System.Type
      description: The extension type for which the search is done.
    typeParameters:
    - id: TResult
      description: The assignable instance type which is required from the extension store.
    return:
      type: '{TResult}'
      description: Returns the extension instance assignable to TResult.
    content.vb: Public Function GetAssignableInstanceOrDefault(Of TResult As Class)(extensionAttributeType As Type, extensionType As Type) As TResult
  overload: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault*
  nameWithType.vb: ExtensionsRepository.GetAssignableInstanceOrDefault(Of TResult)(Type, Type)
  fullName.vb: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault(Of TResult)(System.Type, System.Type)
  name.vb: GetAssignableInstanceOrDefault(Of TResult)(Type, Type)
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault``3
  commentId: M:Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault``3
  id: GetAssignableInstanceOrDefault``3
  parent: Sdl.Core.PluginFramework.Integration.ExtensionsRepository
  langs:
  - csharp
  - vb
  name: GetAssignableInstanceOrDefault<TAttribute, TExtensionType, TResult>()
  nameWithType: ExtensionsRepository.GetAssignableInstanceOrDefault<TAttribute, TExtensionType, TResult>()
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault<TAttribute, TExtensionType, TResult>()
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: Returns an extension instance from the repository which can be assigned to a specified TResult type or null if none was found
  example: []
  syntax:
    content: 'public TResult GetAssignableInstanceOrDefault<TAttribute, TExtensionType, TResult>() where TAttribute : ExtensionAttribute where TResult : class'
    typeParameters:
    - id: TAttribute
      description: The extension attribute type for which the search is done.
    - id: TExtensionType
      description: The extension type for which the search is done.
    - id: TResult
      description: The assignable instance type which is required from the extension store.
    return:
      type: '{TResult}'
      description: Returns the extension instance assignable to TResult.
    content.vb: Public Function GetAssignableInstanceOrDefault(Of TAttribute As ExtensionAttribute, TExtensionType, TResult As Class)() As TResult
  overload: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault*
  nameWithType.vb: ExtensionsRepository.GetAssignableInstanceOrDefault(Of TAttribute, TExtensionType, TResult)()
  fullName.vb: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault(Of TAttribute, TExtensionType, TResult)()
  name.vb: GetAssignableInstanceOrDefault(Of TAttribute, TExtensionType, TResult)()
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault``1(Sdl.Core.PluginFramework.IExtension)
  commentId: M:Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault``1(Sdl.Core.PluginFramework.IExtension)
  id: GetAssignableInstanceOrDefault``1(Sdl.Core.PluginFramework.IExtension)
  parent: Sdl.Core.PluginFramework.Integration.ExtensionsRepository
  langs:
  - csharp
  - vb
  name: GetAssignableInstanceOrDefault<TResult>(IExtension)
  nameWithType: ExtensionsRepository.GetAssignableInstanceOrDefault<TResult>(IExtension)
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault<TResult>(Sdl.Core.PluginFramework.IExtension)
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: Returns an extension instance from the repository which can be assigned to a specified TResult type or null if none was found.
  example: []
  syntax:
    content: 'public TResult GetAssignableInstanceOrDefault<TResult>(IExtension extension) where TResult : class'
    parameters:
    - id: extension
      type: Sdl.Core.PluginFramework.IExtension
      description: The extension instance for which the search is done.
    typeParameters:
    - id: TResult
      description: The assignable instance type which is required from the extension store.
    return:
      type: '{TResult}'
      description: Returns the extension instance assignable to TResult.
    content.vb: Public Function GetAssignableInstanceOrDefault(Of TResult As Class)(extension As IExtension) As TResult
  overload: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault*
  nameWithType.vb: ExtensionsRepository.GetAssignableInstanceOrDefault(Of TResult)(IExtension)
  fullName.vb: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault(Of TResult)(Sdl.Core.PluginFramework.IExtension)
  name.vb: GetAssignableInstanceOrDefault(Of TResult)(IExtension)
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.AddExtension``1(Sdl.Core.PluginFramework.IExtension,Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Func{Sdl.Core.PluginFramework.IExtension,System.Object,Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Object})
  commentId: M:Sdl.Core.PluginFramework.Integration.ExtensionsRepository.AddExtension``1(Sdl.Core.PluginFramework.IExtension,Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Func{Sdl.Core.PluginFramework.IExtension,System.Object,Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Object})
  id: AddExtension``1(Sdl.Core.PluginFramework.IExtension,Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Func{Sdl.Core.PluginFramework.IExtension,System.Object,Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Object})
  parent: Sdl.Core.PluginFramework.Integration.ExtensionsRepository
  langs:
  - csharp
  - vb
  name: AddExtension<TResult>(IExtension, ExtensionArguments, Func<IExtension, object, ExtensionArguments, object>)
  nameWithType: ExtensionsRepository.AddExtension<TResult>(IExtension, ExtensionArguments, Func<IExtension, object, ExtensionArguments, object>)
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.AddExtension<TResult>(Sdl.Core.PluginFramework.IExtension, Sdl.Core.PluginFramework.Integration.ExtensionArguments, System.Func<Sdl.Core.PluginFramework.IExtension, object, Sdl.Core.PluginFramework.Integration.ExtensionArguments, object>)
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: Add an extension to the repository
  example: []
  syntax:
    content: 'public TResult AddExtension<TResult>(IExtension extension, ExtensionArguments arguments, Func<IExtension, object, ExtensionArguments, object> instanceCreator) where TResult : class'
    parameters:
    - id: extension
      type: Sdl.Core.PluginFramework.IExtension
      description: The extension object
    - id: arguments
      type: Sdl.Core.PluginFramework.Integration.ExtensionArguments
      description: The arguments required by the instance creator for the extension instance initialization
    - id: instanceCreator
      type: System.Func{Sdl.Core.PluginFramework.IExtension,System.Object,Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Object}
      description: A delegate passed to initialize a custom extension instance which will get the extension object, default extension instance and the extension initializer arguments
    typeParameters:
    - id: TResult
      description: The instance which is stored or was created while storing.
    return:
      type: '{TResult}'
      description: The instance created and stored in the repository or an assignable instance already present in the repository.
    content.vb: Public Function AddExtension(Of TResult As Class)(extension As IExtension, arguments As ExtensionArguments, instanceCreator As Func(Of IExtension, Object, ExtensionArguments, Object)) As TResult
  overload: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.AddExtension*
  nameWithType.vb: ExtensionsRepository.AddExtension(Of TResult)(IExtension, ExtensionArguments, Func(Of IExtension, Object, ExtensionArguments, Object))
  fullName.vb: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.AddExtension(Of TResult)(Sdl.Core.PluginFramework.IExtension, Sdl.Core.PluginFramework.Integration.ExtensionArguments, System.Func(Of Sdl.Core.PluginFramework.IExtension, Object, Sdl.Core.PluginFramework.Integration.ExtensionArguments, Object))
  name.vb: AddExtension(Of TResult)(IExtension, ExtensionArguments, Func(Of IExtension, Object, ExtensionArguments, Object))
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.Instance
  commentId: P:Sdl.Core.PluginFramework.Integration.ExtensionsRepository.Instance
  id: Instance
  parent: Sdl.Core.PluginFramework.Integration.ExtensionsRepository
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: ExtensionsRepository.Instance
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.Instance
  type: Property
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: Single instance of the ExtensionsRepository
  example: []
  syntax:
    content: public static ExtensionsRepository Instance { get; }
    parameters: []
    return:
      type: Sdl.Core.PluginFramework.Integration.ExtensionsRepository
    content.vb: Public Shared ReadOnly Property Instance As ExtensionsRepository
  overload: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.Instance*
references:
- uid: Sdl.Core.PluginFramework.Integration
  commentId: N:Sdl.Core.PluginFramework.Integration
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.PluginFramework.Integration
  nameWithType: Sdl.Core.PluginFramework.Integration
  fullName: Sdl.Core.PluginFramework.Integration
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
  - name: .
  - uid: Sdl.Core.PluginFramework.Integration
    name: Integration
    isExternal: true
    href: Sdl.Core.PluginFramework.Integration.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
  - name: .
  - uid: Sdl.Core.PluginFramework.Integration
    name: Integration
    isExternal: true
    href: Sdl.Core.PluginFramework.Integration.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.FirstOrDefault*
  commentId: Overload:Sdl.Core.PluginFramework.Integration.ExtensionsRepository.FirstOrDefault
  isExternal: true
  href: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.html#Sdl_Core_PluginFramework_Integration_ExtensionsRepository_FirstOrDefault_System_Func_Sdl_Core_PluginFramework_Integration_ExtensionStoreItem_System_Boolean__
  name: FirstOrDefault
  nameWithType: ExtensionsRepository.FirstOrDefault
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.FirstOrDefault
- uid: System.Func{Sdl.Core.PluginFramework.Integration.ExtensionStoreItem,System.Boolean}
  commentId: T:System.Func{Sdl.Core.PluginFramework.Integration.ExtensionStoreItem,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<ExtensionStoreItem, bool>
  nameWithType: Func<ExtensionStoreItem, bool>
  fullName: System.Func<Sdl.Core.PluginFramework.Integration.ExtensionStoreItem, bool>
  nameWithType.vb: Func(Of ExtensionStoreItem, Boolean)
  fullName.vb: System.Func(Of Sdl.Core.PluginFramework.Integration.ExtensionStoreItem, Boolean)
  name.vb: Func(Of ExtensionStoreItem, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem
    name: ExtensionStoreItem
    isExternal: true
    href: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem
    name: ExtensionStoreItem
    isExternal: true
    href: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem
  commentId: T:Sdl.Core.PluginFramework.Integration.ExtensionStoreItem
  parent: Sdl.Core.PluginFramework.Integration
  isExternal: true
  href: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.html
  name: ExtensionStoreItem
  nameWithType: ExtensionStoreItem
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault*
  commentId: Overload:Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault
  isExternal: true
  href: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.html#Sdl_Core_PluginFramework_Integration_ExtensionsRepository_GetAssignableInstanceOrDefault__1_System_Type_System_Type_
  name: GetAssignableInstanceOrDefault
  nameWithType: ExtensionsRepository.GetAssignableInstanceOrDefault
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.GetAssignableInstanceOrDefault
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: Sdl.Core.PluginFramework.IExtension
  commentId: T:Sdl.Core.PluginFramework.IExtension
  parent: Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtension.html
  name: IExtension
  nameWithType: IExtension
  fullName: Sdl.Core.PluginFramework.IExtension
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.AddExtension*
  commentId: Overload:Sdl.Core.PluginFramework.Integration.ExtensionsRepository.AddExtension
  isExternal: true
  href: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.html#Sdl_Core_PluginFramework_Integration_ExtensionsRepository_AddExtension__1_Sdl_Core_PluginFramework_IExtension_Sdl_Core_PluginFramework_Integration_ExtensionArguments_System_Func_Sdl_Core_PluginFramework_IExtension_System_Object_Sdl_Core_PluginFramework_Integration_ExtensionArguments_System_Object__
  name: AddExtension
  nameWithType: ExtensionsRepository.AddExtension
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.AddExtension
- uid: Sdl.Core.PluginFramework.Integration.ExtensionArguments
  commentId: T:Sdl.Core.PluginFramework.Integration.ExtensionArguments
  parent: Sdl.Core.PluginFramework.Integration
  isExternal: true
  href: Sdl.Core.PluginFramework.Integration.ExtensionArguments.html
  name: ExtensionArguments
  nameWithType: ExtensionArguments
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionArguments
- uid: System.Func{Sdl.Core.PluginFramework.IExtension,System.Object,Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Object}
  commentId: T:System.Func{Sdl.Core.PluginFramework.IExtension,System.Object,Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Object}
  parent: System
  definition: System.Func`4
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<IExtension, object, ExtensionArguments, object>
  nameWithType: Func<IExtension, object, ExtensionArguments, object>
  fullName: System.Func<Sdl.Core.PluginFramework.IExtension, object, Sdl.Core.PluginFramework.Integration.ExtensionArguments, object>
  nameWithType.vb: Func(Of IExtension, Object, ExtensionArguments, Object)
  fullName.vb: System.Func(Of Sdl.Core.PluginFramework.IExtension, Object, Sdl.Core.PluginFramework.Integration.ExtensionArguments, Object)
  name.vb: Func(Of IExtension, Object, ExtensionArguments, Object)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Sdl.Core.PluginFramework.IExtension
    name: IExtension
    isExternal: true
    href: Sdl.Core.PluginFramework.IExtension.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Sdl.Core.PluginFramework.Integration.ExtensionArguments
    name: ExtensionArguments
    isExternal: true
    href: Sdl.Core.PluginFramework.Integration.ExtensionArguments.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.PluginFramework.IExtension
    name: IExtension
    isExternal: true
    href: Sdl.Core.PluginFramework.IExtension.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Sdl.Core.PluginFramework.Integration.ExtensionArguments
    name: ExtensionArguments
    isExternal: true
    href: Sdl.Core.PluginFramework.Integration.ExtensionArguments.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Func`4
  commentId: T:System.Func`4
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<T1, T2, T3, TResult>
  nameWithType: Func<T1, T2, T3, TResult>
  fullName: System.Func<T1, T2, T3, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, TResult)
  name.vb: Func(Of T1, T2, T3, TResult)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.Instance*
  commentId: Overload:Sdl.Core.PluginFramework.Integration.ExtensionsRepository.Instance
  isExternal: true
  href: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.html#Sdl_Core_PluginFramework_Integration_ExtensionsRepository_Instance
  name: Instance
  nameWithType: ExtensionsRepository.Instance
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.Instance
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsRepository
  commentId: T:Sdl.Core.PluginFramework.Integration.ExtensionsRepository
  parent: Sdl.Core.PluginFramework.Integration
  isExternal: true
  href: Sdl.Core.PluginFramework.Integration.ExtensionsRepository.html
  name: ExtensionsRepository
  nameWithType: ExtensionsRepository
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsRepository
