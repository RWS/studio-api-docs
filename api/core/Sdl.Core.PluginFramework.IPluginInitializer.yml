### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.IPluginInitializer
  commentId: T:Sdl.Core.PluginFramework.IPluginInitializer
  id: IPluginInitializer
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsync(System.Collections.Generic.IEnumerable{Sdl.Core.PluginFramework.IPlugin})
  - Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsyncCancel(System.Collections.Generic.IEnumerable{Sdl.Core.PluginFramework.IPlugin})
  - Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginCompleted
  - Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginProgressChanged
  langs:
  - csharp
  - vb
  name: IPluginInitializer
  nameWithType: IPluginInitializer
  fullName: Sdl.Core.PluginFramework.IPluginInitializer
  type: Interface
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: >-
    Component that is used by a plug-in registry (<xref href="Sdl.Core.PluginFramework.IPluginRegistry" data-throw-if-not-resolved="false"></xref>) to initailize plug-ins.

    This component ensures that the plug-in is ready to be used; i.e. its extensions are ready to be instantiated.
  example: []
  syntax:
    content: public interface IPluginInitializer
    content.vb: Public Interface IPluginInitializer
- uid: Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsync(System.Collections.Generic.IEnumerable{Sdl.Core.PluginFramework.IPlugin})
  commentId: M:Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsync(System.Collections.Generic.IEnumerable{Sdl.Core.PluginFramework.IPlugin})
  id: InitializePluginAsync(System.Collections.Generic.IEnumerable{Sdl.Core.PluginFramework.IPlugin})
  parent: Sdl.Core.PluginFramework.IPluginInitializer
  langs:
  - csharp
  - vb
  name: InitializePluginAsync(IEnumerable<IPlugin>)
  nameWithType: IPluginInitializer.InitializePluginAsync(IEnumerable<IPlugin>)
  fullName: Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsync(System.Collections.Generic.IEnumerable<Sdl.Core.PluginFramework.IPlugin>)
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Starts the initialization of the specified plug-in.
  example: []
  syntax:
    content: void InitializePluginAsync(IEnumerable<IPlugin> plugin)
    parameters:
    - id: plugin
      type: System.Collections.Generic.IEnumerable{Sdl.Core.PluginFramework.IPlugin}
      description: The plug-ins to be initialized.
    content.vb: Sub InitializePluginAsync(plugin As IEnumerable(Of IPlugin))
  overload: Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsync*
  nameWithType.vb: IPluginInitializer.InitializePluginAsync(IEnumerable(Of IPlugin))
  fullName.vb: Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsync(System.Collections.Generic.IEnumerable(Of Sdl.Core.PluginFramework.IPlugin))
  name.vb: InitializePluginAsync(IEnumerable(Of IPlugin))
- uid: Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsyncCancel(System.Collections.Generic.IEnumerable{Sdl.Core.PluginFramework.IPlugin})
  commentId: M:Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsyncCancel(System.Collections.Generic.IEnumerable{Sdl.Core.PluginFramework.IPlugin})
  id: InitializePluginAsyncCancel(System.Collections.Generic.IEnumerable{Sdl.Core.PluginFramework.IPlugin})
  parent: Sdl.Core.PluginFramework.IPluginInitializer
  langs:
  - csharp
  - vb
  name: InitializePluginAsyncCancel(IEnumerable<IPlugin>)
  nameWithType: IPluginInitializer.InitializePluginAsyncCancel(IEnumerable<IPlugin>)
  fullName: Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsyncCancel(System.Collections.Generic.IEnumerable<Sdl.Core.PluginFramework.IPlugin>)
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Cancels the initailization of the specified plug-in.
  example: []
  syntax:
    content: void InitializePluginAsyncCancel(IEnumerable<IPlugin> plugin)
    parameters:
    - id: plugin
      type: System.Collections.Generic.IEnumerable{Sdl.Core.PluginFramework.IPlugin}
      description: The plug-ins for which initialization should be cancelled.
    content.vb: Sub InitializePluginAsyncCancel(plugin As IEnumerable(Of IPlugin))
  overload: Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsyncCancel*
  nameWithType.vb: IPluginInitializer.InitializePluginAsyncCancel(IEnumerable(Of IPlugin))
  fullName.vb: Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsyncCancel(System.Collections.Generic.IEnumerable(Of Sdl.Core.PluginFramework.IPlugin))
  name.vb: InitializePluginAsyncCancel(IEnumerable(Of IPlugin))
- uid: Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginCompleted
  commentId: E:Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginCompleted
  id: InitializePluginCompleted
  parent: Sdl.Core.PluginFramework.IPluginInitializer
  langs:
  - csharp
  - vb
  name: InitializePluginCompleted
  nameWithType: IPluginInitializer.InitializePluginCompleted
  fullName: Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginCompleted
  type: Event
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Raised when a plug-in has been initialized, successfully or not.
  example: []
  syntax:
    content: event EventHandler<InitializePluginCompletedEventArgs> InitializePluginCompleted
    return:
      type: System.EventHandler{Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs}
    content.vb: Event InitializePluginCompleted As EventHandler(Of InitializePluginCompletedEventArgs)
- uid: Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginProgressChanged
  commentId: E:Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginProgressChanged
  id: InitializePluginProgressChanged
  parent: Sdl.Core.PluginFramework.IPluginInitializer
  langs:
  - csharp
  - vb
  name: InitializePluginProgressChanged
  nameWithType: IPluginInitializer.InitializePluginProgressChanged
  fullName: Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginProgressChanged
  type: Event
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Raised while a plug-in is being initailized. Can be used to monitor initialization progress.
  example: []
  syntax:
    content: event EventHandler<InitializePluginProgressChangedEventArgs> InitializePluginProgressChanged
    return:
      type: System.EventHandler{Sdl.Core.PluginFramework.InitializePluginProgressChangedEventArgs}
    content.vb: Event InitializePluginProgressChanged As EventHandler(Of InitializePluginProgressChangedEventArgs)
references:
- uid: Sdl.Core.PluginFramework.IPluginRegistry
  commentId: T:Sdl.Core.PluginFramework.IPluginRegistry
  parent: Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.Core.PluginFramework.IPluginRegistry.html
  name: IPluginRegistry
  nameWithType: IPluginRegistry
  fullName: Sdl.Core.PluginFramework.IPluginRegistry
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
- uid: Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsync*
  commentId: Overload:Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsync
  isExternal: true
  href: Sdl.Core.PluginFramework.IPluginInitializer.html#Sdl_Core_PluginFramework_IPluginInitializer_InitializePluginAsync_System_Collections_Generic_IEnumerable_Sdl_Core_PluginFramework_IPlugin__
  name: InitializePluginAsync
  nameWithType: IPluginInitializer.InitializePluginAsync
  fullName: Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsync
- uid: System.Collections.Generic.IEnumerable{Sdl.Core.PluginFramework.IPlugin}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.Core.PluginFramework.IPlugin}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IPlugin>
  nameWithType: IEnumerable<IPlugin>
  fullName: System.Collections.Generic.IEnumerable<Sdl.Core.PluginFramework.IPlugin>
  nameWithType.vb: IEnumerable(Of IPlugin)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.Core.PluginFramework.IPlugin)
  name.vb: IEnumerable(Of IPlugin)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Sdl.Core.PluginFramework.IPlugin
    name: IPlugin
    isExternal: true
    href: Sdl.Core.PluginFramework.IPlugin.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.PluginFramework.IPlugin
    name: IPlugin
    isExternal: true
    href: Sdl.Core.PluginFramework.IPlugin.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsyncCancel*
  commentId: Overload:Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsyncCancel
  isExternal: true
  href: Sdl.Core.PluginFramework.IPluginInitializer.html#Sdl_Core_PluginFramework_IPluginInitializer_InitializePluginAsyncCancel_System_Collections_Generic_IEnumerable_Sdl_Core_PluginFramework_IPlugin__
  name: InitializePluginAsyncCancel
  nameWithType: IPluginInitializer.InitializePluginAsyncCancel
  fullName: Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsyncCancel
- uid: System.EventHandler{Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs}
  commentId: T:System.EventHandler{Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<InitializePluginCompletedEventArgs>
  nameWithType: EventHandler<InitializePluginCompletedEventArgs>
  fullName: System.EventHandler<Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs>
  nameWithType.vb: EventHandler(Of InitializePluginCompletedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs)
  name.vb: EventHandler(Of InitializePluginCompletedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs
    name: InitializePluginCompletedEventArgs
    isExternal: true
    href: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs
    name: InitializePluginCompletedEventArgs
    isExternal: true
    href: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{Sdl.Core.PluginFramework.InitializePluginProgressChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.Core.PluginFramework.InitializePluginProgressChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<InitializePluginProgressChangedEventArgs>
  nameWithType: EventHandler<InitializePluginProgressChangedEventArgs>
  fullName: System.EventHandler<Sdl.Core.PluginFramework.InitializePluginProgressChangedEventArgs>
  nameWithType.vb: EventHandler(Of InitializePluginProgressChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.Core.PluginFramework.InitializePluginProgressChangedEventArgs)
  name.vb: EventHandler(Of InitializePluginProgressChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.Core.PluginFramework.InitializePluginProgressChangedEventArgs
    name: InitializePluginProgressChangedEventArgs
    isExternal: true
    href: Sdl.Core.PluginFramework.InitializePluginProgressChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.PluginFramework.InitializePluginProgressChangedEventArgs
    name: InitializePluginProgressChangedEventArgs
    isExternal: true
    href: Sdl.Core.PluginFramework.InitializePluginProgressChangedEventArgs.html
  - name: )
