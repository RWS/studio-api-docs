### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.IObjectResolver
  commentId: T:Sdl.Core.PluginFramework.IObjectResolver
  id: IObjectResolver
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.IObjectResolver.CanResolve(System.Type)
  - Sdl.Core.PluginFramework.IObjectResolver.CreateObject(System.Type,System.Xml.Linq.XElement)
  langs:
  - csharp
  - vb
  name: IObjectResolver
  nameWithType: IObjectResolver
  fullName: Sdl.Core.PluginFramework.IObjectResolver
  type: Interface
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Will provide an implementation that will be used to create objects based on the plugin manifest file
  example: []
  syntax:
    content: public interface IObjectResolver
    content.vb: Public Interface IObjectResolver
- uid: Sdl.Core.PluginFramework.IObjectResolver.CanResolve(System.Type)
  commentId: M:Sdl.Core.PluginFramework.IObjectResolver.CanResolve(System.Type)
  id: CanResolve(System.Type)
  parent: Sdl.Core.PluginFramework.IObjectResolver
  langs:
  - csharp
  - vb
  name: CanResolve(Type)
  nameWithType: IObjectResolver.CanResolve(Type)
  fullName: Sdl.Core.PluginFramework.IObjectResolver.CanResolve(System.Type)
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Based on the object type will return true of false based on the fact that it can resolve the object or not
  example: []
  syntax:
    content: bool CanResolve(Type objectType)
    parameters:
    - id: objectType
      type: System.Type
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function CanResolve(objectType As Type) As Boolean
  overload: Sdl.Core.PluginFramework.IObjectResolver.CanResolve*
- uid: Sdl.Core.PluginFramework.IObjectResolver.CreateObject(System.Type,System.Xml.Linq.XElement)
  commentId: M:Sdl.Core.PluginFramework.IObjectResolver.CreateObject(System.Type,System.Xml.Linq.XElement)
  id: CreateObject(System.Type,System.Xml.Linq.XElement)
  parent: Sdl.Core.PluginFramework.IObjectResolver
  langs:
  - csharp
  - vb
  name: CreateObject(Type, XElement)
  nameWithType: IObjectResolver.CreateObject(Type, XElement)
  fullName: Sdl.Core.PluginFramework.IObjectResolver.CreateObject(System.Type, System.Xml.Linq.XElement)
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Create the object
  example: []
  syntax:
    content: object CreateObject(Type objectType, XElement attributeElement = null)
    parameters:
    - id: objectType
      type: System.Type
      description: Object type
    - id: attributeElement
      type: System.Xml.Linq.XElement
      description: Attribute from the PluginManifest file
    return:
      type: System.Object
      description: ''
    content.vb: Function CreateObject(objectType As Type, attributeElement As XElement = Nothing) As Object
  overload: Sdl.Core.PluginFramework.IObjectResolver.CreateObject*
references:
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
- uid: Sdl.Core.PluginFramework.IObjectResolver.CanResolve*
  commentId: Overload:Sdl.Core.PluginFramework.IObjectResolver.CanResolve
  isExternal: true
  href: Sdl.Core.PluginFramework.IObjectResolver.html#Sdl_Core_PluginFramework_IObjectResolver_CanResolve_System_Type_
  name: CanResolve
  nameWithType: IObjectResolver.CanResolve
  fullName: Sdl.Core.PluginFramework.IObjectResolver.CanResolve
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.IObjectResolver.CreateObject*
  commentId: Overload:Sdl.Core.PluginFramework.IObjectResolver.CreateObject
  isExternal: true
  href: Sdl.Core.PluginFramework.IObjectResolver.html#Sdl_Core_PluginFramework_IObjectResolver_CreateObject_System_Type_System_Xml_Linq_XElement_
  name: CreateObject
  nameWithType: IObjectResolver.CreateObject
  fullName: Sdl.Core.PluginFramework.IObjectResolver.CreateObject
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: true
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
  - name: .
  - uid: System.Xml.Linq
    name: Linq
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
  - name: .
  - uid: System.Xml.Linq
    name: Linq
    isExternal: true
