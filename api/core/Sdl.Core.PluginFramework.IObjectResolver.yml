### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.IObjectResolver
  commentId: T:Sdl.Core.PluginFramework.IObjectResolver
  id: IObjectResolver
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.IObjectResolver.CanResolve(System.Type)
  - Sdl.Core.PluginFramework.IObjectResolver.CreateObject(System.Type,System.Xml.Linq.XElement)
  langs:
  - csharp
  - vb
  name: IObjectResolver
  nameWithType: IObjectResolver
  fullName: Sdl.Core.PluginFramework.IObjectResolver
  type: Interface
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nWill provide an implementation that will be used to create objects based on the plugin manifest file\n"
  syntax:
    content: public interface IObjectResolver
    content.vb: Public Interface IObjectResolver
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Core.PluginFramework.IObjectResolver.CanResolve(System.Type)
  commentId: M:Sdl.Core.PluginFramework.IObjectResolver.CanResolve(System.Type)
  id: CanResolve(System.Type)
  parent: Sdl.Core.PluginFramework.IObjectResolver
  langs:
  - csharp
  - vb
  name: CanResolve(Type)
  nameWithType: IObjectResolver.CanResolve(Type)
  fullName: Sdl.Core.PluginFramework.IObjectResolver.CanResolve(System.Type)
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nBased on the object type will return true of false based on the fact that it can resolve the object or not\n"
  syntax:
    content: bool CanResolve(Type objectType)
    parameters:
    - id: objectType
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Function CanResolve(objectType As Type) As Boolean
  overload: Sdl.Core.PluginFramework.IObjectResolver.CanResolve*
- uid: Sdl.Core.PluginFramework.IObjectResolver.CreateObject(System.Type,System.Xml.Linq.XElement)
  commentId: M:Sdl.Core.PluginFramework.IObjectResolver.CreateObject(System.Type,System.Xml.Linq.XElement)
  id: CreateObject(System.Type,System.Xml.Linq.XElement)
  parent: Sdl.Core.PluginFramework.IObjectResolver
  langs:
  - csharp
  - vb
  name: CreateObject(Type, XElement)
  nameWithType: IObjectResolver.CreateObject(Type, XElement)
  fullName: Sdl.Core.PluginFramework.IObjectResolver.CreateObject(System.Type, System.Xml.Linq.XElement)
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nCreate the object\n"
  syntax:
    content: object CreateObject(Type objectType, XElement attributeElement = null)
    parameters:
    - id: objectType
      type: System.Type
      description: Object type
    - id: attributeElement
      type: System.Xml.Linq.XElement
      description: Attribute from the PluginManifest file
    return:
      type: System.Object
    content.vb: Function CreateObject(objectType As Type, attributeElement As XElement = Nothing) As Object
  overload: Sdl.Core.PluginFramework.IObjectResolver.CreateObject*
references:
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: Sdl.Core.PluginFramework.IObjectResolver.CanResolve*
  commentId: Overload:Sdl.Core.PluginFramework.IObjectResolver.CanResolve
  isExternal: true
  name: CanResolve
  nameWithType: IObjectResolver.CanResolve
  fullName: Sdl.Core.PluginFramework.IObjectResolver.CanResolve
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.IObjectResolver.CreateObject*
  commentId: Overload:Sdl.Core.PluginFramework.IObjectResolver.CreateObject
  isExternal: true
  name: CreateObject
  nameWithType: IObjectResolver.CreateObject
  fullName: Sdl.Core.PluginFramework.IObjectResolver.CreateObject
- uid: System.Xml.Linq.XElement
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
