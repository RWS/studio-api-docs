### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.IPluginTypeLoader
  commentId: T:Sdl.Core.PluginFramework.IPluginTypeLoader
  id: IPluginTypeLoader
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.IPluginTypeLoader.LoadType(Sdl.Core.PluginFramework.IPlugin,System.String)
  langs:
  - csharp
  - vb
  name: IPluginTypeLoader
  nameWithType: IPluginTypeLoader
  fullName: Sdl.Core.PluginFramework.IPluginTypeLoader
  type: Interface
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nComponent that is used by the <xref href=\"Sdl.Core.PluginFramework.IPluginRegistry\" data-throw-if-not-resolved=\"false\"></xref> to load types that are referred to in plug-in\nmanifests.\n"
  syntax:
    content: public interface IPluginTypeLoader
    content.vb: Public Interface IPluginTypeLoader
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Core.PluginFramework.IPluginTypeLoader.LoadType(Sdl.Core.PluginFramework.IPlugin,System.String)
  commentId: M:Sdl.Core.PluginFramework.IPluginTypeLoader.LoadType(Sdl.Core.PluginFramework.IPlugin,System.String)
  id: LoadType(Sdl.Core.PluginFramework.IPlugin,System.String)
  parent: Sdl.Core.PluginFramework.IPluginTypeLoader
  langs:
  - csharp
  - vb
  name: LoadType(IPlugin, String)
  nameWithType: IPluginTypeLoader.LoadType(IPlugin, String)
  fullName: Sdl.Core.PluginFramework.IPluginTypeLoader.LoadType(Sdl.Core.PluginFramework.IPlugin, System.String)
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nLoads the specified type, referred to in the manifest of the specified plug-in.\n"
  syntax:
    content: Type LoadType(IPlugin plugin, string typeName)
    parameters:
    - id: plugin
      type: Sdl.Core.PluginFramework.IPlugin
      description: The plug-in which refers to the type.
    - id: typeName
      type: System.String
      description: The assembly-qualified type name of the requested type.
    return:
      type: System.Type
      description: The loaded type. Throws an exception if the type failes to load.
    content.vb: Function LoadType(plugin As IPlugin, typeName As String) As Type
  overload: Sdl.Core.PluginFramework.IPluginTypeLoader.LoadType*
references:
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: Sdl.Core.PluginFramework.IPluginTypeLoader.LoadType*
  commentId: Overload:Sdl.Core.PluginFramework.IPluginTypeLoader.LoadType
  isExternal: true
  name: LoadType
  nameWithType: IPluginTypeLoader.LoadType
  fullName: Sdl.Core.PluginFramework.IPluginTypeLoader.LoadType
- uid: Sdl.Core.PluginFramework.IPlugin
  commentId: T:Sdl.Core.PluginFramework.IPlugin
  parent: Sdl.Core.PluginFramework
  isExternal: true
  name: IPlugin
  nameWithType: IPlugin
  fullName: Sdl.Core.PluginFramework.IPlugin
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
