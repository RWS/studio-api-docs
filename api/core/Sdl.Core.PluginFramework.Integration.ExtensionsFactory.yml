### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsFactory
  commentId: T:Sdl.Core.PluginFramework.Integration.ExtensionsFactory
  id: ExtensionsFactory
  parent: Sdl.Core.PluginFramework.Integration
  children:
  - Sdl.Core.PluginFramework.Integration.ExtensionsFactory.#ctor
  - Sdl.Core.PluginFramework.Integration.ExtensionsFactory.Create``1(Sdl.Core.PluginFramework.IExtension,Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Boolean)
  - Sdl.Core.PluginFramework.Integration.ExtensionsFactory.Create``2(Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Boolean)
  langs:
  - csharp
  - vb
  name: ExtensionsFactory
  nameWithType: ExtensionsFactory
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsFactory
  type: Class
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: Implements the creation of the extension objects
  example: []
  syntax:
    content: public sealed class ExtensionsFactory
    content.vb: Public NotInheritable Class ExtensionsFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.Create``2(Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Boolean)
  commentId: M:Sdl.Core.PluginFramework.Integration.ExtensionsFactory.Create``2(Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Boolean)
  id: Create``2(Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Boolean)
  parent: Sdl.Core.PluginFramework.Integration.ExtensionsFactory
  langs:
  - csharp
  - vb
  name: Create<TAttribute, TResult>(ExtensionArguments, bool)
  nameWithType: ExtensionsFactory.Create<TAttribute, TResult>(ExtensionArguments, bool)
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.Create<TAttribute, TResult>(Sdl.Core.PluginFramework.Integration.ExtensionArguments, bool)
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: Creates the list of all the extension objects based on there attribute and instance type.
  example: []
  syntax:
    content: 'public static IEnumerable<TResult> Create<TAttribute, TResult>(ExtensionArguments arguments = null, bool useCache = true) where TAttribute : ExtensionAttribute where TResult : class'
    parameters:
    - id: arguments
      type: Sdl.Core.PluginFramework.Integration.ExtensionArguments
      description: Optional arguments possible required by the object initializer.
    - id: useCache
      type: System.Boolean
      description: Determines if the instance should be retrieved from the cache if exist or create a new one an store it in the cache.
    typeParameters:
    - id: TAttribute
      description: The attributes which decorates the extension classes.
    - id: TResult
      description: The instance result type expected.
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
      description: The extension instance.
    content.vb: Public Shared Function Create(Of TAttribute As ExtensionAttribute, TResult As Class)(arguments As ExtensionArguments = Nothing, useCache As Boolean = True) As IEnumerable(Of TResult)
  overload: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.Create*
  nameWithType.vb: ExtensionsFactory.Create(Of TAttribute, TResult)(ExtensionArguments, Boolean)
  fullName.vb: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.Create(Of TAttribute, TResult)(Sdl.Core.PluginFramework.Integration.ExtensionArguments, Boolean)
  name.vb: Create(Of TAttribute, TResult)(ExtensionArguments, Boolean)
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.Create``1(Sdl.Core.PluginFramework.IExtension,Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Boolean)
  commentId: M:Sdl.Core.PluginFramework.Integration.ExtensionsFactory.Create``1(Sdl.Core.PluginFramework.IExtension,Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Boolean)
  id: Create``1(Sdl.Core.PluginFramework.IExtension,Sdl.Core.PluginFramework.Integration.ExtensionArguments,System.Boolean)
  parent: Sdl.Core.PluginFramework.Integration.ExtensionsFactory
  langs:
  - csharp
  - vb
  name: Create<TResult>(IExtension, ExtensionArguments, bool)
  nameWithType: ExtensionsFactory.Create<TResult>(IExtension, ExtensionArguments, bool)
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.Create<TResult>(Sdl.Core.PluginFramework.IExtension, Sdl.Core.PluginFramework.Integration.ExtensionArguments, bool)
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: Create an extension instance based on its extension and the result type.
  example: []
  syntax:
    content: 'public static TResult Create<TResult>(IExtension extension, ExtensionArguments arguments = null, bool useCache = true) where TResult : class'
    parameters:
    - id: extension
      type: Sdl.Core.PluginFramework.IExtension
      description: The extension for which the instance is created.
    - id: arguments
      type: Sdl.Core.PluginFramework.Integration.ExtensionArguments
      description: Optional arguments possible required by the object initializer.
    - id: useCache
      type: System.Boolean
      description: Determines if the instance should be retrieved from the cache if exist or create a new one an store it in the cache.
    typeParameters:
    - id: TResult
      description: The instance result type expected.
    return:
      type: '{TResult}'
      description: The extension instance.
    content.vb: Public Shared Function Create(Of TResult As Class)(extension As IExtension, arguments As ExtensionArguments = Nothing, useCache As Boolean = True) As TResult
  overload: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.Create*
  nameWithType.vb: ExtensionsFactory.Create(Of TResult)(IExtension, ExtensionArguments, Boolean)
  fullName.vb: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.Create(Of TResult)(Sdl.Core.PluginFramework.IExtension, Sdl.Core.PluginFramework.Integration.ExtensionArguments, Boolean)
  name.vb: Create(Of TResult)(IExtension, ExtensionArguments, Boolean)
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.#ctor
  commentId: M:Sdl.Core.PluginFramework.Integration.ExtensionsFactory.#ctor
  id: '#ctor'
  parent: Sdl.Core.PluginFramework.Integration.ExtensionsFactory
  langs:
  - csharp
  - vb
  name: ExtensionsFactory()
  nameWithType: ExtensionsFactory.ExtensionsFactory()
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.ExtensionsFactory()
  type: Constructor
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  syntax:
    content: public ExtensionsFactory()
    content.vb: Public Sub New()
  overload: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.#ctor*
  nameWithType.vb: ExtensionsFactory.New()
  fullName.vb: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.New()
  name.vb: New()
references:
- uid: Sdl.Core.PluginFramework.Integration
  commentId: N:Sdl.Core.PluginFramework.Integration
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.PluginFramework.Integration
  nameWithType: Sdl.Core.PluginFramework.Integration
  fullName: Sdl.Core.PluginFramework.Integration
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
  - name: .
  - uid: Sdl.Core.PluginFramework.Integration
    name: Integration
    isExternal: true
    href: Sdl.Core.PluginFramework.Integration.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
  - name: .
  - uid: Sdl.Core.PluginFramework.Integration
    name: Integration
    isExternal: true
    href: Sdl.Core.PluginFramework.Integration.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.Create*
  commentId: Overload:Sdl.Core.PluginFramework.Integration.ExtensionsFactory.Create
  isExternal: true
  href: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.html#Sdl_Core_PluginFramework_Integration_ExtensionsFactory_Create__2_Sdl_Core_PluginFramework_Integration_ExtensionArguments_System_Boolean_
  name: Create
  nameWithType: ExtensionsFactory.Create
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.Create
- uid: Sdl.Core.PluginFramework.Integration.ExtensionArguments
  commentId: T:Sdl.Core.PluginFramework.Integration.ExtensionArguments
  parent: Sdl.Core.PluginFramework.Integration
  isExternal: true
  href: Sdl.Core.PluginFramework.Integration.ExtensionArguments.html
  name: ExtensionArguments
  nameWithType: ExtensionArguments
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionArguments
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable{{TResult}}
  commentId: T:System.Collections.Generic.IEnumerable{``1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TResult>
  nameWithType: IEnumerable<TResult>
  fullName: System.Collections.Generic.IEnumerable<TResult>
  nameWithType.vb: IEnumerable(Of TResult)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TResult)
  name.vb: IEnumerable(Of TResult)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Sdl.Core.PluginFramework.IExtension
  commentId: T:Sdl.Core.PluginFramework.IExtension
  parent: Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtension.html
  name: IExtension
  nameWithType: IExtension
  fullName: Sdl.Core.PluginFramework.IExtension
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.#ctor*
  commentId: Overload:Sdl.Core.PluginFramework.Integration.ExtensionsFactory.#ctor
  isExternal: true
  href: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.html#Sdl_Core_PluginFramework_Integration_ExtensionsFactory__ctor
  name: ExtensionsFactory
  nameWithType: ExtensionsFactory.ExtensionsFactory
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.ExtensionsFactory
  nameWithType.vb: ExtensionsFactory.New
  fullName.vb: Sdl.Core.PluginFramework.Integration.ExtensionsFactory.New
  name.vb: New
