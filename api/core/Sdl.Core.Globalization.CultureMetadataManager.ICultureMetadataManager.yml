### YamlMime:ManagedReference
items:
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  commentId: T:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  id: ICultureMetadataManager
  parent: Sdl.Core.Globalization.CultureMetadataManager
  children:
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllNeutralLanguagesAsync(System.Boolean,System.Boolean)
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllRegisteredProductsAsync
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllSpecificLanguagesAsync(System.Boolean,System.Boolean)
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataAsync(System.String)
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataFromLabelAsync(System.String,System.String)
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAlternativeLanguageCodesAsync(System.String,System.String)
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetApplicableLanguageMetadataAsync(System.String[])
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetDataVersionAsync
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageAsync(System.String)
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageAsync(System.String,System.String)
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageMetadataAsync(System.String[])
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguagesAsync(System.String[],System.Boolean,System.Boolean)
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetNumberMetadataAsync(System.String)
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetPreferredLabelValueSetAsync(System.String,System.String)
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetScriptDetailsAsync(System.String)
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfoAsync(System.String)
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfosAsync(System.String[])
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetSupportedLanguagesAsync(System.String)
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitDefinitionsAsync
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataAsync(System.String)
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromKeyAsync(System.String,System.String)
  - Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromLabelAsync(System.String,System.String)
  langs:
  - csharp
  - vb
  name: ICultureMetadataManager
  nameWithType: ICultureMetadataManager
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  type: Interface
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: public interface ICultureMetadataManager
    content.vb: Public Interface ICultureMetadataManager
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetDataVersionAsync
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetDataVersionAsync
  id: GetDataVersionAsync
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetDataVersionAsync()
  nameWithType: ICultureMetadataManager.GetDataVersionAsync()
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetDataVersionAsync()
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<string> GetDataVersionAsync()
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Function GetDataVersionAsync() As Task(Of String)
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetDataVersionAsync*
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguagesAsync(System.String[],System.Boolean,System.Boolean)
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguagesAsync(System.String[],System.Boolean,System.Boolean)
  id: GetLanguagesAsync(System.String[],System.Boolean,System.Boolean)
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetLanguagesAsync(string[], bool, bool)
  nameWithType: ICultureMetadataManager.GetLanguagesAsync(string[], bool, bool)
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguagesAsync(string[], bool, bool)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<LanguageBase[]> GetLanguagesAsync(string[] languageCodes = null, bool ignoreMachineCulturesUnlessNamed = false, bool excludeDeprecatedUnlessNamed = true)
    parameters:
    - id: languageCodes
      type: System.String[]
    - id: ignoreMachineCulturesUnlessNamed
      type: System.Boolean
    - id: excludeDeprecatedUnlessNamed
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageBase[]}
    content.vb: Function GetLanguagesAsync(languageCodes As String() = Nothing, ignoreMachineCulturesUnlessNamed As Boolean = False, excludeDeprecatedUnlessNamed As Boolean = True) As Task(Of LanguageBase())
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguagesAsync*
  nameWithType.vb: ICultureMetadataManager.GetLanguagesAsync(String(), Boolean, Boolean)
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguagesAsync(String(), Boolean, Boolean)
  name.vb: GetLanguagesAsync(String(), Boolean, Boolean)
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageAsync(System.String)
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageAsync(System.String)
  id: GetLanguageAsync(System.String)
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetLanguageAsync(string)
  nameWithType: ICultureMetadataManager.GetLanguageAsync(string)
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageAsync(string)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<LanguageBase> GetLanguageAsync(string languageCode)
    parameters:
    - id: languageCode
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageBase}
    content.vb: Function GetLanguageAsync(languageCode As String) As Task(Of LanguageBase)
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageAsync*
  nameWithType.vb: ICultureMetadataManager.GetLanguageAsync(String)
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageAsync(String)
  name.vb: GetLanguageAsync(String)
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageAsync(System.String,System.String)
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageAsync(System.String,System.String)
  id: GetLanguageAsync(System.String,System.String)
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetLanguageAsync(string, string)
  nameWithType: ICultureMetadataManager.GetLanguageAsync(string, string)
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageAsync(string, string)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<LanguageBase> GetLanguageAsync(string languageCodeInProduct, string productId)
    parameters:
    - id: languageCodeInProduct
      type: System.String
    - id: productId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageBase}
    content.vb: Function GetLanguageAsync(languageCodeInProduct As String, productId As String) As Task(Of LanguageBase)
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageAsync*
  nameWithType.vb: ICultureMetadataManager.GetLanguageAsync(String, String)
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageAsync(String, String)
  name.vb: GetLanguageAsync(String, String)
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllNeutralLanguagesAsync(System.Boolean,System.Boolean)
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllNeutralLanguagesAsync(System.Boolean,System.Boolean)
  id: GetAllNeutralLanguagesAsync(System.Boolean,System.Boolean)
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetAllNeutralLanguagesAsync(bool, bool)
  nameWithType: ICultureMetadataManager.GetAllNeutralLanguagesAsync(bool, bool)
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllNeutralLanguagesAsync(bool, bool)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<LanguageBase[]> GetAllNeutralLanguagesAsync(bool ignoreMachineCultures = false, bool excludeDeprecated = true)
    parameters:
    - id: ignoreMachineCultures
      type: System.Boolean
    - id: excludeDeprecated
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageBase[]}
    content.vb: Function GetAllNeutralLanguagesAsync(ignoreMachineCultures As Boolean = False, excludeDeprecated As Boolean = True) As Task(Of LanguageBase())
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllNeutralLanguagesAsync*
  nameWithType.vb: ICultureMetadataManager.GetAllNeutralLanguagesAsync(Boolean, Boolean)
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllNeutralLanguagesAsync(Boolean, Boolean)
  name.vb: GetAllNeutralLanguagesAsync(Boolean, Boolean)
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllSpecificLanguagesAsync(System.Boolean,System.Boolean)
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllSpecificLanguagesAsync(System.Boolean,System.Boolean)
  id: GetAllSpecificLanguagesAsync(System.Boolean,System.Boolean)
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetAllSpecificLanguagesAsync(bool, bool)
  nameWithType: ICultureMetadataManager.GetAllSpecificLanguagesAsync(bool, bool)
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllSpecificLanguagesAsync(bool, bool)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<LanguageBase[]> GetAllSpecificLanguagesAsync(bool ignoreMachineCultures = false, bool excludeDeprecated = true)
    parameters:
    - id: ignoreMachineCultures
      type: System.Boolean
    - id: excludeDeprecated
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageBase[]}
    content.vb: Function GetAllSpecificLanguagesAsync(ignoreMachineCultures As Boolean = False, excludeDeprecated As Boolean = True) As Task(Of LanguageBase())
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllSpecificLanguagesAsync*
  nameWithType.vb: ICultureMetadataManager.GetAllSpecificLanguagesAsync(Boolean, Boolean)
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllSpecificLanguagesAsync(Boolean, Boolean)
  name.vb: GetAllSpecificLanguagesAsync(Boolean, Boolean)
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllRegisteredProductsAsync
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllRegisteredProductsAsync
  id: GetAllRegisteredProductsAsync
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetAllRegisteredProductsAsync()
  nameWithType: ICultureMetadataManager.GetAllRegisteredProductsAsync()
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllRegisteredProductsAsync()
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<Product[]> GetAllRegisteredProductsAsync()
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageRegistry.Product[]}
    content.vb: Function GetAllRegisteredProductsAsync() As Task(Of Product())
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllRegisteredProductsAsync*
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetSupportedLanguagesAsync(System.String)
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetSupportedLanguagesAsync(System.String)
  id: GetSupportedLanguagesAsync(System.String)
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetSupportedLanguagesAsync(string)
  nameWithType: ICultureMetadataManager.GetSupportedLanguagesAsync(string)
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetSupportedLanguagesAsync(string)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<LanguageBase[]> GetSupportedLanguagesAsync(string productId)
    parameters:
    - id: productId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageBase[]}
    content.vb: Function GetSupportedLanguagesAsync(productId As String) As Task(Of LanguageBase())
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetSupportedLanguagesAsync*
  nameWithType.vb: ICultureMetadataManager.GetSupportedLanguagesAsync(String)
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetSupportedLanguagesAsync(String)
  name.vb: GetSupportedLanguagesAsync(String)
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAlternativeLanguageCodesAsync(System.String,System.String)
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAlternativeLanguageCodesAsync(System.String,System.String)
  id: GetAlternativeLanguageCodesAsync(System.String,System.String)
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetAlternativeLanguageCodesAsync(string, string)
  nameWithType: ICultureMetadataManager.GetAlternativeLanguageCodesAsync(string, string)
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAlternativeLanguageCodesAsync(string, string)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<IList<AlternativeLanguageCode>> GetAlternativeLanguageCodesAsync(string productId, string languageCode)
    parameters:
    - id: productId
      type: System.String
    - id: languageCode
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode}}
    content.vb: Function GetAlternativeLanguageCodesAsync(productId As String, languageCode As String) As Task(Of IList(Of AlternativeLanguageCode))
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAlternativeLanguageCodesAsync*
  nameWithType.vb: ICultureMetadataManager.GetAlternativeLanguageCodesAsync(String, String)
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAlternativeLanguageCodesAsync(String, String)
  name.vb: GetAlternativeLanguageCodesAsync(String, String)
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetApplicableLanguageMetadataAsync(System.String[])
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetApplicableLanguageMetadataAsync(System.String[])
  id: GetApplicableLanguageMetadataAsync(System.String[])
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetApplicableLanguageMetadataAsync(string[])
  nameWithType: ICultureMetadataManager.GetApplicableLanguageMetadataAsync(string[])
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetApplicableLanguageMetadataAsync(string[])
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<LanguageMetadata[]> GetApplicableLanguageMetadataAsync(string[] languageCodes)
    parameters:
    - id: languageCodes
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata[]}
    content.vb: Function GetApplicableLanguageMetadataAsync(languageCodes As String()) As Task(Of LanguageMetadata())
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetApplicableLanguageMetadataAsync*
  nameWithType.vb: ICultureMetadataManager.GetApplicableLanguageMetadataAsync(String())
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetApplicableLanguageMetadataAsync(String())
  name.vb: GetApplicableLanguageMetadataAsync(String())
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageMetadataAsync(System.String[])
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageMetadataAsync(System.String[])
  id: GetLanguageMetadataAsync(System.String[])
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetLanguageMetadataAsync(string[])
  nameWithType: ICultureMetadataManager.GetLanguageMetadataAsync(string[])
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageMetadataAsync(string[])
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<LanguageMetadata[]> GetLanguageMetadataAsync(string[] languageCodes = null)
    parameters:
    - id: languageCodes
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata[]}
    content.vb: Function GetLanguageMetadataAsync(languageCodes As String() = Nothing) As Task(Of LanguageMetadata())
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageMetadataAsync*
  nameWithType.vb: ICultureMetadataManager.GetLanguageMetadataAsync(String())
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageMetadataAsync(String())
  name.vb: GetLanguageMetadataAsync(String())
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfoAsync(System.String)
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfoAsync(System.String)
  id: GetStableCultureInfoAsync(System.String)
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetStableCultureInfoAsync(string)
  nameWithType: ICultureMetadataManager.GetStableCultureInfoAsync(string)
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfoAsync(string)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<StableCultureInfo> GetStableCultureInfoAsync(string languageCode)
    parameters:
    - id: languageCode
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.StableCultureInfo}
    content.vb: Function GetStableCultureInfoAsync(languageCode As String) As Task(Of StableCultureInfo)
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfoAsync*
  nameWithType.vb: ICultureMetadataManager.GetStableCultureInfoAsync(String)
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfoAsync(String)
  name.vb: GetStableCultureInfoAsync(String)
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfosAsync(System.String[])
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfosAsync(System.String[])
  id: GetStableCultureInfosAsync(System.String[])
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetStableCultureInfosAsync(string[])
  nameWithType: ICultureMetadataManager.GetStableCultureInfosAsync(string[])
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfosAsync(string[])
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<StableCultureInfo[]> GetStableCultureInfosAsync(string[] languageCodes)
    parameters:
    - id: languageCodes
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.StableCultureInfo[]}
    content.vb: Function GetStableCultureInfosAsync(languageCodes As String()) As Task(Of StableCultureInfo())
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfosAsync*
  nameWithType.vb: ICultureMetadataManager.GetStableCultureInfosAsync(String())
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfosAsync(String())
  name.vb: GetStableCultureInfosAsync(String())
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetNumberMetadataAsync(System.String)
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetNumberMetadataAsync(System.String)
  id: GetNumberMetadataAsync(System.String)
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetNumberMetadataAsync(string)
  nameWithType: ICultureMetadataManager.GetNumberMetadataAsync(string)
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetNumberMetadataAsync(string)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<NumberMetadata> GetNumberMetadataAsync(string languageCode)
    parameters:
    - id: languageCode
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.NumberMetadata.NumberMetadata}
    content.vb: Function GetNumberMetadataAsync(languageCode As String) As Task(Of NumberMetadata)
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetNumberMetadataAsync*
  nameWithType.vb: ICultureMetadataManager.GetNumberMetadataAsync(String)
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetNumberMetadataAsync(String)
  name.vb: GetNumberMetadataAsync(String)
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitDefinitionsAsync
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitDefinitionsAsync
  id: GetUnitDefinitionsAsync
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetUnitDefinitionsAsync()
  nameWithType: ICultureMetadataManager.GetUnitDefinitionsAsync()
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitDefinitionsAsync()
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<UnitDefinition[]> GetUnitDefinitionsAsync()
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.UnitDefinition.UnitDefinition[]}
    content.vb: Function GetUnitDefinitionsAsync() As Task(Of UnitDefinition())
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitDefinitionsAsync*
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromLabelAsync(System.String,System.String)
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromLabelAsync(System.String,System.String)
  id: GetUnitMetadataFromLabelAsync(System.String,System.String)
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetUnitMetadataFromLabelAsync(string, string)
  nameWithType: ICultureMetadataManager.GetUnitMetadataFromLabelAsync(string, string)
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromLabelAsync(string, string)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<UnitMetadata> GetUnitMetadataFromLabelAsync(string label, string languageCode)
    parameters:
    - id: label
      type: System.String
    - id: languageCode
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.UnitMetadata.UnitMetadata}
    content.vb: Function GetUnitMetadataFromLabelAsync(label As String, languageCode As String) As Task(Of UnitMetadata)
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromLabelAsync*
  nameWithType.vb: ICultureMetadataManager.GetUnitMetadataFromLabelAsync(String, String)
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromLabelAsync(String, String)
  name.vb: GetUnitMetadataFromLabelAsync(String, String)
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataFromLabelAsync(System.String,System.String)
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataFromLabelAsync(System.String,System.String)
  id: GetAllUnitMetadataFromLabelAsync(System.String,System.String)
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetAllUnitMetadataFromLabelAsync(string, string)
  nameWithType: ICultureMetadataManager.GetAllUnitMetadataFromLabelAsync(string, string)
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataFromLabelAsync(string, string)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<List<UnitMetadata>> GetAllUnitMetadataFromLabelAsync(string label, string languageCode)
    parameters:
    - id: label
      type: System.String
    - id: languageCode
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Sdl.Core.Globalization.UnitMetadata.UnitMetadata}}
    content.vb: Function GetAllUnitMetadataFromLabelAsync(label As String, languageCode As String) As Task(Of List(Of UnitMetadata))
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataFromLabelAsync*
  nameWithType.vb: ICultureMetadataManager.GetAllUnitMetadataFromLabelAsync(String, String)
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataFromLabelAsync(String, String)
  name.vb: GetAllUnitMetadataFromLabelAsync(String, String)
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataAsync(System.String)
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataAsync(System.String)
  id: GetAllUnitMetadataAsync(System.String)
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetAllUnitMetadataAsync(string)
  nameWithType: ICultureMetadataManager.GetAllUnitMetadataAsync(string)
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataAsync(string)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<List<UnitMetadata>> GetAllUnitMetadataAsync(string languageCode)
    parameters:
    - id: languageCode
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Sdl.Core.Globalization.UnitMetadata.UnitMetadata}}
    content.vb: Function GetAllUnitMetadataAsync(languageCode As String) As Task(Of List(Of UnitMetadata))
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataAsync*
  nameWithType.vb: ICultureMetadataManager.GetAllUnitMetadataAsync(String)
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataAsync(String)
  name.vb: GetAllUnitMetadataAsync(String)
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataAsync(System.String)
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataAsync(System.String)
  id: GetUnitMetadataAsync(System.String)
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetUnitMetadataAsync(string)
  nameWithType: ICultureMetadataManager.GetUnitMetadataAsync(string)
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataAsync(string)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<List<UnitMetadata>> GetUnitMetadataAsync(string languageCode)
    parameters:
    - id: languageCode
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Sdl.Core.Globalization.UnitMetadata.UnitMetadata}}
    content.vb: Function GetUnitMetadataAsync(languageCode As String) As Task(Of List(Of UnitMetadata))
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataAsync*
  nameWithType.vb: ICultureMetadataManager.GetUnitMetadataAsync(String)
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataAsync(String)
  name.vb: GetUnitMetadataAsync(String)
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetPreferredLabelValueSetAsync(System.String,System.String)
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetPreferredLabelValueSetAsync(System.String,System.String)
  id: GetPreferredLabelValueSetAsync(System.String,System.String)
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetPreferredLabelValueSetAsync(string, string)
  nameWithType: ICultureMetadataManager.GetPreferredLabelValueSetAsync(string, string)
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetPreferredLabelValueSetAsync(string, string)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<LabelValueSet> GetPreferredLabelValueSetAsync(string unitKey, string languageCode)
    parameters:
    - id: unitKey
      type: System.String
    - id: languageCode
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.UnitMetadata.LabelValueSet}
    content.vb: Function GetPreferredLabelValueSetAsync(unitKey As String, languageCode As String) As Task(Of LabelValueSet)
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetPreferredLabelValueSetAsync*
  nameWithType.vb: ICultureMetadataManager.GetPreferredLabelValueSetAsync(String, String)
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetPreferredLabelValueSetAsync(String, String)
  name.vb: GetPreferredLabelValueSetAsync(String, String)
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromKeyAsync(System.String,System.String)
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromKeyAsync(System.String,System.String)
  id: GetUnitMetadataFromKeyAsync(System.String,System.String)
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetUnitMetadataFromKeyAsync(string, string)
  nameWithType: ICultureMetadataManager.GetUnitMetadataFromKeyAsync(string, string)
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromKeyAsync(string, string)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<(UnitMetadata unitMetadata, string languageCodeFound)> GetUnitMetadataFromKeyAsync(string unitKey, string languageCode)
    parameters:
    - id: unitKey
      type: System.String
    - id: languageCode
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{Sdl.Core.Globalization.UnitMetadata.UnitMetadata,System.String}}
    content.vb: Function GetUnitMetadataFromKeyAsync(unitKey As String, languageCode As String) As Task(Of (unitMetadata As UnitMetadata, languageCodeFound As String))
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromKeyAsync*
  nameWithType.vb: ICultureMetadataManager.GetUnitMetadataFromKeyAsync(String, String)
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromKeyAsync(String, String)
  name.vb: GetUnitMetadataFromKeyAsync(String, String)
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetScriptDetailsAsync(System.String)
  commentId: M:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetScriptDetailsAsync(System.String)
  id: GetScriptDetailsAsync(System.String)
  parent: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  langs:
  - csharp
  - vb
  name: GetScriptDetailsAsync(string)
  nameWithType: ICultureMetadataManager.GetScriptDetailsAsync(string)
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetScriptDetailsAsync(string)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.CultureMetadataManager
  syntax:
    content: Task<IScriptDetails[]> GetScriptDetailsAsync(string scriptCode = null)
    parameters:
    - id: scriptCode
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.Async.CultureMetadataManager.IScriptDetails[]}
    content.vb: Function GetScriptDetailsAsync(scriptCode As String = Nothing) As Task(Of IScriptDetails())
  overload: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetScriptDetailsAsync*
  nameWithType.vb: ICultureMetadataManager.GetScriptDetailsAsync(String)
  fullName.vb: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetScriptDetailsAsync(String)
  name.vb: GetScriptDetailsAsync(String)
references:
- uid: Sdl.Core.Globalization.CultureMetadataManager
  commentId: N:Sdl.Core.Globalization.CultureMetadataManager
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.Globalization.CultureMetadataManager
  nameWithType: Sdl.Core.Globalization.CultureMetadataManager
  fullName: Sdl.Core.Globalization.CultureMetadataManager
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
    href: Sdl.Core.Globalization.html
  - name: .
  - uid: Sdl.Core.Globalization.CultureMetadataManager
    name: CultureMetadataManager
    isExternal: true
    href: Sdl.Core.Globalization.CultureMetadataManager.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
    href: Sdl.Core.Globalization.html
  - name: .
  - uid: Sdl.Core.Globalization.CultureMetadataManager
    name: CultureMetadataManager
    isExternal: true
    href: Sdl.Core.Globalization.CultureMetadataManager.html
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetDataVersionAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetDataVersionAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetDataVersionAsync
  name: GetDataVersionAsync
  nameWithType: ICultureMetadataManager.GetDataVersionAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetDataVersionAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguagesAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguagesAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetLanguagesAsync_System_String___System_Boolean_System_Boolean_
  name: GetLanguagesAsync
  nameWithType: ICultureMetadataManager.GetLanguagesAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguagesAsync
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageBase[]}
  commentId: T:System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageBase[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<LanguageBase[]>
  nameWithType: Task<LanguageBase[]>
  fullName: System.Threading.Tasks.Task<Sdl.Core.Globalization.LanguageBase[]>
  nameWithType.vb: Task(Of LanguageBase())
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.Core.Globalization.LanguageBase())
  name.vb: Task(Of LanguageBase())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Sdl.Core.Globalization.LanguageBase
    name: LanguageBase
    isExternal: true
    href: Sdl.Core.Globalization.LanguageBase.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.LanguageBase
    name: LanguageBase
    isExternal: true
    href: Sdl.Core.Globalization.LanguageBase.html
  - name: (
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetLanguageAsync_System_String_
  name: GetLanguageAsync
  nameWithType: ICultureMetadataManager.GetLanguageAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageBase}
  commentId: T:System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageBase}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<LanguageBase>
  nameWithType: Task<LanguageBase>
  fullName: System.Threading.Tasks.Task<Sdl.Core.Globalization.LanguageBase>
  nameWithType.vb: Task(Of LanguageBase)
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.Core.Globalization.LanguageBase)
  name.vb: Task(Of LanguageBase)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Sdl.Core.Globalization.LanguageBase
    name: LanguageBase
    isExternal: true
    href: Sdl.Core.Globalization.LanguageBase.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.LanguageBase
    name: LanguageBase
    isExternal: true
    href: Sdl.Core.Globalization.LanguageBase.html
  - name: )
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllNeutralLanguagesAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllNeutralLanguagesAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetAllNeutralLanguagesAsync_System_Boolean_System_Boolean_
  name: GetAllNeutralLanguagesAsync
  nameWithType: ICultureMetadataManager.GetAllNeutralLanguagesAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllNeutralLanguagesAsync
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllSpecificLanguagesAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllSpecificLanguagesAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetAllSpecificLanguagesAsync_System_Boolean_System_Boolean_
  name: GetAllSpecificLanguagesAsync
  nameWithType: ICultureMetadataManager.GetAllSpecificLanguagesAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllSpecificLanguagesAsync
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllRegisteredProductsAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllRegisteredProductsAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetAllRegisteredProductsAsync
  name: GetAllRegisteredProductsAsync
  nameWithType: ICultureMetadataManager.GetAllRegisteredProductsAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllRegisteredProductsAsync
- uid: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageRegistry.Product[]}
  commentId: T:System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageRegistry.Product[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Product[]>
  nameWithType: Task<Product[]>
  fullName: System.Threading.Tasks.Task<Sdl.Core.Globalization.LanguageRegistry.Product[]>
  nameWithType.vb: Task(Of Product())
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.Core.Globalization.LanguageRegistry.Product())
  name.vb: Task(Of Product())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Sdl.Core.Globalization.LanguageRegistry.Product
    name: Product
    isExternal: true
    href: Sdl.Core.Globalization.LanguageRegistry.Product.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.LanguageRegistry.Product
    name: Product
    isExternal: true
    href: Sdl.Core.Globalization.LanguageRegistry.Product.html
  - name: (
  - name: )
  - name: )
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetSupportedLanguagesAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetSupportedLanguagesAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetSupportedLanguagesAsync_System_String_
  name: GetSupportedLanguagesAsync
  nameWithType: ICultureMetadataManager.GetSupportedLanguagesAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetSupportedLanguagesAsync
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAlternativeLanguageCodesAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAlternativeLanguageCodesAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetAlternativeLanguageCodesAsync_System_String_System_String_
  name: GetAlternativeLanguageCodesAsync
  nameWithType: ICultureMetadataManager.GetAlternativeLanguageCodesAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAlternativeLanguageCodesAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IList<AlternativeLanguageCode>>
  nameWithType: Task<IList<AlternativeLanguageCode>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IList<Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode>>
  nameWithType.vb: Task(Of IList(Of AlternativeLanguageCode))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IList(Of Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode))
  name.vb: Task(Of IList(Of AlternativeLanguageCode))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode
    name: AlternativeLanguageCode
    isExternal: true
    href: Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode
    name: AlternativeLanguageCode
    isExternal: true
    href: Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode.html
  - name: )
  - name: )
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetApplicableLanguageMetadataAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetApplicableLanguageMetadataAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetApplicableLanguageMetadataAsync_System_String___
  name: GetApplicableLanguageMetadataAsync
  nameWithType: ICultureMetadataManager.GetApplicableLanguageMetadataAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetApplicableLanguageMetadataAsync
- uid: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata[]}
  commentId: T:System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<LanguageMetadata[]>
  nameWithType: Task<LanguageMetadata[]>
  fullName: System.Threading.Tasks.Task<Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata[]>
  nameWithType.vb: Task(Of LanguageMetadata())
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata())
  name.vb: Task(Of LanguageMetadata())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata
    name: LanguageMetadata
    isExternal: true
    href: Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata
    name: LanguageMetadata
    isExternal: true
    href: Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata.html
  - name: (
  - name: )
  - name: )
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageMetadataAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageMetadataAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetLanguageMetadataAsync_System_String___
  name: GetLanguageMetadataAsync
  nameWithType: ICultureMetadataManager.GetLanguageMetadataAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetLanguageMetadataAsync
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfoAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfoAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetStableCultureInfoAsync_System_String_
  name: GetStableCultureInfoAsync
  nameWithType: ICultureMetadataManager.GetStableCultureInfoAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfoAsync
- uid: System.Threading.Tasks.Task{Sdl.Core.Globalization.StableCultureInfo}
  commentId: T:System.Threading.Tasks.Task{Sdl.Core.Globalization.StableCultureInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<StableCultureInfo>
  nameWithType: Task<StableCultureInfo>
  fullName: System.Threading.Tasks.Task<Sdl.Core.Globalization.StableCultureInfo>
  nameWithType.vb: Task(Of StableCultureInfo)
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.Core.Globalization.StableCultureInfo)
  name.vb: Task(Of StableCultureInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Sdl.Core.Globalization.StableCultureInfo
    name: StableCultureInfo
    isExternal: true
    href: Sdl.Core.Globalization.StableCultureInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.StableCultureInfo
    name: StableCultureInfo
    isExternal: true
    href: Sdl.Core.Globalization.StableCultureInfo.html
  - name: )
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfosAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfosAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetStableCultureInfosAsync_System_String___
  name: GetStableCultureInfosAsync
  nameWithType: ICultureMetadataManager.GetStableCultureInfosAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetStableCultureInfosAsync
- uid: System.Threading.Tasks.Task{Sdl.Core.Globalization.StableCultureInfo[]}
  commentId: T:System.Threading.Tasks.Task{Sdl.Core.Globalization.StableCultureInfo[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<StableCultureInfo[]>
  nameWithType: Task<StableCultureInfo[]>
  fullName: System.Threading.Tasks.Task<Sdl.Core.Globalization.StableCultureInfo[]>
  nameWithType.vb: Task(Of StableCultureInfo())
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.Core.Globalization.StableCultureInfo())
  name.vb: Task(Of StableCultureInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Sdl.Core.Globalization.StableCultureInfo
    name: StableCultureInfo
    isExternal: true
    href: Sdl.Core.Globalization.StableCultureInfo.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.StableCultureInfo
    name: StableCultureInfo
    isExternal: true
    href: Sdl.Core.Globalization.StableCultureInfo.html
  - name: (
  - name: )
  - name: )
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetNumberMetadataAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetNumberMetadataAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetNumberMetadataAsync_System_String_
  name: GetNumberMetadataAsync
  nameWithType: ICultureMetadataManager.GetNumberMetadataAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetNumberMetadataAsync
- uid: System.Threading.Tasks.Task{Sdl.Core.Globalization.NumberMetadata.NumberMetadata}
  commentId: T:System.Threading.Tasks.Task{Sdl.Core.Globalization.NumberMetadata.NumberMetadata}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<NumberMetadata>
  nameWithType: Task<NumberMetadata>
  fullName: System.Threading.Tasks.Task<Sdl.Core.Globalization.NumberMetadata.NumberMetadata>
  nameWithType.vb: Task(Of NumberMetadata)
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.Core.Globalization.NumberMetadata.NumberMetadata)
  name.vb: Task(Of NumberMetadata)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Sdl.Core.Globalization.NumberMetadata.NumberMetadata
    name: NumberMetadata
    isExternal: true
    href: Sdl.Core.Globalization.NumberMetadata.NumberMetadata.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.NumberMetadata.NumberMetadata
    name: NumberMetadata
    isExternal: true
    href: Sdl.Core.Globalization.NumberMetadata.NumberMetadata.html
  - name: )
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitDefinitionsAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitDefinitionsAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetUnitDefinitionsAsync
  name: GetUnitDefinitionsAsync
  nameWithType: ICultureMetadataManager.GetUnitDefinitionsAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitDefinitionsAsync
- uid: System.Threading.Tasks.Task{Sdl.Core.Globalization.UnitDefinition.UnitDefinition[]}
  commentId: T:System.Threading.Tasks.Task{Sdl.Core.Globalization.UnitDefinition.UnitDefinition[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UnitDefinition[]>
  nameWithType: Task<UnitDefinition[]>
  fullName: System.Threading.Tasks.Task<Sdl.Core.Globalization.UnitDefinition.UnitDefinition[]>
  nameWithType.vb: Task(Of UnitDefinition())
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.Core.Globalization.UnitDefinition.UnitDefinition())
  name.vb: Task(Of UnitDefinition())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Sdl.Core.Globalization.UnitDefinition.UnitDefinition
    name: UnitDefinition
    isExternal: true
    href: Sdl.Core.Globalization.UnitDefinition.UnitDefinition.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.UnitDefinition.UnitDefinition
    name: UnitDefinition
    isExternal: true
    href: Sdl.Core.Globalization.UnitDefinition.UnitDefinition.html
  - name: (
  - name: )
  - name: )
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromLabelAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromLabelAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetUnitMetadataFromLabelAsync_System_String_System_String_
  name: GetUnitMetadataFromLabelAsync
  nameWithType: ICultureMetadataManager.GetUnitMetadataFromLabelAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromLabelAsync
- uid: System.Threading.Tasks.Task{Sdl.Core.Globalization.UnitMetadata.UnitMetadata}
  commentId: T:System.Threading.Tasks.Task{Sdl.Core.Globalization.UnitMetadata.UnitMetadata}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UnitMetadata>
  nameWithType: Task<UnitMetadata>
  fullName: System.Threading.Tasks.Task<Sdl.Core.Globalization.UnitMetadata.UnitMetadata>
  nameWithType.vb: Task(Of UnitMetadata)
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.Core.Globalization.UnitMetadata.UnitMetadata)
  name.vb: Task(Of UnitMetadata)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Sdl.Core.Globalization.UnitMetadata.UnitMetadata
    name: UnitMetadata
    isExternal: true
    href: Sdl.Core.Globalization.UnitMetadata.UnitMetadata.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.UnitMetadata.UnitMetadata
    name: UnitMetadata
    isExternal: true
    href: Sdl.Core.Globalization.UnitMetadata.UnitMetadata.html
  - name: )
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataFromLabelAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataFromLabelAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetAllUnitMetadataFromLabelAsync_System_String_System_String_
  name: GetAllUnitMetadataFromLabelAsync
  nameWithType: ICultureMetadataManager.GetAllUnitMetadataFromLabelAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataFromLabelAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Sdl.Core.Globalization.UnitMetadata.UnitMetadata}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Sdl.Core.Globalization.UnitMetadata.UnitMetadata}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<UnitMetadata>>
  nameWithType: Task<List<UnitMetadata>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Sdl.Core.Globalization.UnitMetadata.UnitMetadata>>
  nameWithType.vb: Task(Of List(Of UnitMetadata))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Sdl.Core.Globalization.UnitMetadata.UnitMetadata))
  name.vb: Task(Of List(Of UnitMetadata))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Sdl.Core.Globalization.UnitMetadata.UnitMetadata
    name: UnitMetadata
    isExternal: true
    href: Sdl.Core.Globalization.UnitMetadata.UnitMetadata.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.UnitMetadata.UnitMetadata
    name: UnitMetadata
    isExternal: true
    href: Sdl.Core.Globalization.UnitMetadata.UnitMetadata.html
  - name: )
  - name: )
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetAllUnitMetadataAsync_System_String_
  name: GetAllUnitMetadataAsync
  nameWithType: ICultureMetadataManager.GetAllUnitMetadataAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetAllUnitMetadataAsync
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetUnitMetadataAsync_System_String_
  name: GetUnitMetadataAsync
  nameWithType: ICultureMetadataManager.GetUnitMetadataAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataAsync
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetPreferredLabelValueSetAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetPreferredLabelValueSetAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetPreferredLabelValueSetAsync_System_String_System_String_
  name: GetPreferredLabelValueSetAsync
  nameWithType: ICultureMetadataManager.GetPreferredLabelValueSetAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetPreferredLabelValueSetAsync
- uid: System.Threading.Tasks.Task{Sdl.Core.Globalization.UnitMetadata.LabelValueSet}
  commentId: T:System.Threading.Tasks.Task{Sdl.Core.Globalization.UnitMetadata.LabelValueSet}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<LabelValueSet>
  nameWithType: Task<LabelValueSet>
  fullName: System.Threading.Tasks.Task<Sdl.Core.Globalization.UnitMetadata.LabelValueSet>
  nameWithType.vb: Task(Of LabelValueSet)
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.Core.Globalization.UnitMetadata.LabelValueSet)
  name.vb: Task(Of LabelValueSet)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Sdl.Core.Globalization.UnitMetadata.LabelValueSet
    name: LabelValueSet
    isExternal: true
    href: Sdl.Core.Globalization.UnitMetadata.LabelValueSet.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.UnitMetadata.LabelValueSet
    name: LabelValueSet
    isExternal: true
    href: Sdl.Core.Globalization.UnitMetadata.LabelValueSet.html
  - name: )
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromKeyAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromKeyAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetUnitMetadataFromKeyAsync_System_String_System_String_
  name: GetUnitMetadataFromKeyAsync
  nameWithType: ICultureMetadataManager.GetUnitMetadataFromKeyAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetUnitMetadataFromKeyAsync
- uid: System.Threading.Tasks.Task{System.ValueTuple{Sdl.Core.Globalization.UnitMetadata.UnitMetadata,System.String}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{Sdl.Core.Globalization.UnitMetadata.UnitMetadata,System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(UnitMetadata unitMetadata, string languageCodeFound)>
  nameWithType: Task<(UnitMetadata unitMetadata, string languageCodeFound)>
  fullName: System.Threading.Tasks.Task<(Sdl.Core.Globalization.UnitMetadata.UnitMetadata unitMetadata, string languageCodeFound)>
  nameWithType.vb: Task(Of (unitMetadata As UnitMetadata, languageCodeFound As String))
  fullName.vb: System.Threading.Tasks.Task(Of (unitMetadata As Sdl.Core.Globalization.UnitMetadata.UnitMetadata, languageCodeFound As String))
  name.vb: Task(Of (unitMetadata As UnitMetadata, languageCodeFound As String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: Sdl.Core.Globalization.UnitMetadata.UnitMetadata
    name: UnitMetadata
    isExternal: true
    href: Sdl.Core.Globalization.UnitMetadata.UnitMetadata.html
  - name: " "
  - uid: System.ValueTuple{Sdl.Core.Globalization.UnitMetadata.UnitMetadata,System.String}.unitMetadata
    name: unitMetadata
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-sdl.core.globalization.unitmetadata.unitmetadata,system.string-.unitmetadata
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{Sdl.Core.Globalization.UnitMetadata.UnitMetadata,System.String}.languageCodeFound
    name: languageCodeFound
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-sdl.core.globalization.unitmetadata.unitmetadata,system.string-.languagecodefound
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{Sdl.Core.Globalization.UnitMetadata.UnitMetadata,System.String}.unitMetadata
    name: unitMetadata
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-sdl.core.globalization.unitmetadata.unitmetadata,system.string-.unitmetadata
  - name: " "
  - name: As
  - name: " "
  - uid: Sdl.Core.Globalization.UnitMetadata.UnitMetadata
    name: UnitMetadata
    isExternal: true
    href: Sdl.Core.Globalization.UnitMetadata.UnitMetadata.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Sdl.Core.Globalization.UnitMetadata.UnitMetadata,System.String}.languageCodeFound
    name: languageCodeFound
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-sdl.core.globalization.unitmetadata.unitmetadata,system.string-.languagecodefound
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetScriptDetailsAsync*
  commentId: Overload:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetScriptDetailsAsync
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html#Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_GetScriptDetailsAsync_System_String_
  name: GetScriptDetailsAsync
  nameWithType: ICultureMetadataManager.GetScriptDetailsAsync
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.GetScriptDetailsAsync
- uid: System.Threading.Tasks.Task{Sdl.Core.Globalization.Async.CultureMetadataManager.IScriptDetails[]}
  commentId: T:System.Threading.Tasks.Task{Sdl.Core.Globalization.Async.CultureMetadataManager.IScriptDetails[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IScriptDetails[]>
  nameWithType: Task<IScriptDetails[]>
  fullName: System.Threading.Tasks.Task<Sdl.Core.Globalization.Async.CultureMetadataManager.IScriptDetails[]>
  nameWithType.vb: Task(Of IScriptDetails())
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.Core.Globalization.Async.CultureMetadataManager.IScriptDetails())
  name.vb: Task(Of IScriptDetails())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Sdl.Core.Globalization.Async.CultureMetadataManager.IScriptDetails
    name: IScriptDetails
    isExternal: true
    href: Sdl.Core.Globalization.Async.CultureMetadataManager.IScriptDetails.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.Async.CultureMetadataManager.IScriptDetails
    name: IScriptDetails
    isExternal: true
    href: Sdl.Core.Globalization.Async.CultureMetadataManager.IScriptDetails.html
  - name: (
  - name: )
  - name: )
