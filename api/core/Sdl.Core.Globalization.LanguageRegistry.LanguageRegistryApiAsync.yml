### YamlMime:ManagedReference
items:
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  commentId: T:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  id: LanguageRegistryApiAsync
  parent: Sdl.Core.Globalization.LanguageRegistry
  children:
  - Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.#ctor(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  - Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.CultureMetadataManager
  - Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllLanguagesAsync
  - Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllNeutralLanguagesAsync(System.Boolean,System.Boolean)
  - Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllRegisteredProductsAsync
  - Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllSpecificLanguagesAsync(System.Boolean,System.Boolean)
  - Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAlternativeLanguageCodesAsync(System.String,System.String)
  - Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetApplicableLanguageMetadataAsync(System.String[])
  - Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageAsync(System.String,System.Boolean)
  - Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageAsync(System.String,System.String)
  - Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageMetadataAsync(System.String[])
  - Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguagesAsync(System.String[])
  - Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetProductSpecificCodeWithFallbackAsync(System.String,System.String,System.String)
  - Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetSupportedLanguagesAsync(System.String)
  - Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.SerializeObject(Sdl.Core.Globalization.LanguageDataContainer)
  - Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.SetCompatibilityInstance(Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync)
  langs:
  - csharp
  - vb
  name: LanguageRegistryApiAsync
  nameWithType: LanguageRegistryApiAsync
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  type: Class
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.LanguageRegistry
  syntax:
    content: public class LanguageRegistryApiAsync
    content.vb: Public Class LanguageRegistryApiAsync
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApi
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.SetCompatibilityInstance(Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync)
  commentId: M:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.SetCompatibilityInstance(Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync)
  id: SetCompatibilityInstance(Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync)
  parent: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  langs:
  - csharp
  - vb
  name: SetCompatibilityInstance(LanguageRegistryApiAsync)
  nameWithType: LanguageRegistryApiAsync.SetCompatibilityInstance(LanguageRegistryApiAsync)
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.SetCompatibilityInstance(Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.LanguageRegistry
  syntax:
    content: protected static void SetCompatibilityInstance(LanguageRegistryApiAsync instance)
    parameters:
    - id: instance
      type: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
    content.vb: Protected Shared Sub SetCompatibilityInstance(instance As LanguageRegistryApiAsync)
  overload: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.SetCompatibilityInstance*
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.#ctor(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  commentId: M:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.#ctor(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  id: '#ctor(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)'
  parent: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  langs:
  - csharp
  - vb
  name: LanguageRegistryApiAsync(ICultureMetadataManager)
  nameWithType: LanguageRegistryApiAsync.LanguageRegistryApiAsync(ICultureMetadataManager)
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.LanguageRegistryApiAsync(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  type: Constructor
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.LanguageRegistry
  syntax:
    content: public LanguageRegistryApiAsync(ICultureMetadataManager cultureMetadataManager)
    parameters:
    - id: cultureMetadataManager
      type: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
    content.vb: Public Sub New(cultureMetadataManager As ICultureMetadataManager)
  overload: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.#ctor*
  nameWithType.vb: LanguageRegistryApiAsync.New(ICultureMetadataManager)
  fullName.vb: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.New(Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager)
  name.vb: New(ICultureMetadataManager)
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllLanguagesAsync
  commentId: M:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllLanguagesAsync
  id: GetAllLanguagesAsync
  parent: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  langs:
  - csharp
  - vb
  name: GetAllLanguagesAsync()
  nameWithType: LanguageRegistryApiAsync.GetAllLanguagesAsync()
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllLanguagesAsync()
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.LanguageRegistry
  syntax:
    content: public Task<IList<LanguageBase>> GetAllLanguagesAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageBase}}
    content.vb: Public Function GetAllLanguagesAsync() As Task(Of IList(Of LanguageBase))
  overload: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllLanguagesAsync*
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllNeutralLanguagesAsync(System.Boolean,System.Boolean)
  commentId: M:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllNeutralLanguagesAsync(System.Boolean,System.Boolean)
  id: GetAllNeutralLanguagesAsync(System.Boolean,System.Boolean)
  parent: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  langs:
  - csharp
  - vb
  name: GetAllNeutralLanguagesAsync(bool, bool)
  nameWithType: LanguageRegistryApiAsync.GetAllNeutralLanguagesAsync(bool, bool)
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllNeutralLanguagesAsync(bool, bool)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.LanguageRegistry
  syntax:
    content: public Task<IList<LanguageBase>> GetAllNeutralLanguagesAsync(bool ignoreMachineCultures = false, bool excludeDeprecated = true)
    parameters:
    - id: ignoreMachineCultures
      type: System.Boolean
    - id: excludeDeprecated
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageBase}}
    content.vb: Public Function GetAllNeutralLanguagesAsync(ignoreMachineCultures As Boolean = False, excludeDeprecated As Boolean = True) As Task(Of IList(Of LanguageBase))
  overload: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllNeutralLanguagesAsync*
  nameWithType.vb: LanguageRegistryApiAsync.GetAllNeutralLanguagesAsync(Boolean, Boolean)
  fullName.vb: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllNeutralLanguagesAsync(Boolean, Boolean)
  name.vb: GetAllNeutralLanguagesAsync(Boolean, Boolean)
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllSpecificLanguagesAsync(System.Boolean,System.Boolean)
  commentId: M:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllSpecificLanguagesAsync(System.Boolean,System.Boolean)
  id: GetAllSpecificLanguagesAsync(System.Boolean,System.Boolean)
  parent: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  langs:
  - csharp
  - vb
  name: GetAllSpecificLanguagesAsync(bool, bool)
  nameWithType: LanguageRegistryApiAsync.GetAllSpecificLanguagesAsync(bool, bool)
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllSpecificLanguagesAsync(bool, bool)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.LanguageRegistry
  syntax:
    content: public Task<IList<LanguageBase>> GetAllSpecificLanguagesAsync(bool ignoreMachineCultures = true, bool excludeDeprecated = true)
    parameters:
    - id: ignoreMachineCultures
      type: System.Boolean
    - id: excludeDeprecated
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageBase}}
    content.vb: Public Function GetAllSpecificLanguagesAsync(ignoreMachineCultures As Boolean = True, excludeDeprecated As Boolean = True) As Task(Of IList(Of LanguageBase))
  overload: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllSpecificLanguagesAsync*
  nameWithType.vb: LanguageRegistryApiAsync.GetAllSpecificLanguagesAsync(Boolean, Boolean)
  fullName.vb: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllSpecificLanguagesAsync(Boolean, Boolean)
  name.vb: GetAllSpecificLanguagesAsync(Boolean, Boolean)
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguagesAsync(System.String[])
  commentId: M:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguagesAsync(System.String[])
  id: GetLanguagesAsync(System.String[])
  parent: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  langs:
  - csharp
  - vb
  name: GetLanguagesAsync(string[])
  nameWithType: LanguageRegistryApiAsync.GetLanguagesAsync(string[])
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguagesAsync(string[])
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.LanguageRegistry
  syntax:
    content: public Task<IList<LanguageBase>> GetLanguagesAsync(string[] languageCodes)
    parameters:
    - id: languageCodes
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageBase}}
    content.vb: Public Function GetLanguagesAsync(languageCodes As String()) As Task(Of IList(Of LanguageBase))
  overload: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguagesAsync*
  nameWithType.vb: LanguageRegistryApiAsync.GetLanguagesAsync(String())
  fullName.vb: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguagesAsync(String())
  name.vb: GetLanguagesAsync(String())
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageAsync(System.String,System.String)
  commentId: M:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageAsync(System.String,System.String)
  id: GetLanguageAsync(System.String,System.String)
  parent: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  langs:
  - csharp
  - vb
  name: GetLanguageAsync(string, string)
  nameWithType: LanguageRegistryApiAsync.GetLanguageAsync(string, string)
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageAsync(string, string)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.LanguageRegistry
  syntax:
    content: public Task<LanguageBase> GetLanguageAsync(string alternativeLanguageCode, string productId)
    parameters:
    - id: alternativeLanguageCode
      type: System.String
    - id: productId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageBase}
    content.vb: Public Function GetLanguageAsync(alternativeLanguageCode As String, productId As String) As Task(Of LanguageBase)
  overload: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageAsync*
  nameWithType.vb: LanguageRegistryApiAsync.GetLanguageAsync(String, String)
  fullName.vb: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageAsync(String, String)
  name.vb: GetLanguageAsync(String, String)
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageAsync(System.String,System.Boolean)
  commentId: M:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageAsync(System.String,System.Boolean)
  id: GetLanguageAsync(System.String,System.Boolean)
  parent: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  langs:
  - csharp
  - vb
  name: GetLanguageAsync(string, bool)
  nameWithType: LanguageRegistryApiAsync.GetLanguageAsync(string, bool)
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageAsync(string, bool)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.LanguageRegistry
  syntax:
    content: public Task<LanguageBase> GetLanguageAsync(string languageCode, bool exceptionIfUnknown = false)
    parameters:
    - id: languageCode
      type: System.String
    - id: exceptionIfUnknown
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageBase}
    content.vb: Public Function GetLanguageAsync(languageCode As String, exceptionIfUnknown As Boolean = False) As Task(Of LanguageBase)
  overload: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageAsync*
  nameWithType.vb: LanguageRegistryApiAsync.GetLanguageAsync(String, Boolean)
  fullName.vb: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageAsync(String, Boolean)
  name.vb: GetLanguageAsync(String, Boolean)
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageMetadataAsync(System.String[])
  commentId: M:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageMetadataAsync(System.String[])
  id: GetLanguageMetadataAsync(System.String[])
  parent: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  langs:
  - csharp
  - vb
  name: GetLanguageMetadataAsync(string[])
  nameWithType: LanguageRegistryApiAsync.GetLanguageMetadataAsync(string[])
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageMetadataAsync(string[])
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.LanguageRegistry
  syntax:
    content: public Task<LanguageMetadata[]> GetLanguageMetadataAsync(string[] languageCodes)
    parameters:
    - id: languageCodes
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata[]}
    content.vb: Public Function GetLanguageMetadataAsync(languageCodes As String()) As Task(Of LanguageMetadata())
  overload: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageMetadataAsync*
  nameWithType.vb: LanguageRegistryApiAsync.GetLanguageMetadataAsync(String())
  fullName.vb: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageMetadataAsync(String())
  name.vb: GetLanguageMetadataAsync(String())
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetApplicableLanguageMetadataAsync(System.String[])
  commentId: M:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetApplicableLanguageMetadataAsync(System.String[])
  id: GetApplicableLanguageMetadataAsync(System.String[])
  parent: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  langs:
  - csharp
  - vb
  name: GetApplicableLanguageMetadataAsync(string[])
  nameWithType: LanguageRegistryApiAsync.GetApplicableLanguageMetadataAsync(string[])
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetApplicableLanguageMetadataAsync(string[])
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.LanguageRegistry
  syntax:
    content: public Task<LanguageMetadata[]> GetApplicableLanguageMetadataAsync(string[] languageCodes)
    parameters:
    - id: languageCodes
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata[]}
    content.vb: Public Function GetApplicableLanguageMetadataAsync(languageCodes As String()) As Task(Of LanguageMetadata())
  overload: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetApplicableLanguageMetadataAsync*
  nameWithType.vb: LanguageRegistryApiAsync.GetApplicableLanguageMetadataAsync(String())
  fullName.vb: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetApplicableLanguageMetadataAsync(String())
  name.vb: GetApplicableLanguageMetadataAsync(String())
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetSupportedLanguagesAsync(System.String)
  commentId: M:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetSupportedLanguagesAsync(System.String)
  id: GetSupportedLanguagesAsync(System.String)
  parent: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  langs:
  - csharp
  - vb
  name: GetSupportedLanguagesAsync(string)
  nameWithType: LanguageRegistryApiAsync.GetSupportedLanguagesAsync(string)
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetSupportedLanguagesAsync(string)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.LanguageRegistry
  syntax:
    content: public Task<IList<LanguageBase>> GetSupportedLanguagesAsync(string productId)
    parameters:
    - id: productId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageBase}}
    content.vb: Public Function GetSupportedLanguagesAsync(productId As String) As Task(Of IList(Of LanguageBase))
  overload: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetSupportedLanguagesAsync*
  nameWithType.vb: LanguageRegistryApiAsync.GetSupportedLanguagesAsync(String)
  fullName.vb: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetSupportedLanguagesAsync(String)
  name.vb: GetSupportedLanguagesAsync(String)
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllRegisteredProductsAsync
  commentId: M:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllRegisteredProductsAsync
  id: GetAllRegisteredProductsAsync
  parent: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  langs:
  - csharp
  - vb
  name: GetAllRegisteredProductsAsync()
  nameWithType: LanguageRegistryApiAsync.GetAllRegisteredProductsAsync()
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllRegisteredProductsAsync()
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.LanguageRegistry
  syntax:
    content: public Task<IList<Product>> GetAllRegisteredProductsAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageRegistry.Product}}
    content.vb: Public Function GetAllRegisteredProductsAsync() As Task(Of IList(Of Product))
  overload: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllRegisteredProductsAsync*
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAlternativeLanguageCodesAsync(System.String,System.String)
  commentId: M:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAlternativeLanguageCodesAsync(System.String,System.String)
  id: GetAlternativeLanguageCodesAsync(System.String,System.String)
  parent: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  langs:
  - csharp
  - vb
  name: GetAlternativeLanguageCodesAsync(string, string)
  nameWithType: LanguageRegistryApiAsync.GetAlternativeLanguageCodesAsync(string, string)
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAlternativeLanguageCodesAsync(string, string)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.LanguageRegistry
  syntax:
    content: public Task<IList<AlternativeLanguageCode>> GetAlternativeLanguageCodesAsync(string productId, string languageCode)
    parameters:
    - id: productId
      type: System.String
    - id: languageCode
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode}}
    content.vb: Public Function GetAlternativeLanguageCodesAsync(productId As String, languageCode As String) As Task(Of IList(Of AlternativeLanguageCode))
  overload: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAlternativeLanguageCodesAsync*
  nameWithType.vb: LanguageRegistryApiAsync.GetAlternativeLanguageCodesAsync(String, String)
  fullName.vb: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAlternativeLanguageCodesAsync(String, String)
  name.vb: GetAlternativeLanguageCodesAsync(String, String)
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetProductSpecificCodeWithFallbackAsync(System.String,System.String,System.String)
  commentId: M:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetProductSpecificCodeWithFallbackAsync(System.String,System.String,System.String)
  id: GetProductSpecificCodeWithFallbackAsync(System.String,System.String,System.String)
  parent: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  langs:
  - csharp
  - vb
  name: GetProductSpecificCodeWithFallbackAsync(string, string, string)
  nameWithType: LanguageRegistryApiAsync.GetProductSpecificCodeWithFallbackAsync(string, string, string)
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetProductSpecificCodeWithFallbackAsync(string, string, string)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.LanguageRegistry
  syntax:
    content: public Task<(IList<AlternativeLanguageCode> codes, MappingType mappingType)> GetProductSpecificCodeWithFallbackAsync(string sourceProductId, string sourceLanguageCode, string targetProductId)
    parameters:
    - id: sourceProductId
      type: System.String
    - id: sourceLanguageCode
      type: System.String
    - id: targetProductId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode},Sdl.Core.Globalization.LanguageRegistry.MappingType}}
    content.vb: Public Function GetProductSpecificCodeWithFallbackAsync(sourceProductId As String, sourceLanguageCode As String, targetProductId As String) As Task(Of (codes As IList(Of AlternativeLanguageCode), mappingType As MappingType))
  overload: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetProductSpecificCodeWithFallbackAsync*
  nameWithType.vb: LanguageRegistryApiAsync.GetProductSpecificCodeWithFallbackAsync(String, String, String)
  fullName.vb: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetProductSpecificCodeWithFallbackAsync(String, String, String)
  name.vb: GetProductSpecificCodeWithFallbackAsync(String, String, String)
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.SerializeObject(Sdl.Core.Globalization.LanguageDataContainer)
  commentId: M:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.SerializeObject(Sdl.Core.Globalization.LanguageDataContainer)
  id: SerializeObject(Sdl.Core.Globalization.LanguageDataContainer)
  parent: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  langs:
  - csharp
  - vb
  name: SerializeObject(LanguageDataContainer)
  nameWithType: LanguageRegistryApiAsync.SerializeObject(LanguageDataContainer)
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.SerializeObject(Sdl.Core.Globalization.LanguageDataContainer)
  type: Method
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.LanguageRegistry
  syntax:
    content: public static string SerializeObject(LanguageDataContainer container)
    parameters:
    - id: container
      type: Sdl.Core.Globalization.LanguageDataContainer
    return:
      type: System.String
    content.vb: Public Shared Function SerializeObject(container As LanguageDataContainer) As String
  overload: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.SerializeObject*
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.CultureMetadataManager
  commentId: P:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.CultureMetadataManager
  id: CultureMetadataManager
  parent: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  langs:
  - csharp
  - vb
  name: CultureMetadataManager
  nameWithType: LanguageRegistryApiAsync.CultureMetadataManager
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.CultureMetadataManager
  type: Property
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization.LanguageRegistry
  syntax:
    content: public ICultureMetadataManager CultureMetadataManager { get; }
    parameters: []
    return:
      type: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
    content.vb: Public ReadOnly Property CultureMetadataManager As ICultureMetadataManager
  overload: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.CultureMetadataManager*
references:
- uid: Sdl.Core.Globalization.LanguageRegistry
  commentId: N:Sdl.Core.Globalization.LanguageRegistry
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.Globalization.LanguageRegistry
  nameWithType: Sdl.Core.Globalization.LanguageRegistry
  fullName: Sdl.Core.Globalization.LanguageRegistry
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
    href: Sdl.Core.Globalization.html
  - name: .
  - uid: Sdl.Core.Globalization.LanguageRegistry
    name: LanguageRegistry
    isExternal: true
    href: Sdl.Core.Globalization.LanguageRegistry.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
    href: Sdl.Core.Globalization.html
  - name: .
  - uid: Sdl.Core.Globalization.LanguageRegistry
    name: LanguageRegistry
    isExternal: true
    href: Sdl.Core.Globalization.LanguageRegistry.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.SetCompatibilityInstance*
  commentId: Overload:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.SetCompatibilityInstance
  isExternal: true
  href: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.html#Sdl_Core_Globalization_LanguageRegistry_LanguageRegistryApiAsync_SetCompatibilityInstance_Sdl_Core_Globalization_LanguageRegistry_LanguageRegistryApiAsync_
  name: SetCompatibilityInstance
  nameWithType: LanguageRegistryApiAsync.SetCompatibilityInstance
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.SetCompatibilityInstance
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  commentId: T:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
  parent: Sdl.Core.Globalization.LanguageRegistry
  isExternal: true
  href: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.html
  name: LanguageRegistryApiAsync
  nameWithType: LanguageRegistryApiAsync
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.#ctor*
  commentId: Overload:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.#ctor
  isExternal: true
  href: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.html#Sdl_Core_Globalization_LanguageRegistry_LanguageRegistryApiAsync__ctor_Sdl_Core_Globalization_CultureMetadataManager_ICultureMetadataManager_
  name: LanguageRegistryApiAsync
  nameWithType: LanguageRegistryApiAsync.LanguageRegistryApiAsync
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.LanguageRegistryApiAsync
  nameWithType.vb: LanguageRegistryApiAsync.New
  fullName.vb: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.New
  name.vb: New
- uid: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  commentId: T:Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
  parent: Sdl.Core.Globalization.CultureMetadataManager
  isExternal: true
  href: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager.html
  name: ICultureMetadataManager
  nameWithType: ICultureMetadataManager
  fullName: Sdl.Core.Globalization.CultureMetadataManager.ICultureMetadataManager
- uid: Sdl.Core.Globalization.CultureMetadataManager
  commentId: N:Sdl.Core.Globalization.CultureMetadataManager
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.Globalization.CultureMetadataManager
  nameWithType: Sdl.Core.Globalization.CultureMetadataManager
  fullName: Sdl.Core.Globalization.CultureMetadataManager
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
    href: Sdl.Core.Globalization.html
  - name: .
  - uid: Sdl.Core.Globalization.CultureMetadataManager
    name: CultureMetadataManager
    isExternal: true
    href: Sdl.Core.Globalization.CultureMetadataManager.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
    href: Sdl.Core.Globalization.html
  - name: .
  - uid: Sdl.Core.Globalization.CultureMetadataManager
    name: CultureMetadataManager
    isExternal: true
    href: Sdl.Core.Globalization.CultureMetadataManager.html
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllLanguagesAsync*
  commentId: Overload:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllLanguagesAsync
  isExternal: true
  href: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.html#Sdl_Core_Globalization_LanguageRegistry_LanguageRegistryApiAsync_GetAllLanguagesAsync
  name: GetAllLanguagesAsync
  nameWithType: LanguageRegistryApiAsync.GetAllLanguagesAsync
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllLanguagesAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageBase}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageBase}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IList<LanguageBase>>
  nameWithType: Task<IList<LanguageBase>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IList<Sdl.Core.Globalization.LanguageBase>>
  nameWithType.vb: Task(Of IList(Of LanguageBase))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IList(Of Sdl.Core.Globalization.LanguageBase))
  name.vb: Task(Of IList(Of LanguageBase))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Sdl.Core.Globalization.LanguageBase
    name: LanguageBase
    isExternal: true
    href: Sdl.Core.Globalization.LanguageBase.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.LanguageBase
    name: LanguageBase
    isExternal: true
    href: Sdl.Core.Globalization.LanguageBase.html
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllNeutralLanguagesAsync*
  commentId: Overload:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllNeutralLanguagesAsync
  isExternal: true
  href: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.html#Sdl_Core_Globalization_LanguageRegistry_LanguageRegistryApiAsync_GetAllNeutralLanguagesAsync_System_Boolean_System_Boolean_
  name: GetAllNeutralLanguagesAsync
  nameWithType: LanguageRegistryApiAsync.GetAllNeutralLanguagesAsync
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllNeutralLanguagesAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllSpecificLanguagesAsync*
  commentId: Overload:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllSpecificLanguagesAsync
  isExternal: true
  href: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.html#Sdl_Core_Globalization_LanguageRegistry_LanguageRegistryApiAsync_GetAllSpecificLanguagesAsync_System_Boolean_System_Boolean_
  name: GetAllSpecificLanguagesAsync
  nameWithType: LanguageRegistryApiAsync.GetAllSpecificLanguagesAsync
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllSpecificLanguagesAsync
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguagesAsync*
  commentId: Overload:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguagesAsync
  isExternal: true
  href: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.html#Sdl_Core_Globalization_LanguageRegistry_LanguageRegistryApiAsync_GetLanguagesAsync_System_String___
  name: GetLanguagesAsync
  nameWithType: LanguageRegistryApiAsync.GetLanguagesAsync
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguagesAsync
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageAsync*
  commentId: Overload:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageAsync
  isExternal: true
  href: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.html#Sdl_Core_Globalization_LanguageRegistry_LanguageRegistryApiAsync_GetLanguageAsync_System_String_System_String_
  name: GetLanguageAsync
  nameWithType: LanguageRegistryApiAsync.GetLanguageAsync
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageBase}
  commentId: T:System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageBase}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<LanguageBase>
  nameWithType: Task<LanguageBase>
  fullName: System.Threading.Tasks.Task<Sdl.Core.Globalization.LanguageBase>
  nameWithType.vb: Task(Of LanguageBase)
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.Core.Globalization.LanguageBase)
  name.vb: Task(Of LanguageBase)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Sdl.Core.Globalization.LanguageBase
    name: LanguageBase
    isExternal: true
    href: Sdl.Core.Globalization.LanguageBase.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.LanguageBase
    name: LanguageBase
    isExternal: true
    href: Sdl.Core.Globalization.LanguageBase.html
  - name: )
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageMetadataAsync*
  commentId: Overload:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageMetadataAsync
  isExternal: true
  href: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.html#Sdl_Core_Globalization_LanguageRegistry_LanguageRegistryApiAsync_GetLanguageMetadataAsync_System_String___
  name: GetLanguageMetadataAsync
  nameWithType: LanguageRegistryApiAsync.GetLanguageMetadataAsync
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetLanguageMetadataAsync
- uid: System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata[]}
  commentId: T:System.Threading.Tasks.Task{Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<LanguageMetadata[]>
  nameWithType: Task<LanguageMetadata[]>
  fullName: System.Threading.Tasks.Task<Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata[]>
  nameWithType.vb: Task(Of LanguageMetadata())
  fullName.vb: System.Threading.Tasks.Task(Of Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata())
  name.vb: Task(Of LanguageMetadata())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata
    name: LanguageMetadata
    isExternal: true
    href: Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata
    name: LanguageMetadata
    isExternal: true
    href: Sdl.Core.Globalization.LanguageMetadata.LanguageMetadata.html
  - name: (
  - name: )
  - name: )
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetApplicableLanguageMetadataAsync*
  commentId: Overload:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetApplicableLanguageMetadataAsync
  isExternal: true
  href: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.html#Sdl_Core_Globalization_LanguageRegistry_LanguageRegistryApiAsync_GetApplicableLanguageMetadataAsync_System_String___
  name: GetApplicableLanguageMetadataAsync
  nameWithType: LanguageRegistryApiAsync.GetApplicableLanguageMetadataAsync
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetApplicableLanguageMetadataAsync
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetSupportedLanguagesAsync*
  commentId: Overload:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetSupportedLanguagesAsync
  isExternal: true
  href: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.html#Sdl_Core_Globalization_LanguageRegistry_LanguageRegistryApiAsync_GetSupportedLanguagesAsync_System_String_
  name: GetSupportedLanguagesAsync
  nameWithType: LanguageRegistryApiAsync.GetSupportedLanguagesAsync
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetSupportedLanguagesAsync
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllRegisteredProductsAsync*
  commentId: Overload:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllRegisteredProductsAsync
  isExternal: true
  href: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.html#Sdl_Core_Globalization_LanguageRegistry_LanguageRegistryApiAsync_GetAllRegisteredProductsAsync
  name: GetAllRegisteredProductsAsync
  nameWithType: LanguageRegistryApiAsync.GetAllRegisteredProductsAsync
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAllRegisteredProductsAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageRegistry.Product}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageRegistry.Product}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IList<Product>>
  nameWithType: Task<IList<Product>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IList<Sdl.Core.Globalization.LanguageRegistry.Product>>
  nameWithType.vb: Task(Of IList(Of Product))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IList(Of Sdl.Core.Globalization.LanguageRegistry.Product))
  name.vb: Task(Of IList(Of Product))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Sdl.Core.Globalization.LanguageRegistry.Product
    name: Product
    isExternal: true
    href: Sdl.Core.Globalization.LanguageRegistry.Product.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.LanguageRegistry.Product
    name: Product
    isExternal: true
    href: Sdl.Core.Globalization.LanguageRegistry.Product.html
  - name: )
  - name: )
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAlternativeLanguageCodesAsync*
  commentId: Overload:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAlternativeLanguageCodesAsync
  isExternal: true
  href: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.html#Sdl_Core_Globalization_LanguageRegistry_LanguageRegistryApiAsync_GetAlternativeLanguageCodesAsync_System_String_System_String_
  name: GetAlternativeLanguageCodesAsync
  nameWithType: LanguageRegistryApiAsync.GetAlternativeLanguageCodesAsync
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetAlternativeLanguageCodesAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IList<AlternativeLanguageCode>>
  nameWithType: Task<IList<AlternativeLanguageCode>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IList<Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode>>
  nameWithType.vb: Task(Of IList(Of AlternativeLanguageCode))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IList(Of Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode))
  name.vb: Task(Of IList(Of AlternativeLanguageCode))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode
    name: AlternativeLanguageCode
    isExternal: true
    href: Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode
    name: AlternativeLanguageCode
    isExternal: true
    href: Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode.html
  - name: )
  - name: )
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetProductSpecificCodeWithFallbackAsync*
  commentId: Overload:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetProductSpecificCodeWithFallbackAsync
  isExternal: true
  href: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.html#Sdl_Core_Globalization_LanguageRegistry_LanguageRegistryApiAsync_GetProductSpecificCodeWithFallbackAsync_System_String_System_String_System_String_
  name: GetProductSpecificCodeWithFallbackAsync
  nameWithType: LanguageRegistryApiAsync.GetProductSpecificCodeWithFallbackAsync
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.GetProductSpecificCodeWithFallbackAsync
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode},Sdl.Core.Globalization.LanguageRegistry.MappingType}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode},Sdl.Core.Globalization.LanguageRegistry.MappingType}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(IList<AlternativeLanguageCode> codes, MappingType mappingType)>
  nameWithType: Task<(IList<AlternativeLanguageCode> codes, MappingType mappingType)>
  fullName: System.Threading.Tasks.Task<(System.Collections.Generic.IList<Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode> codes, Sdl.Core.Globalization.LanguageRegistry.MappingType mappingType)>
  nameWithType.vb: Task(Of (codes As IList(Of AlternativeLanguageCode), mappingType As MappingType))
  fullName.vb: System.Threading.Tasks.Task(Of (codes As System.Collections.Generic.IList(Of Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode), mappingType As Sdl.Core.Globalization.LanguageRegistry.MappingType))
  name.vb: Task(Of (codes As IList(Of AlternativeLanguageCode), mappingType As MappingType))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode
    name: AlternativeLanguageCode
    isExternal: true
    href: Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode.html
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode},Sdl.Core.Globalization.LanguageRegistry.MappingType}.codes
    name: codes
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist-sdl.core.globalization.languageregistry.alternativelanguagecode-,sdl.core.globalization.languageregistry.mappingtype-.codes
  - name: ','
  - name: " "
  - uid: Sdl.Core.Globalization.LanguageRegistry.MappingType
    name: MappingType
    isExternal: true
    href: Sdl.Core.Globalization.LanguageRegistry.MappingType.html
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode},Sdl.Core.Globalization.LanguageRegistry.MappingType}.mappingType
    name: mappingType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist-sdl.core.globalization.languageregistry.alternativelanguagecode-,sdl.core.globalization.languageregistry.mappingtype-.mappingtype
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode},Sdl.Core.Globalization.LanguageRegistry.MappingType}.codes
    name: codes
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist-sdl.core.globalization.languageregistry.alternativelanguagecode-,sdl.core.globalization.languageregistry.mappingtype-.codes
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode
    name: AlternativeLanguageCode
    isExternal: true
    href: Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{Sdl.Core.Globalization.LanguageRegistry.AlternativeLanguageCode},Sdl.Core.Globalization.LanguageRegistry.MappingType}.mappingType
    name: mappingType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist-sdl.core.globalization.languageregistry.alternativelanguagecode-,sdl.core.globalization.languageregistry.mappingtype-.mappingtype
  - name: " "
  - name: As
  - name: " "
  - uid: Sdl.Core.Globalization.LanguageRegistry.MappingType
    name: MappingType
    isExternal: true
    href: Sdl.Core.Globalization.LanguageRegistry.MappingType.html
  - name: )
  - name: )
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.SerializeObject*
  commentId: Overload:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.SerializeObject
  isExternal: true
  href: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.html#Sdl_Core_Globalization_LanguageRegistry_LanguageRegistryApiAsync_SerializeObject_Sdl_Core_Globalization_LanguageDataContainer_
  name: SerializeObject
  nameWithType: LanguageRegistryApiAsync.SerializeObject
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.SerializeObject
- uid: Sdl.Core.Globalization.LanguageDataContainer
  commentId: T:Sdl.Core.Globalization.LanguageDataContainer
  parent: Sdl.Core.Globalization
  isExternal: true
  href: Sdl.Core.Globalization.LanguageDataContainer.html
  name: LanguageDataContainer
  nameWithType: LanguageDataContainer
  fullName: Sdl.Core.Globalization.LanguageDataContainer
- uid: Sdl.Core.Globalization
  commentId: N:Sdl.Core.Globalization
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.Globalization
  nameWithType: Sdl.Core.Globalization
  fullName: Sdl.Core.Globalization
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
    href: Sdl.Core.Globalization.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.Globalization
    name: Globalization
    isExternal: true
    href: Sdl.Core.Globalization.html
- uid: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.CultureMetadataManager*
  commentId: Overload:Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.CultureMetadataManager
  isExternal: true
  href: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.html#Sdl_Core_Globalization_LanguageRegistry_LanguageRegistryApiAsync_CultureMetadataManager
  name: CultureMetadataManager
  nameWithType: LanguageRegistryApiAsync.CultureMetadataManager
  fullName: Sdl.Core.Globalization.LanguageRegistry.LanguageRegistryApiAsync.CultureMetadataManager
