### YamlMime:ManagedReference
items:
- uid: Sdl.Core.Globalization.CultureCode
  commentId: T:Sdl.Core.Globalization.CultureCode
  id: CultureCode
  parent: Sdl.Core.Globalization
  children:
  - Sdl.Core.Globalization.CultureCode.#ctor(Sdl.Core.Globalization.LanguageBase)
  - Sdl.Core.Globalization.CultureCode.#ctor(System.Globalization.CultureInfo)
  - Sdl.Core.Globalization.CultureCode.#ctor(System.String)
  - Sdl.Core.Globalization.CultureCode.Equals(System.Object)
  - Sdl.Core.Globalization.CultureCode.GetHashCode
  - Sdl.Core.Globalization.CultureCode.InvariantCulture
  - Sdl.Core.Globalization.CultureCode.Name
  - Sdl.Core.Globalization.CultureCode.op_Implicit(Sdl.Core.Globalization.CultureCode)~System.Globalization.CultureInfo
  - Sdl.Core.Globalization.CultureCode.op_Implicit(Sdl.Core.Globalization.CultureCode)~System.String
  - Sdl.Core.Globalization.CultureCode.op_Implicit(Sdl.Core.Globalization.LanguageBase)~Sdl.Core.Globalization.CultureCode
  - Sdl.Core.Globalization.CultureCode.op_Implicit(System.Globalization.CultureInfo)~Sdl.Core.Globalization.CultureCode
  - Sdl.Core.Globalization.CultureCode.op_Implicit(System.String)~Sdl.Core.Globalization.CultureCode
  - Sdl.Core.Globalization.CultureCode.RegionNeutralName
  - Sdl.Core.Globalization.CultureCode.ToString
  langs:
  - csharp
  - vb
  name: CultureCode
  nameWithType: CultureCode
  fullName: Sdl.Core.Globalization.CultureCode
  type: Class
  source:
    path: Sdl.Core.Globalization.Async
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization
  syntax:
    content: public class CultureCode
    content.vb: Public Class CultureCode
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.Globalization.CultureCode.#ctor(System.Globalization.CultureInfo)
  commentId: M:Sdl.Core.Globalization.CultureCode.#ctor(System.Globalization.CultureInfo)
  id: '#ctor(System.Globalization.CultureInfo)'
  parent: Sdl.Core.Globalization.CultureCode
  langs:
  - csharp
  - vb
  name: CultureCode(CultureInfo)
  nameWithType: CultureCode.CultureCode(CultureInfo)
  fullName: Sdl.Core.Globalization.CultureCode.CultureCode(System.Globalization.CultureInfo)
  type: Constructor
  source:
    path: Sdl.Core.Globalization.Async
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization
  syntax:
    content: public CultureCode(CultureInfo ci)
    parameters:
    - id: ci
      type: System.Globalization.CultureInfo
    content.vb: Public Sub New(ci As CultureInfo)
  overload: Sdl.Core.Globalization.CultureCode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.CultureCode.#ctor(Sdl.Core.Globalization.LanguageBase)
  commentId: M:Sdl.Core.Globalization.CultureCode.#ctor(Sdl.Core.Globalization.LanguageBase)
  id: '#ctor(Sdl.Core.Globalization.LanguageBase)'
  parent: Sdl.Core.Globalization.CultureCode
  langs:
  - csharp
  - vb
  name: CultureCode(LanguageBase)
  nameWithType: CultureCode.CultureCode(LanguageBase)
  fullName: Sdl.Core.Globalization.CultureCode.CultureCode(Sdl.Core.Globalization.LanguageBase)
  type: Constructor
  source:
    path: Sdl.Core.Globalization.Async
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization
  syntax:
    content: public CultureCode(LanguageBase l)
    parameters:
    - id: l
      type: Sdl.Core.Globalization.LanguageBase
    content.vb: Public Sub New(l As LanguageBase)
  overload: Sdl.Core.Globalization.CultureCode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.CultureCode.#ctor(System.String)
  commentId: M:Sdl.Core.Globalization.CultureCode.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.Core.Globalization.CultureCode
  langs:
  - csharp
  - vb
  name: CultureCode(String)
  nameWithType: CultureCode.CultureCode(String)
  fullName: Sdl.Core.Globalization.CultureCode.CultureCode(System.String)
  type: Constructor
  source:
    path: Sdl.Core.Globalization.Async
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization
  syntax:
    content: public CultureCode(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub New(name As String)
  overload: Sdl.Core.Globalization.CultureCode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.Globalization.CultureCode.Equals(System.Object)
  commentId: M:Sdl.Core.Globalization.CultureCode.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.Core.Globalization.CultureCode
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: CultureCode.Equals(Object)
  fullName: Sdl.Core.Globalization.CultureCode.Equals(System.Object)
  type: Method
  source:
    path: Sdl.Core.Globalization.Async
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.Core.Globalization.CultureCode.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.Core.Globalization.CultureCode.GetHashCode
  commentId: M:Sdl.Core.Globalization.CultureCode.GetHashCode
  id: GetHashCode
  parent: Sdl.Core.Globalization.CultureCode
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: CultureCode.GetHashCode()
  fullName: Sdl.Core.Globalization.CultureCode.GetHashCode()
  type: Method
  source:
    path: Sdl.Core.Globalization.Async
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.Core.Globalization.CultureCode.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.Core.Globalization.CultureCode.op_Implicit(System.Globalization.CultureInfo)~Sdl.Core.Globalization.CultureCode
  commentId: M:Sdl.Core.Globalization.CultureCode.op_Implicit(System.Globalization.CultureInfo)~Sdl.Core.Globalization.CultureCode
  id: op_Implicit(System.Globalization.CultureInfo)~Sdl.Core.Globalization.CultureCode
  parent: Sdl.Core.Globalization.CultureCode
  langs:
  - csharp
  - vb
  name: Implicit(CultureInfo to CultureCode)
  nameWithType: CultureCode.Implicit(CultureInfo to CultureCode)
  fullName: Sdl.Core.Globalization.CultureCode.Implicit(System.Globalization.CultureInfo to Sdl.Core.Globalization.CultureCode)
  type: Operator
  source:
    path: Sdl.Core.Globalization.Async
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization
  syntax:
    content: public static implicit operator CultureCode(CultureInfo ci)
    parameters:
    - id: ci
      type: System.Globalization.CultureInfo
    return:
      type: Sdl.Core.Globalization.CultureCode
    content.vb: Public Shared Widening Operator CType(ci As CultureInfo) As CultureCode
  overload: Sdl.Core.Globalization.CultureCode.op_Implicit*
  nameWithType.vb: CultureCode.Widening(CultureInfo to CultureCode)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.Core.Globalization.CultureCode.Widening(System.Globalization.CultureInfo to Sdl.Core.Globalization.CultureCode)
  name.vb: Widening(CultureInfo to CultureCode)
- uid: Sdl.Core.Globalization.CultureCode.op_Implicit(Sdl.Core.Globalization.LanguageBase)~Sdl.Core.Globalization.CultureCode
  commentId: M:Sdl.Core.Globalization.CultureCode.op_Implicit(Sdl.Core.Globalization.LanguageBase)~Sdl.Core.Globalization.CultureCode
  id: op_Implicit(Sdl.Core.Globalization.LanguageBase)~Sdl.Core.Globalization.CultureCode
  parent: Sdl.Core.Globalization.CultureCode
  langs:
  - csharp
  - vb
  name: Implicit(LanguageBase to CultureCode)
  nameWithType: CultureCode.Implicit(LanguageBase to CultureCode)
  fullName: Sdl.Core.Globalization.CultureCode.Implicit(Sdl.Core.Globalization.LanguageBase to Sdl.Core.Globalization.CultureCode)
  type: Operator
  source:
    path: Sdl.Core.Globalization.Async
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization
  syntax:
    content: public static implicit operator CultureCode(LanguageBase l)
    parameters:
    - id: l
      type: Sdl.Core.Globalization.LanguageBase
    return:
      type: Sdl.Core.Globalization.CultureCode
    content.vb: Public Shared Widening Operator CType(l As LanguageBase) As CultureCode
  overload: Sdl.Core.Globalization.CultureCode.op_Implicit*
  nameWithType.vb: CultureCode.Widening(LanguageBase to CultureCode)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.Core.Globalization.CultureCode.Widening(Sdl.Core.Globalization.LanguageBase to Sdl.Core.Globalization.CultureCode)
  name.vb: Widening(LanguageBase to CultureCode)
- uid: Sdl.Core.Globalization.CultureCode.op_Implicit(System.String)~Sdl.Core.Globalization.CultureCode
  commentId: M:Sdl.Core.Globalization.CultureCode.op_Implicit(System.String)~Sdl.Core.Globalization.CultureCode
  id: op_Implicit(System.String)~Sdl.Core.Globalization.CultureCode
  parent: Sdl.Core.Globalization.CultureCode
  langs:
  - csharp
  - vb
  name: Implicit(String to CultureCode)
  nameWithType: CultureCode.Implicit(String to CultureCode)
  fullName: Sdl.Core.Globalization.CultureCode.Implicit(System.String to Sdl.Core.Globalization.CultureCode)
  type: Operator
  source:
    path: Sdl.Core.Globalization.Async
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization
  syntax:
    content: public static implicit operator CultureCode(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Sdl.Core.Globalization.CultureCode
    content.vb: Public Shared Widening Operator CType(name As String) As CultureCode
  overload: Sdl.Core.Globalization.CultureCode.op_Implicit*
  nameWithType.vb: CultureCode.Widening(String to CultureCode)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.Core.Globalization.CultureCode.Widening(System.String to Sdl.Core.Globalization.CultureCode)
  name.vb: Widening(String to CultureCode)
- uid: Sdl.Core.Globalization.CultureCode.op_Implicit(Sdl.Core.Globalization.CultureCode)~System.Globalization.CultureInfo
  commentId: M:Sdl.Core.Globalization.CultureCode.op_Implicit(Sdl.Core.Globalization.CultureCode)~System.Globalization.CultureInfo
  id: op_Implicit(Sdl.Core.Globalization.CultureCode)~System.Globalization.CultureInfo
  parent: Sdl.Core.Globalization.CultureCode
  langs:
  - csharp
  - vb
  name: Implicit(CultureCode to CultureInfo)
  nameWithType: CultureCode.Implicit(CultureCode to CultureInfo)
  fullName: Sdl.Core.Globalization.CultureCode.Implicit(Sdl.Core.Globalization.CultureCode to System.Globalization.CultureInfo)
  type: Operator
  source:
    path: Sdl.Core.Globalization.Async
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization
  syntax:
    content: public static implicit operator CultureInfo(CultureCode code)
    parameters:
    - id: code
      type: Sdl.Core.Globalization.CultureCode
    return:
      type: System.Globalization.CultureInfo
    content.vb: Public Shared Widening Operator CType(code As CultureCode) As CultureInfo
  overload: Sdl.Core.Globalization.CultureCode.op_Implicit*
  nameWithType.vb: CultureCode.Widening(CultureCode to CultureInfo)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.Core.Globalization.CultureCode.Widening(Sdl.Core.Globalization.CultureCode to System.Globalization.CultureInfo)
  name.vb: Widening(CultureCode to CultureInfo)
- uid: Sdl.Core.Globalization.CultureCode.op_Implicit(Sdl.Core.Globalization.CultureCode)~System.String
  commentId: M:Sdl.Core.Globalization.CultureCode.op_Implicit(Sdl.Core.Globalization.CultureCode)~System.String
  id: op_Implicit(Sdl.Core.Globalization.CultureCode)~System.String
  parent: Sdl.Core.Globalization.CultureCode
  langs:
  - csharp
  - vb
  name: Implicit(CultureCode to String)
  nameWithType: CultureCode.Implicit(CultureCode to String)
  fullName: Sdl.Core.Globalization.CultureCode.Implicit(Sdl.Core.Globalization.CultureCode to System.String)
  type: Operator
  source:
    path: Sdl.Core.Globalization.Async
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization
  syntax:
    content: public static implicit operator string (CultureCode code)
    parameters:
    - id: code
      type: Sdl.Core.Globalization.CultureCode
    return:
      type: System.String
    content.vb: Public Shared Widening Operator CType(code As CultureCode) As String
  overload: Sdl.Core.Globalization.CultureCode.op_Implicit*
  nameWithType.vb: CultureCode.Widening(CultureCode to String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.Core.Globalization.CultureCode.Widening(Sdl.Core.Globalization.CultureCode to System.String)
  name.vb: Widening(CultureCode to String)
- uid: Sdl.Core.Globalization.CultureCode.ToString
  commentId: M:Sdl.Core.Globalization.CultureCode.ToString
  id: ToString
  parent: Sdl.Core.Globalization.CultureCode
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CultureCode.ToString()
  fullName: Sdl.Core.Globalization.CultureCode.ToString()
  type: Method
  source:
    path: Sdl.Core.Globalization.Async
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sdl.Core.Globalization.CultureCode.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.Core.Globalization.CultureCode.InvariantCulture
  commentId: P:Sdl.Core.Globalization.CultureCode.InvariantCulture
  id: InvariantCulture
  parent: Sdl.Core.Globalization.CultureCode
  langs:
  - csharp
  - vb
  name: InvariantCulture
  nameWithType: CultureCode.InvariantCulture
  fullName: Sdl.Core.Globalization.CultureCode.InvariantCulture
  type: Property
  source:
    path: Sdl.Core.Globalization.Async
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization
  syntax:
    content: public static CultureInfo InvariantCulture { get; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
    content.vb: Public Shared ReadOnly Property InvariantCulture As CultureInfo
  overload: Sdl.Core.Globalization.CultureCode.InvariantCulture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.Core.Globalization.CultureCode.RegionNeutralName
  commentId: P:Sdl.Core.Globalization.CultureCode.RegionNeutralName
  id: RegionNeutralName
  parent: Sdl.Core.Globalization.CultureCode
  langs:
  - csharp
  - vb
  name: RegionNeutralName
  nameWithType: CultureCode.RegionNeutralName
  fullName: Sdl.Core.Globalization.CultureCode.RegionNeutralName
  type: Property
  source:
    path: Sdl.Core.Globalization.Async
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization
  syntax:
    content: public string RegionNeutralName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RegionNeutralName As String
  overload: Sdl.Core.Globalization.CultureCode.RegionNeutralName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.Globalization.CultureCode.Name
  commentId: P:Sdl.Core.Globalization.CultureCode.Name
  id: Name
  parent: Sdl.Core.Globalization.CultureCode
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CultureCode.Name
  fullName: Sdl.Core.Globalization.CultureCode.Name
  type: Property
  source:
    path: Sdl.Core.Globalization.Async
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization.Async
  namespace: Sdl.Core.Globalization
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Sdl.Core.Globalization.CultureCode.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.Core.Globalization
  commentId: N:Sdl.Core.Globalization
  isExternal: true
  name: Sdl.Core.Globalization
  nameWithType: Sdl.Core.Globalization
  fullName: Sdl.Core.Globalization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.Globalization.CultureCode.#ctor*
  commentId: Overload:Sdl.Core.Globalization.CultureCode.#ctor
  isExternal: true
  name: CultureCode
  nameWithType: CultureCode.CultureCode
  fullName: Sdl.Core.Globalization.CultureCode.CultureCode
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Sdl.Core.Globalization.LanguageBase
  commentId: T:Sdl.Core.Globalization.LanguageBase
  parent: Sdl.Core.Globalization
  isExternal: true
  name: LanguageBase
  nameWithType: LanguageBase
  fullName: Sdl.Core.Globalization.LanguageBase
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.Globalization.CultureCode.Equals*
  commentId: Overload:Sdl.Core.Globalization.CultureCode.Equals
  isExternal: true
  name: Equals
  nameWithType: CultureCode.Equals
  fullName: Sdl.Core.Globalization.CultureCode.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.Globalization.CultureCode.GetHashCode*
  commentId: Overload:Sdl.Core.Globalization.CultureCode.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: CultureCode.GetHashCode
  fullName: Sdl.Core.Globalization.CultureCode.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.Core.Globalization.CultureCode.op_Implicit*
  commentId: Overload:Sdl.Core.Globalization.CultureCode.op_Implicit
  isExternal: true
  name: Implicit
  nameWithType: CultureCode.Implicit
  fullName: Sdl.Core.Globalization.CultureCode.Implicit
  nameWithType.vb: CultureCode.Widening
  fullName.vb: Sdl.Core.Globalization.CultureCode.Widening
  name.vb: Widening
- uid: Sdl.Core.Globalization.CultureCode
  commentId: T:Sdl.Core.Globalization.CultureCode
  parent: Sdl.Core.Globalization
  isExternal: true
  name: CultureCode
  nameWithType: CultureCode
  fullName: Sdl.Core.Globalization.CultureCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.Globalization.CultureCode.ToString*
  commentId: Overload:Sdl.Core.Globalization.CultureCode.ToString
  isExternal: true
  name: ToString
  nameWithType: CultureCode.ToString
  fullName: Sdl.Core.Globalization.CultureCode.ToString
- uid: Sdl.Core.Globalization.CultureCode.InvariantCulture*
  commentId: Overload:Sdl.Core.Globalization.CultureCode.InvariantCulture
  isExternal: true
  name: InvariantCulture
  nameWithType: CultureCode.InvariantCulture
  fullName: Sdl.Core.Globalization.CultureCode.InvariantCulture
- uid: Sdl.Core.Globalization.CultureCode.RegionNeutralName*
  commentId: Overload:Sdl.Core.Globalization.CultureCode.RegionNeutralName
  isExternal: true
  name: RegionNeutralName
  nameWithType: CultureCode.RegionNeutralName
  fullName: Sdl.Core.Globalization.CultureCode.RegionNeutralName
- uid: Sdl.Core.Globalization.CultureCode.Name*
  commentId: Overload:Sdl.Core.Globalization.CultureCode.Name
  isExternal: true
  name: Name
  nameWithType: CultureCode.Name
  fullName: Sdl.Core.Globalization.CultureCode.Name
