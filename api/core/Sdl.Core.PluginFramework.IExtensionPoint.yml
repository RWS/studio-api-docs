### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.IExtensionPoint
  commentId: T:Sdl.Core.PluginFramework.IExtensionPoint
  id: IExtensionPoint
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.IExtensionPoint.AllExtensions
  - Sdl.Core.PluginFramework.IExtensionPoint.ExtensionAttributeType
  - Sdl.Core.PluginFramework.IExtensionPoint.ExtensionEnabledChanged
  - Sdl.Core.PluginFramework.IExtensionPoint.Extensions
  - Sdl.Core.PluginFramework.IExtensionPoint.IsDynamic
  - Sdl.Core.PluginFramework.IExtensionPoint.Name
  langs:
  - csharp
  - vb
  name: IExtensionPoint
  nameWithType: IExtensionPoint
  fullName: Sdl.Core.PluginFramework.IExtensionPoint
  type: Interface
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: >-
    Represents an extension point, defined by an extension attribute (see <xref href="Sdl.Core.PluginFramework.ExtensionAttribute" data-throw-if-not-resolved="false"></xref>), annotated by

    an <xref href="Sdl.Core.PluginFramework.ExtensionPointInfoAttribute" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public interface IExtensionPoint
    content.vb: Public Interface IExtensionPoint
- uid: Sdl.Core.PluginFramework.IExtensionPoint.Name
  commentId: P:Sdl.Core.PluginFramework.IExtensionPoint.Name
  id: Name
  parent: Sdl.Core.PluginFramework.IExtensionPoint
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IExtensionPoint.Name
  fullName: Sdl.Core.PluginFramework.IExtensionPoint.Name
  type: Property
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Gets the name of this extension point.
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Sdl.Core.PluginFramework.IExtensionPoint.Name*
- uid: Sdl.Core.PluginFramework.IExtensionPoint.ExtensionAttributeType
  commentId: P:Sdl.Core.PluginFramework.IExtensionPoint.ExtensionAttributeType
  id: ExtensionAttributeType
  parent: Sdl.Core.PluginFramework.IExtensionPoint
  langs:
  - csharp
  - vb
  name: ExtensionAttributeType
  nameWithType: IExtensionPoint.ExtensionAttributeType
  fullName: Sdl.Core.PluginFramework.IExtensionPoint.ExtensionAttributeType
  type: Property
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Gets the type of extension attribute that defines this extension point.
  example: []
  syntax:
    content: Type ExtensionAttributeType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: ReadOnly Property ExtensionAttributeType As Type
  overload: Sdl.Core.PluginFramework.IExtensionPoint.ExtensionAttributeType*
- uid: Sdl.Core.PluginFramework.IExtensionPoint.IsDynamic
  commentId: P:Sdl.Core.PluginFramework.IExtensionPoint.IsDynamic
  id: IsDynamic
  parent: Sdl.Core.PluginFramework.IExtensionPoint
  langs:
  - csharp
  - vb
  name: IsDynamic
  nameWithType: IExtensionPoint.IsDynamic
  fullName: Sdl.Core.PluginFramework.IExtensionPoint.IsDynamic
  type: Property
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: True if this extension point supports dymically enabling or disabling extensions, without having to restart the application.
  example: []
  syntax:
    content: bool IsDynamic { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsDynamic As Boolean
  overload: Sdl.Core.PluginFramework.IExtensionPoint.IsDynamic*
- uid: Sdl.Core.PluginFramework.IExtensionPoint.Extensions
  commentId: P:Sdl.Core.PluginFramework.IExtensionPoint.Extensions
  id: Extensions
  parent: Sdl.Core.PluginFramework.IExtensionPoint
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: IExtensionPoint.Extensions
  fullName: Sdl.Core.PluginFramework.IExtensionPoint.Extensions
  type: Property
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Returns the read-only collection of enabled extensions registered with this extension point.
  example: []
  syntax:
    content: ExtensionCollection Extensions { get; }
    parameters: []
    return:
      type: Sdl.Core.PluginFramework.ExtensionCollection
    content.vb: ReadOnly Property Extensions As ExtensionCollection
  overload: Sdl.Core.PluginFramework.IExtensionPoint.Extensions*
- uid: Sdl.Core.PluginFramework.IExtensionPoint.AllExtensions
  commentId: P:Sdl.Core.PluginFramework.IExtensionPoint.AllExtensions
  id: AllExtensions
  parent: Sdl.Core.PluginFramework.IExtensionPoint
  langs:
  - csharp
  - vb
  name: AllExtensions
  nameWithType: IExtensionPoint.AllExtensions
  fullName: Sdl.Core.PluginFramework.IExtensionPoint.AllExtensions
  type: Property
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Returns the read-only collection of extensions registered with this extension point, including extensions that have been disabled.
  example: []
  syntax:
    content: ExtensionCollection AllExtensions { get; }
    parameters: []
    return:
      type: Sdl.Core.PluginFramework.ExtensionCollection
    content.vb: ReadOnly Property AllExtensions As ExtensionCollection
  overload: Sdl.Core.PluginFramework.IExtensionPoint.AllExtensions*
- uid: Sdl.Core.PluginFramework.IExtensionPoint.ExtensionEnabledChanged
  commentId: E:Sdl.Core.PluginFramework.IExtensionPoint.ExtensionEnabledChanged
  id: ExtensionEnabledChanged
  parent: Sdl.Core.PluginFramework.IExtensionPoint
  langs:
  - csharp
  - vb
  name: ExtensionEnabledChanged
  nameWithType: IExtensionPoint.ExtensionEnabledChanged
  fullName: Sdl.Core.PluginFramework.IExtensionPoint.ExtensionEnabledChanged
  type: Event
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Raised when a extension within this extension point is enabled or disabled.
  example: []
  syntax:
    content: event EventHandler<ExtensionEventArgs> ExtensionEnabledChanged
    return:
      type: System.EventHandler{Sdl.Core.PluginFramework.ExtensionEventArgs}
    content.vb: Event ExtensionEnabledChanged As EventHandler(Of ExtensionEventArgs)
references:
- uid: Sdl.Core.PluginFramework.ExtensionAttribute
  commentId: T:Sdl.Core.PluginFramework.ExtensionAttribute
  parent: Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.Core.PluginFramework.ExtensionAttribute.html
  name: ExtensionAttribute
  nameWithType: ExtensionAttribute
  fullName: Sdl.Core.PluginFramework.ExtensionAttribute
- uid: Sdl.Core.PluginFramework.ExtensionPointInfoAttribute
  commentId: T:Sdl.Core.PluginFramework.ExtensionPointInfoAttribute
  parent: Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.Core.PluginFramework.ExtensionPointInfoAttribute.html
  name: ExtensionPointInfoAttribute
  nameWithType: ExtensionPointInfoAttribute
  fullName: Sdl.Core.PluginFramework.ExtensionPointInfoAttribute
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
- uid: Sdl.Core.PluginFramework.IExtensionPoint.Name*
  commentId: Overload:Sdl.Core.PluginFramework.IExtensionPoint.Name
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtensionPoint.html#Sdl_Core_PluginFramework_IExtensionPoint_Name
  name: Name
  nameWithType: IExtensionPoint.Name
  fullName: Sdl.Core.PluginFramework.IExtensionPoint.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.IExtensionPoint.ExtensionAttributeType*
  commentId: Overload:Sdl.Core.PluginFramework.IExtensionPoint.ExtensionAttributeType
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtensionPoint.html#Sdl_Core_PluginFramework_IExtensionPoint_ExtensionAttributeType
  name: ExtensionAttributeType
  nameWithType: IExtensionPoint.ExtensionAttributeType
  fullName: Sdl.Core.PluginFramework.IExtensionPoint.ExtensionAttributeType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Sdl.Core.PluginFramework.IExtensionPoint.IsDynamic*
  commentId: Overload:Sdl.Core.PluginFramework.IExtensionPoint.IsDynamic
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtensionPoint.html#Sdl_Core_PluginFramework_IExtensionPoint_IsDynamic
  name: IsDynamic
  nameWithType: IExtensionPoint.IsDynamic
  fullName: Sdl.Core.PluginFramework.IExtensionPoint.IsDynamic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.Core.PluginFramework.IExtensionPoint.Extensions*
  commentId: Overload:Sdl.Core.PluginFramework.IExtensionPoint.Extensions
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtensionPoint.html#Sdl_Core_PluginFramework_IExtensionPoint_Extensions
  name: Extensions
  nameWithType: IExtensionPoint.Extensions
  fullName: Sdl.Core.PluginFramework.IExtensionPoint.Extensions
- uid: Sdl.Core.PluginFramework.ExtensionCollection
  commentId: T:Sdl.Core.PluginFramework.ExtensionCollection
  parent: Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.Core.PluginFramework.ExtensionCollection.html
  name: ExtensionCollection
  nameWithType: ExtensionCollection
  fullName: Sdl.Core.PluginFramework.ExtensionCollection
- uid: Sdl.Core.PluginFramework.IExtensionPoint.AllExtensions*
  commentId: Overload:Sdl.Core.PluginFramework.IExtensionPoint.AllExtensions
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtensionPoint.html#Sdl_Core_PluginFramework_IExtensionPoint_AllExtensions
  name: AllExtensions
  nameWithType: IExtensionPoint.AllExtensions
  fullName: Sdl.Core.PluginFramework.IExtensionPoint.AllExtensions
- uid: System.EventHandler{Sdl.Core.PluginFramework.ExtensionEventArgs}
  commentId: T:System.EventHandler{Sdl.Core.PluginFramework.ExtensionEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ExtensionEventArgs>
  nameWithType: EventHandler<ExtensionEventArgs>
  fullName: System.EventHandler<Sdl.Core.PluginFramework.ExtensionEventArgs>
  nameWithType.vb: EventHandler(Of ExtensionEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.Core.PluginFramework.ExtensionEventArgs)
  name.vb: EventHandler(Of ExtensionEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.Core.PluginFramework.ExtensionEventArgs
    name: ExtensionEventArgs
    isExternal: true
    href: Sdl.Core.PluginFramework.ExtensionEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.PluginFramework.ExtensionEventArgs
    name: ExtensionEventArgs
    isExternal: true
    href: Sdl.Core.PluginFramework.ExtensionEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
