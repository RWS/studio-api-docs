### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.PluginInitializationResult
  commentId: T:Sdl.Core.PluginFramework.PluginInitializationResult
  id: PluginInitializationResult
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.PluginInitializationResult.#ctor(Sdl.Core.PluginFramework.IPlugin,System.Exception)
  - Sdl.Core.PluginFramework.PluginInitializationResult.Exception
  - Sdl.Core.PluginFramework.PluginInitializationResult.Plugin
  langs:
  - csharp
  - vb
  name: PluginInitializationResult
  nameWithType: PluginInitializationResult
  fullName: Sdl.Core.PluginFramework.PluginInitializationResult
  type: Class
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public class PluginInitializationResult
    content.vb: Public Class PluginInitializationResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.PluginFramework.PluginInitializationResult.#ctor(Sdl.Core.PluginFramework.IPlugin,System.Exception)
  commentId: M:Sdl.Core.PluginFramework.PluginInitializationResult.#ctor(Sdl.Core.PluginFramework.IPlugin,System.Exception)
  id: '#ctor(Sdl.Core.PluginFramework.IPlugin,System.Exception)'
  parent: Sdl.Core.PluginFramework.PluginInitializationResult
  langs:
  - csharp
  - vb
  name: PluginInitializationResult(IPlugin, Exception)
  nameWithType: PluginInitializationResult.PluginInitializationResult(IPlugin, Exception)
  fullName: Sdl.Core.PluginFramework.PluginInitializationResult.PluginInitializationResult(Sdl.Core.PluginFramework.IPlugin, System.Exception)
  type: Constructor
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public PluginInitializationResult(IPlugin plugin, Exception exception)
    parameters:
    - id: plugin
      type: Sdl.Core.PluginFramework.IPlugin
    - id: exception
      type: System.Exception
    content.vb: Public Sub New(plugin As IPlugin, exception As Exception)
  overload: Sdl.Core.PluginFramework.PluginInitializationResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.PluginInitializationResult.Plugin
  commentId: P:Sdl.Core.PluginFramework.PluginInitializationResult.Plugin
  id: Plugin
  parent: Sdl.Core.PluginFramework.PluginInitializationResult
  langs:
  - csharp
  - vb
  name: Plugin
  nameWithType: PluginInitializationResult.Plugin
  fullName: Sdl.Core.PluginFramework.PluginInitializationResult.Plugin
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public IPlugin Plugin { get; }
    parameters: []
    return:
      type: Sdl.Core.PluginFramework.IPlugin
    content.vb: Public ReadOnly Property Plugin As IPlugin
  overload: Sdl.Core.PluginFramework.PluginInitializationResult.Plugin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.PluginFramework.PluginInitializationResult.Exception
  commentId: P:Sdl.Core.PluginFramework.PluginInitializationResult.Exception
  id: Exception
  parent: Sdl.Core.PluginFramework.PluginInitializationResult
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: PluginInitializationResult.Exception
  fullName: Sdl.Core.PluginFramework.PluginInitializationResult.Exception
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public Exception Exception { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property Exception As Exception
  overload: Sdl.Core.PluginFramework.PluginInitializationResult.Exception*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.PluginInitializationResult.#ctor*
  commentId: Overload:Sdl.Core.PluginFramework.PluginInitializationResult.#ctor
  isExternal: true
  name: PluginInitializationResult
  nameWithType: PluginInitializationResult.PluginInitializationResult
  fullName: Sdl.Core.PluginFramework.PluginInitializationResult.PluginInitializationResult
- uid: Sdl.Core.PluginFramework.IPlugin
  commentId: T:Sdl.Core.PluginFramework.IPlugin
  parent: Sdl.Core.PluginFramework
  isExternal: true
  name: IPlugin
  nameWithType: IPlugin
  fullName: Sdl.Core.PluginFramework.IPlugin
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Sdl.Core.PluginFramework.PluginInitializationResult.Plugin*
  commentId: Overload:Sdl.Core.PluginFramework.PluginInitializationResult.Plugin
  isExternal: true
  name: Plugin
  nameWithType: PluginInitializationResult.Plugin
  fullName: Sdl.Core.PluginFramework.PluginInitializationResult.Plugin
- uid: Sdl.Core.PluginFramework.PluginInitializationResult.Exception*
  commentId: Overload:Sdl.Core.PluginFramework.PluginInitializationResult.Exception
  isExternal: true
  name: Exception
  nameWithType: PluginInitializationResult.Exception
  fullName: Sdl.Core.PluginFramework.PluginInitializationResult.Exception
