### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.Util.SortedObjectRegistry`2
  commentId: T:Sdl.Core.PluginFramework.Util.SortedObjectRegistry`2
  id: SortedObjectRegistry`2
  parent: Sdl.Core.PluginFramework.Util
  children:
  - Sdl.Core.PluginFramework.Util.SortedObjectRegistry`2.#ctor(Sdl.Core.PluginFramework.IPluginRegistry)
  - Sdl.Core.PluginFramework.Util.SortedObjectRegistry`2.CreateObjects
  langs:
  - csharp
  - vb
  name: SortedObjectRegistry<TSortableExtensionAttribute, TExtensionType>
  nameWithType: SortedObjectRegistry<TSortableExtensionAttribute, TExtensionType>
  fullName: Sdl.Core.PluginFramework.Util.SortedObjectRegistry<TSortableExtensionAttribute, TExtensionType>
  type: Class
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Util
  syntax:
    content: 'public class SortedObjectRegistry<TSortableExtensionAttribute, TExtensionType> : ObjectRegistry<TSortableExtensionAttribute, TExtensionType> where TSortableExtensionAttribute : SortableExtensionAttribute where TExtensionType : class'
    typeParameters:
    - id: TSortableExtensionAttribute
    - id: TExtensionType
    content.vb: >-
      Public Class SortedObjectRegistry(Of TSortableExtensionAttribute As SortableExtensionAttribute, TExtensionType As Class)
          Inherits ObjectRegistry(Of TSortableExtensionAttribute, TExtensionType)
  inheritance:
  - System.Object
  - Sdl.Core.PluginFramework.ObjectRegistry{{TSortableExtensionAttribute},{TExtensionType}}
  inheritedMembers:
  - Sdl.Core.PluginFramework.ObjectRegistry{{TSortableExtensionAttribute},{TExtensionType}}.CreateObjects
  - Sdl.Core.PluginFramework.ObjectRegistry{{TSortableExtensionAttribute},{TExtensionType}}.ExtensionPoint
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: SortedObjectRegistry(Of TSortableExtensionAttribute, TExtensionType)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Sdl.Core.PluginFramework.Util.SortedObjectRegistry(Of TSortableExtensionAttribute, TExtensionType)
  name.vb: SortedObjectRegistry(Of TSortableExtensionAttribute, TExtensionType)
- uid: Sdl.Core.PluginFramework.Util.SortedObjectRegistry`2.#ctor(Sdl.Core.PluginFramework.IPluginRegistry)
  commentId: M:Sdl.Core.PluginFramework.Util.SortedObjectRegistry`2.#ctor(Sdl.Core.PluginFramework.IPluginRegistry)
  id: '#ctor(Sdl.Core.PluginFramework.IPluginRegistry)'
  parent: Sdl.Core.PluginFramework.Util.SortedObjectRegistry`2
  langs:
  - csharp
  - vb
  name: SortedObjectRegistry(IPluginRegistry)
  nameWithType: SortedObjectRegistry<TSortableExtensionAttribute, TExtensionType>.SortedObjectRegistry(IPluginRegistry)
  fullName: Sdl.Core.PluginFramework.Util.SortedObjectRegistry<TSortableExtensionAttribute, TExtensionType>.SortedObjectRegistry(Sdl.Core.PluginFramework.IPluginRegistry)
  type: Constructor
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Util
  syntax:
    content: public SortedObjectRegistry(IPluginRegistry pluginRegistry)
    parameters:
    - id: pluginRegistry
      type: Sdl.Core.PluginFramework.IPluginRegistry
    content.vb: Public Sub New(pluginRegistry As IPluginRegistry)
  overload: Sdl.Core.PluginFramework.Util.SortedObjectRegistry`2.#ctor*
  nameWithType.vb: SortedObjectRegistry(Of TSortableExtensionAttribute, TExtensionType).SortedObjectRegistry(IPluginRegistry)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.Core.PluginFramework.Util.SortedObjectRegistry(Of TSortableExtensionAttribute, TExtensionType).SortedObjectRegistry(Sdl.Core.PluginFramework.IPluginRegistry)
- uid: Sdl.Core.PluginFramework.Util.SortedObjectRegistry`2.CreateObjects
  commentId: M:Sdl.Core.PluginFramework.Util.SortedObjectRegistry`2.CreateObjects
  id: CreateObjects
  parent: Sdl.Core.PluginFramework.Util.SortedObjectRegistry`2
  langs:
  - csharp
  - vb
  name: CreateObjects()
  nameWithType: SortedObjectRegistry<TSortableExtensionAttribute, TExtensionType>.CreateObjects()
  fullName: Sdl.Core.PluginFramework.Util.SortedObjectRegistry<TSortableExtensionAttribute, TExtensionType>.CreateObjects()
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Util
  syntax:
    content: public override TExtensionType[] CreateObjects()
    return:
      type: '{TExtensionType}[]'
    content.vb: Public Overrides Function CreateObjects As TExtensionType()
  overridden: Sdl.Core.PluginFramework.ObjectRegistry{{TSortableExtensionAttribute},{TExtensionType}}.CreateObjects
  overload: Sdl.Core.PluginFramework.Util.SortedObjectRegistry`2.CreateObjects*
  nameWithType.vb: SortedObjectRegistry(Of TSortableExtensionAttribute, TExtensionType).CreateObjects()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Sdl.Core.PluginFramework.Util.SortedObjectRegistry(Of TSortableExtensionAttribute, TExtensionType).CreateObjects()
references:
- uid: Sdl.Core.PluginFramework.Util
  commentId: N:Sdl.Core.PluginFramework.Util
  isExternal: true
  name: Sdl.Core.PluginFramework.Util
  nameWithType: Sdl.Core.PluginFramework.Util
  fullName: Sdl.Core.PluginFramework.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.Core.PluginFramework.ObjectRegistry{{TSortableExtensionAttribute},{TExtensionType}}
  commentId: T:Sdl.Core.PluginFramework.ObjectRegistry{`0,`1}
  parent: Sdl.Core.PluginFramework
  definition: Sdl.Core.PluginFramework.ObjectRegistry`2
  name: ObjectRegistry<TSortableExtensionAttribute, TExtensionType>
  nameWithType: ObjectRegistry<TSortableExtensionAttribute, TExtensionType>
  fullName: Sdl.Core.PluginFramework.ObjectRegistry<TSortableExtensionAttribute, TExtensionType>
  nameWithType.vb: ObjectRegistry(Of TSortableExtensionAttribute, TExtensionType)
  fullName.vb: Sdl.Core.PluginFramework.ObjectRegistry(Of TSortableExtensionAttribute, TExtensionType)
  name.vb: ObjectRegistry(Of TSortableExtensionAttribute, TExtensionType)
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.ObjectRegistry`2
    name: ObjectRegistry
    nameWithType: ObjectRegistry
    fullName: Sdl.Core.PluginFramework.ObjectRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSortableExtensionAttribute
    nameWithType: TSortableExtensionAttribute
    fullName: TSortableExtensionAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TExtensionType
    nameWithType: TExtensionType
    fullName: TExtensionType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.Core.PluginFramework.ObjectRegistry`2
    name: ObjectRegistry
    nameWithType: ObjectRegistry
    fullName: Sdl.Core.PluginFramework.ObjectRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSortableExtensionAttribute
    nameWithType: TSortableExtensionAttribute
    fullName: TSortableExtensionAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TExtensionType
    nameWithType: TExtensionType
    fullName: TExtensionType
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.PluginFramework.ObjectRegistry{{TSortableExtensionAttribute},{TExtensionType}}.CreateObjects
  commentId: M:Sdl.Core.PluginFramework.ObjectRegistry{`0,`1}.CreateObjects
  parent: Sdl.Core.PluginFramework.ObjectRegistry{{TSortableExtensionAttribute},{TExtensionType}}
  definition: Sdl.Core.PluginFramework.ObjectRegistry`2.CreateObjects
  name: CreateObjects()
  nameWithType: ObjectRegistry<TSortableExtensionAttribute, TExtensionType>.CreateObjects()
  fullName: Sdl.Core.PluginFramework.ObjectRegistry<TSortableExtensionAttribute, TExtensionType>.CreateObjects()
  nameWithType.vb: ObjectRegistry(Of TSortableExtensionAttribute, TExtensionType).CreateObjects()
  fullName.vb: Sdl.Core.PluginFramework.ObjectRegistry(Of TSortableExtensionAttribute, TExtensionType).CreateObjects()
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.ObjectRegistry`2.CreateObjects
    name: CreateObjects
    nameWithType: ObjectRegistry<TSortableExtensionAttribute, TExtensionType>.CreateObjects
    fullName: Sdl.Core.PluginFramework.ObjectRegistry<TSortableExtensionAttribute, TExtensionType>.CreateObjects
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.PluginFramework.ObjectRegistry`2.CreateObjects
    name: CreateObjects
    nameWithType: ObjectRegistry(Of TSortableExtensionAttribute, TExtensionType).CreateObjects
    fullName: Sdl.Core.PluginFramework.ObjectRegistry(Of TSortableExtensionAttribute, TExtensionType).CreateObjects
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.PluginFramework.ObjectRegistry{{TSortableExtensionAttribute},{TExtensionType}}.ExtensionPoint
  commentId: P:Sdl.Core.PluginFramework.ObjectRegistry{`0,`1}.ExtensionPoint
  parent: Sdl.Core.PluginFramework.ObjectRegistry{{TSortableExtensionAttribute},{TExtensionType}}
  definition: Sdl.Core.PluginFramework.ObjectRegistry`2.ExtensionPoint
  name: ExtensionPoint
  nameWithType: ObjectRegistry<TSortableExtensionAttribute, TExtensionType>.ExtensionPoint
  fullName: Sdl.Core.PluginFramework.ObjectRegistry<TSortableExtensionAttribute, TExtensionType>.ExtensionPoint
  nameWithType.vb: ObjectRegistry(Of TSortableExtensionAttribute, TExtensionType).ExtensionPoint
  fullName.vb: Sdl.Core.PluginFramework.ObjectRegistry(Of TSortableExtensionAttribute, TExtensionType).ExtensionPoint
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.ObjectRegistry`2
  commentId: T:Sdl.Core.PluginFramework.ObjectRegistry`2
  isExternal: true
  name: ObjectRegistry<TExtensionAttribute, TExtensionType>
  nameWithType: ObjectRegistry<TExtensionAttribute, TExtensionType>
  fullName: Sdl.Core.PluginFramework.ObjectRegistry<TExtensionAttribute, TExtensionType>
  nameWithType.vb: ObjectRegistry(Of TExtensionAttribute, TExtensionType)
  fullName.vb: Sdl.Core.PluginFramework.ObjectRegistry(Of TExtensionAttribute, TExtensionType)
  name.vb: ObjectRegistry(Of TExtensionAttribute, TExtensionType)
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.ObjectRegistry`2
    name: ObjectRegistry
    nameWithType: ObjectRegistry
    fullName: Sdl.Core.PluginFramework.ObjectRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TExtensionAttribute
    nameWithType: TExtensionAttribute
    fullName: TExtensionAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TExtensionType
    nameWithType: TExtensionType
    fullName: TExtensionType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.Core.PluginFramework.ObjectRegistry`2
    name: ObjectRegistry
    nameWithType: ObjectRegistry
    fullName: Sdl.Core.PluginFramework.ObjectRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TExtensionAttribute
    nameWithType: TExtensionAttribute
    fullName: TExtensionAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TExtensionType
    nameWithType: TExtensionType
    fullName: TExtensionType
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: Sdl.Core.PluginFramework.ObjectRegistry`2.CreateObjects
  commentId: M:Sdl.Core.PluginFramework.ObjectRegistry`2.CreateObjects
  isExternal: true
  name: CreateObjects()
  nameWithType: ObjectRegistry<TExtensionAttribute, TExtensionType>.CreateObjects()
  fullName: Sdl.Core.PluginFramework.ObjectRegistry<TExtensionAttribute, TExtensionType>.CreateObjects()
  nameWithType.vb: ObjectRegistry(Of TExtensionAttribute, TExtensionType).CreateObjects()
  fullName.vb: Sdl.Core.PluginFramework.ObjectRegistry(Of TExtensionAttribute, TExtensionType).CreateObjects()
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.ObjectRegistry`2.CreateObjects
    name: CreateObjects
    nameWithType: ObjectRegistry<TExtensionAttribute, TExtensionType>.CreateObjects
    fullName: Sdl.Core.PluginFramework.ObjectRegistry<TExtensionAttribute, TExtensionType>.CreateObjects
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.PluginFramework.ObjectRegistry`2.CreateObjects
    name: CreateObjects
    nameWithType: ObjectRegistry(Of TExtensionAttribute, TExtensionType).CreateObjects
    fullName: Sdl.Core.PluginFramework.ObjectRegistry(Of TExtensionAttribute, TExtensionType).CreateObjects
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.PluginFramework.ObjectRegistry`2.ExtensionPoint
  commentId: P:Sdl.Core.PluginFramework.ObjectRegistry`2.ExtensionPoint
  isExternal: true
  name: ExtensionPoint
  nameWithType: ObjectRegistry<TExtensionAttribute, TExtensionType>.ExtensionPoint
  fullName: Sdl.Core.PluginFramework.ObjectRegistry<TExtensionAttribute, TExtensionType>.ExtensionPoint
  nameWithType.vb: ObjectRegistry(Of TExtensionAttribute, TExtensionType).ExtensionPoint
  fullName.vb: Sdl.Core.PluginFramework.ObjectRegistry(Of TExtensionAttribute, TExtensionType).ExtensionPoint
- uid: Sdl.Core.PluginFramework.Util.SortedObjectRegistry`2.#ctor*
  commentId: Overload:Sdl.Core.PluginFramework.Util.SortedObjectRegistry`2.#ctor
  isExternal: true
  name: SortedObjectRegistry
  nameWithType: SortedObjectRegistry<TSortableExtensionAttribute, TExtensionType>.SortedObjectRegistry
  fullName: Sdl.Core.PluginFramework.Util.SortedObjectRegistry<TSortableExtensionAttribute, TExtensionType>.SortedObjectRegistry
  nameWithType.vb: SortedObjectRegistry(Of TSortableExtensionAttribute, TExtensionType).SortedObjectRegistry
  fullName.vb: Sdl.Core.PluginFramework.Util.SortedObjectRegistry(Of TSortableExtensionAttribute, TExtensionType).SortedObjectRegistry
- uid: Sdl.Core.PluginFramework.IPluginRegistry
  commentId: T:Sdl.Core.PluginFramework.IPluginRegistry
  parent: Sdl.Core.PluginFramework
  isExternal: true
  name: IPluginRegistry
  nameWithType: IPluginRegistry
  fullName: Sdl.Core.PluginFramework.IPluginRegistry
- uid: Sdl.Core.PluginFramework.Util.SortedObjectRegistry`2.CreateObjects*
  commentId: Overload:Sdl.Core.PluginFramework.Util.SortedObjectRegistry`2.CreateObjects
  isExternal: true
  name: CreateObjects
  nameWithType: SortedObjectRegistry<TSortableExtensionAttribute, TExtensionType>.CreateObjects
  fullName: Sdl.Core.PluginFramework.Util.SortedObjectRegistry<TSortableExtensionAttribute, TExtensionType>.CreateObjects
  nameWithType.vb: SortedObjectRegistry(Of TSortableExtensionAttribute, TExtensionType).CreateObjects
  fullName.vb: Sdl.Core.PluginFramework.Util.SortedObjectRegistry(Of TSortableExtensionAttribute, TExtensionType).CreateObjects
- uid: '{TExtensionType}[]'
  isExternal: true
  name: TExtensionType[]
  nameWithType: TExtensionType[]
  fullName: TExtensionType[]
  nameWithType.vb: TExtensionType()
  fullName.vb: TExtensionType()
  name.vb: TExtensionType()
  spec.csharp:
  - name: TExtensionType
    nameWithType: TExtensionType
    fullName: TExtensionType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: TExtensionType
    nameWithType: TExtensionType
    fullName: TExtensionType
  - name: ()
    nameWithType: ()
    fullName: ()
