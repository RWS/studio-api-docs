### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.IPluginStateHandler
  commentId: T:Sdl.Core.PluginFramework.IPluginStateHandler
  id: IPluginStateHandler
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.IPluginStateHandler.CanDisable(Sdl.Core.PluginFramework.IPlugin)
  - Sdl.Core.PluginFramework.IPluginStateHandler.CanEnable(Sdl.Core.PluginFramework.IPlugin)
  langs:
  - csharp
  - vb
  name: IPluginStateHandler
  nameWithType: IPluginStateHandler
  fullName: Sdl.Core.PluginFramework.IPluginStateHandler
  type: Interface
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nRepresents an object that determines whether the user can enable or disable certain plug-ins.\nThis is typically used in a user interface that allows plug-in management.\n"
  remarks: "Assign an instance of this object to <xref href=\"Sdl.Core.PluginFramework.IPluginRegistry.PluginStateHandler\" data-throw-if-not-resolved=\"false\"></xref> to use the handler \nfor a particular plug-in registry."
  syntax:
    content: public interface IPluginStateHandler
    content.vb: Public Interface IPluginStateHandler
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Core.PluginFramework.IPluginStateHandler.CanEnable(Sdl.Core.PluginFramework.IPlugin)
  commentId: M:Sdl.Core.PluginFramework.IPluginStateHandler.CanEnable(Sdl.Core.PluginFramework.IPlugin)
  id: CanEnable(Sdl.Core.PluginFramework.IPlugin)
  parent: Sdl.Core.PluginFramework.IPluginStateHandler
  langs:
  - csharp
  - vb
  name: CanEnable(IPlugin)
  nameWithType: IPluginStateHandler.CanEnable(IPlugin)
  fullName: Sdl.Core.PluginFramework.IPluginStateHandler.CanEnable(Sdl.Core.PluginFramework.IPlugin)
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nCalled by the framework to determine whether a certain plug-in can be enabled.\n"
  syntax:
    content: bool CanEnable(IPlugin plugin)
    parameters:
    - id: plugin
      type: Sdl.Core.PluginFramework.IPlugin
      description: The plug-in to check.
    return:
      type: System.Boolean
      description: true if the plug-in can be enabled.
    content.vb: Function CanEnable(plugin As IPlugin) As Boolean
  overload: Sdl.Core.PluginFramework.IPluginStateHandler.CanEnable*
- uid: Sdl.Core.PluginFramework.IPluginStateHandler.CanDisable(Sdl.Core.PluginFramework.IPlugin)
  commentId: M:Sdl.Core.PluginFramework.IPluginStateHandler.CanDisable(Sdl.Core.PluginFramework.IPlugin)
  id: CanDisable(Sdl.Core.PluginFramework.IPlugin)
  parent: Sdl.Core.PluginFramework.IPluginStateHandler
  langs:
  - csharp
  - vb
  name: CanDisable(IPlugin)
  nameWithType: IPluginStateHandler.CanDisable(IPlugin)
  fullName: Sdl.Core.PluginFramework.IPluginStateHandler.CanDisable(Sdl.Core.PluginFramework.IPlugin)
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nCalled by the framework to determine whether a certain plug-in can be disabled.\n"
  syntax:
    content: bool CanDisable(IPlugin plugin)
    parameters:
    - id: plugin
      type: Sdl.Core.PluginFramework.IPlugin
      description: The plug-in to check.
    return:
      type: System.Boolean
      description: true if the plug-in can be disabled.
    content.vb: Function CanDisable(plugin As IPlugin) As Boolean
  overload: Sdl.Core.PluginFramework.IPluginStateHandler.CanDisable*
references:
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: Sdl.Core.PluginFramework.IPluginStateHandler.CanEnable*
  commentId: Overload:Sdl.Core.PluginFramework.IPluginStateHandler.CanEnable
  isExternal: true
  name: CanEnable
  nameWithType: IPluginStateHandler.CanEnable
  fullName: Sdl.Core.PluginFramework.IPluginStateHandler.CanEnable
- uid: Sdl.Core.PluginFramework.IPlugin
  commentId: T:Sdl.Core.PluginFramework.IPlugin
  parent: Sdl.Core.PluginFramework
  isExternal: true
  name: IPlugin
  nameWithType: IPlugin
  fullName: Sdl.Core.PluginFramework.IPlugin
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.IPluginStateHandler.CanDisable*
  commentId: Overload:Sdl.Core.PluginFramework.IPluginStateHandler.CanDisable
  isExternal: true
  name: CanDisable
  nameWithType: IPluginStateHandler.CanDisable
  fullName: Sdl.Core.PluginFramework.IPluginStateHandler.CanDisable
