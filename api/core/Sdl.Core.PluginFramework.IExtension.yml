### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.IExtension
  commentId: T:Sdl.Core.PluginFramework.IExtension
  id: IExtension
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.IExtension.AuxiliaryExtensionAttributes
  - Sdl.Core.PluginFramework.IExtension.CreateInstance
  - Sdl.Core.PluginFramework.IExtension.Enabled
  - Sdl.Core.PluginFramework.IExtension.EnabledChanged
  - Sdl.Core.PluginFramework.IExtension.ExtensionAttribute
  - Sdl.Core.PluginFramework.IExtension.ExtensionPoint
  - Sdl.Core.PluginFramework.IExtension.ExtensionType
  - Sdl.Core.PluginFramework.IExtension.GetAuxiliaryExtensionAttributes``1
  - Sdl.Core.PluginFramework.IExtension.Plugin
  - Sdl.Core.PluginFramework.IExtension.SetEnabled(System.Boolean)
  - Sdl.Core.PluginFramework.IExtension.Validate
  langs:
  - csharp
  - vb
  name: IExtension
  nameWithType: IExtension
  fullName: Sdl.Core.PluginFramework.IExtension
  type: Interface
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Represents an extension registered with a particular extension point within a particular plug-in.
  example: []
  syntax:
    content: public interface IExtension
    content.vb: Public Interface IExtension
- uid: Sdl.Core.PluginFramework.IExtension.SetEnabled(System.Boolean)
  commentId: M:Sdl.Core.PluginFramework.IExtension.SetEnabled(System.Boolean)
  id: SetEnabled(System.Boolean)
  parent: Sdl.Core.PluginFramework.IExtension
  langs:
  - csharp
  - vb
  name: SetEnabled(bool)
  nameWithType: IExtension.SetEnabled(bool)
  fullName: Sdl.Core.PluginFramework.IExtension.SetEnabled(bool)
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Enables or disables this extension.
  example: []
  syntax:
    content: bool SetEnabled(bool enabled)
    parameters:
    - id: enabled
      type: System.Boolean
      description: True to enable the extension.
    return:
      type: System.Boolean
      description: True if disabling the extension does not require restarting the application, false otherwise.
    content.vb: Function SetEnabled(enabled As Boolean) As Boolean
  overload: Sdl.Core.PluginFramework.IExtension.SetEnabled*
  nameWithType.vb: IExtension.SetEnabled(Boolean)
  fullName.vb: Sdl.Core.PluginFramework.IExtension.SetEnabled(Boolean)
  name.vb: SetEnabled(Boolean)
- uid: Sdl.Core.PluginFramework.IExtension.CreateInstance
  commentId: M:Sdl.Core.PluginFramework.IExtension.CreateInstance
  id: CreateInstance
  parent: Sdl.Core.PluginFramework.IExtension
  langs:
  - csharp
  - vb
  name: CreateInstance()
  nameWithType: IExtension.CreateInstance()
  fullName: Sdl.Core.PluginFramework.IExtension.CreateInstance()
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Creates a new instance of the extension implementation type.
  example: []
  syntax:
    content: object CreateInstance()
    return:
      type: System.Object
      description: The newly created instance.
    content.vb: Function CreateInstance() As Object
  overload: Sdl.Core.PluginFramework.IExtension.CreateInstance*
- uid: Sdl.Core.PluginFramework.IExtension.GetAuxiliaryExtensionAttributes``1
  commentId: M:Sdl.Core.PluginFramework.IExtension.GetAuxiliaryExtensionAttributes``1
  id: GetAuxiliaryExtensionAttributes``1
  parent: Sdl.Core.PluginFramework.IExtension
  langs:
  - csharp
  - vb
  name: GetAuxiliaryExtensionAttributes<T>()
  nameWithType: IExtension.GetAuxiliaryExtensionAttributes<T>()
  fullName: Sdl.Core.PluginFramework.IExtension.GetAuxiliaryExtensionAttributes<T>()
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Gets the auxiliary extension attributes of the specified type.
  example: []
  syntax:
    content: 'T[] GetAuxiliaryExtensionAttributes<T>() where T : AuxiliaryExtensionAttribute'
    typeParameters:
    - id: T
      description: The type of auxiliary extension attributes to return.
    return:
      type: '{T}[]'
      description: The auxiliary extension attributes of the requested type.
    content.vb: Function GetAuxiliaryExtensionAttributes(Of T As AuxiliaryExtensionAttribute)() As T()
  overload: Sdl.Core.PluginFramework.IExtension.GetAuxiliaryExtensionAttributes*
  nameWithType.vb: IExtension.GetAuxiliaryExtensionAttributes(Of T)()
  fullName.vb: Sdl.Core.PluginFramework.IExtension.GetAuxiliaryExtensionAttributes(Of T)()
  name.vb: GetAuxiliaryExtensionAttributes(Of T)()
- uid: Sdl.Core.PluginFramework.IExtension.Validate
  commentId: M:Sdl.Core.PluginFramework.IExtension.Validate
  id: Validate
  parent: Sdl.Core.PluginFramework.IExtension
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: IExtension.Validate()
  fullName: Sdl.Core.PluginFramework.IExtension.Validate()
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Validates this extension.
  example: []
  syntax:
    content: void Validate()
    content.vb: Sub Validate()
  overload: Sdl.Core.PluginFramework.IExtension.Validate*
- uid: Sdl.Core.PluginFramework.IExtension.Plugin
  commentId: P:Sdl.Core.PluginFramework.IExtension.Plugin
  id: Plugin
  parent: Sdl.Core.PluginFramework.IExtension
  langs:
  - csharp
  - vb
  name: Plugin
  nameWithType: IExtension.Plugin
  fullName: Sdl.Core.PluginFramework.IExtension.Plugin
  type: Property
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Gets the plug-in providing this extension.
  example: []
  syntax:
    content: IPlugin Plugin { get; }
    parameters: []
    return:
      type: Sdl.Core.PluginFramework.IPlugin
    content.vb: ReadOnly Property Plugin As IPlugin
  overload: Sdl.Core.PluginFramework.IExtension.Plugin*
- uid: Sdl.Core.PluginFramework.IExtension.Enabled
  commentId: P:Sdl.Core.PluginFramework.IExtension.Enabled
  id: Enabled
  parent: Sdl.Core.PluginFramework.IExtension
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: IExtension.Enabled
  fullName: Sdl.Core.PluginFramework.IExtension.Enabled
  type: Property
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: True when this extension is currently enabled.
  example: []
  syntax:
    content: bool Enabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Enabled As Boolean
  overload: Sdl.Core.PluginFramework.IExtension.Enabled*
- uid: Sdl.Core.PluginFramework.IExtension.ExtensionPoint
  commentId: P:Sdl.Core.PluginFramework.IExtension.ExtensionPoint
  id: ExtensionPoint
  parent: Sdl.Core.PluginFramework.IExtension
  langs:
  - csharp
  - vb
  name: ExtensionPoint
  nameWithType: IExtension.ExtensionPoint
  fullName: Sdl.Core.PluginFramework.IExtension.ExtensionPoint
  type: Property
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: The extension point to which this extension contributes.
  example: []
  syntax:
    content: IExtensionPoint ExtensionPoint { get; }
    parameters: []
    return:
      type: Sdl.Core.PluginFramework.IExtensionPoint
    content.vb: ReadOnly Property ExtensionPoint As IExtensionPoint
  overload: Sdl.Core.PluginFramework.IExtension.ExtensionPoint*
- uid: Sdl.Core.PluginFramework.IExtension.ExtensionAttribute
  commentId: P:Sdl.Core.PluginFramework.IExtension.ExtensionAttribute
  id: ExtensionAttribute
  parent: Sdl.Core.PluginFramework.IExtension
  langs:
  - csharp
  - vb
  name: ExtensionAttribute
  nameWithType: IExtension.ExtensionAttribute
  fullName: Sdl.Core.PluginFramework.IExtension.ExtensionAttribute
  type: Property
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Gets the extension attribute that represents this extension.
  example: []
  syntax:
    content: ExtensionAttribute ExtensionAttribute { get; }
    parameters: []
    return:
      type: Sdl.Core.PluginFramework.ExtensionAttribute
    content.vb: ReadOnly Property ExtensionAttribute As ExtensionAttribute
  overload: Sdl.Core.PluginFramework.IExtension.ExtensionAttribute*
- uid: Sdl.Core.PluginFramework.IExtension.ExtensionType
  commentId: P:Sdl.Core.PluginFramework.IExtension.ExtensionType
  id: ExtensionType
  parent: Sdl.Core.PluginFramework.IExtension
  langs:
  - csharp
  - vb
  name: ExtensionType
  nameWithType: IExtension.ExtensionType
  fullName: Sdl.Core.PluginFramework.IExtension.ExtensionType
  type: Property
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Gets the extension implementation type.
  example: []
  syntax:
    content: Type ExtensionType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: ReadOnly Property ExtensionType As Type
  overload: Sdl.Core.PluginFramework.IExtension.ExtensionType*
- uid: Sdl.Core.PluginFramework.IExtension.AuxiliaryExtensionAttributes
  commentId: P:Sdl.Core.PluginFramework.IExtension.AuxiliaryExtensionAttributes
  id: AuxiliaryExtensionAttributes
  parent: Sdl.Core.PluginFramework.IExtension
  langs:
  - csharp
  - vb
  name: AuxiliaryExtensionAttributes
  nameWithType: IExtension.AuxiliaryExtensionAttributes
  fullName: Sdl.Core.PluginFramework.IExtension.AuxiliaryExtensionAttributes
  type: Property
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Returns the read-only collection of auxiliary extension attributes, specifying more information about this extension.
  example: []
  syntax:
    content: AuxiliaryExtensionAttributeCollection AuxiliaryExtensionAttributes { get; }
    parameters: []
    return:
      type: Sdl.Core.PluginFramework.AuxiliaryExtensionAttributeCollection
    content.vb: ReadOnly Property AuxiliaryExtensionAttributes As AuxiliaryExtensionAttributeCollection
  overload: Sdl.Core.PluginFramework.IExtension.AuxiliaryExtensionAttributes*
- uid: Sdl.Core.PluginFramework.IExtension.EnabledChanged
  commentId: E:Sdl.Core.PluginFramework.IExtension.EnabledChanged
  id: EnabledChanged
  parent: Sdl.Core.PluginFramework.IExtension
  langs:
  - csharp
  - vb
  name: EnabledChanged
  nameWithType: IExtension.EnabledChanged
  fullName: Sdl.Core.PluginFramework.IExtension.EnabledChanged
  type: Event
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Raised when the <xref href="Sdl.Core.PluginFramework.IExtension.Enabled" data-throw-if-not-resolved="false"></xref> property changes.
  example: []
  syntax:
    content: event EventHandler<ExtensionEventArgs> EnabledChanged
    return:
      type: System.EventHandler{Sdl.Core.PluginFramework.ExtensionEventArgs}
    content.vb: Event EnabledChanged As EventHandler(Of ExtensionEventArgs)
references:
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
- uid: Sdl.Core.PluginFramework.IExtension.SetEnabled*
  commentId: Overload:Sdl.Core.PluginFramework.IExtension.SetEnabled
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtension.html#Sdl_Core_PluginFramework_IExtension_SetEnabled_System_Boolean_
  name: SetEnabled
  nameWithType: IExtension.SetEnabled
  fullName: Sdl.Core.PluginFramework.IExtension.SetEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.IExtension.CreateInstance*
  commentId: Overload:Sdl.Core.PluginFramework.IExtension.CreateInstance
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtension.html#Sdl_Core_PluginFramework_IExtension_CreateInstance
  name: CreateInstance
  nameWithType: IExtension.CreateInstance
  fullName: Sdl.Core.PluginFramework.IExtension.CreateInstance
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Sdl.Core.PluginFramework.IExtension.GetAuxiliaryExtensionAttributes*
  commentId: Overload:Sdl.Core.PluginFramework.IExtension.GetAuxiliaryExtensionAttributes
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtension.html#Sdl_Core_PluginFramework_IExtension_GetAuxiliaryExtensionAttributes__1
  name: GetAuxiliaryExtensionAttributes
  nameWithType: IExtension.GetAuxiliaryExtensionAttributes
  fullName: Sdl.Core.PluginFramework.IExtension.GetAuxiliaryExtensionAttributes
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: Sdl.Core.PluginFramework.IExtension.Validate*
  commentId: Overload:Sdl.Core.PluginFramework.IExtension.Validate
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtension.html#Sdl_Core_PluginFramework_IExtension_Validate
  name: Validate
  nameWithType: IExtension.Validate
  fullName: Sdl.Core.PluginFramework.IExtension.Validate
- uid: Sdl.Core.PluginFramework.IExtension.Plugin*
  commentId: Overload:Sdl.Core.PluginFramework.IExtension.Plugin
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtension.html#Sdl_Core_PluginFramework_IExtension_Plugin
  name: Plugin
  nameWithType: IExtension.Plugin
  fullName: Sdl.Core.PluginFramework.IExtension.Plugin
- uid: Sdl.Core.PluginFramework.IPlugin
  commentId: T:Sdl.Core.PluginFramework.IPlugin
  parent: Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.Core.PluginFramework.IPlugin.html
  name: IPlugin
  nameWithType: IPlugin
  fullName: Sdl.Core.PluginFramework.IPlugin
- uid: Sdl.Core.PluginFramework.IExtension.Enabled*
  commentId: Overload:Sdl.Core.PluginFramework.IExtension.Enabled
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtension.html#Sdl_Core_PluginFramework_IExtension_Enabled
  name: Enabled
  nameWithType: IExtension.Enabled
  fullName: Sdl.Core.PluginFramework.IExtension.Enabled
- uid: Sdl.Core.PluginFramework.IExtension.ExtensionPoint*
  commentId: Overload:Sdl.Core.PluginFramework.IExtension.ExtensionPoint
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtension.html#Sdl_Core_PluginFramework_IExtension_ExtensionPoint
  name: ExtensionPoint
  nameWithType: IExtension.ExtensionPoint
  fullName: Sdl.Core.PluginFramework.IExtension.ExtensionPoint
- uid: Sdl.Core.PluginFramework.IExtensionPoint
  commentId: T:Sdl.Core.PluginFramework.IExtensionPoint
  parent: Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtensionPoint.html
  name: IExtensionPoint
  nameWithType: IExtensionPoint
  fullName: Sdl.Core.PluginFramework.IExtensionPoint
- uid: Sdl.Core.PluginFramework.IExtension.ExtensionAttribute*
  commentId: Overload:Sdl.Core.PluginFramework.IExtension.ExtensionAttribute
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtension.html#Sdl_Core_PluginFramework_IExtension_ExtensionAttribute
  name: ExtensionAttribute
  nameWithType: IExtension.ExtensionAttribute
  fullName: Sdl.Core.PluginFramework.IExtension.ExtensionAttribute
- uid: Sdl.Core.PluginFramework.ExtensionAttribute
  commentId: T:Sdl.Core.PluginFramework.ExtensionAttribute
  parent: Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.Core.PluginFramework.ExtensionAttribute.html
  name: ExtensionAttribute
  nameWithType: ExtensionAttribute
  fullName: Sdl.Core.PluginFramework.ExtensionAttribute
- uid: Sdl.Core.PluginFramework.IExtension.ExtensionType*
  commentId: Overload:Sdl.Core.PluginFramework.IExtension.ExtensionType
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtension.html#Sdl_Core_PluginFramework_IExtension_ExtensionType
  name: ExtensionType
  nameWithType: IExtension.ExtensionType
  fullName: Sdl.Core.PluginFramework.IExtension.ExtensionType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Sdl.Core.PluginFramework.IExtension.AuxiliaryExtensionAttributes*
  commentId: Overload:Sdl.Core.PluginFramework.IExtension.AuxiliaryExtensionAttributes
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtension.html#Sdl_Core_PluginFramework_IExtension_AuxiliaryExtensionAttributes
  name: AuxiliaryExtensionAttributes
  nameWithType: IExtension.AuxiliaryExtensionAttributes
  fullName: Sdl.Core.PluginFramework.IExtension.AuxiliaryExtensionAttributes
- uid: Sdl.Core.PluginFramework.AuxiliaryExtensionAttributeCollection
  commentId: T:Sdl.Core.PluginFramework.AuxiliaryExtensionAttributeCollection
  parent: Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.Core.PluginFramework.AuxiliaryExtensionAttributeCollection.html
  name: AuxiliaryExtensionAttributeCollection
  nameWithType: AuxiliaryExtensionAttributeCollection
  fullName: Sdl.Core.PluginFramework.AuxiliaryExtensionAttributeCollection
- uid: Sdl.Core.PluginFramework.IExtension.Enabled
  commentId: P:Sdl.Core.PluginFramework.IExtension.Enabled
  isExternal: true
  href: Sdl.Core.PluginFramework.IExtension.html#Sdl_Core_PluginFramework_IExtension_Enabled
  name: Enabled
  nameWithType: IExtension.Enabled
  fullName: Sdl.Core.PluginFramework.IExtension.Enabled
- uid: System.EventHandler{Sdl.Core.PluginFramework.ExtensionEventArgs}
  commentId: T:System.EventHandler{Sdl.Core.PluginFramework.ExtensionEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ExtensionEventArgs>
  nameWithType: EventHandler<ExtensionEventArgs>
  fullName: System.EventHandler<Sdl.Core.PluginFramework.ExtensionEventArgs>
  nameWithType.vb: EventHandler(Of ExtensionEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.Core.PluginFramework.ExtensionEventArgs)
  name.vb: EventHandler(Of ExtensionEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Sdl.Core.PluginFramework.ExtensionEventArgs
    name: ExtensionEventArgs
    isExternal: true
    href: Sdl.Core.PluginFramework.ExtensionEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sdl.Core.PluginFramework.ExtensionEventArgs
    name: ExtensionEventArgs
    isExternal: true
    href: Sdl.Core.PluginFramework.ExtensionEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
