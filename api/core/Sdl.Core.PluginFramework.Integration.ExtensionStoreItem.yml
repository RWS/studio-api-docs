### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem
  commentId: T:Sdl.Core.PluginFramework.Integration.ExtensionStoreItem
  id: ExtensionStoreItem
  parent: Sdl.Core.PluginFramework.Integration
  children:
  - Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.AttributeType
  - Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.DefaultInstance
  - Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.Extension
  - Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.ExtensionType
  - Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.References
  langs:
  - csharp
  - vb
  name: ExtensionStoreItem
  nameWithType: ExtensionStoreItem
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem
  type: Class
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: "\nImplements an item of the repository collection containing extension informations and its instances\n"
  syntax:
    content: 'public sealed class ExtensionStoreItem : Object'
    content.vb: >-
      Public NotInheritable Class ExtensionStoreItem
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.References
  commentId: F:Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.References
  id: References
  parent: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem
  langs:
  - csharp
  - vb
  name: References
  nameWithType: ExtensionStoreItem.References
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.References
  type: Field
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: "\nA list which stores all the extension related instances (like the adapted instances) and their type.\n"
  syntax:
    content: public readonly List<ValuePairTypeInstance> References
    return:
      type: System.Collections.Generic.List{Sdl.Core.PluginFramework.Integration.ValuePairTypeInstance}
    content.vb: Public ReadOnly References As List(Of ValuePairTypeInstance)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.AttributeType
  commentId: P:Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.AttributeType
  id: AttributeType
  parent: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem
  langs:
  - csharp
  - vb
  name: AttributeType
  nameWithType: ExtensionStoreItem.AttributeType
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.AttributeType
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: "\nExtension attribute type\n"
  syntax:
    content: public Type AttributeType { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Property AttributeType As Type
  overload: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.AttributeType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.Extension
  commentId: P:Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.Extension
  id: Extension
  parent: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem
  langs:
  - csharp
  - vb
  name: Extension
  nameWithType: ExtensionStoreItem.Extension
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.Extension
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: "\nExtension object\n"
  syntax:
    content: public IExtension Extension { get; set; }
    parameters: []
    return:
      type: Sdl.Core.PluginFramework.IExtension
    content.vb: Public Property Extension As IExtension
  overload: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.Extension*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.ExtensionType
  commentId: P:Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.ExtensionType
  id: ExtensionType
  parent: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem
  langs:
  - csharp
  - vb
  name: ExtensionType
  nameWithType: ExtensionStoreItem.ExtensionType
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.ExtensionType
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: "\nExtension type\n"
  syntax:
    content: public Type ExtensionType { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Property ExtensionType As Type
  overload: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.ExtensionType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.DefaultInstance
  commentId: P:Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.DefaultInstance
  id: DefaultInstance
  parent: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem
  langs:
  - csharp
  - vb
  name: DefaultInstance
  nameWithType: ExtensionStoreItem.DefaultInstance
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.DefaultInstance
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: "\nThe default instance of the extension\n"
  syntax:
    content: public object DefaultInstance { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property DefaultInstance As Object
  overload: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.DefaultInstance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.Core.PluginFramework.Integration
  commentId: N:Sdl.Core.PluginFramework.Integration
  isExternal: true
  name: Sdl.Core.PluginFramework.Integration
  nameWithType: Sdl.Core.PluginFramework.Integration
  fullName: Sdl.Core.PluginFramework.Integration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{Sdl.Core.PluginFramework.Integration.ValuePairTypeInstance}
  commentId: '!:System.Collections.Generic.List{Sdl.Core.PluginFramework.Integration.ValuePairTypeInstance}'
  definition: System.Collections.Generic.List`1
  name: List<ValuePairTypeInstance>
  nameWithType: List<ValuePairTypeInstance>
  fullName: System.Collections.Generic.List<Sdl.Core.PluginFramework.Integration.ValuePairTypeInstance>
  nameWithType.vb: List(Of ValuePairTypeInstance)
  fullName.vb: System.Collections.Generic.List(Of Sdl.Core.PluginFramework.Integration.ValuePairTypeInstance)
  name.vb: List(Of ValuePairTypeInstance)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Core.PluginFramework.Integration.ValuePairTypeInstance
    name: ValuePairTypeInstance
    nameWithType: ValuePairTypeInstance
    fullName: Sdl.Core.PluginFramework.Integration.ValuePairTypeInstance
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Core.PluginFramework.Integration.ValuePairTypeInstance
    name: ValuePairTypeInstance
    nameWithType: ValuePairTypeInstance
    fullName: Sdl.Core.PluginFramework.Integration.ValuePairTypeInstance
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.AttributeType*
  commentId: Overload:Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.AttributeType
  isExternal: true
  name: AttributeType
  nameWithType: ExtensionStoreItem.AttributeType
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.AttributeType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.Extension*
  commentId: Overload:Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.Extension
  isExternal: true
  name: Extension
  nameWithType: ExtensionStoreItem.Extension
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.Extension
- uid: Sdl.Core.PluginFramework.IExtension
  commentId: T:Sdl.Core.PluginFramework.IExtension
  parent: Sdl.Core.PluginFramework
  isExternal: true
  name: IExtension
  nameWithType: IExtension
  fullName: Sdl.Core.PluginFramework.IExtension
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.ExtensionType*
  commentId: Overload:Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.ExtensionType
  isExternal: true
  name: ExtensionType
  nameWithType: ExtensionStoreItem.ExtensionType
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.ExtensionType
- uid: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.DefaultInstance*
  commentId: Overload:Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.DefaultInstance
  isExternal: true
  name: DefaultInstance
  nameWithType: ExtensionStoreItem.DefaultInstance
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionStoreItem.DefaultInstance
