### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute
  commentId: T:Sdl.Core.PluginFramework.Util.SortableExtensionAttribute
  id: SortableExtensionAttribute
  parent: Sdl.Core.PluginFramework.Util
  children:
  - Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.#ctor
  - Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.#ctor(System.String,System.String,System.String)
  - Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.InsertAfter
  - Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.InsertBefore
  langs:
  - csharp
  - vb
  name: SortableExtensionAttribute
  nameWithType: SortableExtensionAttribute
  fullName: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute
  type: Class
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Util
  summary: "\nBase class for extension attributes that allow specifying topological sort information.\n"
  remarks: "\n<p>\nUse this attribute as a base when developing extension points that require the ability for their extensions \nto specify the order in which they should be used.\n</p>\n<p>\nIn order to consume extensions of a sortable extension point, use <xref href=\"Sdl.Core.PluginFramework.Util.SortedObjectRegistry%602\" data-throw-if-not-resolved=\"false\"></xref>\nif you want to create all extension instances at once. Use the <xref href=\"Sdl.Core.PluginFramework.Util.TopologicalSort%601\" data-throw-if-not-resolved=\"false\"></xref> class if you need more control \nover when the extensions are instantiated.\n</p>\n"
  syntax:
    content: 'public class SortableExtensionAttribute : ExtensionAttribute'
    content.vb: >-
      Public Class SortableExtensionAttribute
          Inherits ExtensionAttribute
  see:
  - linkId: Sdl.Core.PluginFramework.Util.TopologicalSort`1
    commentId: T:Sdl.Core.PluginFramework.Util.TopologicalSort`1
  inheritance:
  - System.Object
  - Sdl.Core.PluginFramework.ExtensionAttribute
  inheritedMembers:
  - Sdl.Core.PluginFramework.ExtensionAttribute.Validate(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo,Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
  - Sdl.Core.PluginFramework.ExtensionAttribute.ValidateId(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo,Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
  - Sdl.Core.PluginFramework.ExtensionAttribute.ValidateName(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo,Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
  - Sdl.Core.PluginFramework.ExtensionAttribute.Id
  - Sdl.Core.PluginFramework.ExtensionAttribute.Name
  - Sdl.Core.PluginFramework.ExtensionAttribute.Description
  - Sdl.Core.PluginFramework.ExtensionAttribute.Icon
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.#ctor
  commentId: M:Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.#ctor
  id: '#ctor'
  parent: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute
  langs:
  - csharp
  - vb
  name: SortableExtensionAttribute()
  nameWithType: SortableExtensionAttribute.SortableExtensionAttribute()
  fullName: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.SortableExtensionAttribute()
  type: Constructor
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Util
  summary: "\nDefault constructor for XML serialization.\n"
  syntax:
    content: public SortableExtensionAttribute()
    content.vb: Public Sub New
  overload: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.#ctor(System.String,System.String,System.String)
  commentId: M:Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute
  langs:
  - csharp
  - vb
  name: SortableExtensionAttribute(String, String, String)
  nameWithType: SortableExtensionAttribute.SortableExtensionAttribute(String, String, String)
  fullName: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.SortableExtensionAttribute(System.String, System.String, System.String)
  type: Constructor
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Util
  summary: "\nConstructor with required attributes.\n"
  syntax:
    content: public SortableExtensionAttribute(string id, string name, string description)
    parameters:
    - id: id
      type: System.String
      description: The unique id for the extension.
    - id: name
      type: System.String
      description: The name for the extension. Should typically be a key of a resource string in PluginResources.resx.
    - id: description
      type: System.String
      description: The description for the extension. Should typically be a key of a resource string in PluginResources.resx.
    content.vb: Public Sub New(id As String, name As String, description As String)
  overload: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.InsertBefore
  commentId: P:Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.InsertBefore
  id: InsertBefore
  parent: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute
  langs:
  - csharp
  - vb
  name: InsertBefore
  nameWithType: SortableExtensionAttribute.InsertBefore
  fullName: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.InsertBefore
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Util
  summary: "\nGets or sets the id of the extension before which this extension should be inserted.\n"
  syntax:
    content: public string InsertBefore { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InsertBefore As String
  overload: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.InsertBefore*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.InsertAfter
  commentId: P:Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.InsertAfter
  id: InsertAfter
  parent: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute
  langs:
  - csharp
  - vb
  name: InsertAfter
  nameWithType: SortableExtensionAttribute.InsertAfter
  fullName: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.InsertAfter
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Util
  summary: "\nGets or sets the id of the extension after which this extension should be inserted.\n"
  syntax:
    content: public string InsertAfter { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InsertAfter As String
  overload: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.InsertAfter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.Core.PluginFramework.Util
  commentId: N:Sdl.Core.PluginFramework.Util
  isExternal: true
  name: Sdl.Core.PluginFramework.Util
  nameWithType: Sdl.Core.PluginFramework.Util
  fullName: Sdl.Core.PluginFramework.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.Core.PluginFramework.ExtensionAttribute
  commentId: T:Sdl.Core.PluginFramework.ExtensionAttribute
  parent: Sdl.Core.PluginFramework
  isExternal: true
  name: ExtensionAttribute
  nameWithType: ExtensionAttribute
  fullName: Sdl.Core.PluginFramework.ExtensionAttribute
- uid: Sdl.Core.PluginFramework.ExtensionAttribute.Validate(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo,Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
  commentId: M:Sdl.Core.PluginFramework.ExtensionAttribute.Validate(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo,Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
  parent: Sdl.Core.PluginFramework.ExtensionAttribute
  isExternal: true
  name: Validate(IExtensionAttributeInfo, IExtensionValidationContext)
  nameWithType: ExtensionAttribute.Validate(IExtensionAttributeInfo, IExtensionValidationContext)
  fullName: Sdl.Core.PluginFramework.ExtensionAttribute.Validate(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo, Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.ExtensionAttribute.Validate(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo,Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
    name: Validate
    nameWithType: ExtensionAttribute.Validate
    fullName: Sdl.Core.PluginFramework.ExtensionAttribute.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
    name: IExtensionAttributeInfo
    nameWithType: IExtensionAttributeInfo
    fullName: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.Core.PluginFramework.Validation.IExtensionValidationContext
    name: IExtensionValidationContext
    nameWithType: IExtensionValidationContext
    fullName: Sdl.Core.PluginFramework.Validation.IExtensionValidationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.PluginFramework.ExtensionAttribute.Validate(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo,Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
    name: Validate
    nameWithType: ExtensionAttribute.Validate
    fullName: Sdl.Core.PluginFramework.ExtensionAttribute.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
    name: IExtensionAttributeInfo
    nameWithType: IExtensionAttributeInfo
    fullName: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.Core.PluginFramework.Validation.IExtensionValidationContext
    name: IExtensionValidationContext
    nameWithType: IExtensionValidationContext
    fullName: Sdl.Core.PluginFramework.Validation.IExtensionValidationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.PluginFramework.ExtensionAttribute.ValidateId(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo,Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
  commentId: M:Sdl.Core.PluginFramework.ExtensionAttribute.ValidateId(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo,Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
  parent: Sdl.Core.PluginFramework.ExtensionAttribute
  isExternal: true
  name: ValidateId(IExtensionAttributeInfo, IExtensionValidationContext)
  nameWithType: ExtensionAttribute.ValidateId(IExtensionAttributeInfo, IExtensionValidationContext)
  fullName: Sdl.Core.PluginFramework.ExtensionAttribute.ValidateId(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo, Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.ExtensionAttribute.ValidateId(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo,Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
    name: ValidateId
    nameWithType: ExtensionAttribute.ValidateId
    fullName: Sdl.Core.PluginFramework.ExtensionAttribute.ValidateId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
    name: IExtensionAttributeInfo
    nameWithType: IExtensionAttributeInfo
    fullName: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.Core.PluginFramework.Validation.IExtensionValidationContext
    name: IExtensionValidationContext
    nameWithType: IExtensionValidationContext
    fullName: Sdl.Core.PluginFramework.Validation.IExtensionValidationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.PluginFramework.ExtensionAttribute.ValidateId(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo,Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
    name: ValidateId
    nameWithType: ExtensionAttribute.ValidateId
    fullName: Sdl.Core.PluginFramework.ExtensionAttribute.ValidateId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
    name: IExtensionAttributeInfo
    nameWithType: IExtensionAttributeInfo
    fullName: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.Core.PluginFramework.Validation.IExtensionValidationContext
    name: IExtensionValidationContext
    nameWithType: IExtensionValidationContext
    fullName: Sdl.Core.PluginFramework.Validation.IExtensionValidationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.PluginFramework.ExtensionAttribute.ValidateName(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo,Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
  commentId: M:Sdl.Core.PluginFramework.ExtensionAttribute.ValidateName(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo,Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
  parent: Sdl.Core.PluginFramework.ExtensionAttribute
  isExternal: true
  name: ValidateName(IExtensionAttributeInfo, IExtensionValidationContext)
  nameWithType: ExtensionAttribute.ValidateName(IExtensionAttributeInfo, IExtensionValidationContext)
  fullName: Sdl.Core.PluginFramework.ExtensionAttribute.ValidateName(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo, Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.ExtensionAttribute.ValidateName(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo,Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
    name: ValidateName
    nameWithType: ExtensionAttribute.ValidateName
    fullName: Sdl.Core.PluginFramework.ExtensionAttribute.ValidateName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
    name: IExtensionAttributeInfo
    nameWithType: IExtensionAttributeInfo
    fullName: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.Core.PluginFramework.Validation.IExtensionValidationContext
    name: IExtensionValidationContext
    nameWithType: IExtensionValidationContext
    fullName: Sdl.Core.PluginFramework.Validation.IExtensionValidationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.PluginFramework.ExtensionAttribute.ValidateName(Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo,Sdl.Core.PluginFramework.Validation.IExtensionValidationContext)
    name: ValidateName
    nameWithType: ExtensionAttribute.ValidateName
    fullName: Sdl.Core.PluginFramework.ExtensionAttribute.ValidateName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
    name: IExtensionAttributeInfo
    nameWithType: IExtensionAttributeInfo
    fullName: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.Core.PluginFramework.Validation.IExtensionValidationContext
    name: IExtensionValidationContext
    nameWithType: IExtensionValidationContext
    fullName: Sdl.Core.PluginFramework.Validation.IExtensionValidationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.PluginFramework.ExtensionAttribute.Id
  commentId: P:Sdl.Core.PluginFramework.ExtensionAttribute.Id
  parent: Sdl.Core.PluginFramework.ExtensionAttribute
  isExternal: true
  name: Id
  nameWithType: ExtensionAttribute.Id
  fullName: Sdl.Core.PluginFramework.ExtensionAttribute.Id
- uid: Sdl.Core.PluginFramework.ExtensionAttribute.Name
  commentId: P:Sdl.Core.PluginFramework.ExtensionAttribute.Name
  parent: Sdl.Core.PluginFramework.ExtensionAttribute
  isExternal: true
  name: Name
  nameWithType: ExtensionAttribute.Name
  fullName: Sdl.Core.PluginFramework.ExtensionAttribute.Name
- uid: Sdl.Core.PluginFramework.ExtensionAttribute.Description
  commentId: P:Sdl.Core.PluginFramework.ExtensionAttribute.Description
  parent: Sdl.Core.PluginFramework.ExtensionAttribute
  isExternal: true
  name: Description
  nameWithType: ExtensionAttribute.Description
  fullName: Sdl.Core.PluginFramework.ExtensionAttribute.Description
- uid: Sdl.Core.PluginFramework.ExtensionAttribute.Icon
  commentId: P:Sdl.Core.PluginFramework.ExtensionAttribute.Icon
  parent: Sdl.Core.PluginFramework.ExtensionAttribute
  isExternal: true
  name: Icon
  nameWithType: ExtensionAttribute.Icon
  fullName: Sdl.Core.PluginFramework.ExtensionAttribute.Icon
- uid: Sdl.Core.PluginFramework.Util.TopologicalSort`1
  commentId: T:Sdl.Core.PluginFramework.Util.TopologicalSort`1
  isExternal: true
  name: TopologicalSort<T>
  nameWithType: TopologicalSort<T>
  fullName: Sdl.Core.PluginFramework.Util.TopologicalSort<T>
  nameWithType.vb: TopologicalSort(Of T)
  fullName.vb: Sdl.Core.PluginFramework.Util.TopologicalSort(Of T)
  name.vb: TopologicalSort(Of T)
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.Util.TopologicalSort`1
    name: TopologicalSort
    nameWithType: TopologicalSort
    fullName: Sdl.Core.PluginFramework.Util.TopologicalSort
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.Core.PluginFramework.Util.TopologicalSort`1
    name: TopologicalSort
    nameWithType: TopologicalSort
    fullName: Sdl.Core.PluginFramework.Util.TopologicalSort
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.#ctor*
  commentId: Overload:Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.#ctor
  isExternal: true
  name: SortableExtensionAttribute
  nameWithType: SortableExtensionAttribute.SortableExtensionAttribute
  fullName: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.SortableExtensionAttribute
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.InsertBefore*
  commentId: Overload:Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.InsertBefore
  isExternal: true
  name: InsertBefore
  nameWithType: SortableExtensionAttribute.InsertBefore
  fullName: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.InsertBefore
- uid: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.InsertAfter*
  commentId: Overload:Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.InsertAfter
  isExternal: true
  name: InsertAfter
  nameWithType: SortableExtensionAttribute.InsertAfter
  fullName: Sdl.Core.PluginFramework.Util.SortableExtensionAttribute.InsertAfter
