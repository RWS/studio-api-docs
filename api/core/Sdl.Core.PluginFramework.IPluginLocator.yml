### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.IPluginLocator
  commentId: T:Sdl.Core.PluginFramework.IPluginLocator
  id: IPluginLocator
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors
  langs:
  - csharp
  - vb
  name: IPluginLocator
  nameWithType: IPluginLocator
  fullName: Sdl.Core.PluginFramework.IPluginLocator
  type: Interface
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Represents a plug-in locator, which is used by a plug-in registry to locate plug-ins.
  remarks: >-
    <p>The framework includes one implementation, <xref href="Sdl.Core.PluginFramework.DefaultPluginLocator" data-throw-if-not-resolved="false"></xref>, which loads locates plug-ins within

    a directory on the local file system.</p>

    <p>The plug-in locator is automatically disposed when the plug-in registry that owns it is disposed.</p>
  example: []
  syntax:
    content: 'public interface IPluginLocator : IDisposable'
    content.vb: Public Interface IPluginLocator Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
- uid: Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors
  commentId: M:Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors
  id: GetPluginDescriptors
  parent: Sdl.Core.PluginFramework.IPluginLocator
  langs:
  - csharp
  - vb
  name: GetPluginDescriptors()
  nameWithType: IPluginLocator.GetPluginDescriptors()
  fullName: Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors()
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Returns an array of plug-in descriptors for plug-ins found.
  example: []
  syntax:
    content: IPluginDescriptor[] GetPluginDescriptors()
    return:
      type: Sdl.Core.PluginFramework.IPluginDescriptor[]
      description: An array of plug-in descriptors.
    content.vb: Function GetPluginDescriptors() As IPluginDescriptor()
  overload: Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors*
references:
- uid: Sdl.Core.PluginFramework.DefaultPluginLocator
  commentId: T:Sdl.Core.PluginFramework.DefaultPluginLocator
  isExternal: true
  href: Sdl.Core.PluginFramework.DefaultPluginLocator.html
  name: DefaultPluginLocator
  nameWithType: DefaultPluginLocator
  fullName: Sdl.Core.PluginFramework.DefaultPluginLocator
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors*
  commentId: Overload:Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors
  isExternal: true
  href: Sdl.Core.PluginFramework.IPluginLocator.html#Sdl_Core_PluginFramework_IPluginLocator_GetPluginDescriptors
  name: GetPluginDescriptors
  nameWithType: IPluginLocator.GetPluginDescriptors
  fullName: Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors
- uid: Sdl.Core.PluginFramework.IPluginDescriptor[]
  isExternal: true
  href: Sdl.Core.PluginFramework.IPluginDescriptor.html
  name: IPluginDescriptor[]
  nameWithType: IPluginDescriptor[]
  fullName: Sdl.Core.PluginFramework.IPluginDescriptor[]
  nameWithType.vb: IPluginDescriptor()
  fullName.vb: Sdl.Core.PluginFramework.IPluginDescriptor()
  name.vb: IPluginDescriptor()
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.IPluginDescriptor
    name: IPluginDescriptor
    isExternal: true
    href: Sdl.Core.PluginFramework.IPluginDescriptor.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Sdl.Core.PluginFramework.IPluginDescriptor
    name: IPluginDescriptor
    isExternal: true
    href: Sdl.Core.PluginFramework.IPluginDescriptor.html
  - name: (
  - name: )
