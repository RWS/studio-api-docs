### YamlMime:ManagedReference
items:
- uid: Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi
  commentId: T:Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi
  id: UnitMetadataApi
  parent: Sdl.Core.Globalization.UnitMetadata
  children:
  - Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi.Instance
  - Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi.Registry
  langs:
  - csharp
  - vb
  name: UnitMetadataApi
  nameWithType: UnitMetadataApi
  fullName: Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi
  type: Class
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization.UnitMetadata
  syntax:
    content: public sealed class UnitMetadataApi
    content.vb: Public NotInheritable Class UnitMetadataApi
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi.Instance
  commentId: P:Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi.Instance
  id: Instance
  parent: Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: UnitMetadataApi.Instance
  fullName: Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi.Instance
  type: Property
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization.UnitMetadata
  syntax:
    content: public static UnitMetadataApi Instance { get; }
    parameters: []
    return:
      type: Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi
    content.vb: Public Shared ReadOnly Property Instance As UnitMetadataApi
  overload: Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi.Registry
  commentId: P:Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi.Registry
  id: Registry
  parent: Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi
  langs:
  - csharp
  - vb
  name: Registry
  nameWithType: UnitMetadataApi.Registry
  fullName: Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi.Registry
  type: Property
  source:
    path: Sdl.Core.Globalization
    isExternal: true
  assemblies:
  - Sdl.Core.Globalization
  namespace: Sdl.Core.Globalization.UnitMetadata
  syntax:
    content: public UnitMetadataRegistry Registry { get; }
    parameters: []
    return:
      type: Sdl.Core.Globalization.UnitMetadata.UnitMetadataRegistry
    content.vb: Public ReadOnly Property Registry As UnitMetadataRegistry
  overload: Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi.Registry*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.Core.Globalization.UnitMetadata
  commentId: N:Sdl.Core.Globalization.UnitMetadata
  isExternal: true
  name: Sdl.Core.Globalization.UnitMetadata
  nameWithType: Sdl.Core.Globalization.UnitMetadata
  fullName: Sdl.Core.Globalization.UnitMetadata
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi.Instance*
  commentId: Overload:Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi.Instance
  isExternal: true
  name: Instance
  nameWithType: UnitMetadataApi.Instance
  fullName: Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi.Instance
- uid: Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi
  commentId: T:Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi
  parent: Sdl.Core.Globalization.UnitMetadata
  isExternal: true
  name: UnitMetadataApi
  nameWithType: UnitMetadataApi
  fullName: Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi
- uid: Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi.Registry*
  commentId: Overload:Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi.Registry
  isExternal: true
  name: Registry
  nameWithType: UnitMetadataApi.Registry
  fullName: Sdl.Core.Globalization.UnitMetadata.UnitMetadataApi.Registry
- uid: Sdl.Core.Globalization.UnitMetadata.UnitMetadataRegistry
  commentId: T:Sdl.Core.Globalization.UnitMetadata.UnitMetadataRegistry
  parent: Sdl.Core.Globalization.UnitMetadata
  isExternal: true
  name: UnitMetadataRegistry
  nameWithType: UnitMetadataRegistry
  fullName: Sdl.Core.Globalization.UnitMetadata.UnitMetadataRegistry
