### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.DefaultPluginLocator
  commentId: T:Sdl.Core.PluginFramework.DefaultPluginLocator
  id: DefaultPluginLocator
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.DefaultPluginLocator.#ctor
  - Sdl.Core.PluginFramework.DefaultPluginLocator.Dispose
  - Sdl.Core.PluginFramework.DefaultPluginLocator.GetPluginDescriptors
  - Sdl.Core.PluginFramework.DefaultPluginLocator.SystemPluginsDirectory
  langs:
  - csharp
  - vb
  name: DefaultPluginLocator
  nameWithType: DefaultPluginLocator
  fullName: Sdl.Core.PluginFramework.DefaultPluginLocator
  type: Class
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: >-
    Implementation of a plug-in locator (<xref href="Sdl.Core.PluginFramework.IPluginLocator" data-throw-if-not-resolved="false"></xref>) which loads locates plug-ins within

    a directory on the local file system and an OpenExchange directory that contains sub-folders with individual plug-ins.
  example: []
  syntax:
    content: 'public sealed class DefaultPluginLocator : IPluginLocator, IDisposable'
    content.vb: Public NotInheritable Class DefaultPluginLocator Implements IPluginLocator, IDisposable
  inheritance:
  - System.Object
  implements:
  - Sdl.Core.PluginFramework.IPluginLocator
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
- uid: Sdl.Core.PluginFramework.DefaultPluginLocator.#ctor
  commentId: M:Sdl.Core.PluginFramework.DefaultPluginLocator.#ctor
  id: '#ctor'
  parent: Sdl.Core.PluginFramework.DefaultPluginLocator
  langs:
  - csharp
  - vb
  name: DefaultPluginLocator()
  nameWithType: DefaultPluginLocator.DefaultPluginLocator()
  fullName: Sdl.Core.PluginFramework.DefaultPluginLocator.DefaultPluginLocator()
  type: Constructor
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: >-
    Creates a default plug-in locator, which loads plug-ins from a "Plugins" subfolder of the installation folder and

    will optionally search in a specified Open Exchange plug-in location.
  example: []
  syntax:
    content: public DefaultPluginLocator()
    content.vb: Public Sub New()
  overload: Sdl.Core.PluginFramework.DefaultPluginLocator.#ctor*
  nameWithType.vb: DefaultPluginLocator.New()
  fullName.vb: Sdl.Core.PluginFramework.DefaultPluginLocator.New()
  name.vb: New()
- uid: Sdl.Core.PluginFramework.DefaultPluginLocator.GetPluginDescriptors
  commentId: M:Sdl.Core.PluginFramework.DefaultPluginLocator.GetPluginDescriptors
  id: GetPluginDescriptors
  parent: Sdl.Core.PluginFramework.DefaultPluginLocator
  langs:
  - csharp
  - vb
  name: GetPluginDescriptors()
  nameWithType: DefaultPluginLocator.GetPluginDescriptors()
  fullName: Sdl.Core.PluginFramework.DefaultPluginLocator.GetPluginDescriptors()
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Returns an array of plug-in descriptors for plug-ins found.
  remarks: This locator looks for plug-in manifest files with the extension ".plugin.xml".
  example: []
  syntax:
    content: public IPluginDescriptor[] GetPluginDescriptors()
    return:
      type: Sdl.Core.PluginFramework.IPluginDescriptor[]
      description: An array of plug-in descriptors.
    content.vb: Public Function GetPluginDescriptors() As IPluginDescriptor()
  overload: Sdl.Core.PluginFramework.DefaultPluginLocator.GetPluginDescriptors*
  implements:
  - Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors
- uid: Sdl.Core.PluginFramework.DefaultPluginLocator.Dispose
  commentId: M:Sdl.Core.PluginFramework.DefaultPluginLocator.Dispose
  id: Dispose
  parent: Sdl.Core.PluginFramework.DefaultPluginLocator
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: DefaultPluginLocator.Dispose()
  fullName: Sdl.Core.PluginFramework.DefaultPluginLocator.Dispose()
  type: Method
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Disposes the plug-in locator.
  remarks: This method is called automatically when the owning plug-in registry is disposed.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Sdl.Core.PluginFramework.DefaultPluginLocator.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: Sdl.Core.PluginFramework.DefaultPluginLocator.SystemPluginsDirectory
  commentId: P:Sdl.Core.PluginFramework.DefaultPluginLocator.SystemPluginsDirectory
  id: SystemPluginsDirectory
  parent: Sdl.Core.PluginFramework.DefaultPluginLocator
  langs:
  - csharp
  - vb
  name: SystemPluginsDirectory
  nameWithType: DefaultPluginLocator.SystemPluginsDirectory
  fullName: Sdl.Core.PluginFramework.DefaultPluginLocator.SystemPluginsDirectory
  type: Property
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: Gets the system plug-ins directory.
  example: []
  syntax:
    content: public string SystemPluginsDirectory { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SystemPluginsDirectory As String
  overload: Sdl.Core.PluginFramework.DefaultPluginLocator.SystemPluginsDirectory*
references:
- uid: Sdl.Core.PluginFramework.IPluginLocator
  commentId: T:Sdl.Core.PluginFramework.IPluginLocator
  parent: Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.Core.PluginFramework.IPluginLocator.html
  name: IPluginLocator
  nameWithType: IPluginLocator
  fullName: Sdl.Core.PluginFramework.IPluginLocator
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.PluginFramework
    name: PluginFramework
    isExternal: true
    href: Sdl.Core.PluginFramework.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.DefaultPluginLocator.#ctor*
  commentId: Overload:Sdl.Core.PluginFramework.DefaultPluginLocator.#ctor
  isExternal: true
  href: Sdl.Core.PluginFramework.DefaultPluginLocator.html#Sdl_Core_PluginFramework_DefaultPluginLocator__ctor
  name: DefaultPluginLocator
  nameWithType: DefaultPluginLocator.DefaultPluginLocator
  fullName: Sdl.Core.PluginFramework.DefaultPluginLocator.DefaultPluginLocator
  nameWithType.vb: DefaultPluginLocator.New
  fullName.vb: Sdl.Core.PluginFramework.DefaultPluginLocator.New
  name.vb: New
- uid: Sdl.Core.PluginFramework.DefaultPluginLocator.GetPluginDescriptors*
  commentId: Overload:Sdl.Core.PluginFramework.DefaultPluginLocator.GetPluginDescriptors
  isExternal: true
  href: Sdl.Core.PluginFramework.DefaultPluginLocator.html#Sdl_Core_PluginFramework_DefaultPluginLocator_GetPluginDescriptors
  name: GetPluginDescriptors
  nameWithType: DefaultPluginLocator.GetPluginDescriptors
  fullName: Sdl.Core.PluginFramework.DefaultPluginLocator.GetPluginDescriptors
- uid: Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors
  commentId: M:Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors
  parent: Sdl.Core.PluginFramework.IPluginLocator
  isExternal: true
  href: Sdl.Core.PluginFramework.IPluginLocator.html#Sdl_Core_PluginFramework_IPluginLocator_GetPluginDescriptors
  name: GetPluginDescriptors()
  nameWithType: IPluginLocator.GetPluginDescriptors()
  fullName: Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors()
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors
    name: GetPluginDescriptors
    isExternal: true
    href: Sdl.Core.PluginFramework.IPluginLocator.html#Sdl_Core_PluginFramework_IPluginLocator_GetPluginDescriptors
  - name: (
  - name: )
  spec.vb:
  - uid: Sdl.Core.PluginFramework.IPluginLocator.GetPluginDescriptors
    name: GetPluginDescriptors
    isExternal: true
    href: Sdl.Core.PluginFramework.IPluginLocator.html#Sdl_Core_PluginFramework_IPluginLocator_GetPluginDescriptors
  - name: (
  - name: )
- uid: Sdl.Core.PluginFramework.IPluginDescriptor[]
  isExternal: true
  href: Sdl.Core.PluginFramework.IPluginDescriptor.html
  name: IPluginDescriptor[]
  nameWithType: IPluginDescriptor[]
  fullName: Sdl.Core.PluginFramework.IPluginDescriptor[]
  nameWithType.vb: IPluginDescriptor()
  fullName.vb: Sdl.Core.PluginFramework.IPluginDescriptor()
  name.vb: IPluginDescriptor()
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.IPluginDescriptor
    name: IPluginDescriptor
    isExternal: true
    href: Sdl.Core.PluginFramework.IPluginDescriptor.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Sdl.Core.PluginFramework.IPluginDescriptor
    name: IPluginDescriptor
    isExternal: true
    href: Sdl.Core.PluginFramework.IPluginDescriptor.html
  - name: (
  - name: )
- uid: Sdl.Core.PluginFramework.DefaultPluginLocator.Dispose*
  commentId: Overload:Sdl.Core.PluginFramework.DefaultPluginLocator.Dispose
  isExternal: true
  href: Sdl.Core.PluginFramework.DefaultPluginLocator.html#Sdl_Core_PluginFramework_DefaultPluginLocator_Dispose
  name: Dispose
  nameWithType: DefaultPluginLocator.Dispose
  fullName: Sdl.Core.PluginFramework.DefaultPluginLocator.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Sdl.Core.PluginFramework.DefaultPluginLocator.SystemPluginsDirectory*
  commentId: Overload:Sdl.Core.PluginFramework.DefaultPluginLocator.SystemPluginsDirectory
  isExternal: true
  href: Sdl.Core.PluginFramework.DefaultPluginLocator.html#Sdl_Core_PluginFramework_DefaultPluginLocator_SystemPluginsDirectory
  name: SystemPluginsDirectory
  nameWithType: DefaultPluginLocator.SystemPluginsDirectory
  fullName: Sdl.Core.PluginFramework.DefaultPluginLocator.SystemPluginsDirectory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
