### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask
  commentId: T:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask
  id: AbstractFileContentProcessingAutomaticTask
  parent: Sdl.ProjectAutomation.AutomaticTasks
  children:
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.#ctor
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.Cancel(System.Boolean)
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.ConfigureConverter(Sdl.ProjectAutomation.Core.ProjectFile,Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter)
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.CreateReport(System.String,System.String,System.String)
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.CreateReport(System.String,System.String,System.String,Sdl.ProjectAutomation.AutomaticTasks.LanguageDirection)
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.GetSetting``1
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.GetWordCounter(Sdl.ProjectAutomation.Core.ProjectFile)
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.OnFileComplete(Sdl.ProjectAutomation.Core.ProjectFile,Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter)
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.OnInitializeTask
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.Project
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.ShouldProcessFile(Sdl.ProjectAutomation.Core.ProjectFile)
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskComplete
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskFiles
  - Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskId
  langs:
  - csharp
  - vb
  name: AbstractFileContentProcessingAutomaticTask
  nameWithType: AbstractFileContentProcessingAutomaticTask
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask
  type: Class
  source:
    path: Sdl.ProjectAutomation.AutomaticTasks
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  syntax:
    content: public abstract class AbstractFileContentProcessingAutomaticTask
    content.vb: Public MustInherit Class AbstractFileContentProcessingAutomaticTask
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.GetSetting``1
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.GetSetting``1
  id: GetSetting``1
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask
  langs:
  - csharp
  - vb
  name: GetSetting<TSettings>()
  nameWithType: AbstractFileContentProcessingAutomaticTask.GetSetting<TSettings>()
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.GetSetting<TSettings>()
  type: Method
  source:
    path: Sdl.ProjectAutomation.AutomaticTasks
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  syntax:
    content: >-
      protected TSettings GetSetting<TSettings>()
          where TSettings : ISettingsGroup, new()
    typeParameters:
    - id: TSettings
    return:
      type: '{TSettings}'
    content.vb: Protected Function GetSetting(Of TSettings As {ISettingsGroup, New}) As TSettings
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.GetSetting*
  nameWithType.vb: AbstractFileContentProcessingAutomaticTask.GetSetting(Of TSettings)()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.GetSetting(Of TSettings)()
  name.vb: GetSetting(Of TSettings)()
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.OnInitializeTask
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.OnInitializeTask
  id: OnInitializeTask
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask
  langs:
  - csharp
  - vb
  name: OnInitializeTask()
  nameWithType: AbstractFileContentProcessingAutomaticTask.OnInitializeTask()
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.OnInitializeTask()
  type: Method
  source:
    path: Sdl.ProjectAutomation.AutomaticTasks
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  syntax:
    content: protected virtual void OnInitializeTask()
    content.vb: Protected Overridable Sub OnInitializeTask
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.OnInitializeTask*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskComplete
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskComplete
  id: TaskComplete
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask
  langs:
  - csharp
  - vb
  name: TaskComplete()
  nameWithType: AbstractFileContentProcessingAutomaticTask.TaskComplete()
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskComplete()
  type: Method
  source:
    path: Sdl.ProjectAutomation.AutomaticTasks
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  syntax:
    content: public virtual void TaskComplete()
    content.vb: Public Overridable Sub TaskComplete
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskComplete*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.Cancel(System.Boolean)
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.Cancel(System.Boolean)
  id: Cancel(System.Boolean)
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask
  langs:
  - csharp
  - vb
  name: Cancel(Boolean)
  nameWithType: AbstractFileContentProcessingAutomaticTask.Cancel(Boolean)
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.Cancel(System.Boolean)
  type: Method
  source:
    path: Sdl.ProjectAutomation.AutomaticTasks
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  syntax:
    content: public virtual void Cancel(bool doRollback)
    parameters:
    - id: doRollback
      type: System.Boolean
    content.vb: Public Overridable Sub Cancel(doRollback As Boolean)
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.Cancel*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.ShouldProcessFile(Sdl.ProjectAutomation.Core.ProjectFile)
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.ShouldProcessFile(Sdl.ProjectAutomation.Core.ProjectFile)
  id: ShouldProcessFile(Sdl.ProjectAutomation.Core.ProjectFile)
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask
  langs:
  - csharp
  - vb
  name: ShouldProcessFile(ProjectFile)
  nameWithType: AbstractFileContentProcessingAutomaticTask.ShouldProcessFile(ProjectFile)
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.ShouldProcessFile(Sdl.ProjectAutomation.Core.ProjectFile)
  type: Method
  source:
    path: Sdl.ProjectAutomation.AutomaticTasks
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  syntax:
    content: public virtual bool ShouldProcessFile(ProjectFile projectFile)
    parameters:
    - id: projectFile
      type: Sdl.ProjectAutomation.Core.ProjectFile
    return:
      type: System.Boolean
    content.vb: Public Overridable Function ShouldProcessFile(projectFile As ProjectFile) As Boolean
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.ShouldProcessFile*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.ConfigureConverter(Sdl.ProjectAutomation.Core.ProjectFile,Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter)
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.ConfigureConverter(Sdl.ProjectAutomation.Core.ProjectFile,Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter)
  id: ConfigureConverter(Sdl.ProjectAutomation.Core.ProjectFile,Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter)
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask
  langs:
  - csharp
  - vb
  name: ConfigureConverter(ProjectFile, IMultiFileConverter)
  nameWithType: AbstractFileContentProcessingAutomaticTask.ConfigureConverter(ProjectFile, IMultiFileConverter)
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.ConfigureConverter(Sdl.ProjectAutomation.Core.ProjectFile, Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter)
  type: Method
  source:
    path: Sdl.ProjectAutomation.AutomaticTasks
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  syntax:
    content: protected abstract void ConfigureConverter(ProjectFile projectFile, IMultiFileConverter multiFileConverter)
    parameters:
    - id: projectFile
      type: Sdl.ProjectAutomation.Core.ProjectFile
    - id: multiFileConverter
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
    content.vb: Protected MustOverride Sub ConfigureConverter(projectFile As ProjectFile, multiFileConverter As IMultiFileConverter)
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.ConfigureConverter*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.OnFileComplete(Sdl.ProjectAutomation.Core.ProjectFile,Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter)
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.OnFileComplete(Sdl.ProjectAutomation.Core.ProjectFile,Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter)
  id: OnFileComplete(Sdl.ProjectAutomation.Core.ProjectFile,Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter)
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask
  langs:
  - csharp
  - vb
  name: OnFileComplete(ProjectFile, IMultiFileConverter)
  nameWithType: AbstractFileContentProcessingAutomaticTask.OnFileComplete(ProjectFile, IMultiFileConverter)
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.OnFileComplete(Sdl.ProjectAutomation.Core.ProjectFile, Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter)
  type: Method
  source:
    path: Sdl.ProjectAutomation.AutomaticTasks
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  syntax:
    content: public virtual bool OnFileComplete(ProjectFile projectFile, IMultiFileConverter multiFileConverter)
    parameters:
    - id: projectFile
      type: Sdl.ProjectAutomation.Core.ProjectFile
    - id: multiFileConverter
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
    return:
      type: System.Boolean
    content.vb: Public Overridable Function OnFileComplete(projectFile As ProjectFile, multiFileConverter As IMultiFileConverter) As Boolean
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.OnFileComplete*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.CreateReport(System.String,System.String,System.String)
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.CreateReport(System.String,System.String,System.String)
  id: CreateReport(System.String,System.String,System.String)
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask
  langs:
  - csharp
  - vb
  name: CreateReport(String, String, String)
  nameWithType: AbstractFileContentProcessingAutomaticTask.CreateReport(String, String, String)
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.CreateReport(System.String, System.String, System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.AutomaticTasks
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  syntax:
    content: public void CreateReport(string name, string description, string data)
    parameters:
    - id: name
      type: System.String
    - id: description
      type: System.String
    - id: data
      type: System.String
    content.vb: Public Sub CreateReport(name As String, description As String, data As String)
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.CreateReport*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.CreateReport(System.String,System.String,System.String,Sdl.ProjectAutomation.AutomaticTasks.LanguageDirection)
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.CreateReport(System.String,System.String,System.String,Sdl.ProjectAutomation.AutomaticTasks.LanguageDirection)
  id: CreateReport(System.String,System.String,System.String,Sdl.ProjectAutomation.AutomaticTasks.LanguageDirection)
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask
  langs:
  - csharp
  - vb
  name: CreateReport(String, String, String, LanguageDirection)
  nameWithType: AbstractFileContentProcessingAutomaticTask.CreateReport(String, String, String, LanguageDirection)
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.CreateReport(System.String, System.String, System.String, Sdl.ProjectAutomation.AutomaticTasks.LanguageDirection)
  type: Method
  source:
    path: Sdl.ProjectAutomation.AutomaticTasks
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  syntax:
    content: public void CreateReport(string name, string description, string data, LanguageDirection languageDirection)
    parameters:
    - id: name
      type: System.String
    - id: description
      type: System.String
    - id: data
      type: System.String
    - id: languageDirection
      type: Sdl.ProjectAutomation.AutomaticTasks.LanguageDirection
    content.vb: Public Sub CreateReport(name As String, description As String, data As String, languageDirection As LanguageDirection)
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.CreateReport*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.GetWordCounter(Sdl.ProjectAutomation.Core.ProjectFile)
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.GetWordCounter(Sdl.ProjectAutomation.Core.ProjectFile)
  id: GetWordCounter(Sdl.ProjectAutomation.Core.ProjectFile)
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask
  langs:
  - csharp
  - vb
  name: GetWordCounter(ProjectFile)
  nameWithType: AbstractFileContentProcessingAutomaticTask.GetWordCounter(ProjectFile)
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.GetWordCounter(Sdl.ProjectAutomation.Core.ProjectFile)
  type: Method
  source:
    path: Sdl.ProjectAutomation.AutomaticTasks
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  syntax:
    content: public WordCounter GetWordCounter(ProjectFile projectFile)
    parameters:
    - id: projectFile
      type: Sdl.ProjectAutomation.Core.ProjectFile
    return:
      type: Sdl.ProjectAutomation.AutomaticTasks.WordCounter
    content.vb: Public Function GetWordCounter(projectFile As ProjectFile) As WordCounter
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.GetWordCounter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.#ctor
  commentId: M:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.#ctor
  id: '#ctor'
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask
  langs:
  - csharp
  - vb
  name: AbstractFileContentProcessingAutomaticTask()
  nameWithType: AbstractFileContentProcessingAutomaticTask.AbstractFileContentProcessingAutomaticTask()
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.AbstractFileContentProcessingAutomaticTask()
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.AutomaticTasks
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  syntax:
    content: protected AbstractFileContentProcessingAutomaticTask()
    content.vb: Protected Sub New
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.Project
  commentId: P:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.Project
  id: Project
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask
  langs:
  - csharp
  - vb
  name: Project
  nameWithType: AbstractFileContentProcessingAutomaticTask.Project
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.Project
  type: Property
  source:
    path: Sdl.ProjectAutomation.AutomaticTasks
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  syntax:
    content: public IProject Project { get; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.Core.IProject
    content.vb: Public ReadOnly Property Project As IProject
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.Project*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskFiles
  commentId: P:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskFiles
  id: TaskFiles
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask
  langs:
  - csharp
  - vb
  name: TaskFiles
  nameWithType: AbstractFileContentProcessingAutomaticTask.TaskFiles
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskFiles
  type: Property
  source:
    path: Sdl.ProjectAutomation.AutomaticTasks
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  syntax:
    content: public ProjectFile[] TaskFiles { get; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile[]
    content.vb: Public ReadOnly Property TaskFiles As ProjectFile()
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskFiles*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskId
  commentId: P:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskId
  id: TaskId
  parent: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask
  langs:
  - csharp
  - vb
  name: TaskId
  nameWithType: AbstractFileContentProcessingAutomaticTask.TaskId
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskId
  type: Property
  source:
    path: Sdl.ProjectAutomation.AutomaticTasks
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.AutomaticTasks
  namespace: Sdl.ProjectAutomation.AutomaticTasks
  syntax:
    content: public string TaskId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TaskId As String
  overload: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.ProjectAutomation.AutomaticTasks
  commentId: N:Sdl.ProjectAutomation.AutomaticTasks
  isExternal: true
  name: Sdl.ProjectAutomation.AutomaticTasks
  nameWithType: Sdl.ProjectAutomation.AutomaticTasks
  fullName: Sdl.ProjectAutomation.AutomaticTasks
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.GetSetting*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.GetSetting
  isExternal: true
  name: GetSetting
  nameWithType: AbstractFileContentProcessingAutomaticTask.GetSetting
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.GetSetting
- uid: '{TSettings}'
  commentId: '!:TSettings'
  definition: TSettings
  name: TSettings
  nameWithType: TSettings
  fullName: TSettings
- uid: TSettings
  commentId: '!:TSettings'
  name: TSettings
  nameWithType: TSettings
  fullName: TSettings
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.OnInitializeTask*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.OnInitializeTask
  isExternal: true
  name: OnInitializeTask
  nameWithType: AbstractFileContentProcessingAutomaticTask.OnInitializeTask
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.OnInitializeTask
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskComplete*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskComplete
  isExternal: true
  name: TaskComplete
  nameWithType: AbstractFileContentProcessingAutomaticTask.TaskComplete
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskComplete
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.Cancel*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.Cancel
  isExternal: true
  name: Cancel
  nameWithType: AbstractFileContentProcessingAutomaticTask.Cancel
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.Cancel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.ShouldProcessFile*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.ShouldProcessFile
  isExternal: true
  name: ShouldProcessFile
  nameWithType: AbstractFileContentProcessingAutomaticTask.ShouldProcessFile
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.ShouldProcessFile
- uid: Sdl.ProjectAutomation.Core.ProjectFile
  isExternal: true
  name: ProjectFile
  nameWithType: ProjectFile
  fullName: Sdl.ProjectAutomation.Core.ProjectFile
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.ConfigureConverter*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.ConfigureConverter
  isExternal: true
  name: ConfigureConverter
  nameWithType: AbstractFileContentProcessingAutomaticTask.ConfigureConverter
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.ConfigureConverter
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  isExternal: true
  name: IMultiFileConverter
  nameWithType: IMultiFileConverter
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.OnFileComplete*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.OnFileComplete
  isExternal: true
  name: OnFileComplete
  nameWithType: AbstractFileContentProcessingAutomaticTask.OnFileComplete
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.OnFileComplete
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.CreateReport*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.CreateReport
  isExternal: true
  name: CreateReport
  nameWithType: AbstractFileContentProcessingAutomaticTask.CreateReport
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.CreateReport
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.ProjectAutomation.AutomaticTasks.LanguageDirection
  commentId: T:Sdl.ProjectAutomation.AutomaticTasks.LanguageDirection
  parent: Sdl.ProjectAutomation.AutomaticTasks
  isExternal: true
  name: LanguageDirection
  nameWithType: LanguageDirection
  fullName: Sdl.ProjectAutomation.AutomaticTasks.LanguageDirection
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.GetWordCounter*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.GetWordCounter
  isExternal: true
  name: GetWordCounter
  nameWithType: AbstractFileContentProcessingAutomaticTask.GetWordCounter
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.GetWordCounter
- uid: Sdl.ProjectAutomation.AutomaticTasks.WordCounter
  commentId: T:Sdl.ProjectAutomation.AutomaticTasks.WordCounter
  parent: Sdl.ProjectAutomation.AutomaticTasks
  isExternal: true
  name: WordCounter
  nameWithType: WordCounter
  fullName: Sdl.ProjectAutomation.AutomaticTasks.WordCounter
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.#ctor
  isExternal: true
  name: AbstractFileContentProcessingAutomaticTask
  nameWithType: AbstractFileContentProcessingAutomaticTask.AbstractFileContentProcessingAutomaticTask
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.AbstractFileContentProcessingAutomaticTask
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.Project*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.Project
  isExternal: true
  name: Project
  nameWithType: AbstractFileContentProcessingAutomaticTask.Project
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.Project
- uid: Sdl.ProjectAutomation.Core.IProject
  isExternal: true
  name: IProject
  nameWithType: IProject
  fullName: Sdl.ProjectAutomation.Core.IProject
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskFiles*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskFiles
  isExternal: true
  name: TaskFiles
  nameWithType: AbstractFileContentProcessingAutomaticTask.TaskFiles
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskFiles
- uid: Sdl.ProjectAutomation.Core.ProjectFile[]
  isExternal: true
  name: ProjectFile[]
  nameWithType: ProjectFile[]
  fullName: Sdl.ProjectAutomation.Core.ProjectFile[]
  nameWithType.vb: ProjectFile()
  fullName.vb: Sdl.ProjectAutomation.Core.ProjectFile()
  name.vb: ProjectFile()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.ProjectFile
    name: ProjectFile
    nameWithType: ProjectFile
    fullName: Sdl.ProjectAutomation.Core.ProjectFile
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.ProjectFile
    name: ProjectFile
    nameWithType: ProjectFile
    fullName: Sdl.ProjectAutomation.Core.ProjectFile
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskId*
  commentId: Overload:Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskId
  isExternal: true
  name: TaskId
  nameWithType: AbstractFileContentProcessingAutomaticTask.TaskId
  fullName: Sdl.ProjectAutomation.AutomaticTasks.AbstractFileContentProcessingAutomaticTask.TaskId
