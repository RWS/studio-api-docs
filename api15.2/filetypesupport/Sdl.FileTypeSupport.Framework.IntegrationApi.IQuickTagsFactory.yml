### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory
  id: IQuickTagsFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.GetQuickTags(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.IsFileAgnostic
  langs:
  - csharp
  - vb
  name: IQuickTagsFactory
  nameWithType: IQuickTagsFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nInteface used to instantiate a set of QuickTags available\nfor a specific file. \n"
  remarks: "\n<p>Normally accessed via <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition.BuildQuickTagsFactory\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\nThe set of available QuickTags that are available for a file type sometimes depends on \nthe actual file itself (e.g. for TTX documents, the underlying file\nformat can vary significantly). However, for most file formats,\nthe set is the same for all document instances. You can check the\n<xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.IsFileAgnostic\" data-throw-if-not-resolved=\"false\"></xref> property to determine if this is the case.\n</p>\n"
  syntax:
    content: 'public interface IQuickTagsFactory : IFileTypeDefinitionAware'
    content.vb: >-
      Public Interface IQuickTagsFactory
          Inherits IFileTypeDefinitionAware
  inheritedMembers:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.GetQuickTags(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.GetQuickTags(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  id: GetQuickTags(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory
  langs:
  - csharp
  - vb
  name: GetQuickTags(IFileProperties)
  nameWithType: IQuickTagsFactory.GetQuickTags(IFileProperties)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.GetQuickTags(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets the set of QuickTags that can be used with the specified file.\n"
  remarks: "\n<p>\nThe file properties are used when initializing QuickTags for\nfile types such as TTX, for which the actual QuickTags available\ndepend on the underlying file format.\n</p>\n<p>\nFor most file formats, the QuickTags do not depend on the file\nproperties.\n</p>\n"
  syntax:
    content: IQuickTags GetQuickTags(IFileProperties fileProperties)
    parameters:
    - id: fileProperties
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
      description: "Properties of the file instance\nfor which the QuickTags should be specialized, or <code>null</code>\nto get a list of QuickTags that are available for all files \nof the type that the factory supports."
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTags
      description: >-
        An instance of IQuickTags, or <code>null</code> if no QuickTags

        are available for this file.
    content.vb: Function GetQuickTags(fileProperties As IFileProperties) As IQuickTags
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.GetQuickTags*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.IsFileAgnostic
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.IsFileAgnostic
  id: IsFileAgnostic
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory
  langs:
  - csharp
  - vb
  name: IsFileAgnostic
  nameWithType: IQuickTagsFactory.IsFileAgnostic
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.IsFileAgnostic
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReturns <code>true</code> if the set of QuickTags is the same for\nall files that the factory applies to, in which case passing \n<code>null</code> to <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.GetQuickTags(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)\" data-throw-if-not-resolved=\"false\"></xref> will yield the\nfull set of QuickTags for the document type.\n"
  syntax:
    content: bool IsFileAgnostic { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsFileAgnostic As Boolean
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.IsFileAgnostic*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
  isExternal: true
  name: FileTypeDefinition
  nameWithType: IFileTypeDefinitionAware.FileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileTypeDefinitionAware
  nameWithType: IFileTypeDefinitionAware
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.GetQuickTags*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.GetQuickTags
  isExternal: true
  name: GetQuickTags
  nameWithType: IQuickTagsFactory.GetQuickTags
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.GetQuickTags
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IFileProperties
  nameWithType: IFileProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTags
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTags
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IQuickTags
  nameWithType: IQuickTags
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTags
- uid: Sdl.FileTypeSupport.Framework.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.IsFileAgnostic*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.IsFileAgnostic
  isExternal: true
  name: IsFileAgnostic
  nameWithType: IQuickTagsFactory.IsFileAgnostic
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory.IsFileAgnostic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
