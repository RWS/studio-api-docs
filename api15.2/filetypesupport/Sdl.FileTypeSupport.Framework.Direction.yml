### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Direction
  commentId: T:Sdl.FileTypeSupport.Framework.Direction
  id: Direction
  parent: Sdl.FileTypeSupport.Framework
  children:
  - Sdl.FileTypeSupport.Framework.Direction.Inherit
  - Sdl.FileTypeSupport.Framework.Direction.LeftToRight
  - Sdl.FileTypeSupport.Framework.Direction.RightToLeft
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: Direction
  fullName: Sdl.FileTypeSupport.Framework.Direction
  type: Enum
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: "\nReading order directionality for text\n"
  syntax:
    content: public enum Direction
    content.vb: Public Enum Direction
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Sdl.FileTypeSupport.Framework.Direction.Inherit
  commentId: F:Sdl.FileTypeSupport.Framework.Direction.Inherit
  id: Inherit
  parent: Sdl.FileTypeSupport.Framework.Direction
  langs:
  - csharp
  - vb
  name: Inherit
  nameWithType: Direction.Inherit
  fullName: Sdl.FileTypeSupport.Framework.Direction.Inherit
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: "\nSame directionality as surrounding content, or the default directionality if none\n"
  syntax:
    content: Inherit = 0
    return:
      type: Sdl.FileTypeSupport.Framework.Direction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.FileTypeSupport.Framework.Direction.LeftToRight
  commentId: F:Sdl.FileTypeSupport.Framework.Direction.LeftToRight
  id: LeftToRight
  parent: Sdl.FileTypeSupport.Framework.Direction
  langs:
  - csharp
  - vb
  name: LeftToRight
  nameWithType: Direction.LeftToRight
  fullName: Sdl.FileTypeSupport.Framework.Direction.LeftToRight
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: "\nExplicit left-to-right reading order, independent of the surrounding content\n"
  syntax:
    content: LeftToRight = 1
    return:
      type: Sdl.FileTypeSupport.Framework.Direction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.FileTypeSupport.Framework.Direction.RightToLeft
  commentId: F:Sdl.FileTypeSupport.Framework.Direction.RightToLeft
  id: RightToLeft
  parent: Sdl.FileTypeSupport.Framework.Direction
  langs:
  - csharp
  - vb
  name: RightToLeft
  nameWithType: Direction.RightToLeft
  fullName: Sdl.FileTypeSupport.Framework.Direction.RightToLeft
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework
  summary: "\nExplicit right-to-left reading order, independent of the surrounding content\n"
  syntax:
    content: RightToLeft = 2
    return:
      type: Sdl.FileTypeSupport.Framework.Direction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Sdl.FileTypeSupport.Framework
  commentId: N:Sdl.FileTypeSupport.Framework
  isExternal: true
  name: Sdl.FileTypeSupport.Framework
  nameWithType: Sdl.FileTypeSupport.Framework
  fullName: Sdl.FileTypeSupport.Framework
- uid: Sdl.FileTypeSupport.Framework.Direction
  commentId: T:Sdl.FileTypeSupport.Framework.Direction
  parent: Sdl.FileTypeSupport.Framework
  isExternal: true
  name: Direction
  nameWithType: Direction
  fullName: Sdl.FileTypeSupport.Framework.Direction
