### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  id: IFileTypeComponentBuilder
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildAbstractGenerator(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildAdditionalGeneratorsInfo(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildBilingualGenerator(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileExtractor(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileGenerator(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileSniffer(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileTypeInformation(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewApplication(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewControl(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewSetsFactory(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildQuickTagsFactory(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildVerifierCollection(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.FileTypeManager
  langs:
  - csharp
  - vb
  name: IFileTypeComponentBuilder
  nameWithType: IFileTypeComponentBuilder
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nInterface implemented by anything that can create the components that make up a file type.\nThis may be achieved by reading from a configuration file, or by directly instantiating the objects (in an implementation specific to a file type).\n\nThe SpringFileTypeComponentBuilder implements this interface and uses the\nspring framework to do this.\n"
  syntax:
    content: 'public interface IFileTypeComponentBuilder : IFileTypeDefinitionAware'
    content.vb: >-
      Public Interface IFileTypeComponentBuilder
          Inherits IFileTypeDefinitionAware
  inheritedMembers:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileTypeInformation(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileTypeInformation(System.String)
  id: BuildFileTypeInformation(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  langs:
  - csharp
  - vb
  name: BuildFileTypeInformation(String)
  nameWithType: IFileTypeComponentBuilder.BuildFileTypeInformation(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileTypeInformation(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReturns a file type information object.\n"
  syntax:
    content: IFileTypeInformation BuildFileTypeInformation(string name)
    parameters:
    - id: name
      type: System.String
      description: The <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition" data-throw-if-not-resolved="false"></xref> will pass &quot;&quot; as the name for this parameter
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation
    content.vb: Function BuildFileTypeInformation(name As String) As IFileTypeInformation
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileTypeInformation*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildQuickTagsFactory(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildQuickTagsFactory(System.String)
  id: BuildQuickTagsFactory(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  langs:
  - csharp
  - vb
  name: BuildQuickTagsFactory(String)
  nameWithType: IFileTypeComponentBuilder.BuildQuickTagsFactory(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildQuickTagsFactory(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets the QuickTags object for this component.\n"
  syntax:
    content: IQuickTagsFactory BuildQuickTagsFactory(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory
    content.vb: Function BuildQuickTagsFactory(name As String) As IQuickTagsFactory
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildQuickTagsFactory*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileSniffer(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileSniffer(System.String)
  id: BuildFileSniffer(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  langs:
  - csharp
  - vb
  name: BuildFileSniffer(String)
  nameWithType: IFileTypeComponentBuilder.BuildFileSniffer(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileSniffer(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets the file sniffer for this component.\n"
  syntax:
    content: INativeFileSniffer BuildFileSniffer(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer
    content.vb: Function BuildFileSniffer(name As String) As INativeFileSniffer
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileSniffer*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileExtractor(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileExtractor(System.String)
  id: BuildFileExtractor(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  langs:
  - csharp
  - vb
  name: BuildFileExtractor(String)
  nameWithType: IFileTypeComponentBuilder.BuildFileExtractor(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileExtractor(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets the file extractor for this component.\n"
  syntax:
    content: IFileExtractor BuildFileExtractor(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
    content.vb: Function BuildFileExtractor(name As String) As IFileExtractor
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileExtractor*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileGenerator(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileGenerator(System.String)
  id: BuildFileGenerator(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  langs:
  - csharp
  - vb
  name: BuildFileGenerator(String)
  nameWithType: IFileTypeComponentBuilder.BuildFileGenerator(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileGenerator(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets the file generator for this component.\n"
  syntax:
    content: IFileGenerator BuildFileGenerator(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileGenerator
      description: <code>Null</code> if no file generator is defined
    content.vb: Function BuildFileGenerator(name As String) As IFileGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileGenerator*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildAdditionalGeneratorsInfo(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildAdditionalGeneratorsInfo(System.String)
  id: BuildAdditionalGeneratorsInfo(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  langs:
  - csharp
  - vb
  name: BuildAdditionalGeneratorsInfo(String)
  nameWithType: IFileTypeComponentBuilder.BuildAdditionalGeneratorsInfo(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildAdditionalGeneratorsInfo(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe the additional generator information for this file type\n"
  syntax:
    content: IAdditionalGeneratorsInfo BuildAdditionalGeneratorsInfo(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IAdditionalGeneratorsInfo
    content.vb: Function BuildAdditionalGeneratorsInfo(name As String) As IAdditionalGeneratorsInfo
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildAdditionalGeneratorsInfo*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildAbstractGenerator(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildAbstractGenerator(System.String)
  id: BuildAbstractGenerator(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  langs:
  - csharp
  - vb
  name: BuildAbstractGenerator(String)
  nameWithType: IFileTypeComponentBuilder.BuildAbstractGenerator(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildAbstractGenerator(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets a native or bilingual document generator of the type\ndefined for the specified name.\n"
  syntax:
    content: IAbstractGenerator BuildAbstractGenerator(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractGenerator
    content.vb: Function BuildAbstractGenerator(name As String) As IAbstractGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildAbstractGenerator*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewSetsFactory(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewSetsFactory(System.String)
  id: BuildPreviewSetsFactory(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  langs:
  - csharp
  - vb
  name: BuildPreviewSetsFactory(String)
  nameWithType: IFileTypeComponentBuilder.BuildPreviewSetsFactory(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewSetsFactory(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets the different sets of previews supported for this component.\n"
  syntax:
    content: IPreviewSetsFactory BuildPreviewSetsFactory(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
    content.vb: Function BuildPreviewSetsFactory(name As String) As IPreviewSetsFactory
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewSetsFactory*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewControl(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewControl(System.String)
  id: BuildPreviewControl(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  langs:
  - csharp
  - vb
  name: BuildPreviewControl(String)
  nameWithType: IFileTypeComponentBuilder.BuildPreviewControl(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewControl(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCreates a new instance of the preview control with the specified name.\n"
  remarks: "\n<p>\nShould only be called from the main thread, as controls must always be\ninstantiated on the same thread as the application message pump.\n</p>\n"
  syntax:
    content: IAbstractPreviewControl BuildPreviewControl(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewControl
    content.vb: Function BuildPreviewControl(name As String) As IAbstractPreviewControl
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewControl*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewApplication(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewApplication(System.String)
  id: BuildPreviewApplication(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  langs:
  - csharp
  - vb
  name: BuildPreviewApplication(String)
  nameWithType: IFileTypeComponentBuilder.BuildPreviewApplication(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewApplication(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCreates a new instance of the preview application with the specified name.\n"
  syntax:
    content: IAbstractPreviewApplication BuildPreviewApplication(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication
    content.vb: Function BuildPreviewApplication(name As String) As IAbstractPreviewApplication
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewApplication*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildBilingualGenerator(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildBilingualGenerator(System.String)
  id: BuildBilingualGenerator(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  langs:
  - csharp
  - vb
  name: BuildBilingualGenerator(String)
  nameWithType: IFileTypeComponentBuilder.BuildBilingualGenerator(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildBilingualGenerator(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets the bilingual writer components for this component (if any).\n"
  syntax:
    content: IBilingualDocumentGenerator BuildBilingualGenerator(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
      description: <code>null</code> if no bilingual generator is defined
    content.vb: Function BuildBilingualGenerator(name As String) As IBilingualDocumentGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildBilingualGenerator*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildVerifierCollection(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildVerifierCollection(System.String)
  id: BuildVerifierCollection(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  langs:
  - csharp
  - vb
  name: BuildVerifierCollection(String)
  nameWithType: IFileTypeComponentBuilder.BuildVerifierCollection(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildVerifierCollection(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets the verifier list of this component.\n"
  remarks: The verifier list is an optional component for a file type.
  syntax:
    content: IVerifierCollection BuildVerifierCollection(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IVerifierCollection
    content.vb: Function BuildVerifierCollection(name As String) As IVerifierCollection
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildVerifierCollection*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.FileTypeManager
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.FileTypeManager
  id: FileTypeManager
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder
  langs:
  - csharp
  - vb
  name: FileTypeManager
  nameWithType: IFileTypeComponentBuilder.FileTypeManager
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.FileTypeManager
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCurrent File Type Manager instance which will be set by the framework.\n"
  syntax:
    content: IFileTypeManager FileTypeManager { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
    content.vb: Property FileTypeManager As IFileTypeManager
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.FileTypeManager*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
  isExternal: true
  name: FileTypeDefinition
  nameWithType: IFileTypeDefinitionAware.FileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware.FileTypeDefinition
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileTypeDefinitionAware
  nameWithType: IFileTypeDefinitionAware
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionAware
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileTypeInformation*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileTypeInformation
  isExternal: true
  name: BuildFileTypeInformation
  nameWithType: IFileTypeComponentBuilder.BuildFileTypeInformation
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileTypeInformation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileTypeInformation
  nameWithType: IFileTypeInformation
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeInformation
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildQuickTagsFactory*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildQuickTagsFactory
  isExternal: true
  name: BuildQuickTagsFactory
  nameWithType: IFileTypeComponentBuilder.BuildQuickTagsFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildQuickTagsFactory
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IQuickTagsFactory
  nameWithType: IQuickTagsFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IQuickTagsFactory
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileSniffer*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileSniffer
  isExternal: true
  name: BuildFileSniffer
  nameWithType: IFileTypeComponentBuilder.BuildFileSniffer
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileSniffer
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: INativeFileSniffer
  nameWithType: INativeFileSniffer
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeFileSniffer
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileExtractor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileExtractor
  isExternal: true
  name: BuildFileExtractor
  nameWithType: IFileTypeComponentBuilder.BuildFileExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileExtractor
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileExtractor
  nameWithType: IFileExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileGenerator*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileGenerator
  isExternal: true
  name: BuildFileGenerator
  nameWithType: IFileTypeComponentBuilder.BuildFileGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildFileGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileGenerator
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileGenerator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileGenerator
  nameWithType: IFileGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildAdditionalGeneratorsInfo*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildAdditionalGeneratorsInfo
  isExternal: true
  name: BuildAdditionalGeneratorsInfo
  nameWithType: IFileTypeComponentBuilder.BuildAdditionalGeneratorsInfo
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildAdditionalGeneratorsInfo
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IAdditionalGeneratorsInfo
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IAdditionalGeneratorsInfo
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IAdditionalGeneratorsInfo
  nameWithType: IAdditionalGeneratorsInfo
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IAdditionalGeneratorsInfo
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildAbstractGenerator*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildAbstractGenerator
  isExternal: true
  name: BuildAbstractGenerator
  nameWithType: IFileTypeComponentBuilder.BuildAbstractGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildAbstractGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractGenerator
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractGenerator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IAbstractGenerator
  nameWithType: IAbstractGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewSetsFactory*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewSetsFactory
  isExternal: true
  name: BuildPreviewSetsFactory
  nameWithType: IFileTypeComponentBuilder.BuildPreviewSetsFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewSetsFactory
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IPreviewSetsFactory
  nameWithType: IPreviewSetsFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewSetsFactory
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewControl*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewControl
  isExternal: true
  name: BuildPreviewControl
  nameWithType: IFileTypeComponentBuilder.BuildPreviewControl
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewControl
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewControl
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewControl
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IAbstractPreviewControl
  nameWithType: IAbstractPreviewControl
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewControl
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewApplication*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewApplication
  isExternal: true
  name: BuildPreviewApplication
  nameWithType: IFileTypeComponentBuilder.BuildPreviewApplication
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildPreviewApplication
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IAbstractPreviewApplication
  nameWithType: IAbstractPreviewApplication
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IAbstractPreviewApplication
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildBilingualGenerator*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildBilingualGenerator
  isExternal: true
  name: BuildBilingualGenerator
  nameWithType: IFileTypeComponentBuilder.BuildBilingualGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildBilingualGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IBilingualDocumentGenerator
  nameWithType: IBilingualDocumentGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildVerifierCollection*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildVerifierCollection
  isExternal: true
  name: BuildVerifierCollection
  nameWithType: IFileTypeComponentBuilder.BuildVerifierCollection
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.BuildVerifierCollection
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IVerifierCollection
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IVerifierCollection
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IVerifierCollection
  nameWithType: IVerifierCollection
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IVerifierCollection
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.FileTypeManager*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.FileTypeManager
  isExternal: true
  name: FileTypeManager
  nameWithType: IFileTypeComponentBuilder.FileTypeManager
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeComponentBuilder.FileTypeManager
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileTypeManager
  nameWithType: IFileTypeManager
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
