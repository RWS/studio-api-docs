### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId
  id: ISupportsUniqueId
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.UniqueId
  langs:
  - csharp
  - vb
  name: ISupportsUniqueId
  nameWithType: ISupportsUniqueId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nProvides access to an ID that can be used \nby implementations e.g. to keep the item in a separate structure\n"
  remarks: "\nThis interface is used for now by the segmentation engine\n"
  syntax:
    content: public interface ISupportsUniqueId
    content.vb: Public Interface ISupportsUniqueId
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.UniqueId
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.UniqueId
  id: UniqueId
  parent: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId
  langs:
  - csharp
  - vb
  name: UniqueId
  nameWithType: ISupportsUniqueId.UniqueId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.UniqueId
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe Unique ID associated with an object may be used\nby implementations during operations such as segmentation\n"
  remarks: "\n<p>\nThe persistence ID is an internal ID that may be used temporarily. \nIt is not guaranteed to be preserved during regular\nprocessing by other components, and it is explicitly ignored in the \nobject implementations of <xref href=\"System.Object.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Object.GetHashCode\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nThe initial value of this ID is 0 for all objects. It is up to implementations\nto ensure uniqueness, if that is desired.\n</p>\n"
  syntax:
    content: int UniqueId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property UniqueId As Integer
  overload: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.UniqueId*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.UniqueId*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.UniqueId
  isExternal: true
  name: UniqueId
  nameWithType: ISupportsUniqueId.UniqueId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISupportsUniqueId.UniqueId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
