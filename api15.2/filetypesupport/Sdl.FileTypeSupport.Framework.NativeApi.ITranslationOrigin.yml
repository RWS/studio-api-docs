### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
  id: ITranslationOrigin
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsRepeated
  - Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsSIDContextMatch
  - Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsStructureContextMatch
  - Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.Item(System.String)
  - Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.MatchPercent
  - Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginalTranslationHash
  - Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginBeforeAdaptation
  - Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginSystem
  - Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginType
  - Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.RepetitionTableId
  - Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.TextContextMatchLevel
  langs:
  - csharp
  - vb
  name: ITranslationOrigin
  nameWithType: ITranslationOrigin
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nInformation on the origin of a translation.\n"
  remarks: "\n<p>\nCustom metadata can be stored and accessed through the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer\" data-throw-if-not-resolved=\"false\"></xref> implementation.\n</p>\n"
  syntax:
    content: 'public interface ITranslationOrigin : IMetaDataContainer, ICloneable'
    content.vb: >-
      Public Interface ITranslationOrigin
          Inherits IMetaDataContainer, ICloneable
  inheritedMembers:
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey(System.String)
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String,System.String)
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaData
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.HasMetaData
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataCount
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginType
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginType
  id: OriginType
  parent: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
  langs:
  - csharp
  - vb
  name: OriginType
  nameWithType: ITranslationOrigin.OriginType
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginType
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe origin of the translation for the segment pair.\n"
  remarks: "\n<p>\nUse the pre-defined constant values in <code>Sdl.FileTypeSupport.Framework.Core.Utilitites.NativeApi.DefaultTranslationOrigin</code> \nif possible.\n</p>\n<p>\nIf the translation origin is <code>Sdl.FileTypeSupport.Framework.Core.Utilitites.NativeApi.DefaultTranslationOrigin.Interactive</code>, the\n<xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginBeforeAdaptation\" data-throw-if-not-resolved=\"false\"></xref> may contain information on the originally adapted content.\n</p>\n"
  syntax:
    content: string OriginType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property OriginType As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginType*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginSystem
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginSystem
  id: OriginSystem
  parent: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
  langs:
  - csharp
  - vb
  name: OriginSystem
  nameWithType: ITranslationOrigin.OriginSystem
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginSystem
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe translation memory, machine translation system, or a similar source from which the translation originates,\nor <code>null</code> if unknown or not applicable.\n"
  syntax:
    content: string OriginSystem { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property OriginSystem As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginSystem*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginBeforeAdaptation
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginBeforeAdaptation
  id: OriginBeforeAdaptation
  parent: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
  langs:
  - csharp
  - vb
  name: OriginBeforeAdaptation
  nameWithType: ITranslationOrigin.OriginBeforeAdaptation
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginBeforeAdaptation
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\n<code>Null</code> or the origin information for the originally adapted target content\n"
  syntax:
    content: ITranslationOrigin OriginBeforeAdaptation { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
    content.vb: Property OriginBeforeAdaptation As ITranslationOrigin
  overload: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginBeforeAdaptation*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.MatchPercent
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.MatchPercent
  id: MatchPercent
  parent: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
  langs:
  - csharp
  - vb
  name: MatchPercent
  nameWithType: ITranslationOrigin.MatchPercent
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.MatchPercent
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe match value for a translation memory match, or the confidence level for a machine translation.\nShould be a percentage value from 0 - 100%\n"
  remarks: "\n<p>\nWhen a match gets adapted by interactive translation, the original match value can be read from\nthis property on the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginBeforeAdaptation\" data-throw-if-not-resolved=\"false\"></xref> properties.\n</p>\n<p>\nA typical use case for this value is when editing or proof-reading translations. Here, proofreaders or\neditors may want to pay special attention to fuzzy matches to ensure that they were \ncorrectly adopted when used in translation.\n</p>\n<p>\nIt may also be possible to directly access the actual translation proposal used as part of the\nbilingual object model for the paragraph unit. In that case, this value should correspond to the \nmatch quality for that translation.\n</p>\n<p>\nThis value should typically not change during editing of the segment content, as it is\nmeant to capture information on the original interaction with the translation memory.\n</p>\n"
  syntax:
    content: byte MatchPercent { get; set; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Property MatchPercent As Byte
  overload: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.MatchPercent*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsStructureContextMatch
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsStructureContextMatch
  id: IsStructureContextMatch
  parent: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
  langs:
  - csharp
  - vb
  name: IsStructureContextMatch
  nameWithType: ITranslationOrigin.IsStructureContextMatch
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsStructureContextMatch
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nIf <code>true</code>, indicates that the translation originates from a system that takes \nstructural context information into account, and that the structure context matches.\n"
  remarks: "\n<p>\nThis is used when a document has context information with \nat least one <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IContextInfo.Purpose\" data-throw-if-not-resolved=\"false\"></xref> set to \n<xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.ContextPurpose.Match\" data-throw-if-not-resolved=\"false\"></xref> in order to\nindicate when a match has a corresponding <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IContextInfo.ContextType\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nWhen a match gets adapted by interactive translation, the original structure match value can be read from\nthis property on the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginBeforeAdaptation\" data-throw-if-not-resolved=\"false\"></xref> properties.\n</p>\n<p>\nTypical usage for this value is when editing or proofreading translations. Here, proofreaders or\neditors may want to pay special attention to certain matches to ensure that they were \ncorrectly adopted when used in translation.\n</p>\n<p>\nIt may also be possible to directly access the actual translation proposal used as part of the\nbilingual object model for the paragraph unit. In that case, this value should convey the \nstructure match quality for that translation.\n</p>\n<p>\nThis value should typically not change during editing of the segment content, as it is\nmeant to capture information on the original interaction with the translation memory.\n</p>\n"
  syntax:
    content: bool IsStructureContextMatch { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsStructureContextMatch As Boolean
  overload: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsStructureContextMatch*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.TextContextMatchLevel
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.TextContextMatchLevel
  id: TextContextMatchLevel
  parent: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
  langs:
  - csharp
  - vb
  name: TextContextMatchLevel
  nameWithType: ITranslationOrigin.TextContextMatchLevel
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.TextContextMatchLevel
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nIndicates whether the match originates from a source where the textual surrounding content \ncorresponds to the text surrounding this segment.\n"
  remarks: "\n<p>\nThis is used with the new translation memory for textual context matches.\n</p>\n<p>\nWhen a match gets adapted by interactive translation, the original text context match level \ncan be read from this property on the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginBeforeAdaptation\" data-throw-if-not-resolved=\"false\"></xref> properties.\n</p>\n<p>\nA typical use case for this value is when editing or proofreading translations. Here, proofreaders or\neditors may want to pay special attention to certain matches to ensure that they were \ncorrectly adopted when used in translation.\n</p>\n<p>\nIt may also be possible to directly access the actual translation proposal used as part of the\nbilingual object model for the paragraph unit. In that case, this value should convey the \ntextual match quality for that translation.\n</p>\n<p>\nThis value should typically not change during editing of the segment content, as it is\nmeant to capture information on the original interaction with the translation memory.\n</p>\n"
  syntax:
    content: TextContextMatchLevel TextContextMatchLevel { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.TextContextMatchLevel
    content.vb: Property TextContextMatchLevel As TextContextMatchLevel
  overload: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.TextContextMatchLevel*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsSIDContextMatch
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsSIDContextMatch
  id: IsSIDContextMatch
  parent: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
  langs:
  - csharp
  - vb
  name: IsSIDContextMatch
  nameWithType: ITranslationOrigin.IsSIDContextMatch
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsSIDContextMatch
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nIf <code>true</code>, indicates that the translation originates from a system that takes \nID context information into account, and that the ID context matches.\n"
  remarks: "\n<p>\nThis is used when a document has context information with \nat least one <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IContextInfo.Purpose\" data-throw-if-not-resolved=\"false\"></xref> set to \n<xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.ContextPurpose.Match\" data-throw-if-not-resolved=\"false\"></xref> with <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IContextInfo.ContextType\" data-throw-if-not-resolved=\"false\"></xref>\nset to sdl:sid, in order to indicate when a match has a corresponding <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IContextInfo.Description\" data-throw-if-not-resolved=\"false\"></xref> that holds the SID value.\n</p>\n"
  syntax:
    content: bool IsSIDContextMatch { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsSIDContextMatch As Boolean
  overload: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsSIDContextMatch*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.RepetitionTableId
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.RepetitionTableId
  id: RepetitionTableId
  parent: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
  langs:
  - csharp
  - vb
  name: RepetitionTableId
  nameWithType: ITranslationOrigin.RepetitionTableId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.RepetitionTableId
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe id of this segment in the repetitions table that holds all the repetitions matching this segment\n"
  syntax:
    content: RepetitionId RepetitionTableId { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId
    content.vb: Property RepetitionTableId As RepetitionId
  overload: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.RepetitionTableId*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsRepeated
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsRepeated
  id: IsRepeated
  parent: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
  langs:
  - csharp
  - vb
  name: IsRepeated
  nameWithType: ITranslationOrigin.IsRepeated
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsRepeated
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nIndicates whether this segment pair exists in the repetitions table\n"
  syntax:
    content: bool IsRepeated { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsRepeated As Boolean
  overload: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsRepeated*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginalTranslationHash
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginalTranslationHash
  id: OriginalTranslationHash
  parent: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
  langs:
  - csharp
  - vb
  name: OriginalTranslationHash
  nameWithType: ITranslationOrigin.OriginalTranslationHash
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginalTranslationHash
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nA hash value that identifies the entry in the TM that provided the translation. This is used \nto update the correct TM entry if a translator provides an updated version of the translation.\n"
  syntax:
    content: string OriginalTranslationHash { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property OriginalTranslationHash As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginalTranslationHash*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.Item(System.String)
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.Item(System.String)
  id: Item(System.String)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: ITranslationOrigin.Item[String]
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.Item[System.String]
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\n<p>\nConvenience getter and setter for metadata using indexer syntax. \n</p>\n<p>\nThe getter functionality is equivalent to calling <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>,\nand the setter functionality is equivalent to <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  syntax:
    content: string this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: Must not be <code>null</code> or empty
    return:
      type: System.String
      description: The corresponding value, or <code>null</code> if none
    content.vb: Property Item(key As String) As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.Item*
  nameWithType.vb: ITranslationOrigin.Item(String)
  modifiers.csharp:
  - get
  - set
  fullName.vb: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.Item(System.String)
  name.vb: Item(String)
references:
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey(System.String)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  isExternal: true
  name: MetaDataContainsKey(String)
  nameWithType: IMetaDataContainer.MetaDataContainsKey(String)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey(System.String)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey(System.String)
    name: MetaDataContainsKey
    nameWithType: IMetaDataContainer.MetaDataContainsKey
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey(System.String)
    name: MetaDataContainsKey
    nameWithType: IMetaDataContainer.MetaDataContainsKey
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  isExternal: true
  name: GetMetaData(String)
  nameWithType: IMetaDataContainer.GetMetaData(String)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)
    name: GetMetaData
    nameWithType: IMetaDataContainer.GetMetaData
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)
    name: GetMetaData
    nameWithType: IMetaDataContainer.GetMetaData
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String,System.String)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  isExternal: true
  name: SetMetaData(String, String)
  nameWithType: IMetaDataContainer.SetMetaData(String, String)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String, System.String)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String,System.String)
    name: SetMetaData
    nameWithType: IMetaDataContainer.SetMetaData
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String,System.String)
    name: SetMetaData
    nameWithType: IMetaDataContainer.SetMetaData
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  isExternal: true
  name: RemoveMetaData(String)
  nameWithType: IMetaDataContainer.RemoveMetaData(String)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)
    name: RemoveMetaData
    nameWithType: IMetaDataContainer.RemoveMetaData
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)
    name: RemoveMetaData
    nameWithType: IMetaDataContainer.RemoveMetaData
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  isExternal: true
  name: ClearMetaData()
  nameWithType: IMetaDataContainer.ClearMetaData()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
    name: ClearMetaData
    nameWithType: IMetaDataContainer.ClearMetaData
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
    name: ClearMetaData
    nameWithType: IMetaDataContainer.ClearMetaData
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaData
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaData
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  isExternal: true
  name: MetaData
  nameWithType: IMetaDataContainer.MetaData
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaData
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.HasMetaData
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.HasMetaData
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  isExternal: true
  name: HasMetaData
  nameWithType: IMetaDataContainer.HasMetaData
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.HasMetaData
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataCount
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataCount
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  isExternal: true
  name: MetaDataCount
  nameWithType: IMetaDataContainer.MetaDataCount
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataCount
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IMetaDataContainer
  nameWithType: IMetaDataContainer
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginType*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginType
  isExternal: true
  name: OriginType
  nameWithType: ITranslationOrigin.OriginType
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginSystem*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginSystem
  isExternal: true
  name: OriginSystem
  nameWithType: ITranslationOrigin.OriginSystem
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginSystem
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginBeforeAdaptation*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginBeforeAdaptation
  isExternal: true
  name: OriginBeforeAdaptation
  nameWithType: ITranslationOrigin.OriginBeforeAdaptation
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginBeforeAdaptation
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: ITranslationOrigin
  nameWithType: ITranslationOrigin
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.MatchPercent*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.MatchPercent
  isExternal: true
  name: MatchPercent
  nameWithType: ITranslationOrigin.MatchPercent
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.MatchPercent
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsStructureContextMatch*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsStructureContextMatch
  isExternal: true
  name: IsStructureContextMatch
  nameWithType: ITranslationOrigin.IsStructureContextMatch
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsStructureContextMatch
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.TextContextMatchLevel*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.TextContextMatchLevel
  isExternal: true
  name: TextContextMatchLevel
  nameWithType: ITranslationOrigin.TextContextMatchLevel
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.TextContextMatchLevel
- uid: Sdl.FileTypeSupport.Framework.NativeApi.TextContextMatchLevel
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.TextContextMatchLevel
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: TextContextMatchLevel
  nameWithType: TextContextMatchLevel
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.TextContextMatchLevel
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsSIDContextMatch*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsSIDContextMatch
  isExternal: true
  name: IsSIDContextMatch
  nameWithType: ITranslationOrigin.IsSIDContextMatch
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsSIDContextMatch
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.RepetitionTableId*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.RepetitionTableId
  isExternal: true
  name: RepetitionTableId
  nameWithType: ITranslationOrigin.RepetitionTableId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.RepetitionTableId
- uid: Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: RepetitionId
  nameWithType: RepetitionId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsRepeated*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsRepeated
  isExternal: true
  name: IsRepeated
  nameWithType: ITranslationOrigin.IsRepeated
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.IsRepeated
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginalTranslationHash*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginalTranslationHash
  isExternal: true
  name: OriginalTranslationHash
  nameWithType: ITranslationOrigin.OriginalTranslationHash
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.OriginalTranslationHash
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.Item*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.Item
  isExternal: true
  name: Item
  nameWithType: ITranslationOrigin.Item
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.Item
