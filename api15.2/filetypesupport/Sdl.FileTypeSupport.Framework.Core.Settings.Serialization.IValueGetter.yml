### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter
  id: IValueGetter
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  children:
  - Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetCompositeList``1(System.String,System.Collections.Generic.List{``0})
  - Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringDictionary(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringList(System.String,System.Collections.Generic.List{System.String})
  - Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue(System.String,System.Boolean)
  - Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue(System.String,System.Int32)
  - Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue(System.String,System.String)
  - Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue``1(System.String,``0,System.Boolean)
  langs:
  - csharp
  - vb
  name: IValueGetter
  nameWithType: IValueGetter
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  syntax:
    content: public interface IValueGetter
    content.vb: Public Interface IValueGetter
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue(System.String,System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue(System.String,System.Int32)
  id: GetValue(System.String,System.Int32)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter
  langs:
  - csharp
  - vb
  name: GetValue(String, Int32)
  nameWithType: IValueGetter.GetValue(String, Int32)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue(System.String, System.Int32)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  syntax:
    content: int GetValue(string key, int defaultValue)
    parameters:
    - id: key
      type: System.String
    - id: defaultValue
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function GetValue(key As String, defaultValue As Integer) As Integer
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue*
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue(System.String,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue(System.String,System.String)
  id: GetValue(System.String,System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter
  langs:
  - csharp
  - vb
  name: GetValue(String, String)
  nameWithType: IValueGetter.GetValue(String, String)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue(System.String, System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  syntax:
    content: string GetValue(string key, string defaultValue)
    parameters:
    - id: key
      type: System.String
    - id: defaultValue
      type: System.String
    return:
      type: System.String
    content.vb: Function GetValue(key As String, defaultValue As String) As String
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue*
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue(System.String,System.Boolean)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue(System.String,System.Boolean)
  id: GetValue(System.String,System.Boolean)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter
  langs:
  - csharp
  - vb
  name: GetValue(String, Boolean)
  nameWithType: IValueGetter.GetValue(String, Boolean)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue(System.String, System.Boolean)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  syntax:
    content: bool GetValue(string key, bool defaultValue)
    parameters:
    - id: key
      type: System.String
    - id: defaultValue
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Function GetValue(key As String, defaultValue As Boolean) As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue*
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue``1(System.String,``0,System.Boolean)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue``1(System.String,``0,System.Boolean)
  id: GetValue``1(System.String,``0,System.Boolean)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter
  langs:
  - csharp
  - vb
  name: GetValue<T>(String, T, Boolean)
  nameWithType: IValueGetter.GetValue<T>(String, T, Boolean)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue<T>(System.String, T, System.Boolean)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  syntax:
    content: >-
      T GetValue<T>(string key, T defaultValue, bool discardKey)
          where T : ISettingsClass, new()
    parameters:
    - id: key
      type: System.String
    - id: defaultValue
      type: '{T}'
    - id: discardKey
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Function GetValue(Of T As {ISettingsClass, New})(key As String, defaultValue As T, discardKey As Boolean) As T
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue*
  nameWithType.vb: IValueGetter.GetValue(Of T)(String, T, Boolean)
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue(Of T)(System.String, T, System.Boolean)
  name.vb: GetValue(Of T)(String, T, Boolean)
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringList(System.String,System.Collections.Generic.List{System.String})
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringList(System.String,System.Collections.Generic.List{System.String})
  id: GetStringList(System.String,System.Collections.Generic.List{System.String})
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter
  langs:
  - csharp
  - vb
  name: GetStringList(String, List<String>)
  nameWithType: IValueGetter.GetStringList(String, List<String>)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringList(System.String, System.Collections.Generic.List<System.String>)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  syntax:
    content: List<string> GetStringList(string key, List<string> defaultValue)
    parameters:
    - id: key
      type: System.String
    - id: defaultValue
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Function GetStringList(key As String, defaultValue As List(Of String)) As List(Of String)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringList*
  nameWithType.vb: IValueGetter.GetStringList(String, List(Of String))
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringList(System.String, System.Collections.Generic.List(Of System.String))
  name.vb: GetStringList(String, List(Of String))
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringDictionary(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringDictionary(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: GetStringDictionary(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter
  langs:
  - csharp
  - vb
  name: GetStringDictionary(String, Dictionary<String, String>)
  nameWithType: IValueGetter.GetStringDictionary(String, Dictionary<String, String>)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringDictionary(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  syntax:
    content: Dictionary<string, string> GetStringDictionary(string key, Dictionary<string, string> defaultValue)
    parameters:
    - id: key
      type: System.String
    - id: defaultValue
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Function GetStringDictionary(key As String, defaultValue As Dictionary(Of String, String)) As Dictionary(Of String, String)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringDictionary*
  nameWithType.vb: IValueGetter.GetStringDictionary(String, Dictionary(Of String, String))
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringDictionary(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: GetStringDictionary(String, Dictionary(Of String, String))
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetCompositeList``1(System.String,System.Collections.Generic.List{``0})
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetCompositeList``1(System.String,System.Collections.Generic.List{``0})
  id: GetCompositeList``1(System.String,System.Collections.Generic.List{``0})
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter
  langs:
  - csharp
  - vb
  name: GetCompositeList<T>(String, List<T>)
  nameWithType: IValueGetter.GetCompositeList<T>(String, List<T>)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetCompositeList<T>(System.String, System.Collections.Generic.List<T>)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  syntax:
    content: >-
      List<T> GetCompositeList<T>(string key, List<T> defaultValue)
          where T : ISettingsClass, new()
    parameters:
    - id: key
      type: System.String
    - id: defaultValue
      type: System.Collections.Generic.List{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Function GetCompositeList(Of T As {ISettingsClass, New})(key As String, defaultValue As List(Of T)) As List(Of T)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetCompositeList*
  nameWithType.vb: IValueGetter.GetCompositeList(Of T)(String, List(Of T))
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetCompositeList(Of T)(System.String, System.Collections.Generic.List(Of T))
  name.vb: GetCompositeList(Of T)(String, List(Of T))
references:
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue
  isExternal: true
  name: GetValue
  nameWithType: IValueGetter.GetValue
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringList*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringList
  isExternal: true
  name: GetStringList
  nameWithType: IValueGetter.GetStringList
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringList
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringDictionary*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringDictionary
  isExternal: true
  name: GetStringDictionary
  nameWithType: IValueGetter.GetStringDictionary
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetStringDictionary
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetCompositeList*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetCompositeList
  isExternal: true
  name: GetCompositeList
  nameWithType: IValueGetter.GetCompositeList
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.Serialization.IValueGetter.GetCompositeList
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
