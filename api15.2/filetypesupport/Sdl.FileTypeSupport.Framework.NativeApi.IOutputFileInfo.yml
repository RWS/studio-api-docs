### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo
  id: IOutputFileInfo
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.ContentRestriction
  - Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.Encoding
  - Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.FileDialogWildcardExpression
  - Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.Filename
  - Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.FileTypeName
  langs:
  - csharp
  - vb
  name: IOutputFileInfo
  nameWithType: IOutputFileInfo
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nSimple data class designed to hold information on the file to output, which may be required by the \nhost application. This is used by <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.GetProposedOutputFileInfo(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties%2cSdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo)\" data-throw-if-not-resolved=\"false\"></xref>\nto allow file type components to supply alternative information if the component is causing \nthe output file type to differ from the default (e.g. alternative generators for previewing).\n"
  syntax:
    content: public interface IOutputFileInfo
    content.vb: Public Interface IOutputFileInfo
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.Filename
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.Filename
  id: Filename
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo
  langs:
  - csharp
  - vb
  name: Filename
  nameWithType: IOutputFileInfo.Filename
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.Filename
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe name of the file, no need to supply any path information\n"
  syntax:
    content: string Filename { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Filename As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.Filename*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.FileDialogWildcardExpression
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.FileDialogWildcardExpression
  id: FileDialogWildcardExpression
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo
  langs:
  - csharp
  - vb
  name: FileDialogWildcardExpression
  nameWithType: IOutputFileInfo.FileDialogWildcardExpression
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.FileDialogWildcardExpression
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe file wildcard information; can be used by the host application when displaying a &apos;Save As...&apos; dialog.\n"
  syntax:
    content: string FileDialogWildcardExpression { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property FileDialogWildcardExpression As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.FileDialogWildcardExpression*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.FileTypeName
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.FileTypeName
  id: FileTypeName
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo
  langs:
  - csharp
  - vb
  name: FileTypeName
  nameWithType: IOutputFileInfo.FileTypeName
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.FileTypeName
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe name of the file type (e.g. &quot;Microsoft Word 2003&quot;); can be used by the host application when displaying a &apos;Save As...&apos; dialog.\n"
  syntax:
    content: string FileTypeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property FileTypeName As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.FileTypeName*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.Encoding
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.Encoding
  id: Encoding
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo
  langs:
  - csharp
  - vb
  name: Encoding
  nameWithType: IOutputFileInfo.Encoding
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.Encoding
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe suggested encoding to be used when outputting the file\n"
  syntax:
    content: Codepage Encoding { get; set; }
    parameters: []
    return:
      type: Sdl.Core.Globalization.Codepage
    content.vb: Property Encoding As Codepage
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.Encoding*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.ContentRestriction
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.ContentRestriction
  id: ContentRestriction
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo
  langs:
  - csharp
  - vb
  name: ContentRestriction
  nameWithType: IOutputFileInfo.ContentRestriction
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.ContentRestriction
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nIndicates whether the output is in the source or target language.\nThis is for information purposes only.\n"
  syntax:
    content: ContentRestriction ContentRestriction { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.ContentRestriction
    content.vb: ReadOnly Property ContentRestriction As ContentRestriction
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.ContentRestriction*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.Filename*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.Filename
  isExternal: true
  name: Filename
  nameWithType: IOutputFileInfo.Filename
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.Filename
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.FileDialogWildcardExpression*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.FileDialogWildcardExpression
  isExternal: true
  name: FileDialogWildcardExpression
  nameWithType: IOutputFileInfo.FileDialogWildcardExpression
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.FileDialogWildcardExpression
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.FileTypeName*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.FileTypeName
  isExternal: true
  name: FileTypeName
  nameWithType: IOutputFileInfo.FileTypeName
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.FileTypeName
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.Encoding*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.Encoding
  isExternal: true
  name: Encoding
  nameWithType: IOutputFileInfo.Encoding
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.Encoding
- uid: Sdl.Core.Globalization.Codepage
  isExternal: true
  name: Codepage
  nameWithType: Codepage
  fullName: Sdl.Core.Globalization.Codepage
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.ContentRestriction*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.ContentRestriction
  isExternal: true
  name: ContentRestriction
  nameWithType: IOutputFileInfo.ContentRestriction
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo.ContentRestriction
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ContentRestriction
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.ContentRestriction
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: ContentRestriction
  nameWithType: ContentRestriction
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ContentRestriction
