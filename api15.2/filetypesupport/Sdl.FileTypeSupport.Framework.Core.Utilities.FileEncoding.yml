### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding
  id: FileEncoding
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities
  children:
  - Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.Detect(System.String,System.Text.Encoding,System.String@)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.Detect(System.String,System.Text.Encoding,System.String@,System.Boolean@)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.GetDefaultAnsiCodepage(System.Globalization.CultureInfo)
  langs:
  - csharp
  - vb
  name: FileEncoding
  nameWithType: FileEncoding
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities
  summary: "\nA utility class to hold encoding related static methods\n"
  syntax:
    content: public static class FileEncoding
    content.vb: Public Module FileEncoding
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.GetDefaultAnsiCodepage(System.Globalization.CultureInfo)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.GetDefaultAnsiCodepage(System.Globalization.CultureInfo)
  id: GetDefaultAnsiCodepage(System.Globalization.CultureInfo)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding
  langs:
  - csharp
  - vb
  name: GetDefaultAnsiCodepage(CultureInfo)
  nameWithType: FileEncoding.GetDefaultAnsiCodepage(CultureInfo)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.GetDefaultAnsiCodepage(System.Globalization.CultureInfo)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities
  summary: "\nGets the default &apos;ansi&apos; code page for the given language CultureInfo\n"
  syntax:
    content: public static int GetDefaultAnsiCodepage(CultureInfo cultureInfo)
    parameters:
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: The CultureInfo of the language
    return:
      type: System.Int32
      description: The default code page for the given language, 0 for invalid input
    content.vb: Public Shared Function GetDefaultAnsiCodepage(cultureInfo As CultureInfo) As Integer
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.GetDefaultAnsiCodepage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.Detect(System.String,System.Text.Encoding,System.String@)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.Detect(System.String,System.Text.Encoding,System.String@)
  id: Detect(System.String,System.Text.Encoding,System.String@)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding
  langs:
  - csharp
  - vb
  name: Detect(String, Encoding, out String)
  nameWithType: FileEncoding.Detect(String, Encoding, out String)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.Detect(System.String, System.Text.Encoding, out System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities
  summary: "\nIs used for code page detection. First, the file is searched for a BOM. If a BOM exists\nand points to UNICODE, the appropriate code page is returned with the level Certain.\nOtherwise, the encoding tools are used to return the code page with the level Likely.\n"
  syntax:
    content: public static Pair<Codepage, DetectionLevel> Detect(string filePath, Encoding suggestedEncoding, out string lineBreakType)
    parameters:
    - id: filePath
      type: System.String
      description: Path to file for code page detection
    - id: suggestedEncoding
      type: System.Text.Encoding
      description: A suggested codepage that may be used if it is a valid option.
    - id: lineBreakType
      type: System.String
      description: String for the line break type.
    return:
      type: Sdl.FileTypeSupport.Framework.Pair{Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel}
      description: "\nA Pair container that holds the detected codepage and the information on how likely it is to be the correct one.\n"
    content.vb: Public Shared Function Detect(filePath As String, suggestedEncoding As Encoding, ByRef lineBreakType As String) As Pair(Of Codepage, DetectionLevel)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.Detect*
  nameWithType.vb: FileEncoding.Detect(String, Encoding, ByRef String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.Detect(System.String, System.Text.Encoding, ByRef System.String)
  name.vb: Detect(String, Encoding, ByRef String)
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.Detect(System.String,System.Text.Encoding,System.String@,System.Boolean@)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.Detect(System.String,System.Text.Encoding,System.String@,System.Boolean@)
  id: Detect(System.String,System.Text.Encoding,System.String@,System.Boolean@)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding
  langs:
  - csharp
  - vb
  name: Detect(String, Encoding, out String, out Boolean)
  nameWithType: FileEncoding.Detect(String, Encoding, out String, out Boolean)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.Detect(System.String, System.Text.Encoding, out System.String, out System.Boolean)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities
  summary: "\nIs used for code page detection. First, the file is searched for a BOM. If a BOM exists\nand points to UNICODE, the appropriate code page is returned with the level Certain.\nOtherwise, the encoding tools are used to return the code page with the level Likely.\n"
  syntax:
    content: public static Pair<Codepage, DetectionLevel> Detect(string filePath, Encoding suggestedEncoding, out string lineBreakType, out bool hasUTF8BOM)
    parameters:
    - id: filePath
      type: System.String
      description: Path to file for code page detection
    - id: suggestedEncoding
      type: System.Text.Encoding
      description: A suggested codepage that may be used if it is a valid option.
    - id: lineBreakType
      type: System.String
      description: String for the line break type.
    - id: hasUTF8BOM
      type: System.Boolean
      description: bool to indicate if UTF-8 BOM present
    return:
      type: Sdl.FileTypeSupport.Framework.Pair{Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel}
      description: "\nA Pair container that holds the detected codepage and the information on how likely it is to be the correct one.\n"
    content.vb: Public Shared Function Detect(filePath As String, suggestedEncoding As Encoding, ByRef lineBreakType As String, ByRef hasUTF8BOM As Boolean) As Pair(Of Codepage, DetectionLevel)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.Detect*
  nameWithType.vb: FileEncoding.Detect(String, Encoding, ByRef String, ByRef Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.Detect(System.String, System.Text.Encoding, ByRef System.String, ByRef System.Boolean)
  name.vb: Detect(String, Encoding, ByRef String, ByRef Boolean)
references:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Utilities
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Core.Utilities
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Utilities
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.GetDefaultAnsiCodepage*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.GetDefaultAnsiCodepage
  isExternal: true
  name: GetDefaultAnsiCodepage
  nameWithType: FileEncoding.GetDefaultAnsiCodepage
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.GetDefaultAnsiCodepage
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.Detect*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.Detect
  isExternal: true
  name: Detect
  nameWithType: FileEncoding.Detect
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.FileEncoding.Detect
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Sdl.FileTypeSupport.Framework.Pair{Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel}
  commentId: T:Sdl.FileTypeSupport.Framework.Pair{Sdl.Core.Globalization.Codepage,Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel}
  parent: Sdl.FileTypeSupport.Framework
  definition: Sdl.FileTypeSupport.Framework.Pair`2
  name: Pair<Codepage, DetectionLevel>
  nameWithType: Pair<Codepage, DetectionLevel>
  fullName: Sdl.FileTypeSupport.Framework.Pair<Sdl.Core.Globalization.Codepage, Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel>
  nameWithType.vb: Pair(Of Codepage, DetectionLevel)
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of Sdl.Core.Globalization.Codepage, Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel)
  name.vb: Pair(Of Codepage, DetectionLevel)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    nameWithType: Pair
    fullName: Sdl.FileTypeSupport.Framework.Pair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Core.Globalization.Codepage
    name: Codepage
    nameWithType: Codepage
    fullName: Sdl.Core.Globalization.Codepage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel
    name: DetectionLevel
    nameWithType: DetectionLevel
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    nameWithType: Pair
    fullName: Sdl.FileTypeSupport.Framework.Pair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Core.Globalization.Codepage
    name: Codepage
    nameWithType: Codepage
    fullName: Sdl.Core.Globalization.Codepage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel
    name: DetectionLevel
    nameWithType: DetectionLevel
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: Sdl.FileTypeSupport.Framework.Pair`2
  commentId: T:Sdl.FileTypeSupport.Framework.Pair`2
  isExternal: true
  name: Pair<FirstType, SecondType>
  nameWithType: Pair<FirstType, SecondType>
  fullName: Sdl.FileTypeSupport.Framework.Pair<FirstType, SecondType>
  nameWithType.vb: Pair(Of FirstType, SecondType)
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of FirstType, SecondType)
  name.vb: Pair(Of FirstType, SecondType)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    nameWithType: Pair
    fullName: Sdl.FileTypeSupport.Framework.Pair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: FirstType
    nameWithType: FirstType
    fullName: FirstType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: SecondType
    nameWithType: SecondType
    fullName: SecondType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    nameWithType: Pair
    fullName: Sdl.FileTypeSupport.Framework.Pair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: FirstType
    nameWithType: FirstType
    fullName: FirstType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: SecondType
    nameWithType: SecondType
    fullName: SecondType
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework
  commentId: N:Sdl.FileTypeSupport.Framework
  isExternal: true
  name: Sdl.FileTypeSupport.Framework
  nameWithType: Sdl.FileTypeSupport.Framework
  fullName: Sdl.FileTypeSupport.Framework
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
