### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo
  id: DeserializeFileInfo
  parent: Sdl.FileTypeSupport.Framework.Core.Settings
  children:
  - Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.#ctor(System.Boolean,System.Boolean,System.String)
  - Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.FullPath
  - Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.IsDirectoryCreated
  - Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.IsFileCreated
  langs:
  - csharp
  - vb
  name: DeserializeFileInfo
  nameWithType: DeserializeFileInfo
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nProvides information on the file that was deserialized\n"
  syntax:
    content: public class DeserializeFileInfo
    content.vb: Public Class DeserializeFileInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.#ctor(System.Boolean,System.Boolean,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.#ctor(System.Boolean,System.Boolean,System.String)
  id: '#ctor(System.Boolean,System.Boolean,System.String)'
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo
  langs:
  - csharp
  - vb
  name: DeserializeFileInfo(Boolean, Boolean, String)
  nameWithType: DeserializeFileInfo.DeserializeFileInfo(Boolean, Boolean, String)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.DeserializeFileInfo(System.Boolean, System.Boolean, System.String)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nConstructor\n"
  syntax:
    content: public DeserializeFileInfo(bool isFileCreated, bool isDirectoryCreated, string fullPath)
    parameters:
    - id: isFileCreated
      type: System.Boolean
    - id: isDirectoryCreated
      type: System.Boolean
    - id: fullPath
      type: System.String
    content.vb: Public Sub New(isFileCreated As Boolean, isDirectoryCreated As Boolean, fullPath As String)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.IsFileCreated
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.IsFileCreated
  id: IsFileCreated
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo
  langs:
  - csharp
  - vb
  name: IsFileCreated
  nameWithType: DeserializeFileInfo.IsFileCreated
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.IsFileCreated
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nIndicates whether the file was created successfully\n"
  syntax:
    content: public bool IsFileCreated { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFileCreated As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.IsFileCreated*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.IsDirectoryCreated
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.IsDirectoryCreated
  id: IsDirectoryCreated
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo
  langs:
  - csharp
  - vb
  name: IsDirectoryCreated
  nameWithType: DeserializeFileInfo.IsDirectoryCreated
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.IsDirectoryCreated
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nIndicates whether the current directory had to be created especially for this file\n"
  syntax:
    content: public bool IsDirectoryCreated { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDirectoryCreated As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.IsDirectoryCreated*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.FullPath
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.FullPath
  id: FullPath
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo
  langs:
  - csharp
  - vb
  name: FullPath
  nameWithType: DeserializeFileInfo.FullPath
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.FullPath
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nThe full path to the file that was created\n"
  syntax:
    content: public string FullPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FullPath As String
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.FullPath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.Core.Settings
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Settings
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Core.Settings
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Settings
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.#ctor
  isExternal: true
  name: DeserializeFileInfo
  nameWithType: DeserializeFileInfo.DeserializeFileInfo
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.DeserializeFileInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.IsFileCreated*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.IsFileCreated
  isExternal: true
  name: IsFileCreated
  nameWithType: DeserializeFileInfo.IsFileCreated
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.IsFileCreated
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.IsDirectoryCreated*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.IsDirectoryCreated
  isExternal: true
  name: IsDirectoryCreated
  nameWithType: DeserializeFileInfo.IsDirectoryCreated
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.IsDirectoryCreated
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.FullPath*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.FullPath
  isExternal: true
  name: FullPath
  nameWithType: DeserializeFileInfo.FullPath
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.DeserializeFileInfo.FullPath
