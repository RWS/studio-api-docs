### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule
  id: FontMappingRule
  parent: Sdl.FileTypeSupport.Framework.Core.Settings
  children:
  - Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.#ctor
  - Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.ApplyFont
  - Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Equals(System.Object)
  - Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Font
  - Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.GetHashCode
  - Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.LanguageCultureName
  - Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Lcid
  langs:
  - csharp
  - vb
  name: FontMappingRule
  nameWithType: FontMappingRule
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nFontMappingRule represents the list of source fonts to map to a target font\nfor a particular language represented by its Lcid\n"
  syntax:
    content: public class FontMappingRule
    content.vb: Public Class FontMappingRule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Equals(System.Object)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: FontMappingRule.Equals(Object)
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Equals(System.Object)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nDetermines whether the given object is equal to this object.\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: object
    return:
      type: System.Boolean
      description: whether equal to this object
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.GetHashCode
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.GetHashCode
  id: GetHashCode
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: FontMappingRule.GetHashCode()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.GetHashCode()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nGets the hash code.\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: hash code
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule
  langs:
  - csharp
  - vb
  name: FontMappingRule()
  nameWithType: FontMappingRule.FontMappingRule()
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.FontMappingRule()
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  syntax:
    content: public FontMappingRule()
    content.vb: Public Sub New
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.LanguageCultureName
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.LanguageCultureName
  id: LanguageCultureName
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule
  langs:
  - csharp
  - vb
  name: LanguageCultureName
  nameWithType: FontMappingRule.LanguageCultureName
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.LanguageCultureName
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nGets or sets the culture identifier name of the language\n"
  syntax:
    content: public string LanguageCultureName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LanguageCultureName As String
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.LanguageCultureName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Lcid
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Lcid
  id: Lcid
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule
  langs:
  - csharp
  - vb
  name: Lcid
  nameWithType: FontMappingRule.Lcid
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Lcid
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nGets or sets the culture identifier of the language\n"
  syntax:
    content: public string Lcid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Lcid As String
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Lcid*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Font
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Font
  id: Font
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule
  langs:
  - csharp
  - vb
  name: Font
  nameWithType: FontMappingRule.Font
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Font
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nGets or sets the list of source fonts to map to the target font\n"
  syntax:
    content: public List<string> Font { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property Font As List(Of String)
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Font*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.ApplyFont
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.ApplyFont
  id: ApplyFont
  parent: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule
  langs:
  - csharp
  - vb
  name: ApplyFont
  nameWithType: FontMappingRule.ApplyFont
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.ApplyFont
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Settings
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Settings
  namespace: Sdl.FileTypeSupport.Framework.Core.Settings
  summary: "\nGets or sets the target font\n"
  syntax:
    content: public string ApplyFont { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ApplyFont As String
  overload: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.ApplyFont*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.FileTypeSupport.Framework.Core.Settings
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Settings
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Core.Settings
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Settings
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Equals*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Equals
  isExternal: true
  name: Equals
  nameWithType: FontMappingRule.Equals
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.GetHashCode*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: FontMappingRule.GetHashCode
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.#ctor
  isExternal: true
  name: FontMappingRule
  nameWithType: FontMappingRule.FontMappingRule
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.FontMappingRule
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.LanguageCultureName*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.LanguageCultureName
  isExternal: true
  name: LanguageCultureName
  nameWithType: FontMappingRule.LanguageCultureName
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.LanguageCultureName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Lcid*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Lcid
  isExternal: true
  name: Lcid
  nameWithType: FontMappingRule.Lcid
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Lcid
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Font*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Font
  isExternal: true
  name: Font
  nameWithType: FontMappingRule.Font
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.Font
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.ApplyFont*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.ApplyFont
  isExternal: true
  name: ApplyFont
  nameWithType: FontMappingRule.ApplyFont
  fullName: Sdl.FileTypeSupport.Framework.Core.Settings.FontMappingRule.ApplyFont
