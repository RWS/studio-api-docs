### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview
  id: INavigablePreview
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.NavigateToSegment(Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.PreferredHighlightColor
  - Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.SegmentSelected
  langs:
  - csharp
  - vb
  name: INavigablePreview
  nameWithType: INavigablePreview
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nProvides services for navigating in a preview, to\nhighlight a specific segment in the preview, and to\ngenerate events when the user selects a segment in the \npreview.\n"
  remarks: "\nPreview implementations may choose to provide only \npart of this functionality, e.g. they might let the host application\nhighlight a segment, but may not support users selecting\nas segment in the preview. It is up to the implementation\nto choose what to support, and simply provide no implementation\nfor the other parts of this interface.\n"
  syntax:
    content: public interface INavigablePreview
    content.vb: Public Interface INavigablePreview
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.NavigateToSegment(Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.NavigateToSegment(Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference)
  id: NavigateToSegment(Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview
  langs:
  - csharp
  - vb
  name: NavigateToSegment(SegmentReference)
  nameWithType: INavigablePreview.NavigateToSegment(SegmentReference)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.NavigateToSegment(Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCalled by the host application to request that \nthe preview should scroll to the specified segment.\n"
  remarks: "\n<p>\nThe implementation may specifically highlight\nthe segment in the preview (if possible).\n</p>\n"
  syntax:
    content: void NavigateToSegment(SegmentReference segment)
    parameters:
    - id: segment
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference
    content.vb: Sub NavigateToSegment(segment As SegmentReference)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.NavigateToSegment*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.PreferredHighlightColor
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.PreferredHighlightColor
  id: PreferredHighlightColor
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview
  langs:
  - csharp
  - vb
  name: PreferredHighlightColor
  nameWithType: INavigablePreview.PreferredHighlightColor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.PreferredHighlightColor
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nSet by the host application to indicate the preferred color\nto be used for highlighting the current segment in the preview\nwhen <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.NavigateToSegment(Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference)\" data-throw-if-not-resolved=\"false\"></xref> is called.\n"
  remarks: "\n<p>\nUsing the highlight color is optional, but leads to an enhanced\nuser experience. This will typically be the same\ncolor as the background color that is used for the active segment row\nin the editor, which makes it easier for the user to see that\nthe two segments (i.e. from the bilingual document and the preview) relate to each other.\n</p>\n"
  syntax:
    content: Color PreferredHighlightColor { get; set; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: Property PreferredHighlightColor As Color
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.PreferredHighlightColor*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.SegmentSelected
  commentId: E:Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.SegmentSelected
  id: SegmentSelected
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview
  langs:
  - csharp
  - vb
  name: SegmentSelected
  nameWithType: INavigablePreview.SegmentSelected
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.SegmentSelected
  type: Event
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nRaised when the user interacts with the preview, selecting\na different segment than the one that is currently highlighted.\n"
  remarks: "\n<p>\nThe host application typically handles this event by \nchanging the active segment in the editor to the one that the\nuser has selected in the preview.\n</p>\n"
  syntax:
    content: event EventHandler<SegmentSelectedEventArgs> SegmentSelected
    return:
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs}
    content.vb: Event SegmentSelected As EventHandler(Of SegmentSelectedEventArgs)
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.NavigateToSegment*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.NavigateToSegment
  isExternal: true
  name: NavigateToSegment
  nameWithType: INavigablePreview.NavigateToSegment
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.NavigateToSegment
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: SegmentReference
  nameWithType: SegmentReference
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.PreferredHighlightColor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.PreferredHighlightColor
  isExternal: true
  name: PreferredHighlightColor
  nameWithType: INavigablePreview.PreferredHighlightColor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.PreferredHighlightColor
- uid: System.Drawing.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs}
  commentId: T:System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<SegmentSelectedEventArgs>
  nameWithType: EventHandler<SegmentSelectedEventArgs>
  fullName: System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs>
  nameWithType.vb: EventHandler(Of SegmentSelectedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs)
  name.vb: EventHandler(Of SegmentSelectedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs
    name: SegmentSelectedEventArgs
    nameWithType: SegmentSelectedEventArgs
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs
    name: SegmentSelectedEventArgs
    nameWithType: SegmentSelectedEventArgs
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
