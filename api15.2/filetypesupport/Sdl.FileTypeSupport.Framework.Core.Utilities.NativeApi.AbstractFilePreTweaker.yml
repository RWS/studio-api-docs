### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  id: AbstractFilePreTweaker
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.#ctor
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Enabled
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.MessageReporter
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Name
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.RequireValidEncoding
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.TweakFilePreParsing(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.WillFileBeTweaked(System.String)
  langs:
  - csharp
  - vb
  name: AbstractFilePreTweaker
  nameWithType: AbstractFilePreTweaker
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nProvides an implementation of a NativeFileTweaker that handles the work of creating a backup \nof the original file. Override the virtual <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)\" data-throw-if-not-resolved=\"false\"></xref> method\nto perform the actual work of modifying the file.\n"
  example:
  - "\nFor an example of the use of this class, see <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: 'public abstract class AbstractFilePreTweaker : IFilePreTweaker, IFileTweaker'
    content.vb: >-
      Public MustInherit Class AbstractFilePreTweaker
          Implements IFilePreTweaker, IFileTweaker
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.RegExFilePreTweaker
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IFilePreTweaker
  - Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  langs:
  - csharp
  - vb
  name: AbstractFilePreTweaker()
  nameWithType: AbstractFilePreTweaker.AbstractFilePreTweaker()
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.AbstractFilePreTweaker()
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nAbstractFilePreTweaker constructor\n"
  syntax:
    content: protected AbstractFilePreTweaker()
    content.vb: Protected Sub New
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  id: Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  langs:
  - csharp
  - vb
  name: Tweak(IPersistentFileConversionProperties)
  nameWithType: AbstractFilePreTweaker.Tweak(IPersistentFileConversionProperties)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nThis method should be overridden to provide an implementation of the processing  \nperformed before the native file is parsed by the framework. \n"
  syntax:
    content: protected virtual void Tweak(IPersistentFileConversionProperties properties)
    parameters:
    - id: properties
      type: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
      description: The properties object that contains information on the native file to be tweaked
    content.vb: Protected Overridable Sub Tweak(properties As IPersistentFileConversionProperties)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.WillFileBeTweaked(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.WillFileBeTweaked(System.String)
  id: WillFileBeTweaked(System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  langs:
  - csharp
  - vb
  name: WillFileBeTweaked(String)
  nameWithType: AbstractFilePreTweaker.WillFileBeTweaked(String)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.WillFileBeTweaked(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nThis method can optionally be overridden to let the framework know whether the tweaking operation will actually \nmodify the file. This helps the framework know whether a backup of the file should be created and\ncan allow read-only files to be processed without error if no tweaking is required. By default, this\nreturns true.\n"
  syntax:
    content: protected virtual bool WillFileBeTweaked(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: The full path to the file that is passed to the method
    return:
      type: System.Boolean
      description: >-
        A boolean  parameter indicating whether or not the particular implementation of the File Tweaker

        will make any modifications to the file. By default the method just returns true.
    content.vb: Protected Overridable Function WillFileBeTweaked(filePath As String) As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.WillFileBeTweaked*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.TweakFilePreParsing(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.TweakFilePreParsing(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory)
  id: TweakFilePreParsing(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  langs:
  - csharp
  - vb
  name: TweakFilePreParsing(IPersistentFileConversionProperties, IPropertiesFactory)
  nameWithType: AbstractFilePreTweaker.TweakFilePreParsing(IPersistentFileConversionProperties, IPropertiesFactory)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.TweakFilePreParsing(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties, Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nDefault implementation of the INativeFileTweaker.TweakFilePreParsing method that will check to see if\nthe file will be tweaked (see <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.WillFileBeTweaked(System.String)\" data-throw-if-not-resolved=\"false\"></xref>), and whether the encoding has been \ndetected during sniffing if <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.RequireValidEncoding\" data-throw-if-not-resolved=\"false\"></xref> is true and then call <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)\" data-throw-if-not-resolved=\"false\"></xref>. Derived classes\nshould normally override the <xref href=\"Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)\" data-throw-if-not-resolved=\"false\"></xref> method instead.\n"
  syntax:
    content: public virtual void TweakFilePreParsing(IPersistentFileConversionProperties properties, IPropertiesFactory propertiesFactory)
    parameters:
    - id: properties
      type: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
      description: The properties object that contains information on the native file to be tweaked
    - id: propertiesFactory
      type: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
      description: The factory used to create DependencyFileProperties
    content.vb: Public Overridable Sub TweakFilePreParsing(properties As IPersistentFileConversionProperties, propertiesFactory As IPropertiesFactory)
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.TweakFilePreParsing*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IFilePreTweaker.TweakFilePreParsing(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.RequireValidEncoding
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.RequireValidEncoding
  id: RequireValidEncoding
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  langs:
  - csharp
  - vb
  name: RequireValidEncoding
  nameWithType: AbstractFilePreTweaker.RequireValidEncoding
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.RequireValidEncoding
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nThis property governs whether the File Tweaker requires encoding information before it will tweak a file. This may be needed\nto ensure that the file the tweaker uses the correct encoding.\n"
  syntax:
    content: public bool RequireValidEncoding { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RequireValidEncoding As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.RequireValidEncoding*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Name
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Name
  id: Name
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AbstractFilePreTweaker.Name
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Name
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nThe property contains a name for the file tweaker that can be overridden in derived classes. This name is used in error messages.\n"
  syntax:
    content: protected virtual string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Overridable ReadOnly Property Name As String
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Name*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.MessageReporter
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.MessageReporter
  id: MessageReporter
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  langs:
  - csharp
  - vb
  name: MessageReporter
  nameWithType: AbstractFilePreTweaker.MessageReporter
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.MessageReporter
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nThe default implementation stores the message reporter in a field.\n"
  syntax:
    content: public INativeTextLocationMessageReporter MessageReporter { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter
    content.vb: Public Property MessageReporter As INativeTextLocationMessageReporter
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.MessageReporter*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker.MessageReporter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Enabled
  commentId: P:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Enabled
  id: Enabled
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: AbstractFilePreTweaker.Enabled
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Enabled
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nControls whether the tweaker is run during parsing. Default is true.\n"
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Enabled*
  implements:
  - Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker.Enabled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IFilePreTweaker
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IFilePreTweaker
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IFilePreTweaker
  nameWithType: IFilePreTweaker
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IFilePreTweaker
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IFileTweaker
  nameWithType: IFileTweaker
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.#ctor
  isExternal: true
  name: AbstractFilePreTweaker
  nameWithType: AbstractFilePreTweaker.AbstractFilePreTweaker
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.AbstractFilePreTweaker
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak
  isExternal: true
  name: Tweak
  nameWithType: AbstractFilePreTweaker.Tweak
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Tweak
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IPersistentFileConversionProperties
  nameWithType: IPersistentFileConversionProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.WillFileBeTweaked*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.WillFileBeTweaked
  isExternal: true
  name: WillFileBeTweaked
  nameWithType: AbstractFilePreTweaker.WillFileBeTweaked
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.WillFileBeTweaked
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.TweakFilePreParsing*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.TweakFilePreParsing
  isExternal: true
  name: TweakFilePreParsing
  nameWithType: AbstractFilePreTweaker.TweakFilePreParsing
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.TweakFilePreParsing
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IFilePreTweaker.TweakFilePreParsing(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IFilePreTweaker.TweakFilePreParsing(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IFilePreTweaker
  isExternal: true
  name: TweakFilePreParsing(IPersistentFileConversionProperties, IPropertiesFactory)
  nameWithType: IFilePreTweaker.TweakFilePreParsing(IPersistentFileConversionProperties, IPropertiesFactory)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IFilePreTweaker.TweakFilePreParsing(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties, Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IFilePreTweaker.TweakFilePreParsing(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory)
    name: TweakFilePreParsing
    nameWithType: IFilePreTweaker.TweakFilePreParsing
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IFilePreTweaker.TweakFilePreParsing
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    name: IPersistentFileConversionProperties
    nameWithType: IPersistentFileConversionProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
    name: IPropertiesFactory
    nameWithType: IPropertiesFactory
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IFilePreTweaker.TweakFilePreParsing(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory)
    name: TweakFilePreParsing
    nameWithType: IFilePreTweaker.TweakFilePreParsing
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IFilePreTweaker.TweakFilePreParsing
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    name: IPersistentFileConversionProperties
    nameWithType: IPersistentFileConversionProperties
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
    name: IPropertiesFactory
    nameWithType: IPropertiesFactory
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IPropertiesFactory
  nameWithType: IPropertiesFactory
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.RequireValidEncoding*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.RequireValidEncoding
  isExternal: true
  name: RequireValidEncoding
  nameWithType: AbstractFilePreTweaker.RequireValidEncoding
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.RequireValidEncoding
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Name*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Name
  isExternal: true
  name: Name
  nameWithType: AbstractFilePreTweaker.Name
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Name
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.MessageReporter*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.MessageReporter
  isExternal: true
  name: MessageReporter
  nameWithType: AbstractFilePreTweaker.MessageReporter
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.MessageReporter
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker.MessageReporter
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker.MessageReporter
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker
  isExternal: true
  name: MessageReporter
  nameWithType: IFileTweaker.MessageReporter
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker.MessageReporter
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: INativeTextLocationMessageReporter
  nameWithType: INativeTextLocationMessageReporter
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Enabled*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Enabled
  isExternal: true
  name: Enabled
  nameWithType: AbstractFilePreTweaker.Enabled
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.AbstractFilePreTweaker.Enabled
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker.Enabled
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker.Enabled
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker
  isExternal: true
  name: Enabled
  nameWithType: IFileTweaker.Enabled
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IFileTweaker.Enabled
