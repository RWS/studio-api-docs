### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  id: IconDescriptor
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor(System.Drawing.Icon)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor(System.String,System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Content
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Create(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Create(System.String,System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetIcon
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetIcon(System.Drawing.Size)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetImage
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetImage(System.Drawing.Size)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsEmbedded
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsEmpty
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsValid
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.OriginalLocation
  langs:
  - csharp
  - vb
  name: IconDescriptor
  nameWithType: IconDescriptor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nRepresents an icon that is loaded from a file path, from an embedded resource, or from a base64-encoding string.\n"
  remarks: "\n<p>Can also represent an empty icon (see <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsEmpty\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  syntax:
    content: public class IconDescriptor
    content.vb: Public Class IconDescriptor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  langs:
  - csharp
  - vb
  name: IconDescriptor()
  nameWithType: IconDescriptor.IconDescriptor()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IconDescriptor()
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCreates an empty icon descriptor.\n"
  syntax:
    content: public IconDescriptor()
    content.vb: Public Sub New
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  langs:
  - csharp
  - vb
  name: IconDescriptor(String)
  nameWithType: IconDescriptor.IconDescriptor(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IconDescriptor(System.String)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCreates an icon that is loaded from the specified location.\n"
  syntax:
    content: public IconDescriptor(string imageLocation)
    parameters:
    - id: imageLocation
      type: System.String
      description: "\nThe location of the icon; this can be an absolute file path, or a string of the form &amp;assembly://[assemblyname]/[resourceid]&amp;.\n"
    content.vb: Public Sub New(imageLocation As String)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor(System.String,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  langs:
  - csharp
  - vb
  name: IconDescriptor(String, String)
  nameWithType: IconDescriptor.IconDescriptor(String, String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IconDescriptor(System.String, System.String)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCreates an icon loaded from a base64-encoded string.\n"
  syntax:
    content: public IconDescriptor(string originalLocation, string content)
    parameters:
    - id: originalLocation
      type: System.String
      description: The location from which the icon was originally loaded
    - id: content
      type: System.String
      description: A base64-encoded string containing the icon content
    content.vb: Public Sub New(originalLocation As String, content As String)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor(System.Drawing.Icon)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor(System.Drawing.Icon)
  id: '#ctor(System.Drawing.Icon)'
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  langs:
  - csharp
  - vb
  name: IconDescriptor(Icon)
  nameWithType: IconDescriptor.IconDescriptor(Icon)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IconDescriptor(System.Drawing.Icon)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCreates an icon from an icon.\n"
  syntax:
    content: public IconDescriptor(Icon icon)
    parameters:
    - id: icon
      type: System.Drawing.Icon
      description: The icon
    content.vb: Public Sub New(icon As Icon)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Create(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Create(System.String)
  id: Create(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  langs:
  - csharp
  - vb
  name: Create(String)
  nameWithType: IconDescriptor.Create(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Create(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nFactory method used by the spring framework\n"
  syntax:
    content: public static IconDescriptor Create(string imageLocation)
    parameters:
    - id: imageLocation
      type: System.String
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
    content.vb: Public Shared Function Create(imageLocation As String) As IconDescriptor
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Create(System.String,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Create(System.String,System.String)
  id: Create(System.String,System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  langs:
  - csharp
  - vb
  name: Create(String, String)
  nameWithType: IconDescriptor.Create(String, String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Create(System.String, System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nFactory method used by the spring framework\n"
  syntax:
    content: public static IconDescriptor Create(string location, string content)
    parameters:
    - id: location
      type: System.String
      description: Path to the icon file
    - id: content
      type: System.String
      description: Icon file content
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
    content.vb: Public Shared Function Create(location As String, content As String) As IconDescriptor
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetImage
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetImage
  id: GetImage
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  langs:
  - csharp
  - vb
  name: GetImage()
  nameWithType: IconDescriptor.GetImage()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetImage()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCreates an image from this icon.\n"
  syntax:
    content: public Image GetImage()
    return:
      type: System.Drawing.Image
      description: A new image of the default size
    content.vb: Public Function GetImage As Image
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetImage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetImage(System.Drawing.Size)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetImage(System.Drawing.Size)
  id: GetImage(System.Drawing.Size)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  langs:
  - csharp
  - vb
  name: GetImage(Size)
  nameWithType: IconDescriptor.GetImage(Size)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetImage(System.Drawing.Size)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCreates an image with a specific size from this icon.\n"
  syntax:
    content: public Image GetImage(Size size)
    parameters:
    - id: size
      type: System.Drawing.Size
      description: The desired image size, or <xref href="System.Drawing.Size.Empty" data-throw-if-not-resolved="false"></xref> for the default size.
    return:
      type: System.Drawing.Image
      description: A new image
    content.vb: Public Function GetImage(size As Size) As Image
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetImage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetIcon
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetIcon
  id: GetIcon
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  langs:
  - csharp
  - vb
  name: GetIcon()
  nameWithType: IconDescriptor.GetIcon()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetIcon()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets an instance of the icon.\n"
  syntax:
    content: public Icon GetIcon()
    return:
      type: System.Drawing.Icon
      description: A new icon instance of the default size.
    content.vb: Public Function GetIcon As Icon
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetIcon*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if the underlying resource content is not an icon
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetIcon(System.Drawing.Size)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetIcon(System.Drawing.Size)
  id: GetIcon(System.Drawing.Size)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  langs:
  - csharp
  - vb
  name: GetIcon(Size)
  nameWithType: IconDescriptor.GetIcon(Size)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetIcon(System.Drawing.Size)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets an instance of the icon with the specified size.\n"
  syntax:
    content: public Icon GetIcon(Size size)
    parameters:
    - id: size
      type: System.Drawing.Size
      description: Desired icon size, or <xref href="System.Drawing.Size.Empty" data-throw-if-not-resolved="false"></xref> for the default size
    return:
      type: System.Drawing.Icon
      description: A new icon instance
    content.vb: Public Function GetIcon(size As Size) As Icon
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetIcon*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.OriginalLocation
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.OriginalLocation
  id: OriginalLocation
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  langs:
  - csharp
  - vb
  name: OriginalLocation
  nameWithType: IconDescriptor.OriginalLocation
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.OriginalLocation
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets the location from which the icon was originally loaded from.\n"
  syntax:
    content: public string OriginalLocation { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property OriginalLocation As String
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.OriginalLocation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsEmpty
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsEmpty
  id: IsEmpty
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: IconDescriptor.IsEmpty
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsEmpty
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReturns true if this descriptor does not actually contain an icon.\n"
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsEmpty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsEmbedded
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsEmbedded
  id: IsEmbedded
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  langs:
  - csharp
  - vb
  name: IsEmbedded
  nameWithType: IconDescriptor.IsEmbedded
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsEmbedded
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReturns true if the original location of this icon was an embedded resource.\n"
  syntax:
    content: public bool IsEmbedded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmbedded As Boolean
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsEmbedded*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsValid
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsValid
  id: IsValid
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: IconDescriptor.IsValid
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsValid
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReturns true if the icon is available.\n"
  syntax:
    content: public bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValid As Boolean
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsValid*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Content
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Content
  id: Content
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: IconDescriptor.Content
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Content
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nGets the base64-encoded content of the icon.\n"
  syntax:
    content: public string Content { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Content As String
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Content*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.#ctor
  isExternal: true
  name: IconDescriptor
  nameWithType: IconDescriptor.IconDescriptor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IconDescriptor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Icon
  isExternal: true
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Create*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Create
  isExternal: true
  name: Create
  nameWithType: IconDescriptor.Create
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Create
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IconDescriptor
  nameWithType: IconDescriptor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetImage*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetImage
  isExternal: true
  name: GetImage
  nameWithType: IconDescriptor.GetImage
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetImage
- uid: System.Drawing.Image
  isExternal: true
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Drawing.Size
  isExternal: true
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetIcon*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetIcon
  isExternal: true
  name: GetIcon
  nameWithType: IconDescriptor.GetIcon
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.GetIcon
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.OriginalLocation*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.OriginalLocation
  isExternal: true
  name: OriginalLocation
  nameWithType: IconDescriptor.OriginalLocation
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.OriginalLocation
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsEmpty*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsEmpty
  isExternal: true
  name: IsEmpty
  nameWithType: IconDescriptor.IsEmpty
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsEmbedded*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsEmbedded
  isExternal: true
  name: IsEmbedded
  nameWithType: IconDescriptor.IsEmbedded
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsEmbedded
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsValid*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsValid
  isExternal: true
  name: IsValid
  nameWithType: IconDescriptor.IsValid
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.IsValid
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Content*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Content
  isExternal: true
  name: Content
  nameWithType: IconDescriptor.Content
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IconDescriptor.Content
