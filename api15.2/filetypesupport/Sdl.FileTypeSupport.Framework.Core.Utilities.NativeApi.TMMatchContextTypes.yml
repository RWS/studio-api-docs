### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes
  commentId: T:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes
  id: TMMatchContextTypes
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.Heading
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.IndexEntry
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.IsDefined(System.String)
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.Label
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.LengthInformation
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.ListItem
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.PageHeaderFooter
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.TableCell
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.TableHeading
  - Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.TagContent
  langs:
  - csharp
  - vb
  name: TMMatchContextTypes
  nameWithType: TMMatchContextTypes
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nNamespace for constants defining the set of well-known values\nthat are recommended to be used to indicate TM match context\ntypes in <code>Sdl.FileTypeSupport.Framework.NativeApi.IContextInfo.ContextType</code>.\n"
  remarks: "\n<p>\nFor some of these contexts, additional information is expected\nto be available in the context metadata, which is accessible through the\n<code>Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer</code> implementation in <code>Sdl.FileTypeSupport.Framework.NativeApi.IContextInfo</code>.\n</p>\n"
  syntax:
    content: public static class TMMatchContextTypes
    content.vb: Public Module TMMatchContextTypes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.TableHeading
  commentId: F:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.TableHeading
  id: TableHeading
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes
  langs:
  - csharp
  - vb
  name: TableHeading
  nameWithType: TMMatchContextTypes.TableHeading
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.TableHeading
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nHeading cell in a table\n\nThe context metadata should identify \nthe column that this heading matches in the table.\n"
  syntax:
    content: public const string TableHeading = "x-tm-table-heading"
    return:
      type: System.String
    content.vb: Public Const TableHeading As String = "x-tm-table-heading"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.TableCell
  commentId: F:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.TableCell
  id: TableCell
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes
  langs:
  - csharp
  - vb
  name: TableCell
  nameWithType: TMMatchContextTypes.TableCell
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.TableCell
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nCell in a table\n\nThe context metadata should identify \nthe row and the column of the cell.\n"
  syntax:
    content: public const string TableCell = "x-tm-table-cell"
    return:
      type: System.String
    content.vb: Public Const TableCell As String = "x-tm-table-cell"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.Heading
  commentId: F:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.Heading
  id: Heading
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes
  langs:
  - csharp
  - vb
  name: Heading
  nameWithType: TMMatchContextTypes.Heading
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.Heading
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nHeading in a document\n\nThe context metadata should indicate\nthe heading level.\n"
  syntax:
    content: public const string Heading = "x-tm-heading"
    return:
      type: System.String
    content.vb: Public Const Heading As String = "x-tm-heading"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.PageHeaderFooter
  commentId: F:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.PageHeaderFooter
  id: PageHeaderFooter
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes
  langs:
  - csharp
  - vb
  name: PageHeaderFooter
  nameWithType: TMMatchContextTypes.PageHeaderFooter
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.PageHeaderFooter
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nText on a page header\n"
  syntax:
    content: public const string PageHeaderFooter = "x-tm-header-footer"
    return:
      type: System.String
    content.vb: Public Const PageHeaderFooter As String = "x-tm-header-footer"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.ListItem
  commentId: F:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.ListItem
  id: ListItem
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes
  langs:
  - csharp
  - vb
  name: ListItem
  nameWithType: TMMatchContextTypes.ListItem
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.ListItem
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nItem in a bulleted or numbered list\n\nThe context metadata should indicate\nthe type of list (bulleted or numbered).\n"
  syntax:
    content: public const string ListItem = "x-tm-listitem"
    return:
      type: System.String
    content.vb: Public Const ListItem As String = "x-tm-listitem"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.TagContent
  commentId: F:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.TagContent
  id: TagContent
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes
  langs:
  - csharp
  - vb
  name: TagContent
  nameWithType: TMMatchContextTypes.TagContent
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.TagContent
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nTranslatable content inside a tag\n"
  syntax:
    content: public const string TagContent = "x-tm-tag"
    return:
      type: System.String
    content.vb: Public Const TagContent As String = "x-tm-tag"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.Label
  commentId: F:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.Label
  id: Label
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: TMMatchContextTypes.Label
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.Label
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nA text label\n<p><strong></strong></p><ul><li></li></ul>\n"
  syntax:
    content: public const string Label = "x-tm-label"
    return:
      type: System.String
    content.vb: Public Const Label As String = "x-tm-label"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.IndexEntry
  commentId: F:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.IndexEntry
  id: IndexEntry
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes
  langs:
  - csharp
  - vb
  name: IndexEntry
  nameWithType: TMMatchContextTypes.IndexEntry
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.IndexEntry
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nAn index entry\n<p><strong></strong></p><ul><li></li></ul>\n"
  syntax:
    content: public const string IndexEntry = "x-tm-index-entry"
    return:
      type: System.String
    content.vb: Public Const IndexEntry As String = "x-tm-index-entry"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.LengthInformation
  commentId: F:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.LengthInformation
  id: LengthInformation
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes
  langs:
  - csharp
  - vb
  name: LengthInformation
  nameWithType: TMMatchContextTypes.LengthInformation
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.LengthInformation
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\n<p>Indicates that length restrictions apply to the content.</p>\n<p>This context type is also used for validation purposes.</p>\n"
  remarks: "\n<p>\nThe context metadata should contain the type of length information (e.g. chars, bytes) and the maximum \nand (optionally) minimum lengths as follows:\n</p>\n<ul><li></li><li></li><li></li></ul>\n"
  syntax:
    content: public const string LengthInformation = "x-tm-length-info"
    return:
      type: System.String
    content.vb: Public Const LengthInformation As String = "x-tm-length-info"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.IsDefined(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.IsDefined(System.String)
  id: IsDefined(System.String)
  parent: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes
  langs:
  - csharp
  - vb
  name: IsDefined(String)
  nameWithType: TMMatchContextTypes.IsDefined(String)
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.IsDefined(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core.Utilities
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core.Utilities
  namespace: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  summary: "\nTells whether a given context type is a predefined TM match context type.\n"
  syntax:
    content: public static bool IsDefined(string contextType)
    parameters:
    - id: contextType
      type: System.String
      description: The context type to check.
    return:
      type: System.Boolean
      description: True if the context type is predefined, false otherwise.
    content.vb: Public Shared Function IsDefined(contextType As String) As Boolean
  overload: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.IsDefined*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.IsDefined*
  commentId: Overload:Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.IsDefined
  isExternal: true
  name: IsDefined
  nameWithType: TMMatchContextTypes.IsDefined
  fullName: Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.TMMatchContextTypes.IsDefined
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
