### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable
  id: IRepetitionsTable
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  children:
  - Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Add(Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId,Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Clear
  - Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Count
  - Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.DeleteKey(Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.GetRepetitionId(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.GetRepetitions(Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Remove(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  - Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.RepetitionIds
  langs:
  - csharp
  - vb
  name: IRepetitionsTable
  nameWithType: IRepetitionsTable
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nUsed in <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties.Repetitions\" data-throw-if-not-resolved=\"false\"></xref> to keep track\nof segments with the same source language content that appear in multiple \nlocations within the document (potentially in different files).\n"
  remarks: "\n<p>\nThis table is built by a dedicated component during initial content processing.\nAssuming that the source content does not change, the table should remain valid \nas long as the document contains the same files.\n</p>\n<p>\nThe table is used during editing to implement the auto-propagation feature,\nwhereby the translation of a repeated segment can be immediately propagated\nto other locations in the same document.\n</p>\n<p>\nA <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId\" data-throw-if-not-resolved=\"false\"></xref> is used to identify a set \nof source segments with the same content (repetitions) in the table. The actual\nsegments that are associated with the repetition can be retrieved by \ncalling <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.GetRepetitions(Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId)\" data-throw-if-not-resolved=\"false\"></xref>. A segment is referenced as a paragraph unit id\nand the associated segment id (this is necessary since the same segment ids can be re-used\nin multiple files in the document (in fact, it is only guaranteed to be unique within\na paragraph unit).\n</p>\n<p>\nIt is left to the implementation to determine how repetitions are calculated\nand propagated. Sophisticated algorithms can apply repetitions also when\nthe source content differs, for example, with regards to tagging and placeables.\nVery often, a temporary translation memory is used to build the repetition table.\n</p>\n<p>\nWhen a translation is applied using auto-propagation, the corresponding \nrepetition id should be stored in the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.ITranslationOrigin.RepetitionTableId\" data-throw-if-not-resolved=\"false\"></xref>\nproperty. This allows the editor to better track auto-propagated segments.\n</p>\n"
  syntax:
    content: 'public interface IRepetitionsTable : ICloneable'
    content.vb: >-
      Public Interface IRepetitionsTable
          Inherits ICloneable
  inheritedMembers:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.GetRepetitions(Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.GetRepetitions(Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId)
  id: GetRepetitions(Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable
  langs:
  - csharp
  - vb
  name: GetRepetitions(RepetitionId)
  nameWithType: IRepetitionsTable.GetRepetitions(RepetitionId)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.GetRepetitions(Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nReturns the repetition list relating to a specific RepetitionId.\n"
  syntax:
    content: IList<Pair<ParagraphUnitId, SegmentId>> GetRepetitions(RepetitionId repetitions)
    parameters:
    - id: repetitions
      type: Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId
    return:
      type: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.Pair{Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId}}
    content.vb: Function GetRepetitions(repetitions As RepetitionId) As IList(Of Pair(Of ParagraphUnitId, SegmentId))
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.GetRepetitions*
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.GetRepetitionId(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.GetRepetitionId(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  id: GetRepetitionId(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable
  langs:
  - csharp
  - vb
  name: GetRepetitionId(ParagraphUnitId, SegmentId)
  nameWithType: IRepetitionsTable.GetRepetitionId(ParagraphUnitId, SegmentId)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.GetRepetitionId(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId, Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nFinds the repetition id of a segment.\n"
  syntax:
    content: RepetitionId GetRepetitionId(ParagraphUnitId paragraphUnitId, SegmentId segmentId)
    parameters:
    - id: paragraphUnitId
      type: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
      description: <xref href="Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties.ParagraphUnitId" data-throw-if-not-resolved="false"></xref> for the paragraph in which the segment appears
    - id: segmentId
      type: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
      description: <xref href="Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties.Id" data-throw-if-not-resolved="false"></xref> for the segment
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId
      description: "The repetition id for the specified segment, or <code>default (RepetitionId)</code> if \nthe table has no entry for this segment."
    content.vb: Function GetRepetitionId(paragraphUnitId As ParagraphUnitId, segmentId As SegmentId) As RepetitionId
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.GetRepetitionId*
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Add(Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId,Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Add(Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId,Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  id: Add(Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId,Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable
  langs:
  - csharp
  - vb
  name: Add(RepetitionId, ParagraphUnitId, SegmentId)
  nameWithType: IRepetitionsTable.Add(RepetitionId, ParagraphUnitId, SegmentId)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Add(Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId, Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId, Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nAdds a repeated segment to the table.\n"
  syntax:
    content: bool Add(RepetitionId key, ParagraphUnitId pu, SegmentId newRepetition)
    parameters:
    - id: key
      type: Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId
    - id: pu
      type: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
    - id: newRepetition
      type: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
    return:
      type: System.Boolean
    content.vb: Function Add(key As RepetitionId, pu As ParagraphUnitId, newRepetition As SegmentId) As Boolean
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Add*
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Remove(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Remove(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  id: Remove(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable
  langs:
  - csharp
  - vb
  name: Remove(ParagraphUnitId, SegmentId)
  nameWithType: IRepetitionsTable.Remove(ParagraphUnitId, SegmentId)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Remove(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId, Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nRemove a repeated segment from the table.\n"
  remarks: "\nWhen the last segment for a repetition id is removed, the repetition id is also removed.\n"
  syntax:
    content: bool Remove(ParagraphUnitId paragraphUnitId, SegmentId segmentId)
    parameters:
    - id: paragraphUnitId
      type: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
    - id: segmentId
      type: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
    return:
      type: System.Boolean
      description: True if the segment was removed, otherwise false
    content.vb: Function Remove(paragraphUnitId As ParagraphUnitId, segmentId As SegmentId) As Boolean
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Remove*
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.DeleteKey(Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.DeleteKey(Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId)
  id: DeleteKey(Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable
  langs:
  - csharp
  - vb
  name: DeleteKey(RepetitionId)
  nameWithType: IRepetitionsTable.DeleteKey(RepetitionId)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.DeleteKey(Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nRemoves all repetitions with the specified id from the table.\n"
  syntax:
    content: void DeleteKey(RepetitionId repetitions)
    parameters:
    - id: repetitions
      type: Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId
    content.vb: Sub DeleteKey(repetitions As RepetitionId)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.DeleteKey*
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Clear
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Clear
  id: Clear
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: IRepetitionsTable.Clear()
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Clear()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nRemove all entries from the table.\n"
  syntax:
    content: void Clear()
    content.vb: Sub Clear
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Clear*
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.RepetitionIds
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.RepetitionIds
  id: RepetitionIds
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable
  langs:
  - csharp
  - vb
  name: RepetitionIds
  nameWithType: IRepetitionsTable.RepetitionIds
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.RepetitionIds
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nUse this iterator to iterate over the pepetition ids in the repetitions table.\n"
  syntax:
    content: IEnumerable<RepetitionId> RepetitionIds { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId}
    content.vb: ReadOnly Property RepetitionIds As IEnumerable(Of RepetitionId)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.RepetitionIds*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Count
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Count
  id: Count
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: IRepetitionsTable.Count
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Count
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nThe number of repetition ids in the table\n"
  syntax:
    content: int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Count As Integer
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Count*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.GetRepetitions*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.GetRepetitions
  isExternal: true
  name: GetRepetitions
  nameWithType: IRepetitionsTable.GetRepetitions
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.GetRepetitions
- uid: Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: RepetitionId
  nameWithType: RepetitionId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId
- uid: System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.Pair{Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId}}
  commentId: T:System.Collections.Generic.IList{Sdl.FileTypeSupport.Framework.Pair{Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Pair<ParagraphUnitId, SegmentId>>
  nameWithType: IList<Pair<ParagraphUnitId, SegmentId>>
  fullName: System.Collections.Generic.IList<Sdl.FileTypeSupport.Framework.Pair<Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId, Sdl.FileTypeSupport.Framework.NativeApi.SegmentId>>
  nameWithType.vb: IList(Of Pair(Of ParagraphUnitId, SegmentId))
  fullName.vb: System.Collections.Generic.IList(Of Sdl.FileTypeSupport.Framework.Pair(Of Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId, Sdl.FileTypeSupport.Framework.NativeApi.SegmentId))
  name.vb: IList(Of Pair(Of ParagraphUnitId, SegmentId))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    nameWithType: Pair
    fullName: Sdl.FileTypeSupport.Framework.Pair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
    name: ParagraphUnitId
    nameWithType: ParagraphUnitId
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
    name: SegmentId
    nameWithType: SegmentId
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    nameWithType: Pair
    fullName: Sdl.FileTypeSupport.Framework.Pair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
    name: ParagraphUnitId
    nameWithType: ParagraphUnitId
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
    name: SegmentId
    nameWithType: SegmentId
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.GetRepetitionId*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.GetRepetitionId
  isExternal: true
  name: GetRepetitionId
  nameWithType: IRepetitionsTable.GetRepetitionId
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.GetRepetitionId
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: ParagraphUnitId
  nameWithType: ParagraphUnitId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: SegmentId
  nameWithType: SegmentId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Add*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Add
  isExternal: true
  name: Add
  nameWithType: IRepetitionsTable.Add
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Add
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Remove*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Remove
  isExternal: true
  name: Remove
  nameWithType: IRepetitionsTable.Remove
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Remove
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.DeleteKey*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.DeleteKey
  isExternal: true
  name: DeleteKey
  nameWithType: IRepetitionsTable.DeleteKey
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.DeleteKey
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Clear*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Clear
  isExternal: true
  name: Clear
  nameWithType: IRepetitionsTable.Clear
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Clear
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.RepetitionIds*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.RepetitionIds
  isExternal: true
  name: RepetitionIds
  nameWithType: IRepetitionsTable.RepetitionIds
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.RepetitionIds
- uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<RepetitionId>
  nameWithType: IEnumerable<RepetitionId>
  fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId>
  nameWithType.vb: IEnumerable(Of RepetitionId)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId)
  name.vb: IEnumerable(Of RepetitionId)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId
    name: RepetitionId
    nameWithType: RepetitionId
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId
    name: RepetitionId
    nameWithType: RepetitionId
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.RepetitionId
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Count*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Count
  isExternal: true
  name: Count
  nameWithType: IRepetitionsTable.Count
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IRepetitionsTable.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
