### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
  id: TextLocation
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  children:
  - Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor
  - Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  - Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IText,System.Int32)
  - Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.Location,System.Int32)
  - Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation)
  - Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Clone
  - Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Equals(System.Object)
  - Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.GetHashCode
  - Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.IsValid
  - Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Location
  - Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.TextOffset
  - Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.ToString
  langs:
  - csharp
  - vb
  name: TextLocation
  nameWithType: TextLocation
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nReference to a location inside the bilingual content model that\nmay be inside a text node\n"
  remarks: "\n<p>\nConsists of a <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Location\" data-throw-if-not-resolved=\"false\"></xref> and a text\noffset (0-based). The text offset is used only when the location references\na text item.\n</p>\n"
  syntax:
    content: 'public class TextLocation : ICloneable'
    content.vb: >-
      Public Class TextLocation
          Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
  langs:
  - csharp
  - vb
  name: TextLocation()
  nameWithType: TextLocation.TextLocation()
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.TextLocation()
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nConstructs an uninitialized location object.\n"
  syntax:
    content: public TextLocation()
    content.vb: Public Sub New
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  id: '#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)'
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
  langs:
  - csharp
  - vb
  name: TextLocation(IAbstractMarkupData)
  nameWithType: TextLocation.TextLocation(IAbstractMarkupData)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.TextLocation(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nConstructs from a markup data item; the location will reference the\nposition just in front of the item.\n"
  syntax:
    content: public TextLocation(IAbstractMarkupData item)
    parameters:
    - id: item
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    content.vb: Public Sub New(item As IAbstractMarkupData)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IText,System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IText,System.Int32)
  id: '#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IText,System.Int32)'
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
  langs:
  - csharp
  - vb
  name: TextLocation(IText, Int32)
  nameWithType: TextLocation.TextLocation(IText, Int32)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.TextLocation(Sdl.FileTypeSupport.Framework.BilingualApi.IText, System.Int32)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nConstructs from a markup data text item; the location will reference the\nspecified character offset into the text.\n"
  syntax:
    content: public TextLocation(IText textItem, int offsetIntoText)
    parameters:
    - id: textItem
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IText
    - id: offsetIntoText
      type: System.Int32
    content.vb: Public Sub New(textItem As IText, offsetIntoText As Integer)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.Location,System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.Location,System.Int32)
  id: '#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.Location,System.Int32)'
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
  langs:
  - csharp
  - vb
  name: TextLocation(Location, Int32)
  nameWithType: TextLocation.TextLocation(Location, Int32)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.TextLocation(Sdl.FileTypeSupport.Framework.BilingualApi.Location, System.Int32)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nInitializes using the specified location and text offset.\n"
  syntax:
    content: public TextLocation(Location location, int textOffset)
    parameters:
    - id: location
      type: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    - id: textOffset
      type: System.Int32
    content.vb: Public Sub New(location As Location, textOffset As Integer)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation)
  id: '#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation)'
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
  langs:
  - csharp
  - vb
  name: TextLocation(TextLocation)
  nameWithType: TextLocation.TextLocation(TextLocation)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.TextLocation(Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nProtected constructor used in cloning\n"
  syntax:
    content: protected TextLocation(TextLocation other)
    parameters:
    - id: other
      type: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
    content.vb: Protected Sub New(other As TextLocation)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.ToString
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.ToString
  id: ToString
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TextLocation.ToString()
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.ToString()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nShould be used for debugging purposes only.\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Equals(System.Object)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: TextLocation.Equals(Object)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Equals(System.Object)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nObjects are considered equal if they refer to the \nsame location and text offset.\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.GetHashCode
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.GetHashCode
  id: GetHashCode
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TextLocation.GetHashCode()
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.GetHashCode()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nHash code is computed by combining the hashes of the location and the text offset.\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Clone
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Clone
  id: Clone
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: TextLocation.Clone()
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Clone()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nReturns a deep clone of the object.\n"
  syntax:
    content: public object Clone()
    return:
      type: System.Object
    content.vb: Public Function Clone As Object
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Location
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Location
  id: Location
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: TextLocation.Location
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Location
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nThe location of the item referred to. If this is an <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IText\" data-throw-if-not-resolved=\"false\"></xref> the\n<xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.TextOffset\" data-throw-if-not-resolved=\"false\"></xref> property determines the location inside that text.\nThe root of the location should be a <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IParagraph\" data-throw-if-not-resolved=\"false\"></xref> container.\n"
  syntax:
    content: public Location Location { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.Location
    content.vb: Public Property Location As Location
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Location*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.TextOffset
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.TextOffset
  id: TextOffset
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
  langs:
  - csharp
  - vb
  name: TextOffset
  nameWithType: TextLocation.TextOffset
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.TextOffset
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nWhen the <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Location\" data-throw-if-not-resolved=\"false\"></xref> property refers to an <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IText\" data-throw-if-not-resolved=\"false\"></xref> item, this\nproperty indicates the 0-based character index inside the text that the text position\nrefers to. This property should be a valid 0-based index into the text. It should be\nless than or equal to the number of characters in the text.\n"
  syntax:
    content: public int TextOffset { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TextOffset As Integer
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.TextOffset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.IsValid
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.IsValid
  id: IsValid
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: TextLocation.IsValid
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.IsValid
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\n<code>True</code> if the text location is a valid location\n"
  syntax:
    content: public bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValid As Boolean
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.IsValid*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.#ctor
  isExternal: true
  name: TextLocation
  nameWithType: TextLocation.TextLocation
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.TextLocation
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IAbstractMarkupData
  nameWithType: IAbstractMarkupData
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IText
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IText
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IText
  nameWithType: IText
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IText
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.Location
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.Location
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: Location
  nameWithType: Location
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.Location
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: TextLocation
  nameWithType: TextLocation
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.ToString*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.ToString
  isExternal: true
  name: ToString
  nameWithType: TextLocation.ToString
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Equals*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Equals
  isExternal: true
  name: Equals
  nameWithType: TextLocation.Equals
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.GetHashCode*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: TextLocation.GetHashCode
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.GetHashCode
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Clone*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Clone
  isExternal: true
  name: Clone
  nameWithType: TextLocation.Clone
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Location*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Location
  isExternal: true
  name: Location
  nameWithType: TextLocation.Location
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.Location
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.TextOffset*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.TextOffset
  isExternal: true
  name: TextOffset
  nameWithType: TextLocation.TextOffset
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.TextOffset
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.IsValid*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.IsValid
  isExternal: true
  name: IsValid
  nameWithType: TextLocation.IsValid
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.TextLocation.IsValid
