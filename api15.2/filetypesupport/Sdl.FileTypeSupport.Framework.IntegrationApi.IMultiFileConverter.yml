### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  id: IMultiFileConverter
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.AddExtractor(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ApplyDocumentPropertiesToExtractors
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentGenerator
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentOutputProperties
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentOutputPropertiesProvider
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualVerifiersProvider
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DependencyFileLocator
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedLanguagesCorrespondToDocumentProperties
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedSourceLanguage
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedTargetLanguage
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DocumentInfo
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Extractors
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.InsertExtractor(System.Int32,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ItemFactory
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Message
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.NativeGeneratorProvider
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.OutputPropertiesProvider
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Progress
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.PropertiesFactory
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.RemoveExtractor(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SetDocumentInfo(Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties,System.Boolean)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SharedObjects
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SynchronizeDocumentProperties
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.UpdateDocumentPropertiesFromExtractors
  langs:
  - csharp
  - vb
  name: IMultiFileConverter
  nameWithType: IMultiFileConverter
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nUsed for converting and processing content from one or more files as a single bilingual document.\n"
  syntax:
    content: 'public interface IMultiFileConverter : IBilingualProcessorContainer'
    content.vb: >-
      Public Interface IMultiFileConverter
          Inherits IBilingualProcessorContainer
  inheritedMembers:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SetDocumentInfo(Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties,System.Boolean)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SetDocumentInfo(Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties,System.Boolean)
  id: SetDocumentInfo(Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties,System.Boolean)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: SetDocumentInfo(IDocumentProperties, Boolean)
  nameWithType: IMultiFileConverter.SetDocumentInfo(IDocumentProperties, Boolean)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SetDocumentInfo(Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties, System.Boolean)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nSet document properties, optionally updating source and target languages for each of the extractors.\n"
  syntax:
    content: void SetDocumentInfo(IDocumentProperties newDocumentInfo, bool applyToAllExtractors)
    parameters:
    - id: newDocumentInfo
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
    - id: applyToAllExtractors
      type: System.Boolean
    content.vb: Sub SetDocumentInfo(newDocumentInfo As IDocumentProperties, applyToAllExtractors As Boolean)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SetDocumentInfo*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.UpdateDocumentPropertiesFromExtractors
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.UpdateDocumentPropertiesFromExtractors
  id: UpdateDocumentPropertiesFromExtractors
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: UpdateDocumentPropertiesFromExtractors()
  nameWithType: IMultiFileConverter.UpdateDocumentPropertiesFromExtractors()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.UpdateDocumentPropertiesFromExtractors()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nSet source and target languages of the document properties from the properties detected by the file sniffers\nassociated with the extractors. If different extractors have detected differing languages with certainty, this method does not change\nthe document properties and returns <code>false</code>. If different languages are detected with a detection level less then certain, the language with \nthe highest detection level will be used. If there is more than one language, the first one will take precedence.\n<p>\nIf a target language has been set in the document properties, but no target language has been detected in the extractors,\nthe target language of the document properties will be set to an uninitialized value.\n</p>\n"
  syntax:
    content: bool UpdateDocumentPropertiesFromExtractors()
    return:
      type: System.Boolean
      description: "\n<code>True</code> if there were no conflicting languages and the document properties have been updated.\n"
    content.vb: Function UpdateDocumentPropertiesFromExtractors As Boolean
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.UpdateDocumentPropertiesFromExtractors*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ApplyDocumentPropertiesToExtractors
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ApplyDocumentPropertiesToExtractors
  id: ApplyDocumentPropertiesToExtractors
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: ApplyDocumentPropertiesToExtractors()
  nameWithType: IMultiFileConverter.ApplyDocumentPropertiesToExtractors()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ApplyDocumentPropertiesToExtractors()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nUpdates the file properties for each of the extractors to use the source and target languages specified in the document\nproperties.\n"
  syntax:
    content: void ApplyDocumentPropertiesToExtractors()
    content.vb: Sub ApplyDocumentPropertiesToExtractors
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ApplyDocumentPropertiesToExtractors*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SynchronizeDocumentProperties
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SynchronizeDocumentProperties
  id: SynchronizeDocumentProperties
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: SynchronizeDocumentProperties()
  nameWithType: IMultiFileConverter.SynchronizeDocumentProperties()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SynchronizeDocumentProperties()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nProperly synchronizes document properties between the converter and its extractors.\nIf document properties are available from a bilingual parser, they will be used. Otherwise,\nthe document properties will be deducted by querying existing extractors for languages.\n"
  remarks: "\n<p>\nIf the first extractor has a bilingual parser, use its document properties if available (by \ncalling <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SetDocumentInfo(Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>).\nOtherwise, call <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.UpdateDocumentPropertiesFromExtractors\" data-throw-if-not-resolved=\"false\"></xref> to retrieve the properties from\nthe extractors, and if they are valid (<xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedLanguagesCorrespondToDocumentProperties\" data-throw-if-not-resolved=\"false\"></xref> returns true),\ncommunicate them to all the extractors (by calling <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ApplyDocumentPropertiesToExtractors\" data-throw-if-not-resolved=\"false\"></xref>).		\n</p>\n"
  syntax:
    content: void SynchronizeDocumentProperties()
    content.vb: Sub SynchronizeDocumentProperties
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SynchronizeDocumentProperties*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse
  id: Parse
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: Parse()
  nameWithType: IMultiFileConverter.Parse()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nInitializes the file type components and repeatedly invokes the ParseNext method on the parser until all content has been processed.\n\nIf there is a native parser, it will be used. Otherwise ,if there is a bilingual parser, that parser will be used.\nIf no parser has been specified, an exception will be thrown.\n"
  remarks: >-
    Always call this or the ParseNext method on the converter, never directly on the parser, since this will not

    initialize the file type components properly.
  syntax:
    content: void Parse()
    content.vb: Sub Parse
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext
  id: ParseNext
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: ParseNext()
  nameWithType: IMultiFileConverter.ParseNext()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nInvokes the ParseNext() method on the appropriate parser, causing a chunk of content to be processed.\nEnsures that the the parser components are initialized before parsing commences for the first time.\n"
  syntax:
    content: bool ParseNext()
    return:
      type: System.Boolean
      description: True if there is more content to be parsed
    content.vb: Function ParseNext As Boolean
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.AddExtractor(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.AddExtractor(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)
  id: AddExtractor(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: AddExtractor(IFileExtractor)
  nameWithType: IMultiFileConverter.AddExtractor(IFileExtractor)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.AddExtractor(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nAdds another file converter to be used. The converter should be initialized properly.\n"
  syntax:
    content: void AddExtractor(IFileExtractor extractor)
    parameters:
    - id: extractor
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
    content.vb: Sub AddExtractor(extractor As IFileExtractor)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.AddExtractor*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.InsertExtractor(System.Int32,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.InsertExtractor(System.Int32,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)
  id: InsertExtractor(System.Int32,Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: InsertExtractor(Int32, IFileExtractor)
  nameWithType: IMultiFileConverter.InsertExtractor(Int32, IFileExtractor)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.InsertExtractor(System.Int32, Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nInserts a file converter to be used at a specific index. The converter should be\ninitialized properly.\n"
  syntax:
    content: void InsertExtractor(int index, IFileExtractor extractor)
    parameters:
    - id: index
      type: System.Int32
    - id: extractor
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
    content.vb: Sub InsertExtractor(index As Integer, extractor As IFileExtractor)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.InsertExtractor*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.RemoveExtractor(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.RemoveExtractor(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)
  id: RemoveExtractor(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: RemoveExtractor(IFileExtractor)
  nameWithType: IMultiFileConverter.RemoveExtractor(IFileExtractor)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.RemoveExtractor(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nRemoves the specified converter.\n"
  syntax:
    content: bool RemoveExtractor(IFileExtractor extractor)
    parameters:
    - id: extractor
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
      description: Converter to be removed
    return:
      type: System.Boolean
      description: True if the converter was part of the collection, false if no change was made
    content.vb: Function RemoveExtractor(extractor As IFileExtractor) As Boolean
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.RemoveExtractor*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.PropertiesFactory
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.PropertiesFactory
  id: PropertiesFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: PropertiesFactory
  nameWithType: IMultiFileConverter.PropertiesFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.PropertiesFactory
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nConvenience getter for the properties factory that will be used by the converters and file type components.\nThe implementation should return the properties factory from the document item factory, or <code>null</code> if none.\n"
  syntax:
    content: IPropertiesFactory PropertiesFactory { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
    content.vb: ReadOnly Property PropertiesFactory As IPropertiesFactory
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.PropertiesFactory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ItemFactory
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ItemFactory
  id: ItemFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: ItemFactory
  nameWithType: IMultiFileConverter.ItemFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ItemFactory
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe bilingual content model item factory that will be used by the converters and bilingual file type components\n"
  syntax:
    content: IDocumentItemFactory ItemFactory { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory
    content.vb: Property ItemFactory As IDocumentItemFactory
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ItemFactory*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DocumentInfo
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DocumentInfo
  id: DocumentInfo
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: DocumentInfo
  nameWithType: IMultiFileConverter.DocumentInfo
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DocumentInfo
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCommon properties communicated to all bilingual processing components\n"
  remarks: "\n<p>\nNote that changing the document properties by accessing this property will not automatically update\nlanguage settings for any of the extractors. Call <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SetDocumentInfo(Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ApplyDocumentPropertiesToExtractors\" data-throw-if-not-resolved=\"false\"></xref> to do that.\n</p>\n"
  syntax:
    content: IDocumentProperties DocumentInfo { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
    content.vb: ReadOnly Property DocumentInfo As IDocumentProperties
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DocumentInfo*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SharedObjects
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SharedObjects
  id: SharedObjects
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: SharedObjects
  nameWithType: IMultiFileConverter.SharedObjects
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SharedObjects
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe shared objects that will be communicated across all components\nthat are used in content processing. Components that implement <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.ISharedObjectsAware\" data-throw-if-not-resolved=\"false\"></xref> will\nreceive this interface via the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.ISharedObjectsAware.SetSharedObjects(Sdl.FileTypeSupport.Framework.NativeApi.ISharedObjects)\" data-throw-if-not-resolved=\"false\"></xref> method before\nthey are used for content processing.\n"
  remarks: "\n<p>\nApplications may publish objects to be used by file type components during the conversion process\nby calling <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.ISharedObjects.PublishSharedObject(System.String%2cSystem.Object%2cSdl.FileTypeSupport.Framework.NativeApi.IdConflictResolution)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  syntax:
    content: ISharedObjects SharedObjects { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.ISharedObjects
    content.vb: ReadOnly Property SharedObjects As ISharedObjects
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SharedObjects*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Extractors
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Extractors
  id: Extractors
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: Extractors
  nameWithType: IMultiFileConverter.Extractors
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Extractors
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nRead-only access to the file extractors used for reading files.\n"
  remarks: >
    The order of the extractors reflects the order in which they will be used.

    <p>You must use <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.AddExtractor(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)" data-throw-if-not-resolved="false"></xref> and <xref href="Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.RemoveExtractor(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)" data-throw-if-not-resolved="false"></xref>

    if you want to modify the collection.</p>
  syntax:
    content: IEnumerable<IFileExtractor> Extractors { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor}
    content.vb: ReadOnly Property Extractors As IEnumerable(Of IFileExtractor)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Extractors*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentGenerator
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentGenerator
  id: BilingualDocumentGenerator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: BilingualDocumentGenerator
  nameWithType: IMultiFileConverter.BilingualDocumentGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentGenerator
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe purpose of a bilingual generator is to serialize all bilingual content (potentially\nfrom different native files) into a single bilingual output (e.g. an XLIFF file) that will act as \na persistent storage for the bilingual content, from which it can be fully de-serialized.\n"
  remarks: "\n<p>\nIf set, the input of the bilingual generator is used as the last bilingual content processor.\n</p>\n<p>\nWhen a bilingual generator is specified, the <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.NativeGeneratorProvider\" data-throw-if-not-resolved=\"false\"></xref> and \n<xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.OutputPropertiesProvider\" data-throw-if-not-resolved=\"false\"></xref> are not used, even if they are set.\n</p>\n<p>\nSet this to <code>null</code> if you are not writing to an intermediate bilingual file format.\n</p>\n<p>\nWhen set, the <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentOutputPropertiesProvider\" data-throw-if-not-resolved=\"false\"></xref> is used.\n</p>\n"
  syntax:
    content: IBilingualDocumentGenerator BilingualDocumentGenerator { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
    content.vb: Property BilingualDocumentGenerator As IBilingualDocumentGenerator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentGenerator*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.NativeGeneratorProvider
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.NativeGeneratorProvider
  id: NativeGeneratorProvider
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: NativeGeneratorProvider
  nameWithType: IMultiFileConverter.NativeGeneratorProvider
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.NativeGeneratorProvider
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nWhen converting to native format, this property represents the \nprovider that will attempt to create IFileGenerator instances,\nand provide output settings when needed by the framework.\n\nThis property should be null if not converting to native format.\n"
  remarks: "\n<p>\nThe <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.BuildNativeGenerator(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties)\" data-throw-if-not-resolved=\"false\"></xref> method can be used\nas an implementation for this delegate.\n</p>\n"
  syntax:
    content: NativeGeneratorProvider NativeGeneratorProvider { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.NativeGeneratorProvider
    content.vb: Property NativeGeneratorProvider As NativeGeneratorProvider
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.NativeGeneratorProvider*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualVerifiersProvider
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualVerifiersProvider
  id: BilingualVerifiersProvider
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: BilingualVerifiersProvider
  nameWithType: IMultiFileConverter.BilingualVerifiersProvider
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualVerifiersProvider
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nIn order to add the file specific verifiers into the processing chain, \nwe can specify a BilingualVerifiersProvider. A default implementation\nis provided by the FileTypeManager. If no bilingual \nverification is required, this property should be left null.\n"
  syntax:
    content: BilingualVerifiersProvider BilingualVerifiersProvider { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualVerifiersProvider
    content.vb: Property BilingualVerifiersProvider As BilingualVerifiersProvider
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualVerifiersProvider*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.OutputPropertiesProvider
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.OutputPropertiesProvider
  id: OutputPropertiesProvider
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: OutputPropertiesProvider
  nameWithType: IMultiFileConverter.OutputPropertiesProvider
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.OutputPropertiesProvider
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nWhen converting to native format, this property must be set.\nThis delegate is called by the converter to set the output\nfilename, encoding, language, etc. for each native file produced.\n"
  syntax:
    content: OutputPropertiesProvider OutputPropertiesProvider { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
    content.vb: Property OutputPropertiesProvider As OutputPropertiesProvider
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.OutputPropertiesProvider*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DependencyFileLocator
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DependencyFileLocator
  id: DependencyFileLocator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: DependencyFileLocator
  nameWithType: IMultiFileConverter.DependencyFileLocator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DependencyFileLocator
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nWhen parsing intermediate bilingual documents this property may be set\nto provide assistance in locating missing linked dependency files.\nThe provided delegate will be passed to any bilingual document parsers \nbefore they are used for processing.\n"
  remarks: "\n<p>\nIf not provided, and a dependency file cannot be located, a warning message\nthe parser may still attempt to process the file, but it is recommended\nto generate a warning message.\n</p>\n"
  syntax:
    content: DependencyFileLocator DependencyFileLocator { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator
    content.vb: Property DependencyFileLocator As DependencyFileLocator
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DependencyFileLocator*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentOutputPropertiesProvider
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentOutputPropertiesProvider
  id: BilingualDocumentOutputPropertiesProvider
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: BilingualDocumentOutputPropertiesProvider
  nameWithType: IMultiFileConverter.BilingualDocumentOutputPropertiesProvider
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentOutputPropertiesProvider
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nWhen writing bilingual document files (e.g. SDL XLIFF), this property must be set.\nThe delegate is called by the converter to determine the \nfile name of the bilingual document to be created.\n"
  syntax:
    content: BilingualDocumentOutputPropertiesProvider BilingualDocumentOutputPropertiesProvider { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider
    content.vb: Property BilingualDocumentOutputPropertiesProvider As BilingualDocumentOutputPropertiesProvider
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentOutputPropertiesProvider*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentOutputProperties
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentOutputProperties
  id: BilingualDocumentOutputProperties
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: BilingualDocumentOutputProperties
  nameWithType: IMultiFileConverter.BilingualDocumentOutputProperties
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentOutputProperties
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nAfter saving a bilingual document, this property provides access to the output \nproperties that were used. This can be used to find the file name of the created\noutput file and to determine which dependency files are referenced (linked) to\nthe file rather than embedded inside the file.\n"
  syntax:
    content: IBilingualDocumentOutputProperties BilingualDocumentOutputProperties { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentOutputProperties
    content.vb: ReadOnly Property BilingualDocumentOutputProperties As IBilingualDocumentOutputProperties
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentOutputProperties*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedLanguagesCorrespondToDocumentProperties
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedLanguagesCorrespondToDocumentProperties
  id: DetectedLanguagesCorrespondToDocumentProperties
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: DetectedLanguagesCorrespondToDocumentProperties
  nameWithType: IMultiFileConverter.DetectedLanguagesCorrespondToDocumentProperties
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedLanguagesCorrespondToDocumentProperties
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\n<code>True</code> if the source and target languages in the <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DocumentInfo\" data-throw-if-not-resolved=\"false\"></xref> correspond\nto the languages detected by the file sniffers for each of the extractors.\n<code>False</code> if any of the extractors is certain that its file is using a different source or target language.\n"
  remarks: "\n<p>\nThe method <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.UpdateDocumentPropertiesFromExtractors\" data-throw-if-not-resolved=\"false\"></xref> can be called to set the current document\nproperties from the detected languages. However, if there are multiple extractors that detect with certainty different languages,\nthis will not work.\n</p>\n<p>\nYou can ensure that specific languages get applied to all extractors by updating the document properties and by calling <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ApplyDocumentPropertiesToExtractors\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nThe <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedSourceLanguage\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedTargetLanguage\" data-throw-if-not-resolved=\"false\"></xref> properties can be used to retrieve the \nsource and target language detected by the extractors if a common language is detected and can be used. You can also access the detected\nsource and target languages explicitly for each extractor by looking at <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor.FileConversionProperties\" data-throw-if-not-resolved=\"false\"></xref> and \nchecking the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties.FileSnifferInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  syntax:
    content: bool DetectedLanguagesCorrespondToDocumentProperties { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property DetectedLanguagesCorrespondToDocumentProperties As Boolean
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedLanguagesCorrespondToDocumentProperties*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedSourceLanguage
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedSourceLanguage
  id: DetectedSourceLanguage
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: DetectedSourceLanguage
  nameWithType: IMultiFileConverter.DetectedSourceLanguage
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedSourceLanguage
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe source language for all extractors, or <code>null</code> if conflicting source languages have been determined with certainty. The detection level\nthat is returned is the highest detection level for the source language provided by the extractors.\n"
  remarks: "\n<p>\nYou can also access the detected source and target languages explicitly for each extractor \nby looking at <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo\" data-throw-if-not-resolved=\"false\"></xref> in the <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor.FileConversionProperties\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>		\n"
  syntax:
    content: Pair<Language, DetectionLevel> DetectedSourceLanguage { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.Pair{Sdl.Core.Globalization.Language,Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel}
    content.vb: ReadOnly Property DetectedSourceLanguage As Pair(Of Language, DetectionLevel)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedSourceLanguage*
  seealso:
  - linkId: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedLanguagesCorrespondToDocumentProperties
    commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedLanguagesCorrespondToDocumentProperties
  - linkId: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedTargetLanguage
    commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedTargetLanguage
  - linkId: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.UpdateDocumentPropertiesFromExtractors
    commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.UpdateDocumentPropertiesFromExtractors
  - linkId: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ApplyDocumentPropertiesToExtractors
    commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ApplyDocumentPropertiesToExtractors
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedTargetLanguage
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedTargetLanguage
  id: DetectedTargetLanguage
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: DetectedTargetLanguage
  nameWithType: IMultiFileConverter.DetectedTargetLanguage
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedTargetLanguage
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe target language for all extractors, or <code>null</code> if conflicting target languages have been determined with certainty. The detection level\nthat is returned is the highest detection level for the target language provided by the extractors.\n"
  remarks: "\n<p>\nYou can also access the detected source and target languages explicitly for each extractor \nby looking at <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.SniffInfo\" data-throw-if-not-resolved=\"false\"></xref> in the <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor.FileConversionProperties\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>		\n"
  syntax:
    content: Pair<Language, DetectionLevel> DetectedTargetLanguage { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.Pair{Sdl.Core.Globalization.Language,Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel}
    content.vb: ReadOnly Property DetectedTargetLanguage As Pair(Of Language, DetectionLevel)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedTargetLanguage*
  seealso:
  - linkId: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedLanguagesCorrespondToDocumentProperties
    commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedLanguagesCorrespondToDocumentProperties
  - linkId: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedTargetLanguage
    commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedTargetLanguage
  - linkId: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.UpdateDocumentPropertiesFromExtractors
    commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.UpdateDocumentPropertiesFromExtractors
  - linkId: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ApplyDocumentPropertiesToExtractors
    commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ApplyDocumentPropertiesToExtractors
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Message
  commentId: E:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Message
  id: Message
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: IMultiFileConverter.Message
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Message
  type: Event
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nRaised when a message is reported from a file type component.\n"
  syntax:
    content: event EventHandler<MessageEventArgs> Message
    return:
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
    content.vb: Event Message As EventHandler(Of MessageEventArgs)
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Progress
  commentId: E:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Progress
  id: Progress
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: IMultiFileConverter.Progress
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Progress
  type: Event
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThis event is fired when any of the the native or bilingual parser fires progress events.\n<p>The reported progress constitutes the computed total progress for all files being processed.</p>\n"
  syntax:
    content: event EventHandler<BatchProgressEventArgs> Progress
    return:
      type: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs}
    content.vb: Event Progress As EventHandler(Of BatchProgressEventArgs)
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: AddBilingualProcessor(IBilingualContentProcessor)
  nameWithType: IBilingualProcessorContainer.AddBilingualProcessor(IBilingualContentProcessor)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: AddBilingualProcessor
    nameWithType: IBilingualProcessorContainer.AddBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: AddBilingualProcessor
    nameWithType: IBilingualProcessorContainer.AddBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.AddBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: InsertBilingualProcessor(Int32, IBilingualContentProcessor)
  nameWithType: IBilingualProcessorContainer.InsertBilingualProcessor(Int32, IBilingualContentProcessor)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32, Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: InsertBilingualProcessor
    nameWithType: IBilingualProcessorContainer.InsertBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor(System.Int32,Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: InsertBilingualProcessor
    nameWithType: IBilingualProcessorContainer.InsertBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.InsertBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: RemoveBilingualProcessor(IBilingualContentProcessor)
  nameWithType: IBilingualProcessorContainer.RemoveBilingualProcessor(IBilingualContentProcessor)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: RemoveBilingualProcessor
    nameWithType: IBilingualProcessorContainer.RemoveBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor(Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor)
    name: RemoveBilingualProcessor
    nameWithType: IBilingualProcessorContainer.RemoveBilingualProcessor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.RemoveBilingualProcessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    name: IBilingualContentProcessor
    nameWithType: IBilingualContentProcessor
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualContentProcessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: GetBilingualProcessors()
  nameWithType: IBilingualProcessorContainer.GetBilingualProcessors()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors()
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
    name: GetBilingualProcessors
    nameWithType: IBilingualProcessorContainer.GetBilingualProcessors
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
    name: GetBilingualProcessors
    nameWithType: IBilingualProcessorContainer.GetBilingualProcessors
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.GetBilingualProcessors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: FileRestriction
  nameWithType: IBilingualProcessorContainer.FileRestriction
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.FileRestriction
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  isExternal: true
  name: ParagraphUnitRestriction
  nameWithType: IBilingualProcessorContainer.ParagraphUnitRestriction
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer.ParagraphUnitRestriction
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IBilingualProcessorContainer
  nameWithType: IBilingualProcessorContainer
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualProcessorContainer
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SetDocumentInfo*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SetDocumentInfo
  isExternal: true
  name: SetDocumentInfo
  nameWithType: IMultiFileConverter.SetDocumentInfo
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SetDocumentInfo
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IDocumentProperties
  nameWithType: IDocumentProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.UpdateDocumentPropertiesFromExtractors*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.UpdateDocumentPropertiesFromExtractors
  isExternal: true
  name: UpdateDocumentPropertiesFromExtractors
  nameWithType: IMultiFileConverter.UpdateDocumentPropertiesFromExtractors
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.UpdateDocumentPropertiesFromExtractors
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ApplyDocumentPropertiesToExtractors*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ApplyDocumentPropertiesToExtractors
  isExternal: true
  name: ApplyDocumentPropertiesToExtractors
  nameWithType: IMultiFileConverter.ApplyDocumentPropertiesToExtractors
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ApplyDocumentPropertiesToExtractors
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SynchronizeDocumentProperties*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SynchronizeDocumentProperties
  isExternal: true
  name: SynchronizeDocumentProperties
  nameWithType: IMultiFileConverter.SynchronizeDocumentProperties
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SynchronizeDocumentProperties
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse
  isExternal: true
  name: Parse
  nameWithType: IMultiFileConverter.Parse
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Parse
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext
  isExternal: true
  name: ParseNext
  nameWithType: IMultiFileConverter.ParseNext
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ParseNext
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.AddExtractor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.AddExtractor
  isExternal: true
  name: AddExtractor
  nameWithType: IMultiFileConverter.AddExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.AddExtractor
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileExtractor
  nameWithType: IFileExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.InsertExtractor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.InsertExtractor
  isExternal: true
  name: InsertExtractor
  nameWithType: IMultiFileConverter.InsertExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.InsertExtractor
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.RemoveExtractor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.RemoveExtractor
  isExternal: true
  name: RemoveExtractor
  nameWithType: IMultiFileConverter.RemoveExtractor
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.RemoveExtractor
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.PropertiesFactory*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.PropertiesFactory
  isExternal: true
  name: PropertiesFactory
  nameWithType: IMultiFileConverter.PropertiesFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.PropertiesFactory
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IPropertiesFactory
  nameWithType: IPropertiesFactory
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ItemFactory*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ItemFactory
  isExternal: true
  name: ItemFactory
  nameWithType: IMultiFileConverter.ItemFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ItemFactory
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IDocumentItemFactory
  nameWithType: IDocumentItemFactory
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DocumentInfo*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DocumentInfo
  isExternal: true
  name: DocumentInfo
  nameWithType: IMultiFileConverter.DocumentInfo
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DocumentInfo
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SharedObjects*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SharedObjects
  isExternal: true
  name: SharedObjects
  nameWithType: IMultiFileConverter.SharedObjects
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.SharedObjects
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISharedObjects
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.ISharedObjects
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: ISharedObjects
  nameWithType: ISharedObjects
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISharedObjects
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Extractors*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Extractors
  isExternal: true
  name: Extractors
  nameWithType: IMultiFileConverter.Extractors
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.Extractors
- uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IFileExtractor>
  nameWithType: IEnumerable<IFileExtractor>
  fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor>
  nameWithType.vb: IEnumerable(Of IFileExtractor)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor)
  name.vb: IEnumerable(Of IFileExtractor)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
    name: IFileExtractor
    nameWithType: IFileExtractor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
    name: IFileExtractor
    nameWithType: IFileExtractor
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileExtractor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentGenerator*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentGenerator
  isExternal: true
  name: BilingualDocumentGenerator
  nameWithType: IMultiFileConverter.BilingualDocumentGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IBilingualDocumentGenerator
  nameWithType: IBilingualDocumentGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.NativeGeneratorProvider*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.NativeGeneratorProvider
  isExternal: true
  name: NativeGeneratorProvider
  nameWithType: IMultiFileConverter.NativeGeneratorProvider
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.NativeGeneratorProvider
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.NativeGeneratorProvider
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.NativeGeneratorProvider
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: NativeGeneratorProvider
  nameWithType: NativeGeneratorProvider
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.NativeGeneratorProvider
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualVerifiersProvider*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualVerifiersProvider
  isExternal: true
  name: BilingualVerifiersProvider
  nameWithType: IMultiFileConverter.BilingualVerifiersProvider
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualVerifiersProvider
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualVerifiersProvider
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualVerifiersProvider
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: BilingualVerifiersProvider
  nameWithType: BilingualVerifiersProvider
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualVerifiersProvider
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.OutputPropertiesProvider*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.OutputPropertiesProvider
  isExternal: true
  name: OutputPropertiesProvider
  nameWithType: IMultiFileConverter.OutputPropertiesProvider
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.OutputPropertiesProvider
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: OutputPropertiesProvider
  nameWithType: OutputPropertiesProvider
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.OutputPropertiesProvider
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DependencyFileLocator*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DependencyFileLocator
  isExternal: true
  name: DependencyFileLocator
  nameWithType: IMultiFileConverter.DependencyFileLocator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DependencyFileLocator
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: DependencyFileLocator
  nameWithType: DependencyFileLocator
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.DependencyFileLocator
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentOutputPropertiesProvider*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentOutputPropertiesProvider
  isExternal: true
  name: BilingualDocumentOutputPropertiesProvider
  nameWithType: IMultiFileConverter.BilingualDocumentOutputPropertiesProvider
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentOutputPropertiesProvider
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: BilingualDocumentOutputPropertiesProvider
  nameWithType: BilingualDocumentOutputPropertiesProvider
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BilingualDocumentOutputPropertiesProvider
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentOutputProperties*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentOutputProperties
  isExternal: true
  name: BilingualDocumentOutputProperties
  nameWithType: IMultiFileConverter.BilingualDocumentOutputProperties
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.BilingualDocumentOutputProperties
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentOutputProperties
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentOutputProperties
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IBilingualDocumentOutputProperties
  nameWithType: IBilingualDocumentOutputProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualDocumentOutputProperties
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedLanguagesCorrespondToDocumentProperties*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedLanguagesCorrespondToDocumentProperties
  isExternal: true
  name: DetectedLanguagesCorrespondToDocumentProperties
  nameWithType: IMultiFileConverter.DetectedLanguagesCorrespondToDocumentProperties
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedLanguagesCorrespondToDocumentProperties
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedSourceLanguage*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedSourceLanguage
  isExternal: true
  name: DetectedSourceLanguage
  nameWithType: IMultiFileConverter.DetectedSourceLanguage
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedSourceLanguage
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedLanguagesCorrespondToDocumentProperties
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedLanguagesCorrespondToDocumentProperties
  isExternal: true
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedTargetLanguage
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedTargetLanguage
  isExternal: true
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.UpdateDocumentPropertiesFromExtractors
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.UpdateDocumentPropertiesFromExtractors
  isExternal: true
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ApplyDocumentPropertiesToExtractors
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.ApplyDocumentPropertiesToExtractors
  isExternal: true
- uid: Sdl.FileTypeSupport.Framework.Pair{Sdl.Core.Globalization.Language,Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel}
  commentId: T:Sdl.FileTypeSupport.Framework.Pair{Sdl.Core.Globalization.Language,Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel}
  parent: Sdl.FileTypeSupport.Framework
  definition: Sdl.FileTypeSupport.Framework.Pair`2
  name: Pair<Language, DetectionLevel>
  nameWithType: Pair<Language, DetectionLevel>
  fullName: Sdl.FileTypeSupport.Framework.Pair<Sdl.Core.Globalization.Language, Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel>
  nameWithType.vb: Pair(Of Language, DetectionLevel)
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of Sdl.Core.Globalization.Language, Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel)
  name.vb: Pair(Of Language, DetectionLevel)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    nameWithType: Pair
    fullName: Sdl.FileTypeSupport.Framework.Pair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Core.Globalization.Language
    name: Language
    nameWithType: Language
    fullName: Sdl.Core.Globalization.Language
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel
    name: DetectionLevel
    nameWithType: DetectionLevel
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    nameWithType: Pair
    fullName: Sdl.FileTypeSupport.Framework.Pair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Core.Globalization.Language
    name: Language
    nameWithType: Language
    fullName: Sdl.Core.Globalization.Language
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel
    name: DetectionLevel
    nameWithType: DetectionLevel
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.DetectionLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.Pair`2
  commentId: T:Sdl.FileTypeSupport.Framework.Pair`2
  isExternal: true
  name: Pair<FirstType, SecondType>
  nameWithType: Pair<FirstType, SecondType>
  fullName: Sdl.FileTypeSupport.Framework.Pair<FirstType, SecondType>
  nameWithType.vb: Pair(Of FirstType, SecondType)
  fullName.vb: Sdl.FileTypeSupport.Framework.Pair(Of FirstType, SecondType)
  name.vb: Pair(Of FirstType, SecondType)
  spec.csharp:
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    nameWithType: Pair
    fullName: Sdl.FileTypeSupport.Framework.Pair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: FirstType
    nameWithType: FirstType
    fullName: FirstType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: SecondType
    nameWithType: SecondType
    fullName: SecondType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.FileTypeSupport.Framework.Pair`2
    name: Pair
    nameWithType: Pair
    fullName: Sdl.FileTypeSupport.Framework.Pair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: FirstType
    nameWithType: FirstType
    fullName: FirstType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: SecondType
    nameWithType: SecondType
    fullName: SecondType
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework
  commentId: N:Sdl.FileTypeSupport.Framework
  isExternal: true
  name: Sdl.FileTypeSupport.Framework
  nameWithType: Sdl.FileTypeSupport.Framework
  fullName: Sdl.FileTypeSupport.Framework
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedTargetLanguage*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedTargetLanguage
  isExternal: true
  name: DetectedTargetLanguage
  nameWithType: IMultiFileConverter.DetectedTargetLanguage
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IMultiFileConverter.DetectedTargetLanguage
- uid: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
  commentId: T:System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<MessageEventArgs>
  nameWithType: EventHandler<MessageEventArgs>
  fullName: System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs>
  nameWithType.vb: EventHandler(Of MessageEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs)
  name.vb: EventHandler(Of MessageEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.MessageEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs}
  commentId: T:System.EventHandler{Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<BatchProgressEventArgs>
  nameWithType: EventHandler<BatchProgressEventArgs>
  fullName: System.EventHandler<Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs>
  nameWithType.vb: EventHandler(Of BatchProgressEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs)
  name.vb: EventHandler(Of BatchProgressEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs
    name: BatchProgressEventArgs
    nameWithType: BatchProgressEventArgs
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs
    name: BatchProgressEventArgs
    nameWithType: BatchProgressEventArgs
    fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
