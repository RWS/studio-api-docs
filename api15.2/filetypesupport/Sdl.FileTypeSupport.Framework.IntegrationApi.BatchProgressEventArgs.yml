### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs
  id: BatchProgressEventArgs
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.#ctor(System.String,System.Int32,System.Int32,System.Byte)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FileNumber
  - Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FilePath
  - Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FilePercentComplete
  - Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.ToString
  - Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.TotalFiles
  langs:
  - csharp
  - vb
  name: BatchProgressEventArgs
  nameWithType: BatchProgressEventArgs
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nProperties of a progress event in a batch process\n"
  syntax:
    content: 'public class BatchProgressEventArgs : EventArgs'
    content.vb: >-
      Public Class BatchProgressEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.#ctor(System.String,System.Int32,System.Int32,System.Byte)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.#ctor(System.String,System.Int32,System.Int32,System.Byte)
  id: '#ctor(System.String,System.Int32,System.Int32,System.Byte)'
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs
  langs:
  - csharp
  - vb
  name: BatchProgressEventArgs(String, Int32, Int32, Byte)
  nameWithType: BatchProgressEventArgs.BatchProgressEventArgs(String, Int32, Int32, Byte)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.BatchProgressEventArgs(System.String, System.Int32, System.Int32, System.Byte)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nConstruct with explicitly specified progress information.\n"
  syntax:
    content: public BatchProgressEventArgs(string filePath, int fileNumber, int totalFiles, byte filePercentComplete)
    parameters:
    - id: filePath
      type: System.String
      description: path to the file being processed
    - id: fileNumber
      type: System.Int32
      description: file number in the batch, 0 is the first file
    - id: totalFiles
      type: System.Int32
      description: total files in the batch
    - id: filePercentComplete
      type: System.Byte
      description: percent completed for the current file in the batch
    content.vb: Public Sub New(filePath As String, fileNumber As Integer, totalFiles As Integer, filePercentComplete As Byte)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.ToString
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.ToString
  id: ToString
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BatchProgressEventArgs.ToString()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.ToString()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nFor debugging purposes, shows the file number and the progress in a non-localized format.\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FilePath
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FilePath
  id: FilePath
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs
  langs:
  - csharp
  - vb
  name: FilePath
  nameWithType: BatchProgressEventArgs.FilePath
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FilePath
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nPath of the file being processed\n"
  syntax:
    content: public string FilePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FilePath As String
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FilePath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FileNumber
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FileNumber
  id: FileNumber
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs
  langs:
  - csharp
  - vb
  name: FileNumber
  nameWithType: BatchProgressEventArgs.FileNumber
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FileNumber
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nZero-based index indicating the file number in the batch\nfor the file being processed.\n"
  syntax:
    content: public int FileNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property FileNumber As Integer
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FileNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.TotalFiles
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.TotalFiles
  id: TotalFiles
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs
  langs:
  - csharp
  - vb
  name: TotalFiles
  nameWithType: BatchProgressEventArgs.TotalFiles
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.TotalFiles
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nTotal number of files in batch\n"
  syntax:
    content: public int TotalFiles { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TotalFiles As Integer
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.TotalFiles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FilePercentComplete
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FilePercentComplete
  id: FilePercentComplete
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs
  langs:
  - csharp
  - vb
  name: FilePercentComplete
  nameWithType: BatchProgressEventArgs.FilePercentComplete
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FilePercentComplete
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nValue between 0 and 100 (inclusive) indicating the progress of the \nfile currently being processed.\n"
  remarks: "\n<p>\nNote that this is the percent completed for the current file only, NOT the \npercent completed for the batch.\n</p>\n"
  syntax:
    content: public byte FilePercentComplete { get; set; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public Property FilePercentComplete As Byte
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FilePercentComplete*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.#ctor
  isExternal: true
  name: BatchProgressEventArgs
  nameWithType: BatchProgressEventArgs.BatchProgressEventArgs
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.BatchProgressEventArgs
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.ToString*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.ToString
  isExternal: true
  name: ToString
  nameWithType: BatchProgressEventArgs.ToString
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.ToString
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FilePath*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FilePath
  isExternal: true
  name: FilePath
  nameWithType: BatchProgressEventArgs.FilePath
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FilePath
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FileNumber*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FileNumber
  isExternal: true
  name: FileNumber
  nameWithType: BatchProgressEventArgs.FileNumber
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FileNumber
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.TotalFiles*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.TotalFiles
  isExternal: true
  name: TotalFiles
  nameWithType: BatchProgressEventArgs.TotalFiles
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.TotalFiles
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FilePercentComplete*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FilePercentComplete
  isExternal: true
  name: FilePercentComplete
  nameWithType: BatchProgressEventArgs.FilePercentComplete
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.BatchProgressEventArgs.FilePercentComplete
