### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  id: LevelLocation
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  children:
  - Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.#ctor
  - Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32)
  - Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation)
  - Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Clone
  - Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Equals(System.Object)
  - Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.GetHashCode
  - Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Index
  - Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsAtEndOfParent
  - Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsAtStartOfParent
  - Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsValid
  - Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.ItemAtLocation
  - Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Parent
  - Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.ToString
  langs:
  - csharp
  - vb
  name: LevelLocation
  nameWithType: LevelLocation
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nRepresents a location inside an <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nThe <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Parent\" data-throw-if-not-resolved=\"false\"></xref> property specifies the parent container,\nand the <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Index\" data-throw-if-not-resolved=\"false\"></xref> property represents the item index\nin the container. An index of 0 indicates a position between the\nfirst item in the parent, and an index of <code>Parent.Count</code> indicates a \nposition after the last item.\n</p>\n<p>\nIf you need to refer to an item in a nested container, use a <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.Location\" data-throw-if-not-resolved=\"false\"></xref> instead.\n</p>\n<p>\nSince the position includes an index into the parent, if\nthe content of the parent changes (e.g. new items are inserted, or existing\nones removed or replaced), the position may no longer point to the same\nitem.\n</p>\n<p>\nUse a location marker instead if you need to refer to a specific location that may\nchange as part of operations on the data.\n</p>\n"
  syntax:
    content: 'public class LevelLocation : ICloneable'
    content.vb: >-
      Public Class LevelLocation
          Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  langs:
  - csharp
  - vb
  name: LevelLocation()
  nameWithType: LevelLocation.LevelLocation()
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.LevelLocation()
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nCreates an uninitialized object.\n"
  syntax:
    content: public LevelLocation()
    content.vb: Public Sub New
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32)
  id: '#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer,System.Int32)'
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  langs:
  - csharp
  - vb
  name: LevelLocation(IAbstractMarkupDataContainer, Int32)
  nameWithType: LevelLocation.LevelLocation(IAbstractMarkupDataContainer, Int32)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.LevelLocation(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer, System.Int32)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nCreates from specific parent and index values.\n"
  syntax:
    content: public LevelLocation(IAbstractMarkupDataContainer parent, int index)
    parameters:
    - id: parent
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    - id: index
      type: System.Int32
    content.vb: Public Sub New(parent As IAbstractMarkupDataContainer, index As Integer)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation)
  id: '#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation)'
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  langs:
  - csharp
  - vb
  name: LevelLocation(LevelLocation)
  nameWithType: LevelLocation.LevelLocation(LevelLocation)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.LevelLocation(Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nCreates from the values used in another object.\n"
  syntax:
    content: public LevelLocation(LevelLocation other)
    parameters:
    - id: other
      type: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
    content.vb: Public Sub New(other As LevelLocation)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Equals(System.Object)
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: LevelLocation.Equals(Object)
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Equals(System.Object)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nCompares all properties.\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.GetHashCode
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.GetHashCode
  id: GetHashCode
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: LevelLocation.GetHashCode()
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.GetHashCode()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nCalculated from index and parent properties\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.ToString
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.ToString
  id: ToString
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: LevelLocation.ToString()
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.ToString()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nOverridden to provide more intuitive information for use in the debugger\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Clone
  commentId: M:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Clone
  id: Clone
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: LevelLocation.Clone()
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Clone()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nCreate a shallow clone.\n"
  syntax:
    content: public object Clone()
    return:
      type: System.Object
    content.vb: Public Function Clone As Object
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Parent
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Parent
  id: Parent
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: LevelLocation.Parent
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Parent
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nThe container that this location refers to a position inside.\n"
  syntax:
    content: public IAbstractMarkupDataContainer Parent { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
    content.vb: Public Property Parent As IAbstractMarkupDataContainer
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Parent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Index
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Index
  id: Index
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: LevelLocation.Index
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Index
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nThe index in the parent collection that defines the location.\n\nIndex 0 refers to the location before the first item in the collection.\nThe index Parent.Count indicates a location after the last item\nin the collection.\n"
  syntax:
    content: public int Index { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Index As Integer
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Index*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.ItemAtLocation
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.ItemAtLocation
  id: ItemAtLocation
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  langs:
  - csharp
  - vb
  name: ItemAtLocation
  nameWithType: LevelLocation.ItemAtLocation
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.ItemAtLocation
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nReturns the item with the same index in the parent collection\nas the <xref href=\"Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Index\" data-throw-if-not-resolved=\"false\"></xref> of this location, or null if there\nis no item with that index (e.g. if the index indicates a position\nafter the last item in the collection).\n"
  syntax:
    content: public IAbstractMarkupData ItemAtLocation { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    content.vb: Public ReadOnly Property ItemAtLocation As IAbstractMarkupData
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.ItemAtLocation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsValid
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsValid
  id: IsValid
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: LevelLocation.IsValid
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsValid
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nThe location is valid if the parent is set, and\nthe index is a value within the range: 0 &lt;= index &lt;= Parent.Content.Count\n"
  syntax:
    content: public bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValid As Boolean
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsValid*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsAtEndOfParent
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsAtEndOfParent
  id: IsAtEndOfParent
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  langs:
  - csharp
  - vb
  name: IsAtEndOfParent
  nameWithType: LevelLocation.IsAtEndOfParent
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsAtEndOfParent
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nTrue if the location is valid and refers to the position after the last item in the parent\n"
  syntax:
    content: public bool IsAtEndOfParent { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAtEndOfParent As Boolean
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsAtEndOfParent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsAtStartOfParent
  commentId: P:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsAtStartOfParent
  id: IsAtStartOfParent
  parent: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  langs:
  - csharp
  - vb
  name: IsAtStartOfParent
  nameWithType: LevelLocation.IsAtStartOfParent
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsAtStartOfParent
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.BilingualApi
  summary: "\nTrue if the location is valid and refers to the first item in the parent\n"
  syntax:
    content: public bool IsAtStartOfParent { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAtStartOfParent As Boolean
  overload: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsAtStartOfParent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.BilingualApi
  commentId: N:Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.BilingualApi
  nameWithType: Sdl.FileTypeSupport.Framework.BilingualApi
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.#ctor
  isExternal: true
  name: LevelLocation
  nameWithType: LevelLocation.LevelLocation
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.LevelLocation
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IAbstractMarkupDataContainer
  nameWithType: IAbstractMarkupDataContainer
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupDataContainer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: LevelLocation
  nameWithType: LevelLocation
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Equals*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Equals
  isExternal: true
  name: Equals
  nameWithType: LevelLocation.Equals
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.GetHashCode*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: LevelLocation.GetHashCode
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.ToString*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.ToString
  isExternal: true
  name: ToString
  nameWithType: LevelLocation.ToString
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Clone*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Clone
  isExternal: true
  name: Clone
  nameWithType: LevelLocation.Clone
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Parent*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Parent
  isExternal: true
  name: Parent
  nameWithType: LevelLocation.Parent
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Parent
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Index*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Index
  isExternal: true
  name: Index
  nameWithType: LevelLocation.Index
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.Index
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.ItemAtLocation*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.ItemAtLocation
  isExternal: true
  name: ItemAtLocation
  nameWithType: LevelLocation.ItemAtLocation
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.ItemAtLocation
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
  commentId: T:Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
  parent: Sdl.FileTypeSupport.Framework.BilingualApi
  isExternal: true
  name: IAbstractMarkupData
  nameWithType: IAbstractMarkupData
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsValid*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsValid
  isExternal: true
  name: IsValid
  nameWithType: LevelLocation.IsValid
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsValid
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsAtEndOfParent*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsAtEndOfParent
  isExternal: true
  name: IsAtEndOfParent
  nameWithType: LevelLocation.IsAtEndOfParent
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsAtEndOfParent
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsAtStartOfParent*
  commentId: Overload:Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsAtStartOfParent
  isExternal: true
  name: IsAtStartOfParent
  nameWithType: LevelLocation.IsAtStartOfParent
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.LevelLocation.IsAtStartOfParent
