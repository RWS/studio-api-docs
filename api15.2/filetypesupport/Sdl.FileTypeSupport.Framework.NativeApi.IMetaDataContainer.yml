### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  id: IMetaDataContainer
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.HasMetaData
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaData
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey(System.String)
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataCount
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)
  - Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String,System.String)
  langs:
  - csharp
  - vb
  name: IMetaDataContainer
  nameWithType: IMetaDataContainer
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nCommon interface implemented by objects that have the capability\nto hold metadata in the form of string key/value pairs.\n"
  remarks: "\n<p>\nSimilar to a dictionary&lt;String, String>. \n</p>\n<p>\nEnumerate existing values through the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaData\" data-throw-if-not-resolved=\"false\"></xref> property. Add\nnew values, or overwrite existing ones by calling <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>.\nRemoves values by calling <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  syntax:
    content: public interface IMetaDataContainer
    content.vb: Public Interface IMetaDataContainer
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey(System.String)
  id: MetaDataContainsKey(System.String)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  langs:
  - csharp
  - vb
  name: MetaDataContainsKey(String)
  nameWithType: IMetaDataContainer.MetaDataContainsKey(String)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\n<code>True</code> if a metadata value with the specified key exists\n"
  syntax:
    content: bool MetaDataContainsKey(string key)
    parameters:
    - id: key
      type: System.String
      description: Must not be empty or <code>null</code>
    return:
      type: System.Boolean
    content.vb: Function MetaDataContainsKey(key As String) As Boolean
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)
  id: GetMetaData(System.String)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  langs:
  - csharp
  - vb
  name: GetMetaData(String)
  nameWithType: IMetaDataContainer.GetMetaData(String)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nReturns the metadata value associated with the specified key,\nor <code>null</code> if no such key exists in the collection.\n"
  syntax:
    content: string GetMetaData(string key)
    parameters:
    - id: key
      type: System.String
      description: Must not be empty or <code>null</code>
    return:
      type: System.String
      description: The corresponding value, or <code>null</code> if none
    content.vb: Function GetMetaData(key As String) As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String,System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String,System.String)
  id: SetMetaData(System.String,System.String)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  langs:
  - csharp
  - vb
  name: SetMetaData(String, String)
  nameWithType: IMetaDataContainer.SetMetaData(String, String)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String, System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\n<p>\nSets the value of the specified metadata key.\n</p>\n<p>\nIf the key already exists in the collection, its value\ngets overwritten.\n</p>\n"
  syntax:
    content: void SetMetaData(string key, string value)
    parameters:
    - id: key
      type: System.String
      description: Must not be empty or <code>null</code>
    - id: value
      type: System.String
      description: Must not be <code>null</code>
    content.vb: Sub SetMetaData(key As String, value As String)
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)
  id: RemoveMetaData(System.String)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  langs:
  - csharp
  - vb
  name: RemoveMetaData(String)
  nameWithType: IMetaDataContainer.RemoveMetaData(String)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nRemoves the metadata key/value pair with the specified key\nfrom the collection. No changes are made if the collection \ndoes not contain such a key.\n"
  syntax:
    content: bool RemoveMetaData(string key)
    parameters:
    - id: key
      type: System.String
      description: Must not be <code>null</code>
    return:
      type: System.Boolean
      description: <code>True</code> if the collection was modified
    content.vb: Function RemoveMetaData(key As String) As Boolean
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
  id: ClearMetaData
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  langs:
  - csharp
  - vb
  name: ClearMetaData()
  nameWithType: IMetaDataContainer.ClearMetaData()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nRemoves all key/value pairs from the meta data collection.\n"
  syntax:
    content: void ClearMetaData()
    content.vb: Sub ClearMetaData
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaData
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaData
  id: MetaData
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  langs:
  - csharp
  - vb
  name: MetaData
  nameWithType: IMetaDataContainer.MetaData
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaData
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nEnumerator for the metadata key/value pairs.\n"
  remarks: "\n<p>\nThe returned key value pair should not be modified.\nUse <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData(System.String%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData(System.String)\" data-throw-if-not-resolved=\"false\"></xref>\nto modify the meta data content.\n</p>\n"
  syntax:
    content: IEnumerable<KeyValuePair<string, string>> MetaData { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    content.vb: ReadOnly Property MetaData As IEnumerable(Of KeyValuePair(Of String, String))
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaData*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.HasMetaData
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.HasMetaData
  id: HasMetaData
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  langs:
  - csharp
  - vb
  name: HasMetaData
  nameWithType: IMetaDataContainer.HasMetaData
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.HasMetaData
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\n<code>True</code> if there is any metadata in the container\n"
  syntax:
    content: bool HasMetaData { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property HasMetaData As Boolean
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.HasMetaData*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataCount
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataCount
  id: MetaDataCount
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer
  langs:
  - csharp
  - vb
  name: MetaDataCount
  nameWithType: IMetaDataContainer.MetaDataCount
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataCount
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe number of meta data key/value pairs in the container\n"
  syntax:
    content: int MetaDataCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property MetaDataCount As Integer
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataCount*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey
  isExternal: true
  name: MetaDataContainsKey
  nameWithType: IMetaDataContainer.MetaDataContainsKey
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataContainsKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData
  isExternal: true
  name: GetMetaData
  nameWithType: IMetaDataContainer.GetMetaData
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.GetMetaData
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData
  isExternal: true
  name: SetMetaData
  nameWithType: IMetaDataContainer.SetMetaData
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.SetMetaData
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData
  isExternal: true
  name: RemoveMetaData
  nameWithType: IMetaDataContainer.RemoveMetaData
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.RemoveMetaData
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
  isExternal: true
  name: ClearMetaData
  nameWithType: IMetaDataContainer.ClearMetaData
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.ClearMetaData
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaData*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaData
  isExternal: true
  name: MetaData
  nameWithType: IMetaDataContainer.MetaData
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaData
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.HasMetaData*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.HasMetaData
  isExternal: true
  name: HasMetaData
  nameWithType: IMetaDataContainer.HasMetaData
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.HasMetaData
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataCount*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataCount
  isExternal: true
  name: MetaDataCount
  nameWithType: IMetaDataContainer.MetaDataCount
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IMetaDataContainer.MetaDataCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
