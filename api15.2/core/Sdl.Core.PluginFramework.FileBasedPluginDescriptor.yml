### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.FileBasedPluginDescriptor
  commentId: T:Sdl.Core.PluginFramework.FileBasedPluginDescriptor
  id: FileBasedPluginDescriptor
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.FileBasedPluginDescriptor.#ctor(System.String)
  - Sdl.Core.PluginFramework.FileBasedPluginDescriptor.GetPluginManifestStream
  - Sdl.Core.PluginFramework.FileBasedPluginDescriptor.GetPluginResource(System.String)
  - Sdl.Core.PluginFramework.FileBasedPluginDescriptor.Name
  - Sdl.Core.PluginFramework.FileBasedPluginDescriptor.PluginManifestFilePath
  langs:
  - csharp
  - vb
  name: FileBasedPluginDescriptor
  nameWithType: FileBasedPluginDescriptor
  fullName: Sdl.Core.PluginFramework.FileBasedPluginDescriptor
  type: Class
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: 'public class FileBasedPluginDescriptor : IPluginDescriptor'
    content.vb: >-
      Public Class FileBasedPluginDescriptor
          Implements IPluginDescriptor
  inheritance:
  - System.Object
  implements:
  - Sdl.Core.PluginFramework.IPluginDescriptor
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.#ctor(System.String)
  commentId: M:Sdl.Core.PluginFramework.FileBasedPluginDescriptor.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.Core.PluginFramework.FileBasedPluginDescriptor
  langs:
  - csharp
  - vb
  name: FileBasedPluginDescriptor(String)
  nameWithType: FileBasedPluginDescriptor.FileBasedPluginDescriptor(String)
  fullName: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.FileBasedPluginDescriptor(System.String)
  type: Constructor
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public FileBasedPluginDescriptor(string pluginManifestFilePath)
    parameters:
    - id: pluginManifestFilePath
      type: System.String
    content.vb: Public Sub New(pluginManifestFilePath As String)
  overload: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.GetPluginManifestStream
  commentId: M:Sdl.Core.PluginFramework.FileBasedPluginDescriptor.GetPluginManifestStream
  id: GetPluginManifestStream
  parent: Sdl.Core.PluginFramework.FileBasedPluginDescriptor
  langs:
  - csharp
  - vb
  name: GetPluginManifestStream()
  nameWithType: FileBasedPluginDescriptor.GetPluginManifestStream()
  fullName: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.GetPluginManifestStream()
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public Stream GetPluginManifestStream()
    return:
      type: System.IO.Stream
    content.vb: Public Function GetPluginManifestStream As Stream
  overload: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.GetPluginManifestStream*
  implements:
  - Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginManifestStream
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.GetPluginResource(System.String)
  commentId: M:Sdl.Core.PluginFramework.FileBasedPluginDescriptor.GetPluginResource(System.String)
  id: GetPluginResource(System.String)
  parent: Sdl.Core.PluginFramework.FileBasedPluginDescriptor
  langs:
  - csharp
  - vb
  name: GetPluginResource(String)
  nameWithType: FileBasedPluginDescriptor.GetPluginResource(String)
  fullName: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.GetPluginResource(System.String)
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public object GetPluginResource(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Object
    content.vb: Public Function GetPluginResource(name As String) As Object
  overload: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.GetPluginResource*
  implements:
  - Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginResource(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.PluginManifestFilePath
  commentId: P:Sdl.Core.PluginFramework.FileBasedPluginDescriptor.PluginManifestFilePath
  id: PluginManifestFilePath
  parent: Sdl.Core.PluginFramework.FileBasedPluginDescriptor
  langs:
  - csharp
  - vb
  name: PluginManifestFilePath
  nameWithType: FileBasedPluginDescriptor.PluginManifestFilePath
  fullName: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.PluginManifestFilePath
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public string PluginManifestFilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PluginManifestFilePath As String
  overload: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.PluginManifestFilePath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.Name
  commentId: P:Sdl.Core.PluginFramework.FileBasedPluginDescriptor.Name
  id: Name
  parent: Sdl.Core.PluginFramework.FileBasedPluginDescriptor
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FileBasedPluginDescriptor.Name
  fullName: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.Name
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.Name*
  implements:
  - Sdl.Core.PluginFramework.IPluginDescriptor.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.Core.PluginFramework.IPluginDescriptor
  commentId: T:Sdl.Core.PluginFramework.IPluginDescriptor
  parent: Sdl.Core.PluginFramework
  isExternal: true
  name: IPluginDescriptor
  nameWithType: IPluginDescriptor
  fullName: Sdl.Core.PluginFramework.IPluginDescriptor
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.#ctor*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedPluginDescriptor.#ctor
  isExternal: true
  name: FileBasedPluginDescriptor
  nameWithType: FileBasedPluginDescriptor.FileBasedPluginDescriptor
  fullName: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.FileBasedPluginDescriptor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.GetPluginManifestStream*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedPluginDescriptor.GetPluginManifestStream
  isExternal: true
  name: GetPluginManifestStream
  nameWithType: FileBasedPluginDescriptor.GetPluginManifestStream
  fullName: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.GetPluginManifestStream
- uid: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginManifestStream
  commentId: M:Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginManifestStream
  parent: Sdl.Core.PluginFramework.IPluginDescriptor
  isExternal: true
  name: GetPluginManifestStream()
  nameWithType: IPluginDescriptor.GetPluginManifestStream()
  fullName: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginManifestStream()
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginManifestStream
    name: GetPluginManifestStream
    nameWithType: IPluginDescriptor.GetPluginManifestStream
    fullName: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginManifestStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginManifestStream
    name: GetPluginManifestStream
    nameWithType: IPluginDescriptor.GetPluginManifestStream
    fullName: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginManifestStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.GetPluginResource*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedPluginDescriptor.GetPluginResource
  isExternal: true
  name: GetPluginResource
  nameWithType: FileBasedPluginDescriptor.GetPluginResource
  fullName: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.GetPluginResource
- uid: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginResource(System.String)
  commentId: M:Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginResource(System.String)
  parent: Sdl.Core.PluginFramework.IPluginDescriptor
  isExternal: true
  name: GetPluginResource(String)
  nameWithType: IPluginDescriptor.GetPluginResource(String)
  fullName: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginResource(System.String)
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginResource(System.String)
    name: GetPluginResource
    nameWithType: IPluginDescriptor.GetPluginResource
    fullName: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginResource
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginResource(System.String)
    name: GetPluginResource
    nameWithType: IPluginDescriptor.GetPluginResource
    fullName: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginResource
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.PluginManifestFilePath*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedPluginDescriptor.PluginManifestFilePath
  isExternal: true
  name: PluginManifestFilePath
  nameWithType: FileBasedPluginDescriptor.PluginManifestFilePath
  fullName: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.PluginManifestFilePath
- uid: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.Name*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedPluginDescriptor.Name
  isExternal: true
  name: Name
  nameWithType: FileBasedPluginDescriptor.Name
  fullName: Sdl.Core.PluginFramework.FileBasedPluginDescriptor.Name
- uid: Sdl.Core.PluginFramework.IPluginDescriptor.Name
  commentId: P:Sdl.Core.PluginFramework.IPluginDescriptor.Name
  parent: Sdl.Core.PluginFramework.IPluginDescriptor
  isExternal: true
  name: Name
  nameWithType: IPluginDescriptor.Name
  fullName: Sdl.Core.PluginFramework.IPluginDescriptor.Name
