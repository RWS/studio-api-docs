### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor
  commentId: T:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor
  id: FileBasedThirdPartyPluginDescriptor
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.#ctor(System.String)
  - Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Author
  - Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Description
  - Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.GetPluginManifestStream
  - Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.GetPluginResource(System.String)
  - Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.InvalidAssemblies
  - Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.InvalidSdlAssemblyReferences
  - Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Name
  - Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.PluginManifestFilePath
  - Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.PlugInName
  - Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.ThirdPartyManifestFilePath
  - Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Validated
  - Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Version
  langs:
  - csharp
  - vb
  name: FileBasedThirdPartyPluginDescriptor
  nameWithType: FileBasedThirdPartyPluginDescriptor
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor
  type: Class
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: 'public class FileBasedThirdPartyPluginDescriptor : IThirdPartyPluginDescriptor, IPluginDescriptor'
    content.vb: >-
      Public Class FileBasedThirdPartyPluginDescriptor
          Implements IThirdPartyPluginDescriptor, IPluginDescriptor
  inheritance:
  - System.Object
  implements:
  - Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor
  - Sdl.Core.PluginFramework.IPluginDescriptor
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.#ctor(System.String)
  commentId: M:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor
  langs:
  - csharp
  - vb
  name: FileBasedThirdPartyPluginDescriptor(String)
  nameWithType: FileBasedThirdPartyPluginDescriptor.FileBasedThirdPartyPluginDescriptor(String)
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.FileBasedThirdPartyPluginDescriptor(System.String)
  type: Constructor
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public FileBasedThirdPartyPluginDescriptor(string pluginPackageManifestFilePath)
    parameters:
    - id: pluginPackageManifestFilePath
      type: System.String
    content.vb: Public Sub New(pluginPackageManifestFilePath As String)
  overload: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.GetPluginManifestStream
  commentId: M:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.GetPluginManifestStream
  id: GetPluginManifestStream
  parent: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor
  langs:
  - csharp
  - vb
  name: GetPluginManifestStream()
  nameWithType: FileBasedThirdPartyPluginDescriptor.GetPluginManifestStream()
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.GetPluginManifestStream()
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public Stream GetPluginManifestStream()
    return:
      type: System.IO.Stream
    content.vb: Public Function GetPluginManifestStream As Stream
  overload: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.GetPluginManifestStream*
  implements:
  - Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginManifestStream
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.GetPluginResource(System.String)
  commentId: M:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.GetPluginResource(System.String)
  id: GetPluginResource(System.String)
  parent: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor
  langs:
  - csharp
  - vb
  name: GetPluginResource(String)
  nameWithType: FileBasedThirdPartyPluginDescriptor.GetPluginResource(String)
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.GetPluginResource(System.String)
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public object GetPluginResource(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Object
    content.vb: Public Function GetPluginResource(name As String) As Object
  overload: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.GetPluginResource*
  implements:
  - Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginResource(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.PluginManifestFilePath
  commentId: P:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.PluginManifestFilePath
  id: PluginManifestFilePath
  parent: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor
  langs:
  - csharp
  - vb
  name: PluginManifestFilePath
  nameWithType: FileBasedThirdPartyPluginDescriptor.PluginManifestFilePath
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.PluginManifestFilePath
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public string PluginManifestFilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PluginManifestFilePath As String
  overload: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.PluginManifestFilePath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Name
  commentId: P:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Name
  id: Name
  parent: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FileBasedThirdPartyPluginDescriptor.Name
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Name
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Name*
  implements:
  - Sdl.Core.PluginFramework.IPluginDescriptor.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.ThirdPartyManifestFilePath
  commentId: P:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.ThirdPartyManifestFilePath
  id: ThirdPartyManifestFilePath
  parent: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor
  langs:
  - csharp
  - vb
  name: ThirdPartyManifestFilePath
  nameWithType: FileBasedThirdPartyPluginDescriptor.ThirdPartyManifestFilePath
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.ThirdPartyManifestFilePath
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public string ThirdPartyManifestFilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ThirdPartyManifestFilePath As String
  overload: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.ThirdPartyManifestFilePath*
  implements:
  - Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.ThirdPartyManifestFilePath
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Author
  commentId: P:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Author
  id: Author
  parent: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor
  langs:
  - csharp
  - vb
  name: Author
  nameWithType: FileBasedThirdPartyPluginDescriptor.Author
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Author
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public string Author { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Author As String
  overload: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Author*
  implements:
  - Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.Author
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Description
  commentId: P:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Description
  id: Description
  parent: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: FileBasedThirdPartyPluginDescriptor.Description
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Description
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Description As String
  overload: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Description*
  implements:
  - Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.Description
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.PlugInName
  commentId: P:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.PlugInName
  id: PlugInName
  parent: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor
  langs:
  - csharp
  - vb
  name: PlugInName
  nameWithType: FileBasedThirdPartyPluginDescriptor.PlugInName
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.PlugInName
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public string PlugInName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PlugInName As String
  overload: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.PlugInName*
  implements:
  - Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.PlugInName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Version
  commentId: P:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Version
  id: Version
  parent: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: FileBasedThirdPartyPluginDescriptor.Version
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Version
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public Version Version { get; }
    parameters: []
    return:
      type: System.Version
    content.vb: Public ReadOnly Property Version As Version
  overload: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Version*
  implements:
  - Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.Version
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Validated
  commentId: P:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Validated
  id: Validated
  parent: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor
  langs:
  - csharp
  - vb
  name: Validated
  nameWithType: FileBasedThirdPartyPluginDescriptor.Validated
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Validated
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public bool Validated { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Validated As Boolean
  overload: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Validated*
  implements:
  - Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.Validated
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.InvalidAssemblies
  commentId: P:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.InvalidAssemblies
  id: InvalidAssemblies
  parent: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor
  langs:
  - csharp
  - vb
  name: InvalidAssemblies
  nameWithType: FileBasedThirdPartyPluginDescriptor.InvalidAssemblies
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.InvalidAssemblies
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: >-
      [Obsolete("Use InvalidSdlAssemblyReferences to obtain list of invalid SDL API assembly references")]

      public List<string> InvalidAssemblies { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: >-
      <Obsolete("Use InvalidSdlAssemblyReferences to obtain list of invalid SDL API assembly references")>

      Public ReadOnly Property InvalidAssemblies As List(Of String)
  overload: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.InvalidAssemblies*
  implements:
  - Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.InvalidAssemblies
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use InvalidSdlAssemblyReferences to obtain list of invalid SDL API assembly references
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.InvalidSdlAssemblyReferences
  commentId: P:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.InvalidSdlAssemblyReferences
  id: InvalidSdlAssemblyReferences
  parent: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor
  langs:
  - csharp
  - vb
  name: InvalidSdlAssemblyReferences
  nameWithType: FileBasedThirdPartyPluginDescriptor.InvalidSdlAssemblyReferences
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.InvalidSdlAssemblyReferences
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public List<InvalidSdlAssemblyReference> InvalidSdlAssemblyReferences { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.Core.PluginFramework.InvalidSdlAssemblyReference}
    content.vb: Public ReadOnly Property InvalidSdlAssemblyReferences As List(Of InvalidSdlAssemblyReference)
  overload: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.InvalidSdlAssemblyReferences*
  implements:
  - Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.InvalidSdlAssemblyReferences
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor
  commentId: T:Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor
  parent: Sdl.Core.PluginFramework
  isExternal: true
  name: IThirdPartyPluginDescriptor
  nameWithType: IThirdPartyPluginDescriptor
  fullName: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor
- uid: Sdl.Core.PluginFramework.IPluginDescriptor
  commentId: T:Sdl.Core.PluginFramework.IPluginDescriptor
  parent: Sdl.Core.PluginFramework
  isExternal: true
  name: IPluginDescriptor
  nameWithType: IPluginDescriptor
  fullName: Sdl.Core.PluginFramework.IPluginDescriptor
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.#ctor*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.#ctor
  isExternal: true
  name: FileBasedThirdPartyPluginDescriptor
  nameWithType: FileBasedThirdPartyPluginDescriptor.FileBasedThirdPartyPluginDescriptor
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.FileBasedThirdPartyPluginDescriptor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.GetPluginManifestStream*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.GetPluginManifestStream
  isExternal: true
  name: GetPluginManifestStream
  nameWithType: FileBasedThirdPartyPluginDescriptor.GetPluginManifestStream
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.GetPluginManifestStream
- uid: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginManifestStream
  commentId: M:Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginManifestStream
  parent: Sdl.Core.PluginFramework.IPluginDescriptor
  isExternal: true
  name: GetPluginManifestStream()
  nameWithType: IPluginDescriptor.GetPluginManifestStream()
  fullName: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginManifestStream()
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginManifestStream
    name: GetPluginManifestStream
    nameWithType: IPluginDescriptor.GetPluginManifestStream
    fullName: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginManifestStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginManifestStream
    name: GetPluginManifestStream
    nameWithType: IPluginDescriptor.GetPluginManifestStream
    fullName: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginManifestStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.GetPluginResource*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.GetPluginResource
  isExternal: true
  name: GetPluginResource
  nameWithType: FileBasedThirdPartyPluginDescriptor.GetPluginResource
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.GetPluginResource
- uid: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginResource(System.String)
  commentId: M:Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginResource(System.String)
  parent: Sdl.Core.PluginFramework.IPluginDescriptor
  isExternal: true
  name: GetPluginResource(String)
  nameWithType: IPluginDescriptor.GetPluginResource(String)
  fullName: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginResource(System.String)
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginResource(System.String)
    name: GetPluginResource
    nameWithType: IPluginDescriptor.GetPluginResource
    fullName: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginResource
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginResource(System.String)
    name: GetPluginResource
    nameWithType: IPluginDescriptor.GetPluginResource
    fullName: Sdl.Core.PluginFramework.IPluginDescriptor.GetPluginResource
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.PluginManifestFilePath*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.PluginManifestFilePath
  isExternal: true
  name: PluginManifestFilePath
  nameWithType: FileBasedThirdPartyPluginDescriptor.PluginManifestFilePath
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.PluginManifestFilePath
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Name*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Name
  isExternal: true
  name: Name
  nameWithType: FileBasedThirdPartyPluginDescriptor.Name
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Name
- uid: Sdl.Core.PluginFramework.IPluginDescriptor.Name
  commentId: P:Sdl.Core.PluginFramework.IPluginDescriptor.Name
  parent: Sdl.Core.PluginFramework.IPluginDescriptor
  isExternal: true
  name: Name
  nameWithType: IPluginDescriptor.Name
  fullName: Sdl.Core.PluginFramework.IPluginDescriptor.Name
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.ThirdPartyManifestFilePath*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.ThirdPartyManifestFilePath
  isExternal: true
  name: ThirdPartyManifestFilePath
  nameWithType: FileBasedThirdPartyPluginDescriptor.ThirdPartyManifestFilePath
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.ThirdPartyManifestFilePath
- uid: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.ThirdPartyManifestFilePath
  commentId: P:Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.ThirdPartyManifestFilePath
  parent: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor
  isExternal: true
  name: ThirdPartyManifestFilePath
  nameWithType: IThirdPartyPluginDescriptor.ThirdPartyManifestFilePath
  fullName: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.ThirdPartyManifestFilePath
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Author*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Author
  isExternal: true
  name: Author
  nameWithType: FileBasedThirdPartyPluginDescriptor.Author
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Author
- uid: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.Author
  commentId: P:Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.Author
  parent: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor
  isExternal: true
  name: Author
  nameWithType: IThirdPartyPluginDescriptor.Author
  fullName: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.Author
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Description*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Description
  isExternal: true
  name: Description
  nameWithType: FileBasedThirdPartyPluginDescriptor.Description
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Description
- uid: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.Description
  commentId: P:Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.Description
  parent: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor
  isExternal: true
  name: Description
  nameWithType: IThirdPartyPluginDescriptor.Description
  fullName: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.Description
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.PlugInName*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.PlugInName
  isExternal: true
  name: PlugInName
  nameWithType: FileBasedThirdPartyPluginDescriptor.PlugInName
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.PlugInName
- uid: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.PlugInName
  commentId: P:Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.PlugInName
  parent: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor
  isExternal: true
  name: PlugInName
  nameWithType: IThirdPartyPluginDescriptor.PlugInName
  fullName: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.PlugInName
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Version*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Version
  isExternal: true
  name: Version
  nameWithType: FileBasedThirdPartyPluginDescriptor.Version
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Version
- uid: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.Version
  commentId: P:Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.Version
  parent: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor
  isExternal: true
  name: Version
  nameWithType: IThirdPartyPluginDescriptor.Version
  fullName: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.Version
- uid: System.Version
  commentId: T:System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Validated*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Validated
  isExternal: true
  name: Validated
  nameWithType: FileBasedThirdPartyPluginDescriptor.Validated
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.Validated
- uid: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.Validated
  commentId: P:Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.Validated
  parent: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor
  isExternal: true
  name: Validated
  nameWithType: IThirdPartyPluginDescriptor.Validated
  fullName: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.Validated
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.InvalidAssemblies*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.InvalidAssemblies
  isExternal: true
  name: InvalidAssemblies
  nameWithType: FileBasedThirdPartyPluginDescriptor.InvalidAssemblies
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.InvalidAssemblies
- uid: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.InvalidAssemblies
  commentId: P:Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.InvalidAssemblies
  parent: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor
  isExternal: true
  name: InvalidAssemblies
  nameWithType: IThirdPartyPluginDescriptor.InvalidAssemblies
  fullName: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.InvalidAssemblies
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.InvalidSdlAssemblyReferences*
  commentId: Overload:Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.InvalidSdlAssemblyReferences
  isExternal: true
  name: InvalidSdlAssemblyReferences
  nameWithType: FileBasedThirdPartyPluginDescriptor.InvalidSdlAssemblyReferences
  fullName: Sdl.Core.PluginFramework.FileBasedThirdPartyPluginDescriptor.InvalidSdlAssemblyReferences
- uid: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.InvalidSdlAssemblyReferences
  commentId: P:Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.InvalidSdlAssemblyReferences
  parent: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor
  isExternal: true
  name: InvalidSdlAssemblyReferences
  nameWithType: IThirdPartyPluginDescriptor.InvalidSdlAssemblyReferences
  fullName: Sdl.Core.PluginFramework.IThirdPartyPluginDescriptor.InvalidSdlAssemblyReferences
- uid: System.Collections.Generic.List{Sdl.Core.PluginFramework.InvalidSdlAssemblyReference}
  commentId: T:System.Collections.Generic.List{Sdl.Core.PluginFramework.InvalidSdlAssemblyReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<InvalidSdlAssemblyReference>
  nameWithType: List<InvalidSdlAssemblyReference>
  fullName: System.Collections.Generic.List<Sdl.Core.PluginFramework.InvalidSdlAssemblyReference>
  nameWithType.vb: List(Of InvalidSdlAssemblyReference)
  fullName.vb: System.Collections.Generic.List(Of Sdl.Core.PluginFramework.InvalidSdlAssemblyReference)
  name.vb: List(Of InvalidSdlAssemblyReference)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Core.PluginFramework.InvalidSdlAssemblyReference
    name: InvalidSdlAssemblyReference
    nameWithType: InvalidSdlAssemblyReference
    fullName: Sdl.Core.PluginFramework.InvalidSdlAssemblyReference
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Core.PluginFramework.InvalidSdlAssemblyReference
    name: InvalidSdlAssemblyReference
    nameWithType: InvalidSdlAssemblyReference
    fullName: Sdl.Core.PluginFramework.InvalidSdlAssemblyReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
