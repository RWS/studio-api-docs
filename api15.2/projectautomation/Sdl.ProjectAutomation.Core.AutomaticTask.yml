### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Core.AutomaticTask
  commentId: T:Sdl.ProjectAutomation.Core.AutomaticTask
  id: AutomaticTask
  parent: Sdl.ProjectAutomation.Core
  children:
  - Sdl.ProjectAutomation.Core.AutomaticTask.#ctor
  - Sdl.ProjectAutomation.Core.AutomaticTask.Messages
  - Sdl.ProjectAutomation.Core.AutomaticTask.OutputFiles
  - Sdl.ProjectAutomation.Core.AutomaticTask.Reports
  - Sdl.ProjectAutomation.Core.AutomaticTask.TemplateIds
  langs:
  - csharp
  - vb
  name: AutomaticTask
  nameWithType: AutomaticTask
  fullName: Sdl.ProjectAutomation.Core.AutomaticTask
  type: Class
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: 'public class AutomaticTask : Task'
    content.vb: >-
      Public Class AutomaticTask
          Inherits Task
  inheritance:
  - System.Object
  - Sdl.ProjectAutomation.Core.Task
  inheritedMembers:
  - Sdl.ProjectAutomation.Core.Task.Id
  - Sdl.ProjectAutomation.Core.Task.InputFiles
  - Sdl.ProjectAutomation.Core.Task.Status
  - Sdl.ProjectAutomation.Core.Task.Name
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.Core.AutomaticTask.#ctor
  commentId: M:Sdl.ProjectAutomation.Core.AutomaticTask.#ctor
  id: '#ctor'
  parent: Sdl.ProjectAutomation.Core.AutomaticTask
  langs:
  - csharp
  - vb
  name: AutomaticTask()
  nameWithType: AutomaticTask.AutomaticTask()
  fullName: Sdl.ProjectAutomation.Core.AutomaticTask.AutomaticTask()
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public AutomaticTask()
    content.vb: Public Sub New
  overload: Sdl.ProjectAutomation.Core.AutomaticTask.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Core.AutomaticTask.TemplateIds
  commentId: P:Sdl.ProjectAutomation.Core.AutomaticTask.TemplateIds
  id: TemplateIds
  parent: Sdl.ProjectAutomation.Core.AutomaticTask
  langs:
  - csharp
  - vb
  name: TemplateIds
  nameWithType: AutomaticTask.TemplateIds
  fullName: Sdl.ProjectAutomation.Core.AutomaticTask.TemplateIds
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public string[] TemplateIds { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property TemplateIds As String()
  overload: Sdl.ProjectAutomation.Core.AutomaticTask.TemplateIds*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.AutomaticTask.OutputFiles
  commentId: P:Sdl.ProjectAutomation.Core.AutomaticTask.OutputFiles
  id: OutputFiles
  parent: Sdl.ProjectAutomation.Core.AutomaticTask
  langs:
  - csharp
  - vb
  name: OutputFiles
  nameWithType: AutomaticTask.OutputFiles
  fullName: Sdl.ProjectAutomation.Core.AutomaticTask.OutputFiles
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public TaskFileInfo[] OutputFiles { get; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.Core.TaskFileInfo[]
    content.vb: Public ReadOnly Property OutputFiles As TaskFileInfo()
  overload: Sdl.ProjectAutomation.Core.AutomaticTask.OutputFiles*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.AutomaticTask.Messages
  commentId: P:Sdl.ProjectAutomation.Core.AutomaticTask.Messages
  id: Messages
  parent: Sdl.ProjectAutomation.Core.AutomaticTask
  langs:
  - csharp
  - vb
  name: Messages
  nameWithType: AutomaticTask.Messages
  fullName: Sdl.ProjectAutomation.Core.AutomaticTask.Messages
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public ExecutionMessage[] Messages { get; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.Core.ExecutionMessage[]
    content.vb: Public ReadOnly Property Messages As ExecutionMessage()
  overload: Sdl.ProjectAutomation.Core.AutomaticTask.Messages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Core.AutomaticTask.Reports
  commentId: P:Sdl.ProjectAutomation.Core.AutomaticTask.Reports
  id: Reports
  parent: Sdl.ProjectAutomation.Core.AutomaticTask
  langs:
  - csharp
  - vb
  name: Reports
  nameWithType: AutomaticTask.Reports
  fullName: Sdl.ProjectAutomation.Core.AutomaticTask.Reports
  type: Property
  source:
    path: Sdl.ProjectAutomation.Core
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Core
  namespace: Sdl.ProjectAutomation.Core
  syntax:
    content: public TaskReport[] Reports { get; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.Core.TaskReport[]
    content.vb: Public ReadOnly Property Reports As TaskReport()
  overload: Sdl.ProjectAutomation.Core.AutomaticTask.Reports*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.ProjectAutomation.Core
  commentId: N:Sdl.ProjectAutomation.Core
  isExternal: true
  name: Sdl.ProjectAutomation.Core
  nameWithType: Sdl.ProjectAutomation.Core
  fullName: Sdl.ProjectAutomation.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.ProjectAutomation.Core.Task
  commentId: T:Sdl.ProjectAutomation.Core.Task
  parent: Sdl.ProjectAutomation.Core
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Sdl.ProjectAutomation.Core.Task
- uid: Sdl.ProjectAutomation.Core.Task.Id
  commentId: P:Sdl.ProjectAutomation.Core.Task.Id
  parent: Sdl.ProjectAutomation.Core.Task
  isExternal: true
  name: Id
  nameWithType: Task.Id
  fullName: Sdl.ProjectAutomation.Core.Task.Id
- uid: Sdl.ProjectAutomation.Core.Task.InputFiles
  commentId: P:Sdl.ProjectAutomation.Core.Task.InputFiles
  parent: Sdl.ProjectAutomation.Core.Task
  isExternal: true
  name: InputFiles
  nameWithType: Task.InputFiles
  fullName: Sdl.ProjectAutomation.Core.Task.InputFiles
- uid: Sdl.ProjectAutomation.Core.Task.Status
  commentId: P:Sdl.ProjectAutomation.Core.Task.Status
  parent: Sdl.ProjectAutomation.Core.Task
  isExternal: true
  name: Status
  nameWithType: Task.Status
  fullName: Sdl.ProjectAutomation.Core.Task.Status
- uid: Sdl.ProjectAutomation.Core.Task.Name
  commentId: P:Sdl.ProjectAutomation.Core.Task.Name
  parent: Sdl.ProjectAutomation.Core.Task
  isExternal: true
  name: Name
  nameWithType: Task.Name
  fullName: Sdl.ProjectAutomation.Core.Task.Name
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Core.AutomaticTask.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.Core.AutomaticTask.#ctor
  isExternal: true
  name: AutomaticTask
  nameWithType: AutomaticTask.AutomaticTask
  fullName: Sdl.ProjectAutomation.Core.AutomaticTask.AutomaticTask
- uid: Sdl.ProjectAutomation.Core.AutomaticTask.TemplateIds*
  commentId: Overload:Sdl.ProjectAutomation.Core.AutomaticTask.TemplateIds
  isExternal: true
  name: TemplateIds
  nameWithType: AutomaticTask.TemplateIds
  fullName: Sdl.ProjectAutomation.Core.AutomaticTask.TemplateIds
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectAutomation.Core.AutomaticTask.OutputFiles*
  commentId: Overload:Sdl.ProjectAutomation.Core.AutomaticTask.OutputFiles
  isExternal: true
  name: OutputFiles
  nameWithType: AutomaticTask.OutputFiles
  fullName: Sdl.ProjectAutomation.Core.AutomaticTask.OutputFiles
- uid: Sdl.ProjectAutomation.Core.TaskFileInfo[]
  isExternal: true
  name: TaskFileInfo[]
  nameWithType: TaskFileInfo[]
  fullName: Sdl.ProjectAutomation.Core.TaskFileInfo[]
  nameWithType.vb: TaskFileInfo()
  fullName.vb: Sdl.ProjectAutomation.Core.TaskFileInfo()
  name.vb: TaskFileInfo()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.TaskFileInfo
    name: TaskFileInfo
    nameWithType: TaskFileInfo
    fullName: Sdl.ProjectAutomation.Core.TaskFileInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.TaskFileInfo
    name: TaskFileInfo
    nameWithType: TaskFileInfo
    fullName: Sdl.ProjectAutomation.Core.TaskFileInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectAutomation.Core.AutomaticTask.Messages*
  commentId: Overload:Sdl.ProjectAutomation.Core.AutomaticTask.Messages
  isExternal: true
  name: Messages
  nameWithType: AutomaticTask.Messages
  fullName: Sdl.ProjectAutomation.Core.AutomaticTask.Messages
- uid: Sdl.ProjectAutomation.Core.ExecutionMessage[]
  isExternal: true
  name: ExecutionMessage[]
  nameWithType: ExecutionMessage[]
  fullName: Sdl.ProjectAutomation.Core.ExecutionMessage[]
  nameWithType.vb: ExecutionMessage()
  fullName.vb: Sdl.ProjectAutomation.Core.ExecutionMessage()
  name.vb: ExecutionMessage()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.ExecutionMessage
    name: ExecutionMessage
    nameWithType: ExecutionMessage
    fullName: Sdl.ProjectAutomation.Core.ExecutionMessage
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.ExecutionMessage
    name: ExecutionMessage
    nameWithType: ExecutionMessage
    fullName: Sdl.ProjectAutomation.Core.ExecutionMessage
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectAutomation.Core.AutomaticTask.Reports*
  commentId: Overload:Sdl.ProjectAutomation.Core.AutomaticTask.Reports
  isExternal: true
  name: Reports
  nameWithType: AutomaticTask.Reports
  fullName: Sdl.ProjectAutomation.Core.AutomaticTask.Reports
- uid: Sdl.ProjectAutomation.Core.TaskReport[]
  isExternal: true
  name: TaskReport[]
  nameWithType: TaskReport[]
  fullName: Sdl.ProjectAutomation.Core.TaskReport[]
  nameWithType.vb: TaskReport()
  fullName.vb: Sdl.ProjectAutomation.Core.TaskReport()
  name.vb: TaskReport()
  spec.csharp:
  - uid: Sdl.ProjectAutomation.Core.TaskReport
    name: TaskReport
    nameWithType: TaskReport
    fullName: Sdl.ProjectAutomation.Core.TaskReport
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectAutomation.Core.TaskReport
    name: TaskReport
    nameWithType: TaskReport
    fullName: Sdl.ProjectAutomation.Core.TaskReport
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
