### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings
  commentId: T:Sdl.ProjectAutomation.Settings.TranslateTaskSettings
  id: TranslateTaskSettings
  parent: Sdl.ProjectAutomation.Settings
  children:
  - Sdl.ProjectAutomation.Settings.TranslateTaskSettings.#ctor
  - Sdl.ProjectAutomation.Settings.TranslateTaskSettings.ConfirmAfterApplyingExactMatch
  - Sdl.ProjectAutomation.Settings.TranslateTaskSettings.ConfirmAfterApplyingInContextExactMatch
  - Sdl.ProjectAutomation.Settings.TranslateTaskSettings.CreateReport
  - Sdl.ProjectAutomation.Settings.TranslateTaskSettings.GetDefaultValue(System.String)
  - Sdl.ProjectAutomation.Settings.TranslateTaskSettings.LockContextMatchSegments
  - Sdl.ProjectAutomation.Settings.TranslateTaskSettings.LockExactMatchSegments
  - Sdl.ProjectAutomation.Settings.TranslateTaskSettings.MinimumMatchScore
  - Sdl.ProjectAutomation.Settings.TranslateTaskSettings.NoTranslationMemoryMatchFoundAction
  - Sdl.ProjectAutomation.Settings.TranslateTaskSettings.OverwritePerfectMatch
  - Sdl.ProjectAutomation.Settings.TranslateTaskSettings.TranslationOverwriteMode
  langs:
  - csharp
  - vb
  name: TranslateTaskSettings
  nameWithType: TranslateTaskSettings
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings
  type: Class
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nSettings group class for the Analysis automatic task settings.\n"
  syntax:
    content: 'public class TranslateTaskSettings : SettingsGroup'
    content.vb: >-
      Public Class TranslateTaskSettings
          Inherits SettingsGroup
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.#ctor
  commentId: M:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.#ctor
  id: '#ctor'
  parent: Sdl.ProjectAutomation.Settings.TranslateTaskSettings
  langs:
  - csharp
  - vb
  name: TranslateTaskSettings()
  nameWithType: TranslateTaskSettings.TranslateTaskSettings()
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.TranslateTaskSettings()
  type: Constructor
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nDefault constructor. You should never create this object manually. Use <xref href=\"Sdl.Core.Settings.ISettingsBundle.GetSettingsGroup(System.String)\" data-throw-if-not-resolved=\"false\"></xref> instead.\n"
  syntax:
    content: public TranslateTaskSettings()
    content.vb: Public Sub New
  overload: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.GetDefaultValue(System.String)
  commentId: M:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.GetDefaultValue(System.String)
  id: GetDefaultValue(System.String)
  parent: Sdl.ProjectAutomation.Settings.TranslateTaskSettings
  langs:
  - csharp
  - vb
  name: GetDefaultValue(String)
  nameWithType: TranslateTaskSettings.GetDefaultValue(String)
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.GetDefaultValue(System.String)
  type: Method
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nGets the default value.\n"
  syntax:
    content: protected override object GetDefaultValue(string settingId)
    parameters:
    - id: settingId
      type: System.String
      description: The setting id.
    return:
      type: System.Object
      description: The default value.
    content.vb: Protected Overrides Function GetDefaultValue(settingId As String) As Object
  overload: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.GetDefaultValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.CreateReport
  commentId: P:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.CreateReport
  id: CreateReport
  parent: Sdl.ProjectAutomation.Settings.TranslateTaskSettings
  langs:
  - csharp
  - vb
  name: CreateReport
  nameWithType: TranslateTaskSettings.CreateReport
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.CreateReport
  type: Property
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nGets the setting that flags whether a report should be generated. Default: <code>true</code>.\n"
  syntax:
    content: public Setting<bool> CreateReport { get; }
    parameters: []
    return:
      type: Sdl.Core.Settings.Setting{System.Boolean}
    content.vb: Public ReadOnly Property CreateReport As Setting(Of Boolean)
  overload: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.CreateReport*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.NoTranslationMemoryMatchFoundAction
  commentId: P:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.NoTranslationMemoryMatchFoundAction
  id: NoTranslationMemoryMatchFoundAction
  parent: Sdl.ProjectAutomation.Settings.TranslateTaskSettings
  langs:
  - csharp
  - vb
  name: NoTranslationMemoryMatchFoundAction
  nameWithType: TranslateTaskSettings.NoTranslationMemoryMatchFoundAction
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.NoTranslationMemoryMatchFoundAction
  type: Property
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nGets the setting that flags whether the source should be copied to the target if no match is found. Default: <xref href=\"Sdl.ProjectAutomation.Settings.NoTranslationMemoryMatchFoundAction.LeaveEmpty\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public Setting<NoTranslationMemoryMatchFoundAction> NoTranslationMemoryMatchFoundAction { get; }
    parameters: []
    return:
      type: Sdl.Core.Settings.Setting{Sdl.ProjectAutomation.Settings.NoTranslationMemoryMatchFoundAction}
    content.vb: Public ReadOnly Property NoTranslationMemoryMatchFoundAction As Setting(Of NoTranslationMemoryMatchFoundAction)
  overload: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.NoTranslationMemoryMatchFoundAction*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.MinimumMatchScore
  commentId: P:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.MinimumMatchScore
  id: MinimumMatchScore
  parent: Sdl.ProjectAutomation.Settings.TranslateTaskSettings
  langs:
  - csharp
  - vb
  name: MinimumMatchScore
  nameWithType: TranslateTaskSettings.MinimumMatchScore
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.MinimumMatchScore
  type: Property
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nGets the setting that specifies the minimum match value when applying the translation memories, or matches from other providers. Default: 100.\n"
  syntax:
    content: public Setting<int> MinimumMatchScore { get; }
    parameters: []
    return:
      type: Sdl.Core.Settings.Setting{System.Int32}
    content.vb: Public ReadOnly Property MinimumMatchScore As Setting(Of Integer)
  overload: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.MinimumMatchScore*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.TranslationOverwriteMode
  commentId: P:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.TranslationOverwriteMode
  id: TranslationOverwriteMode
  parent: Sdl.ProjectAutomation.Settings.TranslateTaskSettings
  langs:
  - csharp
  - vb
  name: TranslationOverwriteMode
  nameWithType: TranslateTaskSettings.TranslationOverwriteMode
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.TranslationOverwriteMode
  type: Property
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nGets the setting that specifies whether existing translations should be kept or overwritten in the document. Default: OverwriteExistingTranslationIfBetterMatch.\n"
  syntax:
    content: public Setting<TranslationUpdateMode> TranslationOverwriteMode { get; }
    parameters: []
    return:
      type: Sdl.Core.Settings.Setting{Sdl.ProjectAutomation.Settings.TranslationUpdateMode}
    content.vb: Public ReadOnly Property TranslationOverwriteMode As Setting(Of TranslationUpdateMode)
  overload: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.TranslationOverwriteMode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.LockContextMatchSegments
  commentId: P:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.LockContextMatchSegments
  id: LockContextMatchSegments
  parent: Sdl.ProjectAutomation.Settings.TranslateTaskSettings
  langs:
  - csharp
  - vb
  name: LockContextMatchSegments
  nameWithType: TranslateTaskSettings.LockContextMatchSegments
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.LockContextMatchSegments
  type: Property
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nGets the setting that specifies whether context matches should be locked. Default: <code>true</code>.\n"
  syntax:
    content: public Setting<bool> LockContextMatchSegments { get; }
    parameters: []
    return:
      type: Sdl.Core.Settings.Setting{System.Boolean}
    content.vb: Public ReadOnly Property LockContextMatchSegments As Setting(Of Boolean)
  overload: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.LockContextMatchSegments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.LockExactMatchSegments
  commentId: P:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.LockExactMatchSegments
  id: LockExactMatchSegments
  parent: Sdl.ProjectAutomation.Settings.TranslateTaskSettings
  langs:
  - csharp
  - vb
  name: LockExactMatchSegments
  nameWithType: TranslateTaskSettings.LockExactMatchSegments
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.LockExactMatchSegments
  type: Property
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nGets the setting that specifies whether 100% matches should be locked. Default: <code>true</code>.\n"
  syntax:
    content: public Setting<bool> LockExactMatchSegments { get; }
    parameters: []
    return:
      type: Sdl.Core.Settings.Setting{System.Boolean}
    content.vb: Public ReadOnly Property LockExactMatchSegments As Setting(Of Boolean)
  overload: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.LockExactMatchSegments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.ConfirmAfterApplyingExactMatch
  commentId: P:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.ConfirmAfterApplyingExactMatch
  id: ConfirmAfterApplyingExactMatch
  parent: Sdl.ProjectAutomation.Settings.TranslateTaskSettings
  langs:
  - csharp
  - vb
  name: ConfirmAfterApplyingExactMatch
  nameWithType: TranslateTaskSettings.ConfirmAfterApplyingExactMatch
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.ConfirmAfterApplyingExactMatch
  type: Property
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nGets the setting that specifies whether exact matches should be auto-confirmed. Default: <code>true</code>.\n"
  syntax:
    content: public Setting<bool> ConfirmAfterApplyingExactMatch { get; }
    parameters: []
    return:
      type: Sdl.Core.Settings.Setting{System.Boolean}
    content.vb: Public ReadOnly Property ConfirmAfterApplyingExactMatch As Setting(Of Boolean)
  overload: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.ConfirmAfterApplyingExactMatch*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.ConfirmAfterApplyingInContextExactMatch
  commentId: P:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.ConfirmAfterApplyingInContextExactMatch
  id: ConfirmAfterApplyingInContextExactMatch
  parent: Sdl.ProjectAutomation.Settings.TranslateTaskSettings
  langs:
  - csharp
  - vb
  name: ConfirmAfterApplyingInContextExactMatch
  nameWithType: TranslateTaskSettings.ConfirmAfterApplyingInContextExactMatch
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.ConfirmAfterApplyingInContextExactMatch
  type: Property
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nGets the setting that specifies whether in context exact matches should be auto-confirmed. Default: <code>true</code>.\n"
  syntax:
    content: public Setting<bool> ConfirmAfterApplyingInContextExactMatch { get; }
    parameters: []
    return:
      type: Sdl.Core.Settings.Setting{System.Boolean}
    content.vb: Public ReadOnly Property ConfirmAfterApplyingInContextExactMatch As Setting(Of Boolean)
  overload: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.ConfirmAfterApplyingInContextExactMatch*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.OverwritePerfectMatch
  commentId: P:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.OverwritePerfectMatch
  id: OverwritePerfectMatch
  parent: Sdl.ProjectAutomation.Settings.TranslateTaskSettings
  langs:
  - csharp
  - vb
  name: OverwritePerfectMatch
  nameWithType: TranslateTaskSettings.OverwritePerfectMatch
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.OverwritePerfectMatch
  type: Property
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nGets the setting that specifies whether exsting PerfectMatch translations are overwritten when the <xref href=\"Sdl.ProjectAutomation.Settings.TranslateTaskSettings.TranslationOverwriteMode\" data-throw-if-not-resolved=\"false\"></xref>TranslationOverwriteMode setting is set to <xref href=\"Sdl.ProjectAutomation.Settings.TranslationUpdateMode.OverwriteExistingTranslation\" data-throw-if-not-resolved=\"false\"></xref>. Default <code>false</code>.\n"
  syntax:
    content: public Setting<bool> OverwritePerfectMatch { get; }
    parameters: []
    return:
      type: Sdl.Core.Settings.Setting{System.Boolean}
    content.vb: Public ReadOnly Property OverwritePerfectMatch As Setting(Of Boolean)
  overload: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.OverwritePerfectMatch*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.ProjectAutomation.Settings
  commentId: N:Sdl.ProjectAutomation.Settings
  isExternal: true
  name: Sdl.ProjectAutomation.Settings
  nameWithType: Sdl.ProjectAutomation.Settings
  fullName: Sdl.ProjectAutomation.Settings
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.#ctor*
  commentId: Overload:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.#ctor
  isExternal: true
  name: TranslateTaskSettings
  nameWithType: TranslateTaskSettings.TranslateTaskSettings
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.TranslateTaskSettings
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.GetDefaultValue*
  commentId: Overload:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.GetDefaultValue
  isExternal: true
  name: GetDefaultValue
  nameWithType: TranslateTaskSettings.GetDefaultValue
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.GetDefaultValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.CreateReport*
  commentId: Overload:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.CreateReport
  isExternal: true
  name: CreateReport
  nameWithType: TranslateTaskSettings.CreateReport
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.CreateReport
- uid: Sdl.Core.Settings.Setting{System.Boolean}
  commentId: '!:Sdl.Core.Settings.Setting{System.Boolean}'
  definition: Sdl.Core.Settings.Setting`1
  name: Setting<Boolean>
  nameWithType: Setting<Boolean>
  fullName: Sdl.Core.Settings.Setting<System.Boolean>
  nameWithType.vb: Setting(Of Boolean)
  fullName.vb: Sdl.Core.Settings.Setting(Of System.Boolean)
  name.vb: Setting(Of Boolean)
  spec.csharp:
  - uid: Sdl.Core.Settings.Setting`1
    name: Setting
    nameWithType: Setting
    fullName: Sdl.Core.Settings.Setting
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.Core.Settings.Setting`1
    name: Setting
    nameWithType: Setting
    fullName: Sdl.Core.Settings.Setting
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.Settings.Setting`1
  isExternal: true
  name: Setting<>
  nameWithType: Setting<>
  fullName: Sdl.Core.Settings.Setting<>
  nameWithType.vb: Setting(Of )
  fullName.vb: Sdl.Core.Settings.Setting(Of )
  name.vb: Setting(Of )
  spec.csharp:
  - uid: Sdl.Core.Settings.Setting`1
    name: Setting
    nameWithType: Setting
    fullName: Sdl.Core.Settings.Setting
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.Core.Settings.Setting`1
    name: Setting
    nameWithType: Setting
    fullName: Sdl.Core.Settings.Setting
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.NoTranslationMemoryMatchFoundAction*
  commentId: Overload:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.NoTranslationMemoryMatchFoundAction
  isExternal: true
  name: NoTranslationMemoryMatchFoundAction
  nameWithType: TranslateTaskSettings.NoTranslationMemoryMatchFoundAction
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.NoTranslationMemoryMatchFoundAction
- uid: Sdl.Core.Settings.Setting{Sdl.ProjectAutomation.Settings.NoTranslationMemoryMatchFoundAction}
  commentId: '!:Sdl.Core.Settings.Setting{Sdl.ProjectAutomation.Settings.NoTranslationMemoryMatchFoundAction}'
  definition: Sdl.Core.Settings.Setting`1
  name: Setting<NoTranslationMemoryMatchFoundAction>
  nameWithType: Setting<NoTranslationMemoryMatchFoundAction>
  fullName: Sdl.Core.Settings.Setting<Sdl.ProjectAutomation.Settings.NoTranslationMemoryMatchFoundAction>
  nameWithType.vb: Setting(Of NoTranslationMemoryMatchFoundAction)
  fullName.vb: Sdl.Core.Settings.Setting(Of Sdl.ProjectAutomation.Settings.NoTranslationMemoryMatchFoundAction)
  name.vb: Setting(Of NoTranslationMemoryMatchFoundAction)
  spec.csharp:
  - uid: Sdl.Core.Settings.Setting`1
    name: Setting
    nameWithType: Setting
    fullName: Sdl.Core.Settings.Setting
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Settings.NoTranslationMemoryMatchFoundAction
    name: NoTranslationMemoryMatchFoundAction
    nameWithType: NoTranslationMemoryMatchFoundAction
    fullName: Sdl.ProjectAutomation.Settings.NoTranslationMemoryMatchFoundAction
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.Core.Settings.Setting`1
    name: Setting
    nameWithType: Setting
    fullName: Sdl.Core.Settings.Setting
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Settings.NoTranslationMemoryMatchFoundAction
    name: NoTranslationMemoryMatchFoundAction
    nameWithType: NoTranslationMemoryMatchFoundAction
    fullName: Sdl.ProjectAutomation.Settings.NoTranslationMemoryMatchFoundAction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.MinimumMatchScore*
  commentId: Overload:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.MinimumMatchScore
  isExternal: true
  name: MinimumMatchScore
  nameWithType: TranslateTaskSettings.MinimumMatchScore
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.MinimumMatchScore
- uid: Sdl.Core.Settings.Setting{System.Int32}
  commentId: '!:Sdl.Core.Settings.Setting{System.Int32}'
  definition: Sdl.Core.Settings.Setting`1
  name: Setting<Int32>
  nameWithType: Setting<Int32>
  fullName: Sdl.Core.Settings.Setting<System.Int32>
  nameWithType.vb: Setting(Of Int32)
  fullName.vb: Sdl.Core.Settings.Setting(Of System.Int32)
  name.vb: Setting(Of Int32)
  spec.csharp:
  - uid: Sdl.Core.Settings.Setting`1
    name: Setting
    nameWithType: Setting
    fullName: Sdl.Core.Settings.Setting
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.Core.Settings.Setting`1
    name: Setting
    nameWithType: Setting
    fullName: Sdl.Core.Settings.Setting
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.TranslationOverwriteMode*
  commentId: Overload:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.TranslationOverwriteMode
  isExternal: true
  name: TranslationOverwriteMode
  nameWithType: TranslateTaskSettings.TranslationOverwriteMode
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.TranslationOverwriteMode
- uid: Sdl.Core.Settings.Setting{Sdl.ProjectAutomation.Settings.TranslationUpdateMode}
  commentId: '!:Sdl.Core.Settings.Setting{Sdl.ProjectAutomation.Settings.TranslationUpdateMode}'
  definition: Sdl.Core.Settings.Setting`1
  name: Setting<TranslationUpdateMode>
  nameWithType: Setting<TranslationUpdateMode>
  fullName: Sdl.Core.Settings.Setting<Sdl.ProjectAutomation.Settings.TranslationUpdateMode>
  nameWithType.vb: Setting(Of TranslationUpdateMode)
  fullName.vb: Sdl.Core.Settings.Setting(Of Sdl.ProjectAutomation.Settings.TranslationUpdateMode)
  name.vb: Setting(Of TranslationUpdateMode)
  spec.csharp:
  - uid: Sdl.Core.Settings.Setting`1
    name: Setting
    nameWithType: Setting
    fullName: Sdl.Core.Settings.Setting
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Settings.TranslationUpdateMode
    name: TranslationUpdateMode
    nameWithType: TranslationUpdateMode
    fullName: Sdl.ProjectAutomation.Settings.TranslationUpdateMode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sdl.Core.Settings.Setting`1
    name: Setting
    nameWithType: Setting
    fullName: Sdl.Core.Settings.Setting
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Settings.TranslationUpdateMode
    name: TranslationUpdateMode
    nameWithType: TranslationUpdateMode
    fullName: Sdl.ProjectAutomation.Settings.TranslationUpdateMode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.LockContextMatchSegments*
  commentId: Overload:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.LockContextMatchSegments
  isExternal: true
  name: LockContextMatchSegments
  nameWithType: TranslateTaskSettings.LockContextMatchSegments
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.LockContextMatchSegments
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.LockExactMatchSegments*
  commentId: Overload:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.LockExactMatchSegments
  isExternal: true
  name: LockExactMatchSegments
  nameWithType: TranslateTaskSettings.LockExactMatchSegments
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.LockExactMatchSegments
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.ConfirmAfterApplyingExactMatch*
  commentId: Overload:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.ConfirmAfterApplyingExactMatch
  isExternal: true
  name: ConfirmAfterApplyingExactMatch
  nameWithType: TranslateTaskSettings.ConfirmAfterApplyingExactMatch
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.ConfirmAfterApplyingExactMatch
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.ConfirmAfterApplyingInContextExactMatch*
  commentId: Overload:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.ConfirmAfterApplyingInContextExactMatch
  isExternal: true
  name: ConfirmAfterApplyingInContextExactMatch
  nameWithType: TranslateTaskSettings.ConfirmAfterApplyingInContextExactMatch
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.ConfirmAfterApplyingInContextExactMatch
- uid: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.OverwritePerfectMatch*
  commentId: Overload:Sdl.ProjectAutomation.Settings.TranslateTaskSettings.OverwritePerfectMatch
  isExternal: true
  name: OverwritePerfectMatch
  nameWithType: TranslateTaskSettings.OverwritePerfectMatch
  fullName: Sdl.ProjectAutomation.Settings.TranslateTaskSettings.OverwritePerfectMatch
