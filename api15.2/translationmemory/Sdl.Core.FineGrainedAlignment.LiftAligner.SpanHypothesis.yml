### YamlMime:ManagedReference
items:
- uid: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis
  commentId: T:Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis
  id: LiftAligner.SpanHypothesis
  parent: Sdl.Core.FineGrainedAlignment
  children:
  - Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Block
  - Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Blocked
  - Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.ComputedConfidence
  - Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confidence
  - Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confirm
  - Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confirmed
  langs:
  - csharp
  - vb
  name: LiftAligner.SpanHypothesis
  nameWithType: LiftAligner.SpanHypothesis
  fullName: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis
  type: Class
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public class SpanHypothesis
    content.vb: Public Class SpanHypothesis
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis
  langs:
  - csharp
  - vb
  name: SpanHypothesis(Int32, Int32, Int32, Int32)
  nameWithType: LiftAligner.SpanHypothesis.SpanHypothesis(Int32, Int32, Int32, Int32)
  fullName: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.SpanHypothesis(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public SpanHypothesis(int sourceStartIndex, int sourceLength, int targetStartIndex, int targetLength)
    parameters:
    - id: sourceStartIndex
      type: System.Int32
    - id: sourceLength
      type: System.Int32
    - id: targetStartIndex
      type: System.Int32
    - id: targetLength
      type: System.Int32
    content.vb: Public Sub New(sourceStartIndex As Integer, sourceLength As Integer, targetStartIndex As Integer, targetLength As Integer)
  overload: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Block
  commentId: M:Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Block
  id: Block
  parent: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis
  langs:
  - csharp
  - vb
  name: Block()
  nameWithType: LiftAligner.SpanHypothesis.Block()
  fullName: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Block()
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public void Block()
    content.vb: Public Sub Block
  overload: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Block*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confirm
  commentId: M:Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confirm
  id: Confirm
  parent: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis
  langs:
  - csharp
  - vb
  name: Confirm()
  nameWithType: LiftAligner.SpanHypothesis.Confirm()
  fullName: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confirm()
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public void Confirm()
    content.vb: Public Sub Confirm
  overload: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confirm*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confidence
  commentId: P:Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confidence
  id: Confidence
  parent: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis
  langs:
  - csharp
  - vb
  name: Confidence
  nameWithType: LiftAligner.SpanHypothesis.Confidence
  fullName: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confidence
  type: Property
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public float Confidence { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Confidence As Single
  overload: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confidence*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.ComputedConfidence
  commentId: P:Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.ComputedConfidence
  id: ComputedConfidence
  parent: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis
  langs:
  - csharp
  - vb
  name: ComputedConfidence
  nameWithType: LiftAligner.SpanHypothesis.ComputedConfidence
  fullName: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.ComputedConfidence
  type: Property
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public float ComputedConfidence { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property ComputedConfidence As Single
  overload: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.ComputedConfidence*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Blocked
  commentId: P:Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Blocked
  id: Blocked
  parent: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis
  langs:
  - csharp
  - vb
  name: Blocked
  nameWithType: LiftAligner.SpanHypothesis.Blocked
  fullName: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Blocked
  type: Property
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public bool Blocked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Blocked As Boolean
  overload: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Blocked*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confirmed
  commentId: P:Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confirmed
  id: Confirmed
  parent: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis
  langs:
  - csharp
  - vb
  name: Confirmed
  nameWithType: LiftAligner.SpanHypothesis.Confirmed
  fullName: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confirmed
  type: Property
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public bool Confirmed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Confirmed As Boolean
  overload: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confirmed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.Core.FineGrainedAlignment
  commentId: N:Sdl.Core.FineGrainedAlignment
  isExternal: true
  name: Sdl.Core.FineGrainedAlignment
  nameWithType: Sdl.Core.FineGrainedAlignment
  fullName: Sdl.Core.FineGrainedAlignment
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.#ctor*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.#ctor
  isExternal: true
  name: SpanHypothesis
  nameWithType: LiftAligner.SpanHypothesis.SpanHypothesis
  fullName: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.SpanHypothesis
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Block*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Block
  isExternal: true
  name: Block
  nameWithType: LiftAligner.SpanHypothesis.Block
  fullName: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Block
- uid: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confirm*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confirm
  isExternal: true
  name: Confirm
  nameWithType: LiftAligner.SpanHypothesis.Confirm
  fullName: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confirm
- uid: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confidence*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confidence
  isExternal: true
  name: Confidence
  nameWithType: LiftAligner.SpanHypothesis.Confidence
  fullName: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confidence
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.ComputedConfidence*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.ComputedConfidence
  isExternal: true
  name: ComputedConfidence
  nameWithType: LiftAligner.SpanHypothesis.ComputedConfidence
  fullName: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.ComputedConfidence
- uid: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Blocked*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Blocked
  isExternal: true
  name: Blocked
  nameWithType: LiftAligner.SpanHypothesis.Blocked
  fullName: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Blocked
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confirmed*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confirmed
  isExternal: true
  name: Confirmed
  nameWithType: LiftAligner.SpanHypothesis.Confirmed
  fullName: Sdl.Core.FineGrainedAlignment.LiftAligner.SpanHypothesis.Confirmed
