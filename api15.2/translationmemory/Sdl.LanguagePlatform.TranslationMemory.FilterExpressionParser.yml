### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser
  id: FilterExpressionParser
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.#ctor(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  - Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(System.String)
  - Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(System.String,Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  langs:
  - csharp
  - vb
  name: FilterExpressionParser
  nameWithType: FilterExpressionParser
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public class FilterExpressionParser
    content.vb: Public Class FilterExpressionParser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(System.String,Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(System.String,Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  id: Parse(System.String,Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  parent: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser
  langs:
  - csharp
  - vb
  name: Parse(String, IFieldDefinitions)
  nameWithType: FilterExpressionParser.Parse(String, IFieldDefinitions)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(System.String, Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public static FilterExpression Parse(string expression, IFieldDefinitions fieldDeclarations)
    parameters:
    - id: expression
      type: System.String
    - id: fieldDeclarations
      type: Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
    content.vb: Public Shared Function Parse(expression As String, fieldDeclarations As IFieldDefinitions) As FilterExpression
  overload: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.#ctor(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.#ctor(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  id: '#ctor(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)'
  parent: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser
  langs:
  - csharp
  - vb
  name: FilterExpressionParser(IFieldDefinitions)
  nameWithType: FilterExpressionParser.FilterExpressionParser(IFieldDefinitions)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.FilterExpressionParser(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public FilterExpressionParser(IFieldDefinitions fieldDeclarations)
    parameters:
    - id: fieldDeclarations
      type: Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
    content.vb: Public Sub New(fieldDeclarations As IFieldDefinitions)
  overload: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(System.String)
  id: Parse(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: FilterExpressionParser.Parse(String)
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public FilterExpression Parse(string s)
    parameters:
    - id: s
      type: System.String
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
    content.vb: Public Function Parse(s As String) As FilterExpression
  overload: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse
  isExternal: true
  name: Parse
  nameWithType: FilterExpressionParser.Parse
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: IFieldDefinitions
  nameWithType: IFieldDefinitions
  fullName: Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FilterExpression
  nameWithType: FilterExpression
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.#ctor
  isExternal: true
  name: FilterExpressionParser
  nameWithType: FilterExpressionParser.FilterExpressionParser
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.FilterExpressionParser
