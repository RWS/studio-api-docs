### YamlMime:ManagedReference
items:
- uid: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2
  commentId: T:Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2
  id: CooccurrenceCounter2
  parent: Sdl.Core.FineGrainedAlignment
  children:
  - Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.#ctor(System.String)
  - Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.#ctor(System.String,System.Int32)
  - Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Count(System.Int32,System.Int32)
  - Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Dispose
  - Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Merge(System.Int32)
  - Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Progress
  - Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Samples
  langs:
  - csharp
  - vb
  name: CooccurrenceCounter2
  nameWithType: CooccurrenceCounter2
  fullName: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2
  type: Class
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: 'public class CooccurrenceCounter2 : IDisposable'
    content.vb: >-
      Public Class CooccurrenceCounter2
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.#ctor(System.String)
  commentId: M:Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2
  langs:
  - csharp
  - vb
  name: CooccurrenceCounter2(String)
  nameWithType: CooccurrenceCounter2.CooccurrenceCounter2(String)
  fullName: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.CooccurrenceCounter2(System.String)
  type: Constructor
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public CooccurrenceCounter2(string tempFolder)
    parameters:
    - id: tempFolder
      type: System.String
    content.vb: Public Sub New(tempFolder As String)
  overload: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.#ctor(System.String,System.Int32)
  commentId: M:Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2
  langs:
  - csharp
  - vb
  name: CooccurrenceCounter2(String, Int32)
  nameWithType: CooccurrenceCounter2.CooccurrenceCounter2(String, Int32)
  fullName: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.CooccurrenceCounter2(System.String, System.Int32)
  type: Constructor
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public CooccurrenceCounter2(string tempFolder, int itemsPerFile)
    parameters:
    - id: tempFolder
      type: System.String
    - id: itemsPerFile
      type: System.Int32
    content.vb: Public Sub New(tempFolder As String, itemsPerFile As Integer)
  overload: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Count(System.Int32,System.Int32)
  commentId: M:Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Count(System.Int32,System.Int32)
  id: Count(System.Int32,System.Int32)
  parent: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2
  langs:
  - csharp
  - vb
  name: Count(Int32, Int32)
  nameWithType: CooccurrenceCounter2.Count(Int32, Int32)
  fullName: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Count(System.Int32, System.Int32)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public void Count(int v1, int v2)
    parameters:
    - id: v1
      type: System.Int32
    - id: v2
      type: System.Int32
    content.vb: Public Sub Count(v1 As Integer, v2 As Integer)
  overload: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Count*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Merge(System.Int32)
  commentId: M:Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Merge(System.Int32)
  id: Merge(System.Int32)
  parent: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2
  langs:
  - csharp
  - vb
  name: Merge(Int32)
  nameWithType: CooccurrenceCounter2.Merge(Int32)
  fullName: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Merge(System.Int32)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public IEnumerable<CooccurrenceCount> Merge(int minCooc)
    parameters:
    - id: minCooc
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Stat.CooccurrenceCount}
    content.vb: Public Function Merge(minCooc As Integer) As IEnumerable(Of CooccurrenceCount)
  overload: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Merge*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Dispose
  commentId: M:Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Dispose
  id: Dispose
  parent: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: CooccurrenceCounter2.Dispose()
  fullName: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Dispose()
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Samples
  commentId: P:Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Samples
  id: Samples
  parent: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2
  langs:
  - csharp
  - vb
  name: Samples
  nameWithType: CooccurrenceCounter2.Samples
  fullName: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Samples
  type: Property
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public int Samples { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Samples As Integer
  overload: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Samples*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Progress
  commentId: E:Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Progress
  id: Progress
  parent: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: CooccurrenceCounter2.Progress
  fullName: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Progress
  type: Event
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public event EventHandler<TranslationModelProgressEventArgs> Progress
    return:
      type: System.EventHandler{Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs}
    content.vb: Public Event Progress As EventHandler(Of TranslationModelProgressEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.Core.FineGrainedAlignment
  commentId: N:Sdl.Core.FineGrainedAlignment
  isExternal: true
  name: Sdl.Core.FineGrainedAlignment
  nameWithType: Sdl.Core.FineGrainedAlignment
  fullName: Sdl.Core.FineGrainedAlignment
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.#ctor*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.#ctor
  isExternal: true
  name: CooccurrenceCounter2
  nameWithType: CooccurrenceCounter2.CooccurrenceCounter2
  fullName: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.CooccurrenceCounter2
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Count*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Count
  isExternal: true
  name: Count
  nameWithType: CooccurrenceCounter2.Count
  fullName: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Count
- uid: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Merge*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Merge
  isExternal: true
  name: Merge
  nameWithType: CooccurrenceCounter2.Merge
  fullName: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Merge
- uid: System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Stat.CooccurrenceCount}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.Stat.CooccurrenceCount}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CooccurrenceCount>
  nameWithType: IEnumerable<CooccurrenceCount>
  fullName: System.Collections.Generic.IEnumerable<Sdl.LanguagePlatform.Stat.CooccurrenceCount>
  nameWithType.vb: IEnumerable(Of CooccurrenceCount)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.LanguagePlatform.Stat.CooccurrenceCount)
  name.vb: IEnumerable(Of CooccurrenceCount)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Stat.CooccurrenceCount
    name: CooccurrenceCount
    nameWithType: CooccurrenceCount
    fullName: Sdl.LanguagePlatform.Stat.CooccurrenceCount
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Stat.CooccurrenceCount
    name: CooccurrenceCount
    nameWithType: CooccurrenceCount
    fullName: Sdl.LanguagePlatform.Stat.CooccurrenceCount
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Dispose*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Dispose
  isExternal: true
  name: Dispose
  nameWithType: CooccurrenceCounter2.Dispose
  fullName: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Samples*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Samples
  isExternal: true
  name: Samples
  nameWithType: CooccurrenceCounter2.Samples
  fullName: Sdl.Core.FineGrainedAlignment.CooccurrenceCounter2.Samples
- uid: System.EventHandler{Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs}
  commentId: T:System.EventHandler{Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<TranslationModelProgressEventArgs>
  nameWithType: EventHandler<TranslationModelProgressEventArgs>
  fullName: System.EventHandler<Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs>
  nameWithType.vb: EventHandler(Of TranslationModelProgressEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs)
  name.vb: EventHandler(Of TranslationModelProgressEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs
    name: TranslationModelProgressEventArgs
    nameWithType: TranslationModelProgressEventArgs
    fullName: Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs
    name: TranslationModelProgressEventArgs
    nameWithType: TranslationModelProgressEventArgs
    fullName: Sdl.Core.FineGrainedAlignment.TranslationModelProgressEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
