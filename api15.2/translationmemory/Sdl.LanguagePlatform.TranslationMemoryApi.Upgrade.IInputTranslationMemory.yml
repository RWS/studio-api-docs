### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory
  id: IInputTranslationMemory
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.ExportTmxFile(System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs})
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.Setup
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFilePath
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFileStatus
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TranslationMemory
  langs:
  - csharp
  - vb
  name: IInputTranslationMemory
  nameWithType: IInputTranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory
  type: Interface
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nRepresents a legacy translation memory that is part of a migration project (see <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject\" data-throw-if-not-resolved=\"false\"></xref>).\nThis has a reference to legacy translation memory (see <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemory\" data-throw-if-not-resolved=\"false\"></xref>, provides access to theis translation memory&apos;s\nsetup information and holds status information about whether the necessary content has been exported to TMX yet (see <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFileStatus\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFilePath\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  syntax:
    content: public interface IInputTranslationMemory
    content.vb: Public Interface IInputTranslationMemory
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.ExportTmxFile(System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs})
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.ExportTmxFile(System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs})
  id: ExportTmxFile(System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs})
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory
  langs:
  - csharp
  - vb
  name: ExportTmxFile(EventHandler<BatchExportedEventArgs>)
  nameWithType: IInputTranslationMemory.ExportTmxFile(EventHandler<BatchExportedEventArgs>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.ExportTmxFile(System.EventHandler<Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nExports the legacy TM&apos;s data to the path set in the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFilePath\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  syntax:
    content: void ExportTmxFile(EventHandler<BatchExportedEventArgs> progressEventHandler)
    parameters:
    - id: progressEventHandler
      type: System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs}
      description: "A progress event handler which can be used to \nmonitor progress or cancel the export operation."
    content.vb: Sub ExportTmxFile(progressEventHandler As EventHandler(Of BatchExportedEventArgs))
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.ExportTmxFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Thrown when attempting to call this method if \nthe legacy translation memory is a <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITmxLegacyTranslationMemory\" data-throw-if-not-resolved=\"false\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Thrown when calling this method before \nthe <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFilePath\" data-throw-if-not-resolved=\"false\"></xref> property is set."
  nameWithType.vb: IInputTranslationMemory.ExportTmxFile(EventHandler(Of BatchExportedEventArgs))
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.ExportTmxFile(System.EventHandler(Of Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs))
  name.vb: ExportTmxFile(EventHandler(Of BatchExportedEventArgs))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TranslationMemory
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TranslationMemory
  id: TranslationMemory
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory
  langs:
  - csharp
  - vb
  name: TranslationMemory
  nameWithType: IInputTranslationMemory.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TranslationMemory
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets the legacy translation memory which this input translation memory represents.\n"
  syntax:
    content: ILegacyTranslationMemory TranslationMemory { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemory
    content.vb: ReadOnly Property TranslationMemory As ILegacyTranslationMemory
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TranslationMemory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.Setup
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.Setup
  id: Setup
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory
  langs:
  - csharp
  - vb
  name: Setup
  nameWithType: IInputTranslationMemory.Setup
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.Setup
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets the setup information from the legacy translation memory. This information is initially retrieved\nthrough <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemory.GetSetup\" data-throw-if-not-resolved=\"false\"></xref> and then cached for easy access throughout the migration process.\n"
  syntax:
    content: ILegacyTranslationMemorySetup Setup { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
    content.vb: ReadOnly Property Setup As ILegacyTranslationMemorySetup
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.Setup*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFilePath
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFilePath
  id: TmxFilePath
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory
  langs:
  - csharp
  - vb
  name: TmxFilePath
  nameWithType: IInputTranslationMemory.TmxFilePath
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFilePath
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets or sets the absolute TMX file path to which to export the legacy translation memory&apos;s content.\n"
  remarks: Setting this property will update the <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFileStatus" data-throw-if-not-resolved="false"></xref> property, depending on whether the file exists.
  syntax:
    content: string TmxFilePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property TmxFilePath As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFilePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when setting this property to null or an empty string.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Thrown when attempting to set this property if \nthe legacy translation memory is a <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ITmxLegacyTranslationMemory\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFileStatus
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFileStatus
  id: TmxFileStatus
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory
  langs:
  - csharp
  - vb
  name: TmxFileStatus
  nameWithType: IInputTranslationMemory.TmxFileStatus
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFileStatus
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nGets the status of the TMX export file specified in <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFilePath\" data-throw-if-not-resolved=\"false\"></xref>. A call to <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.ExportTmxFile(System.EventHandler%7bSdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs%7d)\" data-throw-if-not-resolved=\"false\"></xref> will update the value\nof this property.\n"
  syntax:
    content: TmxFileStatus TmxFileStatus { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.TmxFileStatus
    content.vb: ReadOnly Property TmxFileStatus As TmxFileStatus
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFileStatus*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.ExportTmxFile*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.ExportTmxFile
  isExternal: true
  name: ExportTmxFile
  nameWithType: IInputTranslationMemory.ExportTmxFile
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.ExportTmxFile
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: true
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs}
  commentId: T:System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<BatchExportedEventArgs>
  nameWithType: EventHandler<BatchExportedEventArgs>
  fullName: System.EventHandler<Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs>
  nameWithType.vb: EventHandler(Of BatchExportedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs)
  name.vb: EventHandler(Of BatchExportedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs
    name: BatchExportedEventArgs
    nameWithType: BatchExportedEventArgs
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs
    name: BatchExportedEventArgs
    nameWithType: BatchExportedEventArgs
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.BatchExportedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TranslationMemory*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TranslationMemory
  isExternal: true
  name: TranslationMemory
  nameWithType: IInputTranslationMemory.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TranslationMemory
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemory
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemory
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: ILegacyTranslationMemory
  nameWithType: ILegacyTranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemory
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.Setup*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.Setup
  isExternal: true
  name: Setup
  nameWithType: IInputTranslationMemory.Setup
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.Setup
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: ILegacyTranslationMemorySetup
  nameWithType: ILegacyTranslationMemorySetup
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ILegacyTranslationMemorySetup
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFilePath*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFilePath
  isExternal: true
  name: TmxFilePath
  nameWithType: IInputTranslationMemory.TmxFilePath
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFilePath
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFileStatus*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFileStatus
  isExternal: true
  name: TmxFileStatus
  nameWithType: IInputTranslationMemory.TmxFileStatus
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemory.TmxFileStatus
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.TmxFileStatus
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.TmxFileStatus
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: TmxFileStatus
  nameWithType: TmxFileStatus
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.TmxFileStatus
