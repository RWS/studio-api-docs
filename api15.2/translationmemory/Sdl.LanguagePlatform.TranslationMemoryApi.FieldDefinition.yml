### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  id: FieldDefinition
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor
  - Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor(Sdl.LanguagePlatform.TranslationMemory.Field,System.Boolean)
  - Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  - Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType,System.String[])
  - Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Clone
  - Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.CreateValue
  - Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Id
  - Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.IsNewObject
  - Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.IsPicklist
  - Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.MaximumNameLength
  - Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.MaximumTextFieldValueLength
  - Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Name
  - Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.PicklistItemNames
  - Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.PicklistItems
  - Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.ValueType
  langs:
  - csharp
  - vb
  name: FieldDefinition
  nameWithType: FieldDefinition
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nRepresents a custom field that can be associated with a translation memory or a fields template and for which values (<xref href=\"Sdl.LanguagePlatform.TranslationMemory.FieldValue\" data-throw-if-not-resolved=\"false\"></xref>)\ncan be associated with translation units in a translation memory (see <xref href=\"Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FieldValues\" data-throw-if-not-resolved=\"false\"></xref>). These field values can subsequently be used in filter \nexpressions (see <xref href=\"Sdl.LanguagePlatform.TranslationMemory.FilterExpression\" data-throw-if-not-resolved=\"false\"></xref>) when searching or updating translation units.\n"
  syntax:
    content: 'public class FieldDefinition : IField, INotifyPropertyChanged'
    content.vb: >-
      Public Class FieldDefinition
          Implements IField, INotifyPropertyChanged
  inheritance:
  - System.Object
  implements:
  - Sdl.LanguagePlatform.TranslationMemory.IField
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.MaximumNameLength
  commentId: F:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.MaximumNameLength
  id: MaximumNameLength
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  langs:
  - csharp
  - vb
  name: MaximumNameLength
  nameWithType: FieldDefinition.MaximumNameLength
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.MaximumNameLength
  type: Field
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nThe maximum length of a field name.\n"
  syntax:
    content: public static readonly int MaximumNameLength
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly MaximumNameLength As Integer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.MaximumTextFieldValueLength
  commentId: F:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.MaximumTextFieldValueLength
  id: MaximumTextFieldValueLength
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  langs:
  - csharp
  - vb
  name: MaximumTextFieldValueLength
  nameWithType: FieldDefinition.MaximumTextFieldValueLength
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.MaximumTextFieldValueLength
  type: Field
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nThe maximum length of a text field value.\n"
  syntax:
    content: public static readonly int MaximumTextFieldValueLength
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly MaximumTextFieldValueLength As Integer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  langs:
  - csharp
  - vb
  name: FieldDefinition()
  nameWithType: FieldDefinition.FieldDefinition()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.FieldDefinition()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCreates a new empty field definition.\n"
  remarks: >-
    In order to add the new field to a translation memory or fields template, add it to the corresponding fields collection (<xref href="Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory.FieldDefinitions" data-throw-if-not-resolved="false"></xref>

    or <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedFieldsTemplate.FieldDefinitions" data-throw-if-not-resolved="false"></xref>) and save the translation memory or fields template to persist the change (<xref href="Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory.Save" data-throw-if-not-resolved="false"></xref> or <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedFieldsTemplate.Save" data-throw-if-not-resolved="false"></xref>)
  syntax:
    content: public FieldDefinition()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  id: '#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  langs:
  - csharp
  - vb
  name: FieldDefinition(String, FieldValueType)
  nameWithType: FieldDefinition.FieldDefinition(String, FieldValueType)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.FieldDefinition(System.String, Sdl.LanguagePlatform.TranslationMemory.FieldValueType)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCreates a new field definition with the specified name and value type.\n"
  remarks: >-
    In order to add the new field to a translation memory or fields template, add it to the corresponding fields collection (<xref href="Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory.FieldDefinitions" data-throw-if-not-resolved="false"></xref>

    or <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedFieldsTemplate.FieldDefinitions" data-throw-if-not-resolved="false"></xref>) and save the translation memory or fields template to persist the change (<xref href="Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory.Save" data-throw-if-not-resolved="false"></xref> or <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedFieldsTemplate.Save" data-throw-if-not-resolved="false"></xref>)
  syntax:
    content: public FieldDefinition(string name, FieldValueType valueType)
    parameters:
    - id: name
      type: System.String
      description: The name of the field.
    - id: valueType
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
      description: The type of value this field can hold.
    content.vb: Public Sub New(name As String, valueType As FieldValueType)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType,System.String[])
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType,System.String[])
  id: '#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType,System.String[])'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  langs:
  - csharp
  - vb
  name: FieldDefinition(String, FieldValueType, String[])
  nameWithType: FieldDefinition.FieldDefinition(String, FieldValueType, String[])
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.FieldDefinition(System.String, Sdl.LanguagePlatform.TranslationMemory.FieldValueType, System.String[])
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCreates a new picklist field definition with the specified name and value type.\n"
  remarks: >-
    In order to add the new field to a translation memory or fields template, add it to the corresponding fields collection (<xref href="Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory.FieldDefinitions" data-throw-if-not-resolved="false"></xref>

    or <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedFieldsTemplate.FieldDefinitions" data-throw-if-not-resolved="false"></xref>) and save the translation memory or fields template to persist the change (<xref href="Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemory.Save" data-throw-if-not-resolved="false"></xref> or <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedFieldsTemplate.Save" data-throw-if-not-resolved="false"></xref>)
  syntax:
    content: public FieldDefinition(string name, FieldValueType valueType, string[] picklistItems)
    parameters:
    - id: name
      type: System.String
      description: The name of the field.
    - id: valueType
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
      description: >-
        The type of value this field can hold. This has to be <xref href="Sdl.LanguagePlatform.TranslationMemory.FieldValueType.SinglePicklist" data-throw-if-not-resolved="false"></xref>

        or <xref href="Sdl.LanguagePlatform.TranslationMemory.FieldValueType.MultiplePicklist" data-throw-if-not-resolved="false"></xref>.
    - id: picklistItems
      type: System.String[]
      description: An array of picklist values.
    content.vb: Public Sub New(name As String, valueType As FieldValueType, picklistItems As String())
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      Thrown if <code data-dev-comment-type="paramref" class="paramref">valueType</code> is not <xref href="Sdl.LanguagePlatform.TranslationMemory.FieldValueType.SinglePicklist" data-throw-if-not-resolved="false"></xref>

      or <xref href="Sdl.LanguagePlatform.TranslationMemory.FieldValueType.MultiplePicklist" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: FieldDefinition.FieldDefinition(String, FieldValueType, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.FieldDefinition(System.String, Sdl.LanguagePlatform.TranslationMemory.FieldValueType, System.String())
  name.vb: FieldDefinition(String, FieldValueType, String())
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor(Sdl.LanguagePlatform.TranslationMemory.Field,System.Boolean)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor(Sdl.LanguagePlatform.TranslationMemory.Field,System.Boolean)
  id: '#ctor(Sdl.LanguagePlatform.TranslationMemory.Field,System.Boolean)'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  langs:
  - csharp
  - vb
  name: FieldDefinition(Field, Boolean)
  nameWithType: FieldDefinition.FieldDefinition(Field, Boolean)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.FieldDefinition(Sdl.LanguagePlatform.TranslationMemory.Field, System.Boolean)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nInitializes a new instance of the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public FieldDefinition(Field field, bool isReadOnly)
    parameters:
    - id: field
      type: Sdl.LanguagePlatform.TranslationMemory.Field
      description: The field.
    - id: isReadOnly
      type: System.Boolean
      description: if set to <code>true</code> [is read only].
    content.vb: Public Sub New(field As Field, isReadOnly As Boolean)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Clone
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Clone
  id: Clone
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: FieldDefinition.Clone()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Clone()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCreates a deep copy of this field definition.\n"
  remarks: 'The field definition returned '
  syntax:
    content: public FieldDefinition Clone()
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
      description: A copy of this field definition.
    content.vb: Public Function Clone As FieldDefinition
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.CreateValue
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.CreateValue
  id: CreateValue
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  langs:
  - csharp
  - vb
  name: CreateValue()
  nameWithType: FieldDefinition.CreateValue()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.CreateValue()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCreates a FieldValue instance, with the same name and type as this field declaration.\n"
  syntax:
    content: public FieldValue CreateValue()
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValue
      description: >-
        A <xref href="Sdl.LanguagePlatform.TranslationMemory.FieldValue" data-throw-if-not-resolved="false"></xref> instance which is compatible with this field

        declaration.
    content.vb: Public Function CreateValue As FieldValue
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.CreateValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Name
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Name
  id: Name
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FieldDefinition.Name
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Name
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the name of the field.\n"
  remarks: >-
    Note that you have to save the translation memory of the fields template to persist the change after setting this property, depending on whether

    the field belongs to a translation memory or a fields template.
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Name*
  implements:
  - Sdl.LanguagePlatform.TranslationMemory.IField.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.ValueType
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.ValueType
  id: ValueType
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  langs:
  - csharp
  - vb
  name: ValueType
  nameWithType: FieldDefinition.ValueType
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.ValueType
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the type of value that can be associated with this field.\n"
  syntax:
    content: public FieldValueType ValueType { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
    content.vb: Public Property ValueType As FieldValueType
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.ValueType*
  implements:
  - Sdl.LanguagePlatform.TranslationMemory.IField.ValueType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.PicklistItemNames
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.PicklistItemNames
  id: PicklistItemNames
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  langs:
  - csharp
  - vb
  name: PicklistItemNames
  nameWithType: FieldDefinition.PicklistItemNames
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.PicklistItemNames
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  syntax:
    content: public IList<string> PicklistItemNames { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public ReadOnly Property PicklistItemNames As IList(Of String)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.PicklistItemNames*
  implements:
  - Sdl.LanguagePlatform.TranslationMemory.IField.PicklistItemNames
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.PicklistItems
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.PicklistItems
  id: PicklistItems
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  langs:
  - csharp
  - vb
  name: PicklistItems
  nameWithType: FieldDefinition.PicklistItems
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.PicklistItems
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets the picklist items representing the possible values for the field, in case this field is of type <xref href=\"Sdl.LanguagePlatform.TranslationMemory.FieldValueType.SinglePicklist\" data-throw-if-not-resolved=\"false\"></xref>\nor <xref href=\"Sdl.LanguagePlatform.TranslationMemory.FieldValueType.MultiplePicklist\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "Note that you have to save the translation memory of the fields template to persist the change after adding or removing picklist items, \ndepending on whether the field belongs to a translation memory or a fields template."
  syntax:
    content: public PicklistItemDefinitionCollection PicklistItems { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.PicklistItemDefinitionCollection
    content.vb: Public ReadOnly Property PicklistItems As PicklistItemDefinitionCollection
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.PicklistItems*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: >-
      Thrown when trying to access this property for a field that is not of type <xref href="Sdl.LanguagePlatform.TranslationMemory.FieldValueType.SinglePicklist" data-throw-if-not-resolved="false"></xref>

      or <xref href="Sdl.LanguagePlatform.TranslationMemory.FieldValueType.MultiplePicklist" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.IsNewObject
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.IsNewObject
  id: IsNewObject
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  langs:
  - csharp
  - vb
  name: IsNewObject
  nameWithType: FieldDefinition.IsNewObject
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.IsNewObject
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a value indicating whether this instance is new object.\n"
  syntax:
    content: public bool IsNewObject { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is new object; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsNewObject As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.IsNewObject*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Id
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Id
  id: Id
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: FieldDefinition.Id
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Id
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a unique Id for this field definition.\n"
  syntax:
    content: public Guid Id { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public ReadOnly Property Id As Guid
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.IsPicklist
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.IsPicklist
  id: IsPicklist
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  langs:
  - csharp
  - vb
  name: IsPicklist
  nameWithType: FieldDefinition.IsPicklist
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.IsPicklist
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a value indicating whether this instance is picklist.\n"
  syntax:
    content: public bool IsPicklist { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is picklist; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsPicklist As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.IsPicklist*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.LanguagePlatform.TranslationMemory.IField
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.IField
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: IField
  nameWithType: IField
  fullName: Sdl.LanguagePlatform.TranslationMemory.IField
- uid: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.#ctor
  isExternal: true
  name: FieldDefinition
  nameWithType: FieldDefinition.FieldDefinition
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.FieldDefinition
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldValueType
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldValueType
  nameWithType: FieldValueType
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValueType
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.LanguagePlatform.TranslationMemory.Field
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.Field
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Field
  nameWithType: Field
  fullName: Sdl.LanguagePlatform.TranslationMemory.Field
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Clone*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Clone
  isExternal: true
  name: Clone
  nameWithType: FieldDefinition.Clone
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Clone
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: FieldDefinition
  nameWithType: FieldDefinition
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.CreateValue*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.CreateValue
  isExternal: true
  name: CreateValue
  nameWithType: FieldDefinition.CreateValue
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.CreateValue
- uid: Sdl.LanguagePlatform.TranslationMemory.FieldValue
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FieldValue
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FieldValue
  nameWithType: FieldValue
  fullName: Sdl.LanguagePlatform.TranslationMemory.FieldValue
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Name*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Name
  isExternal: true
  name: Name
  nameWithType: FieldDefinition.Name
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Name
- uid: Sdl.LanguagePlatform.TranslationMemory.IField.Name
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.IField.Name
  parent: Sdl.LanguagePlatform.TranslationMemory.IField
  isExternal: true
  name: Name
  nameWithType: IField.Name
  fullName: Sdl.LanguagePlatform.TranslationMemory.IField.Name
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.ValueType*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.ValueType
  isExternal: true
  name: ValueType
  nameWithType: FieldDefinition.ValueType
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.ValueType
- uid: Sdl.LanguagePlatform.TranslationMemory.IField.ValueType
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.IField.ValueType
  parent: Sdl.LanguagePlatform.TranslationMemory.IField
  isExternal: true
  name: ValueType
  nameWithType: IField.ValueType
  fullName: Sdl.LanguagePlatform.TranslationMemory.IField.ValueType
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.PicklistItemNames*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.PicklistItemNames
  isExternal: true
  name: PicklistItemNames
  nameWithType: FieldDefinition.PicklistItemNames
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.PicklistItemNames
- uid: Sdl.LanguagePlatform.TranslationMemory.IField.PicklistItemNames
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.IField.PicklistItemNames
  parent: Sdl.LanguagePlatform.TranslationMemory.IField
  isExternal: true
  name: PicklistItemNames
  nameWithType: IField.PicklistItemNames
  fullName: Sdl.LanguagePlatform.TranslationMemory.IField.PicklistItemNames
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.PicklistItems*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.PicklistItems
  isExternal: true
  name: PicklistItems
  nameWithType: FieldDefinition.PicklistItems
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.PicklistItems
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: true
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.PicklistItemDefinitionCollection
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.PicklistItemDefinitionCollection
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: PicklistItemDefinitionCollection
  nameWithType: PicklistItemDefinitionCollection
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.PicklistItemDefinitionCollection
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.IsNewObject*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.IsNewObject
  isExternal: true
  name: IsNewObject
  nameWithType: FieldDefinition.IsNewObject
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.IsNewObject
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Id*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Id
  isExternal: true
  name: Id
  nameWithType: FieldDefinition.Id
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.Id
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.IsPicklist*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.IsPicklist
  isExternal: true
  name: IsPicklist
  nameWithType: FieldDefinition.IsPicklist
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.FieldDefinition.IsPicklist
