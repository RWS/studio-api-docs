### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext
  commentId: T:Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext
  id: TokenizationContext
  parent: Sdl.LanguagePlatform.Core.Tokenization
  children:
  - Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.#ctor(System.Globalization.CultureInfo,System.Collections.Generic.Dictionary{Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType,System.Collections.Generic.List{System.String}},System.Collections.Generic.List{Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination},System.Collections.Generic.Dictionary{System.String,Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition},System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat})
  - Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.Culture
  - Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.CurrencyFormats
  - Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.DateTimeFormats
  - Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.SeparatorCombinations
  - Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.UnitDefinitions
  langs:
  - csharp
  - vb
  name: TokenizationContext
  nameWithType: TokenizationContext
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext
  type: Class
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public class TokenizationContext
    content.vb: Public Class TokenizationContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.#ctor(System.Globalization.CultureInfo,System.Collections.Generic.Dictionary{Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType,System.Collections.Generic.List{System.String}},System.Collections.Generic.List{Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination},System.Collections.Generic.Dictionary{System.String,Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition},System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat})
  commentId: M:Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.#ctor(System.Globalization.CultureInfo,System.Collections.Generic.Dictionary{Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType,System.Collections.Generic.List{System.String}},System.Collections.Generic.List{Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination},System.Collections.Generic.Dictionary{System.String,Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition},System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat})
  id: '#ctor(System.Globalization.CultureInfo,System.Collections.Generic.Dictionary{Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType,System.Collections.Generic.List{System.String}},System.Collections.Generic.List{Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination},System.Collections.Generic.Dictionary{System.String,Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition},System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat})'
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext
  langs:
  - csharp
  - vb
  name: TokenizationContext(CultureInfo, Dictionary<DateTimePatternType, List<String>>, List<SeparatorCombination>, Dictionary<String, CustomUnitDefinition>, List<CurrencyFormat>)
  nameWithType: TokenizationContext.TokenizationContext(CultureInfo, Dictionary<DateTimePatternType, List<String>>, List<SeparatorCombination>, Dictionary<String, CustomUnitDefinition>, List<CurrencyFormat>)
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.TokenizationContext(System.Globalization.CultureInfo, System.Collections.Generic.Dictionary<Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType, System.Collections.Generic.List<System.String>>, System.Collections.Generic.List<Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination>, System.Collections.Generic.Dictionary<System.String, Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition>, System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat>)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public TokenizationContext(CultureInfo culture, Dictionary<DateTimePatternType, List<string>> dateTimeFormats, List<SeparatorCombination> separatorCombinations, Dictionary<string, CustomUnitDefinition> unitDefinitions, List<CurrencyFormat> currencyFormats)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
    - id: dateTimeFormats
      type: System.Collections.Generic.Dictionary{Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType,System.Collections.Generic.List{System.String}}
    - id: separatorCombinations
      type: System.Collections.Generic.List{Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination}
    - id: unitDefinitions
      type: System.Collections.Generic.Dictionary{System.String,Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition}
    - id: currencyFormats
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat}
    content.vb: Public Sub New(culture As CultureInfo, dateTimeFormats As Dictionary(Of DateTimePatternType, List(Of String)), separatorCombinations As List(Of SeparatorCombination), unitDefinitions As Dictionary(Of String, CustomUnitDefinition), currencyFormats As List(Of CurrencyFormat))
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.#ctor*
  nameWithType.vb: TokenizationContext.TokenizationContext(CultureInfo, Dictionary(Of DateTimePatternType, List(Of String)), List(Of SeparatorCombination), Dictionary(Of String, CustomUnitDefinition), List(Of CurrencyFormat))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.TokenizationContext(System.Globalization.CultureInfo, System.Collections.Generic.Dictionary(Of Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType, System.Collections.Generic.List(Of System.String)), System.Collections.Generic.List(Of Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination), System.Collections.Generic.Dictionary(Of System.String, Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition), System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat))
  name.vb: TokenizationContext(CultureInfo, Dictionary(Of DateTimePatternType, List(Of String)), List(Of SeparatorCombination), Dictionary(Of String, CustomUnitDefinition), List(Of CurrencyFormat))
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.Culture
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.Culture
  id: Culture
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext
  langs:
  - csharp
  - vb
  name: Culture
  nameWithType: TokenizationContext.Culture
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.Culture
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public CultureInfo Culture { get; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
    content.vb: Public ReadOnly Property Culture As CultureInfo
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.Culture*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.DateTimeFormats
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.DateTimeFormats
  id: DateTimeFormats
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext
  langs:
  - csharp
  - vb
  name: DateTimeFormats
  nameWithType: TokenizationContext.DateTimeFormats
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.DateTimeFormats
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public Dictionary<DateTimePatternType, List<string>> DateTimeFormats { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType,System.Collections.Generic.List{System.String}}
    content.vb: Public ReadOnly Property DateTimeFormats As Dictionary(Of DateTimePatternType, List(Of String))
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.DateTimeFormats*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.SeparatorCombinations
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.SeparatorCombinations
  id: SeparatorCombinations
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext
  langs:
  - csharp
  - vb
  name: SeparatorCombinations
  nameWithType: TokenizationContext.SeparatorCombinations
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.SeparatorCombinations
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public List<SeparatorCombination> SeparatorCombinations { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination}
    content.vb: Public ReadOnly Property SeparatorCombinations As List(Of SeparatorCombination)
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.SeparatorCombinations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.UnitDefinitions
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.UnitDefinitions
  id: UnitDefinitions
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext
  langs:
  - csharp
  - vb
  name: UnitDefinitions
  nameWithType: TokenizationContext.UnitDefinitions
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.UnitDefinitions
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public Dictionary<string, CustomUnitDefinition> UnitDefinitions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition}
    content.vb: Public ReadOnly Property UnitDefinitions As Dictionary(Of String, CustomUnitDefinition)
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.UnitDefinitions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.CurrencyFormats
  commentId: P:Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.CurrencyFormats
  id: CurrencyFormats
  parent: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext
  langs:
  - csharp
  - vb
  name: CurrencyFormats
  nameWithType: TokenizationContext.CurrencyFormats
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.CurrencyFormats
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core.Tokenization
  syntax:
    content: public List<CurrencyFormat> CurrencyFormats { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat}
    content.vb: Public ReadOnly Property CurrencyFormats As List(Of CurrencyFormat)
  overload: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.CurrencyFormats*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.Core.Tokenization
  commentId: N:Sdl.LanguagePlatform.Core.Tokenization
  isExternal: true
  name: Sdl.LanguagePlatform.Core.Tokenization
  nameWithType: Sdl.LanguagePlatform.Core.Tokenization
  fullName: Sdl.LanguagePlatform.Core.Tokenization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.#ctor
  isExternal: true
  name: TokenizationContext
  nameWithType: TokenizationContext.TokenizationContext
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.TokenizationContext
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Collections.Generic.Dictionary{Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType,System.Collections.Generic.List{System.String}}
  commentId: T:System.Collections.Generic.Dictionary{Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType,System.Collections.Generic.List{System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<DateTimePatternType, List<String>>
  nameWithType: Dictionary<DateTimePatternType, List<String>>
  fullName: System.Collections.Generic.Dictionary<Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType, System.Collections.Generic.List<System.String>>
  nameWithType.vb: Dictionary(Of DateTimePatternType, List(Of String))
  fullName.vb: System.Collections.Generic.Dictionary(Of Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType, System.Collections.Generic.List(Of System.String))
  name.vb: Dictionary(Of DateTimePatternType, List(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType
    name: DateTimePatternType
    nameWithType: DateTimePatternType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType
    name: DateTimePatternType
    nameWithType: DateTimePatternType
    fullName: Sdl.LanguagePlatform.Core.Tokenization.DateTimePatternType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination}
  commentId: T:System.Collections.Generic.List{Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SeparatorCombination>
  nameWithType: List<SeparatorCombination>
  fullName: System.Collections.Generic.List<Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination>
  nameWithType.vb: List(Of SeparatorCombination)
  fullName.vb: System.Collections.Generic.List(Of Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination)
  name.vb: List(Of SeparatorCombination)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination
    name: SeparatorCombination
    nameWithType: SeparatorCombination
    fullName: Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination
    name: SeparatorCombination
    nameWithType: SeparatorCombination
    fullName: Sdl.Core.LanguageProcessing.Tokenization.SeparatorCombination
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, CustomUnitDefinition>
  nameWithType: Dictionary<String, CustomUnitDefinition>
  fullName: System.Collections.Generic.Dictionary<System.String, Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition>
  nameWithType.vb: Dictionary(Of String, CustomUnitDefinition)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition)
  name.vb: Dictionary(Of String, CustomUnitDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition
    name: CustomUnitDefinition
    nameWithType: CustomUnitDefinition
    fullName: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition
    name: CustomUnitDefinition
    nameWithType: CustomUnitDefinition
    fullName: Sdl.LanguagePlatform.Core.Tokenization.CustomUnitDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<CurrencyFormat>
  nameWithType: List<CurrencyFormat>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat>
  nameWithType.vb: List(Of CurrencyFormat)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat)
  name.vb: List(Of CurrencyFormat)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat
    name: CurrencyFormat
    nameWithType: CurrencyFormat
    fullName: Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat
    name: CurrencyFormat
    nameWithType: CurrencyFormat
    fullName: Sdl.LanguagePlatform.Core.Tokenization.CurrencyFormat
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.Culture*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.Culture
  isExternal: true
  name: Culture
  nameWithType: TokenizationContext.Culture
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.Culture
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.DateTimeFormats*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.DateTimeFormats
  isExternal: true
  name: DateTimeFormats
  nameWithType: TokenizationContext.DateTimeFormats
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.DateTimeFormats
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.SeparatorCombinations*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.SeparatorCombinations
  isExternal: true
  name: SeparatorCombinations
  nameWithType: TokenizationContext.SeparatorCombinations
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.SeparatorCombinations
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.UnitDefinitions*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.UnitDefinitions
  isExternal: true
  name: UnitDefinitions
  nameWithType: TokenizationContext.UnitDefinitions
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.UnitDefinitions
- uid: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.CurrencyFormats*
  commentId: Overload:Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.CurrencyFormats
  isExternal: true
  name: CurrencyFormats
  nameWithType: TokenizationContext.CurrencyFormats
  fullName: Sdl.LanguagePlatform.Core.Tokenization.TokenizationContext.CurrencyFormats
