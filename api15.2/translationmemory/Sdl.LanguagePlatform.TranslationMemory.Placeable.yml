### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.Placeable
  id: Placeable
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor(Sdl.LanguagePlatform.TranslationMemory.PlaceableType,System.Int32,System.Int32)
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals(System.Object)
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.GetHashCode
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTag
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTagCompatible(Sdl.LanguagePlatform.Core.TagType)
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.SourceTokenIndex
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.TargetTokenIndex
  - Sdl.LanguagePlatform.TranslationMemory.Placeable.Type
  langs:
  - csharp
  - vb
  name: Placeable
  nameWithType: Placeable
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public class Placeable
    content.vb: Public Class Placeable
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: Placeable()
  nameWithType: Placeable.Placeable()
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.Placeable()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public Placeable()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor(Sdl.LanguagePlatform.TranslationMemory.PlaceableType,System.Int32,System.Int32)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor(Sdl.LanguagePlatform.TranslationMemory.PlaceableType,System.Int32,System.Int32)
  id: '#ctor(Sdl.LanguagePlatform.TranslationMemory.PlaceableType,System.Int32,System.Int32)'
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: Placeable(PlaceableType, Int32, Int32)
  nameWithType: Placeable.Placeable(PlaceableType, Int32, Int32)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.Placeable(Sdl.LanguagePlatform.TranslationMemory.PlaceableType, System.Int32, System.Int32)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public Placeable(PlaceableType t, int sourceTokenIndex, int targetTokenIndex)
    parameters:
    - id: t
      type: Sdl.LanguagePlatform.TranslationMemory.PlaceableType
    - id: sourceTokenIndex
      type: System.Int32
    - id: targetTokenIndex
      type: System.Int32
    content.vb: Public Sub New(t As PlaceableType, sourceTokenIndex As Integer, targetTokenIndex As Integer)
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals(System.Object)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Placeable.Equals(Object)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals(System.Object)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.GetHashCode
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Placeable.GetHashCode
  id: GetHashCode
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Placeable.GetHashCode()
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.GetHashCode()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTagCompatible(Sdl.LanguagePlatform.Core.TagType)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTagCompatible(Sdl.LanguagePlatform.Core.TagType)
  id: IsTagCompatible(Sdl.LanguagePlatform.Core.TagType)
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: IsTagCompatible(TagType)
  nameWithType: Placeable.IsTagCompatible(TagType)
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTagCompatible(Sdl.LanguagePlatform.Core.TagType)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public bool IsTagCompatible(TagType tagType)
    parameters:
    - id: tagType
      type: Sdl.LanguagePlatform.Core.TagType
    return:
      type: System.Boolean
    content.vb: Public Function IsTagCompatible(tagType As TagType) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTagCompatible*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.SourceTokenIndex
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.Placeable.SourceTokenIndex
  id: SourceTokenIndex
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: SourceTokenIndex
  nameWithType: Placeable.SourceTokenIndex
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.SourceTokenIndex
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public int SourceTokenIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SourceTokenIndex As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.SourceTokenIndex*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.TargetTokenIndex
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.Placeable.TargetTokenIndex
  id: TargetTokenIndex
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: TargetTokenIndex
  nameWithType: Placeable.TargetTokenIndex
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.TargetTokenIndex
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public int TargetTokenIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TargetTokenIndex As Integer
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.TargetTokenIndex*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.Type
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.Placeable.Type
  id: Type
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Placeable.Type
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.Type
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public PlaceableType Type { get; set; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.PlaceableType
    content.vb: Public Property Type As PlaceableType
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTag
  commentId: P:Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTag
  id: IsTag
  parent: Sdl.LanguagePlatform.TranslationMemory.Placeable
  langs:
  - csharp
  - vb
  name: IsTag
  nameWithType: Placeable.IsTag
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTag
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public bool IsTag { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTag As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTag*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor
  isExternal: true
  name: Placeable
  nameWithType: Placeable.Placeable
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.Placeable
- uid: Sdl.LanguagePlatform.TranslationMemory.PlaceableType
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.PlaceableType
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: PlaceableType
  nameWithType: PlaceableType
  fullName: Sdl.LanguagePlatform.TranslationMemory.PlaceableType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals
  isExternal: true
  name: Equals
  nameWithType: Placeable.Equals
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.GetHashCode*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Placeable.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: Placeable.GetHashCode
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.GetHashCode
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTagCompatible*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTagCompatible
  isExternal: true
  name: IsTagCompatible
  nameWithType: Placeable.IsTagCompatible
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTagCompatible
- uid: Sdl.LanguagePlatform.Core.TagType
  commentId: T:Sdl.LanguagePlatform.Core.TagType
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: TagType
  nameWithType: TagType
  fullName: Sdl.LanguagePlatform.Core.TagType
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.SourceTokenIndex*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Placeable.SourceTokenIndex
  isExternal: true
  name: SourceTokenIndex
  nameWithType: Placeable.SourceTokenIndex
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.SourceTokenIndex
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.TargetTokenIndex*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Placeable.TargetTokenIndex
  isExternal: true
  name: TargetTokenIndex
  nameWithType: Placeable.TargetTokenIndex
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.TargetTokenIndex
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.Type*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Placeable.Type
  isExternal: true
  name: Type
  nameWithType: Placeable.Type
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.Type
- uid: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTag*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTag
  isExternal: true
  name: IsTag
  nameWithType: Placeable.IsTag
  fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTag
