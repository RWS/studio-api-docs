### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory
  id: ITranslationProviderFactory
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.CreateTranslationProvider(System.Uri,System.String,Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore)
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.GetTranslationProviderInfo(System.Uri,System.String)
  - Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.SupportsTranslationProviderUri(System.Uri)
  langs:
  - csharp
  - vb
  name: ITranslationProviderFactory
  nameWithType: ITranslationProviderFactory
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory
  type: Interface
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nThis interface defines a Translation Provider Factory class that can be used as a plug-in based \non the Sdl.Core.PluginFramework Extensions API\n"
  remarks: "\n<p>Implementations of this class should be marked up with a <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderFactoryAttribute\" data-throw-if-not-resolved=\"false\"></xref>\nextension attribute in order for the factory to be available.</p>\n"
  syntax:
    content: public interface ITranslationProviderFactory
    content.vb: Public Interface ITranslationProviderFactory
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.SupportsTranslationProviderUri(System.Uri)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.SupportsTranslationProviderUri(System.Uri)
  id: SupportsTranslationProviderUri(System.Uri)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory
  langs:
  - csharp
  - vb
  name: SupportsTranslationProviderUri(Uri)
  nameWithType: ITranslationProviderFactory.SupportsTranslationProviderUri(Uri)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.SupportsTranslationProviderUri(System.Uri)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nReturns true if this factory supports the specified URI.\n"
  syntax:
    content: bool SupportsTranslationProviderUri(Uri translationProviderUri)
    parameters:
    - id: translationProviderUri
      type: System.Uri
      description: The Uri.
    return:
      type: System.Boolean
      description: True if this factory supports the specified URI.
    content.vb: Function SupportsTranslationProviderUri(translationProviderUri As Uri) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.SupportsTranslationProviderUri*
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.CreateTranslationProvider(System.Uri,System.String,Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.CreateTranslationProvider(System.Uri,System.String,Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore)
  id: CreateTranslationProvider(System.Uri,System.String,Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory
  langs:
  - csharp
  - vb
  name: CreateTranslationProvider(Uri, String, ITranslationProviderCredentialStore)
  nameWithType: ITranslationProviderFactory.CreateTranslationProvider(Uri, String, ITranslationProviderCredentialStore)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.CreateTranslationProvider(System.Uri, System.String, Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCreates an instance of the translation provider defined by the specified URI.\n"
  syntax:
    content: ITranslationProvider CreateTranslationProvider(Uri translationProviderUri, string translationProviderState, ITranslationProviderCredentialStore credentialStore)
    parameters:
    - id: translationProviderUri
      type: System.Uri
      description: A URI that identifies the translation provider to create.
    - id: translationProviderState
      type: System.String
      description: "Serialized state information that should be used for \nconfiguring the translation provider. This is typically state information that was previously saved \nby calling <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SerializeState\" data-throw-if-not-resolved=\"false\"></xref>."
    - id: credentialStore
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore
      description: "A credential store object that can be used to retrieve credentials \nrequired for this translation provider. "
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
      description: A new translation provider object, ready to be used.
    content.vb: Function CreateTranslationProvider(translationProviderUri As Uri, translationProviderState As String, credentialStore As ITranslationProviderCredentialStore) As ITranslationProvider
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.CreateTranslationProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Thrown if <code data-dev-comment-type=\"paramref\" class=\"paramref\">translationProviderUri</code>, <code data-dev-comment-type=\"paramref\" class=\"paramref\">translationProviderState</code> or <code data-dev-comment-type=\"paramref\" class=\"paramref\">credentialStore</code> \nis null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code data-dev-comment-type="paramref" class="paramref">translationProviderUri</code> is not supported by this factory.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code data-dev-comment-type="paramref" class="paramref">translationProviderState</code> is invalid.
  - type: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderAuthenticationException
    commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderAuthenticationException
    description: Thrown when no appropriate credentials are available in the credential store.
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.GetTranslationProviderInfo(System.Uri,System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.GetTranslationProviderInfo(System.Uri,System.String)
  id: GetTranslationProviderInfo(System.Uri,System.String)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory
  langs:
  - csharp
  - vb
  name: GetTranslationProviderInfo(Uri, String)
  nameWithType: ITranslationProviderFactory.GetTranslationProviderInfo(Uri, String)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.GetTranslationProviderInfo(System.Uri, System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets general information for the specified translation provider.\n"
  remarks: >-
    Note that this method can potentially be called very frequently so it is not advisable to instantiate the

    translation provider within its implementation.
  syntax:
    content: TranslationProviderInfo GetTranslationProviderInfo(Uri translationProviderUri, string translationProviderState)
    parameters:
    - id: translationProviderUri
      type: System.Uri
      description: A translation provider URI, representing the translation provider.
    - id: translationProviderState
      type: System.String
      description: "Optional translation provider state information, which can be used to determine \ncertain aspects of the general information."
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderInfo
      description: >-
        A <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderInfo" data-throw-if-not-resolved="false"></xref> object, containing general information that allows

        an application to query the translation provider without having to instantiate it.
    content.vb: Function GetTranslationProviderInfo(translationProviderUri As Uri, translationProviderState As String) As TranslationProviderInfo
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.GetTranslationProviderInfo*
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.SupportsTranslationProviderUri*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.SupportsTranslationProviderUri
  isExternal: true
  name: SupportsTranslationProviderUri
  nameWithType: ITranslationProviderFactory.SupportsTranslationProviderUri
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.SupportsTranslationProviderUri
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.CreateTranslationProvider*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.CreateTranslationProvider
  isExternal: true
  name: CreateTranslationProvider
  nameWithType: ITranslationProviderFactory.CreateTranslationProvider
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.CreateTranslationProvider
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderAuthenticationException
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderAuthenticationException
  isExternal: true
  name: TranslationProviderAuthenticationException
  nameWithType: TranslationProviderAuthenticationException
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderAuthenticationException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: ITranslationProviderCredentialStore
  nameWithType: ITranslationProviderCredentialStore
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: ITranslationProvider
  nameWithType: ITranslationProvider
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.GetTranslationProviderInfo*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.GetTranslationProviderInfo
  isExternal: true
  name: GetTranslationProviderInfo
  nameWithType: ITranslationProviderFactory.GetTranslationProviderInfo
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory.GetTranslationProviderInfo
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderInfo
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderInfo
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: TranslationProviderInfo
  nameWithType: TranslationProviderInfo
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderInfo
