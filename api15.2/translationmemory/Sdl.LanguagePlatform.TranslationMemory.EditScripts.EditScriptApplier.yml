### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier
  id: EditScriptApplier
  parent: Sdl.LanguagePlatform.TranslationMemory.EditScripts
  children:
  - Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.#ctor
  - Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  - Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript,System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit})
  - Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript,System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit},Sdl.LanguagePlatform.TranslationMemory.FilterExpression)
  langs:
  - csharp
  - vb
  name: EditScriptApplier
  nameWithType: EditScriptApplier
  fullName: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory.EditScripts
  syntax:
    content: public class EditScriptApplier
    content.vb: Public Class EditScriptApplier
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  id: Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  parent: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier
  langs:
  - csharp
  - vb
  name: Apply(EditScript, TranslationUnit)
  nameWithType: EditScriptApplier.Apply(EditScript, TranslationUnit)
  fullName: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript, Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory.EditScripts
  syntax:
    content: public static bool Apply(EditScript script, TranslationUnit tu)
    parameters:
    - id: script
      type: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript
    - id: tu
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    return:
      type: System.Boolean
    content.vb: Public Shared Function Apply(script As EditScript, tu As TranslationUnit) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript,System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit})
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript,System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit})
  id: Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript,System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit})
  parent: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier
  langs:
  - csharp
  - vb
  name: Apply(EditScript, IList<TranslationUnit>)
  nameWithType: EditScriptApplier.Apply(EditScript, IList<TranslationUnit>)
  fullName: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript, System.Collections.Generic.IList<Sdl.LanguagePlatform.TranslationMemory.TranslationUnit>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory.EditScripts
  syntax:
    content: public static List<bool> Apply(EditScript script, IList<TranslationUnit> tus)
    parameters:
    - id: script
      type: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript
    - id: tus
      type: System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit}
    return:
      type: System.Collections.Generic.List{System.Boolean}
    content.vb: Public Shared Function Apply(script As EditScript, tus As IList(Of TranslationUnit)) As List(Of Boolean)
  overload: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply*
  nameWithType.vb: EditScriptApplier.Apply(EditScript, IList(Of TranslationUnit))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript, System.Collections.Generic.IList(Of Sdl.LanguagePlatform.TranslationMemory.TranslationUnit))
  name.vb: Apply(EditScript, IList(Of TranslationUnit))
- uid: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript,System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit},Sdl.LanguagePlatform.TranslationMemory.FilterExpression)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript,System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit},Sdl.LanguagePlatform.TranslationMemory.FilterExpression)
  id: Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript,System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit},Sdl.LanguagePlatform.TranslationMemory.FilterExpression)
  parent: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier
  langs:
  - csharp
  - vb
  name: Apply(EditScript, IList<TranslationUnit>, FilterExpression)
  nameWithType: EditScriptApplier.Apply(EditScript, IList<TranslationUnit>, FilterExpression)
  fullName: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript, System.Collections.Generic.IList<Sdl.LanguagePlatform.TranslationMemory.TranslationUnit>, Sdl.LanguagePlatform.TranslationMemory.FilterExpression)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory.EditScripts
  syntax:
    content: public static List<bool> Apply(EditScript script, IList<TranslationUnit> tus, FilterExpression filter)
    parameters:
    - id: script
      type: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript
    - id: tus
      type: System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit}
    - id: filter
      type: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
    return:
      type: System.Collections.Generic.List{System.Boolean}
    content.vb: Public Shared Function Apply(script As EditScript, tus As IList(Of TranslationUnit), filter As FilterExpression) As List(Of Boolean)
  overload: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply*
  nameWithType.vb: EditScriptApplier.Apply(EditScript, IList(Of TranslationUnit), FilterExpression)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript, System.Collections.Generic.IList(Of Sdl.LanguagePlatform.TranslationMemory.TranslationUnit), Sdl.LanguagePlatform.TranslationMemory.FilterExpression)
  name.vb: Apply(EditScript, IList(Of TranslationUnit), FilterExpression)
- uid: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier
  langs:
  - csharp
  - vb
  name: EditScriptApplier()
  nameWithType: EditScriptApplier.EditScriptApplier()
  fullName: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.EditScriptApplier()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory.EditScripts
  syntax:
    content: public EditScriptApplier()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemory.EditScripts
  commentId: N:Sdl.LanguagePlatform.TranslationMemory.EditScripts
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory.EditScripts
  nameWithType: Sdl.LanguagePlatform.TranslationMemory.EditScripts
  fullName: Sdl.LanguagePlatform.TranslationMemory.EditScripts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply
  isExternal: true
  name: Apply
  nameWithType: EditScriptApplier.Apply
  fullName: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply
- uid: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript
  parent: Sdl.LanguagePlatform.TranslationMemory.EditScripts
  isExternal: true
  name: EditScript
  nameWithType: EditScript
  fullName: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: TranslationUnit
  nameWithType: TranslationUnit
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit}
  commentId: T:System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TranslationUnit>
  nameWithType: IList<TranslationUnit>
  fullName: System.Collections.Generic.IList<Sdl.LanguagePlatform.TranslationMemory.TranslationUnit>
  nameWithType.vb: IList(Of TranslationUnit)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  name.vb: IList(Of TranslationUnit)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    name: TranslationUnit
    nameWithType: TranslationUnit
    fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.Boolean}
  commentId: T:System.Collections.Generic.List{System.Boolean}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Boolean>
  nameWithType: List<Boolean>
  fullName: System.Collections.Generic.List<System.Boolean>
  nameWithType.vb: List(Of Boolean)
  fullName.vb: System.Collections.Generic.List(Of System.Boolean)
  name.vb: List(Of Boolean)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.FilterExpression
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: FilterExpression
  nameWithType: FilterExpression
  fullName: Sdl.LanguagePlatform.TranslationMemory.FilterExpression
- uid: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.#ctor
  isExternal: true
  name: EditScriptApplier
  nameWithType: EditScriptApplier.EditScriptApplier
  fullName: Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.EditScriptApplier
