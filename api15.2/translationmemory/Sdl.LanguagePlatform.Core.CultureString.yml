### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.Core.CultureString
  commentId: T:Sdl.LanguagePlatform.Core.CultureString
  id: CultureString
  parent: Sdl.LanguagePlatform.Core
  children:
  - Sdl.LanguagePlatform.Core.CultureString.#ctor
  - Sdl.LanguagePlatform.Core.CultureString.#ctor(Sdl.LanguagePlatform.Core.CultureString)
  - Sdl.LanguagePlatform.Core.CultureString.#ctor(System.Globalization.CultureInfo,System.String)
  - Sdl.LanguagePlatform.Core.CultureString.Clone
  - Sdl.LanguagePlatform.Core.CultureString.Culture
  - Sdl.LanguagePlatform.Core.CultureString.CultureName
  - Sdl.LanguagePlatform.Core.CultureString.Text
  langs:
  - csharp
  - vb
  name: CultureString
  nameWithType: CultureString
  fullName: Sdl.LanguagePlatform.Core.CultureString
  type: Class
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: 'public class CultureString : ICloneable'
    content.vb: >-
      Public Class CultureString
          Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.Core.CultureString.#ctor
  commentId: M:Sdl.LanguagePlatform.Core.CultureString.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.Core.CultureString
  langs:
  - csharp
  - vb
  name: CultureString()
  nameWithType: CultureString.CultureString()
  fullName: Sdl.LanguagePlatform.Core.CultureString.CultureString()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public CultureString()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.Core.CultureString.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.CultureString.#ctor(System.Globalization.CultureInfo,System.String)
  commentId: M:Sdl.LanguagePlatform.Core.CultureString.#ctor(System.Globalization.CultureInfo,System.String)
  id: '#ctor(System.Globalization.CultureInfo,System.String)'
  parent: Sdl.LanguagePlatform.Core.CultureString
  langs:
  - csharp
  - vb
  name: CultureString(CultureInfo, String)
  nameWithType: CultureString.CultureString(CultureInfo, String)
  fullName: Sdl.LanguagePlatform.Core.CultureString.CultureString(System.Globalization.CultureInfo, System.String)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public CultureString(CultureInfo culture, string text)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
    - id: text
      type: System.String
    content.vb: Public Sub New(culture As CultureInfo, text As String)
  overload: Sdl.LanguagePlatform.Core.CultureString.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.CultureString.#ctor(Sdl.LanguagePlatform.Core.CultureString)
  commentId: M:Sdl.LanguagePlatform.Core.CultureString.#ctor(Sdl.LanguagePlatform.Core.CultureString)
  id: '#ctor(Sdl.LanguagePlatform.Core.CultureString)'
  parent: Sdl.LanguagePlatform.Core.CultureString
  langs:
  - csharp
  - vb
  name: CultureString(CultureString)
  nameWithType: CultureString.CultureString(CultureString)
  fullName: Sdl.LanguagePlatform.Core.CultureString.CultureString(Sdl.LanguagePlatform.Core.CultureString)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public CultureString(CultureString other)
    parameters:
    - id: other
      type: Sdl.LanguagePlatform.Core.CultureString
    content.vb: Public Sub New(other As CultureString)
  overload: Sdl.LanguagePlatform.Core.CultureString.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.CultureString.Clone
  commentId: M:Sdl.LanguagePlatform.Core.CultureString.Clone
  id: Clone
  parent: Sdl.LanguagePlatform.Core.CultureString
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: CultureString.Clone()
  fullName: Sdl.LanguagePlatform.Core.CultureString.Clone()
  type: Method
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public object Clone()
    return:
      type: System.Object
    content.vb: Public Function Clone As Object
  overload: Sdl.LanguagePlatform.Core.CultureString.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.CultureString.Culture
  commentId: P:Sdl.LanguagePlatform.Core.CultureString.Culture
  id: Culture
  parent: Sdl.LanguagePlatform.Core.CultureString
  langs:
  - csharp
  - vb
  name: Culture
  nameWithType: CultureString.Culture
  fullName: Sdl.LanguagePlatform.Core.CultureString.Culture
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public CultureInfo Culture { get; set; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
    content.vb: Public Property Culture As CultureInfo
  overload: Sdl.LanguagePlatform.Core.CultureString.Culture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.CultureString.CultureName
  commentId: P:Sdl.LanguagePlatform.Core.CultureString.CultureName
  id: CultureName
  parent: Sdl.LanguagePlatform.Core.CultureString
  langs:
  - csharp
  - vb
  name: CultureName
  nameWithType: CultureString.CultureName
  fullName: Sdl.LanguagePlatform.Core.CultureString.CultureName
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public string CultureName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CultureName As String
  overload: Sdl.LanguagePlatform.Core.CultureString.CultureName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.Core.CultureString.Text
  commentId: P:Sdl.LanguagePlatform.Core.CultureString.Text
  id: Text
  parent: Sdl.LanguagePlatform.Core.CultureString
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: CultureString.Text
  fullName: Sdl.LanguagePlatform.Core.CultureString.Text
  type: Property
  source:
    path: Sdl.LanguagePlatform.Core
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.Core
  namespace: Sdl.LanguagePlatform.Core
  syntax:
    content: public string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Text As String
  overload: Sdl.LanguagePlatform.Core.CultureString.Text*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.Core.CultureString.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.Core.CultureString.#ctor
  isExternal: true
  name: CultureString
  nameWithType: CultureString.CultureString
  fullName: Sdl.LanguagePlatform.Core.CultureString.CultureString
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Sdl.LanguagePlatform.Core.CultureString
  commentId: T:Sdl.LanguagePlatform.Core.CultureString
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: CultureString
  nameWithType: CultureString
  fullName: Sdl.LanguagePlatform.Core.CultureString
- uid: Sdl.LanguagePlatform.Core.CultureString.Clone*
  commentId: Overload:Sdl.LanguagePlatform.Core.CultureString.Clone
  isExternal: true
  name: Clone
  nameWithType: CultureString.Clone
  fullName: Sdl.LanguagePlatform.Core.CultureString.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.Core.CultureString.Culture*
  commentId: Overload:Sdl.LanguagePlatform.Core.CultureString.Culture
  isExternal: true
  name: Culture
  nameWithType: CultureString.Culture
  fullName: Sdl.LanguagePlatform.Core.CultureString.Culture
- uid: Sdl.LanguagePlatform.Core.CultureString.CultureName*
  commentId: Overload:Sdl.LanguagePlatform.Core.CultureString.CultureName
  isExternal: true
  name: CultureName
  nameWithType: CultureString.CultureName
  fullName: Sdl.LanguagePlatform.Core.CultureString.CultureName
- uid: Sdl.LanguagePlatform.Core.CultureString.Text*
  commentId: Overload:Sdl.LanguagePlatform.Core.CultureString.Text
  isExternal: true
  name: Text
  nameWithType: CultureString.Text
  fullName: Sdl.LanguagePlatform.Core.CultureString.Text
