### YamlMime:ManagedReference
items:
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  commentId: T:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  id: IFineGrainedAligner
  parent: Sdl.Core.FineGrainedAlignment
  children:
  - Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.Align(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  - Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.Align(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair},System.Threading.CancellationToken,System.IProgress{System.Int32})
  - Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignEx(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  - Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignEx(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair},System.Threading.CancellationToken,System.IProgress{System.Int32})
  - Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.BulkMode
  - Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  - Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger(System.Action{System.Exception,System.String})
  langs:
  - csharp
  - vb
  name: IFineGrainedAligner
  nameWithType: IFineGrainedAligner
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  type: Interface
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: public interface IFineGrainedAligner
    content.vb: Public Interface IFineGrainedAligner
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.Align(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  commentId: M:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.Align(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  id: Align(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  parent: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  langs:
  - csharp
  - vb
  name: Align(IEnumerable<IAlignableContentPair>)
  nameWithType: IFineGrainedAligner.Align(IEnumerable<IAlignableContentPair>)
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.Align(System.Collections.Generic.IEnumerable<Sdl.Core.FineGrainedAlignment.IAlignableContentPair>)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: bool Align(IEnumerable<IAlignableContentPair> pairs)
    parameters:
    - id: pairs
      type: System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair}
    return:
      type: System.Boolean
    content.vb: Function Align(pairs As IEnumerable(Of IAlignableContentPair)) As Boolean
  overload: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.Align*
  nameWithType.vb: IFineGrainedAligner.Align(IEnumerable(Of IAlignableContentPair))
  fullName.vb: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.Align(System.Collections.Generic.IEnumerable(Of Sdl.Core.FineGrainedAlignment.IAlignableContentPair))
  name.vb: Align(IEnumerable(Of IAlignableContentPair))
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.Align(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair},System.Threading.CancellationToken,System.IProgress{System.Int32})
  commentId: M:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.Align(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair},System.Threading.CancellationToken,System.IProgress{System.Int32})
  id: Align(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair},System.Threading.CancellationToken,System.IProgress{System.Int32})
  parent: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  langs:
  - csharp
  - vb
  name: Align(IEnumerable<IAlignableContentPair>, CancellationToken, IProgress<Int32>)
  nameWithType: IFineGrainedAligner.Align(IEnumerable<IAlignableContentPair>, CancellationToken, IProgress<Int32>)
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.Align(System.Collections.Generic.IEnumerable<Sdl.Core.FineGrainedAlignment.IAlignableContentPair>, System.Threading.CancellationToken, System.IProgress<System.Int32>)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: bool Align(IEnumerable<IAlignableContentPair> pairs, CancellationToken token, IProgress<int> progress)
    parameters:
    - id: pairs
      type: System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair}
    - id: token
      type: System.Threading.CancellationToken
    - id: progress
      type: System.IProgress{System.Int32}
    return:
      type: System.Boolean
    content.vb: Function Align(pairs As IEnumerable(Of IAlignableContentPair), token As CancellationToken, progress As IProgress(Of Integer)) As Boolean
  overload: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.Align*
  nameWithType.vb: IFineGrainedAligner.Align(IEnumerable(Of IAlignableContentPair), CancellationToken, IProgress(Of Int32))
  fullName.vb: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.Align(System.Collections.Generic.IEnumerable(Of Sdl.Core.FineGrainedAlignment.IAlignableContentPair), System.Threading.CancellationToken, System.IProgress(Of System.Int32))
  name.vb: Align(IEnumerable(Of IAlignableContentPair), CancellationToken, IProgress(Of Int32))
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignEx(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  commentId: M:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignEx(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  id: AlignEx(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  parent: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  langs:
  - csharp
  - vb
  name: AlignEx(IEnumerable<IAlignableContentPair>)
  nameWithType: IFineGrainedAligner.AlignEx(IEnumerable<IAlignableContentPair>)
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignEx(System.Collections.Generic.IEnumerable<Sdl.Core.FineGrainedAlignment.IAlignableContentPair>)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: AlignResult[] AlignEx(IEnumerable<IAlignableContentPair> pairs)
    parameters:
    - id: pairs
      type: System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair}
    return:
      type: Sdl.Core.FineGrainedAlignment.AlignResult[]
    content.vb: Function AlignEx(pairs As IEnumerable(Of IAlignableContentPair)) As AlignResult()
  overload: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignEx*
  nameWithType.vb: IFineGrainedAligner.AlignEx(IEnumerable(Of IAlignableContentPair))
  fullName.vb: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignEx(System.Collections.Generic.IEnumerable(Of Sdl.Core.FineGrainedAlignment.IAlignableContentPair))
  name.vb: AlignEx(IEnumerable(Of IAlignableContentPair))
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignEx(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair},System.Threading.CancellationToken,System.IProgress{System.Int32})
  commentId: M:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignEx(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair},System.Threading.CancellationToken,System.IProgress{System.Int32})
  id: AlignEx(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair},System.Threading.CancellationToken,System.IProgress{System.Int32})
  parent: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  langs:
  - csharp
  - vb
  name: AlignEx(IEnumerable<IAlignableContentPair>, CancellationToken, IProgress<Int32>)
  nameWithType: IFineGrainedAligner.AlignEx(IEnumerable<IAlignableContentPair>, CancellationToken, IProgress<Int32>)
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignEx(System.Collections.Generic.IEnumerable<Sdl.Core.FineGrainedAlignment.IAlignableContentPair>, System.Threading.CancellationToken, System.IProgress<System.Int32>)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: AlignResult[] AlignEx(IEnumerable<IAlignableContentPair> pairs, CancellationToken token, IProgress<int> progress)
    parameters:
    - id: pairs
      type: System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair}
    - id: token
      type: System.Threading.CancellationToken
    - id: progress
      type: System.IProgress{System.Int32}
    return:
      type: Sdl.Core.FineGrainedAlignment.AlignResult[]
    content.vb: Function AlignEx(pairs As IEnumerable(Of IAlignableContentPair), token As CancellationToken, progress As IProgress(Of Integer)) As AlignResult()
  overload: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignEx*
  nameWithType.vb: IFineGrainedAligner.AlignEx(IEnumerable(Of IAlignableContentPair), CancellationToken, IProgress(Of Int32))
  fullName.vb: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignEx(System.Collections.Generic.IEnumerable(Of Sdl.Core.FineGrainedAlignment.IAlignableContentPair), System.Threading.CancellationToken, System.IProgress(Of System.Int32))
  name.vb: AlignEx(IEnumerable(Of IAlignableContentPair), CancellationToken, IProgress(Of Int32))
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  commentId: M:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  id: CanAlign(System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair})
  parent: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  langs:
  - csharp
  - vb
  name: CanAlign(IEnumerable<IAlignableContentPair>)
  nameWithType: IFineGrainedAligner.CanAlign(IEnumerable<IAlignableContentPair>)
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign(System.Collections.Generic.IEnumerable<Sdl.Core.FineGrainedAlignment.IAlignableContentPair>)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: bool[] CanAlign(IEnumerable<IAlignableContentPair> pairs)
    parameters:
    - id: pairs
      type: System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair}
    return:
      type: System.Boolean[]
    content.vb: Function CanAlign(pairs As IEnumerable(Of IAlignableContentPair)) As Boolean()
  overload: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign*
  nameWithType.vb: IFineGrainedAligner.CanAlign(IEnumerable(Of IAlignableContentPair))
  fullName.vb: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign(System.Collections.Generic.IEnumerable(Of Sdl.Core.FineGrainedAlignment.IAlignableContentPair))
  name.vb: CanAlign(IEnumerable(Of IAlignableContentPair))
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger(System.Action{System.Exception,System.String})
  commentId: M:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger(System.Action{System.Exception,System.String})
  id: SetErrorLogger(System.Action{System.Exception,System.String})
  parent: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  langs:
  - csharp
  - vb
  name: SetErrorLogger(Action<Exception, String>)
  nameWithType: IFineGrainedAligner.SetErrorLogger(Action<Exception, String>)
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger(System.Action<System.Exception, System.String>)
  type: Method
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: void SetErrorLogger(Action<Exception, string> logger)
    parameters:
    - id: logger
      type: System.Action{System.Exception,System.String}
    content.vb: Sub SetErrorLogger(logger As Action(Of Exception, String))
  overload: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger*
  nameWithType.vb: IFineGrainedAligner.SetErrorLogger(Action(Of Exception, String))
  fullName.vb: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger(System.Action(Of System.Exception, System.String))
  name.vb: SetErrorLogger(Action(Of Exception, String))
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.BulkMode
  commentId: P:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.BulkMode
  id: BulkMode
  parent: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner
  langs:
  - csharp
  - vb
  name: BulkMode
  nameWithType: IFineGrainedAligner.BulkMode
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.BulkMode
  type: Property
  source:
    path: Sdl.Core.FineGrainedAlignment
    isExternal: true
  assemblies:
  - Sdl.Core.FineGrainedAlignment
  namespace: Sdl.Core.FineGrainedAlignment
  syntax:
    content: bool BulkMode { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property BulkMode As Boolean
  overload: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.BulkMode*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.Core.FineGrainedAlignment
  commentId: N:Sdl.Core.FineGrainedAlignment
  isExternal: true
  name: Sdl.Core.FineGrainedAlignment
  nameWithType: Sdl.Core.FineGrainedAlignment
  fullName: Sdl.Core.FineGrainedAlignment
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.Align*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.Align
  isExternal: true
  name: Align
  nameWithType: IFineGrainedAligner.Align
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.Align
- uid: System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.Core.FineGrainedAlignment.IAlignableContentPair}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IAlignableContentPair>
  nameWithType: IEnumerable<IAlignableContentPair>
  fullName: System.Collections.Generic.IEnumerable<Sdl.Core.FineGrainedAlignment.IAlignableContentPair>
  nameWithType.vb: IEnumerable(Of IAlignableContentPair)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.Core.FineGrainedAlignment.IAlignableContentPair)
  name.vb: IEnumerable(Of IAlignableContentPair)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Core.FineGrainedAlignment.IAlignableContentPair
    name: IAlignableContentPair
    nameWithType: IAlignableContentPair
    fullName: Sdl.Core.FineGrainedAlignment.IAlignableContentPair
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Core.FineGrainedAlignment.IAlignableContentPair
    name: IAlignableContentPair
    nameWithType: IAlignableContentPair
    fullName: Sdl.Core.FineGrainedAlignment.IAlignableContentPair
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.IProgress{System.Int32}
  commentId: T:System.IProgress{System.Int32}
  parent: System
  definition: System.IProgress`1
  name: IProgress<Int32>
  nameWithType: IProgress<Int32>
  fullName: System.IProgress<System.Int32>
  nameWithType.vb: IProgress(Of Int32)
  fullName.vb: System.IProgress(Of System.Int32)
  name.vb: IProgress(Of Int32)
  spec.csharp:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.IProgress`1
  commentId: T:System.IProgress`1
  isExternal: true
  name: IProgress<T>
  nameWithType: IProgress<T>
  fullName: System.IProgress<T>
  nameWithType.vb: IProgress(Of T)
  fullName.vb: System.IProgress(Of T)
  name.vb: IProgress(Of T)
  spec.csharp:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignEx*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignEx
  isExternal: true
  name: AlignEx
  nameWithType: IFineGrainedAligner.AlignEx
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.AlignEx
- uid: Sdl.Core.FineGrainedAlignment.AlignResult[]
  isExternal: true
  name: AlignResult[]
  nameWithType: AlignResult[]
  fullName: Sdl.Core.FineGrainedAlignment.AlignResult[]
  nameWithType.vb: AlignResult()
  fullName.vb: Sdl.Core.FineGrainedAlignment.AlignResult()
  name.vb: AlignResult()
  spec.csharp:
  - uid: Sdl.Core.FineGrainedAlignment.AlignResult
    name: AlignResult
    nameWithType: AlignResult
    fullName: Sdl.Core.FineGrainedAlignment.AlignResult
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.Core.FineGrainedAlignment.AlignResult
    name: AlignResult
    nameWithType: AlignResult
    fullName: Sdl.Core.FineGrainedAlignment.AlignResult
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign
  isExternal: true
  name: CanAlign
  nameWithType: IFineGrainedAligner.CanAlign
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.CanAlign
- uid: System.Boolean[]
  isExternal: true
  name: Boolean[]
  nameWithType: Boolean[]
  fullName: System.Boolean[]
  nameWithType.vb: Boolean()
  fullName.vb: System.Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger
  isExternal: true
  name: SetErrorLogger
  nameWithType: IFineGrainedAligner.SetErrorLogger
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.SetErrorLogger
- uid: System.Action{System.Exception,System.String}
  commentId: T:System.Action{System.Exception,System.String}
  parent: System
  definition: System.Action`2
  name: Action<Exception, String>
  nameWithType: Action<Exception, String>
  fullName: System.Action<System.Exception, System.String>
  nameWithType.vb: Action(Of Exception, String)
  fullName.vb: System.Action(Of System.Exception, System.String)
  name.vb: Action(Of Exception, String)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.BulkMode*
  commentId: Overload:Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.BulkMode
  isExternal: true
  name: BulkMode
  nameWithType: IFineGrainedAligner.BulkMode
  fullName: Sdl.Core.FineGrainedAlignment.IFineGrainedAligner.BulkMode
