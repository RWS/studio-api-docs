### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer
  id: PlaceableComputer
  parent: Sdl.LanguagePlatform.TranslationMemory
  children:
  - Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ComputePlaceables(Sdl.LanguagePlatform.Core.Segment,Sdl.LanguagePlatform.Core.Segment)
  - Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ComputePlaceables(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  - Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ConvertPlaceablesToAlignments(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable},Sdl.Core.FineGrainedAlignment.Core.LiftAlignedSpanPairSet,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token})
  langs:
  - csharp
  - vb
  name: PlaceableComputer
  nameWithType: PlaceableComputer
  fullName: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public static class PlaceableComputer
    content.vb: Public Module PlaceableComputer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ComputePlaceables(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ComputePlaceables(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  id: ComputePlaceables(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  parent: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer
  langs:
  - csharp
  - vb
  name: ComputePlaceables(TranslationUnit)
  nameWithType: PlaceableComputer.ComputePlaceables(TranslationUnit)
  fullName: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ComputePlaceables(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public static List<Placeable> ComputePlaceables(TranslationUnit tu)
    parameters:
    - id: tu
      type: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
    return:
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable}
    content.vb: Public Shared Function ComputePlaceables(tu As TranslationUnit) As List(Of Placeable)
  overload: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ComputePlaceables*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ComputePlaceables(Sdl.LanguagePlatform.Core.Segment,Sdl.LanguagePlatform.Core.Segment)
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ComputePlaceables(Sdl.LanguagePlatform.Core.Segment,Sdl.LanguagePlatform.Core.Segment)
  id: ComputePlaceables(Sdl.LanguagePlatform.Core.Segment,Sdl.LanguagePlatform.Core.Segment)
  parent: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer
  langs:
  - csharp
  - vb
  name: ComputePlaceables(Segment, Segment)
  nameWithType: PlaceableComputer.ComputePlaceables(Segment, Segment)
  fullName: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ComputePlaceables(Sdl.LanguagePlatform.Core.Segment, Sdl.LanguagePlatform.Core.Segment)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public static List<Placeable> ComputePlaceables(Segment srcSegment, Segment trgSegment)
    parameters:
    - id: srcSegment
      type: Sdl.LanguagePlatform.Core.Segment
    - id: trgSegment
      type: Sdl.LanguagePlatform.Core.Segment
    return:
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable}
    content.vb: Public Shared Function ComputePlaceables(srcSegment As Segment, trgSegment As Segment) As List(Of Placeable)
  overload: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ComputePlaceables*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ConvertPlaceablesToAlignments(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable},Sdl.Core.FineGrainedAlignment.Core.LiftAlignedSpanPairSet,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token})
  commentId: M:Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ConvertPlaceablesToAlignments(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable},Sdl.Core.FineGrainedAlignment.Core.LiftAlignedSpanPairSet,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token})
  id: ConvertPlaceablesToAlignments(System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable},Sdl.Core.FineGrainedAlignment.Core.LiftAlignedSpanPairSet,System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token},System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token})
  parent: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer
  langs:
  - csharp
  - vb
  name: ConvertPlaceablesToAlignments(List<Placeable>, LiftAlignedSpanPairSet, List<Token>, List<Token>)
  nameWithType: PlaceableComputer.ConvertPlaceablesToAlignments(List<Placeable>, LiftAlignedSpanPairSet, List<Token>, List<Token>)
  fullName: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ConvertPlaceablesToAlignments(System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemory.Placeable>, Sdl.Core.FineGrainedAlignment.Core.LiftAlignedSpanPairSet, System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Tokenization.Token>, System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Tokenization.Token>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemory
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemory
  namespace: Sdl.LanguagePlatform.TranslationMemory
  syntax:
    content: public static void ConvertPlaceablesToAlignments(List<Placeable> placeables, LiftAlignedSpanPairSet alignmentData, List<Token> sourceTokens, List<Token> targetTokens)
    parameters:
    - id: placeables
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable}
    - id: alignmentData
      type: Sdl.Core.FineGrainedAlignment.Core.LiftAlignedSpanPairSet
    - id: sourceTokens
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token}
    - id: targetTokens
      type: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token}
    content.vb: Public Shared Sub ConvertPlaceablesToAlignments(placeables As List(Of Placeable), alignmentData As LiftAlignedSpanPairSet, sourceTokens As List(Of Token), targetTokens As List(Of Token))
  overload: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ConvertPlaceablesToAlignments*
  nameWithType.vb: PlaceableComputer.ConvertPlaceablesToAlignments(List(Of Placeable), LiftAlignedSpanPairSet, List(Of Token), List(Of Token))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ConvertPlaceablesToAlignments(System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemory.Placeable), Sdl.Core.FineGrainedAlignment.Core.LiftAlignedSpanPairSet, System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Tokenization.Token), System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Tokenization.Token))
  name.vb: ConvertPlaceablesToAlignments(List(Of Placeable), LiftAlignedSpanPairSet, List(Of Token), List(Of Token))
references:
- uid: Sdl.LanguagePlatform.TranslationMemory
  commentId: N:Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemory
  nameWithType: Sdl.LanguagePlatform.TranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ComputePlaceables*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ComputePlaceables
  isExternal: true
  name: ComputePlaceables
  nameWithType: PlaceableComputer.ComputePlaceables
  fullName: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ComputePlaceables
- uid: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  commentId: T:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
  parent: Sdl.LanguagePlatform.TranslationMemory
  isExternal: true
  name: TranslationUnit
  nameWithType: TranslationUnit
  fullName: Sdl.LanguagePlatform.TranslationMemory.TranslationUnit
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.TranslationMemory.Placeable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Placeable>
  nameWithType: List<Placeable>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.TranslationMemory.Placeable>
  nameWithType.vb: List(Of Placeable)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.TranslationMemory.Placeable)
  name.vb: List(Of Placeable)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemory.Placeable
    name: Placeable
    nameWithType: Placeable
    fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemory.Placeable
    name: Placeable
    nameWithType: Placeable
    fullName: Sdl.LanguagePlatform.TranslationMemory.Placeable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.LanguagePlatform.Core.Segment
  commentId: T:Sdl.LanguagePlatform.Core.Segment
  parent: Sdl.LanguagePlatform.Core
  isExternal: true
  name: Segment
  nameWithType: Segment
  fullName: Sdl.LanguagePlatform.Core.Segment
- uid: Sdl.LanguagePlatform.Core
  commentId: N:Sdl.LanguagePlatform.Core
  isExternal: true
  name: Sdl.LanguagePlatform.Core
  nameWithType: Sdl.LanguagePlatform.Core
  fullName: Sdl.LanguagePlatform.Core
- uid: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ConvertPlaceablesToAlignments*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ConvertPlaceablesToAlignments
  isExternal: true
  name: ConvertPlaceablesToAlignments
  nameWithType: PlaceableComputer.ConvertPlaceablesToAlignments
  fullName: Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ConvertPlaceablesToAlignments
- uid: Sdl.Core.FineGrainedAlignment.Core.LiftAlignedSpanPairSet
  isExternal: true
  name: LiftAlignedSpanPairSet
  nameWithType: LiftAlignedSpanPairSet
  fullName: Sdl.Core.FineGrainedAlignment.Core.LiftAlignedSpanPairSet
- uid: System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token}
  commentId: T:System.Collections.Generic.List{Sdl.LanguagePlatform.Core.Tokenization.Token}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Token>
  nameWithType: List<Token>
  fullName: System.Collections.Generic.List<Sdl.LanguagePlatform.Core.Tokenization.Token>
  nameWithType.vb: List(Of Token)
  fullName.vb: System.Collections.Generic.List(Of Sdl.LanguagePlatform.Core.Tokenization.Token)
  name.vb: List(Of Token)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token
    name: Token
    nameWithType: Token
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.Core.Tokenization.Token
    name: Token
    nameWithType: Token
    fullName: Sdl.LanguagePlatform.Core.Tokenization.Token
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
