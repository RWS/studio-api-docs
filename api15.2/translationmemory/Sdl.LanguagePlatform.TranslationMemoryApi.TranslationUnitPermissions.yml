### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions
  id: TranslationUnitPermissions
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.BatchDeleteTU
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.BatchEditTU
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.DeleteTU
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.ExportTU
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.ImportTU
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.ReadTU
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.ReindexTU
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.WriteTU
  langs:
  - csharp
  - vb
  name: TranslationUnitPermissions
  nameWithType: TranslationUnitPermissions
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nTranslation unit permissions.\n"
  syntax:
    content: public static class TranslationUnitPermissions
    content.vb: Public Module TranslationUnitPermissions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.WriteTU
  commentId: F:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.WriteTU
  id: WriteTU
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions
  langs:
  - csharp
  - vb
  name: WriteTU
  nameWithType: TranslationUnitPermissions.WriteTU
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.WriteTU
  type: Field
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nUser can add or update TUs\n"
  syntax:
    content: public const string WriteTU = "tm.writetu"
    return:
      type: System.String
    content.vb: Public Const WriteTU As String = "tm.writetu"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.ReadTU
  commentId: F:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.ReadTU
  id: ReadTU
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions
  langs:
  - csharp
  - vb
  name: ReadTU
  nameWithType: TranslationUnitPermissions.ReadTU
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.ReadTU
  type: Field
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nUser can read TUs\n"
  syntax:
    content: public const string ReadTU = "tm.readtu"
    return:
      type: System.String
    content.vb: Public Const ReadTU As String = "tm.readtu"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.DeleteTU
  commentId: F:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.DeleteTU
  id: DeleteTU
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions
  langs:
  - csharp
  - vb
  name: DeleteTU
  nameWithType: TranslationUnitPermissions.DeleteTU
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.DeleteTU
  type: Field
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nUser can delete TUs\n"
  syntax:
    content: public const string DeleteTU = "tm.deletetu"
    return:
      type: System.String
    content.vb: Public Const DeleteTU As String = "tm.deletetu"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.BatchEditTU
  commentId: F:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.BatchEditTU
  id: BatchEditTU
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions
  langs:
  - csharp
  - vb
  name: BatchEditTU
  nameWithType: TranslationUnitPermissions.BatchEditTU
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.BatchEditTU
  type: Field
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCan apply a batch edit script to modify some or all TUs in the TM\n"
  syntax:
    content: public const string BatchEditTU = "tm.batchedittu"
    return:
      type: System.String
    content.vb: Public Const BatchEditTU As String = "tm.batchedittu"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.BatchDeleteTU
  commentId: F:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.BatchDeleteTU
  id: BatchDeleteTU
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions
  langs:
  - csharp
  - vb
  name: BatchDeleteTU
  nameWithType: TranslationUnitPermissions.BatchDeleteTU
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.BatchDeleteTU
  type: Field
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCan apply a batch delete script to delete all TUs in the TM matching a particular filter expression.\n"
  syntax:
    content: public const string BatchDeleteTU = "tm.batchdeletetu"
    return:
      type: System.String
    content.vb: Public Const BatchDeleteTU As String = "tm.batchdeletetu"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.ImportTU
  commentId: F:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.ImportTU
  id: ImportTU
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions
  langs:
  - csharp
  - vb
  name: ImportTU
  nameWithType: TranslationUnitPermissions.ImportTU
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.ImportTU
  type: Field
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCan import TUs into the TM\n"
  syntax:
    content: public const string ImportTU = "tm.importtu"
    return:
      type: System.String
    content.vb: Public Const ImportTU As String = "tm.importtu"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.ExportTU
  commentId: F:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.ExportTU
  id: ExportTU
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions
  langs:
  - csharp
  - vb
  name: ExportTU
  nameWithType: TranslationUnitPermissions.ExportTU
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.ExportTU
  type: Field
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCan export TUs from the TM\n"
  syntax:
    content: public const string ExportTU = "tm.exporttu"
    return:
      type: System.String
    content.vb: Public Const ExportTU As String = "tm.exporttu"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.ReindexTU
  commentId: F:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.ReindexTU
  id: ReindexTU
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions
  langs:
  - csharp
  - vb
  name: ReindexTU
  nameWithType: TranslationUnitPermissions.ReindexTU
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationUnitPermissions.ReindexTU
  type: Field
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCan export TUs from the TM\n"
  syntax:
    content: public const string ReindexTU = "tm.reindextu"
    return:
      type: System.String
    content.vb: Public Const ReindexTU As String = "tm.reindextu"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
