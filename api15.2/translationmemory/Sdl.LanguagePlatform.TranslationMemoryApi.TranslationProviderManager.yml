### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager
  id: TranslationProviderManager
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.#ctor
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.CreateTranslationProvider(System.Uri,System.String,Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderFactories
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderFactory(System.Uri)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderWinFormsUI(System.Uri)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderWinFormsUIs
  langs:
  - csharp
  - vb
  name: TranslationProviderManager
  nameWithType: TranslationProviderManager
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nThis class exposes functionality to work with translation provider plug-ins (<xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider\" data-throw-if-not-resolved=\"false\"></xref>) in a generic way.\nIt allows creating translation providers in a generic way and also allows creating user interface components to manipulate \ntranslation provider settings (<xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderWinFormsUI\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  syntax:
    content: public class TranslationProviderManager
    content.vb: Public Class TranslationProviderManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager
  langs:
  - csharp
  - vb
  name: TranslationProviderManager()
  nameWithType: TranslationProviderManager.TranslationProviderManager()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.TranslationProviderManager()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nInitializes a new instance of the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public TranslationProviderManager()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.CreateTranslationProvider(System.Uri,System.String,Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.CreateTranslationProvider(System.Uri,System.String,Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore)
  id: CreateTranslationProvider(System.Uri,System.String,Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager
  langs:
  - csharp
  - vb
  name: CreateTranslationProvider(Uri, String, ITranslationProviderCredentialStore)
  nameWithType: TranslationProviderManager.CreateTranslationProvider(Uri, String, ITranslationProviderCredentialStore)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.CreateTranslationProvider(System.Uri, System.String, Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCreates a new translation provider for a given URI by selecting the appropriate factory (<xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  syntax:
    content: public ITranslationProvider CreateTranslationProvider(Uri translationProviderUri, string translationProviderState, ITranslationProviderCredentialStore credentialStore)
    parameters:
    - id: translationProviderUri
      type: System.Uri
      description: A translation provider URI (see <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.Uri" data-throw-if-not-resolved="false"></xref>).
    - id: translationProviderState
      type: System.String
      description: >-
        Serialized state information to be loaded into the translation provider after instantiation

        (see <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.LoadState(System.String)" data-throw-if-not-resolved="false"></xref> and <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider.SerializeState" data-throw-if-not-resolved="false"></xref>).
    - id: credentialStore
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore
      description: "A credential store object, which provides the relevant translation provider factory \nwith the required credentials need to instantiate the translation provider."
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
    content.vb: Public Function CreateTranslationProvider(translationProviderUri As Uri, translationProviderState As String, credentialStore As ITranslationProviderCredentialStore) As ITranslationProvider
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.CreateTranslationProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Thrown if <code data-dev-comment-type=\"paramref\" class=\"paramref\">translationProviderUri</code>, <code data-dev-comment-type=\"paramref\" class=\"paramref\">translationProviderState</code> or <code data-dev-comment-type=\"paramref\" class=\"paramref\">credentialStore</code> \ni null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code data-dev-comment-type="paramref" class="paramref">translationProviderUri</code> is not supported by any of the available factories.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code data-dev-comment-type="paramref" class="paramref">translationProviderState</code> is invalid.
  - type: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderAuthenticationException
    commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderAuthenticationException
    description: "Thrown when no credentials are available and no UI can be shown, or if the credentials provided by the user \nare invalid."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderFactories
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderFactories
  id: GetTranslationProviderFactories
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager
  langs:
  - csharp
  - vb
  name: GetTranslationProviderFactories()
  nameWithType: TranslationProviderManager.GetTranslationProviderFactories()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderFactories()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a list of all available translation provider factories.\n"
  remarks: The factories returned are those that have been registered with the plug-in registry using the <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderFactoryAttribute" data-throw-if-not-resolved="false"></xref> attribute.
  syntax:
    content: public static IList<ITranslationProviderFactory> GetTranslationProviderFactories()
    return:
      type: System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory}
      description: A list of all available translation provider factories.
    content.vb: Public Shared Function GetTranslationProviderFactories As IList(Of ITranslationProviderFactory)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderFactories*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderFactory(System.Uri)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderFactory(System.Uri)
  id: GetTranslationProviderFactory(System.Uri)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager
  langs:
  - csharp
  - vb
  name: GetTranslationProviderFactory(Uri)
  nameWithType: TranslationProviderManager.GetTranslationProviderFactory(Uri)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderFactory(System.Uri)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets the translation provider factory that supports the given translation provider uri.\n"
  syntax:
    content: public static ITranslationProviderFactory GetTranslationProviderFactory(Uri translationProviderUri)
    parameters:
    - id: translationProviderUri
      type: System.Uri
      description: translation provider uri
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory
      description: translation provider factory
    content.vb: Public Shared Function GetTranslationProviderFactory(translationProviderUri As Uri) As ITranslationProviderFactory
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderFactory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderWinFormsUI(System.Uri)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderWinFormsUI(System.Uri)
  id: GetTranslationProviderWinFormsUI(System.Uri)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager
  langs:
  - csharp
  - vb
  name: GetTranslationProviderWinFormsUI(Uri)
  nameWithType: TranslationProviderManager.GetTranslationProviderWinFormsUI(Uri)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderWinFormsUI(System.Uri)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets the translation provider win forms ui that supports the given translation provider uri.\n"
  syntax:
    content: public static ITranslationProviderWinFormsUI GetTranslationProviderWinFormsUI(Uri translationProviderUri)
    parameters:
    - id: translationProviderUri
      type: System.Uri
      description: translation provider uri
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderWinFormsUI
      description: translation provider win forms ui
    content.vb: Public Shared Function GetTranslationProviderWinFormsUI(translationProviderUri As Uri) As ITranslationProviderWinFormsUI
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderWinFormsUI*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderWinFormsUIs
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderWinFormsUIs
  id: GetTranslationProviderWinFormsUIs
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager
  langs:
  - csharp
  - vb
  name: GetTranslationProviderWinFormsUIs()
  nameWithType: TranslationProviderManager.GetTranslationProviderWinFormsUIs()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderWinFormsUIs()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets a list of all available translation provider win form uis.\n"
  remarks: The win form uis returned are those that have been registered with the plug-in registry using the <xref href="Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderWinFormsUiAttribute" data-throw-if-not-resolved="false"></xref> attribute.
  syntax:
    content: public static IList<ITranslationProviderWinFormsUI> GetTranslationProviderWinFormsUIs()
    return:
      type: System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderWinFormsUI}
      description: A list of all available translation provider win form uis.
    content.vb: Public Shared Function GetTranslationProviderWinFormsUIs As IList(Of ITranslationProviderWinFormsUI)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderWinFormsUIs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.#ctor
  isExternal: true
  name: TranslationProviderManager
  nameWithType: TranslationProviderManager.TranslationProviderManager
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.TranslationProviderManager
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.CreateTranslationProvider*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.CreateTranslationProvider
  isExternal: true
  name: CreateTranslationProvider
  nameWithType: TranslationProviderManager.CreateTranslationProvider
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.CreateTranslationProvider
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderAuthenticationException
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderAuthenticationException
  isExternal: true
  name: TranslationProviderAuthenticationException
  nameWithType: TranslationProviderAuthenticationException
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderAuthenticationException
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: ITranslationProviderCredentialStore
  nameWithType: ITranslationProviderCredentialStore
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderCredentialStore
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: ITranslationProvider
  nameWithType: ITranslationProvider
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProvider
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderFactories*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderFactories
  isExternal: true
  name: GetTranslationProviderFactories
  nameWithType: TranslationProviderManager.GetTranslationProviderFactories
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderFactories
- uid: System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory}
  commentId: T:System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ITranslationProviderFactory>
  nameWithType: IList<ITranslationProviderFactory>
  fullName: System.Collections.Generic.IList<Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory>
  nameWithType.vb: IList(Of ITranslationProviderFactory)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory)
  name.vb: IList(Of ITranslationProviderFactory)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory
    name: ITranslationProviderFactory
    nameWithType: ITranslationProviderFactory
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory
    name: ITranslationProviderFactory
    nameWithType: ITranslationProviderFactory
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderFactory*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderFactory
  isExternal: true
  name: GetTranslationProviderFactory
  nameWithType: TranslationProviderManager.GetTranslationProviderFactory
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderFactory
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: ITranslationProviderFactory
  nameWithType: ITranslationProviderFactory
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderFactory
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderWinFormsUI*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderWinFormsUI
  isExternal: true
  name: GetTranslationProviderWinFormsUI
  nameWithType: TranslationProviderManager.GetTranslationProviderWinFormsUI
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderWinFormsUI
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderWinFormsUI
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderWinFormsUI
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: ITranslationProviderWinFormsUI
  nameWithType: ITranslationProviderWinFormsUI
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderWinFormsUI
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderWinFormsUIs*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderWinFormsUIs
  isExternal: true
  name: GetTranslationProviderWinFormsUIs
  nameWithType: TranslationProviderManager.GetTranslationProviderWinFormsUIs
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationProviderManager.GetTranslationProviderWinFormsUIs
- uid: System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderWinFormsUI}
  commentId: T:System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderWinFormsUI}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ITranslationProviderWinFormsUI>
  nameWithType: IList<ITranslationProviderWinFormsUI>
  fullName: System.Collections.Generic.IList<Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderWinFormsUI>
  nameWithType.vb: IList(Of ITranslationProviderWinFormsUI)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderWinFormsUI)
  name.vb: IList(Of ITranslationProviderWinFormsUI)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderWinFormsUI
    name: ITranslationProviderWinFormsUI
    nameWithType: ITranslationProviderWinFormsUI
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderWinFormsUI
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderWinFormsUI
    name: ITranslationProviderWinFormsUI
    nameWithType: ITranslationProviderWinFormsUI
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationProviderWinFormsUI
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
