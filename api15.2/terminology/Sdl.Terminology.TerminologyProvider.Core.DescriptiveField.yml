### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.DescriptiveField
  id: DescriptiveField
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.#ctor
  - Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Label
  - Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Level
  - Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Mandatory
  - Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Multiple
  - Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.PickListValues
  - Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Type
  langs:
  - csharp
  - vb
  name: DescriptiveField
  nameWithType: DescriptiveField
  fullName: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField
  type: Class
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: 'public class DescriptiveField : IDescriptiveField'
    content.vb: >-
      Public Class DescriptiveField
          Implements IDescriptiveField
  inheritance:
  - System.Object
  implements:
  - Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.#ctor
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.#ctor
  id: '#ctor'
  parent: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField
  langs:
  - csharp
  - vb
  name: DescriptiveField()
  nameWithType: DescriptiveField.DescriptiveField()
  fullName: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.DescriptiveField()
  type: Constructor
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public DescriptiveField()
    content.vb: Public Sub New
  overload: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.PickListValues
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.PickListValues
  id: PickListValues
  parent: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField
  langs:
  - csharp
  - vb
  name: PickListValues
  nameWithType: DescriptiveField.PickListValues
  fullName: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.PickListValues
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public IList<string> PickListValues { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property PickListValues As IList(Of String)
  overload: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.PickListValues*
  implements:
  - Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.PickListValues
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Mandatory
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Mandatory
  id: Mandatory
  parent: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField
  langs:
  - csharp
  - vb
  name: Mandatory
  nameWithType: DescriptiveField.Mandatory
  fullName: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Mandatory
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public bool Mandatory { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Mandatory As Boolean
  overload: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Mandatory*
  implements:
  - Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Mandatory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Label
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Label
  id: Label
  parent: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: DescriptiveField.Label
  fullName: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Label
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public string Label { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Label As String
  overload: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Label*
  implements:
  - Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Label
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Multiple
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Multiple
  id: Multiple
  parent: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField
  langs:
  - csharp
  - vb
  name: Multiple
  nameWithType: DescriptiveField.Multiple
  fullName: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Multiple
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public bool Multiple { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Multiple As Boolean
  overload: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Multiple*
  implements:
  - Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Multiple
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Type
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Type
  id: Type
  parent: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: DescriptiveField.Type
  fullName: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Type
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public FieldType Type { get; set; }
    parameters: []
    return:
      type: Sdl.Terminology.TerminologyProvider.Core.FieldType
    content.vb: Public Property Type As FieldType
  overload: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Type*
  implements:
  - Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Level
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Level
  id: Level
  parent: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: DescriptiveField.Level
  fullName: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Level
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  syntax:
    content: public FieldLevel Level { get; set; }
    parameters: []
    return:
      type: Sdl.Terminology.TerminologyProvider.Core.FieldLevel
    content.vb: Public Property Level As FieldLevel
  overload: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Level*
  implements:
  - Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Level
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: IDescriptiveField
  nameWithType: IDescriptiveField
  fullName: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.#ctor*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.#ctor
  isExternal: true
  name: DescriptiveField
  nameWithType: DescriptiveField.DescriptiveField
  fullName: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.DescriptiveField
- uid: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.PickListValues*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.PickListValues
  isExternal: true
  name: PickListValues
  nameWithType: DescriptiveField.PickListValues
  fullName: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.PickListValues
- uid: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.PickListValues
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.PickListValues
  parent: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField
  isExternal: true
  name: PickListValues
  nameWithType: IDescriptiveField.PickListValues
  fullName: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.PickListValues
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Mandatory*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Mandatory
  isExternal: true
  name: Mandatory
  nameWithType: DescriptiveField.Mandatory
  fullName: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Mandatory
- uid: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Mandatory
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Mandatory
  parent: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField
  isExternal: true
  name: Mandatory
  nameWithType: IDescriptiveField.Mandatory
  fullName: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Mandatory
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Label*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Label
  isExternal: true
  name: Label
  nameWithType: DescriptiveField.Label
  fullName: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Label
- uid: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Label
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Label
  parent: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField
  isExternal: true
  name: Label
  nameWithType: IDescriptiveField.Label
  fullName: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Label
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Multiple*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Multiple
  isExternal: true
  name: Multiple
  nameWithType: DescriptiveField.Multiple
  fullName: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Multiple
- uid: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Multiple
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Multiple
  parent: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField
  isExternal: true
  name: Multiple
  nameWithType: IDescriptiveField.Multiple
  fullName: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Multiple
- uid: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Type*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Type
  isExternal: true
  name: Type
  nameWithType: DescriptiveField.Type
  fullName: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Type
- uid: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Type
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Type
  parent: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField
  isExternal: true
  name: Type
  nameWithType: IDescriptiveField.Type
  fullName: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Type
- uid: Sdl.Terminology.TerminologyProvider.Core.FieldType
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.FieldType
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: FieldType
  nameWithType: FieldType
  fullName: Sdl.Terminology.TerminologyProvider.Core.FieldType
- uid: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Level*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Level
  isExternal: true
  name: Level
  nameWithType: DescriptiveField.Level
  fullName: Sdl.Terminology.TerminologyProvider.Core.DescriptiveField.Level
- uid: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Level
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Level
  parent: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField
  isExternal: true
  name: Level
  nameWithType: IDescriptiveField.Level
  fullName: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField.Level
- uid: Sdl.Terminology.TerminologyProvider.Core.FieldLevel
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.FieldLevel
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: FieldLevel
  nameWithType: FieldLevel
  fullName: Sdl.Terminology.TerminologyProvider.Core.FieldLevel
