### YamlMime:ManagedReference
items:
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation
  commentId: T:Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation
  id: AbstractLocation
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal
  children:
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.#ctor
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.InsertAfter
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.InsertBefore
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.IsSeparator
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.Path
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.TargetAttributeType
  - Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.ZIndex
  langs:
  - csharp
  - vb
  name: AbstractLocation
  nameWithType: AbstractLocation
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation
  type: Class
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nBase class for defining a location\n"
  syntax:
    content: public abstract class AbstractLocation
    content.vb: Public MustInherit Class AbstractLocation
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.Desktop.IntegrationApi.DefaultLocations.StudioDefaultRibbonTabs.AddinsRibbonTabLocation
  - Sdl.Desktop.IntegrationApi.DefaultLocations.StudioDefaultRibbonTabs.HelpRibbonTabLocation
  - Sdl.Desktop.IntegrationApi.DefaultLocations.StudioDefaultRibbonTabs.ViewRibbonTabLocation
  - Sdl.TranslationStudioAutomation.IntegrationApi.Presentation.DefaultLocations.TranslationStudioDefaultContextMenus.EditorDocumentContextMenuLocation
  - Sdl.TranslationStudioAutomation.IntegrationApi.Presentation.DefaultLocations.TranslationStudioDefaultContextMenus.FilesContextMenuLocation
  - Sdl.TranslationStudioAutomation.IntegrationApi.Presentation.DefaultLocations.TranslationStudioDefaultContextMenus.ProjectsContextMenuLocation
  - Sdl.TranslationStudioAutomation.IntegrationApi.Presentation.DefaultLocations.TranslationStudioDefaultRibbonTabs.EditorAdvancedRibbonTabLocation
  - Sdl.TranslationStudioAutomation.IntegrationApi.Presentation.DefaultLocations.TranslationStudioDefaultRibbonTabs.EditorReviewRibbonTabLocation
  - Sdl.TranslationStudioAutomation.IntegrationApi.Presentation.DefaultLocations.TranslationStudioDefaultRibbonTabs.HomeRibbonTabLocation
  - Sdl.TranslationStudioAutomation.IntegrationApi.Presentation.DefaultLocations.TranslationStudioDefaultViews.TradosStudioViewsLocation
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.#ctor
  commentId: M:Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.#ctor
  id: '#ctor'
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation
  langs:
  - csharp
  - vb
  name: AbstractLocation()
  nameWithType: AbstractLocation.AbstractLocation()
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.AbstractLocation()
  type: Constructor
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  syntax:
    content: protected AbstractLocation()
    content.vb: Protected Sub New
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.Path
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.Path
  id: Path
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: AbstractLocation.Path
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.Path
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nGets or sets the command bar path at which to insert the plug-in item.\n"
  syntax:
    content: public abstract string Path { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property Path As String
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.Path*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.InsertBefore
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.InsertBefore
  id: InsertBefore
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation
  langs:
  - csharp
  - vb
  name: InsertBefore
  nameWithType: AbstractLocation.InsertBefore
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.InsertBefore
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nThe id of the command bar item before which this plug-in item should be inserted.\n"
  syntax:
    content: public abstract string InsertBefore { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property InsertBefore As String
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.InsertBefore*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.InsertAfter
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.InsertAfter
  id: InsertAfter
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation
  langs:
  - csharp
  - vb
  name: InsertAfter
  nameWithType: AbstractLocation.InsertAfter
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.InsertAfter
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nThe id of the command bar item after which this plug-in item should be inserted.\n"
  syntax:
    content: public abstract string InsertAfter { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property InsertAfter As String
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.InsertAfter*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.TargetAttributeType
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.TargetAttributeType
  id: TargetAttributeType
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation
  langs:
  - csharp
  - vb
  name: TargetAttributeType
  nameWithType: AbstractLocation.TargetAttributeType
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.TargetAttributeType
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nThe target extension attribute type\n"
  syntax:
    content: public abstract Type TargetAttributeType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public MustOverride ReadOnly Property TargetAttributeType As Type
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.TargetAttributeType*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.ZIndex
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.ZIndex
  id: ZIndex
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation
  langs:
  - csharp
  - vb
  name: ZIndex
  nameWithType: AbstractLocation.ZIndex
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.ZIndex
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\nUsed internaly for defining and sorting the position of the UI integrated elements\n"
  syntax:
    content: public uint ZIndex { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property ZIndex As UInteger
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.ZIndex*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.IsSeparator
  commentId: P:Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.IsSeparator
  id: IsSeparator
  parent: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation
  langs:
  - csharp
  - vb
  name: IsSeparator
  nameWithType: AbstractLocation.IsSeparator
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.IsSeparator
  type: Property
  source:
    path: Sdl.Desktop.IntegrationApi.Extensions
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi.Extensions
  namespace: Sdl.Desktop.IntegrationApi.Extensions.Internal
  summary: "\n\n"
  syntax:
    content: public bool IsSeparator { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSeparator As Boolean
  overload: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.IsSeparator*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal
  commentId: N:Sdl.Desktop.IntegrationApi.Extensions.Internal
  isExternal: true
  name: Sdl.Desktop.IntegrationApi.Extensions.Internal
  nameWithType: Sdl.Desktop.IntegrationApi.Extensions.Internal
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.#ctor*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.#ctor
  isExternal: true
  name: AbstractLocation
  nameWithType: AbstractLocation.AbstractLocation
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.AbstractLocation
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.Path*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.Path
  isExternal: true
  name: Path
  nameWithType: AbstractLocation.Path
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.Path
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.InsertBefore*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.InsertBefore
  isExternal: true
  name: InsertBefore
  nameWithType: AbstractLocation.InsertBefore
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.InsertBefore
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.InsertAfter*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.InsertAfter
  isExternal: true
  name: InsertAfter
  nameWithType: AbstractLocation.InsertAfter
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.InsertAfter
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.TargetAttributeType*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.TargetAttributeType
  isExternal: true
  name: TargetAttributeType
  nameWithType: AbstractLocation.TargetAttributeType
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.TargetAttributeType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.ZIndex*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.ZIndex
  isExternal: true
  name: ZIndex
  nameWithType: AbstractLocation.ZIndex
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.ZIndex
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.IsSeparator*
  commentId: Overload:Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.IsSeparator
  isExternal: true
  name: IsSeparator
  nameWithType: AbstractLocation.IsSeparator
  fullName: Sdl.Desktop.IntegrationApi.Extensions.Internal.AbstractLocation.IsSeparator
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
