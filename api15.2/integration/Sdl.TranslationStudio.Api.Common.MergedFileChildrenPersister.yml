### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister
  commentId: T:Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister
  id: MergedFileChildrenPersister
  parent: Sdl.TranslationStudio.Api.Common
  children:
  - Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.#ctor(Sdl.ProjectApi.IMergedTranslatableFile)
  - Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.#ctor(System.String,System.String[])
  - Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.CreateChildFilesDocuments(System.Xml.XmlNamespaceManager)
  - Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.DefaultNamespaceManager
  - Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.ExtractFirstDocumentElements(System.Collections.Generic.List{System.Xml.Linq.XElement}@)
  - Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.Load
  - Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFiles(Sdl.ProjectApi.IMergedTranslatableFile)
  - Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFiles(System.String,System.String[])
  - Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFilesDocuments
  langs:
  - csharp
  - vb
  name: MergedFileChildrenPersister
  nameWithType: MergedFileChildrenPersister
  fullName: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister
  type: Class
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Common
  syntax:
    content: public class MergedFileChildrenPersister
    content.vb: Public Class MergedFileChildrenPersister
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.#ctor(System.String,System.String[])
  commentId: M:Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister
  langs:
  - csharp
  - vb
  name: MergedFileChildrenPersister(String, String[])
  nameWithType: MergedFileChildrenPersister.MergedFileChildrenPersister(String, String[])
  fullName: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.MergedFileChildrenPersister(System.String, System.String[])
  type: Constructor
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Common
  syntax:
    content: public MergedFileChildrenPersister(string mergedFilePath, string[] childFilePaths)
    parameters:
    - id: mergedFilePath
      type: System.String
    - id: childFilePaths
      type: System.String[]
    content.vb: Public Sub New(mergedFilePath As String, childFilePaths As String())
  overload: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.#ctor*
  nameWithType.vb: MergedFileChildrenPersister.MergedFileChildrenPersister(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.MergedFileChildrenPersister(System.String, System.String())
  name.vb: MergedFileChildrenPersister(String, String())
- uid: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.#ctor(Sdl.ProjectApi.IMergedTranslatableFile)
  commentId: M:Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.#ctor(Sdl.ProjectApi.IMergedTranslatableFile)
  id: '#ctor(Sdl.ProjectApi.IMergedTranslatableFile)'
  parent: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister
  langs:
  - csharp
  - vb
  name: MergedFileChildrenPersister(IMergedTranslatableFile)
  nameWithType: MergedFileChildrenPersister.MergedFileChildrenPersister(IMergedTranslatableFile)
  fullName: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.MergedFileChildrenPersister(Sdl.ProjectApi.IMergedTranslatableFile)
  type: Constructor
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Common
  syntax:
    content: public MergedFileChildrenPersister(IMergedTranslatableFile mergedTranslatableFile)
    parameters:
    - id: mergedTranslatableFile
      type: Sdl.ProjectApi.IMergedTranslatableFile
    content.vb: Public Sub New(mergedTranslatableFile As IMergedTranslatableFile)
  overload: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.Load
  commentId: M:Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.Load
  id: Load
  parent: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: MergedFileChildrenPersister.Load()
  fullName: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.Load()
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Common
  syntax:
    content: public void Load()
    content.vb: Public Sub Load
  overload: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.Load*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.CreateChildFilesDocuments(System.Xml.XmlNamespaceManager)
  commentId: M:Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.CreateChildFilesDocuments(System.Xml.XmlNamespaceManager)
  id: CreateChildFilesDocuments(System.Xml.XmlNamespaceManager)
  parent: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister
  langs:
  - csharp
  - vb
  name: CreateChildFilesDocuments(XmlNamespaceManager)
  nameWithType: MergedFileChildrenPersister.CreateChildFilesDocuments(XmlNamespaceManager)
  fullName: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.CreateChildFilesDocuments(System.Xml.XmlNamespaceManager)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Common
  syntax:
    content: public void CreateChildFilesDocuments(XmlNamespaceManager nsManager)
    parameters:
    - id: nsManager
      type: System.Xml.XmlNamespaceManager
    content.vb: Public Sub CreateChildFilesDocuments(nsManager As XmlNamespaceManager)
  overload: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.CreateChildFilesDocuments*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.ExtractFirstDocumentElements(System.Collections.Generic.List{System.Xml.Linq.XElement}@)
  commentId: M:Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.ExtractFirstDocumentElements(System.Collections.Generic.List{System.Xml.Linq.XElement}@)
  id: ExtractFirstDocumentElements(System.Collections.Generic.List{System.Xml.Linq.XElement}@)
  parent: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister
  langs:
  - csharp
  - vb
  name: ExtractFirstDocumentElements(ref List<XElement>)
  nameWithType: MergedFileChildrenPersister.ExtractFirstDocumentElements(ref List<XElement>)
  fullName: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.ExtractFirstDocumentElements(ref System.Collections.Generic.List<System.Xml.Linq.XElement>)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Common
  syntax:
    content: public List<XElement> ExtractFirstDocumentElements(ref List<XElement> fileElements)
    parameters:
    - id: fileElements
      type: System.Collections.Generic.List{System.Xml.Linq.XElement}
    return:
      type: System.Collections.Generic.List{System.Xml.Linq.XElement}
    content.vb: Public Function ExtractFirstDocumentElements(ByRef fileElements As List(Of XElement)) As List(Of XElement)
  overload: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.ExtractFirstDocumentElements*
  nameWithType.vb: MergedFileChildrenPersister.ExtractFirstDocumentElements(ByRef List(Of XElement))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.ExtractFirstDocumentElements(ByRef System.Collections.Generic.List(Of System.Xml.Linq.XElement))
  name.vb: ExtractFirstDocumentElements(ByRef List(Of XElement))
- uid: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFilesDocuments
  commentId: M:Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFilesDocuments
  id: SaveChildFilesDocuments
  parent: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister
  langs:
  - csharp
  - vb
  name: SaveChildFilesDocuments()
  nameWithType: MergedFileChildrenPersister.SaveChildFilesDocuments()
  fullName: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFilesDocuments()
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Common
  syntax:
    content: public void SaveChildFilesDocuments()
    content.vb: Public Sub SaveChildFilesDocuments
  overload: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFilesDocuments*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFiles(System.String,System.String[])
  commentId: M:Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFiles(System.String,System.String[])
  id: SaveChildFiles(System.String,System.String[])
  parent: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister
  langs:
  - csharp
  - vb
  name: SaveChildFiles(String, String[])
  nameWithType: MergedFileChildrenPersister.SaveChildFiles(String, String[])
  fullName: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFiles(System.String, System.String[])
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Common
  syntax:
    content: public static void SaveChildFiles(string outputFile, string[] bilingualFilePaths)
    parameters:
    - id: outputFile
      type: System.String
    - id: bilingualFilePaths
      type: System.String[]
    content.vb: Public Shared Sub SaveChildFiles(outputFile As String, bilingualFilePaths As String())
  overload: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFiles*
  nameWithType.vb: MergedFileChildrenPersister.SaveChildFiles(String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFiles(System.String, System.String())
  name.vb: SaveChildFiles(String, String())
- uid: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFiles(Sdl.ProjectApi.IMergedTranslatableFile)
  commentId: M:Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFiles(Sdl.ProjectApi.IMergedTranslatableFile)
  id: SaveChildFiles(Sdl.ProjectApi.IMergedTranslatableFile)
  parent: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister
  langs:
  - csharp
  - vb
  name: SaveChildFiles(IMergedTranslatableFile)
  nameWithType: MergedFileChildrenPersister.SaveChildFiles(IMergedTranslatableFile)
  fullName: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFiles(Sdl.ProjectApi.IMergedTranslatableFile)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Common
  syntax:
    content: public static void SaveChildFiles(IMergedTranslatableFile mergedFile)
    parameters:
    - id: mergedFile
      type: Sdl.ProjectApi.IMergedTranslatableFile
    content.vb: Public Shared Sub SaveChildFiles(mergedFile As IMergedTranslatableFile)
  overload: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFiles*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.DefaultNamespaceManager
  commentId: P:Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.DefaultNamespaceManager
  id: DefaultNamespaceManager
  parent: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister
  langs:
  - csharp
  - vb
  name: DefaultNamespaceManager
  nameWithType: MergedFileChildrenPersister.DefaultNamespaceManager
  fullName: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.DefaultNamespaceManager
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Common
  syntax:
    content: public XmlNamespaceManager DefaultNamespaceManager { get; }
    parameters: []
    return:
      type: System.Xml.XmlNamespaceManager
    content.vb: Public ReadOnly Property DefaultNamespaceManager As XmlNamespaceManager
  overload: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.DefaultNamespaceManager*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.TranslationStudio.Api.Common
  commentId: N:Sdl.TranslationStudio.Api.Common
  isExternal: true
  name: Sdl.TranslationStudio.Api.Common
  nameWithType: Sdl.TranslationStudio.Api.Common
  fullName: Sdl.TranslationStudio.Api.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.#ctor*
  commentId: Overload:Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.#ctor
  isExternal: true
  name: MergedFileChildrenPersister
  nameWithType: MergedFileChildrenPersister.MergedFileChildrenPersister
  fullName: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.MergedFileChildrenPersister
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectApi.IMergedTranslatableFile
  isExternal: true
  name: IMergedTranslatableFile
  nameWithType: IMergedTranslatableFile
  fullName: Sdl.ProjectApi.IMergedTranslatableFile
- uid: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.Load*
  commentId: Overload:Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.Load
  isExternal: true
  name: Load
  nameWithType: MergedFileChildrenPersister.Load
  fullName: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.Load
- uid: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.CreateChildFilesDocuments*
  commentId: Overload:Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.CreateChildFilesDocuments
  isExternal: true
  name: CreateChildFilesDocuments
  nameWithType: MergedFileChildrenPersister.CreateChildFilesDocuments
  fullName: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.CreateChildFilesDocuments
- uid: System.Xml.XmlNamespaceManager
  isExternal: true
  name: XmlNamespaceManager
  nameWithType: XmlNamespaceManager
  fullName: System.Xml.XmlNamespaceManager
- uid: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.ExtractFirstDocumentElements*
  commentId: Overload:Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.ExtractFirstDocumentElements
  isExternal: true
  name: ExtractFirstDocumentElements
  nameWithType: MergedFileChildrenPersister.ExtractFirstDocumentElements
  fullName: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.ExtractFirstDocumentElements
- uid: System.Collections.Generic.List{System.Xml.Linq.XElement}
  commentId: T:System.Collections.Generic.List{System.Xml.Linq.XElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<XElement>
  nameWithType: List<XElement>
  fullName: System.Collections.Generic.List<System.Xml.Linq.XElement>
  nameWithType.vb: List(Of XElement)
  fullName.vb: System.Collections.Generic.List(Of System.Xml.Linq.XElement)
  name.vb: List(Of XElement)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFilesDocuments*
  commentId: Overload:Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFilesDocuments
  isExternal: true
  name: SaveChildFilesDocuments
  nameWithType: MergedFileChildrenPersister.SaveChildFilesDocuments
  fullName: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFilesDocuments
- uid: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFiles*
  commentId: Overload:Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFiles
  isExternal: true
  name: SaveChildFiles
  nameWithType: MergedFileChildrenPersister.SaveChildFiles
  fullName: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.SaveChildFiles
- uid: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.DefaultNamespaceManager*
  commentId: Overload:Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.DefaultNamespaceManager
  isExternal: true
  name: DefaultNamespaceManager
  nameWithType: MergedFileChildrenPersister.DefaultNamespaceManager
  fullName: Sdl.TranslationStudio.Api.Common.MergedFileChildrenPersister.DefaultNamespaceManager
