### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder
  commentId: T:Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder
  id: MarkupDataNodeFinder
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  - Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsItem(Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  - Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsItem(Sdl.DesktopEditor.EditorApi.INode)
  - Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsNotItem(Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  langs:
  - csharp
  - vb
  name: MarkupDataNodeFinder
  nameWithType: MarkupDataNodeFinder
  fullName: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder
  type: Class
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nHelper class that can be used with <xref href=\"Sdl.DesktopEditor.EditorApi.IAbstractContainerNode.Find(System.Predicate%7bSdl.DesktopEditor.EditorApi.INode%7d%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> to locate markup data nodes.\n"
  syntax:
    content: public class MarkupDataNodeFinder
    content.vb: Public Class MarkupDataNodeFinder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  commentId: M:Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  id: '#ctor(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)'
  parent: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder
  langs:
  - csharp
  - vb
  name: MarkupDataNodeFinder(IAbstractMarkupData)
  nameWithType: MarkupDataNodeFinder.MarkupDataNodeFinder(IAbstractMarkupData)
  fullName: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.MarkupDataNodeFinder(Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData)
  type: Constructor
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nContruct with a markup data item that is used in IsItem and IsNotItem comparisons.\n"
  syntax:
    content: public MarkupDataNodeFinder(IAbstractMarkupData item)
    parameters:
    - id: item
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
    content.vb: Public Sub New(item As IAbstractMarkupData)
  overload: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsItem(Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  commentId: M:Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsItem(Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  id: IsItem(Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  parent: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder
  langs:
  - csharp
  - vb
  name: IsItem(IAbstractContentNode)
  nameWithType: MarkupDataNodeFinder.IsItem(IAbstractContentNode)
  fullName: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsItem(Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThis method can be used as delegate for <code>Sdl.DesktopEditor.EditorApi.IContainerNode.FindContentNode</code> to locate\nthe first node that corresponds to the specified markup data item.\n"
  syntax:
    content: public bool IsItem(IAbstractContentNode node)
    parameters:
    - id: node
      type: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
    return:
      type: System.Boolean
    content.vb: Public Function IsItem(node As IAbstractContentNode) As Boolean
  overload: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsItem*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsItem(Sdl.DesktopEditor.EditorApi.INode)
  commentId: M:Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsItem(Sdl.DesktopEditor.EditorApi.INode)
  id: IsItem(Sdl.DesktopEditor.EditorApi.INode)
  parent: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder
  langs:
  - csharp
  - vb
  name: IsItem(INode)
  nameWithType: MarkupDataNodeFinder.IsItem(INode)
  fullName: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsItem(Sdl.DesktopEditor.EditorApi.INode)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThis method can be used as delegate for <code>Sdl.DesktopEditor.EditorApi.IContainerNode.Find</code> to locate\nthe first node that corresponds to the specified markup data item.\n"
  syntax:
    content: public bool IsItem(INode node)
    parameters:
    - id: node
      type: Sdl.DesktopEditor.EditorApi.INode
    return:
      type: System.Boolean
    content.vb: Public Function IsItem(node As INode) As Boolean
  overload: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsItem*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsNotItem(Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  commentId: M:Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsNotItem(Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  id: IsNotItem(Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  parent: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder
  langs:
  - csharp
  - vb
  name: IsNotItem(IAbstractContentNode)
  nameWithType: MarkupDataNodeFinder.IsNotItem(IAbstractContentNode)
  fullName: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsNotItem(Sdl.DesktopEditor.EditorApi.IAbstractContentNode)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThis method can be used as delegate for <code>Sdl.DesktopEditor.EditorApi.IContainerNode.Find</code> to locate\nthe first node that does not correspond to the specified markup data item.\n"
  syntax:
    content: public bool IsNotItem(IAbstractContentNode node)
    parameters:
    - id: node
      type: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
    return:
      type: System.Boolean
    content.vb: Public Function IsNotItem(node As IAbstractContentNode) As Boolean
  overload: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsNotItem*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.#ctor*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.#ctor
  isExternal: true
  name: MarkupDataNodeFinder
  nameWithType: MarkupDataNodeFinder.MarkupDataNodeFinder
  fullName: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.MarkupDataNodeFinder
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
  isExternal: true
  name: IAbstractMarkupData
  nameWithType: IAbstractMarkupData
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IAbstractMarkupData
- uid: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsItem*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsItem
  isExternal: true
  name: IsItem
  nameWithType: MarkupDataNodeFinder.IsItem
  fullName: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsItem
- uid: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
  commentId: T:Sdl.DesktopEditor.EditorApi.IAbstractContentNode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IAbstractContentNode
  nameWithType: IAbstractContentNode
  fullName: Sdl.DesktopEditor.EditorApi.IAbstractContentNode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.DesktopEditor.EditorApi.INode
  commentId: T:Sdl.DesktopEditor.EditorApi.INode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: INode
  nameWithType: INode
  fullName: Sdl.DesktopEditor.EditorApi.INode
- uid: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsNotItem*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsNotItem
  isExternal: true
  name: IsNotItem
  nameWithType: MarkupDataNodeFinder.IsNotItem
  fullName: Sdl.DesktopEditor.EditorApi.MarkupDataNodeFinder.IsNotItem
