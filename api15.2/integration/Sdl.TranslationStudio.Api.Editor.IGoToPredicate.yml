### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudio.Api.Editor.IGoToPredicate
  commentId: T:Sdl.TranslationStudio.Api.Editor.IGoToPredicate
  id: IGoToPredicate
  parent: Sdl.TranslationStudio.Api.Editor
  children:
  - Sdl.TranslationStudio.Api.Editor.IGoToPredicate.IsGoToSegment(Sdl.TranslationStudio.Api.Editor.ITranslatableDocument,Sdl.DesktopEditor.EditorApi.ISegmentContainerNode,Sdl.DesktopEditor.EditorApi.IFrameworkDocument)
  langs:
  - csharp
  - vb
  name: IGoToPredicate
  nameWithType: IGoToPredicate
  fullName: Sdl.TranslationStudio.Api.Editor.IGoToPredicate
  type: Interface
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor
  summary: "\nIGoToControl interface specifies a go to predicate.\n"
  syntax:
    content: public interface IGoToPredicate
    content.vb: Public Interface IGoToPredicate
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.TranslationStudio.Api.Editor.IGoToPredicate.IsGoToSegment(Sdl.TranslationStudio.Api.Editor.ITranslatableDocument,Sdl.DesktopEditor.EditorApi.ISegmentContainerNode,Sdl.DesktopEditor.EditorApi.IFrameworkDocument)
  commentId: M:Sdl.TranslationStudio.Api.Editor.IGoToPredicate.IsGoToSegment(Sdl.TranslationStudio.Api.Editor.ITranslatableDocument,Sdl.DesktopEditor.EditorApi.ISegmentContainerNode,Sdl.DesktopEditor.EditorApi.IFrameworkDocument)
  id: IsGoToSegment(Sdl.TranslationStudio.Api.Editor.ITranslatableDocument,Sdl.DesktopEditor.EditorApi.ISegmentContainerNode,Sdl.DesktopEditor.EditorApi.IFrameworkDocument)
  parent: Sdl.TranslationStudio.Api.Editor.IGoToPredicate
  langs:
  - csharp
  - vb
  name: IsGoToSegment(ITranslatableDocument, ISegmentContainerNode, IFrameworkDocument)
  nameWithType: IGoToPredicate.IsGoToSegment(ITranslatableDocument, ISegmentContainerNode, IFrameworkDocument)
  fullName: Sdl.TranslationStudio.Api.Editor.IGoToPredicate.IsGoToSegment(Sdl.TranslationStudio.Api.Editor.ITranslatableDocument, Sdl.DesktopEditor.EditorApi.ISegmentContainerNode, Sdl.DesktopEditor.EditorApi.IFrameworkDocument)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor
  summary: "\nDetermines whether the given segment is a &quot;go to&quot; segment.\n"
  syntax:
    content: bool IsGoToSegment(ITranslatableDocument document, ISegmentContainerNode segment, IFrameworkDocument sourceFrameWorkDocument)
    parameters:
    - id: document
      type: Sdl.TranslationStudio.Api.Editor.ITranslatableDocument
      description: document
    - id: segment
      type: Sdl.DesktopEditor.EditorApi.ISegmentContainerNode
      description: segment
    - id: sourceFrameWorkDocument
      type: Sdl.DesktopEditor.EditorApi.IFrameworkDocument
      description: "some function requires to know the corrsponding source segment, \nso this parameter is added to help to query the corresponding source segment"
    return:
      type: System.Boolean
      description: whether it is a &quot;go to&quot; segment
    content.vb: Function IsGoToSegment(document As ITranslatableDocument, segment As ISegmentContainerNode, sourceFrameWorkDocument As IFrameworkDocument) As Boolean
  overload: Sdl.TranslationStudio.Api.Editor.IGoToPredicate.IsGoToSegment*
references:
- uid: Sdl.TranslationStudio.Api.Editor
  commentId: N:Sdl.TranslationStudio.Api.Editor
  isExternal: true
  name: Sdl.TranslationStudio.Api.Editor
  nameWithType: Sdl.TranslationStudio.Api.Editor
  fullName: Sdl.TranslationStudio.Api.Editor
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudio.Api.Editor.IGoToPredicate.IsGoToSegment*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.IGoToPredicate.IsGoToSegment
  isExternal: true
  name: IsGoToSegment
  nameWithType: IGoToPredicate.IsGoToSegment
  fullName: Sdl.TranslationStudio.Api.Editor.IGoToPredicate.IsGoToSegment
- uid: Sdl.TranslationStudio.Api.Editor.ITranslatableDocument
  commentId: T:Sdl.TranslationStudio.Api.Editor.ITranslatableDocument
  parent: Sdl.TranslationStudio.Api.Editor
  isExternal: true
  name: ITranslatableDocument
  nameWithType: ITranslatableDocument
  fullName: Sdl.TranslationStudio.Api.Editor.ITranslatableDocument
- uid: Sdl.DesktopEditor.EditorApi.ISegmentContainerNode
  commentId: T:Sdl.DesktopEditor.EditorApi.ISegmentContainerNode
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: ISegmentContainerNode
  nameWithType: ISegmentContainerNode
  fullName: Sdl.DesktopEditor.EditorApi.ISegmentContainerNode
- uid: Sdl.DesktopEditor.EditorApi.IFrameworkDocument
  commentId: T:Sdl.DesktopEditor.EditorApi.IFrameworkDocument
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IFrameworkDocument
  nameWithType: IFrameworkDocument
  fullName: Sdl.DesktopEditor.EditorApi.IFrameworkDocument
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
