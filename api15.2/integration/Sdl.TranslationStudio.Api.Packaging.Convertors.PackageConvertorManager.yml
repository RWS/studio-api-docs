### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager
  commentId: T:Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager
  id: PackageConvertorManager
  parent: Sdl.TranslationStudio.Api.Packaging.Convertors
  children:
  - Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.#ctor
  - Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.GetPackageConvertorById(System.String)
  - Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.GetPackageConvertorForFile(System.String)
  - Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.PackageConvertors
  langs:
  - csharp
  - vb
  name: PackageConvertorManager
  nameWithType: PackageConvertorManager
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager
  type: Class
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Packaging.Convertors
  syntax:
    content: public class PackageConvertorManager
    content.vb: Public Class PackageConvertorManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.GetPackageConvertorById(System.String)
  commentId: M:Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.GetPackageConvertorById(System.String)
  id: GetPackageConvertorById(System.String)
  parent: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager
  langs:
  - csharp
  - vb
  name: GetPackageConvertorById(String)
  nameWithType: PackageConvertorManager.GetPackageConvertorById(String)
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.GetPackageConvertorById(System.String)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Packaging.Convertors
  syntax:
    content: public PackageConvertorDescriptor GetPackageConvertorById(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorDescriptor
    content.vb: Public Function GetPackageConvertorById(id As String) As PackageConvertorDescriptor
  overload: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.GetPackageConvertorById*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.GetPackageConvertorForFile(System.String)
  commentId: M:Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.GetPackageConvertorForFile(System.String)
  id: GetPackageConvertorForFile(System.String)
  parent: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager
  langs:
  - csharp
  - vb
  name: GetPackageConvertorForFile(String)
  nameWithType: PackageConvertorManager.GetPackageConvertorForFile(String)
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.GetPackageConvertorForFile(System.String)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Packaging.Convertors
  syntax:
    content: public PackageConvertorDescriptor GetPackageConvertorForFile(string packageFilePath)
    parameters:
    - id: packageFilePath
      type: System.String
    return:
      type: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorDescriptor
    content.vb: Public Function GetPackageConvertorForFile(packageFilePath As String) As PackageConvertorDescriptor
  overload: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.GetPackageConvertorForFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.#ctor
  commentId: M:Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.#ctor
  id: '#ctor'
  parent: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager
  langs:
  - csharp
  - vb
  name: PackageConvertorManager()
  nameWithType: PackageConvertorManager.PackageConvertorManager()
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.PackageConvertorManager()
  type: Constructor
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Packaging.Convertors
  syntax:
    content: public PackageConvertorManager()
    content.vb: Public Sub New
  overload: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.PackageConvertors
  commentId: P:Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.PackageConvertors
  id: PackageConvertors
  parent: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager
  langs:
  - csharp
  - vb
  name: PackageConvertors
  nameWithType: PackageConvertorManager.PackageConvertors
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.PackageConvertors
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Packaging.Convertors
  syntax:
    content: public PackageConvertorDescriptor[] PackageConvertors { get; }
    parameters: []
    return:
      type: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorDescriptor[]
    content.vb: Public ReadOnly Property PackageConvertors As PackageConvertorDescriptor()
  overload: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.PackageConvertors*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors
  commentId: N:Sdl.TranslationStudio.Api.Packaging.Convertors
  isExternal: true
  name: Sdl.TranslationStudio.Api.Packaging.Convertors
  nameWithType: Sdl.TranslationStudio.Api.Packaging.Convertors
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.GetPackageConvertorById*
  commentId: Overload:Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.GetPackageConvertorById
  isExternal: true
  name: GetPackageConvertorById
  nameWithType: PackageConvertorManager.GetPackageConvertorById
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.GetPackageConvertorById
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorDescriptor
  commentId: T:Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorDescriptor
  parent: Sdl.TranslationStudio.Api.Packaging.Convertors
  isExternal: true
  name: PackageConvertorDescriptor
  nameWithType: PackageConvertorDescriptor
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorDescriptor
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.GetPackageConvertorForFile*
  commentId: Overload:Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.GetPackageConvertorForFile
  isExternal: true
  name: GetPackageConvertorForFile
  nameWithType: PackageConvertorManager.GetPackageConvertorForFile
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.GetPackageConvertorForFile
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.#ctor*
  commentId: Overload:Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.#ctor
  isExternal: true
  name: PackageConvertorManager
  nameWithType: PackageConvertorManager.PackageConvertorManager
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.PackageConvertorManager
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.PackageConvertors*
  commentId: Overload:Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.PackageConvertors
  isExternal: true
  name: PackageConvertors
  nameWithType: PackageConvertorManager.PackageConvertors
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorManager.PackageConvertors
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorDescriptor[]
  isExternal: true
  name: PackageConvertorDescriptor[]
  nameWithType: PackageConvertorDescriptor[]
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorDescriptor[]
  nameWithType.vb: PackageConvertorDescriptor()
  fullName.vb: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorDescriptor()
  name.vb: PackageConvertorDescriptor()
  spec.csharp:
  - uid: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorDescriptor
    name: PackageConvertorDescriptor
    nameWithType: PackageConvertorDescriptor
    fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorDescriptor
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorDescriptor
    name: PackageConvertorDescriptor
    nameWithType: PackageConvertorDescriptor
    fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageConvertorDescriptor
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
