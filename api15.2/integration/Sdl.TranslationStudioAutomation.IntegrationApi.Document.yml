### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.Document
  id: Document
  parent: Sdl.TranslationStudioAutomation.IntegrationApi
  children:
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFile
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFileChanged
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFileProperties
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFilePropertiesChanged
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveSegmentChanged
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveSegmentContentIsReady
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveSegmentPair
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnSegment(System.String,System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnTargetSelection(System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.ApplyFilterOnSegments(Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeConfirmationLevelOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,Sdl.Core.Globalization.ConfirmationLevel)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeConfirmationLevelOnSegment(System.String,Sdl.Core.Globalization.ConfirmationLevel)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeTranslationOriginOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.String)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeTranslationOriginOnSegment(System.String,System.String)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.ContentChanged
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteAllCommentsOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteAllCommentsOnSegment(System.String)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteCommentOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,Sdl.FileTypeSupport.Framework.NativeApi.IComment)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteCommentOnSegment(System.String,Sdl.FileTypeSupport.Framework.NativeApi.IComment)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.DisplayFilter
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.DocumentFilterChanged
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.Files
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.FilteredSegmentPairs
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.FilteredSegmentPairsCount
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.FocusedDocumentContent
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetActiveSegmentPair
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetCommentsFromSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetCommentsFromSegment(System.String)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetSegmentPairsFromParagraph(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.IsTranslationProviderAvailable
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.ItemFactory
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.Mode
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPair(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.String,System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.ComponentModel.CancelEventArgs})
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPair(System.String,System.String,System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.ComponentModel.CancelEventArgs})
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPairs(System.String,System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.ComponentModel.CancelEventArgs})
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.Project
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.PropertiesFactory
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.SegmentPairs
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.SegmentsConfirmationLevelChanged
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.SegmentsTranslationOriginChanged
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.Selection
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair(Sdl.ProjectAutomation.Core.ProjectFile,System.String,System.Boolean)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair(System.String)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair(System.String,System.String,System.Boolean)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.TotalSegmentPairsCount
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.TryTranslateActiveSegment
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateCommentOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,Sdl.FileTypeSupport.Framework.NativeApi.IComment,System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateCommentOnSegment(System.String,Sdl.FileTypeSupport.Framework.NativeApi.IComment,System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateParagraphUnitProperties(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPair(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPairProperties(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPairProperties(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  langs:
  - csharp
  - vb
  name: Document
  nameWithType: Document
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  type: Class
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nContains the document implementation\n"
  syntax:
    content: public sealed class Document
    content.vb: Public NotInheritable Class Document
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetCommentsFromSegment(System.String)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetCommentsFromSegment(System.String)
  id: GetCommentsFromSegment(System.String)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: GetCommentsFromSegment(String)
  nameWithType: Document.GetCommentsFromSegment(String)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetCommentsFromSegment(System.String)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nObtain all comments existing from the target segment\n"
  syntax:
    content: >-
      [Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", false)]

      public IEnumerable<IComment> GetCommentsFromSegment(string segmentId)
    parameters:
    - id: segmentId
      type: System.String
      description: Segment ID
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.IComment}
      description: A list of comments from the target segment
    content.vb: >-
      <Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", False)>

      Public Function GetCommentsFromSegment(segmentId As String) As IEnumerable(Of IComment)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetCommentsFromSegment*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: This method is deprecated, you should use the overloaded version with the ISegmentPair parameter
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetCommentsFromSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetCommentsFromSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair)
  id: GetCommentsFromSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: GetCommentsFromSegment(ISegmentPair)
  nameWithType: Document.GetCommentsFromSegment(ISegmentPair)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetCommentsFromSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nObtain all comments existing from the target segment\n"
  syntax:
    content: public IEnumerable<IComment> GetCommentsFromSegment(ISegmentPair segmentPair)
    parameters:
    - id: segmentPair
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
      description: Segment
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.IComment}
      description: A list of comments from the target segment
    content.vb: Public Function GetCommentsFromSegment(segmentPair As ISegmentPair) As IEnumerable(Of IComment)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetCommentsFromSegment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnSegment(System.String,System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnSegment(System.String,System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  id: AddCommentOnSegment(System.String,System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: AddCommentOnSegment(String, String, Severity)
  nameWithType: Document.AddCommentOnSegment(String, String, Severity)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnSegment(System.String, System.String, Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nAdds a comment to the target segment\n"
  syntax:
    content: >-
      [Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", false)]

      public void AddCommentOnSegment(string segmentId, string text, Severity severity)
    parameters:
    - id: segmentId
      type: System.String
      description: Segment ID
    - id: text
      type: System.String
      description: Comment text
    - id: severity
      type: Sdl.FileTypeSupport.Framework.NativeApi.Severity
      description: Comment severity level
    content.vb: >-
      <Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", False)>

      Public Sub AddCommentOnSegment(segmentId As String, text As String, severity As Severity)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnSegment*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: This method is deprecated, you should use the overloaded version with the ISegmentPair parameter
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  id: AddCommentOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: AddCommentOnSegment(ISegmentPair, String, Severity)
  nameWithType: Document.AddCommentOnSegment(ISegmentPair, String, Severity)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair, System.String, Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nAdds a comment to the target segment\n"
  syntax:
    content: public void AddCommentOnSegment(ISegmentPair segmentPair, string text, Severity severity)
    parameters:
    - id: segmentPair
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
      description: Segment
    - id: text
      type: System.String
      description: Comment text
    - id: severity
      type: Sdl.FileTypeSupport.Framework.NativeApi.Severity
      description: Comment severity level
    content.vb: Public Sub AddCommentOnSegment(segmentPair As ISegmentPair, text As String, severity As Severity)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnSegment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnTargetSelection(System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnTargetSelection(System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  id: AddCommentOnTargetSelection(System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: AddCommentOnTargetSelection(String, Severity)
  nameWithType: Document.AddCommentOnTargetSelection(String, Severity)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnTargetSelection(System.String, Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nAdds a comment to the selected content range in the target document. \n"
  syntax:
    content: public void AddCommentOnTargetSelection(string text, Severity severity)
    parameters:
    - id: text
      type: System.String
      description: Comment text
    - id: severity
      type: Sdl.FileTypeSupport.Framework.NativeApi.Severity
      description: Comment severity level
    content.vb: Public Sub AddCommentOnTargetSelection(text As String, severity As Severity)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnTargetSelection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateCommentOnSegment(System.String,Sdl.FileTypeSupport.Framework.NativeApi.IComment,System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateCommentOnSegment(System.String,Sdl.FileTypeSupport.Framework.NativeApi.IComment,System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  id: UpdateCommentOnSegment(System.String,Sdl.FileTypeSupport.Framework.NativeApi.IComment,System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: UpdateCommentOnSegment(String, IComment, String, Severity)
  nameWithType: Document.UpdateCommentOnSegment(String, IComment, String, Severity)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateCommentOnSegment(System.String, Sdl.FileTypeSupport.Framework.NativeApi.IComment, System.String, Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nUpdate a comment text and severity on the target segment\n"
  syntax:
    content: >-
      [Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", false)]

      public void UpdateCommentOnSegment(string segmentId, IComment commentToUpdate, string text, Severity severity)
    parameters:
    - id: segmentId
      type: System.String
      description: Segment ID
    - id: commentToUpdate
      type: Sdl.FileTypeSupport.Framework.NativeApi.IComment
      description: Comment to be updated
    - id: text
      type: System.String
      description: New coment text
    - id: severity
      type: Sdl.FileTypeSupport.Framework.NativeApi.Severity
      description: New coment severity level
    content.vb: >-
      <Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", False)>

      Public Sub UpdateCommentOnSegment(segmentId As String, commentToUpdate As IComment, text As String, severity As Severity)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateCommentOnSegment*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: This method is deprecated, you should use the overloaded version with the ISegmentPair parameter
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateCommentOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,Sdl.FileTypeSupport.Framework.NativeApi.IComment,System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateCommentOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,Sdl.FileTypeSupport.Framework.NativeApi.IComment,System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  id: UpdateCommentOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,Sdl.FileTypeSupport.Framework.NativeApi.IComment,System.String,Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: UpdateCommentOnSegment(ISegmentPair, IComment, String, Severity)
  nameWithType: Document.UpdateCommentOnSegment(ISegmentPair, IComment, String, Severity)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateCommentOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair, Sdl.FileTypeSupport.Framework.NativeApi.IComment, System.String, Sdl.FileTypeSupport.Framework.NativeApi.Severity)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nUpdate a comment text and severity on the target segment\n"
  syntax:
    content: public void UpdateCommentOnSegment(ISegmentPair segmentPair, IComment commentToUpdate, string text, Severity severity)
    parameters:
    - id: segmentPair
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
      description: Segment
    - id: commentToUpdate
      type: Sdl.FileTypeSupport.Framework.NativeApi.IComment
      description: Comment to be updated
    - id: text
      type: System.String
      description: New coment text
    - id: severity
      type: Sdl.FileTypeSupport.Framework.NativeApi.Severity
      description: New coment severity level
    content.vb: Public Sub UpdateCommentOnSegment(segmentPair As ISegmentPair, commentToUpdate As IComment, text As String, severity As Severity)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateCommentOnSegment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteCommentOnSegment(System.String,Sdl.FileTypeSupport.Framework.NativeApi.IComment)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteCommentOnSegment(System.String,Sdl.FileTypeSupport.Framework.NativeApi.IComment)
  id: DeleteCommentOnSegment(System.String,Sdl.FileTypeSupport.Framework.NativeApi.IComment)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: DeleteCommentOnSegment(String, IComment)
  nameWithType: Document.DeleteCommentOnSegment(String, IComment)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteCommentOnSegment(System.String, Sdl.FileTypeSupport.Framework.NativeApi.IComment)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nDelete a specific comment from the target segment.\n"
  syntax:
    content: >-
      [Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", false)]

      public void DeleteCommentOnSegment(string segmentId, IComment commentToDelete)
    parameters:
    - id: segmentId
      type: System.String
      description: Segment ID
    - id: commentToDelete
      type: Sdl.FileTypeSupport.Framework.NativeApi.IComment
      description: Comment to be deleted
    content.vb: >-
      <Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", False)>

      Public Sub DeleteCommentOnSegment(segmentId As String, commentToDelete As IComment)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteCommentOnSegment*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: This method is deprecated, you should use the overloaded version with the ISegmentPair parameter
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteCommentOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,Sdl.FileTypeSupport.Framework.NativeApi.IComment)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteCommentOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,Sdl.FileTypeSupport.Framework.NativeApi.IComment)
  id: DeleteCommentOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,Sdl.FileTypeSupport.Framework.NativeApi.IComment)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: DeleteCommentOnSegment(ISegmentPair, IComment)
  nameWithType: Document.DeleteCommentOnSegment(ISegmentPair, IComment)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteCommentOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair, Sdl.FileTypeSupport.Framework.NativeApi.IComment)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nDelete a specific comment from the target segment.\n"
  syntax:
    content: public void DeleteCommentOnSegment(ISegmentPair segmentPair, IComment commentToDelete)
    parameters:
    - id: segmentPair
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
      description: Segment
    - id: commentToDelete
      type: Sdl.FileTypeSupport.Framework.NativeApi.IComment
      description: Comment to be deleted
    content.vb: Public Sub DeleteCommentOnSegment(segmentPair As ISegmentPair, commentToDelete As IComment)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteCommentOnSegment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteAllCommentsOnSegment(System.String)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteAllCommentsOnSegment(System.String)
  id: DeleteAllCommentsOnSegment(System.String)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: DeleteAllCommentsOnSegment(String)
  nameWithType: Document.DeleteAllCommentsOnSegment(String)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteAllCommentsOnSegment(System.String)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nDelete all comments from the target segment.\n"
  syntax:
    content: >-
      [Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", false)]

      public void DeleteAllCommentsOnSegment(string segmentId)
    parameters:
    - id: segmentId
      type: System.String
      description: Segment ID
    content.vb: >-
      <Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", False)>

      Public Sub DeleteAllCommentsOnSegment(segmentId As String)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteAllCommentsOnSegment*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: This method is deprecated, you should use the overloaded version with the ISegmentPair parameter
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteAllCommentsOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteAllCommentsOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair)
  id: DeleteAllCommentsOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: DeleteAllCommentsOnSegment(ISegmentPair)
  nameWithType: Document.DeleteAllCommentsOnSegment(ISegmentPair)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteAllCommentsOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nDelete all comments from the target segment.\n"
  syntax:
    content: public void DeleteAllCommentsOnSegment(ISegmentPair segmentPair)
    parameters:
    - id: segmentPair
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
      description: Segment
    content.vb: Public Sub DeleteAllCommentsOnSegment(segmentPair As ISegmentPair)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteAllCommentsOnSegment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeConfirmationLevelOnSegment(System.String,Sdl.Core.Globalization.ConfirmationLevel)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeConfirmationLevelOnSegment(System.String,Sdl.Core.Globalization.ConfirmationLevel)
  id: ChangeConfirmationLevelOnSegment(System.String,Sdl.Core.Globalization.ConfirmationLevel)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: ChangeConfirmationLevelOnSegment(String, ConfirmationLevel)
  nameWithType: Document.ChangeConfirmationLevelOnSegment(String, ConfirmationLevel)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeConfirmationLevelOnSegment(System.String, Sdl.Core.Globalization.ConfirmationLevel)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nSets the segment confirmation level to the specified value \n"
  syntax:
    content: >-
      [Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", false)]

      public void ChangeConfirmationLevelOnSegment(string segmentId, ConfirmationLevel newConfirmationLevel)
    parameters:
    - id: segmentId
      type: System.String
      description: Segment ID
    - id: newConfirmationLevel
      type: Sdl.Core.Globalization.ConfirmationLevel
      description: The new confirmation level for the segment.
    content.vb: >-
      <Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", False)>

      Public Sub ChangeConfirmationLevelOnSegment(segmentId As String, newConfirmationLevel As ConfirmationLevel)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeConfirmationLevelOnSegment*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: This method is deprecated, you should use the overloaded version with the ISegmentPair parameter
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeConfirmationLevelOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,Sdl.Core.Globalization.ConfirmationLevel)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeConfirmationLevelOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,Sdl.Core.Globalization.ConfirmationLevel)
  id: ChangeConfirmationLevelOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,Sdl.Core.Globalization.ConfirmationLevel)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: ChangeConfirmationLevelOnSegment(ISegmentPair, ConfirmationLevel)
  nameWithType: Document.ChangeConfirmationLevelOnSegment(ISegmentPair, ConfirmationLevel)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeConfirmationLevelOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair, Sdl.Core.Globalization.ConfirmationLevel)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nSets the segment confirmation level to the specified value \n"
  syntax:
    content: public void ChangeConfirmationLevelOnSegment(ISegmentPair segmentPair, ConfirmationLevel newConfirmationLevel)
    parameters:
    - id: segmentPair
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
      description: Segment
    - id: newConfirmationLevel
      type: Sdl.Core.Globalization.ConfirmationLevel
      description: The new confirmation level for the segment.
    content.vb: Public Sub ChangeConfirmationLevelOnSegment(segmentPair As ISegmentPair, newConfirmationLevel As ConfirmationLevel)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeConfirmationLevelOnSegment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeTranslationOriginOnSegment(System.String,System.String)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeTranslationOriginOnSegment(System.String,System.String)
  id: ChangeTranslationOriginOnSegment(System.String,System.String)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: ChangeTranslationOriginOnSegment(String, String)
  nameWithType: Document.ChangeTranslationOriginOnSegment(String, String)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeTranslationOriginOnSegment(System.String, System.String)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nSets the translation origin for the specified segment to the specified origin type\n"
  syntax:
    content: >-
      [Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", false)]

      public void ChangeTranslationOriginOnSegment(string segmentId, string originType)
    parameters:
    - id: segmentId
      type: System.String
      description: Segment ID
    - id: originType
      type: System.String
      description: The translation origin type. This should normally be one of the constants define in <xref href="Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.DefaultTranslationOrigin" data-throw-if-not-resolved="false"></xref>.
    content.vb: >-
      <Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", False)>

      Public Sub ChangeTranslationOriginOnSegment(segmentId As String, originType As String)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeTranslationOriginOnSegment*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: This method is deprecated, you should use the overloaded version with the ISegmentPair parameter
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeTranslationOriginOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.String)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeTranslationOriginOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.String)
  id: ChangeTranslationOriginOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.String)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: ChangeTranslationOriginOnSegment(ISegmentPair, String)
  nameWithType: Document.ChangeTranslationOriginOnSegment(ISegmentPair, String)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeTranslationOriginOnSegment(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair, System.String)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nSets the translation origin for the specified segment to the specified origin type\n"
  syntax:
    content: public void ChangeTranslationOriginOnSegment(ISegmentPair segmentPair, string originType)
    parameters:
    - id: segmentPair
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
      description: Segment
    - id: originType
      type: System.String
      description: The translation origin type. This should normally be one of the constants define in <xref href="Sdl.FileTypeSupport.Framework.Core.Utilities.NativeApi.DefaultTranslationOrigin" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub ChangeTranslationOriginOnSegment(segmentPair As ISegmentPair, originType As String)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeTranslationOriginOnSegment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetActiveSegmentPair
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetActiveSegmentPair
  id: GetActiveSegmentPair
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: GetActiveSegmentPair()
  nameWithType: Document.GetActiveSegmentPair()
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetActiveSegmentPair()
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nGet the active segment pair in a readonly mode.\n"
  syntax:
    content: public ISegmentPair GetActiveSegmentPair()
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
      description: The active segment pair or null if none was found.
    content.vb: Public Function GetActiveSegmentPair As ISegmentPair
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetActiveSegmentPair*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair(System.String)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair(System.String)
  id: SetActiveSegmentPair(System.String)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: SetActiveSegmentPair(String)
  nameWithType: Document.SetActiveSegmentPair(String)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair(System.String)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  syntax:
    content: >-
      [Obsolete("Use SetActiveSegmentPair(projectFile, segmentNUmber) or SetActiveSegmentPair(paragraphId, segmentNumber)", false)]

      public bool SetActiveSegmentPair(string segmentNumber)
    parameters:
    - id: segmentNumber
      type: System.String
    return:
      type: System.Boolean
      description: "True if the segment pair was activated successfully. \nThis may be false if no such segment exists or if the segment is currently filtered out from view."
    content.vb: >-
      <Obsolete("Use SetActiveSegmentPair(projectFile, segmentNUmber) or SetActiveSegmentPair(paragraphId, segmentNumber)", False)>

      Public Function SetActiveSegmentPair(segmentNumber As String) As Boolean
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Use SetActiveSegmentPair(projectFile, segmentNUmber) or SetActiveSegmentPair(paragraphId, segmentNumber)
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair(Sdl.ProjectAutomation.Core.ProjectFile,System.String,System.Boolean)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair(Sdl.ProjectAutomation.Core.ProjectFile,System.String,System.Boolean)
  id: SetActiveSegmentPair(Sdl.ProjectAutomation.Core.ProjectFile,System.String,System.Boolean)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: SetActiveSegmentPair(ProjectFile, String, Boolean)
  nameWithType: Document.SetActiveSegmentPair(ProjectFile, String, Boolean)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair(Sdl.ProjectAutomation.Core.ProjectFile, System.String, System.Boolean)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nSets the active segment pair to the segment pair with the given number and sets focus on that segment if specified.\n"
  syntax:
    content: public bool SetActiveSegmentPair(ProjectFile projectFile, string segmentNumber, bool setFocusOnSegment = false)
    parameters:
    - id: projectFile
      type: Sdl.ProjectAutomation.Core.ProjectFile
      description: "For normal document it is opened from one file and for virtual document it is opened from multiple files. \nWhen the document is virtual the projetFile indicates the refered file, which can be obtained from Files properpty of Document. \nFor normal document, this parameter is ignored."
    - id: segmentNumber
      type: System.String
      description: The segment number.
    - id: setFocusOnSegment
      type: System.Boolean
      description: Set this to true if focus should be set to the segment
    return:
      type: System.Boolean
      description: "True if the segment pair was activated successfully. \nThis may be false if no such segment exists or if the segment is currently filtered out from view.>"
    content.vb: Public Function SetActiveSegmentPair(projectFile As ProjectFile, segmentNumber As String, setFocusOnSegment As Boolean = False) As Boolean
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair(System.String,System.String,System.Boolean)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair(System.String,System.String,System.Boolean)
  id: SetActiveSegmentPair(System.String,System.String,System.Boolean)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: SetActiveSegmentPair(String, String, Boolean)
  nameWithType: Document.SetActiveSegmentPair(String, String, Boolean)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair(System.String, System.String, System.Boolean)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nSets the active segment pair to the segment pair with the given paragraphId and segmentNumber.\n"
  syntax:
    content: public bool SetActiveSegmentPair(string paragraphId, string segmentNumber, bool setFocusOnSegment = false)
    parameters:
    - id: paragraphId
      type: System.String
    - id: segmentNumber
      type: System.String
    - id: setFocusOnSegment
      type: System.Boolean
      description: Set this to true if focus should be set to the segment
    return:
      type: System.Boolean
    content.vb: Public Function SetActiveSegmentPair(paragraphId As String, segmentNumber As String, setFocusOnSegment As Boolean = False) As Boolean
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPairs(System.String,System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.ComponentModel.CancelEventArgs})
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPairs(System.String,System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.ComponentModel.CancelEventArgs})
  id: ProcessSegmentPairs(System.String,System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.ComponentModel.CancelEventArgs})
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: ProcessSegmentPairs(String, Action<ISegmentPair, CancelEventArgs>)
  nameWithType: Document.ProcessSegmentPairs(String, Action<ISegmentPair, CancelEventArgs>)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPairs(System.String, System.Action<Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair, System.ComponentModel.CancelEventArgs>)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nProcessing the document segment pairs with the ability to alter the source and/or target\n"
  remarks: Even if the source is configured to be in the editable mode this will not be functional if the document does not allow it.
  syntax:
    content: public void ProcessSegmentPairs(string processingName, Action<ISegmentPair, CancelEventArgs> process)
    parameters:
    - id: processingName
      type: System.String
      description: A custom provided name for the processing operation used for the undo history.
    - id: process
      type: System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.ComponentModel.CancelEventArgs}
      description: Processing delegate responsable for analyzing the segment pairs.
    content.vb: Public Sub ProcessSegmentPairs(processingName As String, process As Action(Of ISegmentPair, CancelEventArgs))
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPairs*
  nameWithType.vb: Document.ProcessSegmentPairs(String, Action(Of ISegmentPair, CancelEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPairs(System.String, System.Action(Of Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair, System.ComponentModel.CancelEventArgs))
  name.vb: ProcessSegmentPairs(String, Action(Of ISegmentPair, CancelEventArgs))
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPair(System.String,System.String,System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.ComponentModel.CancelEventArgs})
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPair(System.String,System.String,System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.ComponentModel.CancelEventArgs})
  id: ProcessSegmentPair(System.String,System.String,System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.ComponentModel.CancelEventArgs})
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: ProcessSegmentPair(String, String, Action<ISegmentPair, CancelEventArgs>)
  nameWithType: Document.ProcessSegmentPair(String, String, Action<ISegmentPair, CancelEventArgs>)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPair(System.String, System.String, System.Action<Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair, System.ComponentModel.CancelEventArgs>)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nProcessing a single specific segment pair with the ability to alter the source and/or target\n"
  remarks: Even if the source is configured to be in the editable mode this will not be functional if the document does not allow it.
  syntax:
    content: >-
      [Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", false)]

      public void ProcessSegmentPair(string segmentId, string processingName, Action<ISegmentPair, CancelEventArgs> process)
    parameters:
    - id: segmentId
      type: System.String
      description: Segment ID
    - id: processingName
      type: System.String
      description: A custom provided name for the processing operation used for the undo history.
    - id: process
      type: System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.ComponentModel.CancelEventArgs}
      description: Processing delegate responsable for analyzing the segment pair.
    content.vb: >-
      <Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", False)>

      Public Sub ProcessSegmentPair(segmentId As String, processingName As String, process As Action(Of ISegmentPair, CancelEventArgs))
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPair*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: This method is deprecated, you should use the overloaded version with the ISegmentPair parameter
    - type: System.Boolean
      value: false
  nameWithType.vb: Document.ProcessSegmentPair(String, String, Action(Of ISegmentPair, CancelEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPair(System.String, System.String, System.Action(Of Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair, System.ComponentModel.CancelEventArgs))
  name.vb: ProcessSegmentPair(String, String, Action(Of ISegmentPair, CancelEventArgs))
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPair(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.String,System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.ComponentModel.CancelEventArgs})
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPair(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.String,System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.ComponentModel.CancelEventArgs})
  id: ProcessSegmentPair(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.String,System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.ComponentModel.CancelEventArgs})
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: ProcessSegmentPair(ISegmentPair, String, Action<ISegmentPair, CancelEventArgs>)
  nameWithType: Document.ProcessSegmentPair(ISegmentPair, String, Action<ISegmentPair, CancelEventArgs>)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPair(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair, System.String, System.Action<Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair, System.ComponentModel.CancelEventArgs>)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nProcessing a single specific segment pair with the ability to alter the source and/or target\n"
  remarks: Even if the source is configured to be in the editable mode this will not be functional if the document does not allow it.
  syntax:
    content: public void ProcessSegmentPair(ISegmentPair segmentPair, string processingName, Action<ISegmentPair, CancelEventArgs> process)
    parameters:
    - id: segmentPair
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
      description: Segment Pair
    - id: processingName
      type: System.String
      description: A custom provided name for the processing operation used for the undo history.
    - id: process
      type: System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.ComponentModel.CancelEventArgs}
      description: Processing delegate responsable for analyzing the segment pair.
    content.vb: Public Sub ProcessSegmentPair(segmentPair As ISegmentPair, processingName As String, process As Action(Of ISegmentPair, CancelEventArgs))
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPair*
  nameWithType.vb: Document.ProcessSegmentPair(ISegmentPair, String, Action(Of ISegmentPair, CancelEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPair(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair, System.String, System.Action(Of Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair, System.ComponentModel.CancelEventArgs))
  name.vb: ProcessSegmentPair(ISegmentPair, String, Action(Of ISegmentPair, CancelEventArgs))
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.TryTranslateActiveSegment
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.TryTranslateActiveSegment
  id: TryTranslateActiveSegment
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: TryTranslateActiveSegment()
  nameWithType: Document.TryTranslateActiveSegment()
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.TryTranslateActiveSegment()
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nTries to initiate the translation process for the active segment.\n"
  remarks: If the project does not have any Translation Provider set, the translation of the active segment will not work.
  syntax:
    content: public void TryTranslateActiveSegment()
    content.vb: Public Sub TryTranslateActiveSegment
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.TryTranslateActiveSegment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetSegmentPairsFromParagraph(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetSegmentPairsFromParagraph(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId)
  id: GetSegmentPairsFromParagraph(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: GetSegmentPairsFromParagraph(ParagraphUnitId)
  nameWithType: Document.GetSegmentPairsFromParagraph(ParagraphUnitId)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetSegmentPairsFromParagraph(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nGet the segment pairs from a specific paragraph\n"
  syntax:
    content: public IEnumerable<ISegmentPair> GetSegmentPairsFromParagraph(ParagraphUnitId paragraphId)
    parameters:
    - id: paragraphId
      type: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
      description: Paragraph unique identifier
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair}
      description: A list of segment pairs from the provided paragraph
    content.vb: Public Function GetSegmentPairsFromParagraph(paragraphId As ParagraphUnitId) As IEnumerable(Of ISegmentPair)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetSegmentPairsFromParagraph*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateParagraphUnitProperties(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateParagraphUnitProperties(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  id: UpdateParagraphUnitProperties(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: UpdateParagraphUnitProperties(IParagraphUnitProperties)
  nameWithType: Document.UpdateParagraphUnitProperties(IParagraphUnitProperties)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateParagraphUnitProperties(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nDirectly update the properties of a paragraph unit\n"
  syntax:
    content: public void UpdateParagraphUnitProperties(IParagraphUnitProperties paragraphUnitProperties)
    parameters:
    - id: paragraphUnitProperties
      type: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
      description: Updated properties for the paragraph unit
    content.vb: Public Sub UpdateParagraphUnitProperties(paragraphUnitProperties As IParagraphUnitProperties)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateParagraphUnitProperties*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPairProperties(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPairProperties(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  id: UpdateSegmentPairProperties(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: UpdateSegmentPairProperties(ISegmentPairProperties)
  nameWithType: Document.UpdateSegmentPairProperties(ISegmentPairProperties)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPairProperties(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nDirectly update the properties of a segment pair, without processing the whole segment pair\n"
  syntax:
    content: >-
      [Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", false)]

      public void UpdateSegmentPairProperties(ISegmentPairProperties segmentPairProperties)
    parameters:
    - id: segmentPairProperties
      type: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
      description: Updated properties for the segment pair
    content.vb: >-
      <Obsolete("This method is deprecated, you should use the overloaded version with the ISegmentPair parameter", False)>

      Public Sub UpdateSegmentPairProperties(segmentPairProperties As ISegmentPairProperties)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPairProperties*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: This method is deprecated, you should use the overloaded version with the ISegmentPair parameter
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPairProperties(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPairProperties(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  id: UpdateSegmentPairProperties(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: UpdateSegmentPairProperties(ISegmentPair, ISegmentPairProperties)
  nameWithType: Document.UpdateSegmentPairProperties(ISegmentPair, ISegmentPairProperties)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPairProperties(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair, Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nDirectly update the properties of a segment pair, without processing the whole segment pair\n"
  syntax:
    content: public void UpdateSegmentPairProperties(ISegmentPair segmentPair, ISegmentPairProperties segmentPairProperties)
    parameters:
    - id: segmentPair
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
      description: Segment
    - id: segmentPairProperties
      type: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
      description: Updated properties for the segment pair
    content.vb: Public Sub UpdateSegmentPairProperties(segmentPair As ISegmentPair, segmentPairProperties As ISegmentPairProperties)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPairProperties*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPair(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPair(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair)
  id: UpdateSegmentPair(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: UpdateSegmentPair(ISegmentPair)
  nameWithType: Document.UpdateSegmentPair(ISegmentPair)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPair(Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nDirectly update a segment pair in the document\n"
  syntax:
    content: public void UpdateSegmentPair(ISegmentPair segmentPair)
    parameters:
    - id: segmentPair
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
      description: Updated segment pair
    content.vb: Public Sub UpdateSegmentPair(segmentPair As ISegmentPair)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPair*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ApplyFilterOnSegments(Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ApplyFilterOnSegments(Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter)
  id: ApplyFilterOnSegments(Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter)
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: ApplyFilterOnSegments(IDisplayFilter)
  nameWithType: Document.ApplyFilterOnSegments(IDisplayFilter)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ApplyFilterOnSegments(Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter)
  type: Method
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nApply filter on the segments from the active document in the editor\n"
  syntax:
    content: public void ApplyFilterOnSegments(IDisplayFilter filter)
    parameters:
    - id: filter
      type: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter
      description: The implementation of the display filter interface
    content.vb: Public Sub ApplyFilterOnSegments(filter As IDisplayFilter)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ApplyFilterOnSegments*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Project
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Document.Project
  id: Project
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: Project
  nameWithType: Document.Project
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Project
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nGets the project of the document\n"
  syntax:
    content: public FileBasedProject Project { get; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.FileBased.FileBasedProject
    content.vb: Public ReadOnly Property Project As FileBasedProject
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Project*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Files
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Document.Files
  id: Files
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: Files
  nameWithType: Document.Files
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Files
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nGet the files of the document\n"
  syntax:
    content: public IEnumerable<ProjectFile> Files { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.ProjectAutomation.Core.ProjectFile}
    content.vb: Public ReadOnly Property Files As IEnumerable(Of ProjectFile)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Files*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Mode
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Document.Mode
  id: Mode
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: Document.Mode
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Mode
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nGets the editing mode of the document\n"
  syntax:
    content: public EditingMode Mode { get; }
    parameters: []
    return:
      type: Sdl.TranslationStudioAutomation.IntegrationApi.EditingMode
    content.vb: Public ReadOnly Property Mode As EditingMode
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Mode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.PropertiesFactory
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Document.PropertiesFactory
  id: PropertiesFactory
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: PropertiesFactory
  nameWithType: Document.PropertiesFactory
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.PropertiesFactory
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nGets the factory for the item properties\n"
  syntax:
    content: public IPropertiesFactory PropertiesFactory { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
    content.vb: Public ReadOnly Property PropertiesFactory As IPropertiesFactory
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.PropertiesFactory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ItemFactory
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ItemFactory
  id: ItemFactory
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: ItemFactory
  nameWithType: Document.ItemFactory
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ItemFactory
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nGets the factory for the document items\n"
  syntax:
    content: public IDocumentItemFactory ItemFactory { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory
    content.vb: Public ReadOnly Property ItemFactory As IDocumentItemFactory
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ItemFactory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFile
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFile
  id: ActiveFile
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: ActiveFile
  nameWithType: Document.ActiveFile
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFile
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nGets the active project file.\n"
  syntax:
    content: public ProjectFile ActiveFile { get; }
    parameters: []
    return:
      type: Sdl.ProjectAutomation.Core.ProjectFile
    content.vb: Public ReadOnly Property ActiveFile As ProjectFile
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFile*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFileProperties
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFileProperties
  id: ActiveFileProperties
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: ActiveFileProperties
  nameWithType: Document.ActiveFileProperties
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFileProperties
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nGets the active file properties\n"
  syntax:
    content: public IFileProperties ActiveFileProperties { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
    content.vb: Public ReadOnly Property ActiveFileProperties As IFileProperties
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFileProperties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveSegmentPair
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveSegmentPair
  id: ActiveSegmentPair
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: ActiveSegmentPair
  nameWithType: Document.ActiveSegmentPair
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveSegmentPair
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nGets the active segment pair.\n"
  syntax:
    content: public ISegmentPair ActiveSegmentPair { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
    content.vb: Public ReadOnly Property ActiveSegmentPair As ISegmentPair
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveSegmentPair*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.IsTranslationProviderAvailable
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Document.IsTranslationProviderAvailable
  id: IsTranslationProviderAvailable
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: IsTranslationProviderAvailable
  nameWithType: Document.IsTranslationProviderAvailable
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.IsTranslationProviderAvailable
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nGet a boolean value that indicate if a Translation Provider is available.\n"
  syntax:
    content: public bool IsTranslationProviderAvailable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTranslationProviderAvailable As Boolean
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.IsTranslationProviderAvailable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DisplayFilter
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Document.DisplayFilter
  id: DisplayFilter
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: DisplayFilter
  nameWithType: Document.DisplayFilter
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DisplayFilter
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nGet the active Display Filter\n\nThe result will be null if the filter that has been applied on the document \nis derived from the internal provider.  This should permit the developer to\ndifferentiate between the internal system filter provider and their own \nimplementation and/or multiple implementations of the interface.\n"
  syntax:
    content: public IDisplayFilter DisplayFilter { get; }
    parameters: []
    return:
      type: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter
    content.vb: Public ReadOnly Property DisplayFilter As IDisplayFilter
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DisplayFilter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Selection
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Document.Selection
  id: Selection
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: Selection
  nameWithType: Document.Selection
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Selection
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nGets the document selection\n"
  syntax:
    content: public DocumentSelection Selection { get; }
    parameters: []
    return:
      type: Sdl.TranslationStudioAutomation.IntegrationApi.DocumentSelection
      description: The document selection.
    content.vb: Public ReadOnly Property Selection As DocumentSelection
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Selection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.FocusedDocumentContent
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Document.FocusedDocumentContent
  id: FocusedDocumentContent
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: FocusedDocumentContent
  nameWithType: Document.FocusedDocumentContent
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.FocusedDocumentContent
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nGets the focus document content\n"
  syntax:
    content: public FocusedDocumentContent FocusedDocumentContent { get; }
    parameters: []
    return:
      type: Sdl.TranslationStudioAutomation.IntegrationApi.FocusedDocumentContent
    content.vb: Public ReadOnly Property FocusedDocumentContent As FocusedDocumentContent
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.FocusedDocumentContent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SegmentPairs
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Document.SegmentPairs
  id: SegmentPairs
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: SegmentPairs
  nameWithType: Document.SegmentPairs
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SegmentPairs
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nGet the document segment pairs in a readonly mode\n"
  syntax:
    content: public IEnumerable<ISegmentPair> SegmentPairs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair}
    content.vb: Public ReadOnly Property SegmentPairs As IEnumerable(Of ISegmentPair)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SegmentPairs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.FilteredSegmentPairs
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Document.FilteredSegmentPairs
  id: FilteredSegmentPairs
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: FilteredSegmentPairs
  nameWithType: Document.FilteredSegmentPairs
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.FilteredSegmentPairs
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nGet the filtered document segment pairs in a readonly mode\n"
  syntax:
    content: public IEnumerable<ISegmentPair> FilteredSegmentPairs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair}
    content.vb: Public ReadOnly Property FilteredSegmentPairs As IEnumerable(Of ISegmentPair)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.FilteredSegmentPairs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.TotalSegmentPairsCount
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Document.TotalSegmentPairsCount
  id: TotalSegmentPairsCount
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: TotalSegmentPairsCount
  nameWithType: Document.TotalSegmentPairsCount
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.TotalSegmentPairsCount
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nThe total document segment pairs count\n"
  syntax:
    content: public int TotalSegmentPairsCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TotalSegmentPairsCount As Integer
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.TotalSegmentPairsCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.FilteredSegmentPairsCount
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Document.FilteredSegmentPairsCount
  id: FilteredSegmentPairsCount
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: FilteredSegmentPairsCount
  nameWithType: Document.FilteredSegmentPairsCount
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.FilteredSegmentPairsCount
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nThe filtered document segment pairs count\n"
  syntax:
    content: public int FilteredSegmentPairsCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property FilteredSegmentPairsCount As Integer
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Document.FilteredSegmentPairsCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SegmentsConfirmationLevelChanged
  commentId: E:Sdl.TranslationStudioAutomation.IntegrationApi.Document.SegmentsConfirmationLevelChanged
  id: SegmentsConfirmationLevelChanged
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: SegmentsConfirmationLevelChanged
  nameWithType: Document.SegmentsConfirmationLevelChanged
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SegmentsConfirmationLevelChanged
  type: Event
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nThe event is triggered when a ConfirmationLevel is changed for a Segment.\n"
  syntax:
    content: public event EventHandler SegmentsConfirmationLevelChanged
    return:
      type: System.EventHandler
    content.vb: Public Event SegmentsConfirmationLevelChanged As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SegmentsTranslationOriginChanged
  commentId: E:Sdl.TranslationStudioAutomation.IntegrationApi.Document.SegmentsTranslationOriginChanged
  id: SegmentsTranslationOriginChanged
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: SegmentsTranslationOriginChanged
  nameWithType: Document.SegmentsTranslationOriginChanged
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SegmentsTranslationOriginChanged
  type: Event
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nThe event is triggered when a TranslationOrigin is changed for a Segment.\n"
  syntax:
    content: public event EventHandler SegmentsTranslationOriginChanged
    return:
      type: System.EventHandler
    content.vb: Public Event SegmentsTranslationOriginChanged As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveSegmentContentIsReady
  commentId: E:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveSegmentContentIsReady
  id: ActiveSegmentContentIsReady
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: ActiveSegmentContentIsReady
  nameWithType: Document.ActiveSegmentContentIsReady
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveSegmentContentIsReady
  type: Event
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nThe event is triggered when the content for the active segment is ready and it can be modified by a third party application.\n"
  syntax:
    content: public event EventHandler ActiveSegmentContentIsReady
    return:
      type: System.EventHandler
    content.vb: Public Event ActiveSegmentContentIsReady As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveSegmentChanged
  commentId: E:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveSegmentChanged
  id: ActiveSegmentChanged
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: ActiveSegmentChanged
  nameWithType: Document.ActiveSegmentChanged
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveSegmentChanged
  type: Event
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nTriggered when the active segment is changed.\n"
  syntax:
    content: public event EventHandler ActiveSegmentChanged
    return:
      type: System.EventHandler
    content.vb: Public Event ActiveSegmentChanged As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFileChanged
  commentId: E:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFileChanged
  id: ActiveFileChanged
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: ActiveFileChanged
  nameWithType: Document.ActiveFileChanged
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFileChanged
  type: Event
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nTriggered when the active file is changed. \n"
  syntax:
    content: public event EventHandler ActiveFileChanged
    return:
      type: System.EventHandler
    content.vb: Public Event ActiveFileChanged As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFilePropertiesChanged
  commentId: E:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFilePropertiesChanged
  id: ActiveFilePropertiesChanged
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: ActiveFilePropertiesChanged
  nameWithType: Document.ActiveFilePropertiesChanged
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFilePropertiesChanged
  type: Event
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nTriggered when the properties of the active file are changed\n"
  syntax:
    content: public event EventHandler ActiveFilePropertiesChanged
    return:
      type: System.EventHandler
    content.vb: Public Event ActiveFilePropertiesChanged As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ContentChanged
  commentId: E:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ContentChanged
  id: ContentChanged
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: ContentChanged
  nameWithType: Document.ContentChanged
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ContentChanged
  type: Event
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nTriggered when document content is changed.\n"
  syntax:
    content: public event EventHandler<DocumentContentEventArgs> ContentChanged
    return:
      type: System.EventHandler{Sdl.TranslationStudioAutomation.IntegrationApi.DocumentContentEventArgs}
    content.vb: Public Event ContentChanged As EventHandler(Of DocumentContentEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DocumentFilterChanged
  commentId: E:Sdl.TranslationStudioAutomation.IntegrationApi.Document.DocumentFilterChanged
  id: DocumentFilterChanged
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  langs:
  - csharp
  - vb
  name: DocumentFilterChanged
  nameWithType: Document.DocumentFilterChanged
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DocumentFilterChanged
  type: Event
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi
  summary: "\nTriggered when the document filter has changed.\n"
  syntax:
    content: public event EventHandler<DocumentFilterEventArgs> DocumentFilterChanged
    return:
      type: System.EventHandler{Sdl.TranslationStudioAutomation.IntegrationApi.DocumentFilterEventArgs}
    content.vb: Public Event DocumentFilterChanged As EventHandler(Of DocumentFilterEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi
  commentId: N:Sdl.TranslationStudioAutomation.IntegrationApi
  isExternal: true
  name: Sdl.TranslationStudioAutomation.IntegrationApi
  nameWithType: Sdl.TranslationStudioAutomation.IntegrationApi
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetCommentsFromSegment*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetCommentsFromSegment
  isExternal: true
  name: GetCommentsFromSegment
  nameWithType: Document.GetCommentsFromSegment
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetCommentsFromSegment
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.IComment}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.NativeApi.IComment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IComment>
  nameWithType: IEnumerable<IComment>
  fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.NativeApi.IComment>
  nameWithType.vb: IEnumerable(Of IComment)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.NativeApi.IComment)
  name.vb: IEnumerable(Of IComment)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IComment
    name: IComment
    nameWithType: IComment
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IComment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.NativeApi.IComment
    name: IComment
    nameWithType: IComment
    fullName: Sdl.FileTypeSupport.Framework.NativeApi.IComment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
  isExternal: true
  name: ISegmentPair
  nameWithType: ISegmentPair
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnSegment*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnSegment
  isExternal: true
  name: AddCommentOnSegment
  nameWithType: Document.AddCommentOnSegment
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnSegment
- uid: Sdl.FileTypeSupport.Framework.NativeApi.Severity
  isExternal: true
  name: Severity
  nameWithType: Severity
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.Severity
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnTargetSelection*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnTargetSelection
  isExternal: true
  name: AddCommentOnTargetSelection
  nameWithType: Document.AddCommentOnTargetSelection
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.AddCommentOnTargetSelection
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateCommentOnSegment*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateCommentOnSegment
  isExternal: true
  name: UpdateCommentOnSegment
  nameWithType: Document.UpdateCommentOnSegment
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateCommentOnSegment
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IComment
  isExternal: true
  name: IComment
  nameWithType: IComment
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IComment
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteCommentOnSegment*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteCommentOnSegment
  isExternal: true
  name: DeleteCommentOnSegment
  nameWithType: Document.DeleteCommentOnSegment
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteCommentOnSegment
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteAllCommentsOnSegment*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteAllCommentsOnSegment
  isExternal: true
  name: DeleteAllCommentsOnSegment
  nameWithType: Document.DeleteAllCommentsOnSegment
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DeleteAllCommentsOnSegment
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeConfirmationLevelOnSegment*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeConfirmationLevelOnSegment
  isExternal: true
  name: ChangeConfirmationLevelOnSegment
  nameWithType: Document.ChangeConfirmationLevelOnSegment
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeConfirmationLevelOnSegment
- uid: Sdl.Core.Globalization.ConfirmationLevel
  isExternal: true
  name: ConfirmationLevel
  nameWithType: ConfirmationLevel
  fullName: Sdl.Core.Globalization.ConfirmationLevel
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeTranslationOriginOnSegment*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeTranslationOriginOnSegment
  isExternal: true
  name: ChangeTranslationOriginOnSegment
  nameWithType: Document.ChangeTranslationOriginOnSegment
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ChangeTranslationOriginOnSegment
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetActiveSegmentPair*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetActiveSegmentPair
  isExternal: true
  name: GetActiveSegmentPair
  nameWithType: Document.GetActiveSegmentPair
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetActiveSegmentPair
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair
  isExternal: true
  name: SetActiveSegmentPair
  nameWithType: Document.SetActiveSegmentPair
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SetActiveSegmentPair
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.ProjectAutomation.Core.ProjectFile
  isExternal: true
  name: ProjectFile
  nameWithType: ProjectFile
  fullName: Sdl.ProjectAutomation.Core.ProjectFile
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPairs*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPairs
  isExternal: true
  name: ProcessSegmentPairs
  nameWithType: Document.ProcessSegmentPairs
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPairs
- uid: System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.ComponentModel.CancelEventArgs}
  commentId: T:System.Action{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair,System.ComponentModel.CancelEventArgs}
  parent: System
  definition: System.Action`2
  name: Action<ISegmentPair, CancelEventArgs>
  nameWithType: Action<ISegmentPair, CancelEventArgs>
  fullName: System.Action<Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair, System.ComponentModel.CancelEventArgs>
  nameWithType.vb: Action(Of ISegmentPair, CancelEventArgs)
  fullName.vb: System.Action(Of Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair, System.ComponentModel.CancelEventArgs)
  name.vb: Action(Of ISegmentPair, CancelEventArgs)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
    name: ISegmentPair
    nameWithType: ISegmentPair
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.CancelEventArgs
    name: CancelEventArgs
    nameWithType: CancelEventArgs
    fullName: System.ComponentModel.CancelEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
    name: ISegmentPair
    nameWithType: ISegmentPair
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.CancelEventArgs
    name: CancelEventArgs
    nameWithType: CancelEventArgs
    fullName: System.ComponentModel.CancelEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPair*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPair
  isExternal: true
  name: ProcessSegmentPair
  nameWithType: Document.ProcessSegmentPair
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ProcessSegmentPair
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.TryTranslateActiveSegment*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.TryTranslateActiveSegment
  isExternal: true
  name: TryTranslateActiveSegment
  nameWithType: Document.TryTranslateActiveSegment
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.TryTranslateActiveSegment
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetSegmentPairsFromParagraph*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetSegmentPairsFromParagraph
  isExternal: true
  name: GetSegmentPairsFromParagraph
  nameWithType: Document.GetSegmentPairsFromParagraph
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.GetSegmentPairsFromParagraph
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
  isExternal: true
  name: ParagraphUnitId
  nameWithType: ParagraphUnitId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
- uid: System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISegmentPair>
  nameWithType: IEnumerable<ISegmentPair>
  fullName: System.Collections.Generic.IEnumerable<Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair>
  nameWithType.vb: IEnumerable(Of ISegmentPair)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair)
  name.vb: IEnumerable(Of ISegmentPair)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
    name: ISegmentPair
    nameWithType: ISegmentPair
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
    name: ISegmentPair
    nameWithType: ISegmentPair
    fullName: Sdl.FileTypeSupport.Framework.BilingualApi.ISegmentPair
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateParagraphUnitProperties*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateParagraphUnitProperties
  isExternal: true
  name: UpdateParagraphUnitProperties
  nameWithType: Document.UpdateParagraphUnitProperties
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateParagraphUnitProperties
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
  isExternal: true
  name: IParagraphUnitProperties
  nameWithType: IParagraphUnitProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPairProperties*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPairProperties
  isExternal: true
  name: UpdateSegmentPairProperties
  nameWithType: Document.UpdateSegmentPairProperties
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPairProperties
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
  isExternal: true
  name: ISegmentPairProperties
  nameWithType: ISegmentPairProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPair*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPair
  isExternal: true
  name: UpdateSegmentPair
  nameWithType: Document.UpdateSegmentPair
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.UpdateSegmentPair
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ApplyFilterOnSegments*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ApplyFilterOnSegments
  isExternal: true
  name: ApplyFilterOnSegments
  nameWithType: Document.ApplyFilterOnSegments
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ApplyFilterOnSegments
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
  isExternal: true
  name: IDisplayFilter
  nameWithType: IDisplayFilter
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters.IDisplayFilter
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
  commentId: N:Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
  isExternal: true
  name: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
  nameWithType: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DisplayFilters
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Project*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.Project
  isExternal: true
  name: Project
  nameWithType: Document.Project
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Project
- uid: Sdl.ProjectAutomation.FileBased.FileBasedProject
  isExternal: true
  name: FileBasedProject
  nameWithType: FileBasedProject
  fullName: Sdl.ProjectAutomation.FileBased.FileBasedProject
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Files*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.Files
  isExternal: true
  name: Files
  nameWithType: Document.Files
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Files
- uid: System.Collections.Generic.IEnumerable{Sdl.ProjectAutomation.Core.ProjectFile}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.ProjectAutomation.Core.ProjectFile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ProjectFile>
  nameWithType: IEnumerable<ProjectFile>
  fullName: System.Collections.Generic.IEnumerable<Sdl.ProjectAutomation.Core.ProjectFile>
  nameWithType.vb: IEnumerable(Of ProjectFile)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.ProjectAutomation.Core.ProjectFile)
  name.vb: IEnumerable(Of ProjectFile)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectAutomation.Core.ProjectFile
    name: ProjectFile
    nameWithType: ProjectFile
    fullName: Sdl.ProjectAutomation.Core.ProjectFile
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectAutomation.Core.ProjectFile
    name: ProjectFile
    nameWithType: ProjectFile
    fullName: Sdl.ProjectAutomation.Core.ProjectFile
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Mode*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.Mode
  isExternal: true
  name: Mode
  nameWithType: Document.Mode
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Mode
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.EditingMode
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.EditingMode
  parent: Sdl.TranslationStudioAutomation.IntegrationApi
  isExternal: true
  name: EditingMode
  nameWithType: EditingMode
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.EditingMode
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.PropertiesFactory*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.PropertiesFactory
  isExternal: true
  name: PropertiesFactory
  nameWithType: Document.PropertiesFactory
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.PropertiesFactory
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
  isExternal: true
  name: IPropertiesFactory
  nameWithType: IPropertiesFactory
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ItemFactory*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ItemFactory
  isExternal: true
  name: ItemFactory
  nameWithType: Document.ItemFactory
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ItemFactory
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory
  isExternal: true
  name: IDocumentItemFactory
  nameWithType: IDocumentItemFactory
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFile*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFile
  isExternal: true
  name: ActiveFile
  nameWithType: Document.ActiveFile
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFile
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFileProperties*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFileProperties
  isExternal: true
  name: ActiveFileProperties
  nameWithType: Document.ActiveFileProperties
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveFileProperties
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
  isExternal: true
  name: IFileProperties
  nameWithType: IFileProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveSegmentPair*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveSegmentPair
  isExternal: true
  name: ActiveSegmentPair
  nameWithType: Document.ActiveSegmentPair
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.ActiveSegmentPair
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.IsTranslationProviderAvailable*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.IsTranslationProviderAvailable
  isExternal: true
  name: IsTranslationProviderAvailable
  nameWithType: Document.IsTranslationProviderAvailable
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.IsTranslationProviderAvailable
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DisplayFilter*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.DisplayFilter
  isExternal: true
  name: DisplayFilter
  nameWithType: Document.DisplayFilter
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.DisplayFilter
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Selection*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.Selection
  isExternal: true
  name: Selection
  nameWithType: Document.Selection
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.Selection
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.DocumentSelection
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.DocumentSelection
  parent: Sdl.TranslationStudioAutomation.IntegrationApi
  isExternal: true
  name: DocumentSelection
  nameWithType: DocumentSelection
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DocumentSelection
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.FocusedDocumentContent*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.FocusedDocumentContent
  isExternal: true
  name: FocusedDocumentContent
  nameWithType: Document.FocusedDocumentContent
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.FocusedDocumentContent
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.FocusedDocumentContent
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.FocusedDocumentContent
  parent: Sdl.TranslationStudioAutomation.IntegrationApi
  isExternal: true
  name: FocusedDocumentContent
  nameWithType: FocusedDocumentContent
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.FocusedDocumentContent
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SegmentPairs*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.SegmentPairs
  isExternal: true
  name: SegmentPairs
  nameWithType: Document.SegmentPairs
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.SegmentPairs
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.FilteredSegmentPairs*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.FilteredSegmentPairs
  isExternal: true
  name: FilteredSegmentPairs
  nameWithType: Document.FilteredSegmentPairs
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.FilteredSegmentPairs
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.TotalSegmentPairsCount*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.TotalSegmentPairsCount
  isExternal: true
  name: TotalSegmentPairsCount
  nameWithType: Document.TotalSegmentPairsCount
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.TotalSegmentPairsCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document.FilteredSegmentPairsCount*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Document.FilteredSegmentPairsCount
  isExternal: true
  name: FilteredSegmentPairsCount
  nameWithType: Document.FilteredSegmentPairsCount
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document.FilteredSegmentPairsCount
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.EventHandler{Sdl.TranslationStudioAutomation.IntegrationApi.DocumentContentEventArgs}
  commentId: T:System.EventHandler{Sdl.TranslationStudioAutomation.IntegrationApi.DocumentContentEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<DocumentContentEventArgs>
  nameWithType: EventHandler<DocumentContentEventArgs>
  fullName: System.EventHandler<Sdl.TranslationStudioAutomation.IntegrationApi.DocumentContentEventArgs>
  nameWithType.vb: EventHandler(Of DocumentContentEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.TranslationStudioAutomation.IntegrationApi.DocumentContentEventArgs)
  name.vb: EventHandler(Of DocumentContentEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.TranslationStudioAutomation.IntegrationApi.DocumentContentEventArgs
    name: DocumentContentEventArgs
    nameWithType: DocumentContentEventArgs
    fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DocumentContentEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.TranslationStudioAutomation.IntegrationApi.DocumentContentEventArgs
    name: DocumentContentEventArgs
    nameWithType: DocumentContentEventArgs
    fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DocumentContentEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.TranslationStudioAutomation.IntegrationApi.DocumentFilterEventArgs}
  commentId: T:System.EventHandler{Sdl.TranslationStudioAutomation.IntegrationApi.DocumentFilterEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<DocumentFilterEventArgs>
  nameWithType: EventHandler<DocumentFilterEventArgs>
  fullName: System.EventHandler<Sdl.TranslationStudioAutomation.IntegrationApi.DocumentFilterEventArgs>
  nameWithType.vb: EventHandler(Of DocumentFilterEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.TranslationStudioAutomation.IntegrationApi.DocumentFilterEventArgs)
  name.vb: EventHandler(Of DocumentFilterEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.TranslationStudioAutomation.IntegrationApi.DocumentFilterEventArgs
    name: DocumentFilterEventArgs
    nameWithType: DocumentFilterEventArgs
    fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DocumentFilterEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.TranslationStudioAutomation.IntegrationApi.DocumentFilterEventArgs
    name: DocumentFilterEventArgs
    nameWithType: DocumentFilterEventArgs
    fullName: Sdl.TranslationStudioAutomation.IntegrationApi.DocumentFilterEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
