### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions
  commentId: T:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions
  id: ProjectFileExtensions
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  children:
  - Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.GetAssignedToMeFiles(Sdl.ProjectApi.IProjectFile[])
  - Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.IsChildFile(Sdl.ProjectApi.IProjectFile)
  - Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.IsTaskFileAssignedToMe(Sdl.ProjectApi.IProjectFile)
  - Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.OpenContainingFolder(Sdl.ProjectApi.IProjectFile[])
  - Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.PromptOpenContainingFolder(Sdl.ProjectApi.IProjectFile[],System.String)
  - Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.SaveChildFiles(Sdl.ProjectApi.IMergedTranslatableFile)
  langs:
  - csharp
  - vb
  name: ProjectFileExtensions
  nameWithType: ProjectFileExtensions
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions
  type: Class
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  syntax:
    content: public static class ProjectFileExtensions
    content.vb: Public Module ProjectFileExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.GetAssignedToMeFiles(Sdl.ProjectApi.IProjectFile[])
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.GetAssignedToMeFiles(Sdl.ProjectApi.IProjectFile[])
  id: GetAssignedToMeFiles(Sdl.ProjectApi.IProjectFile[])
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions
  langs:
  - csharp
  - vb
  name: GetAssignedToMeFiles(IProjectFile[])
  nameWithType: ProjectFileExtensions.GetAssignedToMeFiles(IProjectFile[])
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.GetAssignedToMeFiles(Sdl.ProjectApi.IProjectFile[])
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  syntax:
    content: public static IProjectFile[] GetAssignedToMeFiles(IProjectFile[] projectFiles)
    parameters:
    - id: projectFiles
      type: Sdl.ProjectApi.IProjectFile[]
    return:
      type: Sdl.ProjectApi.IProjectFile[]
    content.vb: Public Shared Function GetAssignedToMeFiles(projectFiles As IProjectFile()) As IProjectFile()
  overload: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.GetAssignedToMeFiles*
  nameWithType.vb: ProjectFileExtensions.GetAssignedToMeFiles(IProjectFile())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.GetAssignedToMeFiles(Sdl.ProjectApi.IProjectFile())
  name.vb: GetAssignedToMeFiles(IProjectFile())
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.IsChildFile(Sdl.ProjectApi.IProjectFile)
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.IsChildFile(Sdl.ProjectApi.IProjectFile)
  id: IsChildFile(Sdl.ProjectApi.IProjectFile)
  isExtensionMethod: true
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions
  langs:
  - csharp
  - vb
  name: IsChildFile(IProjectFile)
  nameWithType: ProjectFileExtensions.IsChildFile(IProjectFile)
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.IsChildFile(Sdl.ProjectApi.IProjectFile)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  syntax:
    content: public static bool IsChildFile(this IProjectFile projectFile)
    parameters:
    - id: projectFile
      type: Sdl.ProjectApi.IProjectFile
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsChildFile(projectFile As IProjectFile) As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.IsChildFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.IsTaskFileAssignedToMe(Sdl.ProjectApi.IProjectFile)
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.IsTaskFileAssignedToMe(Sdl.ProjectApi.IProjectFile)
  id: IsTaskFileAssignedToMe(Sdl.ProjectApi.IProjectFile)
  isExtensionMethod: true
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions
  langs:
  - csharp
  - vb
  name: IsTaskFileAssignedToMe(IProjectFile)
  nameWithType: ProjectFileExtensions.IsTaskFileAssignedToMe(IProjectFile)
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.IsTaskFileAssignedToMe(Sdl.ProjectApi.IProjectFile)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  syntax:
    content: public static bool IsTaskFileAssignedToMe(this IProjectFile file)
    parameters:
    - id: file
      type: Sdl.ProjectApi.IProjectFile
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsTaskFileAssignedToMe(file As IProjectFile) As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.IsTaskFileAssignedToMe*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.SaveChildFiles(Sdl.ProjectApi.IMergedTranslatableFile)
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.SaveChildFiles(Sdl.ProjectApi.IMergedTranslatableFile)
  id: SaveChildFiles(Sdl.ProjectApi.IMergedTranslatableFile)
  isExtensionMethod: true
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions
  langs:
  - csharp
  - vb
  name: SaveChildFiles(IMergedTranslatableFile)
  nameWithType: ProjectFileExtensions.SaveChildFiles(IMergedTranslatableFile)
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.SaveChildFiles(Sdl.ProjectApi.IMergedTranslatableFile)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  syntax:
    content: public static void SaveChildFiles(this IMergedTranslatableFile mergedFile)
    parameters:
    - id: mergedFile
      type: Sdl.ProjectApi.IMergedTranslatableFile
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SaveChildFiles(mergedFile As IMergedTranslatableFile)
  overload: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.SaveChildFiles*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.OpenContainingFolder(Sdl.ProjectApi.IProjectFile[])
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.OpenContainingFolder(Sdl.ProjectApi.IProjectFile[])
  id: OpenContainingFolder(Sdl.ProjectApi.IProjectFile[])
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions
  langs:
  - csharp
  - vb
  name: OpenContainingFolder(IProjectFile[])
  nameWithType: ProjectFileExtensions.OpenContainingFolder(IProjectFile[])
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.OpenContainingFolder(Sdl.ProjectApi.IProjectFile[])
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  syntax:
    content: public static void OpenContainingFolder(IProjectFile[] files)
    parameters:
    - id: files
      type: Sdl.ProjectApi.IProjectFile[]
    content.vb: Public Shared Sub OpenContainingFolder(files As IProjectFile())
  overload: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.OpenContainingFolder*
  nameWithType.vb: ProjectFileExtensions.OpenContainingFolder(IProjectFile())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.OpenContainingFolder(Sdl.ProjectApi.IProjectFile())
  name.vb: OpenContainingFolder(IProjectFile())
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.PromptOpenContainingFolder(Sdl.ProjectApi.IProjectFile[],System.String)
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.PromptOpenContainingFolder(Sdl.ProjectApi.IProjectFile[],System.String)
  id: PromptOpenContainingFolder(Sdl.ProjectApi.IProjectFile[],System.String)
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions
  langs:
  - csharp
  - vb
  name: PromptOpenContainingFolder(IProjectFile[], String)
  nameWithType: ProjectFileExtensions.PromptOpenContainingFolder(IProjectFile[], String)
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.PromptOpenContainingFolder(Sdl.ProjectApi.IProjectFile[], System.String)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  syntax:
    content: public static void PromptOpenContainingFolder(IProjectFile[] files, string question)
    parameters:
    - id: files
      type: Sdl.ProjectApi.IProjectFile[]
    - id: question
      type: System.String
    content.vb: Public Shared Sub PromptOpenContainingFolder(files As IProjectFile(), question As String)
  overload: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.PromptOpenContainingFolder*
  nameWithType.vb: ProjectFileExtensions.PromptOpenContainingFolder(IProjectFile(), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.PromptOpenContainingFolder(Sdl.ProjectApi.IProjectFile(), System.String)
  name.vb: PromptOpenContainingFolder(IProjectFile(), String)
references:
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  commentId: N:Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  isExternal: true
  name: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  nameWithType: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.GetAssignedToMeFiles*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.GetAssignedToMeFiles
  isExternal: true
  name: GetAssignedToMeFiles
  nameWithType: ProjectFileExtensions.GetAssignedToMeFiles
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.GetAssignedToMeFiles
- uid: Sdl.ProjectApi.IProjectFile[]
  isExternal: true
  name: IProjectFile[]
  nameWithType: IProjectFile[]
  fullName: Sdl.ProjectApi.IProjectFile[]
  nameWithType.vb: IProjectFile()
  fullName.vb: Sdl.ProjectApi.IProjectFile()
  name.vb: IProjectFile()
  spec.csharp:
  - uid: Sdl.ProjectApi.IProjectFile
    name: IProjectFile
    nameWithType: IProjectFile
    fullName: Sdl.ProjectApi.IProjectFile
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectApi.IProjectFile
    name: IProjectFile
    nameWithType: IProjectFile
    fullName: Sdl.ProjectApi.IProjectFile
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.IsChildFile*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.IsChildFile
  isExternal: true
  name: IsChildFile
  nameWithType: ProjectFileExtensions.IsChildFile
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.IsChildFile
- uid: Sdl.ProjectApi.IProjectFile
  isExternal: true
  name: IProjectFile
  nameWithType: IProjectFile
  fullName: Sdl.ProjectApi.IProjectFile
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.IsTaskFileAssignedToMe*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.IsTaskFileAssignedToMe
  isExternal: true
  name: IsTaskFileAssignedToMe
  nameWithType: ProjectFileExtensions.IsTaskFileAssignedToMe
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.IsTaskFileAssignedToMe
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.SaveChildFiles*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.SaveChildFiles
  isExternal: true
  name: SaveChildFiles
  nameWithType: ProjectFileExtensions.SaveChildFiles
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.SaveChildFiles
- uid: Sdl.ProjectApi.IMergedTranslatableFile
  isExternal: true
  name: IMergedTranslatableFile
  nameWithType: IMergedTranslatableFile
  fullName: Sdl.ProjectApi.IMergedTranslatableFile
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.OpenContainingFolder*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.OpenContainingFolder
  isExternal: true
  name: OpenContainingFolder
  nameWithType: ProjectFileExtensions.OpenContainingFolder
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.OpenContainingFolder
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.PromptOpenContainingFolder*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.PromptOpenContainingFolder
  isExternal: true
  name: PromptOpenContainingFolder
  nameWithType: ProjectFileExtensions.PromptOpenContainingFolder
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectFileExtensions.PromptOpenContainingFolder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
