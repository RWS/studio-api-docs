### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  commentId: T:Sdl.DesktopEditor.EditorApi.IBilingualDocument
  id: IBilingualDocument
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.ApplySegmentPair(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentChanged
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentInput
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentOutput
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.Disposing
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.DocumentProperties
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.DocumentPropertiesChanged
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.FilePropertiesChanged
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.IsDirty
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.ItemFactory
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.LockSegment(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.ParagraphUnitPropertiesChanged
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.PropertiesFactory
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.RemoveSegmentPair(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.SegmentPropertiesChanged
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.Source
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.Target
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.UndoBuffer
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.UnlockSegment(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateDocumentProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties)
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateParagraphUnitProperties(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  - Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateSegmentProperties(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  langs:
  - csharp
  - vb
  name: IBilingualDocument
  nameWithType: IBilingualDocument
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  type: Interface
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nContains all the data required to display a document in the side-by-side edit control.\n"
  remarks: "\n<p>\nThe bilingual document contains separate documents for the source and the target edit controls, \nallowing them to show different content. Note however that all nodes in both the source and the \ntarget document do refer to the very same filter framework objects for the actual data, they just \nprovide different wrappers for accessing it.\n</p>\n<p>\nThe document must be explicitly disposed of when no longer needed. Disposing the document raises \nthe <xref href=\"Sdl.DesktopEditor.EditorApi.IBilingualDocument.Disposing\" data-throw-if-not-resolved=\"false\"></xref> event, which should be handled by controls using the document in case \nthe document is disposed of before the control.\n</p>\n"
  syntax:
    content: 'public interface IBilingualDocument : IDisposable'
    content.vb: >-
      Public Interface IBilingualDocument
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateParagraphUnitProperties(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  commentId: M:Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateParagraphUnitProperties(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  id: UpdateParagraphUnitProperties(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: UpdateParagraphUnitProperties(IParagraphUnitProperties)
  nameWithType: IBilingualDocument.UpdateParagraphUnitProperties(IParagraphUnitProperties)
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateParagraphUnitProperties(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nUse this method to explicitly update ParagraphUnit properties (e.g. changes to status, edited comments etc.).\n"
  remarks: "\n<p>The ParagraphUnit ID is used to identify the ParagraphUnit to update in the document.</p>\n<p>Note that ParagraphUnit properties changes are contained in the Undo buffer, they\ncan be reversed by the undo commands.</p>\n<example>\nThis code example shows how to properly change the status of a ParagraphUnit. \n(The ParagraphUnit node can be from the source or the target document, it does not matter\nas both reference the same underlying ParagraphUnitProperties object from the filter framework.)\n<pre><code>void ChangeParagraphUnitStatus(IBilingualDocument doc, IParagraphUnitContainerNode paragraphUnitNode, ParagraphUnitStatus newStatus)\n{\n  IParagraphUnitProperties properties = (IParagraphUnitProperties)paragraphUnitNode.ParagraphUnit.Properties.Clone();\n  properties.Status = newStatus;\n  doc.UpdateParagraphUnitProperties(properties);\n}</code></pre>\n</example>\n"
  syntax:
    content: void UpdateParagraphUnitProperties(IParagraphUnitProperties properties)
    parameters:
    - id: properties
      type: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
      description: "\nUpdated properties for the ParagraphUnit.\n<p>This should be a clone of a ParagraphUnit properties object\nfor an existing ParagraphUnit in the document, with relevant changes applied.</p>\n"
    content.vb: Sub UpdateParagraphUnitProperties(properties As IParagraphUnitProperties)
  overload: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateParagraphUnitProperties*
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateDocumentProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties)
  commentId: M:Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateDocumentProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties)
  id: UpdateDocumentProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties)
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: UpdateDocumentProperties(IDocumentProperties)
  nameWithType: IBilingualDocument.UpdateDocumentProperties(IDocumentProperties)
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateDocumentProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nUse this method to explicitly update document properties (e.g. change the target language) to ensure \nthat both the source and target documents get properly notified of the changes.\n"
  remarks: "\n<p>\nChanges to the source and/or target language will be propagated to all paragraph units in the document.\n</p>\n<example>\nThis code example shows how to properly change the target language of a document.\n<pre><code>void ChangeTargetLanguage(IBilingualDocument doc, Language newTargetLanguage)\n{\n  IDocumentProperties properties = (IDocumentProperties)doc.DocumentProperties.Clone();\n  properties.TargetLanguage = newTargetLanguage;\n  doc.UpdateDocumentProperties(properties);\n}</code></pre>\n</example>\n"
  syntax:
    content: void UpdateDocumentProperties(IDocumentProperties properties)
    parameters:
    - id: properties
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
      description: "\nUpdated properties for the document.\n<p>\nThis should be a clone of a document properties object for this document (accessible through \nthe <xref href=\"Sdl.DesktopEditor.EditorApi.IBilingualDocument.DocumentProperties\" data-throw-if-not-resolved=\"false\"></xref> property) with relevant changes applied.\n</p>\n"
    content.vb: Sub UpdateDocumentProperties(properties As IDocumentProperties)
  overload: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateDocumentProperties*
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  commentId: M:Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  id: UpdateFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: UpdateFileProperties(IFileProperties)
  nameWithType: IBilingualDocument.UpdateFileProperties(IFileProperties)
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nUse this method to explicitly update file properties (e.g. changes to comments etc.) to ensure that \nboth the source and target documents get properly notified of the changes.\n"
  remarks: "\n<p>The file ID is used to identify the file to update in the document.\nThis is expected to be unique, and should never change.</p>\n<p>Note that file properties changes are contained in the Undo buffer, so they\ncan be reversed by the undo commands.</p>\n<example>\nThis code example shows how to properly change the PreferredTargetEncoding of a file.\n(The file container node can be from the source or the target document, it does not matter\nas both reference the same underlying file properties object from the filter framework.)\n<pre><code>void ChangeTargetEncoding(IBilingualDocument doc, IFileContainerNode fileNode, Codepage newTargetEncoding)\n{\n  IFileProperties properties = (IFileProperties)file.FileProperties.Clone();\n  properties.FileConversionProperties.PreferredTargetEncoding = newTargetEncoding;\n  doc.UpdateFileProperties(properties);\n}</code></pre>\n</example>\n"
  syntax:
    content: void UpdateFileProperties(IFileProperties properties)
    parameters:
    - id: properties
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
      description: "\nUpdated properties for the file.\n<p>\nThis should be a clone of a file properties object for an existing file node in the source or \ntarget document, with relevant changes applied.\n</p>\n"
    content.vb: Sub UpdateFileProperties(properties As IFileProperties)
  overload: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateFileProperties*
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateSegmentProperties(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  commentId: M:Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateSegmentProperties(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  id: UpdateSegmentProperties(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: UpdateSegmentProperties(ParagraphUnitId, ISegmentPairProperties)
  nameWithType: IBilingualDocument.UpdateSegmentProperties(ParagraphUnitId, ISegmentPairProperties)
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateSegmentProperties(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId, Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nUse this method to explicitly update segment pair properties (e.g. changes\nto translation origin etc.) to ensure that both the source and target\ndocuments get properly notified of the changes.\n"
  remarks: "\n<p>\nThe Paragraph Unit ID plus the segment ID is used to identify the segment to update.\nThe Paragraph Unit ID is unique, and the segment ID should be unique within the source/target \nof the ParagraphUnit. These IDs should never change.\n</p>\n<p>\nNote that segment pair properties changes are contained in the Undo buffer, so they\ncan be reversed by the undo commands.\n</p>\n<example>\nThis code example shows how to properly change the translation origin of a segment.\n(The segment node can be from the source or the target, it does not matter\nas both reference the same underlying segment pair properties object from the filter framework.)\n<pre><code>void SetToTranslated(IBilingualDocument doc, ISegmentContainerNode segmentNode)\n{\n  ISegmentPairProperties properties = (ISegmentPairProperties)node.Segment.Properties.Clone();\n  properties.TranslationOrigin.OriginType = DefaultTranslationOrigin.Interactive;\n  doc.UpdateSegmentProperties(node.Segment.ParentTransUnit.Properties.TransUnitId, properties);\n}</code></pre>\n</example>\n"
  syntax:
    content: void UpdateSegmentProperties(ParagraphUnitId paragraphUnitId, ISegmentPairProperties properties)
    parameters:
    - id: paragraphUnitId
      type: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
      description: ID of the Paragraph Unit where the segment appears.
    - id: properties
      type: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
      description: "\nUpdated properties for the segment pair.\n<p>\nThis should be a clone of a segment pair properties object\nfor an existing segment pair in the document, with relevant changes applied.\n</p>\n"
    content.vb: Sub UpdateSegmentProperties(paragraphUnitId As ParagraphUnitId, properties As ISegmentPairProperties)
  overload: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateSegmentProperties*
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.LockSegment(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  commentId: M:Sdl.DesktopEditor.EditorApi.IBilingualDocument.LockSegment(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  id: LockSegment(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: LockSegment(ParagraphUnitId, SegmentId)
  nameWithType: IBilingualDocument.LockSegment(ParagraphUnitId, SegmentId)
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.LockSegment(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId, Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nUse this method to lock a segment pair (disable it from interactive editing).\n"
  syntax:
    content: void LockSegment(ParagraphUnitId paragraphUnitId, SegmentId segmentId)
    parameters:
    - id: paragraphUnitId
      type: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
      description: The paragraph unit containing the segment.
    - id: segmentId
      type: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
      description: The segment to lock.
    content.vb: Sub LockSegment(paragraphUnitId As ParagraphUnitId, segmentId As SegmentId)
  overload: Sdl.DesktopEditor.EditorApi.IBilingualDocument.LockSegment*
  exceptions:
  - type: Sdl.DesktopEditor.EditorApi.EditException
    commentId: T:Sdl.DesktopEditor.EditorApi.EditException
    description: Thrown when the content inside the segment cannot be locked.
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UnlockSegment(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  commentId: M:Sdl.DesktopEditor.EditorApi.IBilingualDocument.UnlockSegment(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  id: UnlockSegment(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: UnlockSegment(ParagraphUnitId, SegmentId)
  nameWithType: IBilingualDocument.UnlockSegment(ParagraphUnitId, SegmentId)
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UnlockSegment(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId, Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nUse this method to unlock a segment pair (enable it for interactive editing).\n"
  syntax:
    content: void UnlockSegment(ParagraphUnitId paragraphUnitId, SegmentId segmentId)
    parameters:
    - id: paragraphUnitId
      type: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
      description: The paragraph unit containing the segment.
    - id: segmentId
      type: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
      description: The segment to unlock.
    content.vb: Sub UnlockSegment(paragraphUnitId As ParagraphUnitId, segmentId As SegmentId)
  overload: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UnlockSegment*
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.RemoveSegmentPair(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  commentId: M:Sdl.DesktopEditor.EditorApi.IBilingualDocument.RemoveSegmentPair(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  id: RemoveSegmentPair(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: RemoveSegmentPair(ParagraphUnitId, ISegmentPairProperties)
  nameWithType: IBilingualDocument.RemoveSegmentPair(ParagraphUnitId, ISegmentPairProperties)
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.RemoveSegmentPair(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId, Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nDelete the segment pair with the specified properties object from the source and target\ndocuments. All content inside the source and target segments is preserved and moved into their parent\ncontainers, only the segment containers are removed. \n"
  remarks: "\n<p>\nThis operation is added to the undo buffer.\n</p>\n<p>\nNote that this operation may change the row structure of the source and target edit controls, which\namong other things can mean that row numbers may change for existing rows in the document.\n</p>\n<p>\nThe document active range of the source and target documents is preserved during this operation - \nafter completion the active range will span the same (or corresponding) content in the document \neven if content container nodes have been merged and/or split in the process.\n</p>\n"
  syntax:
    content: void RemoveSegmentPair(ParagraphUnitId paragraphUnitId, ISegmentPairProperties segmentPairProperties)
    parameters:
    - id: paragraphUnitId
      type: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
      description: The ID of the paragraph unit containing the segment.
    - id: segmentPairProperties
      type: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
      description: >-
        The properties of the segment pair that is to be removed. These must

        be the properties of an existing segment pair in the paragraph.
    content.vb: Sub RemoveSegmentPair(paragraphUnitId As ParagraphUnitId, segmentPairProperties As ISegmentPairProperties)
  overload: Sdl.DesktopEditor.EditorApi.IBilingualDocument.RemoveSegmentPair*
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ApplySegmentPair(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  commentId: M:Sdl.DesktopEditor.EditorApi.IBilingualDocument.ApplySegmentPair(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  id: ApplySegmentPair(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: ApplySegmentPair(ISegmentPairProperties)
  nameWithType: IBilingualDocument.ApplySegmentPair(ISegmentPairProperties)
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ApplySegmentPair(Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nInsert a new segment pair with the specified properties spanning the current active ranges \nin the source and target documents.\n"
  syntax:
    content: void ApplySegmentPair(ISegmentPairProperties segmentPairProperties)
    parameters:
    - id: segmentPairProperties
      type: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
      description: >-
        Properties for the new segment pair, they must not use the

        same segment ID as any existing segment in the paragraph.
    content.vb: Sub ApplySegmentPair(segmentPairProperties As ISegmentPairProperties)
  overload: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ApplySegmentPair*
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.Source
  commentId: P:Sdl.DesktopEditor.EditorApi.IBilingualDocument.Source
  id: Source
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: IBilingualDocument.Source
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.Source
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nDocument used in the Source edit control.\n"
  syntax:
    content: IFrameworkDocument Source { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IFrameworkDocument
    content.vb: ReadOnly Property Source As IFrameworkDocument
  overload: Sdl.DesktopEditor.EditorApi.IBilingualDocument.Source*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.Target
  commentId: P:Sdl.DesktopEditor.EditorApi.IBilingualDocument.Target
  id: Target
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: IBilingualDocument.Target
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.Target
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nDocument used in the target edit control.\n"
  syntax:
    content: IFrameworkDocument Target { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IFrameworkDocument
    content.vb: ReadOnly Property Target As IFrameworkDocument
  overload: Sdl.DesktopEditor.EditorApi.IBilingualDocument.Target*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UndoBuffer
  commentId: P:Sdl.DesktopEditor.EditorApi.IBilingualDocument.UndoBuffer
  id: UndoBuffer
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: UndoBuffer
  nameWithType: IBilingualDocument.UndoBuffer
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UndoBuffer
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nCommon undo buffer used by the bilingual document.  This buffer is common to the bilingual document, \nthe source and the target.  Calling the undo buffer directly in the source or target documents will\nrefer back to this undo buffer.\n"
  syntax:
    content: IUndoBuffer UndoBuffer { get; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IUndoBuffer
    content.vb: ReadOnly Property UndoBuffer As IUndoBuffer
  overload: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UndoBuffer*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.IsDirty
  commentId: P:Sdl.DesktopEditor.EditorApi.IBilingualDocument.IsDirty
  id: IsDirty
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: IsDirty
  nameWithType: IBilingualDocument.IsDirty
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.IsDirty
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nIf <code>true</code> this indicates that the document content has been changed since the last time this flag was reset.\n"
  remarks: "\n<p>\nThe edit control automatically sets this flag to <code>true</code> every time some content \nchanges in the editor (through API or user action).\n</p>\n<p>\nSet this flag to <code>false</code> when the document is saved. That allows you to keep track of whether any changes \nhave been made to it in order to determine whether the document will need to be saved again at a later point.\n</p>\n<p>\nSince the editor does not provide Open/Save operations it is the API client&apos;s responsibility\nto reset this flag after such operations.\n</p>\n"
  syntax:
    content: bool IsDirty { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsDirty As Boolean
  overload: Sdl.DesktopEditor.EditorApi.IBilingualDocument.IsDirty*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.DocumentProperties
  commentId: P:Sdl.DesktopEditor.EditorApi.IBilingualDocument.DocumentProperties
  id: DocumentProperties
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: DocumentProperties
  nameWithType: IBilingualDocument.DocumentProperties
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.DocumentProperties
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe filter framework properties for the document.\n"
  syntax:
    content: IDocumentProperties DocumentProperties { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
    content.vb: ReadOnly Property DocumentProperties As IDocumentProperties
  overload: Sdl.DesktopEditor.EditorApi.IBilingualDocument.DocumentProperties*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentInput
  commentId: P:Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentInput
  id: ContentInput
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: ContentInput
  nameWithType: IBilingualDocument.ContentInput
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentInput
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nProvides an implementation of a bilingual content processor that can be used to read content into the document\ne.g. when used with a filter framework <code>IMultiFileConverter</code>.\n"
  remarks: "\n<p>\nThe <xref href=\"Sdl.DesktopEditor.EditorApi.IBilingualDocument.ItemFactory\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Sdl.DesktopEditor.EditorApi.IBilingualDocument.PropertiesFactory\" data-throw-if-not-resolved=\"false\"></xref> properties will be automatically set \nwhen the bilingual processor is used to process content through the filter framework.\n</p>\n"
  example:
  - "\n<p>\nThis example shows how to read content from a file into the document using the filter framework.\n</p>\n<pre><code>void LoadFile(IBilingualDocument document, IFileTypeManager manager, string filePath)\n{\n  IMultiFileConverter converter = manager.GetConverterToBilingual(filePath, document.ContentInput);\n  converter.Parse();\n}</code></pre>\n"
  syntax:
    content: IBilingualDocumentGenerator ContentInput { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
    content.vb: ReadOnly Property ContentInput As IBilingualDocumentGenerator
  overload: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentInput*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentOutput
  commentId: P:Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentOutput
  id: ContentOutput
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: ContentOutput
  nameWithType: IBilingualDocument.ContentOutput
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentOutput
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nProvides an implementation of a bilingual parser that can be used to read content from the document, \ne.g. when used with the filter framework to save a file.\n"
  example:
  - "\n<p>This example shows how to save the content of a document to a bilingual  \nfile in the default bilingual file format using the filter framework.</p>\n<pre><code>void SaveAsBilingual(IBilingualDocument document, IFileTypeManager manager, string filePath)\n{\n  IMultiFileConverter converter = manager.GetConverterToDefaultBilingual(document.ContentOutput, filePath);\n  converter.Parse();\n}</code></pre>\n"
  syntax:
    content: IBilingualParser ContentOutput { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser
    content.vb: ReadOnly Property ContentOutput As IBilingualParser
  overload: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentOutput*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ItemFactory
  commentId: P:Sdl.DesktopEditor.EditorApi.IBilingualDocument.ItemFactory
  id: ItemFactory
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: ItemFactory
  nameWithType: IBilingualDocument.ItemFactory
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ItemFactory
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe factory used when new bilingual content items need to be created.\n"
  remarks: "\n<p>\nWhen the document is loaded by using it as a bilingual content processor through the filter framework \nthis property is automatically set to the factory communicated by the framework.\n</p>\n"
  syntax:
    content: IDocumentItemFactory ItemFactory { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory
    content.vb: Property ItemFactory As IDocumentItemFactory
  overload: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ItemFactory*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.PropertiesFactory
  commentId: P:Sdl.DesktopEditor.EditorApi.IBilingualDocument.PropertiesFactory
  id: PropertiesFactory
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: PropertiesFactory
  nameWithType: IBilingualDocument.PropertiesFactory
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.PropertiesFactory
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe factory used when new properties objects need to be created.\n"
  remarks: "\n<p>\nThis is a convenience accessor to the properties factory in the <xref href=\"Sdl.DesktopEditor.EditorApi.IBilingualDocument.ItemFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  syntax:
    content: IPropertiesFactory PropertiesFactory { get; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
    content.vb: ReadOnly Property PropertiesFactory As IPropertiesFactory
  overload: Sdl.DesktopEditor.EditorApi.IBilingualDocument.PropertiesFactory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.Disposing
  commentId: E:Sdl.DesktopEditor.EditorApi.IBilingualDocument.Disposing
  id: Disposing
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: Disposing
  nameWithType: IBilingualDocument.Disposing
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.Disposing
  type: Event
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nRaised by the document when it is about to be disposed. If a control references\nthe document this is a good time to disconnect from it.\n"
  syntax:
    content: event EventHandler Disposing
    return:
      type: System.EventHandler
    content.vb: Event Disposing As EventHandler
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentChanged
  id: ContentChanged
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: ContentChanged
  nameWithType: IBilingualDocument.ContentChanged
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentChanged
  type: Event
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nFired when content in the source or target document is changed in any way.\n"
  remarks: "\n<p>\nThis event is typically fired immediately when the content is changed, which\ncan be before the controls have been updated.\n</p>\n"
  syntax:
    content: event EventHandler<FrameworkDocumentContentChangedEventArgs> ContentChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs}
    content.vb: Event ContentChanged As EventHandler(Of FrameworkDocumentContentChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.DocumentPropertiesChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IBilingualDocument.DocumentPropertiesChanged
  id: DocumentPropertiesChanged
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: DocumentPropertiesChanged
  nameWithType: IBilingualDocument.DocumentPropertiesChanged
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.DocumentPropertiesChanged
  type: Event
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nRaised after document properties have been updated through a call to <xref href=\"Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateDocumentProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: event EventHandler<DocumentPropertiesChangedEventArgs> DocumentPropertiesChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.DocumentPropertiesChangedEventArgs}
    content.vb: Event DocumentPropertiesChanged As EventHandler(Of DocumentPropertiesChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.FilePropertiesChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IBilingualDocument.FilePropertiesChanged
  id: FilePropertiesChanged
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: FilePropertiesChanged
  nameWithType: IBilingualDocument.FilePropertiesChanged
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.FilePropertiesChanged
  type: Event
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nRaised after file properties have been updated through a call to <xref href=\"Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateFileProperties(Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: event EventHandler<FilePropertiesChangedEventArgs> FilePropertiesChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.FilePropertiesChangedEventArgs}
    content.vb: Event FilePropertiesChanged As EventHandler(Of FilePropertiesChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ParagraphUnitPropertiesChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IBilingualDocument.ParagraphUnitPropertiesChanged
  id: ParagraphUnitPropertiesChanged
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: ParagraphUnitPropertiesChanged
  nameWithType: IBilingualDocument.ParagraphUnitPropertiesChanged
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ParagraphUnitPropertiesChanged
  type: Event
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nRaised after paragraph unit properties have been updated through a call to <xref href=\"Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateParagraphUnitProperties(Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: event EventHandler<ParagraphUnitPropertiesChangedEventArgs> ParagraphUnitPropertiesChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.ParagraphUnitPropertiesChangedEventArgs}
    content.vb: Event ParagraphUnitPropertiesChanged As EventHandler(Of ParagraphUnitPropertiesChangedEventArgs)
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.SegmentPropertiesChanged
  commentId: E:Sdl.DesktopEditor.EditorApi.IBilingualDocument.SegmentPropertiesChanged
  id: SegmentPropertiesChanged
  parent: Sdl.DesktopEditor.EditorApi.IBilingualDocument
  langs:
  - csharp
  - vb
  name: SegmentPropertiesChanged
  nameWithType: IBilingualDocument.SegmentPropertiesChanged
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.SegmentPropertiesChanged
  type: Event
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nRaised after segment pair properties have been updated through a call to \n<xref href=\"Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateSegmentProperties(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId%2cSdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Sdl.DesktopEditor.EditorApi.IBilingualDocument.LockSegment(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId%2cSdl.FileTypeSupport.Framework.NativeApi.SegmentId)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Sdl.DesktopEditor.EditorApi.IBilingualDocument.UnlockSegment(Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId%2cSdl.FileTypeSupport.Framework.NativeApi.SegmentId)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: event EventHandler<SegmentPropertiesChangedEventArgs> SegmentPropertiesChanged
    return:
      type: System.EventHandler{Sdl.DesktopEditor.EditorApi.SegmentPropertiesChangedEventArgs}
    content.vb: Event SegmentPropertiesChanged As EventHandler(Of SegmentPropertiesChangedEventArgs)
references:
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateParagraphUnitProperties*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateParagraphUnitProperties
  isExternal: true
  name: UpdateParagraphUnitProperties
  nameWithType: IBilingualDocument.UpdateParagraphUnitProperties
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateParagraphUnitProperties
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
  isExternal: true
  name: IParagraphUnitProperties
  nameWithType: IParagraphUnitProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IParagraphUnitProperties
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateDocumentProperties*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateDocumentProperties
  isExternal: true
  name: UpdateDocumentProperties
  nameWithType: IBilingualDocument.UpdateDocumentProperties
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateDocumentProperties
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
  isExternal: true
  name: IDocumentProperties
  nameWithType: IDocumentProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentProperties
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateFileProperties*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateFileProperties
  isExternal: true
  name: UpdateFileProperties
  nameWithType: IBilingualDocument.UpdateFileProperties
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateFileProperties
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
  isExternal: true
  name: IFileProperties
  nameWithType: IFileProperties
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IFileProperties
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateSegmentProperties*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateSegmentProperties
  isExternal: true
  name: UpdateSegmentProperties
  nameWithType: IBilingualDocument.UpdateSegmentProperties
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UpdateSegmentProperties
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
  isExternal: true
  name: ParagraphUnitId
  nameWithType: ParagraphUnitId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
  isExternal: true
  name: ISegmentPairProperties
  nameWithType: ISegmentPairProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISegmentPairProperties
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.LockSegment*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IBilingualDocument.LockSegment
  isExternal: true
  name: LockSegment
  nameWithType: IBilingualDocument.LockSegment
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.LockSegment
- uid: Sdl.DesktopEditor.EditorApi.EditException
  commentId: T:Sdl.DesktopEditor.EditorApi.EditException
  isExternal: true
  name: EditException
  nameWithType: EditException
  fullName: Sdl.DesktopEditor.EditorApi.EditException
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
  isExternal: true
  name: SegmentId
  nameWithType: SegmentId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UnlockSegment*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IBilingualDocument.UnlockSegment
  isExternal: true
  name: UnlockSegment
  nameWithType: IBilingualDocument.UnlockSegment
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UnlockSegment
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.RemoveSegmentPair*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IBilingualDocument.RemoveSegmentPair
  isExternal: true
  name: RemoveSegmentPair
  nameWithType: IBilingualDocument.RemoveSegmentPair
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.RemoveSegmentPair
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ApplySegmentPair*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IBilingualDocument.ApplySegmentPair
  isExternal: true
  name: ApplySegmentPair
  nameWithType: IBilingualDocument.ApplySegmentPair
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ApplySegmentPair
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.Source*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IBilingualDocument.Source
  isExternal: true
  name: Source
  nameWithType: IBilingualDocument.Source
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.Source
- uid: Sdl.DesktopEditor.EditorApi.IFrameworkDocument
  commentId: T:Sdl.DesktopEditor.EditorApi.IFrameworkDocument
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IFrameworkDocument
  nameWithType: IFrameworkDocument
  fullName: Sdl.DesktopEditor.EditorApi.IFrameworkDocument
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.Target*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IBilingualDocument.Target
  isExternal: true
  name: Target
  nameWithType: IBilingualDocument.Target
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.Target
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UndoBuffer*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IBilingualDocument.UndoBuffer
  isExternal: true
  name: UndoBuffer
  nameWithType: IBilingualDocument.UndoBuffer
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.UndoBuffer
- uid: Sdl.DesktopEditor.EditorApi.IUndoBuffer
  commentId: T:Sdl.DesktopEditor.EditorApi.IUndoBuffer
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IUndoBuffer
  nameWithType: IUndoBuffer
  fullName: Sdl.DesktopEditor.EditorApi.IUndoBuffer
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.IsDirty*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IBilingualDocument.IsDirty
  isExternal: true
  name: IsDirty
  nameWithType: IBilingualDocument.IsDirty
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.IsDirty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.DocumentProperties*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IBilingualDocument.DocumentProperties
  isExternal: true
  name: DocumentProperties
  nameWithType: IBilingualDocument.DocumentProperties
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.DocumentProperties
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentInput*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentInput
  isExternal: true
  name: ContentInput
  nameWithType: IBilingualDocument.ContentInput
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentInput
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
  commentId: '!:Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator'
  isExternal: true
  name: IBilingualDocumentGenerator
  nameWithType: IBilingualDocumentGenerator
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IBilingualDocumentGenerator
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentOutput*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentOutput
  isExternal: true
  name: ContentOutput
  nameWithType: IBilingualDocument.ContentOutput
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ContentOutput
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser
  commentId: '!:Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser'
  isExternal: true
  name: IBilingualParser
  nameWithType: IBilingualParser
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IBilingualParser
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ItemFactory*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IBilingualDocument.ItemFactory
  isExternal: true
  name: ItemFactory
  nameWithType: IBilingualDocument.ItemFactory
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.ItemFactory
- uid: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory
  isExternal: true
  name: IDocumentItemFactory
  nameWithType: IDocumentItemFactory
  fullName: Sdl.FileTypeSupport.Framework.BilingualApi.IDocumentItemFactory
- uid: Sdl.DesktopEditor.EditorApi.IBilingualDocument.PropertiesFactory*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.IBilingualDocument.PropertiesFactory
  isExternal: true
  name: PropertiesFactory
  nameWithType: IBilingualDocument.PropertiesFactory
  fullName: Sdl.DesktopEditor.EditorApi.IBilingualDocument.PropertiesFactory
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
  isExternal: true
  name: IPropertiesFactory
  nameWithType: IPropertiesFactory
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPropertiesFactory
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<FrameworkDocumentContentChangedEventArgs>
  nameWithType: EventHandler<FrameworkDocumentContentChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs>
  nameWithType.vb: EventHandler(Of FrameworkDocumentContentChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs)
  name.vb: EventHandler(Of FrameworkDocumentContentChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs
    name: FrameworkDocumentContentChangedEventArgs
    nameWithType: FrameworkDocumentContentChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs
    name: FrameworkDocumentContentChangedEventArgs
    nameWithType: FrameworkDocumentContentChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.FrameworkDocumentContentChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.DocumentPropertiesChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.DocumentPropertiesChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<DocumentPropertiesChangedEventArgs>
  nameWithType: EventHandler<DocumentPropertiesChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.DocumentPropertiesChangedEventArgs>
  nameWithType.vb: EventHandler(Of DocumentPropertiesChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.DocumentPropertiesChangedEventArgs)
  name.vb: EventHandler(Of DocumentPropertiesChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.DocumentPropertiesChangedEventArgs
    name: DocumentPropertiesChangedEventArgs
    nameWithType: DocumentPropertiesChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.DocumentPropertiesChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.DocumentPropertiesChangedEventArgs
    name: DocumentPropertiesChangedEventArgs
    nameWithType: DocumentPropertiesChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.DocumentPropertiesChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.FilePropertiesChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.FilePropertiesChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<FilePropertiesChangedEventArgs>
  nameWithType: EventHandler<FilePropertiesChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.FilePropertiesChangedEventArgs>
  nameWithType.vb: EventHandler(Of FilePropertiesChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.FilePropertiesChangedEventArgs)
  name.vb: EventHandler(Of FilePropertiesChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.FilePropertiesChangedEventArgs
    name: FilePropertiesChangedEventArgs
    nameWithType: FilePropertiesChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.FilePropertiesChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.FilePropertiesChangedEventArgs
    name: FilePropertiesChangedEventArgs
    nameWithType: FilePropertiesChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.FilePropertiesChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.ParagraphUnitPropertiesChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.ParagraphUnitPropertiesChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ParagraphUnitPropertiesChangedEventArgs>
  nameWithType: EventHandler<ParagraphUnitPropertiesChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.ParagraphUnitPropertiesChangedEventArgs>
  nameWithType.vb: EventHandler(Of ParagraphUnitPropertiesChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.ParagraphUnitPropertiesChangedEventArgs)
  name.vb: EventHandler(Of ParagraphUnitPropertiesChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.ParagraphUnitPropertiesChangedEventArgs
    name: ParagraphUnitPropertiesChangedEventArgs
    nameWithType: ParagraphUnitPropertiesChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.ParagraphUnitPropertiesChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.ParagraphUnitPropertiesChangedEventArgs
    name: ParagraphUnitPropertiesChangedEventArgs
    nameWithType: ParagraphUnitPropertiesChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.ParagraphUnitPropertiesChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.DesktopEditor.EditorApi.SegmentPropertiesChangedEventArgs}
  commentId: T:System.EventHandler{Sdl.DesktopEditor.EditorApi.SegmentPropertiesChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<SegmentPropertiesChangedEventArgs>
  nameWithType: EventHandler<SegmentPropertiesChangedEventArgs>
  fullName: System.EventHandler<Sdl.DesktopEditor.EditorApi.SegmentPropertiesChangedEventArgs>
  nameWithType.vb: EventHandler(Of SegmentPropertiesChangedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.DesktopEditor.EditorApi.SegmentPropertiesChangedEventArgs)
  name.vb: EventHandler(Of SegmentPropertiesChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.DesktopEditor.EditorApi.SegmentPropertiesChangedEventArgs
    name: SegmentPropertiesChangedEventArgs
    nameWithType: SegmentPropertiesChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.SegmentPropertiesChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.DesktopEditor.EditorApi.SegmentPropertiesChangedEventArgs
    name: SegmentPropertiesChangedEventArgs
    nameWithType: SegmentPropertiesChangedEventArgs
    fullName: Sdl.DesktopEditor.EditorApi.SegmentPropertiesChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
