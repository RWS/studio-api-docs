### YamlMime:ManagedReference
items:
- uid: Sdl.TellMe.ProviderApi.ITellMeProvider
  commentId: T:Sdl.TellMe.ProviderApi.ITellMeProvider
  id: ITellMeProvider
  parent: Sdl.TellMe.ProviderApi
  children:
  - Sdl.TellMe.ProviderApi.ITellMeProvider.Name
  - Sdl.TellMe.ProviderApi.ITellMeProvider.ProviderActions
  langs:
  - csharp
  - vb
  name: ITellMeProvider
  nameWithType: ITellMeProvider
  fullName: Sdl.TellMe.ProviderApi.ITellMeProvider
  type: Interface
  source:
    path: Sdl.TellMe.ProviderApi
    isExternal: true
  assemblies:
  - Sdl.TellMe.ProviderApi
  namespace: Sdl.TellMe.ProviderApi
  syntax:
    content: public interface ITellMeProvider
    content.vb: Public Interface ITellMeProvider
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.TellMe.ProviderApi.ITellMeProvider.Name
  commentId: P:Sdl.TellMe.ProviderApi.ITellMeProvider.Name
  id: Name
  parent: Sdl.TellMe.ProviderApi.ITellMeProvider
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ITellMeProvider.Name
  fullName: Sdl.TellMe.ProviderApi.ITellMeProvider.Name
  type: Property
  source:
    path: Sdl.TellMe.ProviderApi
    isExternal: true
  assemblies:
  - Sdl.TellMe.ProviderApi
  namespace: Sdl.TellMe.ProviderApi
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Sdl.TellMe.ProviderApi.ITellMeProvider.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.TellMe.ProviderApi.ITellMeProvider.ProviderActions
  commentId: P:Sdl.TellMe.ProviderApi.ITellMeProvider.ProviderActions
  id: ProviderActions
  parent: Sdl.TellMe.ProviderApi.ITellMeProvider
  langs:
  - csharp
  - vb
  name: ProviderActions
  nameWithType: ITellMeProvider.ProviderActions
  fullName: Sdl.TellMe.ProviderApi.ITellMeProvider.ProviderActions
  type: Property
  source:
    path: Sdl.TellMe.ProviderApi
    isExternal: true
  assemblies:
  - Sdl.TellMe.ProviderApi
  namespace: Sdl.TellMe.ProviderApi
  syntax:
    content: AbstractTellMeAction[] ProviderActions { get; }
    parameters: []
    return:
      type: Sdl.TellMe.ProviderApi.AbstractTellMeAction[]
    content.vb: ReadOnly Property ProviderActions As AbstractTellMeAction()
  overload: Sdl.TellMe.ProviderApi.ITellMeProvider.ProviderActions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.TellMe.ProviderApi
  commentId: N:Sdl.TellMe.ProviderApi
  isExternal: true
  name: Sdl.TellMe.ProviderApi
  nameWithType: Sdl.TellMe.ProviderApi
  fullName: Sdl.TellMe.ProviderApi
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TellMe.ProviderApi.ITellMeProvider.Name*
  commentId: Overload:Sdl.TellMe.ProviderApi.ITellMeProvider.Name
  isExternal: true
  name: Name
  nameWithType: ITellMeProvider.Name
  fullName: Sdl.TellMe.ProviderApi.ITellMeProvider.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.TellMe.ProviderApi.ITellMeProvider.ProviderActions*
  commentId: Overload:Sdl.TellMe.ProviderApi.ITellMeProvider.ProviderActions
  isExternal: true
  name: ProviderActions
  nameWithType: ITellMeProvider.ProviderActions
  fullName: Sdl.TellMe.ProviderApi.ITellMeProvider.ProviderActions
- uid: Sdl.TellMe.ProviderApi.AbstractTellMeAction[]
  isExternal: true
  name: AbstractTellMeAction[]
  nameWithType: AbstractTellMeAction[]
  fullName: Sdl.TellMe.ProviderApi.AbstractTellMeAction[]
  nameWithType.vb: AbstractTellMeAction()
  fullName.vb: Sdl.TellMe.ProviderApi.AbstractTellMeAction()
  name.vb: AbstractTellMeAction()
  spec.csharp:
  - uid: Sdl.TellMe.ProviderApi.AbstractTellMeAction
    name: AbstractTellMeAction
    nameWithType: AbstractTellMeAction
    fullName: Sdl.TellMe.ProviderApi.AbstractTellMeAction
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.TellMe.ProviderApi.AbstractTellMeAction
    name: AbstractTellMeAction
    nameWithType: AbstractTellMeAction
    fullName: Sdl.TellMe.ProviderApi.AbstractTellMeAction
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
