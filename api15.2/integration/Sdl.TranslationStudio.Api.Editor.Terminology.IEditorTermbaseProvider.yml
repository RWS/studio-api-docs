### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider
  commentId: T:Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider
  id: IEditorTermbaseProvider
  parent: Sdl.TranslationStudio.Api.Editor.Terminology
  children:
  - Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.GetTermbaseRecognitionEngine
  - Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.RecogniseTerms(Sdl.DesktopEditor.EditorApi.Implementation.PlainTextMapper)
  - Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.RecognitionOptions
  - Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.TermRecognitionSettingsBundle
  - Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.TermsRecognitionComplete(System.Collections.Generic.IList{Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo})
  langs:
  - csharp
  - vb
  name: IEditorTermbaseProvider
  nameWithType: IEditorTermbaseProvider
  fullName: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider
  type: Interface
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Terminology
  syntax:
    content: 'public interface IEditorTermbaseProvider : ITermbaseProvider, IDisposable'
    content.vb: >-
      Public Interface IEditorTermbaseProvider
          Inherits ITermbaseProvider, IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.GetTermbaseRecognitionEngine
  commentId: M:Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.GetTermbaseRecognitionEngine
  id: GetTermbaseRecognitionEngine
  parent: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider
  langs:
  - csharp
  - vb
  name: GetTermbaseRecognitionEngine()
  nameWithType: IEditorTermbaseProvider.GetTermbaseRecognitionEngine()
  fullName: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.GetTermbaseRecognitionEngine()
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Terminology
  syntax:
    content: TermbaseRecognitionEngine GetTermbaseRecognitionEngine()
    return:
      type: Sdl.MultiTerm.Client.TerminologySearch.TermbaseRecognitionEngine
    content.vb: Function GetTermbaseRecognitionEngine As TermbaseRecognitionEngine
  overload: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.GetTermbaseRecognitionEngine*
- uid: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.TermsRecognitionComplete(System.Collections.Generic.IList{Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo})
  commentId: M:Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.TermsRecognitionComplete(System.Collections.Generic.IList{Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo})
  id: TermsRecognitionComplete(System.Collections.Generic.IList{Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo})
  parent: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider
  langs:
  - csharp
  - vb
  name: TermsRecognitionComplete(IList<TermRecognitionHitInfo>)
  nameWithType: IEditorTermbaseProvider.TermsRecognitionComplete(IList<TermRecognitionHitInfo>)
  fullName: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.TermsRecognitionComplete(System.Collections.Generic.IList<Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo>)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Terminology
  syntax:
    content: void TermsRecognitionComplete(IList<TermRecognitionHitInfo> hitList)
    parameters:
    - id: hitList
      type: System.Collections.Generic.IList{Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo}
    content.vb: Sub TermsRecognitionComplete(hitList As IList(Of TermRecognitionHitInfo))
  overload: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.TermsRecognitionComplete*
  nameWithType.vb: IEditorTermbaseProvider.TermsRecognitionComplete(IList(Of TermRecognitionHitInfo))
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.TermsRecognitionComplete(System.Collections.Generic.IList(Of Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo))
  name.vb: TermsRecognitionComplete(IList(Of TermRecognitionHitInfo))
- uid: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.RecogniseTerms(Sdl.DesktopEditor.EditorApi.Implementation.PlainTextMapper)
  commentId: M:Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.RecogniseTerms(Sdl.DesktopEditor.EditorApi.Implementation.PlainTextMapper)
  id: RecogniseTerms(Sdl.DesktopEditor.EditorApi.Implementation.PlainTextMapper)
  parent: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider
  langs:
  - csharp
  - vb
  name: RecogniseTerms(PlainTextMapper)
  nameWithType: IEditorTermbaseProvider.RecogniseTerms(PlainTextMapper)
  fullName: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.RecogniseTerms(Sdl.DesktopEditor.EditorApi.Implementation.PlainTextMapper)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Terminology
  syntax:
    content: List<TermRecognitionHitInfo> RecogniseTerms(PlainTextMapper mapper)
    parameters:
    - id: mapper
      type: Sdl.DesktopEditor.EditorApi.Implementation.PlainTextMapper
    return:
      type: System.Collections.Generic.List{Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo}
    content.vb: Function RecogniseTerms(mapper As PlainTextMapper) As List(Of TermRecognitionHitInfo)
  overload: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.RecogniseTerms*
- uid: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.RecognitionOptions
  commentId: P:Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.RecognitionOptions
  id: RecognitionOptions
  parent: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider
  langs:
  - csharp
  - vb
  name: RecognitionOptions
  nameWithType: IEditorTermbaseProvider.RecognitionOptions
  fullName: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.RecognitionOptions
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Terminology
  syntax:
    content: IProjectTermbaseRecognitionOptions RecognitionOptions { get; }
    parameters: []
    return:
      type: Sdl.ProjectApi.TermbaseApi.IProjectTermbaseRecognitionOptions
    content.vb: ReadOnly Property RecognitionOptions As IProjectTermbaseRecognitionOptions
  overload: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.RecognitionOptions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.TermRecognitionSettingsBundle
  commentId: P:Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.TermRecognitionSettingsBundle
  id: TermRecognitionSettingsBundle
  parent: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider
  langs:
  - csharp
  - vb
  name: TermRecognitionSettingsBundle
  nameWithType: IEditorTermbaseProvider.TermRecognitionSettingsBundle
  fullName: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.TermRecognitionSettingsBundle
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Terminology
  syntax:
    content: TermRecognitionSettings TermRecognitionSettingsBundle { get; }
    parameters: []
    return:
      type: Sdl.ProjectApi.Settings.TermRecognitionSettings
    content.vb: ReadOnly Property TermRecognitionSettingsBundle As TermRecognitionSettings
  overload: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.TermRecognitionSettingsBundle*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.TranslationStudio.Api.Editor.Terminology
  commentId: N:Sdl.TranslationStudio.Api.Editor.Terminology
  isExternal: true
  name: Sdl.TranslationStudio.Api.Editor.Terminology
  nameWithType: Sdl.TranslationStudio.Api.Editor.Terminology
  fullName: Sdl.TranslationStudio.Api.Editor.Terminology
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.GetTermbaseRecognitionEngine*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.GetTermbaseRecognitionEngine
  isExternal: true
  name: GetTermbaseRecognitionEngine
  nameWithType: IEditorTermbaseProvider.GetTermbaseRecognitionEngine
  fullName: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.GetTermbaseRecognitionEngine
- uid: Sdl.MultiTerm.Client.TerminologySearch.TermbaseRecognitionEngine
  commentId: '!:Sdl.MultiTerm.Client.TerminologySearch.TermbaseRecognitionEngine'
  isExternal: true
  name: TermbaseRecognitionEngine
  nameWithType: TermbaseRecognitionEngine
  fullName: Sdl.MultiTerm.Client.TerminologySearch.TermbaseRecognitionEngine
- uid: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.TermsRecognitionComplete*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.TermsRecognitionComplete
  isExternal: true
  name: TermsRecognitionComplete
  nameWithType: IEditorTermbaseProvider.TermsRecognitionComplete
  fullName: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.TermsRecognitionComplete
- uid: System.Collections.Generic.IList{Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo}
  commentId: T:System.Collections.Generic.IList{Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TermRecognitionHitInfo>
  nameWithType: IList<TermRecognitionHitInfo>
  fullName: System.Collections.Generic.IList<Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo>
  nameWithType.vb: IList(Of TermRecognitionHitInfo)
  fullName.vb: System.Collections.Generic.IList(Of Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo)
  name.vb: IList(Of TermRecognitionHitInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo
    name: TermRecognitionHitInfo
    nameWithType: TermRecognitionHitInfo
    fullName: Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo
    name: TermRecognitionHitInfo
    nameWithType: TermRecognitionHitInfo
    fullName: Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.RecogniseTerms*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.RecogniseTerms
  isExternal: true
  name: RecogniseTerms
  nameWithType: IEditorTermbaseProvider.RecogniseTerms
  fullName: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.RecogniseTerms
- uid: Sdl.DesktopEditor.EditorApi.Implementation.PlainTextMapper
  commentId: T:Sdl.DesktopEditor.EditorApi.Implementation.PlainTextMapper
  parent: Sdl.DesktopEditor.EditorApi.Implementation
  isExternal: true
  name: PlainTextMapper
  nameWithType: PlainTextMapper
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.PlainTextMapper
- uid: System.Collections.Generic.List{Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo}
  commentId: T:System.Collections.Generic.List{Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TermRecognitionHitInfo>
  nameWithType: List<TermRecognitionHitInfo>
  fullName: System.Collections.Generic.List<Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo>
  nameWithType.vb: List(Of TermRecognitionHitInfo)
  fullName.vb: System.Collections.Generic.List(Of Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo)
  name.vb: List(Of TermRecognitionHitInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo
    name: TermRecognitionHitInfo
    nameWithType: TermRecognitionHitInfo
    fullName: Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo
    name: TermRecognitionHitInfo
    nameWithType: TermRecognitionHitInfo
    fullName: Sdl.ProjectApi.Translation.Terminology.TermRecognitionHitInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.Implementation
  commentId: N:Sdl.DesktopEditor.EditorApi.Implementation
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi.Implementation
  nameWithType: Sdl.DesktopEditor.EditorApi.Implementation
  fullName: Sdl.DesktopEditor.EditorApi.Implementation
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.RecognitionOptions*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.RecognitionOptions
  isExternal: true
  name: RecognitionOptions
  nameWithType: IEditorTermbaseProvider.RecognitionOptions
  fullName: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.RecognitionOptions
- uid: Sdl.ProjectApi.TermbaseApi.IProjectTermbaseRecognitionOptions
  commentId: '!:Sdl.ProjectApi.TermbaseApi.IProjectTermbaseRecognitionOptions'
  isExternal: true
  name: IProjectTermbaseRecognitionOptions
  nameWithType: IProjectTermbaseRecognitionOptions
  fullName: Sdl.ProjectApi.TermbaseApi.IProjectTermbaseRecognitionOptions
- uid: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.TermRecognitionSettingsBundle*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.TermRecognitionSettingsBundle
  isExternal: true
  name: TermRecognitionSettingsBundle
  nameWithType: IEditorTermbaseProvider.TermRecognitionSettingsBundle
  fullName: Sdl.TranslationStudio.Api.Editor.Terminology.IEditorTermbaseProvider.TermRecognitionSettingsBundle
- uid: Sdl.ProjectApi.Settings.TermRecognitionSettings
  commentId: '!:Sdl.ProjectApi.Settings.TermRecognitionSettings'
  isExternal: true
  name: TermRecognitionSettings
  nameWithType: TermRecognitionSettings
  fullName: Sdl.ProjectApi.Settings.TermRecognitionSettings
