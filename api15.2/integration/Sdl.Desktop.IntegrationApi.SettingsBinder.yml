### YamlMime:ManagedReference
items:
- uid: Sdl.Desktop.IntegrationApi.SettingsBinder
  commentId: T:Sdl.Desktop.IntegrationApi.SettingsBinder
  id: SettingsBinder
  parent: Sdl.Desktop.IntegrationApi
  children:
  - Sdl.Desktop.IntegrationApi.SettingsBinder.DataBindSetting``1(System.Windows.Forms.IBindableComponent,System.String,Sdl.Core.Settings.ISettingsGroup,System.String)
  - Sdl.Desktop.IntegrationApi.SettingsBinder.DataBindSetting``1(System.Windows.Forms.RadioButton[],``0[],Sdl.Core.Settings.ISettingsGroup,System.String)
  langs:
  - csharp
  - vb
  name: SettingsBinder
  nameWithType: SettingsBinder
  fullName: Sdl.Desktop.IntegrationApi.SettingsBinder
  type: Class
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nStatic helper class for databinding settings to control properties.\n"
  syntax:
    content: public static class SettingsBinder
    content.vb: Public Module SettingsBinder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sdl.Desktop.IntegrationApi.SettingsBinder.DataBindSetting``1(System.Windows.Forms.IBindableComponent,System.String,Sdl.Core.Settings.ISettingsGroup,System.String)
  commentId: M:Sdl.Desktop.IntegrationApi.SettingsBinder.DataBindSetting``1(System.Windows.Forms.IBindableComponent,System.String,Sdl.Core.Settings.ISettingsGroup,System.String)
  id: DataBindSetting``1(System.Windows.Forms.IBindableComponent,System.String,Sdl.Core.Settings.ISettingsGroup,System.String)
  parent: Sdl.Desktop.IntegrationApi.SettingsBinder
  langs:
  - csharp
  - vb
  name: DataBindSetting<TSettingValue>(IBindableComponent, String, ISettingsGroup, String)
  nameWithType: SettingsBinder.DataBindSetting<TSettingValue>(IBindableComponent, String, ISettingsGroup, String)
  fullName: Sdl.Desktop.IntegrationApi.SettingsBinder.DataBindSetting<TSettingValue>(System.Windows.Forms.IBindableComponent, System.String, Sdl.Core.Settings.ISettingsGroup, System.String)
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nDatabinds a setting to a control property, setting the control font to bold when the settings is not inherited.\n"
  syntax:
    content: public static Binding DataBindSetting<TSettingValue>(IBindableComponent control, string propertyName, ISettingsGroup settingsGroup, string settingId)
    parameters:
    - id: control
      type: System.Windows.Forms.IBindableComponent
      description: The control to which to bind the setting.
    - id: propertyName
      type: System.String
      description: The property of the control to which to bind the setting.
    - id: settingsGroup
      type: Sdl.Core.Settings.ISettingsGroup
      description: The settings group that owns the setting.
    - id: settingId
      type: System.String
      description: The id of the setting.
    typeParameters:
    - id: TSettingValue
      description: The value type of the setting.
    return:
      type: System.Windows.Forms.Binding
    content.vb: Public Shared Function DataBindSetting(Of TSettingValue)(control As IBindableComponent, propertyName As String, settingsGroup As ISettingsGroup, settingId As String) As Binding
  overload: Sdl.Desktop.IntegrationApi.SettingsBinder.DataBindSetting*
  nameWithType.vb: SettingsBinder.DataBindSetting(Of TSettingValue)(IBindableComponent, String, ISettingsGroup, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.Desktop.IntegrationApi.SettingsBinder.DataBindSetting(Of TSettingValue)(System.Windows.Forms.IBindableComponent, System.String, Sdl.Core.Settings.ISettingsGroup, System.String)
  name.vb: DataBindSetting(Of TSettingValue)(IBindableComponent, String, ISettingsGroup, String)
- uid: Sdl.Desktop.IntegrationApi.SettingsBinder.DataBindSetting``1(System.Windows.Forms.RadioButton[],``0[],Sdl.Core.Settings.ISettingsGroup,System.String)
  commentId: M:Sdl.Desktop.IntegrationApi.SettingsBinder.DataBindSetting``1(System.Windows.Forms.RadioButton[],``0[],Sdl.Core.Settings.ISettingsGroup,System.String)
  id: DataBindSetting``1(System.Windows.Forms.RadioButton[],``0[],Sdl.Core.Settings.ISettingsGroup,System.String)
  parent: Sdl.Desktop.IntegrationApi.SettingsBinder
  langs:
  - csharp
  - vb
  name: DataBindSetting<TSettingValue>(RadioButton[], TSettingValue[], ISettingsGroup, String)
  nameWithType: SettingsBinder.DataBindSetting<TSettingValue>(RadioButton[], TSettingValue[], ISettingsGroup, String)
  fullName: Sdl.Desktop.IntegrationApi.SettingsBinder.DataBindSetting<TSettingValue>(System.Windows.Forms.RadioButton[], TSettingValue[], Sdl.Core.Settings.ISettingsGroup, System.String)
  type: Method
  source:
    path: Sdl.Desktop.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.Desktop.IntegrationApi
  namespace: Sdl.Desktop.IntegrationApi
  summary: "\nDatabinds a setting to a radiobutton with a specific datasource update mode, setting the control font to bold when the settings is not inherited.\n"
  syntax:
    content: >-
      public static Binding DataBindSetting<TSettingValue>(RadioButton[] radioButtons, TSettingValue[] values, ISettingsGroup settingsGroup, string settingId)
          where TSettingValue : IComparable
    parameters:
    - id: radioButtons
      type: System.Windows.Forms.RadioButton[]
      description: The radiobutton to which to bind the setting.
    - id: values
      type: '{TSettingValue}[]'
      description: The values to which radio button should be bind.
    - id: settingsGroup
      type: Sdl.Core.Settings.ISettingsGroup
      description: The settings group that owns the setting.
    - id: settingId
      type: System.String
      description: The id of the setting.
    typeParameters:
    - id: TSettingValue
      description: The value type of the setting.
    return:
      type: System.Windows.Forms.Binding
      description: The binding between the property value of an object and property value of a control.
    content.vb: Public Shared Function DataBindSetting(Of TSettingValue As IComparable)(radioButtons As RadioButton(), values As TSettingValue(), settingsGroup As ISettingsGroup, settingId As String) As Binding
  overload: Sdl.Desktop.IntegrationApi.SettingsBinder.DataBindSetting*
  nameWithType.vb: SettingsBinder.DataBindSetting(Of TSettingValue)(RadioButton(), TSettingValue(), ISettingsGroup, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.Desktop.IntegrationApi.SettingsBinder.DataBindSetting(Of TSettingValue)(System.Windows.Forms.RadioButton(), TSettingValue(), Sdl.Core.Settings.ISettingsGroup, System.String)
  name.vb: DataBindSetting(Of TSettingValue)(RadioButton(), TSettingValue(), ISettingsGroup, String)
references:
- uid: Sdl.Desktop.IntegrationApi
  commentId: N:Sdl.Desktop.IntegrationApi
  isExternal: true
  name: Sdl.Desktop.IntegrationApi
  nameWithType: Sdl.Desktop.IntegrationApi
  fullName: Sdl.Desktop.IntegrationApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.IntegrationApi.SettingsBinder.DataBindSetting*
  commentId: Overload:Sdl.Desktop.IntegrationApi.SettingsBinder.DataBindSetting
  isExternal: true
  name: DataBindSetting
  nameWithType: SettingsBinder.DataBindSetting
  fullName: Sdl.Desktop.IntegrationApi.SettingsBinder.DataBindSetting
- uid: System.Windows.Forms.IBindableComponent
  commentId: '!:System.Windows.Forms.IBindableComponent'
  isExternal: true
  name: IBindableComponent
  nameWithType: IBindableComponent
  fullName: System.Windows.Forms.IBindableComponent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Core.Settings.ISettingsGroup
  isExternal: true
  name: ISettingsGroup
  nameWithType: ISettingsGroup
  fullName: Sdl.Core.Settings.ISettingsGroup
- uid: System.Windows.Forms.Binding
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Forms.Binding
- uid: System.Windows.Forms.RadioButton[]
  isExternal: true
  name: RadioButton[]
  nameWithType: RadioButton[]
  fullName: System.Windows.Forms.RadioButton[]
  nameWithType.vb: RadioButton()
  fullName.vb: System.Windows.Forms.RadioButton()
  name.vb: RadioButton()
  spec.csharp:
  - uid: System.Windows.Forms.RadioButton
    name: RadioButton
    nameWithType: RadioButton
    fullName: System.Windows.Forms.RadioButton
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Windows.Forms.RadioButton
    name: RadioButton
    nameWithType: RadioButton
    fullName: System.Windows.Forms.RadioButton
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: '{TSettingValue}[]'
  isExternal: true
  name: TSettingValue[]
  nameWithType: TSettingValue[]
  fullName: TSettingValue[]
  nameWithType.vb: TSettingValue()
  fullName.vb: TSettingValue()
  name.vb: TSettingValue()
  spec.csharp:
  - name: TSettingValue
    nameWithType: TSettingValue
    fullName: TSettingValue
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: TSettingValue
    nameWithType: TSettingValue
    fullName: TSettingValue
  - name: ()
    nameWithType: ()
    fullName: ()
