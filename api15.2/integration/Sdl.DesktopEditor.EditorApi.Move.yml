### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.Move
  commentId: T:Sdl.DesktopEditor.EditorApi.Move
  id: Move
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.Move.EndOfDocument
  - Sdl.DesktopEditor.EditorApi.Move.EndOfLine
  - Sdl.DesktopEditor.EditorApi.Move.EndOfSegment
  - Sdl.DesktopEditor.EditorApi.Move.LineDown
  - Sdl.DesktopEditor.EditorApi.Move.LineUp
  - Sdl.DesktopEditor.EditorApi.Move.NextCharacter
  - Sdl.DesktopEditor.EditorApi.Move.NextWordStart
  - Sdl.DesktopEditor.EditorApi.Move.PageDown
  - Sdl.DesktopEditor.EditorApi.Move.PageUp
  - Sdl.DesktopEditor.EditorApi.Move.PrecedingCharacter
  - Sdl.DesktopEditor.EditorApi.Move.PrecedingWordStart
  - Sdl.DesktopEditor.EditorApi.Move.StartOfDocument
  - Sdl.DesktopEditor.EditorApi.Move.StartOfLine
  - Sdl.DesktopEditor.EditorApi.Move.StartOfSegment
  langs:
  - csharp
  - vb
  name: Move
  nameWithType: Move
  fullName: Sdl.DesktopEditor.EditorApi.Move
  type: Enum
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nLists different types of selection moves that can be executed through\nthe <xref href=\"Sdl.DesktopEditor.EditorApi.IContentSelection.Move(Sdl.DesktopEditor.EditorApi.Move%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> operation.\n"
  syntax:
    content: public enum Move
    content.vb: Public Enum Move
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Sdl.DesktopEditor.EditorApi.Move.NextCharacter
  commentId: F:Sdl.DesktopEditor.EditorApi.Move.NextCharacter
  id: NextCharacter
  parent: Sdl.DesktopEditor.EditorApi.Move
  langs:
  - csharp
  - vb
  name: NextCharacter
  nameWithType: Move.NextCharacter
  fullName: Sdl.DesktopEditor.EditorApi.Move.NextCharacter
  type: Field
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe next character or node in the logical order of content.\n"
  remarks: "\n<p>For western scripts this is normally to the right. In bi-directional\ntext it may be to the left.</p>\n<p>Corresponds to the Right arrow key on the keyboard.</p>\n"
  syntax:
    content: NextCharacter = 0
    return:
      type: Sdl.DesktopEditor.EditorApi.Move
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.DesktopEditor.EditorApi.Move.PrecedingCharacter
  commentId: F:Sdl.DesktopEditor.EditorApi.Move.PrecedingCharacter
  id: PrecedingCharacter
  parent: Sdl.DesktopEditor.EditorApi.Move
  langs:
  - csharp
  - vb
  name: PrecedingCharacter
  nameWithType: Move.PrecedingCharacter
  fullName: Sdl.DesktopEditor.EditorApi.Move.PrecedingCharacter
  type: Field
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe previous character or node in the logical order of content.\n"
  remarks: "\n<p>For western scripts this is normally to the left. In bi-directional\ntext it may be to the right.</p>\n<p>Corresponds to the Left arrow key on the keyboard.</p>\n"
  syntax:
    content: PrecedingCharacter = 1
    return:
      type: Sdl.DesktopEditor.EditorApi.Move
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.DesktopEditor.EditorApi.Move.NextWordStart
  commentId: F:Sdl.DesktopEditor.EditorApi.Move.NextWordStart
  id: NextWordStart
  parent: Sdl.DesktopEditor.EditorApi.Move
  langs:
  - csharp
  - vb
  name: NextWordStart
  nameWithType: Move.NextWordStart
  fullName: Sdl.DesktopEditor.EditorApi.Move.NextWordStart
  type: Field
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe start of the next word or node in the logical order of content.\n"
  remarks: "\n<p>For western scripts this is normally to the right. In bi-directional\ntext it may be to the left.</p>\n"
  syntax:
    content: NextWordStart = 2
    return:
      type: Sdl.DesktopEditor.EditorApi.Move
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.DesktopEditor.EditorApi.Move.PrecedingWordStart
  commentId: F:Sdl.DesktopEditor.EditorApi.Move.PrecedingWordStart
  id: PrecedingWordStart
  parent: Sdl.DesktopEditor.EditorApi.Move
  langs:
  - csharp
  - vb
  name: PrecedingWordStart
  nameWithType: Move.PrecedingWordStart
  fullName: Sdl.DesktopEditor.EditorApi.Move.PrecedingWordStart
  type: Field
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe start of the current or preceding word or node in the logical order of content.\n"
  remarks: "\n<p>For western scripts this is normally to the left. In bi-directional\ntext it may be to the right.</p>\n"
  syntax:
    content: PrecedingWordStart = 3
    return:
      type: Sdl.DesktopEditor.EditorApi.Move
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.DesktopEditor.EditorApi.Move.StartOfDocument
  commentId: F:Sdl.DesktopEditor.EditorApi.Move.StartOfDocument
  id: StartOfDocument
  parent: Sdl.DesktopEditor.EditorApi.Move
  langs:
  - csharp
  - vb
  name: StartOfDocument
  nameWithType: Move.StartOfDocument
  fullName: Sdl.DesktopEditor.EditorApi.Move.StartOfDocument
  type: Field
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe logical start of the document.\n"
  syntax:
    content: StartOfDocument = 4
    return:
      type: Sdl.DesktopEditor.EditorApi.Move
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.DesktopEditor.EditorApi.Move.EndOfDocument
  commentId: F:Sdl.DesktopEditor.EditorApi.Move.EndOfDocument
  id: EndOfDocument
  parent: Sdl.DesktopEditor.EditorApi.Move
  langs:
  - csharp
  - vb
  name: EndOfDocument
  nameWithType: Move.EndOfDocument
  fullName: Sdl.DesktopEditor.EditorApi.Move.EndOfDocument
  type: Field
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe logical end of the document.\n"
  syntax:
    content: EndOfDocument = 5
    return:
      type: Sdl.DesktopEditor.EditorApi.Move
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.DesktopEditor.EditorApi.Move.StartOfLine
  commentId: F:Sdl.DesktopEditor.EditorApi.Move.StartOfLine
  id: StartOfLine
  parent: Sdl.DesktopEditor.EditorApi.Move
  langs:
  - csharp
  - vb
  name: StartOfLine
  nameWithType: Move.StartOfLine
  fullName: Sdl.DesktopEditor.EditorApi.Move.StartOfLine
  type: Field
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe logical start of the current line.\n"
  remarks: "\n<p>For western scripts this is normally to the left. In bi-directional\ntext it may be to the right.</p>\n<p>Corresponds to the Home key on the keyboard.</p>\n"
  syntax:
    content: StartOfLine = 6
    return:
      type: Sdl.DesktopEditor.EditorApi.Move
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.DesktopEditor.EditorApi.Move.EndOfLine
  commentId: F:Sdl.DesktopEditor.EditorApi.Move.EndOfLine
  id: EndOfLine
  parent: Sdl.DesktopEditor.EditorApi.Move
  langs:
  - csharp
  - vb
  name: EndOfLine
  nameWithType: Move.EndOfLine
  fullName: Sdl.DesktopEditor.EditorApi.Move.EndOfLine
  type: Field
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe logical end of the current line.\n"
  remarks: "\n<p>For western scripts this is normally to the right. In bi-directional\ntext it may be to the left.</p>\n<p>Corresponds to the End key on the keyboard.</p>\n"
  syntax:
    content: EndOfLine = 7
    return:
      type: Sdl.DesktopEditor.EditorApi.Move
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.DesktopEditor.EditorApi.Move.LineUp
  commentId: F:Sdl.DesktopEditor.EditorApi.Move.LineUp
  id: LineUp
  parent: Sdl.DesktopEditor.EditorApi.Move
  langs:
  - csharp
  - vb
  name: LineUp
  nameWithType: Move.LineUp
  fullName: Sdl.DesktopEditor.EditorApi.Move.LineUp
  type: Field
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nOne line up.\n"
  remarks: "\n<p>Corresponds to Up arrow on the keyboard.</p>\n"
  syntax:
    content: LineUp = 8
    return:
      type: Sdl.DesktopEditor.EditorApi.Move
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.DesktopEditor.EditorApi.Move.LineDown
  commentId: F:Sdl.DesktopEditor.EditorApi.Move.LineDown
  id: LineDown
  parent: Sdl.DesktopEditor.EditorApi.Move
  langs:
  - csharp
  - vb
  name: LineDown
  nameWithType: Move.LineDown
  fullName: Sdl.DesktopEditor.EditorApi.Move.LineDown
  type: Field
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nOne line down.\n"
  remarks: "\n<p>Corresponds to Down arrow on the keyboard.</p>\n"
  syntax:
    content: LineDown = 9
    return:
      type: Sdl.DesktopEditor.EditorApi.Move
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.DesktopEditor.EditorApi.Move.PageUp
  commentId: F:Sdl.DesktopEditor.EditorApi.Move.PageUp
  id: PageUp
  parent: Sdl.DesktopEditor.EditorApi.Move
  langs:
  - csharp
  - vb
  name: PageUp
  nameWithType: Move.PageUp
  fullName: Sdl.DesktopEditor.EditorApi.Move.PageUp
  type: Field
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nOne screen up.\n"
  remarks: "\n<p>Corresponds to PageUp on the keyboard.</p>\n"
  syntax:
    content: PageUp = 10
    return:
      type: Sdl.DesktopEditor.EditorApi.Move
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.DesktopEditor.EditorApi.Move.PageDown
  commentId: F:Sdl.DesktopEditor.EditorApi.Move.PageDown
  id: PageDown
  parent: Sdl.DesktopEditor.EditorApi.Move
  langs:
  - csharp
  - vb
  name: PageDown
  nameWithType: Move.PageDown
  fullName: Sdl.DesktopEditor.EditorApi.Move.PageDown
  type: Field
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nOne screen down.\n"
  remarks: "\n<p>Corresponds to PageDown on the keyboard.</p>\n"
  syntax:
    content: PageDown = 11
    return:
      type: Sdl.DesktopEditor.EditorApi.Move
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.DesktopEditor.EditorApi.Move.StartOfSegment
  commentId: F:Sdl.DesktopEditor.EditorApi.Move.StartOfSegment
  id: StartOfSegment
  parent: Sdl.DesktopEditor.EditorApi.Move
  langs:
  - csharp
  - vb
  name: StartOfSegment
  nameWithType: Move.StartOfSegment
  fullName: Sdl.DesktopEditor.EditorApi.Move.StartOfSegment
  type: Field
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe logical start of the current segment. Does not move if the active end of selection\nis not inside a segment.\n"
  remarks: "\n<p>For western scripts this is normally to the left. In bi-directional\ntext it may be to the right.</p>\n<p>Corresponds to the Alt + Home key command.</p>\n"
  syntax:
    content: StartOfSegment = 12
    return:
      type: Sdl.DesktopEditor.EditorApi.Move
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.DesktopEditor.EditorApi.Move.EndOfSegment
  commentId: F:Sdl.DesktopEditor.EditorApi.Move.EndOfSegment
  id: EndOfSegment
  parent: Sdl.DesktopEditor.EditorApi.Move
  langs:
  - csharp
  - vb
  name: EndOfSegment
  nameWithType: Move.EndOfSegment
  fullName: Sdl.DesktopEditor.EditorApi.Move.EndOfSegment
  type: Field
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe logical end of the current segment. Does not move if the active end of selection\nis not inside a segment.\n"
  remarks: "\n<p>For western scripts this is normally to the left. In bi-directional\ntext it may be to the right.</p>\n<p>Corresponds to the Alt + End key command.</p>\n"
  syntax:
    content: EndOfSegment = 13
    return:
      type: Sdl.DesktopEditor.EditorApi.Move
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.Move
  commentId: T:Sdl.DesktopEditor.EditorApi.Move
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Move
  nameWithType: Move
  fullName: Sdl.DesktopEditor.EditorApi.Move
