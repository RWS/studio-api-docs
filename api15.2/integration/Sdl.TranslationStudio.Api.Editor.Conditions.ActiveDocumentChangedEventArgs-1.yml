### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1
  commentId: T:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1
  id: ActiveDocumentChangedEventArgs`1
  parent: Sdl.TranslationStudio.Api.Editor.Conditions
  children:
  - Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.#ctor(`0,`0)
  - Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.NewActiveDocument
  - Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.OldActiveDocument
  langs:
  - csharp
  - vb
  name: ActiveDocumentChangedEventArgs<TDocument>
  nameWithType: ActiveDocumentChangedEventArgs<TDocument>
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs<TDocument>
  type: Class
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Conditions
  summary: "\nClass inherited from EventArgs to specified pair of documents that were changed\n"
  syntax:
    content: 'public class ActiveDocumentChangedEventArgs<TDocument> : EventArgs where TDocument : IDocument'
    typeParameters:
    - id: TDocument
      description: any type that realizes IDocument interface
    content.vb: >-
      Public Class ActiveDocumentChangedEventArgs(Of TDocument As IDocument)
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  nameWithType.vb: ActiveDocumentChangedEventArgs(Of TDocument)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs(Of TDocument)
  name.vb: ActiveDocumentChangedEventArgs(Of TDocument)
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.#ctor(`0,`0)
  commentId: M:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.#ctor(`0,`0)
  id: '#ctor(`0,`0)'
  parent: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1
  langs:
  - csharp
  - vb
  name: ActiveDocumentChangedEventArgs(TDocument, TDocument)
  nameWithType: ActiveDocumentChangedEventArgs<TDocument>.ActiveDocumentChangedEventArgs(TDocument, TDocument)
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs<TDocument>.ActiveDocumentChangedEventArgs(TDocument, TDocument)
  type: Constructor
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Conditions
  summary: "\nPublic constructor\n"
  syntax:
    content: public ActiveDocumentChangedEventArgs(TDocument oldActiveDocument, TDocument newActiveDocument)
    parameters:
    - id: oldActiveDocument
      type: '{TDocument}'
      description: instance of previous active document or null
    - id: newActiveDocument
      type: '{TDocument}'
      description: instance of new active document
    content.vb: Public Sub New(oldActiveDocument As TDocument, newActiveDocument As TDocument)
  overload: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.#ctor*
  nameWithType.vb: ActiveDocumentChangedEventArgs(Of TDocument).ActiveDocumentChangedEventArgs(TDocument, TDocument)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs(Of TDocument).ActiveDocumentChangedEventArgs(TDocument, TDocument)
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.OldActiveDocument
  commentId: P:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.OldActiveDocument
  id: OldActiveDocument
  parent: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1
  langs:
  - csharp
  - vb
  name: OldActiveDocument
  nameWithType: ActiveDocumentChangedEventArgs<TDocument>.OldActiveDocument
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs<TDocument>.OldActiveDocument
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Conditions
  syntax:
    content: public TDocument OldActiveDocument { get; }
    parameters: []
    return:
      type: '{TDocument}'
    content.vb: Public ReadOnly Property OldActiveDocument As TDocument
  overload: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.OldActiveDocument*
  nameWithType.vb: ActiveDocumentChangedEventArgs(Of TDocument).OldActiveDocument
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs(Of TDocument).OldActiveDocument
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.NewActiveDocument
  commentId: P:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.NewActiveDocument
  id: NewActiveDocument
  parent: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1
  langs:
  - csharp
  - vb
  name: NewActiveDocument
  nameWithType: ActiveDocumentChangedEventArgs<TDocument>.NewActiveDocument
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs<TDocument>.NewActiveDocument
  type: Property
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor.Conditions
  syntax:
    content: public TDocument NewActiveDocument { get; }
    parameters: []
    return:
      type: '{TDocument}'
    content.vb: Public ReadOnly Property NewActiveDocument As TDocument
  overload: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.NewActiveDocument*
  nameWithType.vb: ActiveDocumentChangedEventArgs(Of TDocument).NewActiveDocument
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs(Of TDocument).NewActiveDocument
references:
- uid: Sdl.TranslationStudio.Api.Editor.Conditions
  commentId: N:Sdl.TranslationStudio.Api.Editor.Conditions
  isExternal: true
  name: Sdl.TranslationStudio.Api.Editor.Conditions
  nameWithType: Sdl.TranslationStudio.Api.Editor.Conditions
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.#ctor*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.#ctor
  isExternal: true
  name: ActiveDocumentChangedEventArgs
  nameWithType: ActiveDocumentChangedEventArgs<TDocument>.ActiveDocumentChangedEventArgs
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs<TDocument>.ActiveDocumentChangedEventArgs
  nameWithType.vb: ActiveDocumentChangedEventArgs(Of TDocument).ActiveDocumentChangedEventArgs
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs(Of TDocument).ActiveDocumentChangedEventArgs
- uid: '{TDocument}'
  commentId: '!:TDocument'
  definition: TDocument
  name: TDocument
  nameWithType: TDocument
  fullName: TDocument
- uid: TDocument
  name: TDocument
  nameWithType: TDocument
  fullName: TDocument
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.OldActiveDocument*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.OldActiveDocument
  isExternal: true
  name: OldActiveDocument
  nameWithType: ActiveDocumentChangedEventArgs<TDocument>.OldActiveDocument
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs<TDocument>.OldActiveDocument
  nameWithType.vb: ActiveDocumentChangedEventArgs(Of TDocument).OldActiveDocument
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs(Of TDocument).OldActiveDocument
- uid: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.NewActiveDocument*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs`1.NewActiveDocument
  isExternal: true
  name: NewActiveDocument
  nameWithType: ActiveDocumentChangedEventArgs<TDocument>.NewActiveDocument
  fullName: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs<TDocument>.NewActiveDocument
  nameWithType.vb: ActiveDocumentChangedEventArgs(Of TDocument).NewActiveDocument
  fullName.vb: Sdl.TranslationStudio.Api.Editor.Conditions.ActiveDocumentChangedEventArgs(Of TDocument).NewActiveDocument
