### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService
  commentId: T:Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService
  id: IProjectServerAssignmentService
  parent: Sdl.TranslationStudio.Api.ProjectManagement
  children:
  - Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.AssignUsersToPhase(System.String,Sdl.ProjectApi.IProjectFile[],Sdl.ProjectApi.IProject)
  - Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhase(System.String,Sdl.ProjectApi.IProjectFile[],Sdl.ProjectApi.IProject,System.String)
  - Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhaseWithCheckIn(System.String,Sdl.ProjectApi.IProjectFile[],Sdl.ProjectApi.IProject)
  - Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.FileCanBeAssigned(Sdl.ProjectApi.IProjectFile)
  - Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.GetSupportedPhases(Sdl.ProjectApi.IProject)
  - Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.IsAutoUploadSupported(Sdl.ProjectApi.IProject)
  - Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.UploadFiles(Sdl.ProjectApi.IProjectFile[])
  langs:
  - csharp
  - vb
  name: IProjectServerAssignmentService
  nameWithType: IProjectServerAssignmentService
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService
  type: Interface
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  summary: "\nService interface for all functionality related to the project server\n"
  syntax:
    content: 'public interface IProjectServerAssignmentService : IService'
    content.vb: >-
      Public Interface IProjectServerAssignmentService
          Inherits IService
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.AssignUsersToPhase(System.String,Sdl.ProjectApi.IProjectFile[],Sdl.ProjectApi.IProject)
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.AssignUsersToPhase(System.String,Sdl.ProjectApi.IProjectFile[],Sdl.ProjectApi.IProject)
  id: AssignUsersToPhase(System.String,Sdl.ProjectApi.IProjectFile[],Sdl.ProjectApi.IProject)
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService
  langs:
  - csharp
  - vb
  name: AssignUsersToPhase(String, IProjectFile[], IProject)
  nameWithType: IProjectServerAssignmentService.AssignUsersToPhase(String, IProjectFile[], IProject)
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.AssignUsersToPhase(System.String, Sdl.ProjectApi.IProjectFile[], Sdl.ProjectApi.IProject)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  syntax:
    content: bool AssignUsersToPhase(string phase, IProjectFile[] projectFiles, IProject project)
    parameters:
    - id: phase
      type: System.String
    - id: projectFiles
      type: Sdl.ProjectApi.IProjectFile[]
    - id: project
      type: Sdl.ProjectApi.IProject
    return:
      type: System.Boolean
    content.vb: Function AssignUsersToPhase(phase As String, projectFiles As IProjectFile(), project As IProject) As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.AssignUsersToPhase*
  nameWithType.vb: IProjectServerAssignmentService.AssignUsersToPhase(String, IProjectFile(), IProject)
  fullName.vb: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.AssignUsersToPhase(System.String, Sdl.ProjectApi.IProjectFile(), Sdl.ProjectApi.IProject)
  name.vb: AssignUsersToPhase(String, IProjectFile(), IProject)
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhase(System.String,Sdl.ProjectApi.IProjectFile[],Sdl.ProjectApi.IProject,System.String)
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhase(System.String,Sdl.ProjectApi.IProjectFile[],Sdl.ProjectApi.IProject,System.String)
  id: ChangeFilesPhase(System.String,Sdl.ProjectApi.IProjectFile[],Sdl.ProjectApi.IProject,System.String)
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService
  langs:
  - csharp
  - vb
  name: ChangeFilesPhase(String, IProjectFile[], IProject, String)
  nameWithType: IProjectServerAssignmentService.ChangeFilesPhase(String, IProjectFile[], IProject, String)
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhase(System.String, Sdl.ProjectApi.IProjectFile[], Sdl.ProjectApi.IProject, System.String)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  syntax:
    content: bool ChangeFilesPhase(string phase, IProjectFile[] projectFiles, IProject project, string comment = null)
    parameters:
    - id: phase
      type: System.String
    - id: projectFiles
      type: Sdl.ProjectApi.IProjectFile[]
    - id: project
      type: Sdl.ProjectApi.IProject
    - id: comment
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function ChangeFilesPhase(phase As String, projectFiles As IProjectFile(), project As IProject, comment As String = Nothing) As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhase*
  nameWithType.vb: IProjectServerAssignmentService.ChangeFilesPhase(String, IProjectFile(), IProject, String)
  fullName.vb: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhase(System.String, Sdl.ProjectApi.IProjectFile(), Sdl.ProjectApi.IProject, System.String)
  name.vb: ChangeFilesPhase(String, IProjectFile(), IProject, String)
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhaseWithCheckIn(System.String,Sdl.ProjectApi.IProjectFile[],Sdl.ProjectApi.IProject)
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhaseWithCheckIn(System.String,Sdl.ProjectApi.IProjectFile[],Sdl.ProjectApi.IProject)
  id: ChangeFilesPhaseWithCheckIn(System.String,Sdl.ProjectApi.IProjectFile[],Sdl.ProjectApi.IProject)
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService
  langs:
  - csharp
  - vb
  name: ChangeFilesPhaseWithCheckIn(String, IProjectFile[], IProject)
  nameWithType: IProjectServerAssignmentService.ChangeFilesPhaseWithCheckIn(String, IProjectFile[], IProject)
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhaseWithCheckIn(System.String, Sdl.ProjectApi.IProjectFile[], Sdl.ProjectApi.IProject)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  syntax:
    content: bool ChangeFilesPhaseWithCheckIn(string phase, IProjectFile[] projectFiles, IProject project)
    parameters:
    - id: phase
      type: System.String
    - id: projectFiles
      type: Sdl.ProjectApi.IProjectFile[]
    - id: project
      type: Sdl.ProjectApi.IProject
    return:
      type: System.Boolean
    content.vb: Function ChangeFilesPhaseWithCheckIn(phase As String, projectFiles As IProjectFile(), project As IProject) As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhaseWithCheckIn*
  nameWithType.vb: IProjectServerAssignmentService.ChangeFilesPhaseWithCheckIn(String, IProjectFile(), IProject)
  fullName.vb: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhaseWithCheckIn(System.String, Sdl.ProjectApi.IProjectFile(), Sdl.ProjectApi.IProject)
  name.vb: ChangeFilesPhaseWithCheckIn(String, IProjectFile(), IProject)
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.UploadFiles(Sdl.ProjectApi.IProjectFile[])
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.UploadFiles(Sdl.ProjectApi.IProjectFile[])
  id: UploadFiles(Sdl.ProjectApi.IProjectFile[])
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService
  langs:
  - csharp
  - vb
  name: UploadFiles(IProjectFile[])
  nameWithType: IProjectServerAssignmentService.UploadFiles(IProjectFile[])
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.UploadFiles(Sdl.ProjectApi.IProjectFile[])
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  syntax:
    content: bool UploadFiles(IProjectFile[] projectFiles)
    parameters:
    - id: projectFiles
      type: Sdl.ProjectApi.IProjectFile[]
    return:
      type: System.Boolean
    content.vb: Function UploadFiles(projectFiles As IProjectFile()) As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.UploadFiles*
  nameWithType.vb: IProjectServerAssignmentService.UploadFiles(IProjectFile())
  fullName.vb: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.UploadFiles(Sdl.ProjectApi.IProjectFile())
  name.vb: UploadFiles(IProjectFile())
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.FileCanBeAssigned(Sdl.ProjectApi.IProjectFile)
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.FileCanBeAssigned(Sdl.ProjectApi.IProjectFile)
  id: FileCanBeAssigned(Sdl.ProjectApi.IProjectFile)
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService
  langs:
  - csharp
  - vb
  name: FileCanBeAssigned(IProjectFile)
  nameWithType: IProjectServerAssignmentService.FileCanBeAssigned(IProjectFile)
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.FileCanBeAssigned(Sdl.ProjectApi.IProjectFile)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  syntax:
    content: bool FileCanBeAssigned(IProjectFile file)
    parameters:
    - id: file
      type: Sdl.ProjectApi.IProjectFile
    return:
      type: System.Boolean
    content.vb: Function FileCanBeAssigned(file As IProjectFile) As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.FileCanBeAssigned*
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.GetSupportedPhases(Sdl.ProjectApi.IProject)
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.GetSupportedPhases(Sdl.ProjectApi.IProject)
  id: GetSupportedPhases(Sdl.ProjectApi.IProject)
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService
  langs:
  - csharp
  - vb
  name: GetSupportedPhases(IProject)
  nameWithType: IProjectServerAssignmentService.GetSupportedPhases(IProject)
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.GetSupportedPhases(Sdl.ProjectApi.IProject)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  syntax:
    content: IEnumerable<ProjectPhaseNameInfo> GetSupportedPhases(IProject project)
    parameters:
    - id: project
      type: Sdl.ProjectApi.IProject
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.TranslationStudio.Api.ProjectManagement.Dtos.ProjectPhaseNameInfo}
    content.vb: Function GetSupportedPhases(project As IProject) As IEnumerable(Of ProjectPhaseNameInfo)
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.GetSupportedPhases*
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.IsAutoUploadSupported(Sdl.ProjectApi.IProject)
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.IsAutoUploadSupported(Sdl.ProjectApi.IProject)
  id: IsAutoUploadSupported(Sdl.ProjectApi.IProject)
  parent: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService
  langs:
  - csharp
  - vb
  name: IsAutoUploadSupported(IProject)
  nameWithType: IProjectServerAssignmentService.IsAutoUploadSupported(IProject)
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.IsAutoUploadSupported(Sdl.ProjectApi.IProject)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement
  syntax:
    content: bool IsAutoUploadSupported(IProject project)
    parameters:
    - id: project
      type: Sdl.ProjectApi.IProject
    return:
      type: System.Boolean
    content.vb: Function IsAutoUploadSupported(project As IProject) As Boolean
  overload: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.IsAutoUploadSupported*
references:
- uid: Sdl.TranslationStudio.Api.ProjectManagement
  commentId: N:Sdl.TranslationStudio.Api.ProjectManagement
  isExternal: true
  name: Sdl.TranslationStudio.Api.ProjectManagement
  nameWithType: Sdl.TranslationStudio.Api.ProjectManagement
  fullName: Sdl.TranslationStudio.Api.ProjectManagement
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.AssignUsersToPhase*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.AssignUsersToPhase
  isExternal: true
  name: AssignUsersToPhase
  nameWithType: IProjectServerAssignmentService.AssignUsersToPhase
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.AssignUsersToPhase
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.ProjectApi.IProjectFile[]
  isExternal: true
  name: IProjectFile[]
  nameWithType: IProjectFile[]
  fullName: Sdl.ProjectApi.IProjectFile[]
  nameWithType.vb: IProjectFile()
  fullName.vb: Sdl.ProjectApi.IProjectFile()
  name.vb: IProjectFile()
  spec.csharp:
  - uid: Sdl.ProjectApi.IProjectFile
    name: IProjectFile
    nameWithType: IProjectFile
    fullName: Sdl.ProjectApi.IProjectFile
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectApi.IProjectFile
    name: IProjectFile
    nameWithType: IProjectFile
    fullName: Sdl.ProjectApi.IProjectFile
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.ProjectApi.IProject
  isExternal: true
  name: IProject
  nameWithType: IProject
  fullName: Sdl.ProjectApi.IProject
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhase*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhase
  isExternal: true
  name: ChangeFilesPhase
  nameWithType: IProjectServerAssignmentService.ChangeFilesPhase
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhase
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhaseWithCheckIn*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhaseWithCheckIn
  isExternal: true
  name: ChangeFilesPhaseWithCheckIn
  nameWithType: IProjectServerAssignmentService.ChangeFilesPhaseWithCheckIn
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.ChangeFilesPhaseWithCheckIn
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.UploadFiles*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.UploadFiles
  isExternal: true
  name: UploadFiles
  nameWithType: IProjectServerAssignmentService.UploadFiles
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.UploadFiles
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.FileCanBeAssigned*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.FileCanBeAssigned
  isExternal: true
  name: FileCanBeAssigned
  nameWithType: IProjectServerAssignmentService.FileCanBeAssigned
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.FileCanBeAssigned
- uid: Sdl.ProjectApi.IProjectFile
  isExternal: true
  name: IProjectFile
  nameWithType: IProjectFile
  fullName: Sdl.ProjectApi.IProjectFile
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.GetSupportedPhases*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.GetSupportedPhases
  isExternal: true
  name: GetSupportedPhases
  nameWithType: IProjectServerAssignmentService.GetSupportedPhases
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.GetSupportedPhases
- uid: System.Collections.Generic.IEnumerable{Sdl.TranslationStudio.Api.ProjectManagement.Dtos.ProjectPhaseNameInfo}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.TranslationStudio.Api.ProjectManagement.Dtos.ProjectPhaseNameInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ProjectPhaseNameInfo>
  nameWithType: IEnumerable<ProjectPhaseNameInfo>
  fullName: System.Collections.Generic.IEnumerable<Sdl.TranslationStudio.Api.ProjectManagement.Dtos.ProjectPhaseNameInfo>
  nameWithType.vb: IEnumerable(Of ProjectPhaseNameInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.TranslationStudio.Api.ProjectManagement.Dtos.ProjectPhaseNameInfo)
  name.vb: IEnumerable(Of ProjectPhaseNameInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.TranslationStudio.Api.ProjectManagement.Dtos.ProjectPhaseNameInfo
    name: ProjectPhaseNameInfo
    nameWithType: ProjectPhaseNameInfo
    fullName: Sdl.TranslationStudio.Api.ProjectManagement.Dtos.ProjectPhaseNameInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.TranslationStudio.Api.ProjectManagement.Dtos.ProjectPhaseNameInfo
    name: ProjectPhaseNameInfo
    nameWithType: ProjectPhaseNameInfo
    fullName: Sdl.TranslationStudio.Api.ProjectManagement.Dtos.ProjectPhaseNameInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.IsAutoUploadSupported*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.IsAutoUploadSupported
  isExternal: true
  name: IsAutoUploadSupported
  nameWithType: IProjectServerAssignmentService.IsAutoUploadSupported
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.IProjectServerAssignmentService.IsAutoUploadSupported
