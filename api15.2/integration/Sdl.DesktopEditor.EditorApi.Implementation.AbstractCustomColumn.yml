### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  commentId: T:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  id: AbstractCustomColumn
  parent: Sdl.DesktopEditor.EditorApi.Implementation
  children:
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.#ctor
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.BeginDraw
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateCellContentHeight(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo)
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font)
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32)
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawBorders(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawBottomBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawCell(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawDefaultBackground(System.Drawing.Graphics,System.Drawing.Rectangle,Sdl.DesktopEditor.EditorApi.IRowInfo)
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawLeftBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawRightBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawTopBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.EditControl
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.GetFont
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.GetOptimalWidth(System.Drawing.Graphics)
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.IsComplex
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.PrepareRegisterRows
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.RegisterRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.SetRowSizeAccessor(Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor)
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.TextFormat
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.Width
  langs:
  - csharp
  - vb
  name: AbstractCustomColumn
  nameWithType: AbstractCustomColumn
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  type: Class
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nAbstract base class that you can derive from when creating custom columns for the editor.\n<p>\nTakes care of some of the plumbing involved in implementing the interfaces and implements helper functions \nfor drawing background and borders, measuring text and implementing font fallback.\n</p>\n"
  syntax:
    content: 'public abstract class AbstractCustomColumn : ICustomColumn'
    content.vb: >-
      Public MustInherit Class AbstractCustomColumn
          Implements ICustomColumn
  inheritance:
  - System.Object
  derivedClasses:
  - Sdl.DesktopEditor.EditorApi.Implementation.AbstractRowSelectionColumn
  - Sdl.DesktopEditor.EditorApi.Implementation.DocumentStructureInfoColumn
  implements:
  - Sdl.DesktopEditor.EditorApi.ICustomColumn
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font)
  id: CalculateTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font)
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: CalculateTextSize(Graphics, String, Font)
  nameWithType: AbstractCustomColumn.CalculateTextSize(Graphics, String, Font)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateTextSize(System.Drawing.Graphics, System.String, System.Drawing.Font)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nDetermine the size of a text string in a specific font on a specific device,\nassuming that the text will not need to get word wrapped.\n"
  syntax:
    content: protected Size CalculateTextSize(Graphics g, string text, Font font)
    parameters:
    - id: g
      type: System.Drawing.Graphics
    - id: text
      type: System.String
    - id: font
      type: System.Drawing.Font
    return:
      type: System.Drawing.Size
    content.vb: Protected Function CalculateTextSize(g As Graphics, text As String, font As Font) As Size
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateTextSize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32)
  id: CalculateTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32)
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: CalculateTextSize(Graphics, String, Font, Int32)
  nameWithType: AbstractCustomColumn.CalculateTextSize(Graphics, String, Font, Int32)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateTextSize(System.Drawing.Graphics, System.String, System.Drawing.Font, System.Int32)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nDetermine the size of a text string in a specified font, assuming\nthat there is a maximum width which if exceeded will cause the\ntext to word wrap across multiple lines.\n"
  syntax:
    content: protected Size CalculateTextSize(Graphics g, string text, Font font, int maxWidth)
    parameters:
    - id: g
      type: System.Drawing.Graphics
    - id: text
      type: System.String
    - id: font
      type: System.Drawing.Font
    - id: maxWidth
      type: System.Int32
    return:
      type: System.Drawing.Size
    content.vb: Protected Function CalculateTextSize(g As Graphics, text As String, font As Font, maxWidth As Integer) As Size
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateTextSize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.GetFont
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.GetFont
  id: GetFont
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: GetFont()
  nameWithType: AbstractCustomColumn.GetFont()
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.GetFont()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nGet the default font to use for text in this column.\n"
  remarks: "\n<p>\nThe default implementation returns the system menu font.\n</p>\n"
  syntax:
    content: protected virtual Font GetFont()
    return:
      type: System.Drawing.Font
    content.vb: Protected Overridable Function GetFont As Font
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.GetFont*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawDefaultBackground(System.Drawing.Graphics,System.Drawing.Rectangle,Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawDefaultBackground(System.Drawing.Graphics,System.Drawing.Rectangle,Sdl.DesktopEditor.EditorApi.IRowInfo)
  id: DrawDefaultBackground(System.Drawing.Graphics,System.Drawing.Rectangle,Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: DrawDefaultBackground(Graphics, Rectangle, IRowInfo)
  nameWithType: AbstractCustomColumn.DrawDefaultBackground(Graphics, Rectangle, IRowInfo)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawDefaultBackground(System.Drawing.Graphics, System.Drawing.Rectangle, Sdl.DesktopEditor.EditorApi.IRowInfo)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nFill the cell with the effective background color for the row.\n"
  syntax:
    content: protected void DrawDefaultBackground(Graphics g, Rectangle cellBounds, IRowInfo row)
    parameters:
    - id: g
      type: System.Drawing.Graphics
    - id: cellBounds
      type: System.Drawing.Rectangle
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
    content.vb: Protected Sub DrawDefaultBackground(g As Graphics, cellBounds As Rectangle, row As IRowInfo)
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawDefaultBackground*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawBorders(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawBorders(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
  id: DrawBorders(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: DrawBorders(Graphics, Rectangle, Pen, Pen, Pen, Pen)
  nameWithType: AbstractCustomColumn.DrawBorders(Graphics, Rectangle, Pen, Pen, Pen, Pen)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawBorders(System.Drawing.Graphics, System.Drawing.Rectangle, System.Drawing.Pen, System.Drawing.Pen, System.Drawing.Pen, System.Drawing.Pen)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nDraw all the default borders for the cell.\n"
  syntax:
    content: protected static void DrawBorders(Graphics g, Rectangle cellBounds, Pen leftBorderPen, Pen rightBorderPen, Pen topBorderPen, Pen bottomBorderPen)
    parameters:
    - id: g
      type: System.Drawing.Graphics
    - id: cellBounds
      type: System.Drawing.Rectangle
    - id: leftBorderPen
      type: System.Drawing.Pen
    - id: rightBorderPen
      type: System.Drawing.Pen
    - id: topBorderPen
      type: System.Drawing.Pen
    - id: bottomBorderPen
      type: System.Drawing.Pen
    content.vb: Protected Shared Sub DrawBorders(g As Graphics, cellBounds As Rectangle, leftBorderPen As Pen, rightBorderPen As Pen, topBorderPen As Pen, bottomBorderPen As Pen)
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawBorders*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawTopBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawTopBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)
  id: DrawTopBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: DrawTopBorder(Graphics, Rectangle, Pen)
  nameWithType: AbstractCustomColumn.DrawTopBorder(Graphics, Rectangle, Pen)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawTopBorder(System.Drawing.Graphics, System.Drawing.Rectangle, System.Drawing.Pen)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nDraw the top border for the cell.\n"
  syntax:
    content: protected static void DrawTopBorder(Graphics g, Rectangle cellBounds, Pen topBorderPen)
    parameters:
    - id: g
      type: System.Drawing.Graphics
    - id: cellBounds
      type: System.Drawing.Rectangle
    - id: topBorderPen
      type: System.Drawing.Pen
    content.vb: Protected Shared Sub DrawTopBorder(g As Graphics, cellBounds As Rectangle, topBorderPen As Pen)
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawTopBorder*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawRightBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawRightBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)
  id: DrawRightBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: DrawRightBorder(Graphics, Rectangle, Pen)
  nameWithType: AbstractCustomColumn.DrawRightBorder(Graphics, Rectangle, Pen)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawRightBorder(System.Drawing.Graphics, System.Drawing.Rectangle, System.Drawing.Pen)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nDraw the right border for the cell.\n"
  syntax:
    content: protected static void DrawRightBorder(Graphics g, Rectangle cellBounds, Pen rightBorderPen)
    parameters:
    - id: g
      type: System.Drawing.Graphics
    - id: cellBounds
      type: System.Drawing.Rectangle
    - id: rightBorderPen
      type: System.Drawing.Pen
    content.vb: Protected Shared Sub DrawRightBorder(g As Graphics, cellBounds As Rectangle, rightBorderPen As Pen)
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawRightBorder*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawBottomBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawBottomBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)
  id: DrawBottomBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: DrawBottomBorder(Graphics, Rectangle, Pen)
  nameWithType: AbstractCustomColumn.DrawBottomBorder(Graphics, Rectangle, Pen)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawBottomBorder(System.Drawing.Graphics, System.Drawing.Rectangle, System.Drawing.Pen)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nDraw the bottom border for the cell.\n"
  syntax:
    content: protected static void DrawBottomBorder(Graphics g, Rectangle cellBounds, Pen bottomBorderPen)
    parameters:
    - id: g
      type: System.Drawing.Graphics
    - id: cellBounds
      type: System.Drawing.Rectangle
    - id: bottomBorderPen
      type: System.Drawing.Pen
    content.vb: Protected Shared Sub DrawBottomBorder(g As Graphics, cellBounds As Rectangle, bottomBorderPen As Pen)
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawBottomBorder*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawLeftBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawLeftBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)
  id: DrawLeftBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: DrawLeftBorder(Graphics, Rectangle, Pen)
  nameWithType: AbstractCustomColumn.DrawLeftBorder(Graphics, Rectangle, Pen)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawLeftBorder(System.Drawing.Graphics, System.Drawing.Rectangle, System.Drawing.Pen)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nDraw the left border for the cell.\n"
  syntax:
    content: protected static void DrawLeftBorder(Graphics g, Rectangle cellBounds, Pen leftBorderPen)
    parameters:
    - id: g
      type: System.Drawing.Graphics
    - id: cellBounds
      type: System.Drawing.Rectangle
    - id: leftBorderPen
      type: System.Drawing.Pen
    content.vb: Protected Shared Sub DrawLeftBorder(g As Graphics, cellBounds As Rectangle, leftBorderPen As Pen)
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawLeftBorder*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.GetOptimalWidth(System.Drawing.Graphics)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.GetOptimalWidth(System.Drawing.Graphics)
  id: GetOptimalWidth(System.Drawing.Graphics)
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: GetOptimalWidth(Graphics)
  nameWithType: AbstractCustomColumn.GetOptimalWidth(Graphics)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.GetOptimalWidth(System.Drawing.Graphics)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nThe implementation should return the desired column width.\n"
  syntax:
    content: public abstract int GetOptimalWidth(Graphics g)
    parameters:
    - id: g
      type: System.Drawing.Graphics
    return:
      type: System.Int32
    content.vb: Public MustOverride Function GetOptimalWidth(g As Graphics) As Integer
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.GetOptimalWidth*
  implements:
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.GetOptimalWidth(System.Drawing.Graphics)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateCellContentHeight(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateCellContentHeight(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo)
  id: CalculateCellContentHeight(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: CalculateCellContentHeight(Graphics, IRowInfo)
  nameWithType: AbstractCustomColumn.CalculateCellContentHeight(Graphics, IRowInfo)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateCellContentHeight(System.Drawing.Graphics, Sdl.DesktopEditor.EditorApi.IRowInfo)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nThe implementation should return the height of the content in the cell.\n"
  syntax:
    content: public abstract int CalculateCellContentHeight(Graphics g, IRowInfo row)
    parameters:
    - id: g
      type: System.Drawing.Graphics
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
    return:
      type: System.Int32
    content.vb: Public MustOverride Function CalculateCellContentHeight(g As Graphics, row As IRowInfo) As Integer
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateCellContentHeight*
  implements:
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.CalculateCellContentHeight(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.BeginDraw
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.BeginDraw
  id: BeginDraw
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: BeginDraw()
  nameWithType: AbstractCustomColumn.BeginDraw()
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.BeginDraw()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nCalled by the control when a repaint is needed.\nThis is called once before a range of DrawCell calls.\n"
  syntax:
    content: public virtual void BeginDraw()
    content.vb: Public Overridable Sub BeginDraw
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.BeginDraw*
  implements:
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.BeginDraw
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawCell(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawCell(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
  id: DrawCell(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: DrawCell(Graphics, IRowInfo, Rectangle, Pen, Pen, Pen, Pen)
  nameWithType: AbstractCustomColumn.DrawCell(Graphics, IRowInfo, Rectangle, Pen, Pen, Pen, Pen)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawCell(System.Drawing.Graphics, Sdl.DesktopEditor.EditorApi.IRowInfo, System.Drawing.Rectangle, System.Drawing.Pen, System.Drawing.Pen, System.Drawing.Pen, System.Drawing.Pen)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nThe implementation should draw the content of the cell.\n"
  syntax:
    content: public abstract void DrawCell(Graphics g, IRowInfo row, Rectangle cellBounds, Pen leftBorderPen, Pen rightBorderPen, Pen topBorderPen, Pen bottomBorderPen)
    parameters:
    - id: g
      type: System.Drawing.Graphics
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
    - id: cellBounds
      type: System.Drawing.Rectangle
    - id: leftBorderPen
      type: System.Drawing.Pen
    - id: rightBorderPen
      type: System.Drawing.Pen
    - id: topBorderPen
      type: System.Drawing.Pen
    - id: bottomBorderPen
      type: System.Drawing.Pen
    content.vb: Public MustOverride Sub DrawCell(g As Graphics, row As IRowInfo, cellBounds As Rectangle, leftBorderPen As Pen, rightBorderPen As Pen, topBorderPen As Pen, bottomBorderPen As Pen)
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawCell*
  implements:
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.DrawCell(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.SetRowSizeAccessor(Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.SetRowSizeAccessor(Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor)
  id: SetRowSizeAccessor(Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor)
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: SetRowSizeAccessor(RowSizeAccessor)
  nameWithType: AbstractCustomColumn.SetRowSizeAccessor(RowSizeAccessor)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.SetRowSizeAccessor(Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nAllows the Editor to pass in a row size delegate which can be used to get the current <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref>\nof any row in the Editor. The default implementation does nothing.\n"
  syntax:
    content: public virtual void SetRowSizeAccessor(RowSizeAccessor rowSizeAccessor)
    parameters:
    - id: rowSizeAccessor
      type: Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor
      description: Delegate that will be passed into the row when registered with the Editor.
    content.vb: Public Overridable Sub SetRowSizeAccessor(rowSizeAccessor As RowSizeAccessor)
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.SetRowSizeAccessor*
  implements:
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.SetRowSizeAccessor(Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.PrepareRegisterRows
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.PrepareRegisterRows
  id: PrepareRegisterRows
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: PrepareRegisterRows()
  nameWithType: AbstractCustomColumn.PrepareRegisterRows()
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.PrepareRegisterRows()
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nCalled from the Editor before RegisterRows are called. Unfortunately RegisterRow is called for all rows when\na change occurs in structure, even the row was already &apos;registered&apos;.\n"
  syntax:
    content: public virtual void PrepareRegisterRows()
    content.vb: Public Overridable Sub PrepareRegisterRows
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.PrepareRegisterRows*
  implements:
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.PrepareRegisterRows
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.RegisterRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.RegisterRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  id: RegisterRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: RegisterRow(IRowInfo)
  nameWithType: AbstractCustomColumn.RegisterRow(IRowInfo)
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.RegisterRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  type: Method
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nCalled from the Editor when a row has been created. Allows a column to keep track of the rows available in the Editor\nand collect any information it needs about it. The default implementation does nothing.\n"
  syntax:
    content: public virtual void RegisterRow(IRowInfo row)
    parameters:
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
      description: The row that has been created in the Editor.
    content.vb: Public Overridable Sub RegisterRow(row As IRowInfo)
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.RegisterRow*
  implements:
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.RegisterRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.#ctor
  commentId: M:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.#ctor
  id: '#ctor'
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: AbstractCustomColumn()
  nameWithType: AbstractCustomColumn.AbstractCustomColumn()
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.AbstractCustomColumn()
  type: Constructor
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  syntax:
    content: protected AbstractCustomColumn()
    content.vb: Protected Sub New
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.TextFormat
  commentId: P:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.TextFormat
  id: TextFormat
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: TextFormat
  nameWithType: AbstractCustomColumn.TextFormat
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.TextFormat
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nAlignment of the text in the control, used when calculating the text size.\nBy default the text is centered vertically.\n"
  syntax:
    content: public TextFormatFlags TextFormat { get; set; }
    parameters: []
    return:
      type: System.Windows.Forms.TextFormatFlags
    content.vb: Public Property TextFormat As TextFormatFlags
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.TextFormat*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.EditControl
  commentId: P:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.EditControl
  id: EditControl
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: EditControl
  nameWithType: AbstractCustomColumn.EditControl
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.EditControl
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nDefault implementation stores the value in a member.\n"
  syntax:
    content: public virtual IEditControl EditControl { get; set; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.IEditControl
    content.vb: Public Overridable Property EditControl As IEditControl
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.EditControl*
  implements:
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.EditControl
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.Width
  commentId: P:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.Width
  id: Width
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: AbstractCustomColumn.Width
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.Width
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nDefault implementation stores the value in a member.\n"
  syntax:
    content: public virtual int Width { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property Width As Integer
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.Width*
  implements:
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.Width
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.IsComplex
  commentId: P:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.IsComplex
  id: IsComplex
  parent: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn
  langs:
  - csharp
  - vb
  name: IsComplex
  nameWithType: AbstractCustomColumn.IsComplex
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.IsComplex
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi.Implementation
  summary: "\nDetermines whether the column is complex or not. A normal column can draw each row\nindependently of other rows. However, a complex column cannot draw each row \nindependently of other rows. So complex columns need to be entirely redrawn when \nrows are changed or resized.\n"
  syntax:
    content: public virtual bool IsComplex { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsComplex As Boolean
  overload: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.IsComplex*
  implements:
  - Sdl.DesktopEditor.EditorApi.ICustomColumn.IsComplex
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: Sdl.DesktopEditor.EditorApi.Implementation
  commentId: N:Sdl.DesktopEditor.EditorApi.Implementation
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi.Implementation
  nameWithType: Sdl.DesktopEditor.EditorApi.Implementation
  fullName: Sdl.DesktopEditor.EditorApi.Implementation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn
  commentId: T:Sdl.DesktopEditor.EditorApi.ICustomColumn
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: ICustomColumn
  nameWithType: ICustomColumn
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateTextSize*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateTextSize
  isExternal: true
  name: CalculateTextSize
  nameWithType: AbstractCustomColumn.CalculateTextSize
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateTextSize
- uid: System.Drawing.Graphics
  isExternal: true
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Font
  isExternal: true
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Drawing.Size
  isExternal: true
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.GetFont*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.GetFont
  isExternal: true
  name: GetFont
  nameWithType: AbstractCustomColumn.GetFont
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.GetFont
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawDefaultBackground*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawDefaultBackground
  isExternal: true
  name: DrawDefaultBackground
  nameWithType: AbstractCustomColumn.DrawDefaultBackground
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawDefaultBackground
- uid: System.Drawing.Rectangle
  isExternal: true
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: Sdl.DesktopEditor.EditorApi.IRowInfo
  commentId: T:Sdl.DesktopEditor.EditorApi.IRowInfo
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IRowInfo
  nameWithType: IRowInfo
  fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawBorders*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawBorders
  isExternal: true
  name: DrawBorders
  nameWithType: AbstractCustomColumn.DrawBorders
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawBorders
- uid: System.Drawing.Pen
  isExternal: true
  name: Pen
  nameWithType: Pen
  fullName: System.Drawing.Pen
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawTopBorder*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawTopBorder
  isExternal: true
  name: DrawTopBorder
  nameWithType: AbstractCustomColumn.DrawTopBorder
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawTopBorder
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawRightBorder*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawRightBorder
  isExternal: true
  name: DrawRightBorder
  nameWithType: AbstractCustomColumn.DrawRightBorder
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawRightBorder
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawBottomBorder*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawBottomBorder
  isExternal: true
  name: DrawBottomBorder
  nameWithType: AbstractCustomColumn.DrawBottomBorder
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawBottomBorder
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawLeftBorder*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawLeftBorder
  isExternal: true
  name: DrawLeftBorder
  nameWithType: AbstractCustomColumn.DrawLeftBorder
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawLeftBorder
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.GetOptimalWidth*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.GetOptimalWidth
  isExternal: true
  name: GetOptimalWidth
  nameWithType: AbstractCustomColumn.GetOptimalWidth
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.GetOptimalWidth
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.GetOptimalWidth(System.Drawing.Graphics)
  commentId: M:Sdl.DesktopEditor.EditorApi.ICustomColumn.GetOptimalWidth(System.Drawing.Graphics)
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: GetOptimalWidth(Graphics)
  nameWithType: ICustomColumn.GetOptimalWidth(Graphics)
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.GetOptimalWidth(System.Drawing.Graphics)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.GetOptimalWidth(System.Drawing.Graphics)
    name: GetOptimalWidth
    nameWithType: ICustomColumn.GetOptimalWidth
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.GetOptimalWidth
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Drawing.Graphics
    name: Graphics
    nameWithType: Graphics
    fullName: System.Drawing.Graphics
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.GetOptimalWidth(System.Drawing.Graphics)
    name: GetOptimalWidth
    nameWithType: ICustomColumn.GetOptimalWidth
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.GetOptimalWidth
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Drawing.Graphics
    name: Graphics
    nameWithType: Graphics
    fullName: System.Drawing.Graphics
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateCellContentHeight*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateCellContentHeight
  isExternal: true
  name: CalculateCellContentHeight
  nameWithType: AbstractCustomColumn.CalculateCellContentHeight
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.CalculateCellContentHeight
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.CalculateCellContentHeight(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.DesktopEditor.EditorApi.ICustomColumn.CalculateCellContentHeight(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: CalculateCellContentHeight(Graphics, IRowInfo)
  nameWithType: ICustomColumn.CalculateCellContentHeight(Graphics, IRowInfo)
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.CalculateCellContentHeight(System.Drawing.Graphics, Sdl.DesktopEditor.EditorApi.IRowInfo)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.CalculateCellContentHeight(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo)
    name: CalculateCellContentHeight
    nameWithType: ICustomColumn.CalculateCellContentHeight
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.CalculateCellContentHeight
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Drawing.Graphics
    name: Graphics
    nameWithType: Graphics
    fullName: System.Drawing.Graphics
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    nameWithType: IRowInfo
    fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.CalculateCellContentHeight(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo)
    name: CalculateCellContentHeight
    nameWithType: ICustomColumn.CalculateCellContentHeight
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.CalculateCellContentHeight
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Drawing.Graphics
    name: Graphics
    nameWithType: Graphics
    fullName: System.Drawing.Graphics
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    nameWithType: IRowInfo
    fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.BeginDraw*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.BeginDraw
  isExternal: true
  name: BeginDraw
  nameWithType: AbstractCustomColumn.BeginDraw
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.BeginDraw
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.BeginDraw
  commentId: M:Sdl.DesktopEditor.EditorApi.ICustomColumn.BeginDraw
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: BeginDraw()
  nameWithType: ICustomColumn.BeginDraw()
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.BeginDraw()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.BeginDraw
    name: BeginDraw
    nameWithType: ICustomColumn.BeginDraw
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.BeginDraw
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.BeginDraw
    name: BeginDraw
    nameWithType: ICustomColumn.BeginDraw
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.BeginDraw
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawCell*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawCell
  isExternal: true
  name: DrawCell
  nameWithType: AbstractCustomColumn.DrawCell
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.DrawCell
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.DrawCell(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
  commentId: M:Sdl.DesktopEditor.EditorApi.ICustomColumn.DrawCell(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: DrawCell(Graphics, IRowInfo, Rectangle, Pen, Pen, Pen, Pen)
  nameWithType: ICustomColumn.DrawCell(Graphics, IRowInfo, Rectangle, Pen, Pen, Pen, Pen)
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.DrawCell(System.Drawing.Graphics, Sdl.DesktopEditor.EditorApi.IRowInfo, System.Drawing.Rectangle, System.Drawing.Pen, System.Drawing.Pen, System.Drawing.Pen, System.Drawing.Pen)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.DrawCell(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
    name: DrawCell
    nameWithType: ICustomColumn.DrawCell
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.DrawCell
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Drawing.Graphics
    name: Graphics
    nameWithType: Graphics
    fullName: System.Drawing.Graphics
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    nameWithType: IRowInfo
    fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Rectangle
    name: Rectangle
    nameWithType: Rectangle
    fullName: System.Drawing.Rectangle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Pen
    name: Pen
    nameWithType: Pen
    fullName: System.Drawing.Pen
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Pen
    name: Pen
    nameWithType: Pen
    fullName: System.Drawing.Pen
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Pen
    name: Pen
    nameWithType: Pen
    fullName: System.Drawing.Pen
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Pen
    name: Pen
    nameWithType: Pen
    fullName: System.Drawing.Pen
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.DrawCell(System.Drawing.Graphics,Sdl.DesktopEditor.EditorApi.IRowInfo,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)
    name: DrawCell
    nameWithType: ICustomColumn.DrawCell
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.DrawCell
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Drawing.Graphics
    name: Graphics
    nameWithType: Graphics
    fullName: System.Drawing.Graphics
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    nameWithType: IRowInfo
    fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Rectangle
    name: Rectangle
    nameWithType: Rectangle
    fullName: System.Drawing.Rectangle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Pen
    name: Pen
    nameWithType: Pen
    fullName: System.Drawing.Pen
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Pen
    name: Pen
    nameWithType: Pen
    fullName: System.Drawing.Pen
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Pen
    name: Pen
    nameWithType: Pen
    fullName: System.Drawing.Pen
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Pen
    name: Pen
    nameWithType: Pen
    fullName: System.Drawing.Pen
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.SetRowSizeAccessor*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.SetRowSizeAccessor
  isExternal: true
  name: SetRowSizeAccessor
  nameWithType: AbstractCustomColumn.SetRowSizeAccessor
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.SetRowSizeAccessor
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.SetRowSizeAccessor(Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor)
  commentId: M:Sdl.DesktopEditor.EditorApi.ICustomColumn.SetRowSizeAccessor(Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor)
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: SetRowSizeAccessor(RowSizeAccessor)
  nameWithType: ICustomColumn.SetRowSizeAccessor(RowSizeAccessor)
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.SetRowSizeAccessor(Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.SetRowSizeAccessor(Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor)
    name: SetRowSizeAccessor
    nameWithType: ICustomColumn.SetRowSizeAccessor
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.SetRowSizeAccessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor
    name: RowSizeAccessor
    nameWithType: RowSizeAccessor
    fullName: Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.SetRowSizeAccessor(Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor)
    name: SetRowSizeAccessor
    nameWithType: ICustomColumn.SetRowSizeAccessor
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.SetRowSizeAccessor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor
    name: RowSizeAccessor
    nameWithType: RowSizeAccessor
    fullName: Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor
  commentId: T:Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor
  parent: Sdl.DesktopEditor.EditorApi.Implementation
  isExternal: true
  name: RowSizeAccessor
  nameWithType: RowSizeAccessor
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.RowSizeAccessor
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.PrepareRegisterRows*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.PrepareRegisterRows
  isExternal: true
  name: PrepareRegisterRows
  nameWithType: AbstractCustomColumn.PrepareRegisterRows
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.PrepareRegisterRows
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.PrepareRegisterRows
  commentId: M:Sdl.DesktopEditor.EditorApi.ICustomColumn.PrepareRegisterRows
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: PrepareRegisterRows()
  nameWithType: ICustomColumn.PrepareRegisterRows()
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.PrepareRegisterRows()
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.PrepareRegisterRows
    name: PrepareRegisterRows
    nameWithType: ICustomColumn.PrepareRegisterRows
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.PrepareRegisterRows
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.PrepareRegisterRows
    name: PrepareRegisterRows
    nameWithType: ICustomColumn.PrepareRegisterRows
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.PrepareRegisterRows
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.RegisterRow*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.RegisterRow
  isExternal: true
  name: RegisterRow
  nameWithType: AbstractCustomColumn.RegisterRow
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.RegisterRow
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.RegisterRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.DesktopEditor.EditorApi.ICustomColumn.RegisterRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: RegisterRow(IRowInfo)
  nameWithType: ICustomColumn.RegisterRow(IRowInfo)
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.RegisterRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
  spec.csharp:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.RegisterRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
    name: RegisterRow
    nameWithType: ICustomColumn.RegisterRow
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.RegisterRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    nameWithType: IRowInfo
    fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.RegisterRow(Sdl.DesktopEditor.EditorApi.IRowInfo)
    name: RegisterRow
    nameWithType: ICustomColumn.RegisterRow
    fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.RegisterRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.DesktopEditor.EditorApi.IRowInfo
    name: IRowInfo
    nameWithType: IRowInfo
    fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.#ctor*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.#ctor
  isExternal: true
  name: AbstractCustomColumn
  nameWithType: AbstractCustomColumn.AbstractCustomColumn
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.AbstractCustomColumn
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.TextFormat*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.TextFormat
  isExternal: true
  name: TextFormat
  nameWithType: AbstractCustomColumn.TextFormat
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.TextFormat
- uid: System.Windows.Forms.TextFormatFlags
  commentId: '!:System.Windows.Forms.TextFormatFlags'
  isExternal: true
  name: TextFormatFlags
  nameWithType: TextFormatFlags
  fullName: System.Windows.Forms.TextFormatFlags
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.EditControl*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.EditControl
  isExternal: true
  name: EditControl
  nameWithType: AbstractCustomColumn.EditControl
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.EditControl
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.EditControl
  commentId: P:Sdl.DesktopEditor.EditorApi.ICustomColumn.EditControl
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: EditControl
  nameWithType: ICustomColumn.EditControl
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.EditControl
- uid: Sdl.DesktopEditor.EditorApi.IEditControl
  commentId: T:Sdl.DesktopEditor.EditorApi.IEditControl
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IEditControl
  nameWithType: IEditControl
  fullName: Sdl.DesktopEditor.EditorApi.IEditControl
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.Width*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.Width
  isExternal: true
  name: Width
  nameWithType: AbstractCustomColumn.Width
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.Width
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.Width
  commentId: P:Sdl.DesktopEditor.EditorApi.ICustomColumn.Width
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: Width
  nameWithType: ICustomColumn.Width
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.Width
- uid: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.IsComplex*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.IsComplex
  isExternal: true
  name: IsComplex
  nameWithType: AbstractCustomColumn.IsComplex
  fullName: Sdl.DesktopEditor.EditorApi.Implementation.AbstractCustomColumn.IsComplex
- uid: Sdl.DesktopEditor.EditorApi.ICustomColumn.IsComplex
  commentId: P:Sdl.DesktopEditor.EditorApi.ICustomColumn.IsComplex
  parent: Sdl.DesktopEditor.EditorApi.ICustomColumn
  isExternal: true
  name: IsComplex
  nameWithType: ICustomColumn.IsComplex
  fullName: Sdl.DesktopEditor.EditorApi.ICustomColumn.IsComplex
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
