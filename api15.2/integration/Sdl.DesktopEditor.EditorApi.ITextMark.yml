### YamlMime:ManagedReference
items:
- uid: Sdl.DesktopEditor.EditorApi.ITextMark
  commentId: T:Sdl.DesktopEditor.EditorApi.ITextMark
  id: ITextMark
  parent: Sdl.DesktopEditor.EditorApi
  children:
  - Sdl.DesktopEditor.EditorApi.ITextMark.Layer
  - Sdl.DesktopEditor.EditorApi.ITextMark.Painter
  - Sdl.DesktopEditor.EditorApi.ITextMark.Range
  langs:
  - csharp
  - vb
  name: ITextMark
  nameWithType: ITextMark
  fullName: Sdl.DesktopEditor.EditorApi.ITextMark
  type: Interface
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nRepresents a mark for a range of content in an edit control. Marks are used to highlight specific\nareas of document content in the edit control. For example, spelling errors and comments use marks\nto draw users attention to those areas.\n"
  syntax:
    content: public interface ITextMark
    content.vb: Public Interface ITextMark
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.DesktopEditor.EditorApi.ITextMark.Range
  commentId: P:Sdl.DesktopEditor.EditorApi.ITextMark.Range
  id: Range
  parent: Sdl.DesktopEditor.EditorApi.ITextMark
  langs:
  - csharp
  - vb
  name: Range
  nameWithType: ITextMark.Range
  fullName: Sdl.DesktopEditor.EditorApi.ITextMark.Range
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe content range the mark applies to.\n"
  syntax:
    content: ContentRange Range { get; set; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.ContentRange
    content.vb: Property Range As ContentRange
  overload: Sdl.DesktopEditor.EditorApi.ITextMark.Range*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ITextMark.Layer
  commentId: P:Sdl.DesktopEditor.EditorApi.ITextMark.Layer
  id: Layer
  parent: Sdl.DesktopEditor.EditorApi.ITextMark
  langs:
  - csharp
  - vb
  name: Layer
  nameWithType: ITextMark.Layer
  fullName: Sdl.DesktopEditor.EditorApi.ITextMark.Layer
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nDetermines where this mark is painted in relation to the main document content.\n"
  syntax:
    content: TextMarkLayer Layer { get; set; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.TextMarkLayer
    content.vb: Property Layer As TextMarkLayer
  overload: Sdl.DesktopEditor.EditorApi.ITextMark.Layer*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.DesktopEditor.EditorApi.ITextMark.Painter
  commentId: P:Sdl.DesktopEditor.EditorApi.ITextMark.Painter
  id: Painter
  parent: Sdl.DesktopEditor.EditorApi.ITextMark
  langs:
  - csharp
  - vb
  name: Painter
  nameWithType: ITextMark.Painter
  fullName: Sdl.DesktopEditor.EditorApi.ITextMark.Painter
  type: Property
  source:
    path: Sdl.DesktopEditor.EditorApi
    isExternal: true
  assemblies:
  - Sdl.DesktopEditor.EditorApi
  namespace: Sdl.DesktopEditor.EditorApi
  summary: "\nThe component used for drawing the mark in the edit control.\n"
  syntax:
    content: ITextMarkPainter Painter { get; set; }
    parameters: []
    return:
      type: Sdl.DesktopEditor.EditorApi.ITextMarkPainter
    content.vb: Property Painter As ITextMarkPainter
  overload: Sdl.DesktopEditor.EditorApi.ITextMark.Painter*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.DesktopEditor.EditorApi.ITextMark.Range*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ITextMark.Range
  isExternal: true
  name: Range
  nameWithType: ITextMark.Range
  fullName: Sdl.DesktopEditor.EditorApi.ITextMark.Range
- uid: Sdl.DesktopEditor.EditorApi.ContentRange
  commentId: T:Sdl.DesktopEditor.EditorApi.ContentRange
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: ContentRange
  nameWithType: ContentRange
  fullName: Sdl.DesktopEditor.EditorApi.ContentRange
- uid: Sdl.DesktopEditor.EditorApi.ITextMark.Layer*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ITextMark.Layer
  isExternal: true
  name: Layer
  nameWithType: ITextMark.Layer
  fullName: Sdl.DesktopEditor.EditorApi.ITextMark.Layer
- uid: Sdl.DesktopEditor.EditorApi.TextMarkLayer
  commentId: T:Sdl.DesktopEditor.EditorApi.TextMarkLayer
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: TextMarkLayer
  nameWithType: TextMarkLayer
  fullName: Sdl.DesktopEditor.EditorApi.TextMarkLayer
- uid: Sdl.DesktopEditor.EditorApi.ITextMark.Painter*
  commentId: Overload:Sdl.DesktopEditor.EditorApi.ITextMark.Painter
  isExternal: true
  name: Painter
  nameWithType: ITextMark.Painter
  fullName: Sdl.DesktopEditor.EditorApi.ITextMark.Painter
- uid: Sdl.DesktopEditor.EditorApi.ITextMarkPainter
  commentId: T:Sdl.DesktopEditor.EditorApi.ITextMarkPainter
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: ITextMarkPainter
  nameWithType: ITextMarkPainter
  fullName: Sdl.DesktopEditor.EditorApi.ITextMarkPainter
