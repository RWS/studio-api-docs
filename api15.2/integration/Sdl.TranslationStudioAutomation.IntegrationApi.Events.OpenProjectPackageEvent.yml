### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent
  id: OpenProjectPackageEvent
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  children:
  - Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.#ctor(System.String,Sdl.Desktop.IntegrationApi.Jobs.IExternalJobWithProgress)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.#ctor(System.String,Sdl.Desktop.IntegrationApi.Jobs.IExternalJobWithProgress,System.String,System.String)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.IconFilePath
  - Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.Job
  - Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.PackageFilePath
  - Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.ProjectOrigin
  langs:
  - csharp
  - vb
  name: OpenProjectPackageEvent
  nameWithType: OpenProjectPackageEvent
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent
  type: Class
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  summary: "\nUsed to share information related to projects package path\n"
  syntax:
    content: public class OpenProjectPackageEvent
    content.vb: Public Class OpenProjectPackageEvent
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.#ctor(System.String,Sdl.Desktop.IntegrationApi.Jobs.IExternalJobWithProgress)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.#ctor(System.String,Sdl.Desktop.IntegrationApi.Jobs.IExternalJobWithProgress)
  id: '#ctor(System.String,Sdl.Desktop.IntegrationApi.Jobs.IExternalJobWithProgress)'
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent
  langs:
  - csharp
  - vb
  name: OpenProjectPackageEvent(String, IExternalJobWithProgress)
  nameWithType: OpenProjectPackageEvent.OpenProjectPackageEvent(String, IExternalJobWithProgress)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.OpenProjectPackageEvent(System.String, Sdl.Desktop.IntegrationApi.Jobs.IExternalJobWithProgress)
  type: Constructor
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  summary: "\nConstructor\n"
  syntax:
    content: public OpenProjectPackageEvent(string packageFilePath, IExternalJobWithProgress job)
    parameters:
    - id: packageFilePath
      type: System.String
    - id: job
      type: Sdl.Desktop.IntegrationApi.Jobs.IExternalJobWithProgress
    content.vb: Public Sub New(packageFilePath As String, job As IExternalJobWithProgress)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.#ctor(System.String,Sdl.Desktop.IntegrationApi.Jobs.IExternalJobWithProgress,System.String,System.String)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.#ctor(System.String,Sdl.Desktop.IntegrationApi.Jobs.IExternalJobWithProgress,System.String,System.String)
  id: '#ctor(System.String,Sdl.Desktop.IntegrationApi.Jobs.IExternalJobWithProgress,System.String,System.String)'
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent
  langs:
  - csharp
  - vb
  name: OpenProjectPackageEvent(String, IExternalJobWithProgress, String, String)
  nameWithType: OpenProjectPackageEvent.OpenProjectPackageEvent(String, IExternalJobWithProgress, String, String)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.OpenProjectPackageEvent(System.String, Sdl.Desktop.IntegrationApi.Jobs.IExternalJobWithProgress, System.String, System.String)
  type: Constructor
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  summary: "\n\n"
  syntax:
    content: public OpenProjectPackageEvent(string packageFilePath, IExternalJobWithProgress job, string iconPath, string projectOrigin)
    parameters:
    - id: packageFilePath
      type: System.String
    - id: job
      type: Sdl.Desktop.IntegrationApi.Jobs.IExternalJobWithProgress
      description: The custom job used when opening package
    - id: iconPath
      type: System.String
    - id: projectOrigin
      type: System.String
    content.vb: Public Sub New(packageFilePath As String, job As IExternalJobWithProgress, iconPath As String, projectOrigin As String)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.PackageFilePath
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.PackageFilePath
  id: PackageFilePath
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent
  langs:
  - csharp
  - vb
  name: PackageFilePath
  nameWithType: OpenProjectPackageEvent.PackageFilePath
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.PackageFilePath
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  summary: "\nThe package path\n"
  syntax:
    content: public string PackageFilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PackageFilePath As String
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.PackageFilePath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.IconFilePath
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.IconFilePath
  id: IconFilePath
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent
  langs:
  - csharp
  - vb
  name: IconFilePath
  nameWithType: OpenProjectPackageEvent.IconFilePath
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.IconFilePath
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  summary: "\nThe icon path for the project\n"
  syntax:
    content: public string IconFilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property IconFilePath As String
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.IconFilePath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.ProjectOrigin
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.ProjectOrigin
  id: ProjectOrigin
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent
  langs:
  - csharp
  - vb
  name: ProjectOrigin
  nameWithType: OpenProjectPackageEvent.ProjectOrigin
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.ProjectOrigin
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  summary: "\nThe origin for the project\n"
  syntax:
    content: public string ProjectOrigin { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ProjectOrigin As String
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.ProjectOrigin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.Job
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.Job
  id: Job
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent
  langs:
  - csharp
  - vb
  name: Job
  nameWithType: OpenProjectPackageEvent.Job
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.Job
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  summary: "\nThe custom job used when opening packages\n"
  syntax:
    content: public IExternalJobWithProgress Job { get; }
    parameters: []
    return:
      type: Sdl.Desktop.IntegrationApi.Jobs.IExternalJobWithProgress
    content.vb: Public ReadOnly Property Job As IExternalJobWithProgress
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.Job*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  commentId: N:Sdl.TranslationStudioAutomation.IntegrationApi.Events
  isExternal: true
  name: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  nameWithType: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.#ctor*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.#ctor
  isExternal: true
  name: OpenProjectPackageEvent
  nameWithType: OpenProjectPackageEvent.OpenProjectPackageEvent
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.OpenProjectPackageEvent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.Desktop.IntegrationApi.Jobs.IExternalJobWithProgress
  commentId: T:Sdl.Desktop.IntegrationApi.Jobs.IExternalJobWithProgress
  parent: Sdl.Desktop.IntegrationApi.Jobs
  isExternal: true
  name: IExternalJobWithProgress
  nameWithType: IExternalJobWithProgress
  fullName: Sdl.Desktop.IntegrationApi.Jobs.IExternalJobWithProgress
- uid: Sdl.Desktop.IntegrationApi.Jobs
  commentId: N:Sdl.Desktop.IntegrationApi.Jobs
  isExternal: true
  name: Sdl.Desktop.IntegrationApi.Jobs
  nameWithType: Sdl.Desktop.IntegrationApi.Jobs
  fullName: Sdl.Desktop.IntegrationApi.Jobs
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.PackageFilePath*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.PackageFilePath
  isExternal: true
  name: PackageFilePath
  nameWithType: OpenProjectPackageEvent.PackageFilePath
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.PackageFilePath
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.IconFilePath*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.IconFilePath
  isExternal: true
  name: IconFilePath
  nameWithType: OpenProjectPackageEvent.IconFilePath
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.IconFilePath
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.ProjectOrigin*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.ProjectOrigin
  isExternal: true
  name: ProjectOrigin
  nameWithType: OpenProjectPackageEvent.ProjectOrigin
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.ProjectOrigin
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.Job*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.Job
  isExternal: true
  name: Job
  nameWithType: OpenProjectPackageEvent.Job
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.OpenProjectPackageEvent.Job
