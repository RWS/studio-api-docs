### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider
  commentId: T:Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider
  id: IDocumentViewProvider
  parent: Sdl.TranslationStudio.Api.Editor
  children:
  - Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.CreateDocumentView(Sdl.TranslationStudio.Api.Editor.IInternalDocument)
  - Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.FillCommandBars(Sdl.TranslationStudio.Api.Editor.IEditorService,Sdl.Desktop.Platform.CommandBars.ICommandBars)
  - Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.SupportsDocument(Sdl.TranslationStudio.Api.Editor.IInternalDocument)
  langs:
  - csharp
  - vb
  name: IDocumentViewProvider
  nameWithType: IDocumentViewProvider
  fullName: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider
  type: Interface
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor
  summary: "\nA document view provider acts as a factory for document view instances. \n"
  remarks: >-
    The document view provider mechanism allows extending existing documents with new views.

    In order to create a new document view provider, implement this interface and mark the implementation with the

    <xref href="Sdl.TranslationStudio.Api.Editor.DocumentViewProviderAttribute" data-throw-if-not-resolved="false"></xref> attribute. This registers the provider with the editing environment. Whenever a new document is created, all

    provider are consulted to see whether they support the document and can provide an additional document view.
  syntax:
    content: public interface IDocumentViewProvider
    content.vb: Public Interface IDocumentViewProvider
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.FillCommandBars(Sdl.TranslationStudio.Api.Editor.IEditorService,Sdl.Desktop.Platform.CommandBars.ICommandBars)
  commentId: M:Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.FillCommandBars(Sdl.TranslationStudio.Api.Editor.IEditorService,Sdl.Desktop.Platform.CommandBars.ICommandBars)
  id: FillCommandBars(Sdl.TranslationStudio.Api.Editor.IEditorService,Sdl.Desktop.Platform.CommandBars.ICommandBars)
  parent: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider
  langs:
  - csharp
  - vb
  name: FillCommandBars(IEditorService, ICommandBars)
  nameWithType: IDocumentViewProvider.FillCommandBars(IEditorService, ICommandBars)
  fullName: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.FillCommandBars(Sdl.TranslationStudio.Api.Editor.IEditorService, Sdl.Desktop.Platform.CommandBars.ICommandBars)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor
  summary: "\nCalled by the editing environment the first time when a supported document becomes the active document.\n"
  remarks: >-
    This method is called only once in the lifetime of the provider. Any action added to the command bars will only be visible when

    a supported document is active.
  syntax:
    content: void FillCommandBars(IEditorService editorService, ICommandBars commandBars)
    parameters:
    - id: editorService
      type: Sdl.TranslationStudio.Api.Editor.IEditorService
      description: The editor service.
    - id: commandBars
      type: Sdl.Desktop.Platform.CommandBars.ICommandBars
      description: The command bars specific to the documents supported by this provider.
    content.vb: Sub FillCommandBars(editorService As IEditorService, commandBars As ICommandBars)
  overload: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.FillCommandBars*
- uid: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.SupportsDocument(Sdl.TranslationStudio.Api.Editor.IInternalDocument)
  commentId: M:Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.SupportsDocument(Sdl.TranslationStudio.Api.Editor.IInternalDocument)
  id: SupportsDocument(Sdl.TranslationStudio.Api.Editor.IInternalDocument)
  parent: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider
  langs:
  - csharp
  - vb
  name: SupportsDocument(IInternalDocument)
  nameWithType: IDocumentViewProvider.SupportsDocument(IInternalDocument)
  fullName: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.SupportsDocument(Sdl.TranslationStudio.Api.Editor.IInternalDocument)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor
  summary: "\nReturns true when this provider supports the specified document.\n"
  remarks: This method is called by the editing environment whenever a document is opened.
  syntax:
    content: bool SupportsDocument(IInternalDocument document)
    parameters:
    - id: document
      type: Sdl.TranslationStudio.Api.Editor.IInternalDocument
      description: The document that is being activated.
    return:
      type: System.Boolean
      description: True if this provider supports the specified document.
    content.vb: Function SupportsDocument(document As IInternalDocument) As Boolean
  overload: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.SupportsDocument*
- uid: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.CreateDocumentView(Sdl.TranslationStudio.Api.Editor.IInternalDocument)
  commentId: M:Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.CreateDocumentView(Sdl.TranslationStudio.Api.Editor.IInternalDocument)
  id: CreateDocumentView(Sdl.TranslationStudio.Api.Editor.IInternalDocument)
  parent: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider
  langs:
  - csharp
  - vb
  name: CreateDocumentView(IInternalDocument)
  nameWithType: IDocumentViewProvider.CreateDocumentView(IInternalDocument)
  fullName: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.CreateDocumentView(Sdl.TranslationStudio.Api.Editor.IInternalDocument)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor
  summary: "\nCreates a new document view for the specified document.\n"
  remarks: This method will only be called for supported document as determined by calling <xref href="Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.SupportsDocument(Sdl.TranslationStudio.Api.Editor.IInternalDocument)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: IDocumentView CreateDocumentView(IInternalDocument document)
    parameters:
    - id: document
      type: Sdl.TranslationStudio.Api.Editor.IInternalDocument
      description: The document.
    return:
      type: Sdl.TranslationStudio.Api.Editor.IDocumentView
      description: "The newly created document view. This is typically a specific document view implementation \nfor this provider. To create a specific document view type, implement <xref href=\"Sdl.TranslationStudio.Api.Editor.IDocumentView\" data-throw-if-not-resolved=\"false\"></xref> or extend <xref href=\"Sdl.TranslationStudio.Api.Editor.AbstractDocumentView\" data-throw-if-not-resolved=\"false\"></xref>.\nDocument views for translatable documents should implement <xref href=\"Sdl.TranslationStudio.Api.Editor.ITranslatableDocumentView\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Sdl.TranslationStudio.Api.Editor.ITranslatableDocumentEditingView\" data-throw-if-not-resolved=\"false\"></xref>."
    content.vb: Function CreateDocumentView(document As IInternalDocument) As IDocumentView
  overload: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.CreateDocumentView*
references:
- uid: Sdl.TranslationStudio.Api.Editor
  commentId: N:Sdl.TranslationStudio.Api.Editor
  isExternal: true
  name: Sdl.TranslationStudio.Api.Editor
  nameWithType: Sdl.TranslationStudio.Api.Editor
  fullName: Sdl.TranslationStudio.Api.Editor
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.FillCommandBars*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.FillCommandBars
  isExternal: true
  name: FillCommandBars
  nameWithType: IDocumentViewProvider.FillCommandBars
  fullName: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.FillCommandBars
- uid: Sdl.TranslationStudio.Api.Editor.IEditorService
  commentId: T:Sdl.TranslationStudio.Api.Editor.IEditorService
  parent: Sdl.TranslationStudio.Api.Editor
  isExternal: true
  name: IEditorService
  nameWithType: IEditorService
  fullName: Sdl.TranslationStudio.Api.Editor.IEditorService
- uid: Sdl.Desktop.Platform.CommandBars.ICommandBars
  isExternal: true
  name: ICommandBars
  nameWithType: ICommandBars
  fullName: Sdl.Desktop.Platform.CommandBars.ICommandBars
- uid: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.SupportsDocument*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.SupportsDocument
  isExternal: true
  name: SupportsDocument
  nameWithType: IDocumentViewProvider.SupportsDocument
  fullName: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.SupportsDocument
- uid: Sdl.TranslationStudio.Api.Editor.IInternalDocument
  commentId: T:Sdl.TranslationStudio.Api.Editor.IInternalDocument
  parent: Sdl.TranslationStudio.Api.Editor
  isExternal: true
  name: IInternalDocument
  nameWithType: IInternalDocument
  fullName: Sdl.TranslationStudio.Api.Editor.IInternalDocument
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.CreateDocumentView*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.CreateDocumentView
  isExternal: true
  name: CreateDocumentView
  nameWithType: IDocumentViewProvider.CreateDocumentView
  fullName: Sdl.TranslationStudio.Api.Editor.IDocumentViewProvider.CreateDocumentView
- uid: Sdl.TranslationStudio.Api.Editor.IDocumentView
  commentId: T:Sdl.TranslationStudio.Api.Editor.IDocumentView
  parent: Sdl.TranslationStudio.Api.Editor
  isExternal: true
  name: IDocumentView
  nameWithType: IDocumentView
  fullName: Sdl.TranslationStudio.Api.Editor.IDocumentView
