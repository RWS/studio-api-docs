### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor
  commentId: T:Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor
  id: IPackageConvertor
  parent: Sdl.TranslationStudio.Api.Packaging.Convertors
  children:
  - Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.ConvertPackage(System.String,System.String)
  - Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.ConvertReturnPackage(System.String,System.String)
  - Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.PackageConverted
  - Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.PackageMessage
  langs:
  - csharp
  - vb
  name: IPackageConvertor
  nameWithType: IPackageConvertor
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor
  type: Interface
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Packaging.Convertors
  summary: "\nInterface that should be implemented by package convertors.\n"
  syntax:
    content: public interface IPackageConvertor
    content.vb: Public Interface IPackageConvertor
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.ConvertPackage(System.String,System.String)
  commentId: M:Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.ConvertPackage(System.String,System.String)
  id: ConvertPackage(System.String,System.String)
  parent: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor
  langs:
  - csharp
  - vb
  name: ConvertPackage(String, String)
  nameWithType: IPackageConvertor.ConvertPackage(String, String)
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.ConvertPackage(System.String, System.String)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Packaging.Convertors
  summary: "\nConverts a package from another application/system into a package that can be processed by Translation Studio.\n"
  syntax:
    content: void ConvertPackage(string fromPackagePath, string toPackagePath)
    parameters:
    - id: fromPackagePath
      type: System.String
      description: The path of the package to be converted.
    - id: toPackagePath
      type: System.String
      description: The path for the converted package
    content.vb: Sub ConvertPackage(fromPackagePath As String, toPackagePath As String)
  overload: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.ConvertPackage*
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.ConvertReturnPackage(System.String,System.String)
  commentId: M:Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.ConvertReturnPackage(System.String,System.String)
  id: ConvertReturnPackage(System.String,System.String)
  parent: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor
  langs:
  - csharp
  - vb
  name: ConvertReturnPackage(String, String)
  nameWithType: IPackageConvertor.ConvertReturnPackage(String, String)
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.ConvertReturnPackage(System.String, System.String)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Packaging.Convertors
  summary: "\nConverts a Translation Studio return package into a return package that can be processed by the original application/system.\n"
  syntax:
    content: void ConvertReturnPackage(string fromPackagePath, string toPackagePath)
    parameters:
    - id: fromPackagePath
      type: System.String
      description: The path of the package to be converted.
    - id: toPackagePath
      type: System.String
      description: The path for the converted package
    content.vb: Sub ConvertReturnPackage(fromPackagePath As String, toPackagePath As String)
  overload: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.ConvertReturnPackage*
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.PackageMessage
  commentId: E:Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.PackageMessage
  id: PackageMessage
  parent: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor
  langs:
  - csharp
  - vb
  name: PackageMessage
  nameWithType: IPackageConvertor.PackageMessage
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.PackageMessage
  type: Event
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Packaging.Convertors
  summary: "\nAn event which can be subscribed to in order to get various messages\n"
  syntax:
    content: event EventHandler<PackageMessageEventArgs> PackageMessage
    return:
      type: System.EventHandler{Sdl.TranslationStudio.Api.Packaging.Convertors.PackageMessageEventArgs}
    content.vb: Event PackageMessage As EventHandler(Of PackageMessageEventArgs)
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.PackageConverted
  commentId: E:Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.PackageConverted
  id: PackageConverted
  parent: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor
  langs:
  - csharp
  - vb
  name: PackageConverted
  nameWithType: IPackageConvertor.PackageConverted
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.PackageConverted
  type: Event
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Packaging.Convertors
  summary: "\nAn event which can be subscribed to in order to get progress information\n"
  syntax:
    content: event EventHandler<ConvertPackageEventArgs> PackageConverted
    return:
      type: System.EventHandler{Sdl.TranslationStudio.Api.Packaging.Convertors.ConvertPackageEventArgs}
    content.vb: Event PackageConverted As EventHandler(Of ConvertPackageEventArgs)
references:
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors
  commentId: N:Sdl.TranslationStudio.Api.Packaging.Convertors
  isExternal: true
  name: Sdl.TranslationStudio.Api.Packaging.Convertors
  nameWithType: Sdl.TranslationStudio.Api.Packaging.Convertors
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.ConvertPackage*
  commentId: Overload:Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.ConvertPackage
  isExternal: true
  name: ConvertPackage
  nameWithType: IPackageConvertor.ConvertPackage
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.ConvertPackage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.ConvertReturnPackage*
  commentId: Overload:Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.ConvertReturnPackage
  isExternal: true
  name: ConvertReturnPackage
  nameWithType: IPackageConvertor.ConvertReturnPackage
  fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.IPackageConvertor.ConvertReturnPackage
- uid: System.EventHandler{Sdl.TranslationStudio.Api.Packaging.Convertors.PackageMessageEventArgs}
  commentId: T:System.EventHandler{Sdl.TranslationStudio.Api.Packaging.Convertors.PackageMessageEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PackageMessageEventArgs>
  nameWithType: EventHandler<PackageMessageEventArgs>
  fullName: System.EventHandler<Sdl.TranslationStudio.Api.Packaging.Convertors.PackageMessageEventArgs>
  nameWithType.vb: EventHandler(Of PackageMessageEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.TranslationStudio.Api.Packaging.Convertors.PackageMessageEventArgs)
  name.vb: EventHandler(Of PackageMessageEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageMessageEventArgs
    name: PackageMessageEventArgs
    nameWithType: PackageMessageEventArgs
    fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageMessageEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageMessageEventArgs
    name: PackageMessageEventArgs
    nameWithType: PackageMessageEventArgs
    fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.PackageMessageEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Sdl.TranslationStudio.Api.Packaging.Convertors.ConvertPackageEventArgs}
  commentId: T:System.EventHandler{Sdl.TranslationStudio.Api.Packaging.Convertors.ConvertPackageEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ConvertPackageEventArgs>
  nameWithType: EventHandler<ConvertPackageEventArgs>
  fullName: System.EventHandler<Sdl.TranslationStudio.Api.Packaging.Convertors.ConvertPackageEventArgs>
  nameWithType.vb: EventHandler(Of ConvertPackageEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.TranslationStudio.Api.Packaging.Convertors.ConvertPackageEventArgs)
  name.vb: EventHandler(Of ConvertPackageEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.TranslationStudio.Api.Packaging.Convertors.ConvertPackageEventArgs
    name: ConvertPackageEventArgs
    nameWithType: ConvertPackageEventArgs
    fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.ConvertPackageEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.TranslationStudio.Api.Packaging.Convertors.ConvertPackageEventArgs
    name: ConvertPackageEventArgs
    nameWithType: ConvertPackageEventArgs
    fullName: Sdl.TranslationStudio.Api.Packaging.Convertors.ConvertPackageEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
