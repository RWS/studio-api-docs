### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent
  id: SegmentSplitEvent
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  children:
  - Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.#ctor(Sdl.TranslationStudioAutomation.IntegrationApi.Document,Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.#ctor(Sdl.TranslationStudioAutomation.IntegrationApi.Document,Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  - Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.Document
  - Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.FirstNewSegmentId
  - Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.OriginalSegmentId
  - Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.ParagraphUnitId
  - Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.SecondNewSegmentId
  langs:
  - csharp
  - vb
  name: SegmentSplitEvent
  nameWithType: SegmentSplitEvent
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent
  type: Class
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  syntax:
    content: public class SegmentSplitEvent
    content.vb: Public Class SegmentSplitEvent
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.#ctor(Sdl.TranslationStudioAutomation.IntegrationApi.Document,Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.#ctor(Sdl.TranslationStudioAutomation.IntegrationApi.Document,Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId)
  id: '#ctor(Sdl.TranslationStudioAutomation.IntegrationApi.Document,Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId)'
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent
  langs:
  - csharp
  - vb
  name: SegmentSplitEvent(Document, ParagraphUnitId)
  nameWithType: SegmentSplitEvent.SegmentSplitEvent(Document, ParagraphUnitId)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.SegmentSplitEvent(Sdl.TranslationStudioAutomation.IntegrationApi.Document, Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId)
  type: Constructor
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  syntax:
    content: public SegmentSplitEvent(Document document, ParagraphUnitId paragraphUnitId)
    parameters:
    - id: document
      type: Sdl.TranslationStudioAutomation.IntegrationApi.Document
    - id: paragraphUnitId
      type: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
    content.vb: Public Sub New(document As Document, paragraphUnitId As ParagraphUnitId)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.#ctor(Sdl.TranslationStudioAutomation.IntegrationApi.Document,Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  commentId: M:Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.#ctor(Sdl.TranslationStudioAutomation.IntegrationApi.Document,Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  id: '#ctor(Sdl.TranslationStudioAutomation.IntegrationApi.Document,Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId,Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)'
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent
  langs:
  - csharp
  - vb
  name: SegmentSplitEvent(Document, ParagraphUnitId, SegmentId, SegmentId, SegmentId)
  nameWithType: SegmentSplitEvent.SegmentSplitEvent(Document, ParagraphUnitId, SegmentId, SegmentId, SegmentId)
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.SegmentSplitEvent(Sdl.TranslationStudioAutomation.IntegrationApi.Document, Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId, Sdl.FileTypeSupport.Framework.NativeApi.SegmentId, Sdl.FileTypeSupport.Framework.NativeApi.SegmentId, Sdl.FileTypeSupport.Framework.NativeApi.SegmentId)
  type: Constructor
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  syntax:
    content: public SegmentSplitEvent(Document document, ParagraphUnitId paragraphUnitId, SegmentId originalSegmentId, SegmentId firstNewSegmentId, SegmentId secondNewSegment)
    parameters:
    - id: document
      type: Sdl.TranslationStudioAutomation.IntegrationApi.Document
    - id: paragraphUnitId
      type: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
    - id: originalSegmentId
      type: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
    - id: firstNewSegmentId
      type: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
    - id: secondNewSegment
      type: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
    content.vb: Public Sub New(document As Document, paragraphUnitId As ParagraphUnitId, originalSegmentId As SegmentId, firstNewSegmentId As SegmentId, secondNewSegment As SegmentId)
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.OriginalSegmentId
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.OriginalSegmentId
  id: OriginalSegmentId
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent
  langs:
  - csharp
  - vb
  name: OriginalSegmentId
  nameWithType: SegmentSplitEvent.OriginalSegmentId
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.OriginalSegmentId
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  syntax:
    content: public SegmentId OriginalSegmentId { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
    content.vb: Public Property OriginalSegmentId As SegmentId
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.OriginalSegmentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.FirstNewSegmentId
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.FirstNewSegmentId
  id: FirstNewSegmentId
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent
  langs:
  - csharp
  - vb
  name: FirstNewSegmentId
  nameWithType: SegmentSplitEvent.FirstNewSegmentId
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.FirstNewSegmentId
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  syntax:
    content: public SegmentId FirstNewSegmentId { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
    content.vb: Public Property FirstNewSegmentId As SegmentId
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.FirstNewSegmentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.SecondNewSegmentId
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.SecondNewSegmentId
  id: SecondNewSegmentId
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent
  langs:
  - csharp
  - vb
  name: SecondNewSegmentId
  nameWithType: SegmentSplitEvent.SecondNewSegmentId
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.SecondNewSegmentId
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  syntax:
    content: public SegmentId SecondNewSegmentId { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
    content.vb: Public Property SecondNewSegmentId As SegmentId
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.SecondNewSegmentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.ParagraphUnitId
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.ParagraphUnitId
  id: ParagraphUnitId
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent
  langs:
  - csharp
  - vb
  name: ParagraphUnitId
  nameWithType: SegmentSplitEvent.ParagraphUnitId
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.ParagraphUnitId
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  syntax:
    content: public ParagraphUnitId ParagraphUnitId { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
    content.vb: Public Property ParagraphUnitId As ParagraphUnitId
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.ParagraphUnitId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.Document
  commentId: P:Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.Document
  id: Document
  parent: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent
  langs:
  - csharp
  - vb
  name: Document
  nameWithType: SegmentSplitEvent.Document
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.Document
  type: Property
  source:
    path: Sdl.TranslationStudioAutomation.IntegrationApi
    isExternal: true
  assemblies:
  - Sdl.TranslationStudioAutomation.IntegrationApi
  namespace: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  syntax:
    content: public Document Document { get; set; }
    parameters: []
    return:
      type: Sdl.TranslationStudioAutomation.IntegrationApi.Document
    content.vb: Public Property Document As Document
  overload: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.Document*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  commentId: N:Sdl.TranslationStudioAutomation.IntegrationApi.Events
  isExternal: true
  name: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  nameWithType: Sdl.TranslationStudioAutomation.IntegrationApi.Events
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.#ctor*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.#ctor
  isExternal: true
  name: SegmentSplitEvent
  nameWithType: SegmentSplitEvent.SegmentSplitEvent
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.SegmentSplitEvent
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Document
  commentId: T:Sdl.TranslationStudioAutomation.IntegrationApi.Document
  parent: Sdl.TranslationStudioAutomation.IntegrationApi
  isExternal: true
  name: Document
  nameWithType: Document
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Document
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
  isExternal: true
  name: ParagraphUnitId
  nameWithType: ParagraphUnitId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ParagraphUnitId
- uid: Sdl.TranslationStudioAutomation.IntegrationApi
  commentId: N:Sdl.TranslationStudioAutomation.IntegrationApi
  isExternal: true
  name: Sdl.TranslationStudioAutomation.IntegrationApi
  nameWithType: Sdl.TranslationStudioAutomation.IntegrationApi
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi
- uid: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
  isExternal: true
  name: SegmentId
  nameWithType: SegmentId
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.SegmentId
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.OriginalSegmentId*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.OriginalSegmentId
  isExternal: true
  name: OriginalSegmentId
  nameWithType: SegmentSplitEvent.OriginalSegmentId
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.OriginalSegmentId
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.FirstNewSegmentId*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.FirstNewSegmentId
  isExternal: true
  name: FirstNewSegmentId
  nameWithType: SegmentSplitEvent.FirstNewSegmentId
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.FirstNewSegmentId
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.SecondNewSegmentId*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.SecondNewSegmentId
  isExternal: true
  name: SecondNewSegmentId
  nameWithType: SegmentSplitEvent.SecondNewSegmentId
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.SecondNewSegmentId
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.ParagraphUnitId*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.ParagraphUnitId
  isExternal: true
  name: ParagraphUnitId
  nameWithType: SegmentSplitEvent.ParagraphUnitId
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.ParagraphUnitId
- uid: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.Document*
  commentId: Overload:Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.Document
  isExternal: true
  name: Document
  nameWithType: SegmentSplitEvent.Document
  fullName: Sdl.TranslationStudioAutomation.IntegrationApi.Events.SegmentSplitEvent.Document
