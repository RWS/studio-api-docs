### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudio.Api.Editor.IFoldingFilter
  commentId: T:Sdl.TranslationStudio.Api.Editor.IFoldingFilter
  id: IFoldingFilter
  parent: Sdl.TranslationStudio.Api.Editor
  children:
  - Sdl.TranslationStudio.Api.Editor.IFoldingFilter.Initialise
  - Sdl.TranslationStudio.Api.Editor.IFoldingFilter.SetFoldingFilterProvider(Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider)
  - Sdl.TranslationStudio.Api.Editor.IFoldingFilter.SetRowVisibility(Sdl.DesktopEditor.EditorApi.IRowInfo)
  langs:
  - csharp
  - vb
  name: IFoldingFilter
  nameWithType: IFoldingFilter
  fullName: Sdl.TranslationStudio.Api.Editor.IFoldingFilter
  type: Interface
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor
  summary: "\nMatch a row against arbitrary criteria to determine if it should be visible\n"
  syntax:
    content: public interface IFoldingFilter
    content.vb: Public Interface IFoldingFilter
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.TranslationStudio.Api.Editor.IFoldingFilter.SetRowVisibility(Sdl.DesktopEditor.EditorApi.IRowInfo)
  commentId: M:Sdl.TranslationStudio.Api.Editor.IFoldingFilter.SetRowVisibility(Sdl.DesktopEditor.EditorApi.IRowInfo)
  id: SetRowVisibility(Sdl.DesktopEditor.EditorApi.IRowInfo)
  parent: Sdl.TranslationStudio.Api.Editor.IFoldingFilter
  langs:
  - csharp
  - vb
  name: SetRowVisibility(IRowInfo)
  nameWithType: IFoldingFilter.SetRowVisibility(IRowInfo)
  fullName: Sdl.TranslationStudio.Api.Editor.IFoldingFilter.SetRowVisibility(Sdl.DesktopEditor.EditorApi.IRowInfo)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor
  summary: "\nCompare the supplied row with the criteria and determine if the row should be visible\n"
  syntax:
    content: bool SetRowVisibility(IRowInfo row)
    parameters:
    - id: row
      type: Sdl.DesktopEditor.EditorApi.IRowInfo
      description: The row to compare
    return:
      type: System.Boolean
      description: true if the segment should be visible
    content.vb: Function SetRowVisibility(row As IRowInfo) As Boolean
  overload: Sdl.TranslationStudio.Api.Editor.IFoldingFilter.SetRowVisibility*
- uid: Sdl.TranslationStudio.Api.Editor.IFoldingFilter.SetFoldingFilterProvider(Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider)
  commentId: M:Sdl.TranslationStudio.Api.Editor.IFoldingFilter.SetFoldingFilterProvider(Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider)
  id: SetFoldingFilterProvider(Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider)
  parent: Sdl.TranslationStudio.Api.Editor.IFoldingFilter
  langs:
  - csharp
  - vb
  name: SetFoldingFilterProvider(IFoldingFilterProvider)
  nameWithType: IFoldingFilter.SetFoldingFilterProvider(IFoldingFilterProvider)
  fullName: Sdl.TranslationStudio.Api.Editor.IFoldingFilter.SetFoldingFilterProvider(Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor
  summary: "\nFor internal use only. Allows the FoldingFilterProvider to be set on the FoldingFilter\nafter it has been created, so the filter can access the active document etc.\n"
  syntax:
    content: void SetFoldingFilterProvider(IFoldingFilterProvider provider)
    parameters:
    - id: provider
      type: Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider
    content.vb: Sub SetFoldingFilterProvider(provider As IFoldingFilterProvider)
  overload: Sdl.TranslationStudio.Api.Editor.IFoldingFilter.SetFoldingFilterProvider*
- uid: Sdl.TranslationStudio.Api.Editor.IFoldingFilter.Initialise
  commentId: M:Sdl.TranslationStudio.Api.Editor.IFoldingFilter.Initialise
  id: Initialise
  parent: Sdl.TranslationStudio.Api.Editor.IFoldingFilter
  langs:
  - csharp
  - vb
  name: Initialise()
  nameWithType: IFoldingFilter.Initialise()
  fullName: Sdl.TranslationStudio.Api.Editor.IFoldingFilter.Initialise()
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.Editor
  summary: "\nPerform any initialisation or validation. Called before filter is applied to the document. \n"
  syntax:
    content: void Initialise()
    content.vb: Sub Initialise
  overload: Sdl.TranslationStudio.Api.Editor.IFoldingFilter.Initialise*
references:
- uid: Sdl.TranslationStudio.Api.Editor
  commentId: N:Sdl.TranslationStudio.Api.Editor
  isExternal: true
  name: Sdl.TranslationStudio.Api.Editor
  nameWithType: Sdl.TranslationStudio.Api.Editor
  fullName: Sdl.TranslationStudio.Api.Editor
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.TranslationStudio.Api.Editor.IFoldingFilter.SetRowVisibility*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.IFoldingFilter.SetRowVisibility
  isExternal: true
  name: SetRowVisibility
  nameWithType: IFoldingFilter.SetRowVisibility
  fullName: Sdl.TranslationStudio.Api.Editor.IFoldingFilter.SetRowVisibility
- uid: Sdl.DesktopEditor.EditorApi.IRowInfo
  commentId: T:Sdl.DesktopEditor.EditorApi.IRowInfo
  parent: Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: IRowInfo
  nameWithType: IRowInfo
  fullName: Sdl.DesktopEditor.EditorApi.IRowInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.DesktopEditor.EditorApi
  commentId: N:Sdl.DesktopEditor.EditorApi
  isExternal: true
  name: Sdl.DesktopEditor.EditorApi
  nameWithType: Sdl.DesktopEditor.EditorApi
  fullName: Sdl.DesktopEditor.EditorApi
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.TranslationStudio.Api.Editor.IFoldingFilter.SetFoldingFilterProvider*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.IFoldingFilter.SetFoldingFilterProvider
  isExternal: true
  name: SetFoldingFilterProvider
  nameWithType: IFoldingFilter.SetFoldingFilterProvider
  fullName: Sdl.TranslationStudio.Api.Editor.IFoldingFilter.SetFoldingFilterProvider
- uid: Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider
  commentId: T:Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider
  parent: Sdl.TranslationStudio.Api.Editor
  isExternal: true
  name: IFoldingFilterProvider
  nameWithType: IFoldingFilterProvider
  fullName: Sdl.TranslationStudio.Api.Editor.IFoldingFilterProvider
- uid: Sdl.TranslationStudio.Api.Editor.IFoldingFilter.Initialise*
  commentId: Overload:Sdl.TranslationStudio.Api.Editor.IFoldingFilter.Initialise
  isExternal: true
  name: Initialise
  nameWithType: IFoldingFilter.Initialise
  fullName: Sdl.TranslationStudio.Api.Editor.IFoldingFilter.Initialise
