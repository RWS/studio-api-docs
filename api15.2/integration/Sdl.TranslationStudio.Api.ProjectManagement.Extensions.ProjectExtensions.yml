### YamlMime:ManagedReference
items:
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions
  commentId: T:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions
  id: ProjectExtensions
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  children:
  - Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetAllAssignedToMeFiles(Sdl.ProjectApi.IProject)
  - Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFileTypeManager(Sdl.ProjectApi.IProject)
  - Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFriendlyUserName(Sdl.ProjectApi.IProject,System.String)
  - Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFriendlyUserNames(Sdl.ProjectApi.IProject)
  langs:
  - csharp
  - vb
  name: ProjectExtensions
  nameWithType: ProjectExtensions
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions
  type: Class
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  syntax:
    content: public static class ProjectExtensions
    content.vb: Public Module ProjectExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetAllAssignedToMeFiles(Sdl.ProjectApi.IProject)
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetAllAssignedToMeFiles(Sdl.ProjectApi.IProject)
  id: GetAllAssignedToMeFiles(Sdl.ProjectApi.IProject)
  isExtensionMethod: true
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions
  langs:
  - csharp
  - vb
  name: GetAllAssignedToMeFiles(IProject)
  nameWithType: ProjectExtensions.GetAllAssignedToMeFiles(IProject)
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetAllAssignedToMeFiles(Sdl.ProjectApi.IProject)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  syntax:
    content: public static IProjectFile[] GetAllAssignedToMeFiles(this IProject project)
    parameters:
    - id: project
      type: Sdl.ProjectApi.IProject
    return:
      type: Sdl.ProjectApi.IProjectFile[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAllAssignedToMeFiles(project As IProject) As IProjectFile()
  overload: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetAllAssignedToMeFiles*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFileTypeManager(Sdl.ProjectApi.IProject)
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFileTypeManager(Sdl.ProjectApi.IProject)
  id: GetFileTypeManager(Sdl.ProjectApi.IProject)
  isExtensionMethod: true
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions
  langs:
  - csharp
  - vb
  name: GetFileTypeManager(IProject)
  nameWithType: ProjectExtensions.GetFileTypeManager(IProject)
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFileTypeManager(Sdl.ProjectApi.IProject)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  syntax:
    content: public static IFileTypeManager GetFileTypeManager(this IProject project)
    parameters:
    - id: project
      type: Sdl.ProjectApi.IProject
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFileTypeManager(project As IProject) As IFileTypeManager
  overload: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFileTypeManager*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFriendlyUserName(Sdl.ProjectApi.IProject,System.String)
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFriendlyUserName(Sdl.ProjectApi.IProject,System.String)
  id: GetFriendlyUserName(Sdl.ProjectApi.IProject,System.String)
  isExtensionMethod: true
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions
  langs:
  - csharp
  - vb
  name: GetFriendlyUserName(IProject, String)
  nameWithType: ProjectExtensions.GetFriendlyUserName(IProject, String)
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFriendlyUserName(Sdl.ProjectApi.IProject, System.String)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  syntax:
    content: public static string GetFriendlyUserName(this IProject project, string userId)
    parameters:
    - id: project
      type: Sdl.ProjectApi.IProject
    - id: userId
      type: System.String
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFriendlyUserName(project As IProject, userId As String) As String
  overload: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFriendlyUserName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFriendlyUserNames(Sdl.ProjectApi.IProject)
  commentId: M:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFriendlyUserNames(Sdl.ProjectApi.IProject)
  id: GetFriendlyUserNames(Sdl.ProjectApi.IProject)
  isExtensionMethod: true
  parent: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions
  langs:
  - csharp
  - vb
  name: GetFriendlyUserNames(IProject)
  nameWithType: ProjectExtensions.GetFriendlyUserNames(IProject)
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFriendlyUserNames(Sdl.ProjectApi.IProject)
  type: Method
  source:
    path: Sdl.TranslationStudio.Api
    isExternal: true
  assemblies:
  - Sdl.TranslationStudio.Api
  namespace: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  syntax:
    content: public static Dictionary<string, string> GetFriendlyUserNames(this IProject project)
    parameters:
    - id: project
      type: Sdl.ProjectApi.IProject
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFriendlyUserNames(project As IProject) As Dictionary(Of String, String)
  overload: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFriendlyUserNames*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  commentId: N:Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  isExternal: true
  name: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  nameWithType: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetAllAssignedToMeFiles*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetAllAssignedToMeFiles
  isExternal: true
  name: GetAllAssignedToMeFiles
  nameWithType: ProjectExtensions.GetAllAssignedToMeFiles
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetAllAssignedToMeFiles
- uid: Sdl.ProjectApi.IProject
  isExternal: true
  name: IProject
  nameWithType: IProject
  fullName: Sdl.ProjectApi.IProject
- uid: Sdl.ProjectApi.IProjectFile[]
  isExternal: true
  name: IProjectFile[]
  nameWithType: IProjectFile[]
  fullName: Sdl.ProjectApi.IProjectFile[]
  nameWithType.vb: IProjectFile()
  fullName.vb: Sdl.ProjectApi.IProjectFile()
  name.vb: IProjectFile()
  spec.csharp:
  - uid: Sdl.ProjectApi.IProjectFile
    name: IProjectFile
    nameWithType: IProjectFile
    fullName: Sdl.ProjectApi.IProjectFile
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.ProjectApi.IProjectFile
    name: IProjectFile
    nameWithType: IProjectFile
    fullName: Sdl.ProjectApi.IProjectFile
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFileTypeManager*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFileTypeManager
  isExternal: true
  name: GetFileTypeManager
  nameWithType: ProjectExtensions.GetFileTypeManager
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFileTypeManager
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
  isExternal: true
  name: IFileTypeManager
  nameWithType: IFileTypeManager
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFriendlyUserName*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFriendlyUserName
  isExternal: true
  name: GetFriendlyUserName
  nameWithType: ProjectExtensions.GetFriendlyUserName
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFriendlyUserName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFriendlyUserNames*
  commentId: Overload:Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFriendlyUserNames
  isExternal: true
  name: GetFriendlyUserNames
  nameWithType: ProjectExtensions.GetFriendlyUserNames
  fullName: Sdl.TranslationStudio.Api.ProjectManagement.Extensions.ProjectExtensions.GetFriendlyUserNames
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
